Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 149 next slice time: 5
dis+11_7_3 on thm.clos_knownProof
% (23572)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 243
% Passive clauses: 3056
% Generated clauses: 28667
% Final active clauses: 225
% Final passive clauses: 2562
% Input formulas: 69
% Initial clauses: 118
% 
% Duplicate literals: 928
% Trivial inequalities: 623
% Fw subsumption resolutions: 3973
% Fw demodulations: 4470
% Bw demodulations: 18
% 
% Simple tautologies: 507
% Equational tautologies: 66
% Forward subsumptions: 14283
% Fw demodulations to eq. taut.: 3
% 
% Binary resolution: 362
% Factoring: 1
% Forward superposition: 9568
% Backward superposition: 8124
% Self superposition: 179
% Equality factoring: 124
% Equality resolution: 70
% 
% Split clauses: 385
% Split components: 771
% SAT solver clauses: 973
% SAT solver unit clauses: 45
% SAT solver binary clauses: 327
% 
% Sat splits: 385
% 
% TWLsolver clauses: 973
% TWLsolver calls for satisfiability: 148
% 
% Memory used [KB]: 13944
% Time elapsed: 0.600 s
% ------------------------------
% ------------------------------
% remaining time: 143 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.clos_knownProof
% (23592)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 231
% Passive clauses: 891
% Generated clauses: 27059
% Final active clauses: 199
% Final passive clauses: 585
% Input formulas: 69
% Initial clauses: 118
% 
% Duplicate literals: 496
% Trivial inequalities: 289
% Fw subsumption resolutions: 3062
% Fw demodulations: 4529
% Bw demodulations: 102
% Condensations: 1044
% Global subsumptions: 13
% 
% Simple tautologies: 307
% Equational tautologies: 43
% Forward subsumptions: 14640
% 
% Binary resolution: 344
% Factoring: 1
% Forward superposition: 6853
% Backward superposition: 8953
% Self superposition: 235
% Equality factoring: 62
% Equality resolution: 49
% 
% Split clauses: 61
% Split components: 123
% SAT solver clauses: 1545
% SAT solver unit clauses: 163
% SAT solver binary clauses: 73
% SAT solver learnt clauses: 26
% 
% Sat splits: 61
% Sat splitting refutations: 8
% 
% TWLsolver clauses: 1493
% TWLsolver calls for satisfiability: 516
% 
% Memory used [KB]: 18677
% Time elapsed: 0.700 s
% ------------------------------
% ------------------------------
% remaining time: 136 next slice time: 103
lrs+11_2_br=off:cond=on:fde=none:gs=on:gsaa=full_model:lwlo=on:nwc=2:sas=minisat:stl=30:ssfp=100000:ssfq=1.4:smm=sco:ssnc=none:sp=occurrence:urr=on_98 on thm.clos_knownProof
% (23608)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 789
% Passive clauses: 9852
% Generated clauses: 227244
% Final active clauses: 224
% Final passive clauses: 1780
% Input formulas: 69
% Initial clauses: 118
% Discarded non-redundant clauses: 2640
% 
% Duplicate literals: 4191
% Trivial inequalities: 1912
% Fw subsumption resolutions: 25085
% Fw demodulations: 39560
% Bw demodulations: 6205
% Condensations: 16901
% Global subsumptions: 548
% 
% Simple tautologies: 1216
% Equational tautologies: 472
% Forward subsumptions: 125995
% Fw demodulations to eq. taut.: 108
% Bw demodulations to eq. taut.: 334
% 
% Unit resulting resolution: 5775
% Factoring: 1
% Forward superposition: 66071
% Backward superposition: 52310
% Self superposition: 893
% Equality factoring: 353
% Equality resolution: 193
% 
% Split clauses: 156
% Split components: 313
% SAT solver clauses: 11663
% SAT solver unit clauses: 853
% SAT solver binary clauses: 1551
% 
% Sat splits: 156
% Sat splitting refutations: 949
% 
% Memory used [KB]: 111810
% Time elapsed: 10.400 s
% ------------------------------
% ------------------------------
% remaining time: 32 next slice time: 32
dis+11_5_fde=none:nwc=1:sas=minisat:sd=1:ss=axioms:st=5.0:sos=all:sdd=large:sser=off:sfr=on:ssfp=100000:ssfq=2.0:ssnc=none_37 on thm.clos_knownProof
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.clos_knownProof
% SZS output start Proof for thm.clos_knownProof
fof(f13239,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f198,f313,f197,f315,f311,f196,f312,f314,f310,f432,f447,f527,f537,f529,f587,f610,f730,f747,f731,f753,f754,f752,f774,f791,f792,f824,f839,f748,f790,f1069,f1090,f1148,f1160,f1167,f1173,f1233,f1248,f1250,f1241,f1253,f1252,f1256,f1304,f1307,f1303,f1331,f1350,f1353,f1349,f1387,f1438,f1306,f1439,f1437,f1471,f1491,f1352,f1492,f1490,f1804,f1815,f1854,f2190,f2219,f2223,f2277,f2526,f3224,f4081,f4086,f4091,f4133,f4188,f4219,f4222,f4218,f4258,f4261,f4422,f749,f4460,f4461,f4515,f4662,f4686,f4883,f4890,f4898,f4905,f5163,f5164,f5169,f5171,f5175,f5178,f5180,f5181,f5182,f5185,f5187,f4986,f5188,f4518,f4516,f5198,f5201,f4160,f1826,f5204,f1825,f1821,f5203,f5207,f5209,f5212,f5215,f5229,f5529,f5760,f5767,f5774,f5781,f5879,f5890,f5897,f5904,f5228,f5933,f5936,f5937,f5940,f5941,f5942,f5944,f5946,f5949,f5950,f5951,f5952,f5859,f5960,f5963,f5966,f5959,f5168,f5174,f4189,f5968,f5208,f5970,f5972,f5980,f5985,f5990,f5993,f456,f5532,f5530,f455,f5197,f6062,f6064,f6069,f6074,f6078,f6081,f6088,f6096,f6144,f6147,f6185,f6238,f4221,f6257,f6284,f6541,f5196,f5194,f5192,f5190,f7941,f7944,f8195,f8196,f8061,f8243,f8248,f8252,f5195,f8258,f8290,f8293,f8296,f8300,f7413,f8298,f8306,f8310,f8314,f8318,f7262,f8316,f7159,f7155,f7154,f7219,f7211,f7203,f7195,f7146,f8327,f5954,f7178,f5956,f4424,f6519,f8334,f6428,f8336,f6292,f450,f8730,f8737,f8745,f8752,f9000,f9006,f9013,f9020,f9075,f9207,f1152,f9643,f5948,f9776,f9777,f9640,f8961,f8323,f8322,f8957,f8956,f8325,f9017,f9010,f9003,f8997,f8241,f8239,f8947,f8324,f8321,f9834,f9839,f8458,f9845,f9848,f9849,f8320,f9851,f9854,f9857,f9858,f8302,f9860,f9861,f9862,f9863,f9864,f9865,f8245,f9870,f5173,f9871,f9874,f9875,f9878,f9881,f454,f452,f10109,f4526,f4525,f10340,f10347,f10354,f10361,f10538,f10544,f10551,f10558,f5883,f5881,f10615,f10748,f1154,f1150,f11556,f11922,f11925,f11928,f11932,f11936,f11941,f11848,f11942,f11849,f11945,f11693,f11946,f11583,f11574,f11943,f11948,f10642,f2274,f10617,f2212,f9907,f750,f7409,f11950,f7258,f11952,f6209,f4184,f11944,f5202,f12033,f12067,f12088,f12100,f12098,f12096,f12094,f12125,f12127,f12126,f1089,f12906,f12907,f11947,f12884,f12909,f12912,f12914,f12917,f3255,f12913,f13230,f13234,f13237])).
fof(f13237,plain,(
  $false | ($spl0 | $spl5 | $spl10)),
  inference(subsumption_resolution,[],[f13236,f299])).
fof(f299,plain,(
  p(s(bool,'T_0'))),
  inference(cnf_transformation,[],[f1])).
fof(f1,axiom,(
  p(s(bool,'T_0'))),
  file('thm.clos_knownProof.subapprox_Int|split|1',aHL_TRUTH)).
fof(f13236,plain,(
  ~p(s(bool,'T_0')) | ($spl0 | $spl5 | $spl10)),
  inference(forward_demodulation,[],[f13235,f4169])).
fof(f4169,plain,(
  s(bool,'T_0') = s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) | $spl0),
  inference(resolution,[],[f310,f252])).
fof(f252,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f167])).
fof(f167,plain,(
  ! [X0] : ((s(bool,'T_0') != s(bool,X0) | p(s(bool,X0))) & (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f119])).
fof(f119,plain,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) <=> p(s(bool,X0)))),
  inference(rectify,[],[f25])).
fof(f25,axiom,(
  ! [X8] : (s(bool,'T_0') = s(bool,X8) <=> p(s(bool,X8)))),
  file('thm.clos_knownProof.subapprox_Int|split|1','thm.bool.EQ_CLAUSES|split|1')).
fof(f13235,plain,(
  ~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))) | ($spl5 | $spl10)),
  inference(forward_demodulation,[],[f13225,f454])).
fof(f13225,plain,(
  ~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7(sK1))))))) | ($spl5 | $spl10)),
  inference(trivial_inequality_removal,[],[f13216])).
fof(f13216,plain,(
  s('type.clos_known.val_approx',sK1) != s('type.clos_known.val_approx',sK1) | ~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7(sK1))))))) | ($spl5 | $spl10)),
  inference(superposition,[],[f4163,f454])).
fof(f4163,plain,(
  ( ! [X3] : (s('type.clos_known.val_approx',sK1) != s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X3))) | ~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X3))))))) ) | $spl5),
  inference(subsumption_resolution,[],[f4159,f246])).
fof(f246,plain,(
  ( ! [X0] : (s('type.clos_known.val_approx','const.clos_known.Impossible_0') != s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X0)))) )),
  inference(cnf_transformation,[],[f114])).
fof(f114,plain,(
  ! [X0] : s('type.clos_known.val_approx','const.clos_known.Impossible_0') != s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X0)))),
  inference(flattening,[],[f113])).
fof(f113,plain,(
  ! [X0] : ~s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X0)))),
  inference(rectify,[],[f53])).
fof(f53,axiom,(
  ! [X7] : ~s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X7)))),
  file('thm.clos_knownProof.subapprox_Int|split|1','thm.clos_known.val_approx_distinct|split|8')).
fof(f4159,plain,(
  ( ! [X3] : (s('type.clos_known.val_approx',sK1) != s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X3))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))) | ~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X3))))))) ) | $spl5),
  inference(superposition,[],[f315,f300])).
fof(f300,plain,(
  ( ! [X0,X1] : (s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X1) | s('type.clos_known.val_approx',X1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X0))) | ~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',X1),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X0))))))) )),
  inference(cnf_transformation,[],[f193])).
fof(f193,plain,(
  ! [X0,X1] : ((~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',X1),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X0)))))) | s('type.clos_known.val_approx',X1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X0))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X1)) & ((s('type.clos_known.val_approx',X1) != s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X0))) & s('type.clos_known.val_approx','const.clos_known.Impossible_0') != s('type.clos_known.val_approx',X1)) | p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',X1),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X0))))))))),
  inference(flattening,[],[f192])).
fof(f192,plain,(
  ! [X0,X1] : ((~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',X1),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X0)))))) | (s('type.clos_known.val_approx',X1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X0))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X1))) & ((s('type.clos_known.val_approx',X1) != s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X0))) & s('type.clos_known.val_approx','const.clos_known.Impossible_0') != s('type.clos_known.val_approx',X1)) | p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',X1),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X0))))))))),
  inference(nnf_transformation,[],[f142])).
fof(f142,plain,(
  ! [X0,X1] : (p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',X1),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X0)))))) <=> (s('type.clos_known.val_approx',X1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X0))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X1)))),
  inference(rectify,[],[f7])).
fof(f7,axiom,(
  ! [X6,X7] : (p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',X7),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X6)))))) <=> (s('type.clos_known.val_approx',X7) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X6))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X7)))),
  file('thm.clos_knownProof.subapprox_Int|split|1','thm.clos_knownProof.subapprox_Int|split|0')).
fof(f13234,plain,(
  $false | ($spl0 | $spl5 | $spl28)),
  inference(subsumption_resolution,[],[f13233,f299])).
fof(f13233,plain,(
  ~p(s(bool,'T_0')) | ($spl0 | $spl5 | $spl28)),
  inference(forward_demodulation,[],[f13232,f4169])).
fof(f13232,plain,(
  ~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))) | ($spl5 | $spl28)),
  inference(forward_demodulation,[],[f13226,f1150])).
fof(f13226,plain,(
  ~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))))))))) | ($spl5 | $spl28)),
  inference(trivial_inequality_removal,[],[f13215])).
fof(f13215,plain,(
  s('type.clos_known.val_approx',sK1) != s('type.clos_known.val_approx',sK1) | ~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))))))))) | ($spl5 | $spl28)),
  inference(superposition,[],[f4163,f1150])).
fof(f13230,plain,(
  $false | ($spl0 | $spl3 | $spl5 | $spl10)),
  inference(subsumption_resolution,[],[f13229,f299])).
fof(f13229,plain,(
  ~p(s(bool,'T_0')) | ($spl0 | $spl3 | $spl5 | $spl10)),
  inference(forward_demodulation,[],[f13228,f4169])).
fof(f13228,plain,(
  ~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))) | ($spl3 | $spl5 | $spl10)),
  inference(forward_demodulation,[],[f13227,f10006])).
fof(f10006,plain,(
  s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.Int_1'(s('type.integer.int',sK7(sK1))))))) | ($spl3 | $spl10)),
  inference(forward_demodulation,[],[f10005,f454])).
fof(f10005,plain,(
  s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7(sK1)))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.Int_1'(s('type.integer.int',sK7(sK1))))))) | ($spl3 | $spl10)),
  inference(subsumption_resolution,[],[f10004,f229])).
fof(f229,plain,(
  ( ! [X2,X0,X1] : (s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X2))) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X1),s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f98])).
fof(f98,plain,(
  ! [X0,X1,X2] : s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X2))) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X1),s('type.num.num',X0)))),
  inference(flattening,[],[f97])).
fof(f97,plain,(
  ! [X0,X1,X2] : ~s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X2))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X1),s('type.num.num',X0)))),
  inference(rectify,[],[f62])).
fof(f62,axiom,(
  ! [X44,X50,X7] : ~s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X7))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X50),s('type.num.num',X44)))),
  file('thm.clos_knownProof.subapprox_Int|split|1','thm.clos_known.val_approx_distinct|split|1')).
fof(f10004,plain,(
  s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7(sK1)))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.Int_1'(s('type.integer.int',sK7(sK1))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7(sK1)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.Int_1'(s('type.integer.int',sK7(sK1))))),s('type.num.num',sK5('const.clos_known.Int_1'(s('type.integer.int',sK7(sK1))))))) | ($spl3 | $spl10)),
  inference(subsumption_resolution,[],[f10003,f230])).
fof(f230,plain,(
  ( ! [X0,X1] : (s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X0))) != s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X1)))) )),
  inference(cnf_transformation,[],[f100])).
fof(f100,plain,(
  ! [X0,X1] : s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X0))) != s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X1)))),
  inference(flattening,[],[f99])).
fof(f99,plain,(
  ! [X0,X1] : ~s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X0))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X1)))),
  inference(rectify,[],[f54])).
fof(f54,axiom,(
  ! [X51,X7] : ~s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X51))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X7)))),
  file('thm.clos_knownProof.subapprox_Int|split|1','thm.clos_known.val_approx_distinct|split|4')).
fof(f10003,plain,(
  s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7(sK1)))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.Int_1'(s('type.integer.int',sK7(sK1))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7(sK1)))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.Int_1'(s('type.integer.int',sK7(sK1))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7(sK1)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.Int_1'(s('type.integer.int',sK7(sK1))))),s('type.num.num',sK5('const.clos_known.Int_1'(s('type.integer.int',sK7(sK1))))))) | ($spl3 | $spl10)),
  inference(subsumption_resolution,[],[f10002,f246])).
fof(f10002,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7(sK1)))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7(sK1)))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.Int_1'(s('type.integer.int',sK7(sK1))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7(sK1)))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.Int_1'(s('type.integer.int',sK7(sK1))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7(sK1)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.Int_1'(s('type.integer.int',sK7(sK1))))),s('type.num.num',sK5('const.clos_known.Int_1'(s('type.integer.int',sK7(sK1))))))) | ($spl3 | $spl10)),
  inference(subsumption_resolution,[],[f9947,f313])).
fof(f9947,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK1) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7(sK1)))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7(sK1)))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.Int_1'(s('type.integer.int',sK7(sK1))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7(sK1)))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.Int_1'(s('type.integer.int',sK7(sK1))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7(sK1)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.Int_1'(s('type.integer.int',sK7(sK1))))),s('type.num.num',sK5('const.clos_known.Int_1'(s('type.integer.int',sK7(sK1))))))) | $spl10),
  inference(superposition,[],[f454,f217])).
fof(f217,plain,(
  ( ! [X0] : (s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X0) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X0) | s('type.clos_known.val_approx',X0) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7(X0)))) | s('type.clos_known.val_approx',X0) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6(X0)))) | s('type.clos_known.val_approx',X0) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(X0)),s('type.num.num',sK5(X0))))) )),
  inference(cnf_transformation,[],[f158])).
fof(f158,plain,(
  ! [X0] : (s('type.clos_known.val_approx',X0) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(X0)),s('type.num.num',sK5(X0)))) | s('type.clos_known.val_approx',X0) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6(X0)))) | s('type.clos_known.val_approx',X0) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7(X0)))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X0) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X0))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK4,sK5,sK6,sK7])],[f88])).
fof(f88,plain,(
  ! [X0] : (? [X3,X4] : s('type.clos_known.val_approx',X0) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X3),s('type.num.num',X4))) | ? [X2] : s('type.clos_known.val_approx',X0) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X2))) | ? [X1] : s('type.clos_known.val_approx',X0) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X1))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X0) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X0))),
  inference(rectify,[],[f36])).
fof(f36,axiom,(
  ! [X40] : (? [X41,X42] : s('type.clos_known.val_approx',X40) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X41),s('type.num.num',X42))) | ? [X43] : s('type.clos_known.val_approx',X40) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X43))) | ? [X6] : s('type.clos_known.val_approx',X40) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X6))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X40) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X40))),
  file('thm.clos_knownProof.subapprox_Int|split|1','thm.clos_known.val_approx_nchotomy')).
fof(f13227,plain,(
  ~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.Int_1'(s('type.integer.int',sK7(sK1)))))))))) | ($spl3 | $spl5 | $spl10)),
  inference(trivial_inequality_removal,[],[f13213])).
fof(f13213,plain,(
  s('type.clos_known.val_approx',sK1) != s('type.clos_known.val_approx',sK1) | ~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.Int_1'(s('type.integer.int',sK7(sK1)))))))))) | ($spl3 | $spl5 | $spl10)),
  inference(superposition,[],[f4163,f10006])).
fof(f12913,plain,(
  ( ! [X23] : (s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X23))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.Int_1'(s('type.integer.int',X23))))))) ) | $spl152),
  inference(cnf_transformation,[],[f12913_D])).
fof(f12913_D,plain,(
  ( ! [X23] : (s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X23))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.Int_1'(s('type.integer.int',X23))))))) ) <=> ~$spl152),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl152])])).
fof(f3255,plain,(
  ( ! [X2] : (~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X2))),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))))) ) | $spl54),
  inference(cnf_transformation,[],[f3255_D])).
fof(f3255_D,plain,(
  ( ! [X2] : (~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X2))),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))))) ) <=> ~$spl54),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl54])])).
fof(f12917,plain,(
  ( ! [X26,X25] : (~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X26))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X25))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.Int_1'(s('type.integer.int',X25))))))) ) | ($spl3 | $spl10)),
  inference(subsumption_resolution,[],[f12916,f229])).
fof(f12916,plain,(
  ( ! [X26,X25] : (~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X26))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X25))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.Int_1'(s('type.integer.int',X25)))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X25))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.Int_1'(s('type.integer.int',X25)))),s('type.num.num',sK5('const.clos_known.Int_1'(s('type.integer.int',X25))))))) ) | ($spl3 | $spl10)),
  inference(subsumption_resolution,[],[f12915,f230])).
fof(f12915,plain,(
  ( ! [X26,X25] : (~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X26))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X25))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.Int_1'(s('type.integer.int',X25)))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X25))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.Int_1'(s('type.integer.int',X25)))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X25))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.Int_1'(s('type.integer.int',X25)))),s('type.num.num',sK5('const.clos_known.Int_1'(s('type.integer.int',X25))))))) ) | ($spl3 | $spl10)),
  inference(subsumption_resolution,[],[f12886,f216])).
fof(f216,plain,(
  ( ! [X0] : (s('type.clos_known.val_approx','const.clos_known.Other_0') != s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X0)))) )),
  inference(cnf_transformation,[],[f87])).
fof(f87,plain,(
  ! [X0] : s('type.clos_known.val_approx','const.clos_known.Other_0') != s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X0)))),
  inference(flattening,[],[f86])).
fof(f86,plain,(
  ! [X0] : ~s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X0)))),
  inference(rectify,[],[f50])).
fof(f50,axiom,(
  ! [X7] : ~s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X7)))),
  file('thm.clos_knownProof.subapprox_Int|split|1','thm.clos_known.val_approx_distinct|split|7')).
fof(f12886,plain,(
  ( ! [X26,X25] : (~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X26))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X25))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X25))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.Int_1'(s('type.integer.int',X25)))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X25))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.Int_1'(s('type.integer.int',X25)))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X25))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.Int_1'(s('type.integer.int',X25)))),s('type.num.num',sK5('const.clos_known.Int_1'(s('type.integer.int',X25))))))) ) | ($spl3 | $spl10)),
  inference(superposition,[],[f11484,f217])).
fof(f11484,plain,(
  ( ! [X8,X9] : (~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X8))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X9))))))) ) | ($spl3 | $spl10)),
  inference(subsumption_resolution,[],[f11483,f313])).
fof(f11483,plain,(
  ( ! [X8,X9] : (s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK1) | ~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X8))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X9))))))) ) | $spl10),
  inference(forward_demodulation,[],[f11482,f258])).
fof(f258,plain,(
  ( ! [X0] : (s('type.clos_known.val_approx',X0) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X0)))) )),
  inference(cnf_transformation,[],[f123])).
fof(f123,plain,(
  ! [X0] : s('type.clos_known.val_approx',X0) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X0)))),
  inference(rectify,[],[f11])).
fof(f11,axiom,(
  ! [X11] : s('type.clos_known.val_approx',X11) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X11)))),
  file('thm.clos_knownProof.subapprox_Int|split|1','thm.clos_known.merge_def|split|0')).
fof(f11482,plain,(
  ( ! [X8,X9] : (s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',sK1))) | ~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X8))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X9))))))) ) | $spl10),
  inference(subsumption_resolution,[],[f11446,f230])).
fof(f11446,plain,(
  ( ! [X8,X9] : (s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',sK1))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X9))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X8))) | ~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X8))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X9))))))) ) | $spl10),
  inference(superposition,[],[f9952,f300])).
fof(f9952,plain,(
  ( ! [X5] : (s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X5))),s('type.clos_known.val_approx',sK1)))) ) | $spl10),
  inference(superposition,[],[f211,f454])).
fof(f211,plain,(
  ( ! [X0,X1] : (s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X0))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X1)))))) )),
  inference(cnf_transformation,[],[f80])).
fof(f80,plain,(
  ! [X0,X1] : s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X0))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X1)))))),
  inference(rectify,[],[f38])).
fof(f38,axiom,(
  ! [X27,X46] : s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X27))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X46)))))),
  file('thm.clos_knownProof.subapprox_Int|split|1','thm.clos_known.merge_def|split|12')).
fof(f12914,plain,(
  ( ! [X24] : (~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X24))),s('type.clos_known.val_approx','const.clos_known.Other_0'))))) ) | $spl154),
  inference(cnf_transformation,[],[f12914_D])).
fof(f12914_D,plain,(
  ( ! [X24] : (~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X24))),s('type.clos_known.val_approx','const.clos_known.Other_0'))))) ) <=> ~$spl154),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl154])])).
fof(f12912,plain,(
  ( ! [X24,X23] : (~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X24))),s('type.clos_known.val_approx','const.clos_known.Other_0')))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X23))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.Int_1'(s('type.integer.int',X23))))))) ) | ($spl3 | $spl10)),
  inference(subsumption_resolution,[],[f12911,f229])).
fof(f12911,plain,(
  ( ! [X24,X23] : (~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X24))),s('type.clos_known.val_approx','const.clos_known.Other_0')))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X23))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.Int_1'(s('type.integer.int',X23)))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X23))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.Int_1'(s('type.integer.int',X23)))),s('type.num.num',sK5('const.clos_known.Int_1'(s('type.integer.int',X23))))))) ) | ($spl3 | $spl10)),
  inference(subsumption_resolution,[],[f12910,f230])).
fof(f12910,plain,(
  ( ! [X24,X23] : (~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X24))),s('type.clos_known.val_approx','const.clos_known.Other_0')))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X23))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.Int_1'(s('type.integer.int',X23)))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X23))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.Int_1'(s('type.integer.int',X23)))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X23))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.Int_1'(s('type.integer.int',X23)))),s('type.num.num',sK5('const.clos_known.Int_1'(s('type.integer.int',X23))))))) ) | ($spl3 | $spl10)),
  inference(subsumption_resolution,[],[f12885,f246])).
fof(f12885,plain,(
  ( ! [X24,X23] : (~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X24))),s('type.clos_known.val_approx','const.clos_known.Other_0')))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X23))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X23))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.Int_1'(s('type.integer.int',X23)))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X23))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.Int_1'(s('type.integer.int',X23)))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X23))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.Int_1'(s('type.integer.int',X23)))),s('type.num.num',sK5('const.clos_known.Int_1'(s('type.integer.int',X23))))))) ) | ($spl3 | $spl10)),
  inference(superposition,[],[f11484,f217])).
fof(f12909,plain,(
  ( ! [X22,X20] : (s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X20))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X22))) | ~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X20))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X22))))))) ) | $spl150),
  inference(cnf_transformation,[],[f12909_D])).
fof(f12909_D,plain,(
  ( ! [X22,X20] : (s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X20))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X22))) | ~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X20))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X22))))))) ) <=> ~$spl150),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl150])])).
fof(f12884,plain,(
  ( ! [X21,X22,X20] : (~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X21))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X20))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X22))) | ~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X20))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X22))))))) ) | ($spl3 | $spl10)),
  inference(superposition,[],[f11484,f300])).
fof(f11947,plain,(
  ( ! [X11] : (s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X11))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X11))))))) ) | $spl130),
  inference(cnf_transformation,[],[f11947_D])).
fof(f11947_D,plain,(
  ( ! [X11] : (s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X11))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X11))))))) ) <=> ~$spl130),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl130])])).
fof(f12907,plain,(
  ( ! [X19] : (~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X19))))))) ) | $spl148),
  inference(cnf_transformation,[],[f12907_D])).
fof(f12907_D,plain,(
  ( ! [X19] : (~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X19))))))) ) <=> ~$spl148),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl148])])).
fof(f12906,plain,(
  ( ! [X19,X18] : (~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X19)))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X18))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X18))))))) ) | ($spl3 | $spl10)),
  inference(subsumption_resolution,[],[f12905,f228])).
fof(f228,plain,(
  ( ! [X2,X0,X1] : (s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X2))) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X1),s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f96])).
fof(f96,plain,(
  ! [X0,X1,X2] : s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X2))) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X1),s('type.num.num',X0)))),
  inference(flattening,[],[f95])).
fof(f95,plain,(
  ! [X0,X1,X2] : ~s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X2))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X1),s('type.num.num',X0)))),
  inference(rectify,[],[f58])).
fof(f58,axiom,(
  ! [X44,X50,X7] : ~s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X7))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X50),s('type.num.num',X44)))),
  file('thm.clos_knownProof.subapprox_Int|split|1','thm.clos_known.val_approx_distinct|split|0')).
fof(f12905,plain,(
  ( ! [X19,X18] : (~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X19)))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X18))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X18)))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X18))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X18)))),s('type.num.num',sK5('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X18))))))) ) | ($spl3 | $spl10)),
  inference(subsumption_resolution,[],[f12904,f230])).
fof(f12904,plain,(
  ( ! [X19,X18] : (~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X19)))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X18))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X18)))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X18))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X18)))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X18))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X18)))),s('type.num.num',sK5('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X18))))))) ) | ($spl3 | $spl10)),
  inference(subsumption_resolution,[],[f12869,f215])).
fof(f215,plain,(
  ( ! [X0] : (s('type.clos_known.val_approx','const.clos_known.Other_0') != s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X0)))) )),
  inference(cnf_transformation,[],[f85])).
fof(f85,plain,(
  ! [X0] : s('type.clos_known.val_approx','const.clos_known.Other_0') != s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X0)))),
  inference(flattening,[],[f84])).
fof(f84,plain,(
  ! [X0] : ~s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X0)))),
  inference(rectify,[],[f51])).
fof(f51,axiom,(
  ! [X7] : ~s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X7)))),
  file('thm.clos_knownProof.subapprox_Int|split|1','thm.clos_known.val_approx_distinct|split|5')).
fof(f12869,plain,(
  ( ! [X19,X18] : (~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X19)))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X18))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X18))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X18)))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X18))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X18)))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X18))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X18)))),s('type.num.num',sK5('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X18))))))) ) | ($spl3 | $spl10)),
  inference(superposition,[],[f11484,f217])).
fof(f1089,plain,(
  p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx','const.clos_known.Other_0')))) | $spl26),
  inference(cnf_transformation,[],[f1089_D])).
fof(f1089_D,plain,(
  p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx','const.clos_known.Other_0')))) <=> ~$spl26),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl26])])).
fof(f12126,plain,(
  ( ! [X0] : (s(bool,'F_0') != s(bool,X0)) ) | $spl146),
  inference(cnf_transformation,[],[f12126_D])).
fof(f12126_D,plain,(
  ( ! [X0] : (s(bool,'F_0') != s(bool,X0)) ) <=> ~$spl146),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl146])])).
fof(f12127,plain,(
  ( ! [X1] : (s(bool,'F_0') != s(bool,X1) | p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx','const.clos_known.Other_0'))))) ) | $spl51),
  inference(subsumption_resolution,[],[f12112,f247])).
fof(f247,plain,(
  ( ! [X0] : (~p(s(bool,X0)) | s(bool,'F_0') != s(bool,X0)) )),
  inference(cnf_transformation,[],[f165])).
fof(f165,plain,(
  ! [X0] : ((s(bool,'F_0') != s(bool,X0) | ~p(s(bool,X0))) & (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f116])).
fof(f116,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(flattening,[],[f115])).
fof(f115,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(rectify,[],[f17])).
fof(f17,axiom,(
  ! [X8] : (s(bool,'F_0') = s(bool,X8) <=> ~p(s(bool,X8)))),
  file('thm.clos_knownProof.subapprox_Int|split|1','thm.bool.EQ_CLAUSES|split|2')).
fof(f12112,plain,(
  ( ! [X1] : (s(bool,'F_0') != s(bool,X1) | p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx','const.clos_known.Other_0')))) | p(s(bool,X1))) ) | $spl51),
  inference(superposition,[],[f2212,f236])).
fof(f236,plain,(
  ( ! [X0,X1] : (s(bool,X0) = s(bool,X1) | p(s(bool,X1)) | p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f147])).
fof(f147,plain,(
  ! [X0,X1] : ((p(s(bool,X0)) & ~p(s(bool,X1))) | (p(s(bool,X1)) & ~p(s(bool,X0))) | s(bool,X0) = s(bool,X1))),
  inference(flattening,[],[f146])).
fof(f146,plain,(
  ! [X0,X1] : ((p(s(bool,X0)) & ~p(s(bool,X1))) | ((p(s(bool,X1)) & ~p(s(bool,X0))) | s(bool,X0) = s(bool,X1)))),
  inference(ennf_transformation,[],[f105])).
fof(f105,plain,(
  ! [X0,X1] : ((p(s(bool,X0)) => p(s(bool,X1))) => ((p(s(bool,X1)) => p(s(bool,X0))) => s(bool,X0) = s(bool,X1)))),
  inference(rectify,[],[f22])).
fof(f22,axiom,(
  ! [X23,X24] : ((p(s(bool,X23)) => p(s(bool,X24))) => ((p(s(bool,X24)) => p(s(bool,X23))) => s(bool,X23) = s(bool,X24)))),
  file('thm.clos_knownProof.subapprox_Int|split|1','thm.bool.IMP_ANTISYM_AX')).
fof(f12125,plain,(
  ( ! [X0] : (s(bool,'F_0') != s(bool,X0) | p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx','const.clos_known.Other_0'))))) ) | $spl51),
  inference(subsumption_resolution,[],[f12111,f247])).
fof(f12111,plain,(
  ( ! [X0] : (s(bool,'F_0') != s(bool,X0) | p(s(bool,X0)) | p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx','const.clos_known.Other_0'))))) ) | $spl51),
  inference(superposition,[],[f2212,f236])).
fof(f12094,plain,(
  s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx',sK1)))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx',sK1)))))) | $spl138),
  inference(cnf_transformation,[],[f12094_D])).
fof(f12094_D,plain,(
  s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx',sK1)))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx',sK1)))))) <=> ~$spl138),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl138])])).
fof(f12096,plain,(
  s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx',sK1)))))) | $spl140),
  inference(cnf_transformation,[],[f12096_D])).
fof(f12096_D,plain,(
  s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx',sK1)))))) <=> ~$spl140),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl140])])).
fof(f12098,plain,(
  s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx',sK1)))))) | $spl142),
  inference(cnf_transformation,[],[f12098_D])).
fof(f12098_D,plain,(
  s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx',sK1)))))) <=> ~$spl142),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl142])])).
fof(f12100,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx',sK1))) | $spl144),
  inference(cnf_transformation,[],[f12100_D])).
fof(f12100_D,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx',sK1))) <=> ~$spl144),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl144])])).
fof(f12088,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx',sK1))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx',sK1)))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx',sK1)))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx',sK1)))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx',sK1)))))) | $spl35),
  inference(trivial_inequality_removal,[],[f12087])).
fof(f12087,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') != s('type.clos_known.val_approx','const.clos_known.Impossible_0') | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx',sK1))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx',sK1)))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx',sK1)))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx',sK1)))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx',sK1)))))) | $spl35),
  inference(superposition,[],[f1251,f217])).
fof(f1251,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') != s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx',sK1))) | $spl35),
  inference(cnf_transformation,[],[f1251_D])).
fof(f1251_D,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') != s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx',sK1))) <=> ~$spl35),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl35])])).
fof(f12067,plain,(
  $false | ($spl10 | $spl125)),
  inference(subsumption_resolution,[],[f11943,f11846])).
fof(f11846,plain,(
  p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',sK1)))) | $spl10),
  inference(equality_resolution,[],[f9967])).
fof(f9967,plain,(
  ( ! [X18] : (s('type.clos_known.val_approx','const.clos_known.Impossible_0') != s('type.clos_known.val_approx',X18) | p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',X18),s('type.clos_known.val_approx',sK1))))) ) | $spl10),
  inference(superposition,[],[f302,f454])).
fof(f302,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',X1),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X0)))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') != s('type.clos_known.val_approx',X1)) )),
  inference(cnf_transformation,[],[f193])).
fof(f12033,plain,(
  $false | ($spl10 | $spl89)),
  inference(subsumption_resolution,[],[f11912,f5203])).
fof(f11912,plain,(
  p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx',sK1)))) | $spl10),
  inference(equality_resolution,[],[f10014])).
fof(f10014,plain,(
  ( ! [X16] : (s('type.clos_known.val_approx',sK1) != s('type.clos_known.val_approx',X16) | p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',X16),s('type.clos_known.val_approx',sK1))))) ) | $spl10),
  inference(forward_demodulation,[],[f9965,f454])).
fof(f9965,plain,(
  ( ! [X16] : (p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',X16),s('type.clos_known.val_approx',sK1)))) | s('type.clos_known.val_approx',X16) != s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7(sK1))))) ) | $spl10),
  inference(superposition,[],[f301,f454])).
fof(f301,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',X1),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X0)))))) | s('type.clos_known.val_approx',X1) != s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X0)))) )),
  inference(cnf_transformation,[],[f193])).
fof(f5202,plain,(
  ( ! [X4] : (s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X4))) | ~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X4))))))) ) | $spl86),
  inference(cnf_transformation,[],[f5202_D])).
fof(f5202_D,plain,(
  ( ! [X4] : (s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X4))) | ~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X4))))))) ) <=> ~$spl86),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl86])])).
fof(f11944,plain,(
  p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',sK1)))) | $spl124),
  inference(cnf_transformation,[],[f11944_D])).
fof(f11944_D,plain,(
  p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',sK1)))) <=> ~$spl124),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl124])])).
fof(f4184,plain,(
  ( ! [X4] : (p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',sK1)))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X4))) | ~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X4))))))) ) | $spl0),
  inference(superposition,[],[f310,f300])).
fof(f6209,plain,(
  ( ! [X4] : (p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',sK1)))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X4))) | ~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X4))))))) ) | $spl0),
  inference(superposition,[],[f310,f300])).
fof(f11952,plain,(
  s(bool,'F_0') != s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',sK1))) | $spl137),
  inference(cnf_transformation,[],[f11952_D])).
fof(f11952_D,plain,(
  s(bool,'F_0') != s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',sK1))) <=> ~$spl137),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl137])])).
fof(f7258,plain,(
  ( ! [X4] : (s(bool,'F_0') != s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',sK1))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X4))) | ~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X4))))))) ) | $spl0),
  inference(superposition,[],[f4167,f300])).
fof(f4167,plain,(
  s(bool,'F_0') != s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) | $spl0),
  inference(resolution,[],[f310,f247])).
fof(f11950,plain,(
  s(bool,'T_0') = s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',sK1))) | $spl134),
  inference(cnf_transformation,[],[f11950_D])).
fof(f11950_D,plain,(
  s(bool,'T_0') = s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',sK1))) <=> ~$spl134),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl134])])).
fof(f7409,plain,(
  ( ! [X4] : (s(bool,'T_0') = s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',sK1))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X4))) | ~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X4))))))) ) | $spl0),
  inference(superposition,[],[f4169,f300])).
fof(f750,plain,(
  ( ! [X1] : (~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X1)))))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X1)))) ) | $spl20),
  inference(cnf_transformation,[],[f750_D])).
fof(f750_D,plain,(
  ( ! [X1] : (~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X1)))))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X1)))) ) <=> ~$spl20),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl20])])).
fof(f9907,plain,(
  ( ! [X1] : (p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx','const.clos_known.Other_0')))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X1))) | ~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X1))))))) ) | $spl10),
  inference(superposition,[],[f4757,f300])).
fof(f4757,plain,(
  p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Other_0')))) | $spl10),
  inference(trivial_inequality_removal,[],[f4734])).
fof(f4734,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') != s('type.clos_known.val_approx','const.clos_known.Other_0') | p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Other_0')))) | $spl10),
  inference(superposition,[],[f304,f2323])).
fof(f2323,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Other_0'))) | $spl10),
  inference(superposition,[],[f221,f454])).
fof(f221,plain,(
  ( ! [X0] : (s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X0))),s('type.clos_known.val_approx','const.clos_known.Other_0')))) )),
  inference(cnf_transformation,[],[f92])).
fof(f92,plain,(
  ! [X0] : s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X0))),s('type.clos_known.val_approx','const.clos_known.Other_0')))),
  inference(rectify,[],[f20])).
fof(f20,axiom,(
  ! [X22] : s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X22))),s('type.clos_known.val_approx','const.clos_known.Other_0')))),
  file('thm.clos_knownProof.subapprox_Int|split|1','thm.clos_known.merge_def|split|16')).
fof(f304,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',X0),s('type.clos_known.val_approx',X1)))) | s('type.clos_known.val_approx',X1) != s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X0),s('type.clos_known.val_approx',X1)))) )),
  inference(cnf_transformation,[],[f194])).
fof(f194,plain,(
  ! [X0,X1] : ((~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',X0),s('type.clos_known.val_approx',X1)))) | s('type.clos_known.val_approx',X1) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X0),s('type.clos_known.val_approx',X1)))) & (s('type.clos_known.val_approx',X1) != s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X0),s('type.clos_known.val_approx',X1))) | p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',X0),s('type.clos_known.val_approx',X1))))))),
  inference(nnf_transformation,[],[f143])).
fof(f143,plain,(
  ! [X0,X1] : (p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',X0),s('type.clos_known.val_approx',X1)))) <=> s('type.clos_known.val_approx',X1) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X0),s('type.clos_known.val_approx',X1))))),
  inference(rectify,[],[f37])).
fof(f37,axiom,(
  ! [X44,X45] : (p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',X44),s('type.clos_known.val_approx',X45)))) <=> s('type.clos_known.val_approx',X45) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X44),s('type.clos_known.val_approx',X45))))),
  file('thm.clos_knownProof.subapprox_Int|split|1','thm.clos_knownProof.subapprox_def')).
fof(f2212,plain,(
  s(bool,'F_0') != s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx','const.clos_known.Other_0'))) | $spl51),
  inference(cnf_transformation,[],[f2212_D])).
fof(f2212_D,plain,(
  s(bool,'F_0') != s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx','const.clos_known.Other_0'))) <=> ~$spl51),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl51])])).
fof(f10617,plain,(
  ( ! [X1] : (s(bool,'F_0') != s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx','const.clos_known.Other_0'))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X1))) | ~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X1))))))) ) | $spl10),
  inference(superposition,[],[f9898,f300])).
fof(f9898,plain,(
  s(bool,'F_0') != s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Other_0'))) | $spl10),
  inference(resolution,[],[f4757,f247])).
fof(f2274,plain,(
  s(bool,'T_0') = s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx','const.clos_known.Other_0'))) | $spl52),
  inference(cnf_transformation,[],[f2274_D])).
fof(f2274_D,plain,(
  s(bool,'T_0') = s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx','const.clos_known.Other_0'))) <=> ~$spl52),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl52])])).
fof(f10642,plain,(
  ( ! [X1] : (s(bool,'T_0') = s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx','const.clos_known.Other_0'))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X1))) | ~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X1))))))) ) | $spl10),
  inference(superposition,[],[f9900,f300])).
fof(f9900,plain,(
  s(bool,'T_0') = s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Other_0'))) | $spl10),
  inference(resolution,[],[f4757,f252])).
fof(f11948,plain,(
  ( ! [X8,X9] : (~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X8))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X9))))))) ) | $spl132),
  inference(cnf_transformation,[],[f11948_D])).
fof(f11948_D,plain,(
  ( ! [X8,X9] : (~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X8))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X9))))))) ) <=> ~$spl132),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl132])])).
fof(f11943,plain,(
  ~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',sK1)))) | $spl125),
  inference(cnf_transformation,[],[f11943_D])).
fof(f11943_D,plain,(
  ~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',sK1)))) <=> ~$spl125),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl125])])).
fof(f11574,plain,(
  ( ! [X8,X9] : (~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',sK1)))) | ~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X8))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X9))))))) ) | ($spl3 | $spl10)),
  inference(subsumption_resolution,[],[f11552,f230])).
fof(f11552,plain,(
  ( ! [X8,X9] : (~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',sK1)))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X9))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X8))) | ~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X8))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X9))))))) ) | ($spl3 | $spl10)),
  inference(superposition,[],[f11492,f300])).
fof(f11492,plain,(
  ( ! [X1] : (~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X1))),s('type.clos_known.val_approx',sK1))))) ) | ($spl3 | $spl10)),
  inference(subsumption_resolution,[],[f11453,f313])).
fof(f11453,plain,(
  ( ! [X1] : (s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK1) | ~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X1))),s('type.clos_known.val_approx',sK1))))) ) | $spl10),
  inference(superposition,[],[f9952,f303])).
fof(f303,plain,(
  ( ! [X0,X1] : (s('type.clos_known.val_approx',X1) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X0),s('type.clos_known.val_approx',X1))) | ~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',X0),s('type.clos_known.val_approx',X1))))) )),
  inference(cnf_transformation,[],[f194])).
fof(f11583,plain,(
  ( ! [X11] : (~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',sK1)))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X11))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X11))))))) ) | ($spl3 | $spl10)),
  inference(subsumption_resolution,[],[f11582,f228])).
fof(f11582,plain,(
  ( ! [X11] : (~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',sK1)))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X11))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X11)))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X11))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X11)))),s('type.num.num',sK5('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X11))))))) ) | ($spl3 | $spl10)),
  inference(subsumption_resolution,[],[f11581,f230])).
fof(f11581,plain,(
  ( ! [X11] : (~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',sK1)))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X11))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X11)))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X11))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X11)))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X11))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X11)))),s('type.num.num',sK5('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X11))))))) ) | ($spl3 | $spl10)),
  inference(subsumption_resolution,[],[f11554,f215])).
fof(f11554,plain,(
  ( ! [X11] : (~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',sK1)))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X11))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X11))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X11)))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X11))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X11)))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X11))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X11)))),s('type.num.num',sK5('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X11))))))) ) | ($spl3 | $spl10)),
  inference(superposition,[],[f11492,f217])).
fof(f11946,plain,(
  ( ! [X2] : (~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X2))))))) ) | $spl128),
  inference(cnf_transformation,[],[f11946_D])).
fof(f11946_D,plain,(
  ( ! [X2] : (~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X2))))))) ) <=> ~$spl128),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl128])])).
fof(f11693,plain,(
  ( ! [X2,X3] : (~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X2)))))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X3))) | ~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X3))))))) ) | $spl10),
  inference(superposition,[],[f11639,f300])).
fof(f11639,plain,(
  ( ! [X1] : (~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X1))))))) ) | $spl10),
  inference(subsumption_resolution,[],[f11602,f215])).
fof(f11602,plain,(
  ( ! [X1] : (s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X1))) | ~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X1))))))) ) | $spl10),
  inference(superposition,[],[f9953,f303])).
fof(f9953,plain,(
  ( ! [X6] : (s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X6)))))) ) | $spl10),
  inference(superposition,[],[f212,f454])).
fof(f212,plain,(
  ( ! [X0,X1] : (s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X1))),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X0)))))) )),
  inference(cnf_transformation,[],[f81])).
fof(f81,plain,(
  ! [X0,X1] : s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X1))),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X0)))))),
  inference(rectify,[],[f30])).
fof(f30,axiom,(
  ! [X32,X22] : s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X22))),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X32)))))),
  file('thm.clos_knownProof.subapprox_Int|split|1','thm.clos_known.merge_def|split|15')).
fof(f11945,plain,(
  ( ! [X17,X16] : (s('type.clos_known.val_approx',X16) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X17))) | ~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',X16),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X17))))))) ) | $spl126),
  inference(cnf_transformation,[],[f11945_D])).
fof(f11945_D,plain,(
  ( ! [X17,X16] : (s('type.clos_known.val_approx',X16) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X17))) | ~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',X16),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X17))))))) ) <=> ~$spl126),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl126])])).
fof(f11849,plain,(
  ( ! [X17,X16] : (p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',sK1)))) | s('type.clos_known.val_approx',X16) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X17))) | ~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',X16),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X17))))))) ) | $spl10),
  inference(trivial_inequality_removal,[],[f11810])).
fof(f11810,plain,(
  ( ! [X17,X16] : (s('type.clos_known.val_approx',X16) != s('type.clos_known.val_approx',X16) | p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',sK1)))) | s('type.clos_known.val_approx',X16) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X17))) | ~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',X16),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X17))))))) ) | $spl10),
  inference(superposition,[],[f9967,f300])).
fof(f11942,plain,(
  ( ! [X18] : (s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X18) | s('type.clos_known.val_approx',X18) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(X18)),s('type.num.num',sK5(X18)))) | s('type.clos_known.val_approx',X18) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6(X18)))) | s('type.clos_known.val_approx',X18) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7(X18))))) ) | $spl122),
  inference(cnf_transformation,[],[f11942_D])).
fof(f11942_D,plain,(
  ( ! [X18] : (s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X18) | s('type.clos_known.val_approx',X18) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(X18)),s('type.num.num',sK5(X18)))) | s('type.clos_known.val_approx',X18) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6(X18)))) | s('type.clos_known.val_approx',X18) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7(X18))))) ) <=> ~$spl122),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl122])])).
fof(f11848,plain,(
  ( ! [X18] : (p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',sK1)))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X18) | s('type.clos_known.val_approx',X18) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7(X18)))) | s('type.clos_known.val_approx',X18) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6(X18)))) | s('type.clos_known.val_approx',X18) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(X18)),s('type.num.num',sK5(X18))))) ) | $spl10),
  inference(trivial_inequality_removal,[],[f11811])).
fof(f11811,plain,(
  ( ! [X18] : (s('type.clos_known.val_approx',X18) != s('type.clos_known.val_approx',X18) | p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',sK1)))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X18) | s('type.clos_known.val_approx',X18) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7(X18)))) | s('type.clos_known.val_approx',X18) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6(X18)))) | s('type.clos_known.val_approx',X18) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(X18)),s('type.num.num',sK5(X18))))) ) | $spl10),
  inference(superposition,[],[f9967,f217])).
fof(f11941,plain,(
  $false | ($spl10 | $spl13 | $spl34)),
  inference(subsumption_resolution,[],[f11940,f293])).
fof(f293,plain,(
  ~p(s(bool,'F_0'))),
  inference(cnf_transformation,[],[f139])).
fof(f139,plain,(
  ~p(s(bool,'F_0'))),
  inference(flattening,[],[f2])).
fof(f2,axiom,(
  ~p(s(bool,'F_0'))),
  file('thm.clos_knownProof.subapprox_Int|split|1',aHL_FALSITY)).
fof(f11940,plain,(
  p(s(bool,'F_0')) | ($spl10 | $spl13 | $spl34)),
  inference(forward_demodulation,[],[f11912,f4229])).
fof(f4229,plain,(
  s(bool,'F_0') = s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx',sK1))) | ($spl13 | $spl34)),
  inference(resolution,[],[f1855,f248])).
fof(f248,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f165])).
fof(f1855,plain,(
  ~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx',sK1)))) | ($spl13 | $spl34)),
  inference(subsumption_resolution,[],[f1821,f455])).
fof(f11936,plain,(
  $false | ($spl10 | $spl13 | $spl34)),
  inference(subsumption_resolution,[],[f11935,f293])).
fof(f11935,plain,(
  p(s(bool,'F_0')) | ($spl10 | $spl13 | $spl34)),
  inference(forward_demodulation,[],[f11934,f4229])).
fof(f11934,plain,(
  p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx',sK1)))) | $spl10),
  inference(forward_demodulation,[],[f11913,f9962])).
fof(f9962,plain,(
  s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) | $spl10),
  inference(superposition,[],[f257,f454])).
fof(f257,plain,(
  ( ! [X0] : (s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X0))) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X0))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))) )),
  inference(cnf_transformation,[],[f122])).
fof(f122,plain,(
  ! [X0] : s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X0))) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X0))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))),
  inference(rectify,[],[f35])).
fof(f35,axiom,(
  ! [X39] : s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X39))) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X39))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))),
  file('thm.clos_knownProof.subapprox_Int|split|1','thm.clos_known.merge_def|split|3')).
fof(f11913,plain,(
  p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))),s('type.clos_known.val_approx',sK1)))) | $spl10),
  inference(trivial_inequality_removal,[],[f11901])).
fof(f11901,plain,(
  s('type.clos_known.val_approx',sK1) != s('type.clos_known.val_approx',sK1) | p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))),s('type.clos_known.val_approx',sK1)))) | $spl10),
  inference(superposition,[],[f10014,f9962])).
fof(f11932,plain,(
  $false | ($spl0 | $spl10 | $spl13 | $spl34)),
  inference(subsumption_resolution,[],[f11931,f293])).
fof(f11931,plain,(
  p(s(bool,'F_0')) | ($spl0 | $spl10 | $spl13 | $spl34)),
  inference(forward_demodulation,[],[f11930,f4229])).
fof(f11930,plain,(
  p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx',sK1)))) | ($spl0 | $spl10)),
  inference(forward_demodulation,[],[f11914,f4164])).
fof(f4164,plain,(
  s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) | $spl0),
  inference(resolution,[],[f310,f303])).
fof(f11914,plain,(
  p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))),s('type.clos_known.val_approx',sK1)))) | ($spl0 | $spl10)),
  inference(trivial_inequality_removal,[],[f11883])).
fof(f11883,plain,(
  s('type.clos_known.val_approx',sK1) != s('type.clos_known.val_approx',sK1) | p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))),s('type.clos_known.val_approx',sK1)))) | ($spl0 | $spl10)),
  inference(superposition,[],[f10014,f4164])).
fof(f11928,plain,(
  $false | ($spl10 | $spl13 | $spl34)),
  inference(subsumption_resolution,[],[f11927,f293])).
fof(f11927,plain,(
  p(s(bool,'F_0')) | ($spl10 | $spl13 | $spl34)),
  inference(forward_demodulation,[],[f11926,f4229])).
fof(f11926,plain,(
  p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx',sK1)))) | $spl10),
  inference(forward_demodulation,[],[f11915,f454])).
fof(f11915,plain,(
  p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7(sK1)))),s('type.clos_known.val_approx',sK1)))) | $spl10),
  inference(trivial_inequality_removal,[],[f11874])).
fof(f11874,plain,(
  s('type.clos_known.val_approx',sK1) != s('type.clos_known.val_approx',sK1) | p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7(sK1)))),s('type.clos_known.val_approx',sK1)))) | $spl10),
  inference(superposition,[],[f10014,f454])).
fof(f11925,plain,(
  $false | ($spl10 | $spl13 | $spl28 | $spl34)),
  inference(subsumption_resolution,[],[f11924,f293])).
fof(f11924,plain,(
  p(s(bool,'F_0')) | ($spl10 | $spl13 | $spl28 | $spl34)),
  inference(forward_demodulation,[],[f11923,f4229])).
fof(f11923,plain,(
  p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx',sK1)))) | ($spl10 | $spl28)),
  inference(forward_demodulation,[],[f11916,f1150])).
fof(f11916,plain,(
  p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))),s('type.clos_known.val_approx',sK1)))) | ($spl10 | $spl28)),
  inference(trivial_inequality_removal,[],[f11873])).
fof(f11873,plain,(
  s('type.clos_known.val_approx',sK1) != s('type.clos_known.val_approx',sK1) | p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))),s('type.clos_known.val_approx',sK1)))) | ($spl10 | $spl28)),
  inference(superposition,[],[f10014,f1150])).
fof(f11922,plain,(
  $false | ($spl3 | $spl10 | $spl13 | $spl34)),
  inference(subsumption_resolution,[],[f11921,f293])).
fof(f11921,plain,(
  p(s(bool,'F_0')) | ($spl3 | $spl10 | $spl13 | $spl34)),
  inference(forward_demodulation,[],[f11920,f4229])).
fof(f11920,plain,(
  p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx',sK1)))) | ($spl3 | $spl10)),
  inference(forward_demodulation,[],[f11917,f10006])).
fof(f11917,plain,(
  p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.Int_1'(s('type.integer.int',sK7(sK1))))))),s('type.clos_known.val_approx',sK1)))) | ($spl3 | $spl10)),
  inference(trivial_inequality_removal,[],[f11872])).
fof(f11872,plain,(
  s('type.clos_known.val_approx',sK1) != s('type.clos_known.val_approx',sK1) | p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.Int_1'(s('type.integer.int',sK7(sK1))))))),s('type.clos_known.val_approx',sK1)))) | ($spl3 | $spl10)),
  inference(superposition,[],[f10014,f10006])).
fof(f11556,plain,(
  ( ! [X2,X3] : (~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X2))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X3))) | ~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X3))))))) ) | ($spl3 | $spl10)),
  inference(superposition,[],[f11492,f300])).
fof(f1150,plain,(
  s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | $spl28),
  inference(cnf_transformation,[],[f1150_D])).
fof(f1150_D,plain,(
  s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) <=> ~$spl28),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl28])])).
fof(f1154,plain,(
  s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | $spl32),
  inference(cnf_transformation,[],[f1154_D])).
fof(f1154_D,plain,(
  s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) <=> ~$spl32),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl32])])).
fof(f10748,plain,(
  s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | ($spl3 | $spl10 | $spl13)),
  inference(forward_demodulation,[],[f10747,f9962])).
fof(f10747,plain,(
  s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | ($spl3 | $spl10 | $spl13)),
  inference(subsumption_resolution,[],[f10746,f2855])).
fof(f2855,plain,(
  ( ! [X9] : (s('type.clos_known.val_approx',sK1) != s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X9)))) ) | ($spl3 | $spl10)),
  inference(superposition,[],[f230,f2371])).
fof(f2371,plain,(
  s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.Int_1'(s('type.integer.int',sK7(sK1))))))) | ($spl3 | $spl10)),
  inference(forward_demodulation,[],[f2370,f454])).
fof(f2370,plain,(
  s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7(sK1)))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.Int_1'(s('type.integer.int',sK7(sK1))))))) | ($spl3 | $spl10)),
  inference(subsumption_resolution,[],[f2369,f229])).
fof(f2369,plain,(
  s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7(sK1)))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.Int_1'(s('type.integer.int',sK7(sK1))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7(sK1)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.Int_1'(s('type.integer.int',sK7(sK1))))),s('type.num.num',sK5('const.clos_known.Int_1'(s('type.integer.int',sK7(sK1))))))) | ($spl3 | $spl10)),
  inference(subsumption_resolution,[],[f2368,f230])).
fof(f2368,plain,(
  s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7(sK1)))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.Int_1'(s('type.integer.int',sK7(sK1))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7(sK1)))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.Int_1'(s('type.integer.int',sK7(sK1))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7(sK1)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.Int_1'(s('type.integer.int',sK7(sK1))))),s('type.num.num',sK5('const.clos_known.Int_1'(s('type.integer.int',sK7(sK1))))))) | ($spl3 | $spl10)),
  inference(subsumption_resolution,[],[f2367,f246])).
fof(f2367,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7(sK1)))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7(sK1)))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.Int_1'(s('type.integer.int',sK7(sK1))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7(sK1)))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.Int_1'(s('type.integer.int',sK7(sK1))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7(sK1)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.Int_1'(s('type.integer.int',sK7(sK1))))),s('type.num.num',sK5('const.clos_known.Int_1'(s('type.integer.int',sK7(sK1))))))) | ($spl3 | $spl10)),
  inference(subsumption_resolution,[],[f2314,f313])).
fof(f2314,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK1) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7(sK1)))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7(sK1)))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.Int_1'(s('type.integer.int',sK7(sK1))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7(sK1)))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.Int_1'(s('type.integer.int',sK7(sK1))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7(sK1)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.Int_1'(s('type.integer.int',sK7(sK1))))),s('type.num.num',sK5('const.clos_known.Int_1'(s('type.integer.int',sK7(sK1))))))) | $spl10),
  inference(superposition,[],[f454,f217])).
fof(f10746,plain,(
  s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | ($spl3 | $spl10 | $spl13)),
  inference(forward_demodulation,[],[f10745,f9962])).
fof(f10745,plain,(
  s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | ($spl3 | $spl10 | $spl13)),
  inference(forward_demodulation,[],[f10744,f9962])).
fof(f10744,plain,(
  s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | ($spl3 | $spl10 | $spl13)),
  inference(subsumption_resolution,[],[f10735,f10387])).
fof(f10387,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') != s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) | ($spl3 | $spl10)),
  inference(subsumption_resolution,[],[f10386,f293])).
fof(f10386,plain,(
  p(s(bool,'F_0')) | s('type.clos_known.val_approx','const.clos_known.Other_0') != s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) | ($spl3 | $spl10)),
  inference(forward_demodulation,[],[f10319,f760])).
fof(f760,plain,(
  s(bool,'F_0') = s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx',sK1))) | $spl3),
  inference(resolution,[],[f448,f248])).
fof(f448,plain,(
  ~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx',sK1)))) | $spl3),
  inference(trivial_inequality_removal,[],[f443])).
fof(f443,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') != s('type.clos_known.val_approx','const.clos_known.Other_0') | ~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx',sK1)))) | $spl3),
  inference(superposition,[],[f313,f305])).
fof(f305,plain,(
  ( ! [X0] : (s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X0) | ~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx',X0))))) )),
  inference(cnf_transformation,[],[f195])).
fof(f195,plain,(
  ! [X0] : ((~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx',X0)))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X0)) & (s('type.clos_known.val_approx','const.clos_known.Other_0') != s('type.clos_known.val_approx',X0) | p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx',X0))))))),
  inference(nnf_transformation,[],[f144])).
fof(f144,plain,(
  ! [X0] : (p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx',X0)))) <=> s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X0))),
  inference(rectify,[],[f8])).
fof(f8,axiom,(
  ! [X7] : (p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx',X7)))) <=> s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X7))),
  file('thm.clos_knownProof.subapprox_Int|split|1','thm.clos_knownProof.subapprox_Other|split|0')).
fof(f10319,plain,(
  p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx',sK1)))) | s('type.clos_known.val_approx','const.clos_known.Other_0') != s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) | $spl10),
  inference(superposition,[],[f306,f9962])).
fof(f306,plain,(
  ( ! [X0] : (p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx',X0)))) | s('type.clos_known.val_approx','const.clos_known.Other_0') != s('type.clos_known.val_approx',X0)) )),
  inference(cnf_transformation,[],[f195])).
fof(f10735,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | ($spl10 | $spl13)),
  inference(trivial_inequality_removal,[],[f10734])).
fof(f10734,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') != s('type.clos_known.val_approx','const.clos_known.Impossible_0') | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | ($spl10 | $spl13)),
  inference(superposition,[],[f10048,f217])).
fof(f10048,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') != s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) | ($spl10 | $spl13)),
  inference(resolution,[],[f4867,f304])).
fof(f4867,plain,(
  ~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))) | ($spl10 | $spl13)),
  inference(subsumption_resolution,[],[f4833,f455])).
fof(f4833,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK1) | ~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))) | $spl10),
  inference(superposition,[],[f2329,f303])).
fof(f2329,plain,(
  s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) | $spl10),
  inference(superposition,[],[f257,f454])).
fof(f10615,plain,(
  s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | ($spl3 | $spl10 | $spl13)),
  inference(forward_demodulation,[],[f10614,f9962])).
fof(f10614,plain,(
  s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | ($spl3 | $spl10 | $spl13)),
  inference(subsumption_resolution,[],[f10613,f2855])).
fof(f10613,plain,(
  s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | ($spl3 | $spl10 | $spl13)),
  inference(forward_demodulation,[],[f10612,f9962])).
fof(f10612,plain,(
  s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | ($spl3 | $spl10 | $spl13)),
  inference(forward_demodulation,[],[f10611,f9962])).
fof(f10611,plain,(
  s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | ($spl3 | $spl10 | $spl13)),
  inference(subsumption_resolution,[],[f10610,f455])).
fof(f10610,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK1) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | ($spl3 | $spl10)),
  inference(forward_demodulation,[],[f10601,f9962])).
fof(f10601,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | ($spl3 | $spl10)),
  inference(trivial_inequality_removal,[],[f10599])).
fof(f10599,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') != s('type.clos_known.val_approx','const.clos_known.Other_0') | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | ($spl3 | $spl10)),
  inference(superposition,[],[f10387,f217])).
fof(f5881,plain,(
  s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | $spl90),
  inference(cnf_transformation,[],[f5881_D])).
fof(f5881_D,plain,(
  s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) <=> ~$spl90),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl90])])).
fof(f5883,plain,(
  s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | $spl92),
  inference(cnf_transformation,[],[f5883_D])).
fof(f5883_D,plain,(
  s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) <=> ~$spl92),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl92])])).
fof(f10558,plain,(
  s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | ($spl0 | $spl3 | $spl10 | $spl13)),
  inference(forward_demodulation,[],[f10557,f4164])).
fof(f10557,plain,(
  s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | ($spl0 | $spl3 | $spl10 | $spl13)),
  inference(subsumption_resolution,[],[f10556,f2855])).
fof(f10556,plain,(
  s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | ($spl0 | $spl3 | $spl13)),
  inference(forward_demodulation,[],[f10555,f4164])).
fof(f10555,plain,(
  s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | ($spl0 | $spl3 | $spl13)),
  inference(forward_demodulation,[],[f10554,f4164])).
fof(f10554,plain,(
  s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | ($spl0 | $spl3 | $spl13)),
  inference(subsumption_resolution,[],[f10553,f455])).
fof(f10553,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK1) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | ($spl0 | $spl3)),
  inference(forward_demodulation,[],[f10552,f4164])).
fof(f10552,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | ($spl0 | $spl3)),
  inference(subsumption_resolution,[],[f10498,f313])).
fof(f10498,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK1) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | $spl0),
  inference(superposition,[],[f217,f4164])).
fof(f10551,plain,(
  s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | ($spl0 | $spl3 | $spl10 | $spl13)),
  inference(forward_demodulation,[],[f10550,f4164])).
fof(f10550,plain,(
  s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | ($spl0 | $spl3 | $spl10 | $spl13)),
  inference(subsumption_resolution,[],[f10549,f2855])).
fof(f10549,plain,(
  s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | ($spl0 | $spl3 | $spl13)),
  inference(forward_demodulation,[],[f10548,f4164])).
fof(f10548,plain,(
  s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | ($spl0 | $spl3 | $spl13)),
  inference(forward_demodulation,[],[f10547,f4164])).
fof(f10547,plain,(
  s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | ($spl0 | $spl3 | $spl13)),
  inference(subsumption_resolution,[],[f10546,f5930])).
fof(f5930,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') != s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) | ($spl0 | $spl3)),
  inference(subsumption_resolution,[],[f5929,f293])).
fof(f5929,plain,(
  p(s(bool,'F_0')) | s('type.clos_known.val_approx','const.clos_known.Other_0') != s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) | ($spl0 | $spl3)),
  inference(forward_demodulation,[],[f5852,f760])).
fof(f5852,plain,(
  p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx',sK1)))) | s('type.clos_known.val_approx','const.clos_known.Other_0') != s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) | $spl0),
  inference(superposition,[],[f306,f4164])).
fof(f10546,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | ($spl0 | $spl13)),
  inference(subsumption_resolution,[],[f10497,f455])).
fof(f10497,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK1) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | $spl0),
  inference(superposition,[],[f217,f4164])).
fof(f10544,plain,(
  s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | ($spl0 | $spl3 | $spl10 | $spl13)),
  inference(forward_demodulation,[],[f10543,f4164])).
fof(f10543,plain,(
  s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | ($spl0 | $spl3 | $spl10 | $spl13)),
  inference(subsumption_resolution,[],[f10542,f2855])).
fof(f10542,plain,(
  s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | ($spl0 | $spl3 | $spl13)),
  inference(forward_demodulation,[],[f10541,f4164])).
fof(f10541,plain,(
  s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | ($spl0 | $spl3 | $spl13)),
  inference(forward_demodulation,[],[f10540,f4164])).
fof(f10540,plain,(
  s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | ($spl0 | $spl3 | $spl13)),
  inference(subsumption_resolution,[],[f10539,f5930])).
fof(f10539,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | ($spl0 | $spl13)),
  inference(subsumption_resolution,[],[f10494,f455])).
fof(f10494,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK1) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | $spl0),
  inference(superposition,[],[f4164,f217])).
fof(f10538,plain,(
  s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | ($spl0 | $spl3 | $spl10 | $spl13)),
  inference(forward_demodulation,[],[f10537,f4164])).
fof(f10537,plain,(
  s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | ($spl0 | $spl3 | $spl10 | $spl13)),
  inference(subsumption_resolution,[],[f10536,f2855])).
fof(f10536,plain,(
  s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | ($spl0 | $spl3 | $spl13)),
  inference(forward_demodulation,[],[f10535,f4164])).
fof(f10535,plain,(
  s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | ($spl0 | $spl3 | $spl13)),
  inference(forward_demodulation,[],[f10534,f4164])).
fof(f10534,plain,(
  s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | ($spl0 | $spl3 | $spl13)),
  inference(subsumption_resolution,[],[f10533,f455])).
fof(f10533,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK1) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | ($spl0 | $spl3)),
  inference(forward_demodulation,[],[f10532,f4164])).
fof(f10532,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | ($spl0 | $spl3)),
  inference(subsumption_resolution,[],[f10493,f313])).
fof(f10493,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK1) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | $spl0),
  inference(superposition,[],[f4164,f217])).
fof(f10361,plain,(
  s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | ($spl3 | $spl10 | $spl13)),
  inference(forward_demodulation,[],[f10360,f9962])).
fof(f10360,plain,(
  s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | ($spl3 | $spl10 | $spl13)),
  inference(subsumption_resolution,[],[f10359,f2855])).
fof(f10359,plain,(
  s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | ($spl3 | $spl10 | $spl13)),
  inference(forward_demodulation,[],[f10358,f9962])).
fof(f10358,plain,(
  s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | ($spl3 | $spl10 | $spl13)),
  inference(forward_demodulation,[],[f10357,f9962])).
fof(f10357,plain,(
  s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | ($spl3 | $spl10 | $spl13)),
  inference(subsumption_resolution,[],[f10356,f455])).
fof(f10356,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK1) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | ($spl3 | $spl10)),
  inference(forward_demodulation,[],[f10355,f9962])).
fof(f10355,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | ($spl3 | $spl10)),
  inference(subsumption_resolution,[],[f10300,f313])).
fof(f10300,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK1) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | $spl10),
  inference(superposition,[],[f217,f9962])).
fof(f10354,plain,(
  s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | ($spl3 | $spl10 | $spl13)),
  inference(forward_demodulation,[],[f10353,f9962])).
fof(f10353,plain,(
  s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | ($spl3 | $spl10 | $spl13)),
  inference(subsumption_resolution,[],[f10352,f2855])).
fof(f10352,plain,(
  s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | ($spl3 | $spl10 | $spl13)),
  inference(forward_demodulation,[],[f10351,f9962])).
fof(f10351,plain,(
  s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | ($spl3 | $spl10 | $spl13)),
  inference(forward_demodulation,[],[f10350,f9962])).
fof(f10350,plain,(
  s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | ($spl3 | $spl10 | $spl13)),
  inference(subsumption_resolution,[],[f10349,f313])).
fof(f10349,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK1) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | ($spl10 | $spl13)),
  inference(forward_demodulation,[],[f10348,f9962])).
fof(f10348,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | ($spl10 | $spl13)),
  inference(subsumption_resolution,[],[f10299,f455])).
fof(f10299,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK1) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | $spl10),
  inference(superposition,[],[f217,f9962])).
fof(f10347,plain,(
  s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | ($spl3 | $spl10 | $spl13)),
  inference(forward_demodulation,[],[f10346,f9962])).
fof(f10346,plain,(
  s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | ($spl3 | $spl10 | $spl13)),
  inference(subsumption_resolution,[],[f10345,f2855])).
fof(f10345,plain,(
  s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | ($spl3 | $spl10 | $spl13)),
  inference(forward_demodulation,[],[f10344,f9962])).
fof(f10344,plain,(
  s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | ($spl3 | $spl10 | $spl13)),
  inference(forward_demodulation,[],[f10343,f9962])).
fof(f10343,plain,(
  s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | ($spl3 | $spl10 | $spl13)),
  inference(subsumption_resolution,[],[f10342,f313])).
fof(f10342,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK1) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | ($spl10 | $spl13)),
  inference(forward_demodulation,[],[f10341,f9962])).
fof(f10341,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | ($spl10 | $spl13)),
  inference(subsumption_resolution,[],[f10296,f455])).
fof(f10296,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK1) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | $spl10),
  inference(superposition,[],[f9962,f217])).
fof(f10340,plain,(
  s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | ($spl3 | $spl10 | $spl13)),
  inference(forward_demodulation,[],[f10339,f9962])).
fof(f10339,plain,(
  s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | ($spl3 | $spl10 | $spl13)),
  inference(subsumption_resolution,[],[f10338,f2855])).
fof(f10338,plain,(
  s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | ($spl3 | $spl10 | $spl13)),
  inference(forward_demodulation,[],[f10337,f9962])).
fof(f10337,plain,(
  s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | ($spl3 | $spl10 | $spl13)),
  inference(forward_demodulation,[],[f10336,f9962])).
fof(f10336,plain,(
  s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | ($spl3 | $spl10 | $spl13)),
  inference(subsumption_resolution,[],[f10335,f455])).
fof(f10335,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK1) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | ($spl3 | $spl10)),
  inference(forward_demodulation,[],[f10334,f9962])).
fof(f10334,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | ($spl3 | $spl10)),
  inference(subsumption_resolution,[],[f10295,f313])).
fof(f10295,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK1) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | $spl10),
  inference(superposition,[],[f9962,f217])).
fof(f4525,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx',sK1))) | $spl62),
  inference(cnf_transformation,[],[f4525_D])).
fof(f4525_D,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx',sK1))) <=> ~$spl62),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl62])])).
fof(f4526,plain,(
  ( ! [X0] : (s('type.clos_known.val_approx',sK1) != s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X0))) | ~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx',sK1))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X0))))))) ) | $spl64),
  inference(cnf_transformation,[],[f4526_D])).
fof(f4526_D,plain,(
  ( ! [X0] : (s('type.clos_known.val_approx',sK1) != s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X0))) | ~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx',sK1))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X0))))))) ) <=> ~$spl64),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl64])])).
fof(f10109,plain,(
  ( ! [X0] : (s('type.clos_known.val_approx',sK1) != s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X0))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx',sK1))) | ~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx',sK1))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X0))))))) ) | $spl3),
  inference(superposition,[],[f757,f300])).
fof(f757,plain,(
  s('type.clos_known.val_approx',sK1) != s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx',sK1))) | $spl3),
  inference(resolution,[],[f448,f304])).
fof(f452,plain,(
  s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6(sK1)))) | $spl8),
  inference(cnf_transformation,[],[f452_D])).
fof(f452_D,plain,(
  s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6(sK1)))) <=> ~$spl8),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl8])])).
fof(f454,plain,(
  s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7(sK1)))) | $spl10),
  inference(cnf_transformation,[],[f454_D])).
fof(f454_D,plain,(
  s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7(sK1)))) <=> ~$spl10),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl10])])).
fof(f9881,plain,(
  s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6(sK1)))) | ($spl3 | $spl7 | $spl13)),
  inference(subsumption_resolution,[],[f6291,f449])).
fof(f449,plain,(
  s('type.clos_known.val_approx',sK1) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK1)),s('type.num.num',sK5(sK1)))) | $spl7),
  inference(cnf_transformation,[],[f449_D])).
fof(f449_D,plain,(
  s('type.clos_known.val_approx',sK1) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK1)),s('type.num.num',sK5(sK1)))) <=> ~$spl7),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl7])])).
fof(f6291,plain,(
  s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK1)),s('type.num.num',sK5(sK1)))) | ($spl3 | $spl13)),
  inference(subsumption_resolution,[],[f6290,f455])).
fof(f6290,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK1) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK1)),s('type.num.num',sK5(sK1)))) | $spl3),
  inference(subsumption_resolution,[],[f6280,f223])).
fof(f223,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx','const.clos_known.Other_0')))),
  inference(cnf_transformation,[],[f15])).
fof(f15,axiom,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx','const.clos_known.Other_0')))),
  file('thm.clos_knownProof.subapprox_Int|split|1','thm.clos_known.merge_def|split|20')).
fof(f6280,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') != s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx','const.clos_known.Other_0'))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK1) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK1)),s('type.num.num',sK5(sK1)))) | $spl3),
  inference(superposition,[],[f757,f217])).
fof(f9878,plain,(
  s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6(sK1)))) | ($spl3 | $spl7 | $spl13 | $spl18 | $spl22)),
  inference(subsumption_resolution,[],[f9877,f1649])).
fof(f1649,plain,(
  s(bool,'T_0') != s(bool,'F_0') | $spl22),
  inference(backward_demodulation,[],[f831,f829])).
fof(f829,plain,(
  s(bool,'F_0') != s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) | $spl22),
  inference(resolution,[],[f751,f247])).
fof(f751,plain,(
  p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))) | $spl22),
  inference(cnf_transformation,[],[f751_D])).
fof(f751_D,plain,(
  p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))) <=> ~$spl22),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl22])])).
fof(f831,plain,(
  s(bool,'T_0') = s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) | $spl22),
  inference(resolution,[],[f751,f252])).
fof(f9877,plain,(
  s(bool,'T_0') = s(bool,'F_0') | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6(sK1)))) | ($spl3 | $spl7 | $spl13 | $spl18)),
  inference(forward_demodulation,[],[f9876,f4469])).
fof(f4469,plain,(
  s(bool,'T_0') = s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx','const.clos_known.Other_0'))) | $spl18),
  inference(resolution,[],[f748,f252])).
fof(f9876,plain,(
  s(bool,'F_0') = s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx','const.clos_known.Other_0'))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6(sK1)))) | ($spl3 | $spl7 | $spl13)),
  inference(subsumption_resolution,[],[f6355,f449])).
fof(f6355,plain,(
  s(bool,'F_0') = s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx','const.clos_known.Other_0'))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK1)),s('type.num.num',sK5(sK1)))) | ($spl3 | $spl13)),
  inference(subsumption_resolution,[],[f6305,f455])).
fof(f6305,plain,(
  s(bool,'F_0') = s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx','const.clos_known.Other_0'))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK1) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK1)),s('type.num.num',sK5(sK1)))) | $spl3),
  inference(superposition,[],[f760,f217])).
fof(f9875,plain,(
  s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6(sK1)))) | ($spl3 | $spl7 | $spl13 | $spl18)),
  inference(subsumption_resolution,[],[f6427,f449])).
fof(f6427,plain,(
  s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK1)),s('type.num.num',sK5(sK1)))) | ($spl3 | $spl13 | $spl18)),
  inference(subsumption_resolution,[],[f6426,f455])).
fof(f6426,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK1) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK1)),s('type.num.num',sK5(sK1)))) | ($spl3 | $spl18)),
  inference(subsumption_resolution,[],[f6408,f4469])).
fof(f6408,plain,(
  s(bool,'T_0') != s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx','const.clos_known.Other_0'))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK1) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK1)),s('type.num.num',sK5(sK1)))) | $spl3),
  inference(superposition,[],[f762,f217])).
fof(f762,plain,(
  s(bool,'T_0') != s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx',sK1))) | $spl3),
  inference(resolution,[],[f448,f251])).
fof(f251,plain,(
  ( ! [X0] : (p(s(bool,X0)) | s(bool,'T_0') != s(bool,X0)) )),
  inference(cnf_transformation,[],[f167])).
fof(f9874,plain,(
  s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6(sK1)))) | ($spl7 | $spl13 | $spl34)),
  inference(subsumption_resolution,[],[f9873,f222])).
fof(f222,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') != s('type.clos_known.val_approx','const.clos_known.Impossible_0')),
  inference(cnf_transformation,[],[f93])).
fof(f93,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') != s('type.clos_known.val_approx','const.clos_known.Impossible_0')),
  inference(flattening,[],[f48])).
fof(f48,axiom,(
  ~s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.Impossible_0')),
  file('thm.clos_knownProof.subapprox_Int|split|1','thm.clos_known.val_approx_distinct|split|9')).
fof(f9873,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.Impossible_0') | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6(sK1)))) | ($spl7 | $spl13 | $spl34)),
  inference(forward_demodulation,[],[f9872,f223])).
fof(f9872,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx','const.clos_known.Other_0'))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6(sK1)))) | ($spl7 | $spl13 | $spl34)),
  inference(subsumption_resolution,[],[f6471,f449])).
fof(f6471,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx','const.clos_known.Other_0'))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK1)),s('type.num.num',sK5(sK1)))) | ($spl13 | $spl34)),
  inference(subsumption_resolution,[],[f6438,f455])).
fof(f6438,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx','const.clos_known.Other_0'))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK1) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK1)),s('type.num.num',sK5(sK1)))) | $spl34),
  inference(superposition,[],[f1252,f217])).
fof(f9871,plain,(
  s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6(sK1)))) | ($spl7 | $spl13 | $spl25 | $spl34)),
  inference(subsumption_resolution,[],[f6518,f449])).
fof(f6518,plain,(
  s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK1)),s('type.num.num',sK5(sK1)))) | ($spl13 | $spl25 | $spl34)),
  inference(subsumption_resolution,[],[f6517,f455])).
fof(f6517,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK1) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK1)),s('type.num.num',sK5(sK1)))) | ($spl25 | $spl34)),
  inference(subsumption_resolution,[],[f6503,f223])).
fof(f6503,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') != s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx','const.clos_known.Other_0'))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK1) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK1)),s('type.num.num',sK5(sK1)))) | ($spl25 | $spl34)),
  inference(superposition,[],[f1874,f217])).
fof(f1874,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') != s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx',sK1))) | ($spl25 | $spl34)),
  inference(subsumption_resolution,[],[f1845,f790])).
fof(f1845,plain,(
  p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))) | s('type.clos_known.val_approx','const.clos_known.Other_0') != s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx',sK1))) | $spl34),
  inference(superposition,[],[f306,f1252])).
fof(f5173,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') != s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) | $spl67),
  inference(cnf_transformation,[],[f5173_D])).
fof(f5173_D,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') != s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) <=> ~$spl67),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl67])])).
fof(f9870,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') != s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6(sK1)))) | ($spl3 | $spl7 | $spl25 | $spl34)),
  inference(subsumption_resolution,[],[f6521,f449])).
fof(f6521,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') != s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK1)),s('type.num.num',sK5(sK1)))) | ($spl3 | $spl25 | $spl34)),
  inference(subsumption_resolution,[],[f6504,f313])).
fof(f6504,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') != s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK1) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK1)),s('type.num.num',sK5(sK1)))) | ($spl25 | $spl34)),
  inference(superposition,[],[f1874,f217])).
fof(f8245,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') != s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) | $spl105),
  inference(cnf_transformation,[],[f8245_D])).
fof(f8245_D,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') != s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) <=> ~$spl105),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl105])])).
fof(f9865,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') != s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6(sK1)))) | ($spl0 | $spl3 | $spl7)),
  inference(subsumption_resolution,[],[f8242,f449])).
fof(f8242,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') != s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK1)),s('type.num.num',sK5(sK1)))) | ($spl0 | $spl3)),
  inference(subsumption_resolution,[],[f8035,f313])).
fof(f8035,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') != s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK1) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK1)),s('type.num.num',sK5(sK1)))) | ($spl0 | $spl3)),
  inference(superposition,[],[f5930,f217])).
fof(f9864,plain,(
  s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6(sK1)))) | ($spl0 | $spl3 | $spl7 | $spl13)),
  inference(subsumption_resolution,[],[f8247,f449])).
fof(f8247,plain,(
  s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK1)),s('type.num.num',sK5(sK1)))) | ($spl0 | $spl3 | $spl13)),
  inference(subsumption_resolution,[],[f8246,f455])).
fof(f8246,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK1) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK1)),s('type.num.num',sK5(sK1)))) | ($spl0 | $spl3)),
  inference(subsumption_resolution,[],[f8034,f221])).
fof(f8034,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') != s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK1) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK1)),s('type.num.num',sK5(sK1)))) | ($spl0 | $spl3)),
  inference(superposition,[],[f5930,f217])).
fof(f9863,plain,(
  s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6(sK1)))) | ($spl0 | $spl3 | $spl7 | $spl57)),
  inference(subsumption_resolution,[],[f8257,f449])).
fof(f8257,plain,(
  s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK1)),s('type.num.num',sK5(sK1)))) | ($spl0 | $spl3 | $spl57)),
  inference(subsumption_resolution,[],[f8256,f313])).
fof(f8256,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK1) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK1)),s('type.num.num',sK5(sK1)))) | ($spl0 | $spl57)),
  inference(subsumption_resolution,[],[f6215,f4217])).
fof(f4217,plain,(
  ~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))) | $spl57),
  inference(cnf_transformation,[],[f4217_D])).
fof(f4217_D,plain,(
  ~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))) <=> ~$spl57),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl57])])).
fof(f6215,plain,(
  p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK1) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK1)),s('type.num.num',sK5(sK1)))) | $spl0),
  inference(superposition,[],[f310,f217])).
fof(f9862,plain,(
  s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6(sK1)))) | ($spl3 | $spl7 | $spl13 | $spl22 | $spl34)),
  inference(subsumption_resolution,[],[f8289,f449])).
fof(f8289,plain,(
  s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK1)),s('type.num.num',sK5(sK1)))) | ($spl3 | $spl13 | $spl22 | $spl34)),
  inference(subsumption_resolution,[],[f8288,f313])).
fof(f8288,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK1) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK1)),s('type.num.num',sK5(sK1)))) | ($spl13 | $spl22 | $spl34)),
  inference(subsumption_resolution,[],[f7494,f831])).
fof(f7494,plain,(
  s(bool,'T_0') != s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK1) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK1)),s('type.num.num',sK5(sK1)))) | ($spl13 | $spl34)),
  inference(superposition,[],[f4231,f217])).
fof(f4231,plain,(
  s(bool,'T_0') != s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx',sK1))) | ($spl13 | $spl34)),
  inference(resolution,[],[f1855,f251])).
fof(f9861,plain,(
  s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6(sK1)))) | ($spl7 | $spl13 | $spl18 | $spl34)),
  inference(subsumption_resolution,[],[f8292,f449])).
fof(f8292,plain,(
  s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK1)),s('type.num.num',sK5(sK1)))) | ($spl13 | $spl18 | $spl34)),
  inference(subsumption_resolution,[],[f8291,f455])).
fof(f8291,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK1) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK1)),s('type.num.num',sK5(sK1)))) | ($spl13 | $spl18 | $spl34)),
  inference(subsumption_resolution,[],[f7493,f4469])).
fof(f7493,plain,(
  s(bool,'T_0') != s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx','const.clos_known.Other_0'))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK1) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK1)),s('type.num.num',sK5(sK1)))) | ($spl13 | $spl34)),
  inference(superposition,[],[f4231,f217])).
fof(f9860,plain,(
  s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6(sK1)))) | ($spl0 | $spl3 | $spl7 | $spl57)),
  inference(subsumption_resolution,[],[f9859,f449])).
fof(f9859,plain,(
  s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK1)),s('type.num.num',sK5(sK1)))) | ($spl0 | $spl3 | $spl57)),
  inference(subsumption_resolution,[],[f8295,f7969])).
fof(f7969,plain,(
  s(bool,'T_0') != s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) | $spl57),
  inference(resolution,[],[f4217,f251])).
fof(f8295,plain,(
  s(bool,'T_0') = s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK1)),s('type.num.num',sK5(sK1)))) | ($spl0 | $spl3)),
  inference(subsumption_resolution,[],[f7415,f313])).
fof(f7415,plain,(
  s(bool,'T_0') = s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK1) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK1)),s('type.num.num',sK5(sK1)))) | $spl0),
  inference(superposition,[],[f4169,f217])).
fof(f8302,plain,(
  s(bool,'T_0') = s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) | $spl108),
  inference(cnf_transformation,[],[f8302_D])).
fof(f8302_D,plain,(
  s(bool,'T_0') = s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) <=> ~$spl108),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl108])])).
fof(f9858,plain,(
  s(bool,'T_0') = s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6(sK1)))) | ($spl0 | $spl7 | $spl13)),
  inference(subsumption_resolution,[],[f8299,f449])).
fof(f8299,plain,(
  s(bool,'T_0') = s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK1)),s('type.num.num',sK5(sK1)))) | ($spl0 | $spl13)),
  inference(subsumption_resolution,[],[f7414,f455])).
fof(f7414,plain,(
  s(bool,'T_0') = s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK1) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK1)),s('type.num.num',sK5(sK1)))) | $spl0),
  inference(superposition,[],[f4169,f217])).
fof(f9857,plain,(
  s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6(sK1)))) | ($spl3 | $spl7 | $spl13 | $spl22 | $spl34)),
  inference(subsumption_resolution,[],[f9856,f1649])).
fof(f9856,plain,(
  s(bool,'T_0') = s(bool,'F_0') | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6(sK1)))) | ($spl3 | $spl7 | $spl13 | $spl22 | $spl34)),
  inference(forward_demodulation,[],[f9855,f831])).
fof(f9855,plain,(
  s(bool,'F_0') = s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6(sK1)))) | ($spl3 | $spl7 | $spl13 | $spl34)),
  inference(subsumption_resolution,[],[f8303,f449])).
fof(f8303,plain,(
  s(bool,'F_0') = s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK1)),s('type.num.num',sK5(sK1)))) | ($spl3 | $spl13 | $spl34)),
  inference(subsumption_resolution,[],[f7325,f313])).
fof(f7325,plain,(
  s(bool,'F_0') = s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK1) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK1)),s('type.num.num',sK5(sK1)))) | ($spl13 | $spl34)),
  inference(superposition,[],[f4229,f217])).
fof(f9854,plain,(
  s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6(sK1)))) | ($spl7 | $spl13 | $spl18 | $spl22 | $spl34)),
  inference(subsumption_resolution,[],[f9853,f1649])).
fof(f9853,plain,(
  s(bool,'T_0') = s(bool,'F_0') | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6(sK1)))) | ($spl7 | $spl13 | $spl18 | $spl34)),
  inference(forward_demodulation,[],[f9852,f4469])).
fof(f9852,plain,(
  s(bool,'F_0') = s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx','const.clos_known.Other_0'))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6(sK1)))) | ($spl7 | $spl13 | $spl34)),
  inference(subsumption_resolution,[],[f8307,f449])).
fof(f8307,plain,(
  s(bool,'F_0') = s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx','const.clos_known.Other_0'))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK1)),s('type.num.num',sK5(sK1)))) | ($spl13 | $spl34)),
  inference(subsumption_resolution,[],[f7324,f455])).
fof(f7324,plain,(
  s(bool,'F_0') = s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx','const.clos_known.Other_0'))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK1) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK1)),s('type.num.num',sK5(sK1)))) | ($spl13 | $spl34)),
  inference(superposition,[],[f4229,f217])).
fof(f9851,plain,(
  s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6(sK1)))) | ($spl0 | $spl3 | $spl7 | $spl57)),
  inference(subsumption_resolution,[],[f9850,f449])).
fof(f9850,plain,(
  s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK1)),s('type.num.num',sK5(sK1)))) | ($spl0 | $spl3 | $spl57)),
  inference(subsumption_resolution,[],[f8313,f7967])).
fof(f7967,plain,(
  s(bool,'F_0') = s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) | $spl57),
  inference(resolution,[],[f4217,f248])).
fof(f8313,plain,(
  s(bool,'F_0') != s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK1)),s('type.num.num',sK5(sK1)))) | ($spl0 | $spl3)),
  inference(subsumption_resolution,[],[f7264,f313])).
fof(f7264,plain,(
  s(bool,'F_0') != s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK1) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK1)),s('type.num.num',sK5(sK1)))) | $spl0),
  inference(superposition,[],[f4167,f217])).
fof(f8320,plain,(
  s(bool,'F_0') != s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) | $spl113),
  inference(cnf_transformation,[],[f8320_D])).
fof(f8320_D,plain,(
  s(bool,'F_0') != s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) <=> ~$spl113),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl113])])).
fof(f9849,plain,(
  s(bool,'F_0') != s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6(sK1)))) | ($spl0 | $spl7 | $spl13)),
  inference(subsumption_resolution,[],[f8317,f449])).
fof(f8317,plain,(
  s(bool,'F_0') != s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK1)),s('type.num.num',sK5(sK1)))) | ($spl0 | $spl13)),
  inference(subsumption_resolution,[],[f7263,f455])).
fof(f7263,plain,(
  s(bool,'F_0') != s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK1) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK1)),s('type.num.num',sK5(sK1)))) | $spl0),
  inference(superposition,[],[f4167,f217])).
fof(f9848,plain,(
  s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6(sK1)))) | ($spl0 | $spl3 | $spl7 | $spl57)),
  inference(subsumption_resolution,[],[f9847,f449])).
fof(f9847,plain,(
  s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK1)),s('type.num.num',sK5(sK1)))) | ($spl0 | $spl3 | $spl57)),
  inference(subsumption_resolution,[],[f8326,f7964])).
fof(f7964,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') != s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) | $spl57),
  inference(resolution,[],[f4217,f304])).
fof(f8326,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK1)),s('type.num.num',sK5(sK1)))) | ($spl0 | $spl3)),
  inference(subsumption_resolution,[],[f7144,f313])).
fof(f7144,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK1) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK1)),s('type.num.num',sK5(sK1)))) | $spl0),
  inference(superposition,[],[f4164,f217])).
fof(f9845,plain,(
  s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6(sK1)))) | ($spl3 | $spl7 | $spl13)),
  inference(subsumption_resolution,[],[f9844,f449])).
fof(f9844,plain,(
  s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK1)),s('type.num.num',sK5(sK1)))) | ($spl3 | $spl13)),
  inference(subsumption_resolution,[],[f9843,f455])).
fof(f9843,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK1) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK1)),s('type.num.num',sK5(sK1)))) | $spl3),
  inference(subsumption_resolution,[],[f8454,f223])).
fof(f8454,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') != s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx','const.clos_known.Other_0'))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK1) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK1)),s('type.num.num',sK5(sK1)))) | $spl3),
  inference(superposition,[],[f757,f217])).
fof(f8458,plain,(
  ( ! [X0] : (s('type.clos_known.val_approx',sK1) != s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X0))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx',sK1))) | ~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx',sK1))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X0))))))) ) | $spl3),
  inference(superposition,[],[f757,f300])).
fof(f9839,plain,(
  s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6(sK1)))) | ($spl3 | $spl7 | $spl13)),
  inference(subsumption_resolution,[],[f9838,f313])).
fof(f9838,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK1) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6(sK1)))) | ($spl7 | $spl13)),
  inference(subsumption_resolution,[],[f8667,f455])).
fof(f8667,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK1) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK1) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6(sK1)))) | $spl7),
  inference(trivial_inequality_removal,[],[f8659])).
fof(f8659,plain,(
  s('type.clos_known.val_approx',sK1) != s('type.clos_known.val_approx',sK1) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK1) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK1) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6(sK1)))) | $spl7),
  inference(superposition,[],[f449,f217])).
fof(f9834,plain,(
  s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6(sK1)))) | ($spl0 | $spl3 | $spl7 | $spl57)),
  inference(subsumption_resolution,[],[f9833,f449])).
fof(f9833,plain,(
  s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK1)),s('type.num.num',sK5(sK1)))) | ($spl0 | $spl3 | $spl57)),
  inference(subsumption_resolution,[],[f9832,f313])).
fof(f9832,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK1) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK1)),s('type.num.num',sK5(sK1)))) | ($spl0 | $spl57)),
  inference(subsumption_resolution,[],[f8945,f7964])).
fof(f8945,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK1) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK1)),s('type.num.num',sK5(sK1)))) | $spl0),
  inference(superposition,[],[f4164,f217])).
fof(f8321,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) | $spl114),
  inference(cnf_transformation,[],[f8321_D])).
fof(f8321_D,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) <=> ~$spl114),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl114])])).
fof(f8324,plain,(
  ( ! [X1] : (s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X1))) | ~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X1))))))) ) | $spl118),
  inference(cnf_transformation,[],[f8324_D])).
fof(f8324_D,plain,(
  ( ! [X1] : (s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X1))) | ~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X1))))))) ) <=> ~$spl118),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl118])])).
fof(f8947,plain,(
  ( ! [X0] : (s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X0))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) | ~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X0))))))) ) | $spl0),
  inference(superposition,[],[f4164,f300])).
fof(f8239,plain,(
  s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | $spl100),
  inference(cnf_transformation,[],[f8239_D])).
fof(f8239_D,plain,(
  s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) <=> ~$spl100),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl100])])).
fof(f8241,plain,(
  s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | $spl102),
  inference(cnf_transformation,[],[f8241_D])).
fof(f8241_D,plain,(
  s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) <=> ~$spl102),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl102])])).
fof(f8997,plain,(
  s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | ($spl0 | $spl3 | $spl13)),
  inference(forward_demodulation,[],[f8996,f4164])).
fof(f8996,plain,(
  s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | ($spl0 | $spl3 | $spl13)),
  inference(subsumption_resolution,[],[f8995,f455])).
fof(f8995,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK1) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | ($spl0 | $spl3)),
  inference(forward_demodulation,[],[f8994,f4164])).
fof(f8994,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | ($spl0 | $spl3)),
  inference(subsumption_resolution,[],[f8949,f313])).
fof(f8949,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK1) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | $spl0),
  inference(superposition,[],[f4164,f217])).
fof(f9003,plain,(
  s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | ($spl0 | $spl3 | $spl13)),
  inference(forward_demodulation,[],[f9002,f4164])).
fof(f9002,plain,(
  s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | ($spl0 | $spl3 | $spl13)),
  inference(subsumption_resolution,[],[f9001,f5930])).
fof(f9001,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | ($spl0 | $spl13)),
  inference(subsumption_resolution,[],[f8950,f455])).
fof(f8950,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK1) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | $spl0),
  inference(superposition,[],[f4164,f217])).
fof(f9010,plain,(
  s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | ($spl0 | $spl3 | $spl13)),
  inference(forward_demodulation,[],[f9009,f4164])).
fof(f9009,plain,(
  s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | ($spl0 | $spl3 | $spl13)),
  inference(subsumption_resolution,[],[f9008,f5930])).
fof(f9008,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | ($spl0 | $spl13)),
  inference(subsumption_resolution,[],[f8953,f455])).
fof(f8953,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK1) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | $spl0),
  inference(superposition,[],[f217,f4164])).
fof(f9017,plain,(
  s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | ($spl0 | $spl3 | $spl13)),
  inference(forward_demodulation,[],[f9016,f4164])).
fof(f9016,plain,(
  s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | ($spl0 | $spl3 | $spl13)),
  inference(subsumption_resolution,[],[f9015,f455])).
fof(f9015,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK1) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | ($spl0 | $spl3)),
  inference(forward_demodulation,[],[f9014,f4164])).
fof(f9014,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | ($spl0 | $spl3)),
  inference(subsumption_resolution,[],[f8954,f313])).
fof(f8954,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK1) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | $spl0),
  inference(superposition,[],[f217,f4164])).
fof(f8325,plain,(
  ( ! [X0] : (~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X0)))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X0))) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))) ) | $spl120),
  inference(cnf_transformation,[],[f8325_D])).
fof(f8325_D,plain,(
  ( ! [X0] : (~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X0)))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X0))) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))) ) <=> ~$spl120),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl120])])).
fof(f8956,plain,(
  ( ! [X0] : (~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X0)))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X0))) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))) ) | $spl0),
  inference(superposition,[],[f300,f4164])).
fof(f8957,plain,(
  ( ! [X1] : (s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X1))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) | ~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X1))))))) ) | $spl0),
  inference(superposition,[],[f300,f4164])).
fof(f8322,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') != s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) | $spl115),
  inference(cnf_transformation,[],[f8322_D])).
fof(f8322_D,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') != s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) <=> ~$spl115),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl115])])).
fof(f8323,plain,(
  ( ! [X5] : (p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X5))))))) ) | $spl116),
  inference(cnf_transformation,[],[f8323_D])).
fof(f8323_D,plain,(
  ( ! [X5] : (p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X5))))))) ) <=> ~$spl116),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl116])])).
fof(f8961,plain,(
  ( ! [X5] : (p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X5)))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') != s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))) ) | $spl0),
  inference(superposition,[],[f302,f4164])).
fof(f9640,plain,(
  s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | ($spl0 | $spl3 | $spl115)),
  inference(forward_demodulation,[],[f9639,f4164])).
fof(f9639,plain,(
  s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | ($spl0 | $spl3 | $spl115)),
  inference(subsumption_resolution,[],[f9631,f5930])).
fof(f9631,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | $spl115),
  inference(trivial_inequality_removal,[],[f9630])).
fof(f9630,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') != s('type.clos_known.val_approx','const.clos_known.Impossible_0') | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | $spl115),
  inference(superposition,[],[f8322,f217])).
fof(f9777,plain,(
  $false | ($spl0 | $spl3 | $spl8)),
  inference(subsumption_resolution,[],[f9728,f313])).
fof(f9728,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK1) | ($spl0 | $spl8)),
  inference(backward_demodulation,[],[f8350,f4164])).
fof(f8350,plain,(
  ( ! [X5] : (s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X5))),s('type.clos_known.val_approx',sK1)))) ) | $spl8),
  inference(superposition,[],[f212,f452])).
fof(f9776,plain,(
  $false | ($spl0 | $spl3 | $spl8)),
  inference(trivial_inequality_removal,[],[f9751])).
fof(f9751,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') != s('type.clos_known.val_approx','const.clos_known.Other_0') | ($spl0 | $spl3 | $spl8)),
  inference(superposition,[],[f5930,f8350])).
fof(f5948,plain,(
  s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | $spl94),
  inference(cnf_transformation,[],[f5948_D])).
fof(f5948_D,plain,(
  s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) <=> ~$spl94),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl94])])).
fof(f9643,plain,(
  s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | ($spl0 | $spl3 | $spl8 | $spl115)),
  inference(forward_demodulation,[],[f9642,f4164])).
fof(f9642,plain,(
  s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | ($spl0 | $spl3 | $spl8 | $spl115)),
  inference(forward_demodulation,[],[f9641,f4164])).
fof(f9641,plain,(
  s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | ($spl0 | $spl3 | $spl8 | $spl115)),
  inference(subsumption_resolution,[],[f9640,f8354])).
fof(f8354,plain,(
  ( ! [X8] : (s('type.clos_known.val_approx',sK1) != s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X8)))) ) | $spl8),
  inference(superposition,[],[f230,f452])).
fof(f1152,plain,(
  s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | $spl30),
  inference(cnf_transformation,[],[f1152_D])).
fof(f1152_D,plain,(
  s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) <=> ~$spl30),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl30])])).
fof(f9207,plain,(
  s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | ($spl3 | $spl8 | $spl13)),
  inference(forward_demodulation,[],[f9206,f8360])).
fof(f8360,plain,(
  s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) | $spl8),
  inference(superposition,[],[f256,f452])).
fof(f256,plain,(
  ( ! [X0] : (s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X0))) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X0))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))) )),
  inference(cnf_transformation,[],[f121])).
fof(f121,plain,(
  ! [X0] : s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X0))) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X0))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))),
  inference(rectify,[],[f32])).
fof(f32,axiom,(
  ! [X37] : s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X37))) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X37))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))),
  file('thm.clos_knownProof.subapprox_Int|split|1','thm.clos_known.merge_def|split|2')).
fof(f9206,plain,(
  s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | ($spl3 | $spl8 | $spl13)),
  inference(forward_demodulation,[],[f9205,f8360])).
fof(f9205,plain,(
  s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | ($spl3 | $spl8 | $spl13)),
  inference(subsumption_resolution,[],[f9204,f8354])).
fof(f9204,plain,(
  s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | ($spl3 | $spl8 | $spl13)),
  inference(forward_demodulation,[],[f9203,f8360])).
fof(f9203,plain,(
  s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | ($spl3 | $spl8 | $spl13)),
  inference(subsumption_resolution,[],[f9194,f8780])).
fof(f8780,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') != s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) | ($spl3 | $spl8)),
  inference(subsumption_resolution,[],[f8779,f293])).
fof(f8779,plain,(
  p(s(bool,'F_0')) | s('type.clos_known.val_approx','const.clos_known.Other_0') != s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) | ($spl3 | $spl8)),
  inference(forward_demodulation,[],[f8706,f760])).
fof(f8706,plain,(
  p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx',sK1)))) | s('type.clos_known.val_approx','const.clos_known.Other_0') != s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) | $spl8),
  inference(superposition,[],[f306,f8360])).
fof(f9194,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | ($spl8 | $spl13)),
  inference(trivial_inequality_removal,[],[f9193])).
fof(f9193,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') != s('type.clos_known.val_approx','const.clos_known.Impossible_0') | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | ($spl8 | $spl13)),
  inference(superposition,[],[f8781,f217])).
fof(f8781,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') != s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) | ($spl8 | $spl13)),
  inference(resolution,[],[f8712,f304])).
fof(f8712,plain,(
  ~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))) | ($spl8 | $spl13)),
  inference(subsumption_resolution,[],[f8678,f455])).
fof(f8678,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK1) | ~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))) | $spl8),
  inference(superposition,[],[f8360,f303])).
fof(f9075,plain,(
  s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | ($spl3 | $spl8 | $spl13)),
  inference(forward_demodulation,[],[f9074,f8360])).
fof(f9074,plain,(
  s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | ($spl3 | $spl8 | $spl13)),
  inference(forward_demodulation,[],[f9073,f8360])).
fof(f9073,plain,(
  s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | ($spl3 | $spl8 | $spl13)),
  inference(subsumption_resolution,[],[f9072,f8354])).
fof(f9072,plain,(
  s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | ($spl3 | $spl8 | $spl13)),
  inference(forward_demodulation,[],[f9071,f8360])).
fof(f9071,plain,(
  s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | ($spl3 | $spl8 | $spl13)),
  inference(subsumption_resolution,[],[f9070,f455])).
fof(f9070,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK1) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | ($spl3 | $spl8)),
  inference(forward_demodulation,[],[f9062,f8360])).
fof(f9062,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | ($spl3 | $spl8)),
  inference(trivial_inequality_removal,[],[f9060])).
fof(f9060,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') != s('type.clos_known.val_approx','const.clos_known.Other_0') | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | ($spl3 | $spl8)),
  inference(superposition,[],[f8780,f217])).
fof(f9020,plain,(
  s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | ($spl0 | $spl3 | $spl8 | $spl13)),
  inference(forward_demodulation,[],[f9019,f4164])).
fof(f9019,plain,(
  s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | ($spl0 | $spl3 | $spl8 | $spl13)),
  inference(forward_demodulation,[],[f9018,f4164])).
fof(f9018,plain,(
  s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | ($spl0 | $spl3 | $spl8 | $spl13)),
  inference(subsumption_resolution,[],[f9017,f8354])).
fof(f9013,plain,(
  s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | ($spl0 | $spl3 | $spl8 | $spl13)),
  inference(forward_demodulation,[],[f9012,f4164])).
fof(f9012,plain,(
  s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | ($spl0 | $spl3 | $spl8 | $spl13)),
  inference(forward_demodulation,[],[f9011,f4164])).
fof(f9011,plain,(
  s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | ($spl0 | $spl3 | $spl8 | $spl13)),
  inference(subsumption_resolution,[],[f9010,f8354])).
fof(f9006,plain,(
  s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | ($spl0 | $spl3 | $spl8 | $spl13)),
  inference(forward_demodulation,[],[f9005,f4164])).
fof(f9005,plain,(
  s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | ($spl0 | $spl3 | $spl8 | $spl13)),
  inference(forward_demodulation,[],[f9004,f4164])).
fof(f9004,plain,(
  s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | ($spl0 | $spl3 | $spl8 | $spl13)),
  inference(subsumption_resolution,[],[f9003,f8354])).
fof(f9000,plain,(
  s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | ($spl0 | $spl3 | $spl8 | $spl13)),
  inference(forward_demodulation,[],[f8999,f4164])).
fof(f8999,plain,(
  s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | ($spl0 | $spl3 | $spl8 | $spl13)),
  inference(forward_demodulation,[],[f8998,f4164])).
fof(f8998,plain,(
  s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | ($spl0 | $spl3 | $spl8 | $spl13)),
  inference(subsumption_resolution,[],[f8997,f8354])).
fof(f8752,plain,(
  s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | ($spl3 | $spl8 | $spl13)),
  inference(forward_demodulation,[],[f8751,f8360])).
fof(f8751,plain,(
  s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | ($spl3 | $spl8 | $spl13)),
  inference(forward_demodulation,[],[f8750,f8360])).
fof(f8750,plain,(
  s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | ($spl3 | $spl8 | $spl13)),
  inference(subsumption_resolution,[],[f8749,f8354])).
fof(f8749,plain,(
  s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | ($spl3 | $spl8 | $spl13)),
  inference(forward_demodulation,[],[f8748,f8360])).
fof(f8748,plain,(
  s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | ($spl3 | $spl8 | $spl13)),
  inference(subsumption_resolution,[],[f8747,f455])).
fof(f8747,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK1) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | ($spl3 | $spl8)),
  inference(forward_demodulation,[],[f8746,f8360])).
fof(f8746,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | ($spl3 | $spl8)),
  inference(subsumption_resolution,[],[f8687,f313])).
fof(f8687,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK1) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | $spl8),
  inference(superposition,[],[f217,f8360])).
fof(f8745,plain,(
  s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | ($spl3 | $spl8 | $spl13)),
  inference(forward_demodulation,[],[f8744,f8360])).
fof(f8744,plain,(
  s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | ($spl3 | $spl8 | $spl13)),
  inference(forward_demodulation,[],[f8743,f8360])).
fof(f8743,plain,(
  s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | ($spl3 | $spl8 | $spl13)),
  inference(subsumption_resolution,[],[f8742,f8354])).
fof(f8742,plain,(
  s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | ($spl3 | $spl8 | $spl13)),
  inference(forward_demodulation,[],[f8741,f8360])).
fof(f8741,plain,(
  s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | ($spl3 | $spl8 | $spl13)),
  inference(subsumption_resolution,[],[f8740,f313])).
fof(f8740,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK1) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | ($spl8 | $spl13)),
  inference(forward_demodulation,[],[f8739,f8360])).
fof(f8739,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | ($spl8 | $spl13)),
  inference(subsumption_resolution,[],[f8686,f455])).
fof(f8686,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK1) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | $spl8),
  inference(superposition,[],[f217,f8360])).
fof(f8737,plain,(
  s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | ($spl3 | $spl8 | $spl13)),
  inference(forward_demodulation,[],[f8736,f8360])).
fof(f8736,plain,(
  s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | ($spl3 | $spl8 | $spl13)),
  inference(forward_demodulation,[],[f8735,f8360])).
fof(f8735,plain,(
  s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | ($spl3 | $spl8 | $spl13)),
  inference(subsumption_resolution,[],[f8734,f8354])).
fof(f8734,plain,(
  s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | ($spl3 | $spl8 | $spl13)),
  inference(forward_demodulation,[],[f8733,f8360])).
fof(f8733,plain,(
  s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | ($spl3 | $spl8 | $spl13)),
  inference(subsumption_resolution,[],[f8732,f313])).
fof(f8732,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK1) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | ($spl8 | $spl13)),
  inference(forward_demodulation,[],[f8731,f8360])).
fof(f8731,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | ($spl8 | $spl13)),
  inference(subsumption_resolution,[],[f8683,f455])).
fof(f8683,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK1) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | $spl8),
  inference(superposition,[],[f8360,f217])).
fof(f8730,plain,(
  s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | ($spl3 | $spl8 | $spl13)),
  inference(forward_demodulation,[],[f8729,f8360])).
fof(f8729,plain,(
  s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | ($spl3 | $spl8 | $spl13)),
  inference(forward_demodulation,[],[f8728,f8360])).
fof(f8728,plain,(
  s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | ($spl3 | $spl8 | $spl13)),
  inference(subsumption_resolution,[],[f8727,f8354])).
fof(f8727,plain,(
  s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | ($spl3 | $spl8 | $spl13)),
  inference(forward_demodulation,[],[f8726,f8360])).
fof(f8726,plain,(
  s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | ($spl3 | $spl8 | $spl13)),
  inference(subsumption_resolution,[],[f8725,f455])).
fof(f8725,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK1) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | ($spl3 | $spl8)),
  inference(forward_demodulation,[],[f8724,f8360])).
fof(f8724,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | ($spl3 | $spl8)),
  inference(subsumption_resolution,[],[f8682,f313])).
fof(f8682,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK1) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | $spl8),
  inference(superposition,[],[f8360,f217])).
fof(f450,plain,(
  s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK1)),s('type.num.num',sK5(sK1)))) | $spl6),
  inference(cnf_transformation,[],[f450_D])).
fof(f450_D,plain,(
  s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK1)),s('type.num.num',sK5(sK1)))) <=> ~$spl6),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl6])])).
fof(f6292,plain,(
  s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK1)),s('type.num.num',sK5(sK1)))) | ($spl3 | $spl11 | $spl13)),
  inference(subsumption_resolution,[],[f6291,f453])).
fof(f453,plain,(
  s('type.clos_known.val_approx',sK1) != s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7(sK1)))) | $spl11),
  inference(cnf_transformation,[],[f453_D])).
fof(f453_D,plain,(
  s('type.clos_known.val_approx',sK1) != s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7(sK1)))) <=> ~$spl11),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl11])])).
fof(f8336,plain,(
  s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK1)),s('type.num.num',sK5(sK1)))) | ($spl3 | $spl11 | $spl13 | $spl18 | $spl22)),
  inference(subsumption_resolution,[],[f8335,f1649])).
fof(f8335,plain,(
  s(bool,'T_0') = s(bool,'F_0') | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK1)),s('type.num.num',sK5(sK1)))) | ($spl3 | $spl11 | $spl13 | $spl18)),
  inference(forward_demodulation,[],[f6356,f4469])).
fof(f6356,plain,(
  s(bool,'F_0') = s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx','const.clos_known.Other_0'))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK1)),s('type.num.num',sK5(sK1)))) | ($spl3 | $spl11 | $spl13)),
  inference(subsumption_resolution,[],[f6355,f453])).
fof(f6428,plain,(
  s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK1)),s('type.num.num',sK5(sK1)))) | ($spl3 | $spl11 | $spl13 | $spl18)),
  inference(subsumption_resolution,[],[f6427,f453])).
fof(f8334,plain,(
  s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK1)),s('type.num.num',sK5(sK1)))) | ($spl11 | $spl13 | $spl34)),
  inference(subsumption_resolution,[],[f8333,f222])).
fof(f8333,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.Impossible_0') | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK1)),s('type.num.num',sK5(sK1)))) | ($spl11 | $spl13 | $spl34)),
  inference(forward_demodulation,[],[f6472,f223])).
fof(f6472,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx','const.clos_known.Other_0'))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK1)),s('type.num.num',sK5(sK1)))) | ($spl11 | $spl13 | $spl34)),
  inference(subsumption_resolution,[],[f6471,f453])).
fof(f6519,plain,(
  s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK1)),s('type.num.num',sK5(sK1)))) | ($spl11 | $spl13 | $spl25 | $spl34)),
  inference(subsumption_resolution,[],[f6518,f453])).
fof(f4424,plain,(
  s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.Int_1'(s('type.integer.int',sK0)))))) | $spl60),
  inference(cnf_transformation,[],[f4424_D])).
fof(f4424_D,plain,(
  s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.Int_1'(s('type.integer.int',sK0)))))) <=> ~$spl60),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl60])])).
fof(f5956,plain,(
  s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx',sK1))) | $spl98),
  inference(cnf_transformation,[],[f5956_D])).
fof(f5956_D,plain,(
  s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx',sK1))) <=> ~$spl98),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl98])])).
fof(f7178,plain,(
  s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx',sK1))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.Int_1'(s('type.integer.int',sK0)))))) | $spl0),
  inference(subsumption_resolution,[],[f7177,f229])).
fof(f7177,plain,(
  s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx',sK1))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.Int_1'(s('type.integer.int',sK0)))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.Int_1'(s('type.integer.int',sK0)))),s('type.num.num',sK5('const.clos_known.Int_1'(s('type.integer.int',sK0)))))) | $spl0),
  inference(subsumption_resolution,[],[f7176,f230])).
fof(f7176,plain,(
  s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx',sK1))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.Int_1'(s('type.integer.int',sK0)))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.Int_1'(s('type.integer.int',sK0)))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.Int_1'(s('type.integer.int',sK0)))),s('type.num.num',sK5('const.clos_known.Int_1'(s('type.integer.int',sK0)))))) | $spl0),
  inference(subsumption_resolution,[],[f7139,f246])).
fof(f7139,plain,(
  s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx',sK1))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.Int_1'(s('type.integer.int',sK0)))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.Int_1'(s('type.integer.int',sK0)))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.Int_1'(s('type.integer.int',sK0)))),s('type.num.num',sK5('const.clos_known.Int_1'(s('type.integer.int',sK0)))))) | $spl0),
  inference(superposition,[],[f4164,f217])).
fof(f5954,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) | $spl96),
  inference(cnf_transformation,[],[f5954_D])).
fof(f5954_D,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) <=> ~$spl96),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl96])])).
fof(f8327,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK1)),s('type.num.num',sK5(sK1)))) | ($spl0 | $spl3 | $spl11)),
  inference(subsumption_resolution,[],[f8326,f453])).
fof(f7146,plain,(
  ( ! [X0] : (s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X0))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) | ~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X0))))))) ) | $spl0),
  inference(superposition,[],[f4164,f300])).
fof(f7195,plain,(
  s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | ($spl0 | $spl3 | $spl13)),
  inference(forward_demodulation,[],[f7194,f4164])).
fof(f7194,plain,(
  s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | ($spl0 | $spl3 | $spl13)),
  inference(subsumption_resolution,[],[f7193,f455])).
fof(f7193,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK1) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | ($spl0 | $spl3)),
  inference(forward_demodulation,[],[f7192,f4164])).
fof(f7192,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | ($spl0 | $spl3)),
  inference(subsumption_resolution,[],[f7148,f313])).
fof(f7148,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK1) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | $spl0),
  inference(superposition,[],[f4164,f217])).
fof(f7203,plain,(
  s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | ($spl0 | $spl3 | $spl13)),
  inference(forward_demodulation,[],[f7202,f4164])).
fof(f7202,plain,(
  s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | ($spl0 | $spl3 | $spl13)),
  inference(subsumption_resolution,[],[f7201,f313])).
fof(f7201,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK1) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | ($spl0 | $spl13)),
  inference(forward_demodulation,[],[f7200,f4164])).
fof(f7200,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | ($spl0 | $spl13)),
  inference(subsumption_resolution,[],[f7149,f455])).
fof(f7149,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK1) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | $spl0),
  inference(superposition,[],[f4164,f217])).
fof(f7211,plain,(
  s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | ($spl0 | $spl3 | $spl13)),
  inference(forward_demodulation,[],[f7210,f4164])).
fof(f7210,plain,(
  s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | ($spl0 | $spl3 | $spl13)),
  inference(subsumption_resolution,[],[f7209,f313])).
fof(f7209,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK1) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | ($spl0 | $spl13)),
  inference(forward_demodulation,[],[f7208,f4164])).
fof(f7208,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | ($spl0 | $spl13)),
  inference(subsumption_resolution,[],[f7151,f455])).
fof(f7151,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK1) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | $spl0),
  inference(superposition,[],[f217,f4164])).
fof(f7219,plain,(
  s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | ($spl0 | $spl3 | $spl13)),
  inference(forward_demodulation,[],[f7218,f4164])).
fof(f7218,plain,(
  s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | ($spl0 | $spl3 | $spl13)),
  inference(subsumption_resolution,[],[f7217,f455])).
fof(f7217,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK1) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | ($spl0 | $spl3)),
  inference(forward_demodulation,[],[f7216,f4164])).
fof(f7216,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | ($spl0 | $spl3)),
  inference(subsumption_resolution,[],[f7152,f313])).
fof(f7152,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK1) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | $spl0),
  inference(superposition,[],[f217,f4164])).
fof(f7154,plain,(
  ( ! [X0] : (~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X0)))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X0))) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))) ) | $spl0),
  inference(superposition,[],[f300,f4164])).
fof(f7155,plain,(
  ( ! [X1] : (s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X1))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) | ~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X1))))))) ) | $spl0),
  inference(superposition,[],[f300,f4164])).
fof(f7159,plain,(
  ( ! [X5] : (p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X5)))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') != s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))) ) | $spl0),
  inference(superposition,[],[f302,f4164])).
fof(f8316,plain,(
  s(bool,'F_0') != s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) | $spl111),
  inference(cnf_transformation,[],[f8316_D])).
fof(f8316_D,plain,(
  s(bool,'F_0') != s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) <=> ~$spl111),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl111])])).
fof(f7262,plain,(
  ( ! [X1] : (s(bool,'F_0') != s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X1))) | ~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X1))))))) ) | $spl0),
  inference(superposition,[],[f4167,f300])).
fof(f8318,plain,(
  s(bool,'F_0') != s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK1)),s('type.num.num',sK5(sK1)))) | ($spl0 | $spl11 | $spl13)),
  inference(subsumption_resolution,[],[f8317,f453])).
fof(f8314,plain,(
  s(bool,'F_0') != s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK1)),s('type.num.num',sK5(sK1)))) | ($spl0 | $spl3 | $spl11)),
  inference(subsumption_resolution,[],[f8313,f453])).
fof(f8310,plain,(
  s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK1)),s('type.num.num',sK5(sK1)))) | ($spl11 | $spl13 | $spl18 | $spl22 | $spl34)),
  inference(subsumption_resolution,[],[f8309,f1649])).
fof(f8309,plain,(
  s(bool,'T_0') = s(bool,'F_0') | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK1)),s('type.num.num',sK5(sK1)))) | ($spl11 | $spl13 | $spl18 | $spl34)),
  inference(forward_demodulation,[],[f8308,f4469])).
fof(f8308,plain,(
  s(bool,'F_0') = s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx','const.clos_known.Other_0'))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK1)),s('type.num.num',sK5(sK1)))) | ($spl11 | $spl13 | $spl34)),
  inference(subsumption_resolution,[],[f8307,f453])).
fof(f8306,plain,(
  s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK1)),s('type.num.num',sK5(sK1)))) | ($spl3 | $spl11 | $spl13 | $spl22 | $spl34)),
  inference(subsumption_resolution,[],[f8305,f1649])).
fof(f8305,plain,(
  s(bool,'T_0') = s(bool,'F_0') | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK1)),s('type.num.num',sK5(sK1)))) | ($spl3 | $spl11 | $spl13 | $spl22 | $spl34)),
  inference(forward_demodulation,[],[f8304,f831])).
fof(f8304,plain,(
  s(bool,'F_0') = s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK1)),s('type.num.num',sK5(sK1)))) | ($spl3 | $spl11 | $spl13 | $spl34)),
  inference(subsumption_resolution,[],[f8303,f453])).
fof(f8298,plain,(
  s(bool,'T_0') = s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) | $spl106),
  inference(cnf_transformation,[],[f8298_D])).
fof(f8298_D,plain,(
  s(bool,'T_0') = s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) <=> ~$spl106),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl106])])).
fof(f7413,plain,(
  ( ! [X1] : (s(bool,'T_0') = s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X1))) | ~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X1))))))) ) | $spl0),
  inference(superposition,[],[f4169,f300])).
fof(f8300,plain,(
  s(bool,'T_0') = s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK1)),s('type.num.num',sK5(sK1)))) | ($spl0 | $spl11 | $spl13)),
  inference(subsumption_resolution,[],[f8299,f453])).
fof(f8296,plain,(
  s(bool,'T_0') = s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK1)),s('type.num.num',sK5(sK1)))) | ($spl0 | $spl3 | $spl11)),
  inference(subsumption_resolution,[],[f8295,f453])).
fof(f8293,plain,(
  s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK1)),s('type.num.num',sK5(sK1)))) | ($spl11 | $spl13 | $spl18 | $spl34)),
  inference(subsumption_resolution,[],[f8292,f453])).
fof(f8290,plain,(
  s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK1)),s('type.num.num',sK5(sK1)))) | ($spl3 | $spl11 | $spl13 | $spl22 | $spl34)),
  inference(subsumption_resolution,[],[f8289,f453])).
fof(f8258,plain,(
  s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK1)),s('type.num.num',sK5(sK1)))) | ($spl0 | $spl3 | $spl11 | $spl57)),
  inference(subsumption_resolution,[],[f8257,f453])).
fof(f5195,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') != s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx',sK1))) | $spl83),
  inference(cnf_transformation,[],[f5195_D])).
fof(f5195_D,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') != s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx',sK1))) <=> ~$spl83),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl83])])).
fof(f8252,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') != s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx',sK1))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.Int_1'(s('type.integer.int',sK0)))))) | ($spl0 | $spl3)),
  inference(subsumption_resolution,[],[f8251,f229])).
fof(f8251,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') != s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx',sK1))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.Int_1'(s('type.integer.int',sK0)))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.Int_1'(s('type.integer.int',sK0)))),s('type.num.num',sK5('const.clos_known.Int_1'(s('type.integer.int',sK0)))))) | ($spl0 | $spl3)),
  inference(subsumption_resolution,[],[f8250,f230])).
fof(f8250,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') != s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx',sK1))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.Int_1'(s('type.integer.int',sK0)))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.Int_1'(s('type.integer.int',sK0)))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.Int_1'(s('type.integer.int',sK0)))),s('type.num.num',sK5('const.clos_known.Int_1'(s('type.integer.int',sK0)))))) | ($spl0 | $spl3)),
  inference(subsumption_resolution,[],[f8030,f246])).
fof(f8030,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') != s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx',sK1))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.Int_1'(s('type.integer.int',sK0)))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.Int_1'(s('type.integer.int',sK0)))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.Int_1'(s('type.integer.int',sK0)))),s('type.num.num',sK5('const.clos_known.Int_1'(s('type.integer.int',sK0)))))) | ($spl0 | $spl3)),
  inference(superposition,[],[f5930,f217])).
fof(f8248,plain,(
  s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK1)),s('type.num.num',sK5(sK1)))) | ($spl0 | $spl3 | $spl11 | $spl13)),
  inference(subsumption_resolution,[],[f8247,f453])).
fof(f8243,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') != s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK1)),s('type.num.num',sK5(sK1)))) | ($spl0 | $spl3 | $spl11)),
  inference(subsumption_resolution,[],[f8242,f453])).
fof(f8061,plain,(
  s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | ($spl0 | $spl3 | $spl13)),
  inference(forward_demodulation,[],[f8060,f4164])).
fof(f8060,plain,(
  s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | ($spl0 | $spl3 | $spl13)),
  inference(subsumption_resolution,[],[f8059,f455])).
fof(f8059,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK1) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | ($spl0 | $spl3)),
  inference(forward_demodulation,[],[f8043,f4164])).
fof(f8043,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | ($spl0 | $spl3)),
  inference(trivial_inequality_removal,[],[f8041])).
fof(f8041,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') != s('type.clos_known.val_approx','const.clos_known.Other_0') | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | ($spl0 | $spl3)),
  inference(superposition,[],[f5930,f217])).
fof(f8196,plain,(
  $false | ($spl0 | $spl3 | $spl6)),
  inference(subsumption_resolution,[],[f8148,f313])).
fof(f8148,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK1) | ($spl0 | $spl6)),
  inference(backward_demodulation,[],[f6580,f4164])).
fof(f6580,plain,(
  ( ! [X5] : (s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X5))),s('type.clos_known.val_approx',sK1)))) ) | $spl6),
  inference(superposition,[],[f206,f450])).
fof(f206,plain,(
  ( ! [X2,X0,X1] : (s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X2))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X1),s('type.num.num',X0)))))) )),
  inference(cnf_transformation,[],[f76])).
fof(f76,plain,(
  ! [X0,X1,X2] : s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X2))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X1),s('type.num.num',X0)))))),
  inference(rectify,[],[f28])).
fof(f28,axiom,(
  ! [X28,X29,X22] : s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X22))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X29),s('type.num.num',X28)))))),
  file('thm.clos_knownProof.subapprox_Int|split|1','thm.clos_known.merge_def|split|14')).
fof(f8195,plain,(
  $false | ($spl0 | $spl3 | $spl6)),
  inference(trivial_inequality_removal,[],[f8170])).
fof(f8170,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') != s('type.clos_known.val_approx','const.clos_known.Other_0') | ($spl0 | $spl3 | $spl6)),
  inference(superposition,[],[f5930,f6580])).
fof(f7944,plain,(
  $false | $spl56),
  inference(subsumption_resolution,[],[f7904,f246])).
fof(f7904,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))) | $spl56),
  inference(superposition,[],[f257,f5412])).
fof(f5412,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) | $spl56),
  inference(resolution,[],[f4218,f303])).
fof(f7941,plain,(
  $false | $spl56),
  inference(subsumption_resolution,[],[f7900,f246])).
fof(f7900,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))) | $spl56),
  inference(superposition,[],[f5412,f257])).
fof(f5190,plain,(
  s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx',sK1)))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx',sK1)))))) | $spl76),
  inference(cnf_transformation,[],[f5190_D])).
fof(f5190_D,plain,(
  s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx',sK1)))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx',sK1)))))) <=> ~$spl76),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl76])])).
fof(f5192,plain,(
  s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx',sK1)))))) | $spl78),
  inference(cnf_transformation,[],[f5192_D])).
fof(f5192_D,plain,(
  s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx',sK1)))))) <=> ~$spl78),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl78])])).
fof(f5194,plain,(
  s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx',sK1)))))) | $spl80),
  inference(cnf_transformation,[],[f5194_D])).
fof(f5194_D,plain,(
  s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx',sK1)))))) <=> ~$spl80),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl80])])).
fof(f5196,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx',sK1))) | $spl82),
  inference(cnf_transformation,[],[f5196_D])).
fof(f5196_D,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx',sK1))) <=> ~$spl82),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl82])])).
fof(f6541,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx',sK1))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx',sK1)))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx',sK1)))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx',sK1)))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx',sK1)))))) | $spl63),
  inference(trivial_inequality_removal,[],[f6540])).
fof(f6540,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') != s('type.clos_known.val_approx','const.clos_known.Impossible_0') | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx',sK1))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx',sK1)))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx',sK1)))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx',sK1)))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx',sK1)))))) | $spl63),
  inference(superposition,[],[f4524,f217])).
fof(f4524,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') != s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx',sK1))) | $spl63),
  inference(cnf_transformation,[],[f4524_D])).
fof(f4524_D,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') != s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx',sK1))) <=> ~$spl63),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl63])])).
fof(f6284,plain,(
  ( ! [X0] : (s('type.clos_known.val_approx',sK1) != s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X0))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx',sK1))) | ~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx',sK1))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X0))))))) ) | $spl3),
  inference(superposition,[],[f757,f300])).
fof(f6257,plain,(
  s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK1)),s('type.num.num',sK5(sK1)))) | ($spl3 | $spl11 | $spl13)),
  inference(subsumption_resolution,[],[f6256,f313])).
fof(f6256,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK1) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK1)),s('type.num.num',sK5(sK1)))) | ($spl11 | $spl13)),
  inference(subsumption_resolution,[],[f6255,f455])).
fof(f6255,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK1) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK1) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK1)),s('type.num.num',sK5(sK1)))) | $spl11),
  inference(trivial_inequality_removal,[],[f6246])).
fof(f6246,plain,(
  s('type.clos_known.val_approx',sK1) != s('type.clos_known.val_approx',sK1) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK1) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK1) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK1)),s('type.num.num',sK5(sK1)))) | $spl11),
  inference(superposition,[],[f453,f217])).
fof(f4221,plain,(
  p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx','const.clos_known.Other_0')))) | $spl58),
  inference(cnf_transformation,[],[f4221_D])).
fof(f4221_D,plain,(
  p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx','const.clos_known.Other_0')))) <=> ~$spl58),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl58])])).
fof(f6238,plain,(
  p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx','const.clos_known.Other_0')))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK1)),s('type.num.num',sK5(sK1)))) | ($spl0 | $spl13)),
  inference(subsumption_resolution,[],[f6214,f455])).
fof(f6214,plain,(
  p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx','const.clos_known.Other_0')))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK1) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK1)),s('type.num.num',sK5(sK1)))) | $spl0),
  inference(superposition,[],[f310,f217])).
fof(f6185,plain,(
  s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK1)),s('type.num.num',sK5(sK1)))) | ($spl13 | $spl18 | $spl34)),
  inference(subsumption_resolution,[],[f6184,f307])).
fof(f307,plain,(
  p(s(bool,'T_0'))),
  inference(trivial_inequality_removal,[],[f243])).
fof(f243,plain,(
  ( ! [X0,X1] : (p(s(bool,'T_0')) | s(X0,X1) != s(X0,X1)) )),
  inference(cnf_transformation,[],[f164])).
fof(f164,plain,(
  ! [X0,X1] : ((s(X0,X1) != s(X0,X1) | p(s(bool,'T_0'))) & (~p(s(bool,'T_0')) | s(X0,X1) = s(X0,X1)))),
  inference(nnf_transformation,[],[f110])).
fof(f110,plain,(
  ! [X0,X1] : (s(X0,X1) = s(X0,X1) <=> p(s(bool,'T_0')))),
  inference(flattening,[],[f109])).
fof(f109,plain,(
  ! [X0] : ! [X1] : (s(X0,X1) = s(X0,X1) <=> p(s(bool,'T_0')))),
  inference(rectify,[],[f29])).
fof(f29,axiom,(
  ! [X30] : ! [X31] : (s(X30,X31) = s(X30,X31) <=> p(s(bool,'T_0')))),
  file('thm.clos_knownProof.subapprox_Int|split|1','thm.bool.REFL_CLAUSE')).
fof(f6184,plain,(
  ~p(s(bool,'T_0')) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK1)),s('type.num.num',sK5(sK1)))) | ($spl13 | $spl18 | $spl34)),
  inference(forward_demodulation,[],[f6183,f4469])).
fof(f6183,plain,(
  ~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx','const.clos_known.Other_0')))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK1)),s('type.num.num',sK5(sK1)))) | ($spl13 | $spl18 | $spl34)),
  inference(subsumption_resolution,[],[f6168,f455])).
fof(f6168,plain,(
  ~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx','const.clos_known.Other_0')))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK1) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK1)),s('type.num.num',sK5(sK1)))) | ($spl13 | $spl18 | $spl34)),
  inference(superposition,[],[f5371,f217])).
fof(f5371,plain,(
  ~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx',sK1)))) | ($spl13 | $spl18 | $spl34)),
  inference(subsumption_resolution,[],[f5370,f307])).
fof(f5370,plain,(
  ~p(s(bool,'T_0')) | ~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx',sK1)))) | ($spl13 | $spl18 | $spl34)),
  inference(forward_demodulation,[],[f5353,f4469])).
fof(f5353,plain,(
  ~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx','const.clos_known.Other_0')))) | ~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx',sK1)))) | ($spl13 | $spl34)),
  inference(superposition,[],[f1855,f305])).
fof(f6147,plain,(
  s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK1)),s('type.num.num',sK5(sK1)))) | ($spl3 | $spl13 | $spl22 | $spl34)),
  inference(subsumption_resolution,[],[f6146,f307])).
fof(f6146,plain,(
  ~p(s(bool,'T_0')) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK1)),s('type.num.num',sK5(sK1)))) | ($spl3 | $spl13 | $spl22 | $spl34)),
  inference(forward_demodulation,[],[f6145,f831])).
fof(f6145,plain,(
  ~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK1)),s('type.num.num',sK5(sK1)))) | ($spl3 | $spl13 | $spl34)),
  inference(subsumption_resolution,[],[f6125,f313])).
fof(f6125,plain,(
  ~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK1) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK1)),s('type.num.num',sK5(sK1)))) | ($spl13 | $spl34)),
  inference(superposition,[],[f1855,f217])).
fof(f6144,plain,(
  s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK1)),s('type.num.num',sK5(sK1)))) | ($spl13 | $spl18 | $spl34)),
  inference(subsumption_resolution,[],[f6143,f307])).
fof(f6143,plain,(
  ~p(s(bool,'T_0')) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK1)),s('type.num.num',sK5(sK1)))) | ($spl13 | $spl18 | $spl34)),
  inference(forward_demodulation,[],[f6142,f4469])).
fof(f6142,plain,(
  ~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx','const.clos_known.Other_0')))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK1)),s('type.num.num',sK5(sK1)))) | ($spl13 | $spl34)),
  inference(subsumption_resolution,[],[f6124,f455])).
fof(f6124,plain,(
  ~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx','const.clos_known.Other_0')))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK1) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK1)),s('type.num.num',sK5(sK1)))) | ($spl13 | $spl34)),
  inference(superposition,[],[f1855,f217])).
fof(f6096,plain,(
  s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK1)),s('type.num.num',sK5(sK1)))) | ($spl3 | $spl13)),
  inference(subsumption_resolution,[],[f6094,f313])).
fof(f6094,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK1) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK1)),s('type.num.num',sK5(sK1)))) | $spl13),
  inference(trivial_inequality_removal,[],[f6093])).
fof(f6093,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') != s('type.clos_known.val_approx','const.clos_known.Impossible_0') | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK1) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK1)),s('type.num.num',sK5(sK1)))) | $spl13),
  inference(superposition,[],[f455,f217])).
fof(f6088,plain,(
  $false | ($spl10 | $spl12)),
  inference(subsumption_resolution,[],[f6087,f246])).
fof(f6087,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7(sK1)))) | ($spl10 | $spl12)),
  inference(forward_demodulation,[],[f454,f456])).
fof(f6081,plain,(
  $false | ($spl10 | $spl12)),
  inference(subsumption_resolution,[],[f4287,f456])).
fof(f4287,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') != s('type.clos_known.val_approx',sK1) | $spl10),
  inference(superposition,[],[f246,f454])).
fof(f6078,plain,(
  $false | ($spl10 | $spl12)),
  inference(subsumption_resolution,[],[f2328,f456])).
fof(f2328,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') != s('type.clos_known.val_approx',sK1) | $spl10),
  inference(superposition,[],[f246,f454])).
fof(f6074,plain,(
  $false | ($spl3 | $spl10 | $spl12)),
  inference(subsumption_resolution,[],[f2860,f456])).
fof(f2860,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') != s('type.clos_known.val_approx',sK1) | ($spl3 | $spl10)),
  inference(superposition,[],[f246,f2371])).
fof(f6069,plain,(
  $false | ($spl10 | $spl12)),
  inference(subsumption_resolution,[],[f5254,f456])).
fof(f5254,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') != s('type.clos_known.val_approx',sK1) | $spl10),
  inference(superposition,[],[f246,f454])).
fof(f6064,plain,(
  $false | ($spl8 | $spl12)),
  inference(subsumption_resolution,[],[f6063,f245])).
fof(f245,plain,(
  ( ! [X0] : (s('type.clos_known.val_approx','const.clos_known.Impossible_0') != s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X0)))) )),
  inference(cnf_transformation,[],[f112])).
fof(f112,plain,(
  ! [X0] : s('type.clos_known.val_approx','const.clos_known.Impossible_0') != s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X0)))),
  inference(flattening,[],[f111])).
fof(f111,plain,(
  ! [X0] : ~s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X0)))),
  inference(rectify,[],[f49])).
fof(f49,axiom,(
  ! [X7] : ~s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X7)))),
  file('thm.clos_knownProof.subapprox_Int|split|1','thm.clos_known.val_approx_distinct|split|6')).
fof(f6063,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6(sK1)))) | ($spl8 | $spl12)),
  inference(forward_demodulation,[],[f452,f456])).
fof(f6062,plain,(
  $false | ($spl6 | $spl12)),
  inference(subsumption_resolution,[],[f6061,f231])).
fof(f231,plain,(
  ( ! [X0,X1] : (s('type.clos_known.val_approx','const.clos_known.Impossible_0') != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X1),s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f102])).
fof(f102,plain,(
  ! [X0,X1] : s('type.clos_known.val_approx','const.clos_known.Impossible_0') != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X1),s('type.num.num',X0)))),
  inference(flattening,[],[f101])).
fof(f101,plain,(
  ! [X0,X1] : ~s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X1),s('type.num.num',X0)))),
  inference(rectify,[],[f52])).
fof(f52,axiom,(
  ! [X44,X50] : ~s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X50),s('type.num.num',X44)))),
  file('thm.clos_knownProof.subapprox_Int|split|1','thm.clos_known.val_approx_distinct|split|3')).
fof(f6061,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK1)),s('type.num.num',sK5(sK1)))) | ($spl6 | $spl12)),
  inference(forward_demodulation,[],[f450,f456])).
fof(f5197,plain,(
  ( ! [X1] : (s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X1))) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx',sK1))) | ~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx',sK1))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X1))))))) ) | $spl84),
  inference(cnf_transformation,[],[f5197_D])).
fof(f5197_D,plain,(
  ( ! [X1] : (s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X1))) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx',sK1))) | ~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx',sK1))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X1))))))) ) <=> ~$spl84),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl84])])).
fof(f455,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') != s('type.clos_known.val_approx',sK1) | $spl13),
  inference(cnf_transformation,[],[f455_D])).
fof(f455_D,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') != s('type.clos_known.val_approx',sK1) <=> ~$spl13),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl13])])).
fof(f5530,plain,(
  ( ! [X1] : (s('type.clos_known.val_approx','const.clos_known.Impossible_0') != s('type.clos_known.val_approx',sK1) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X1))) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx',sK1))) | ~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx',sK1))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X1))))))) ) | $spl3),
  inference(superposition,[],[f757,f300])).
fof(f5532,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') != s('type.clos_known.val_approx',sK1) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx',sK1))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx',sK1)))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx',sK1)))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx',sK1)))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx',sK1)))))) | $spl3),
  inference(superposition,[],[f757,f217])).
fof(f456,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK1) | $spl12),
  inference(cnf_transformation,[],[f456_D])).
fof(f456_D,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK1) <=> ~$spl12),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl12])])).
fof(f5993,plain,(
  s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK1) | ($spl0 | $spl3)),
  inference(forward_demodulation,[],[f5992,f4164])).
fof(f5992,plain,(
  s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK1) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | ($spl0 | $spl3)),
  inference(forward_demodulation,[],[f5991,f4164])).
fof(f5991,plain,(
  s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK1) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | ($spl0 | $spl3)),
  inference(forward_demodulation,[],[f5874,f4164])).
fof(f5874,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK1) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | ($spl0 | $spl3)),
  inference(forward_demodulation,[],[f5873,f4164])).
fof(f5873,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | ($spl0 | $spl3)),
  inference(subsumption_resolution,[],[f5829,f313])).
fof(f5829,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK1) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | $spl0),
  inference(superposition,[],[f4164,f217])).
fof(f5990,plain,(
  s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK1) | ($spl0 | $spl3)),
  inference(forward_demodulation,[],[f5989,f4164])).
fof(f5989,plain,(
  s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK1) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | ($spl0 | $spl3)),
  inference(forward_demodulation,[],[f5988,f4164])).
fof(f5988,plain,(
  s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK1) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | ($spl0 | $spl3)),
  inference(forward_demodulation,[],[f5987,f4164])).
fof(f5987,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK1) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | ($spl0 | $spl3)),
  inference(subsumption_resolution,[],[f5986,f313])).
fof(f5986,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK1) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK1) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | $spl0),
  inference(forward_demodulation,[],[f5830,f4164])).
fof(f5830,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK1) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | $spl0),
  inference(superposition,[],[f4164,f217])).
fof(f5985,plain,(
  s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK1) | ($spl0 | $spl3)),
  inference(forward_demodulation,[],[f5984,f4164])).
fof(f5984,plain,(
  s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK1) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | ($spl0 | $spl3)),
  inference(forward_demodulation,[],[f5983,f4164])).
fof(f5983,plain,(
  s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK1) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | ($spl0 | $spl3)),
  inference(forward_demodulation,[],[f5982,f4164])).
fof(f5982,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK1) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | ($spl0 | $spl3)),
  inference(subsumption_resolution,[],[f5981,f313])).
fof(f5981,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK1) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK1) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | $spl0),
  inference(forward_demodulation,[],[f5832,f4164])).
fof(f5832,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK1) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | $spl0),
  inference(superposition,[],[f217,f4164])).
fof(f5980,plain,(
  s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK1) | ($spl0 | $spl3)),
  inference(forward_demodulation,[],[f5979,f4164])).
fof(f5979,plain,(
  s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK1) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | ($spl0 | $spl3)),
  inference(forward_demodulation,[],[f5978,f4164])).
fof(f5978,plain,(
  s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK1) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | ($spl0 | $spl3)),
  inference(forward_demodulation,[],[f5899,f4164])).
fof(f5899,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK1) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | ($spl0 | $spl3)),
  inference(forward_demodulation,[],[f5898,f4164])).
fof(f5898,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | ($spl0 | $spl3)),
  inference(subsumption_resolution,[],[f5833,f313])).
fof(f5833,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK1) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | $spl0),
  inference(superposition,[],[f217,f4164])).
fof(f5972,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK1) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK1)),s('type.num.num',sK5(sK1)))) | ($spl3 | $spl18)),
  inference(subsumption_resolution,[],[f5971,f307])).
fof(f5971,plain,(
  ~p(s(bool,'T_0')) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK1) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK1)),s('type.num.num',sK5(sK1)))) | ($spl3 | $spl18)),
  inference(forward_demodulation,[],[f775,f4469])).
fof(f775,plain,(
  ~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx','const.clos_known.Other_0')))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK1) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK1)),s('type.num.num',sK5(sK1)))) | $spl3),
  inference(superposition,[],[f448,f217])).
fof(f5970,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK1) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK1)),s('type.num.num',sK5(sK1)))) | ($spl3 | $spl18 | $spl22)),
  inference(subsumption_resolution,[],[f5969,f1649])).
fof(f5969,plain,(
  s(bool,'T_0') = s(bool,'F_0') | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK1) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK1)),s('type.num.num',sK5(sK1)))) | ($spl3 | $spl18)),
  inference(forward_demodulation,[],[f1388,f4469])).
fof(f1388,plain,(
  s(bool,'F_0') = s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx','const.clos_known.Other_0'))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK1) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK1)),s('type.num.num',sK5(sK1)))) | $spl3),
  inference(superposition,[],[f760,f217])).
fof(f5208,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK1) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK1)),s('type.num.num',sK5(sK1)))) | ($spl3 | $spl18)),
  inference(subsumption_resolution,[],[f1472,f4469])).
fof(f1472,plain,(
  s(bool,'T_0') != s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx','const.clos_known.Other_0'))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK1) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK1)),s('type.num.num',sK5(sK1)))) | $spl3),
  inference(superposition,[],[f762,f217])).
fof(f5968,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK1) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK1)),s('type.num.num',sK5(sK1)))) | $spl34),
  inference(subsumption_resolution,[],[f5967,f222])).
fof(f5967,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.Impossible_0') | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK1) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK1)),s('type.num.num',sK5(sK1)))) | $spl34),
  inference(forward_demodulation,[],[f1819,f223])).
fof(f1819,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx','const.clos_known.Other_0'))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK1) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK1)),s('type.num.num',sK5(sK1)))) | $spl34),
  inference(superposition,[],[f1252,f217])).
fof(f4189,plain,(
  p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx','const.clos_known.Other_0')))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK1) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK1)),s('type.num.num',sK5(sK1)))) | $spl0),
  inference(superposition,[],[f310,f217])).
fof(f5174,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK1) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK1)),s('type.num.num',sK5(sK1)))) | ($spl25 | $spl34)),
  inference(subsumption_resolution,[],[f2587,f223])).
fof(f2587,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') != s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx','const.clos_known.Other_0'))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK1) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK1)),s('type.num.num',sK5(sK1)))) | ($spl25 | $spl34)),
  inference(superposition,[],[f1874,f217])).
fof(f5168,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK1) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK1)),s('type.num.num',sK5(sK1)))) | $spl3),
  inference(subsumption_resolution,[],[f4511,f223])).
fof(f4511,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') != s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx','const.clos_known.Other_0'))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK1) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK1)),s('type.num.num',sK5(sK1)))) | $spl3),
  inference(superposition,[],[f757,f217])).
fof(f5959,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK1) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK1)),s('type.num.num',sK5(sK1)))) | $spl3),
  inference(subsumption_resolution,[],[f5525,f223])).
fof(f5525,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') != s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx','const.clos_known.Other_0'))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK1) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK1)),s('type.num.num',sK5(sK1)))) | $spl3),
  inference(superposition,[],[f757,f217])).
fof(f5966,plain,(
  s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK1)),s('type.num.num',sK5(sK1)))) | ($spl13 | $spl18 | $spl34)),
  inference(subsumption_resolution,[],[f5965,f307])).
fof(f5965,plain,(
  ~p(s(bool,'T_0')) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK1)),s('type.num.num',sK5(sK1)))) | ($spl13 | $spl18 | $spl34)),
  inference(forward_demodulation,[],[f5964,f4469])).
fof(f5964,plain,(
  ~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx','const.clos_known.Other_0')))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK1)),s('type.num.num',sK5(sK1)))) | ($spl13 | $spl34)),
  inference(subsumption_resolution,[],[f5355,f455])).
fof(f5355,plain,(
  ~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx','const.clos_known.Other_0')))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK1) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK1)),s('type.num.num',sK5(sK1)))) | ($spl13 | $spl34)),
  inference(superposition,[],[f1855,f217])).
fof(f5963,plain,(
  s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK1)),s('type.num.num',sK5(sK1)))) | ($spl3 | $spl13 | $spl22 | $spl34)),
  inference(subsumption_resolution,[],[f5962,f307])).
fof(f5962,plain,(
  ~p(s(bool,'T_0')) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK1)),s('type.num.num',sK5(sK1)))) | ($spl3 | $spl13 | $spl22 | $spl34)),
  inference(forward_demodulation,[],[f5961,f831])).
fof(f5961,plain,(
  ~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK1)),s('type.num.num',sK5(sK1)))) | ($spl3 | $spl13 | $spl34)),
  inference(subsumption_resolution,[],[f5356,f313])).
fof(f5356,plain,(
  ~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK1) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK1)),s('type.num.num',sK5(sK1)))) | ($spl13 | $spl34)),
  inference(superposition,[],[f1855,f217])).
fof(f5960,plain,(
  s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK1)),s('type.num.num',sK5(sK1)))) | ($spl3 | $spl13)),
  inference(subsumption_resolution,[],[f5959,f455])).
fof(f5859,plain,(
  s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx',sK1))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.Int_1'(s('type.integer.int',sK0)))))) | $spl0),
  inference(subsumption_resolution,[],[f5858,f229])).
fof(f5858,plain,(
  s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx',sK1))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.Int_1'(s('type.integer.int',sK0)))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.Int_1'(s('type.integer.int',sK0)))),s('type.num.num',sK5('const.clos_known.Int_1'(s('type.integer.int',sK0)))))) | $spl0),
  inference(subsumption_resolution,[],[f5857,f230])).
fof(f5857,plain,(
  s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx',sK1))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.Int_1'(s('type.integer.int',sK0)))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.Int_1'(s('type.integer.int',sK0)))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.Int_1'(s('type.integer.int',sK0)))),s('type.num.num',sK5('const.clos_known.Int_1'(s('type.integer.int',sK0)))))) | $spl0),
  inference(subsumption_resolution,[],[f5820,f246])).
fof(f5820,plain,(
  s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx',sK1))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.Int_1'(s('type.integer.int',sK0)))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.Int_1'(s('type.integer.int',sK0)))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.Int_1'(s('type.integer.int',sK0)))),s('type.num.num',sK5('const.clos_known.Int_1'(s('type.integer.int',sK0)))))) | $spl0),
  inference(superposition,[],[f4164,f217])).
fof(f5952,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK1)),s('type.num.num',sK5(sK1)))) | ($spl0 | $spl3)),
  inference(subsumption_resolution,[],[f5825,f313])).
fof(f5825,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK1) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK1)),s('type.num.num',sK5(sK1)))) | $spl0),
  inference(superposition,[],[f4164,f217])).
fof(f5951,plain,(
  s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | ($spl0 | $spl3 | $spl13)),
  inference(forward_demodulation,[],[f5877,f4164])).
fof(f5877,plain,(
  s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | ($spl0 | $spl3 | $spl13)),
  inference(forward_demodulation,[],[f5876,f4164])).
fof(f5876,plain,(
  s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | ($spl0 | $spl3 | $spl13)),
  inference(forward_demodulation,[],[f5875,f4164])).
fof(f5875,plain,(
  s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | ($spl0 | $spl3 | $spl13)),
  inference(subsumption_resolution,[],[f5874,f455])).
fof(f5950,plain,(
  s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | ($spl0 | $spl3 | $spl13)),
  inference(forward_demodulation,[],[f5888,f4164])).
fof(f5888,plain,(
  s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | ($spl0 | $spl3 | $spl13)),
  inference(forward_demodulation,[],[f5887,f4164])).
fof(f5887,plain,(
  s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | ($spl0 | $spl3 | $spl13)),
  inference(forward_demodulation,[],[f5886,f4164])).
fof(f5886,plain,(
  s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | ($spl0 | $spl3 | $spl13)),
  inference(subsumption_resolution,[],[f5885,f313])).
fof(f5885,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK1) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | ($spl0 | $spl13)),
  inference(forward_demodulation,[],[f5884,f4164])).
fof(f5884,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | ($spl0 | $spl13)),
  inference(subsumption_resolution,[],[f5830,f455])).
fof(f5949,plain,(
  s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | ($spl0 | $spl3 | $spl13)),
  inference(forward_demodulation,[],[f5895,f4164])).
fof(f5895,plain,(
  s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | ($spl0 | $spl3 | $spl13)),
  inference(forward_demodulation,[],[f5894,f4164])).
fof(f5894,plain,(
  s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | ($spl0 | $spl3 | $spl13)),
  inference(forward_demodulation,[],[f5893,f4164])).
fof(f5893,plain,(
  s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | ($spl0 | $spl3 | $spl13)),
  inference(subsumption_resolution,[],[f5892,f313])).
fof(f5892,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK1) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | ($spl0 | $spl13)),
  inference(forward_demodulation,[],[f5891,f4164])).
fof(f5891,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | ($spl0 | $spl13)),
  inference(subsumption_resolution,[],[f5832,f455])).
fof(f5946,plain,(
  s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | ($spl0 | $spl3 | $spl13)),
  inference(forward_demodulation,[],[f5902,f4164])).
fof(f5902,plain,(
  s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | ($spl0 | $spl3 | $spl13)),
  inference(forward_demodulation,[],[f5901,f4164])).
fof(f5901,plain,(
  s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | ($spl0 | $spl3 | $spl13)),
  inference(forward_demodulation,[],[f5900,f4164])).
fof(f5900,plain,(
  s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | ($spl0 | $spl3 | $spl13)),
  inference(subsumption_resolution,[],[f5899,f455])).
fof(f5944,plain,(
  s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK1)),s('type.num.num',sK5(sK1)))) | ($spl3 | $spl13)),
  inference(subsumption_resolution,[],[f5168,f455])).
fof(f5942,plain,(
  s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK1)),s('type.num.num',sK5(sK1)))) | ($spl13 | $spl25 | $spl34)),
  inference(subsumption_resolution,[],[f5174,f455])).
fof(f5941,plain,(
  p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx','const.clos_known.Other_0')))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK1)),s('type.num.num',sK5(sK1)))) | ($spl0 | $spl13)),
  inference(subsumption_resolution,[],[f4189,f455])).
fof(f5940,plain,(
  s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK1)),s('type.num.num',sK5(sK1)))) | ($spl13 | $spl34)),
  inference(subsumption_resolution,[],[f5939,f222])).
fof(f5939,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.Impossible_0') | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK1)),s('type.num.num',sK5(sK1)))) | ($spl13 | $spl34)),
  inference(forward_demodulation,[],[f5938,f223])).
fof(f5938,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx','const.clos_known.Other_0'))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK1)),s('type.num.num',sK5(sK1)))) | ($spl13 | $spl34)),
  inference(subsumption_resolution,[],[f1819,f455])).
fof(f5937,plain,(
  s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK1)),s('type.num.num',sK5(sK1)))) | ($spl3 | $spl13 | $spl18)),
  inference(subsumption_resolution,[],[f5208,f455])).
fof(f5936,plain,(
  s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK1)),s('type.num.num',sK5(sK1)))) | ($spl3 | $spl13 | $spl18 | $spl22)),
  inference(subsumption_resolution,[],[f5935,f1649])).
fof(f5935,plain,(
  s(bool,'T_0') = s(bool,'F_0') | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK1)),s('type.num.num',sK5(sK1)))) | ($spl3 | $spl13 | $spl18)),
  inference(forward_demodulation,[],[f5934,f4469])).
fof(f5934,plain,(
  s(bool,'F_0') = s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx','const.clos_known.Other_0'))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK1)),s('type.num.num',sK5(sK1)))) | ($spl3 | $spl13)),
  inference(subsumption_resolution,[],[f1388,f455])).
fof(f5933,plain,(
  s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK1)),s('type.num.num',sK5(sK1)))) | ($spl3 | $spl13 | $spl18)),
  inference(subsumption_resolution,[],[f5932,f307])).
fof(f5932,plain,(
  ~p(s(bool,'T_0')) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK1)),s('type.num.num',sK5(sK1)))) | ($spl3 | $spl13 | $spl18)),
  inference(forward_demodulation,[],[f5931,f4469])).
fof(f5931,plain,(
  ~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx','const.clos_known.Other_0')))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK1)),s('type.num.num',sK5(sK1)))) | ($spl3 | $spl13)),
  inference(subsumption_resolution,[],[f775,f455])).
fof(f5228,plain,(
  s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK1)),s('type.num.num',sK5(sK1)))) | ($spl3 | $spl13)),
  inference(subsumption_resolution,[],[f5226,f313])).
fof(f5226,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK1) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK1)),s('type.num.num',sK5(sK1)))) | $spl13),
  inference(trivial_inequality_removal,[],[f5225])).
fof(f5225,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') != s('type.clos_known.val_approx','const.clos_known.Impossible_0') | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK1) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK1)),s('type.num.num',sK5(sK1)))) | $spl13),
  inference(superposition,[],[f455,f217])).
fof(f5904,plain,(
  s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | ($spl0 | $spl3 | $spl10 | $spl13)),
  inference(forward_demodulation,[],[f5903,f4164])).
fof(f5903,plain,(
  s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | ($spl0 | $spl3 | $spl10 | $spl13)),
  inference(subsumption_resolution,[],[f5902,f2855])).
fof(f5897,plain,(
  s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | ($spl0 | $spl3 | $spl10 | $spl13)),
  inference(forward_demodulation,[],[f5896,f4164])).
fof(f5896,plain,(
  s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | ($spl0 | $spl3 | $spl10 | $spl13)),
  inference(subsumption_resolution,[],[f5895,f2855])).
fof(f5890,plain,(
  s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | ($spl0 | $spl3 | $spl10 | $spl13)),
  inference(forward_demodulation,[],[f5889,f4164])).
fof(f5889,plain,(
  s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | ($spl0 | $spl3 | $spl10 | $spl13)),
  inference(subsumption_resolution,[],[f5888,f2855])).
fof(f5879,plain,(
  s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | ($spl0 | $spl3 | $spl10 | $spl13)),
  inference(forward_demodulation,[],[f5878,f4164])).
fof(f5878,plain,(
  s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))))) | ($spl0 | $spl3 | $spl10 | $spl13)),
  inference(subsumption_resolution,[],[f5877,f2855])).
fof(f5781,plain,(
  s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | ($spl3 | $spl10 | $spl13)),
  inference(forward_demodulation,[],[f5780,f5255])).
fof(f5255,plain,(
  s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) | $spl10),
  inference(superposition,[],[f257,f454])).
fof(f5780,plain,(
  s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | ($spl3 | $spl10 | $spl13)),
  inference(subsumption_resolution,[],[f5779,f2855])).
fof(f5779,plain,(
  s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | ($spl3 | $spl10 | $spl13)),
  inference(forward_demodulation,[],[f5778,f5255])).
fof(f5778,plain,(
  s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | ($spl3 | $spl10 | $spl13)),
  inference(forward_demodulation,[],[f5777,f5255])).
fof(f5777,plain,(
  s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | ($spl3 | $spl10 | $spl13)),
  inference(subsumption_resolution,[],[f5776,f455])).
fof(f5776,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK1) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | ($spl3 | $spl10)),
  inference(forward_demodulation,[],[f5775,f5255])).
fof(f5775,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | ($spl3 | $spl10)),
  inference(subsumption_resolution,[],[f5720,f313])).
fof(f5720,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK1) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | $spl10),
  inference(superposition,[],[f217,f5255])).
fof(f5774,plain,(
  s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | ($spl3 | $spl10 | $spl13)),
  inference(forward_demodulation,[],[f5773,f5255])).
fof(f5773,plain,(
  s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | ($spl3 | $spl10 | $spl13)),
  inference(subsumption_resolution,[],[f5772,f2855])).
fof(f5772,plain,(
  s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | ($spl3 | $spl10 | $spl13)),
  inference(forward_demodulation,[],[f5771,f5255])).
fof(f5771,plain,(
  s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | ($spl3 | $spl10 | $spl13)),
  inference(forward_demodulation,[],[f5770,f5255])).
fof(f5770,plain,(
  s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | ($spl3 | $spl10 | $spl13)),
  inference(subsumption_resolution,[],[f5769,f313])).
fof(f5769,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK1) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | ($spl10 | $spl13)),
  inference(forward_demodulation,[],[f5768,f5255])).
fof(f5768,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | ($spl10 | $spl13)),
  inference(subsumption_resolution,[],[f5719,f455])).
fof(f5719,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK1) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | $spl10),
  inference(superposition,[],[f217,f5255])).
fof(f5767,plain,(
  s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | ($spl3 | $spl10 | $spl13)),
  inference(forward_demodulation,[],[f5766,f5255])).
fof(f5766,plain,(
  s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | ($spl3 | $spl10 | $spl13)),
  inference(subsumption_resolution,[],[f5765,f2855])).
fof(f5765,plain,(
  s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | ($spl3 | $spl10 | $spl13)),
  inference(forward_demodulation,[],[f5764,f5255])).
fof(f5764,plain,(
  s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | ($spl3 | $spl10 | $spl13)),
  inference(forward_demodulation,[],[f5763,f5255])).
fof(f5763,plain,(
  s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | ($spl3 | $spl10 | $spl13)),
  inference(subsumption_resolution,[],[f5762,f313])).
fof(f5762,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK1) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | ($spl10 | $spl13)),
  inference(forward_demodulation,[],[f5761,f5255])).
fof(f5761,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | ($spl10 | $spl13)),
  inference(subsumption_resolution,[],[f5716,f455])).
fof(f5716,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK1) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | $spl10),
  inference(superposition,[],[f5255,f217])).
fof(f5760,plain,(
  s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | ($spl3 | $spl10 | $spl13)),
  inference(forward_demodulation,[],[f5759,f5255])).
fof(f5759,plain,(
  s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | ($spl3 | $spl10 | $spl13)),
  inference(subsumption_resolution,[],[f5758,f2855])).
fof(f5758,plain,(
  s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | ($spl3 | $spl10 | $spl13)),
  inference(forward_demodulation,[],[f5757,f5255])).
fof(f5757,plain,(
  s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | ($spl3 | $spl10 | $spl13)),
  inference(forward_demodulation,[],[f5756,f5255])).
fof(f5756,plain,(
  s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | ($spl3 | $spl10 | $spl13)),
  inference(subsumption_resolution,[],[f5755,f455])).
fof(f5755,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK1) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | ($spl3 | $spl10)),
  inference(forward_demodulation,[],[f5754,f5255])).
fof(f5754,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | ($spl3 | $spl10)),
  inference(subsumption_resolution,[],[f5715,f313])).
fof(f5715,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK1) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | $spl10),
  inference(superposition,[],[f5255,f217])).
fof(f5529,plain,(
  ( ! [X0] : (s('type.clos_known.val_approx',sK1) != s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X0))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx',sK1))) | ~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx',sK1))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X0))))))) ) | $spl3),
  inference(superposition,[],[f757,f300])).
fof(f5229,plain,(
  s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6(sK1)))) | ($spl3 | $spl7 | $spl13)),
  inference(subsumption_resolution,[],[f5228,f449])).
fof(f5215,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK1) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6(sK1)))) | ($spl3 | $spl7 | $spl18)),
  inference(subsumption_resolution,[],[f5214,f307])).
fof(f5214,plain,(
  ~p(s(bool,'T_0')) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK1) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6(sK1)))) | ($spl3 | $spl7 | $spl18)),
  inference(forward_demodulation,[],[f5213,f4469])).
fof(f5213,plain,(
  ~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx','const.clos_known.Other_0')))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK1) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6(sK1)))) | ($spl3 | $spl7)),
  inference(subsumption_resolution,[],[f775,f449])).
fof(f5212,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK1) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6(sK1)))) | ($spl3 | $spl7 | $spl18 | $spl22)),
  inference(subsumption_resolution,[],[f5211,f1649])).
fof(f5211,plain,(
  s(bool,'T_0') = s(bool,'F_0') | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK1) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6(sK1)))) | ($spl3 | $spl7 | $spl18)),
  inference(forward_demodulation,[],[f5210,f4469])).
fof(f5210,plain,(
  s(bool,'F_0') = s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx','const.clos_known.Other_0'))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK1) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6(sK1)))) | ($spl3 | $spl7)),
  inference(subsumption_resolution,[],[f1388,f449])).
fof(f5209,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK1) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6(sK1)))) | ($spl3 | $spl7 | $spl18)),
  inference(subsumption_resolution,[],[f5208,f449])).
fof(f5207,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK1) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6(sK1)))) | ($spl7 | $spl34)),
  inference(subsumption_resolution,[],[f5206,f222])).
fof(f5206,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.Impossible_0') | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK1) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6(sK1)))) | ($spl7 | $spl34)),
  inference(forward_demodulation,[],[f5205,f223])).
fof(f5205,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx','const.clos_known.Other_0'))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK1) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6(sK1)))) | ($spl7 | $spl34)),
  inference(subsumption_resolution,[],[f1819,f449])).
fof(f5203,plain,(
  ~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx',sK1)))) | $spl89),
  inference(cnf_transformation,[],[f5203_D])).
fof(f5203_D,plain,(
  ~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx',sK1)))) <=> ~$spl89),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl89])])).
fof(f1821,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK1) | ~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx',sK1)))) | $spl34),
  inference(superposition,[],[f1252,f303])).
fof(f1825,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK1) | ~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx',sK1)))) | $spl34),
  inference(superposition,[],[f303,f1252])).
fof(f5204,plain,(
  p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx',sK1)))) | $spl88),
  inference(cnf_transformation,[],[f5204_D])).
fof(f5204_D,plain,(
  p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx',sK1)))) <=> ~$spl88),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl88])])).
fof(f1826,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') != s('type.clos_known.val_approx',sK1) | p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx',sK1)))) | $spl34),
  inference(superposition,[],[f304,f1252])).
fof(f4160,plain,(
  ( ! [X4] : (s('type.clos_known.val_approx','const.clos_known.Impossible_0') != s('type.clos_known.val_approx',sK1) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X4))) | ~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X4))))))) ) | $spl5),
  inference(superposition,[],[f315,f300])).
fof(f5201,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') != s('type.clos_known.val_approx',sK1) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.Int_1'(s('type.integer.int',sK0)))))) | $spl5),
  inference(subsumption_resolution,[],[f5200,f229])).
fof(f5200,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') != s('type.clos_known.val_approx',sK1) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.Int_1'(s('type.integer.int',sK0)))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.Int_1'(s('type.integer.int',sK0)))),s('type.num.num',sK5('const.clos_known.Int_1'(s('type.integer.int',sK0)))))) | $spl5),
  inference(subsumption_resolution,[],[f5199,f230])).
fof(f5199,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') != s('type.clos_known.val_approx',sK1) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.Int_1'(s('type.integer.int',sK0)))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.Int_1'(s('type.integer.int',sK0)))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.Int_1'(s('type.integer.int',sK0)))),s('type.num.num',sK5('const.clos_known.Int_1'(s('type.integer.int',sK0)))))) | $spl5),
  inference(subsumption_resolution,[],[f4162,f216])).
fof(f4162,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') != s('type.clos_known.val_approx',sK1) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.Int_1'(s('type.integer.int',sK0)))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.Int_1'(s('type.integer.int',sK0)))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.Int_1'(s('type.integer.int',sK0)))),s('type.num.num',sK5('const.clos_known.Int_1'(s('type.integer.int',sK0)))))) | $spl5),
  inference(superposition,[],[f315,f217])).
fof(f5198,plain,(
  p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx','const.clos_known.Other_0')))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK1) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6(sK1)))) | ($spl0 | $spl7)),
  inference(subsumption_resolution,[],[f4189,f449])).
fof(f4516,plain,(
  ( ! [X1] : (s('type.clos_known.val_approx','const.clos_known.Impossible_0') != s('type.clos_known.val_approx',sK1) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X1))) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx',sK1))) | ~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx',sK1))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X1))))))) ) | $spl3),
  inference(superposition,[],[f757,f300])).
fof(f4518,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') != s('type.clos_known.val_approx',sK1) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx',sK1))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx',sK1)))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx',sK1)))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx',sK1))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx',sK1)))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx',sK1)))))) | $spl3),
  inference(superposition,[],[f757,f217])).
fof(f5188,plain,(
  ( ! [X4] : (s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X4))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.Int_1'(s('type.integer.int',sK0)))))) | ~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.Int_1'(s('type.integer.int',sK0)))))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X4))))))) ) | $spl74),
  inference(cnf_transformation,[],[f5188_D])).
fof(f5188_D,plain,(
  ( ! [X4] : (s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X4))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.Int_1'(s('type.integer.int',sK0)))))) | ~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.Int_1'(s('type.integer.int',sK0)))))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X4))))))) ) <=> ~$spl74),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl74])])).
fof(f4986,plain,(
  ( ! [X4] : (s('type.clos_known.val_approx','const.clos_known.Impossible_0') != s('type.clos_known.val_approx',sK1) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X4))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.Int_1'(s('type.integer.int',sK0)))))) | ~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.Int_1'(s('type.integer.int',sK0)))))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X4))))))) ) | $spl15),
  inference(superposition,[],[f528,f300])).
fof(f528,plain,(
  s('type.clos_known.val_approx',sK1) != s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.Int_1'(s('type.integer.int',sK0)))))) | $spl15),
  inference(cnf_transformation,[],[f528_D])).
fof(f528_D,plain,(
  s('type.clos_known.val_approx',sK1) != s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.Int_1'(s('type.integer.int',sK0)))))) <=> ~$spl15),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl15])])).
fof(f5187,plain,(
  s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.Int_1'(s('type.integer.int',sK0)))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.Int_1'(s('type.integer.int',sK0))))))))) | $spl72),
  inference(cnf_transformation,[],[f5187_D])).
fof(f5187_D,plain,(
  s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.Int_1'(s('type.integer.int',sK0)))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.Int_1'(s('type.integer.int',sK0))))))))) <=> ~$spl72),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl72])])).
fof(f5185,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') != s('type.clos_known.val_approx',sK1) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.Int_1'(s('type.integer.int',sK0)))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.Int_1'(s('type.integer.int',sK0))))))))) | $spl15),
  inference(subsumption_resolution,[],[f5184,f229])).
fof(f5184,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') != s('type.clos_known.val_approx',sK1) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.Int_1'(s('type.integer.int',sK0)))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.Int_1'(s('type.integer.int',sK0))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.Int_1'(s('type.integer.int',sK0)))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.Int_1'(s('type.integer.int',sK0))))))),s('type.num.num',sK5('const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.Int_1'(s('type.integer.int',sK0))))))))) | $spl15),
  inference(subsumption_resolution,[],[f5183,f230])).
fof(f5183,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') != s('type.clos_known.val_approx',sK1) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.Int_1'(s('type.integer.int',sK0)))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.Int_1'(s('type.integer.int',sK0))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.Int_1'(s('type.integer.int',sK0)))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.Int_1'(s('type.integer.int',sK0))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.Int_1'(s('type.integer.int',sK0)))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.Int_1'(s('type.integer.int',sK0))))))),s('type.num.num',sK5('const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.Int_1'(s('type.integer.int',sK0))))))))) | $spl15),
  inference(subsumption_resolution,[],[f4988,f216])).
fof(f4988,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') != s('type.clos_known.val_approx',sK1) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.Int_1'(s('type.integer.int',sK0)))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.Int_1'(s('type.integer.int',sK0)))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.Int_1'(s('type.integer.int',sK0))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.Int_1'(s('type.integer.int',sK0)))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.Int_1'(s('type.integer.int',sK0))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.Int_1'(s('type.integer.int',sK0)))))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.Int_1'(s('type.integer.int',sK0))))))),s('type.num.num',sK5('const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.Int_1'(s('type.integer.int',sK0))))))))) | $spl15),
  inference(superposition,[],[f528,f217])).
fof(f5182,plain,(
  ( ! [X5] : (~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK1)),s('type.num.num',sK5(sK1)))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X5))))))) ) | $spl70),
  inference(cnf_transformation,[],[f5182_D])).
fof(f5182_D,plain,(
  ( ! [X5] : (~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK1)),s('type.num.num',sK5(sK1)))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X5))))))) ) <=> ~$spl70),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl70])])).
fof(f5181,plain,(
  ( ! [X5] : (s('type.clos_known.val_approx','const.clos_known.Impossible_0') != s('type.clos_known.val_approx',sK1) | ~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK1)),s('type.num.num',sK5(sK1)))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X5))))))) ) | $spl7),
  inference(subsumption_resolution,[],[f5028,f229])).
fof(f5028,plain,(
  ( ! [X5] : (s('type.clos_known.val_approx','const.clos_known.Impossible_0') != s('type.clos_known.val_approx',sK1) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X5))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK1)),s('type.num.num',sK5(sK1)))) | ~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK1)),s('type.num.num',sK5(sK1)))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X5))))))) ) | $spl7),
  inference(superposition,[],[f449,f300])).
fof(f5180,plain,(
  s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK1)),s('type.num.num',sK5(sK1)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',sK4(sK1)),s('type.num.num',sK5(sK1))))),s('type.num.num',sK5('const.clos_known.Clos_2'(s('type.num.num',sK4(sK1)),s('type.num.num',sK5(sK1))))))) | $spl68),
  inference(cnf_transformation,[],[f5180_D])).
fof(f5180_D,plain,(
  s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK1)),s('type.num.num',sK5(sK1)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',sK4(sK1)),s('type.num.num',sK5(sK1))))),s('type.num.num',sK5('const.clos_known.Clos_2'(s('type.num.num',sK4(sK1)),s('type.num.num',sK5(sK1))))))) <=> ~$spl68),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl68])])).
fof(f5178,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') != s('type.clos_known.val_approx',sK1) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK1)),s('type.num.num',sK5(sK1)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',sK4(sK1)),s('type.num.num',sK5(sK1))))),s('type.num.num',sK5('const.clos_known.Clos_2'(s('type.num.num',sK4(sK1)),s('type.num.num',sK5(sK1))))))) | $spl7),
  inference(subsumption_resolution,[],[f5177,f228])).
fof(f5177,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') != s('type.clos_known.val_approx',sK1) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK1)),s('type.num.num',sK5(sK1)))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.Clos_2'(s('type.num.num',sK4(sK1)),s('type.num.num',sK5(sK1))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK1)),s('type.num.num',sK5(sK1)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',sK4(sK1)),s('type.num.num',sK5(sK1))))),s('type.num.num',sK5('const.clos_known.Clos_2'(s('type.num.num',sK4(sK1)),s('type.num.num',sK5(sK1))))))) | $spl7),
  inference(subsumption_resolution,[],[f5176,f229])).
fof(f5176,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') != s('type.clos_known.val_approx',sK1) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK1)),s('type.num.num',sK5(sK1)))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.Clos_2'(s('type.num.num',sK4(sK1)),s('type.num.num',sK5(sK1))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK1)),s('type.num.num',sK5(sK1)))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.Clos_2'(s('type.num.num',sK4(sK1)),s('type.num.num',sK5(sK1))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK1)),s('type.num.num',sK5(sK1)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',sK4(sK1)),s('type.num.num',sK5(sK1))))),s('type.num.num',sK5('const.clos_known.Clos_2'(s('type.num.num',sK4(sK1)),s('type.num.num',sK5(sK1))))))) | $spl7),
  inference(subsumption_resolution,[],[f5030,f210])).
fof(f210,plain,(
  ( ! [X0,X1] : (s('type.clos_known.val_approx','const.clos_known.Other_0') != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X1),s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f79])).
fof(f79,plain,(
  ! [X0,X1] : s('type.clos_known.val_approx','const.clos_known.Other_0') != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X1),s('type.num.num',X0)))),
  inference(flattening,[],[f78])).
fof(f78,plain,(
  ! [X0,X1] : ~s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X1),s('type.num.num',X0)))),
  inference(rectify,[],[f55])).
fof(f55,axiom,(
  ! [X44,X50] : ~s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X50),s('type.num.num',X44)))),
  file('thm.clos_knownProof.subapprox_Int|split|1','thm.clos_known.val_approx_distinct|split|2')).
fof(f5030,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') != s('type.clos_known.val_approx',sK1) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK1)),s('type.num.num',sK5(sK1)))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK1)),s('type.num.num',sK5(sK1)))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.Clos_2'(s('type.num.num',sK4(sK1)),s('type.num.num',sK5(sK1))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK1)),s('type.num.num',sK5(sK1)))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.Clos_2'(s('type.num.num',sK4(sK1)),s('type.num.num',sK5(sK1))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK1)),s('type.num.num',sK5(sK1)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',sK4(sK1)),s('type.num.num',sK5(sK1))))),s('type.num.num',sK5('const.clos_known.Clos_2'(s('type.num.num',sK4(sK1)),s('type.num.num',sK5(sK1))))))) | $spl7),
  inference(superposition,[],[f449,f217])).
fof(f5175,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK1) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6(sK1)))) | ($spl7 | $spl25 | $spl34)),
  inference(subsumption_resolution,[],[f5174,f449])).
fof(f5171,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') != s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6(sK1)))) | ($spl3 | $spl7 | $spl25 | $spl34)),
  inference(subsumption_resolution,[],[f5170,f449])).
fof(f5170,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') != s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK1)),s('type.num.num',sK5(sK1)))) | ($spl3 | $spl25 | $spl34)),
  inference(subsumption_resolution,[],[f2588,f313])).
fof(f2588,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') != s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK1) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK1)),s('type.num.num',sK5(sK1)))) | ($spl25 | $spl34)),
  inference(superposition,[],[f1874,f217])).
fof(f5169,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK1) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6(sK1)))) | ($spl3 | $spl7)),
  inference(subsumption_resolution,[],[f5168,f449])).
fof(f5164,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK1) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6(sK1)))) | ($spl3 | $spl7)),
  inference(subsumption_resolution,[],[f5031,f313])).
fof(f5031,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK1) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK1) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6(sK1)))) | $spl7),
  inference(trivial_inequality_removal,[],[f5023])).
fof(f5023,plain,(
  s('type.clos_known.val_approx',sK1) != s('type.clos_known.val_approx',sK1) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK1) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK1) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6(sK1)))) | $spl7),
  inference(superposition,[],[f449,f217])).
fof(f5163,plain,(
  $false | ($spl10 | $spl62)),
  inference(subsumption_resolution,[],[f5162,f222])).
fof(f5162,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.Impossible_0') | ($spl10 | $spl62)),
  inference(forward_demodulation,[],[f4525,f2322])).
fof(f2322,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx',sK1))) | $spl10),
  inference(superposition,[],[f220,f454])).
fof(f220,plain,(
  ( ! [X0] : (s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X0)))))) )),
  inference(cnf_transformation,[],[f91])).
fof(f91,plain,(
  ! [X0] : s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X0)))))),
  inference(rectify,[],[f40])).
fof(f40,axiom,(
  ! [X47] : s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X47)))))),
  file('thm.clos_knownProof.subapprox_Int|split|1','thm.clos_known.merge_def|split|19')).
fof(f4905,plain,(
  s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | ($spl3 | $spl10 | $spl13)),
  inference(forward_demodulation,[],[f4904,f2329])).
fof(f4904,plain,(
  s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | ($spl3 | $spl10 | $spl13)),
  inference(subsumption_resolution,[],[f4903,f2855])).
fof(f4903,plain,(
  s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | ($spl3 | $spl10 | $spl13)),
  inference(forward_demodulation,[],[f4902,f2329])).
fof(f4902,plain,(
  s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | ($spl3 | $spl10 | $spl13)),
  inference(forward_demodulation,[],[f4901,f2329])).
fof(f4901,plain,(
  s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | ($spl3 | $spl10 | $spl13)),
  inference(subsumption_resolution,[],[f4900,f455])).
fof(f4900,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK1) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | ($spl3 | $spl10)),
  inference(forward_demodulation,[],[f4899,f2329])).
fof(f4899,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | ($spl3 | $spl10)),
  inference(subsumption_resolution,[],[f4842,f313])).
fof(f4842,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK1) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | $spl10),
  inference(superposition,[],[f217,f2329])).
fof(f4898,plain,(
  s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | ($spl3 | $spl10 | $spl13)),
  inference(forward_demodulation,[],[f4897,f2329])).
fof(f4897,plain,(
  s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | ($spl3 | $spl10 | $spl13)),
  inference(subsumption_resolution,[],[f4896,f2855])).
fof(f4896,plain,(
  s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | ($spl3 | $spl10 | $spl13)),
  inference(forward_demodulation,[],[f4895,f2329])).
fof(f4895,plain,(
  s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | ($spl3 | $spl10 | $spl13)),
  inference(forward_demodulation,[],[f4894,f2329])).
fof(f4894,plain,(
  s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | ($spl3 | $spl10 | $spl13)),
  inference(subsumption_resolution,[],[f4893,f313])).
fof(f4893,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK1) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | ($spl10 | $spl13)),
  inference(forward_demodulation,[],[f4892,f2329])).
fof(f4892,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | ($spl10 | $spl13)),
  inference(subsumption_resolution,[],[f4841,f455])).
fof(f4841,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK1) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | $spl10),
  inference(superposition,[],[f217,f2329])).
fof(f4890,plain,(
  s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | ($spl3 | $spl10 | $spl13)),
  inference(forward_demodulation,[],[f4889,f2329])).
fof(f4889,plain,(
  s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | ($spl3 | $spl10 | $spl13)),
  inference(subsumption_resolution,[],[f4888,f2855])).
fof(f4888,plain,(
  s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | ($spl3 | $spl10 | $spl13)),
  inference(forward_demodulation,[],[f4887,f2329])).
fof(f4887,plain,(
  s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | ($spl3 | $spl10 | $spl13)),
  inference(forward_demodulation,[],[f4886,f2329])).
fof(f4886,plain,(
  s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | ($spl3 | $spl10 | $spl13)),
  inference(subsumption_resolution,[],[f4885,f313])).
fof(f4885,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK1) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | ($spl10 | $spl13)),
  inference(forward_demodulation,[],[f4884,f2329])).
fof(f4884,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | ($spl10 | $spl13)),
  inference(subsumption_resolution,[],[f4838,f455])).
fof(f4838,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK1) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | $spl10),
  inference(superposition,[],[f2329,f217])).
fof(f4883,plain,(
  s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | ($spl3 | $spl10 | $spl13)),
  inference(forward_demodulation,[],[f4882,f2329])).
fof(f4882,plain,(
  s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | ($spl3 | $spl10 | $spl13)),
  inference(subsumption_resolution,[],[f4881,f2855])).
fof(f4881,plain,(
  s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | ($spl3 | $spl10 | $spl13)),
  inference(forward_demodulation,[],[f4880,f2329])).
fof(f4880,plain,(
  s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | ($spl3 | $spl10 | $spl13)),
  inference(forward_demodulation,[],[f4879,f2329])).
fof(f4879,plain,(
  s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | ($spl3 | $spl10 | $spl13)),
  inference(subsumption_resolution,[],[f4878,f455])).
fof(f4878,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK1) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | ($spl3 | $spl10)),
  inference(forward_demodulation,[],[f4877,f2329])).
fof(f4877,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | ($spl3 | $spl10)),
  inference(subsumption_resolution,[],[f4837,f313])).
fof(f4837,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK1) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | $spl10),
  inference(superposition,[],[f2329,f217])).
fof(f4686,plain,(
  $false | ($spl5 | $spl14)),
  inference(subsumption_resolution,[],[f4685,f229])).
fof(f4685,plain,(
  s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.Int_1'(s('type.integer.int',sK0)))),s('type.num.num',sK5('const.clos_known.Int_1'(s('type.integer.int',sK0)))))) | ($spl5 | $spl14)),
  inference(subsumption_resolution,[],[f4684,f230])).
fof(f4684,plain,(
  s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.Int_1'(s('type.integer.int',sK0)))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.Int_1'(s('type.integer.int',sK0)))),s('type.num.num',sK5('const.clos_known.Int_1'(s('type.integer.int',sK0)))))) | ($spl5 | $spl14)),
  inference(subsumption_resolution,[],[f4683,f216])).
fof(f4683,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.Int_1'(s('type.integer.int',sK0)))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.Int_1'(s('type.integer.int',sK0)))),s('type.num.num',sK5('const.clos_known.Int_1'(s('type.integer.int',sK0)))))) | ($spl5 | $spl14)),
  inference(subsumption_resolution,[],[f4682,f246])).
fof(f4682,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.Int_1'(s('type.integer.int',sK0)))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.Int_1'(s('type.integer.int',sK0)))),s('type.num.num',sK5('const.clos_known.Int_1'(s('type.integer.int',sK0)))))) | ($spl5 | $spl14)),
  inference(subsumption_resolution,[],[f4611,f315])).
fof(f4611,plain,(
  s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.Int_1'(s('type.integer.int',sK0)))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.Int_1'(s('type.integer.int',sK0)))),s('type.num.num',sK5('const.clos_known.Int_1'(s('type.integer.int',sK0)))))) | $spl14),
  inference(superposition,[],[f217,f529])).
fof(f4662,plain,(
  $false | ($spl5 | $spl14)),
  inference(subsumption_resolution,[],[f4661,f229])).
fof(f4661,plain,(
  s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.Int_1'(s('type.integer.int',sK0)))),s('type.num.num',sK5('const.clos_known.Int_1'(s('type.integer.int',sK0)))))) | ($spl5 | $spl14)),
  inference(subsumption_resolution,[],[f4660,f230])).
fof(f4660,plain,(
  s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.Int_1'(s('type.integer.int',sK0)))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.Int_1'(s('type.integer.int',sK0)))),s('type.num.num',sK5('const.clos_known.Int_1'(s('type.integer.int',sK0)))))) | ($spl5 | $spl14)),
  inference(subsumption_resolution,[],[f4659,f216])).
fof(f4659,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.Int_1'(s('type.integer.int',sK0)))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.Int_1'(s('type.integer.int',sK0)))),s('type.num.num',sK5('const.clos_known.Int_1'(s('type.integer.int',sK0)))))) | ($spl5 | $spl14)),
  inference(subsumption_resolution,[],[f4658,f246])).
fof(f4658,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.Int_1'(s('type.integer.int',sK0)))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.Int_1'(s('type.integer.int',sK0)))),s('type.num.num',sK5('const.clos_known.Int_1'(s('type.integer.int',sK0)))))) | ($spl5 | $spl14)),
  inference(subsumption_resolution,[],[f4602,f315])).
fof(f4602,plain,(
  s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.Int_1'(s('type.integer.int',sK0)))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.Int_1'(s('type.integer.int',sK0)))),s('type.num.num',sK5('const.clos_known.Int_1'(s('type.integer.int',sK0)))))) | $spl14),
  inference(superposition,[],[f529,f217])).
fof(f4515,plain,(
  ( ! [X0] : (s('type.clos_known.val_approx',sK1) != s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X0))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx',sK1))) | ~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx',sK1))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X0))))))) ) | $spl3),
  inference(superposition,[],[f757,f300])).
fof(f4461,plain,(
  $false | $spl19),
  inference(subsumption_resolution,[],[f4431,f223])).
fof(f4431,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') != s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx','const.clos_known.Other_0'))) | $spl19),
  inference(resolution,[],[f749,f304])).
fof(f4460,plain,(
  $false | $spl19),
  inference(trivial_inequality_removal,[],[f4430])).
fof(f4430,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') != s('type.clos_known.val_approx','const.clos_known.Other_0') | $spl19),
  inference(resolution,[],[f749,f306])).
fof(f749,plain,(
  ~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx','const.clos_known.Other_0')))) | $spl19),
  inference(cnf_transformation,[],[f749_D])).
fof(f749_D,plain,(
  ~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx','const.clos_known.Other_0')))) <=> ~$spl19),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl19])])).
fof(f4422,plain,(
  ~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx','const.clos_known.Other_0')))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.Int_1'(s('type.integer.int',sK0)))))) | ($spl0 | $spl3)),
  inference(subsumption_resolution,[],[f4421,f229])).
fof(f4421,plain,(
  ~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx','const.clos_known.Other_0')))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.Int_1'(s('type.integer.int',sK0)))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.Int_1'(s('type.integer.int',sK0)))),s('type.num.num',sK5('const.clos_known.Int_1'(s('type.integer.int',sK0)))))) | ($spl0 | $spl3)),
  inference(subsumption_resolution,[],[f4420,f230])).
fof(f4420,plain,(
  ~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx','const.clos_known.Other_0')))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.Int_1'(s('type.integer.int',sK0)))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.Int_1'(s('type.integer.int',sK0)))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.Int_1'(s('type.integer.int',sK0)))),s('type.num.num',sK5('const.clos_known.Int_1'(s('type.integer.int',sK0)))))) | ($spl0 | $spl3)),
  inference(subsumption_resolution,[],[f4403,f246])).
fof(f4403,plain,(
  ~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx','const.clos_known.Other_0')))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.Int_1'(s('type.integer.int',sK0)))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.Int_1'(s('type.integer.int',sK0)))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.Int_1'(s('type.integer.int',sK0)))),s('type.num.num',sK5('const.clos_known.Int_1'(s('type.integer.int',sK0)))))) | ($spl0 | $spl3)),
  inference(superposition,[],[f4204,f217])).
fof(f4204,plain,(
  ~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0)))))) | ($spl0 | $spl3)),
  inference(subsumption_resolution,[],[f4203,f293])).
fof(f4203,plain,(
  p(s(bool,'F_0')) | ~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0)))))) | ($spl0 | $spl3)),
  inference(forward_demodulation,[],[f4182,f760])).
fof(f4182,plain,(
  p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx',sK1)))) | ~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0)))))) | $spl0),
  inference(superposition,[],[f310,f305])).
fof(f4261,plain,(
  s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK1)),s('type.num.num',sK5(sK1)))) | ($spl3 | $spl13 | $spl22 | $spl34)),
  inference(subsumption_resolution,[],[f4260,f307])).
fof(f4260,plain,(
  ~p(s(bool,'T_0')) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK1)),s('type.num.num',sK5(sK1)))) | ($spl3 | $spl13 | $spl22 | $spl34)),
  inference(forward_demodulation,[],[f4259,f831])).
fof(f4259,plain,(
  ~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK1)),s('type.num.num',sK5(sK1)))) | ($spl3 | $spl13 | $spl34)),
  inference(subsumption_resolution,[],[f4241,f313])).
fof(f4241,plain,(
  ~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK1) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK1)),s('type.num.num',sK5(sK1)))) | ($spl13 | $spl34)),
  inference(superposition,[],[f1855,f217])).
fof(f4258,plain,(
  ~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx','const.clos_known.Other_0')))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK1)),s('type.num.num',sK5(sK1)))) | ($spl13 | $spl34)),
  inference(subsumption_resolution,[],[f4240,f455])).
fof(f4240,plain,(
  ~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx','const.clos_known.Other_0')))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK1) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK1)),s('type.num.num',sK5(sK1)))) | ($spl13 | $spl34)),
  inference(superposition,[],[f1855,f217])).
fof(f4218,plain,(
  p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))) | $spl56),
  inference(cnf_transformation,[],[f4218_D])).
fof(f4218_D,plain,(
  p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))) <=> ~$spl56),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl56])])).
fof(f4222,plain,(
  p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK1)),s('type.num.num',sK5(sK1)))) | ($spl0 | $spl3)),
  inference(subsumption_resolution,[],[f4190,f313])).
fof(f4190,plain,(
  p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK1) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK1)),s('type.num.num',sK5(sK1)))) | $spl0),
  inference(superposition,[],[f310,f217])).
fof(f4219,plain,(
  p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx','const.clos_known.Other_0')))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK1)),s('type.num.num',sK5(sK1)))) | ($spl0 | $spl13)),
  inference(subsumption_resolution,[],[f4189,f455])).
fof(f4188,plain,(
  ( ! [X1] : (p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X1))) | ~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X1))))))) ) | $spl0),
  inference(superposition,[],[f310,f300])).
fof(f4133,plain,(
  s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK1)),s('type.num.num',sK5(sK1)))) | ($spl13 | $spl34)),
  inference(subsumption_resolution,[],[f4132,f222])).
fof(f4132,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.Impossible_0') | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK1)),s('type.num.num',sK5(sK1)))) | ($spl13 | $spl34)),
  inference(forward_demodulation,[],[f1851,f223])).
fof(f1851,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx','const.clos_known.Other_0'))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK1)),s('type.num.num',sK5(sK1)))) | ($spl13 | $spl34)),
  inference(subsumption_resolution,[],[f1819,f455])).
fof(f4091,plain,(
  $false | ($spl1 | $spl4)),
  inference(subsumption_resolution,[],[f4090,f293])).
fof(f4090,plain,(
  p(s(bool,'F_0')) | ($spl1 | $spl4)),
  inference(forward_demodulation,[],[f4070,f721])).
fof(f721,plain,(
  s(bool,'F_0') = s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx',sK1))) | ($spl1 | $spl4)),
  inference(resolution,[],[f563,f248])).
fof(f563,plain,(
  ~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx',sK1)))) | ($spl1 | $spl4)),
  inference(forward_demodulation,[],[f311,f314])).
fof(f4070,plain,(
  p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx',sK1)))) | $spl4),
  inference(equality_resolution,[],[f532])).
fof(f532,plain,(
  ( ! [X16] : (s('type.clos_known.val_approx',sK1) != s('type.clos_known.val_approx',X16) | p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',X16),s('type.clos_known.val_approx',sK1))))) ) | $spl4),
  inference(forward_demodulation,[],[f485,f314])).
fof(f485,plain,(
  ( ! [X16] : (p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',X16),s('type.clos_known.val_approx',sK1)))) | s('type.clos_known.val_approx',X16) != s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0)))) ) | $spl4),
  inference(superposition,[],[f301,f314])).
fof(f4086,plain,(
  $false | ($spl1 | $spl4)),
  inference(subsumption_resolution,[],[f4085,f293])).
fof(f4085,plain,(
  p(s(bool,'F_0')) | ($spl1 | $spl4)),
  inference(forward_demodulation,[],[f4084,f721])).
fof(f4084,plain,(
  p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx',sK1)))) | $spl4),
  inference(forward_demodulation,[],[f4071,f482])).
fof(f482,plain,(
  s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) | $spl4),
  inference(superposition,[],[f257,f314])).
fof(f4071,plain,(
  p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))),s('type.clos_known.val_approx',sK1)))) | $spl4),
  inference(trivial_inequality_removal,[],[f4059])).
fof(f4059,plain,(
  s('type.clos_known.val_approx',sK1) != s('type.clos_known.val_approx',sK1) | p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))),s('type.clos_known.val_approx',sK1)))) | $spl4),
  inference(superposition,[],[f532,f482])).
fof(f4081,plain,(
  $false | ($spl1 | $spl4)),
  inference(subsumption_resolution,[],[f4080,f293])).
fof(f4080,plain,(
  p(s(bool,'F_0')) | ($spl1 | $spl4)),
  inference(forward_demodulation,[],[f4079,f721])).
fof(f4079,plain,(
  p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx',sK1)))) | $spl4),
  inference(forward_demodulation,[],[f4072,f314])).
fof(f4072,plain,(
  p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))) | $spl4),
  inference(trivial_inequality_removal,[],[f4036])).
fof(f4036,plain,(
  s('type.clos_known.val_approx',sK1) != s('type.clos_known.val_approx',sK1) | p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))) | $spl4),
  inference(superposition,[],[f532,f314])).
fof(f3224,plain,(
  ( ! [X2,X3] : (~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X2))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X3))) | ~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X3))))))) ) | ($spl3 | $spl4)),
  inference(superposition,[],[f3160,f300])).
fof(f3160,plain,(
  ( ! [X1] : (~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X1))),s('type.clos_known.val_approx',sK1))))) ) | ($spl3 | $spl4)),
  inference(subsumption_resolution,[],[f3121,f313])).
fof(f3121,plain,(
  ( ! [X1] : (s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK1) | ~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X1))),s('type.clos_known.val_approx',sK1))))) ) | $spl4),
  inference(superposition,[],[f472,f303])).
fof(f472,plain,(
  ( ! [X5] : (s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X5))),s('type.clos_known.val_approx',sK1)))) ) | $spl4),
  inference(superposition,[],[f211,f314])).
fof(f2526,plain,(
  $false | ($spl3 | $spl4 | $spl6)),
  inference(subsumption_resolution,[],[f450,f1525])).
fof(f1525,plain,(
  ( ! [X8,X7] : (s('type.clos_known.val_approx',sK1) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X7),s('type.num.num',X8)))) ) | ($spl3 | $spl4)),
  inference(superposition,[],[f229,f523])).
fof(f523,plain,(
  s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.Int_1'(s('type.integer.int',sK0)))))) | ($spl3 | $spl4)),
  inference(forward_demodulation,[],[f522,f314])).
fof(f522,plain,(
  s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.Int_1'(s('type.integer.int',sK0)))))) | ($spl3 | $spl4)),
  inference(subsumption_resolution,[],[f521,f229])).
fof(f521,plain,(
  s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.Int_1'(s('type.integer.int',sK0)))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.Int_1'(s('type.integer.int',sK0)))),s('type.num.num',sK5('const.clos_known.Int_1'(s('type.integer.int',sK0)))))) | ($spl3 | $spl4)),
  inference(subsumption_resolution,[],[f520,f230])).
fof(f520,plain,(
  s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.Int_1'(s('type.integer.int',sK0)))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.Int_1'(s('type.integer.int',sK0)))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.Int_1'(s('type.integer.int',sK0)))),s('type.num.num',sK5('const.clos_known.Int_1'(s('type.integer.int',sK0)))))) | ($spl3 | $spl4)),
  inference(subsumption_resolution,[],[f519,f246])).
fof(f519,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.Int_1'(s('type.integer.int',sK0)))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.Int_1'(s('type.integer.int',sK0)))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.Int_1'(s('type.integer.int',sK0)))),s('type.num.num',sK5('const.clos_known.Int_1'(s('type.integer.int',sK0)))))) | ($spl3 | $spl4)),
  inference(subsumption_resolution,[],[f467,f313])).
fof(f467,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK1) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.Int_1'(s('type.integer.int',sK0)))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.Int_1'(s('type.integer.int',sK0)))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.Int_1'(s('type.integer.int',sK0)))),s('type.num.num',sK5('const.clos_known.Int_1'(s('type.integer.int',sK0)))))) | $spl4),
  inference(superposition,[],[f314,f217])).
fof(f2277,plain,(
  s(bool,'T_0') = s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx','const.clos_known.Other_0'))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7(sK1)))) | ($spl3 | $spl4)),
  inference(subsumption_resolution,[],[f2276,f1525])).
fof(f2276,plain,(
  s(bool,'T_0') = s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx','const.clos_known.Other_0'))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK1)),s('type.num.num',sK5(sK1)))) | ($spl3 | $spl4)),
  inference(subsumption_resolution,[],[f2275,f1526])).
fof(f1526,plain,(
  ( ! [X9] : (s('type.clos_known.val_approx',sK1) != s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X9)))) ) | ($spl3 | $spl4)),
  inference(superposition,[],[f230,f523])).
fof(f2275,plain,(
  s(bool,'T_0') = s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx','const.clos_known.Other_0'))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK1)),s('type.num.num',sK5(sK1)))) | ($spl3 | $spl4)),
  inference(subsumption_resolution,[],[f2225,f313])).
fof(f2225,plain,(
  s(bool,'T_0') = s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx','const.clos_known.Other_0'))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK1) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK1)),s('type.num.num',sK5(sK1)))) | $spl4),
  inference(superposition,[],[f1062,f217])).
fof(f1062,plain,(
  s(bool,'T_0') = s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Other_0'))) | $spl4),
  inference(resolution,[],[f994,f252])).
fof(f994,plain,(
  p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Other_0')))) | $spl4),
  inference(trivial_inequality_removal,[],[f972])).
fof(f972,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') != s('type.clos_known.val_approx','const.clos_known.Other_0') | p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Other_0')))) | $spl4),
  inference(superposition,[],[f304,f476])).
fof(f476,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Other_0'))) | $spl4),
  inference(superposition,[],[f221,f314])).
fof(f2223,plain,(
  ( ! [X1] : (s(bool,'T_0') = s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx','const.clos_known.Other_0'))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X1))) | ~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X1))))))) ) | $spl4),
  inference(superposition,[],[f1062,f300])).
fof(f2219,plain,(
  s(bool,'F_0') != s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx','const.clos_known.Other_0'))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7(sK1)))) | ($spl3 | $spl4)),
  inference(subsumption_resolution,[],[f2218,f1525])).
fof(f2218,plain,(
  s(bool,'F_0') != s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx','const.clos_known.Other_0'))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK1)),s('type.num.num',sK5(sK1)))) | ($spl3 | $spl4)),
  inference(subsumption_resolution,[],[f2217,f1526])).
fof(f2217,plain,(
  s(bool,'F_0') != s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx','const.clos_known.Other_0'))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK1)),s('type.num.num',sK5(sK1)))) | ($spl3 | $spl4)),
  inference(subsumption_resolution,[],[f2192,f313])).
fof(f2192,plain,(
  s(bool,'F_0') != s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx','const.clos_known.Other_0'))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK1) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK1)),s('type.num.num',sK5(sK1)))) | $spl4),
  inference(superposition,[],[f1060,f217])).
fof(f1060,plain,(
  s(bool,'F_0') != s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Other_0'))) | $spl4),
  inference(resolution,[],[f994,f247])).
fof(f2190,plain,(
  ( ! [X1] : (s(bool,'F_0') != s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx','const.clos_known.Other_0'))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X1))) | ~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X1))))))) ) | $spl4),
  inference(superposition,[],[f1060,f300])).
fof(f1854,plain,(
  s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK1)),s('type.num.num',sK5(sK1)))) | ($spl3 | $spl4 | $spl13 | $spl34)),
  inference(subsumption_resolution,[],[f1853,f222])).
fof(f1853,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.Impossible_0') | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK1)),s('type.num.num',sK5(sK1)))) | ($spl3 | $spl4 | $spl13 | $spl34)),
  inference(forward_demodulation,[],[f1852,f223])).
fof(f1852,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx','const.clos_known.Other_0'))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK1)),s('type.num.num',sK5(sK1)))) | ($spl3 | $spl4 | $spl13 | $spl34)),
  inference(subsumption_resolution,[],[f1851,f1526])).
fof(f1815,plain,(
  s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | ($spl3 | $spl4 | $spl13)),
  inference(forward_demodulation,[],[f1814,f482])).
fof(f1814,plain,(
  s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | ($spl3 | $spl4 | $spl13)),
  inference(subsumption_resolution,[],[f1813,f1526])).
fof(f1813,plain,(
  s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | ($spl3 | $spl4 | $spl13)),
  inference(forward_demodulation,[],[f1812,f482])).
fof(f1812,plain,(
  s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | ($spl3 | $spl4 | $spl13)),
  inference(forward_demodulation,[],[f1811,f482])).
fof(f1811,plain,(
  s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | ($spl3 | $spl4 | $spl13)),
  inference(subsumption_resolution,[],[f1810,f455])).
fof(f1810,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK1) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | ($spl3 | $spl4)),
  inference(forward_demodulation,[],[f1797,f482])).
fof(f1797,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | ($spl3 | $spl4)),
  inference(trivial_inequality_removal,[],[f1795])).
fof(f1795,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') != s('type.clos_known.val_approx','const.clos_known.Other_0') | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | ($spl3 | $spl4)),
  inference(superposition,[],[f1196,f217])).
fof(f1196,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') != s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) | ($spl3 | $spl4)),
  inference(subsumption_resolution,[],[f1132,f448])).
fof(f1132,plain,(
  p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx',sK1)))) | s('type.clos_known.val_approx','const.clos_known.Other_0') != s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) | $spl4),
  inference(superposition,[],[f306,f482])).
fof(f1804,plain,(
  s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK1)),s('type.num.num',sK5(sK1)))) | ($spl3 | $spl4 | $spl13)),
  inference(subsumption_resolution,[],[f1803,f1526])).
fof(f1803,plain,(
  s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK1)),s('type.num.num',sK5(sK1)))) | ($spl3 | $spl4 | $spl13)),
  inference(subsumption_resolution,[],[f1802,f455])).
fof(f1802,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK1) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK1)),s('type.num.num',sK5(sK1)))) | ($spl3 | $spl4)),
  inference(subsumption_resolution,[],[f1782,f224])).
fof(f224,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))),
  inference(cnf_transformation,[],[f19])).
fof(f19,axiom,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))),
  file('thm.clos_knownProof.subapprox_Int|split|1','thm.clos_known.merge_def|split|4')).
fof(f1782,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') != s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK1) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK1)),s('type.num.num',sK5(sK1)))) | ($spl3 | $spl4)),
  inference(superposition,[],[f1196,f217])).
fof(f1490,plain,(
  s(bool,'T_0') != s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) | $spl49),
  inference(cnf_transformation,[],[f1490_D])).
fof(f1490_D,plain,(
  s(bool,'T_0') != s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) <=> ~$spl49),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl49])])).
fof(f1492,plain,(
  s(bool,'T_0') != s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK1)),s('type.num.num',sK5(sK1)))) | $spl3),
  inference(subsumption_resolution,[],[f1473,f313])).
fof(f1473,plain,(
  s(bool,'T_0') != s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK1) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK1)),s('type.num.num',sK5(sK1)))) | $spl3),
  inference(superposition,[],[f762,f217])).
fof(f1352,plain,(
  s(bool,'T_0') != s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx','const.clos_known.Other_0'))) | $spl45),
  inference(cnf_transformation,[],[f1352_D])).
fof(f1352_D,plain,(
  s(bool,'T_0') != s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx','const.clos_known.Other_0'))) <=> ~$spl45),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl45])])).
fof(f1491,plain,(
  s(bool,'T_0') != s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx','const.clos_known.Other_0'))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK1)),s('type.num.num',sK5(sK1)))) | ($spl3 | $spl13)),
  inference(subsumption_resolution,[],[f1472,f455])).
fof(f1471,plain,(
  ( ! [X1] : (s(bool,'T_0') != s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X1))) | ~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X1))))))) ) | $spl3),
  inference(superposition,[],[f762,f300])).
fof(f1437,plain,(
  s(bool,'F_0') = s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) | $spl46),
  inference(cnf_transformation,[],[f1437_D])).
fof(f1437_D,plain,(
  s(bool,'F_0') = s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) <=> ~$spl46),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl46])])).
fof(f1439,plain,(
  s(bool,'F_0') = s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK1)),s('type.num.num',sK5(sK1)))) | $spl3),
  inference(subsumption_resolution,[],[f1389,f313])).
fof(f1389,plain,(
  s(bool,'F_0') = s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK1) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK1)),s('type.num.num',sK5(sK1)))) | $spl3),
  inference(superposition,[],[f760,f217])).
fof(f1306,plain,(
  s(bool,'F_0') = s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx','const.clos_known.Other_0'))) | $spl40),
  inference(cnf_transformation,[],[f1306_D])).
fof(f1306_D,plain,(
  s(bool,'F_0') = s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx','const.clos_known.Other_0'))) <=> ~$spl40),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl40])])).
fof(f1438,plain,(
  s(bool,'F_0') = s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx','const.clos_known.Other_0'))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK1)),s('type.num.num',sK5(sK1)))) | ($spl3 | $spl13)),
  inference(subsumption_resolution,[],[f1388,f455])).
fof(f1387,plain,(
  ( ! [X1] : (s(bool,'F_0') = s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X1))) | ~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X1))))))) ) | $spl3),
  inference(superposition,[],[f760,f300])).
fof(f1349,plain,(
  s(bool,'T_0') != s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) | $spl43),
  inference(cnf_transformation,[],[f1349_D])).
fof(f1349_D,plain,(
  s(bool,'T_0') != s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) <=> ~$spl43),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl43])])).
fof(f1353,plain,(
  s(bool,'T_0') != s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK1)),s('type.num.num',sK5(sK1)))) | ($spl1 | $spl3 | $spl4)),
  inference(subsumption_resolution,[],[f1333,f313])).
fof(f1333,plain,(
  s(bool,'T_0') != s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK1) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK1)),s('type.num.num',sK5(sK1)))) | ($spl1 | $spl4)),
  inference(superposition,[],[f723,f217])).
fof(f723,plain,(
  s(bool,'T_0') != s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx',sK1))) | ($spl1 | $spl4)),
  inference(resolution,[],[f563,f251])).
fof(f1350,plain,(
  s(bool,'T_0') != s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx','const.clos_known.Other_0'))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK1)),s('type.num.num',sK5(sK1)))) | ($spl1 | $spl4 | $spl13)),
  inference(subsumption_resolution,[],[f1332,f455])).
fof(f1332,plain,(
  s(bool,'T_0') != s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx','const.clos_known.Other_0'))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK1) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK1)),s('type.num.num',sK5(sK1)))) | ($spl1 | $spl4)),
  inference(superposition,[],[f723,f217])).
fof(f1331,plain,(
  ( ! [X1] : (s(bool,'T_0') != s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X1))) | ~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X1))))))) ) | ($spl1 | $spl4)),
  inference(superposition,[],[f723,f300])).
fof(f1303,plain,(
  s(bool,'F_0') = s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) | $spl38),
  inference(cnf_transformation,[],[f1303_D])).
fof(f1303_D,plain,(
  s(bool,'F_0') = s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) <=> ~$spl38),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl38])])).
fof(f1307,plain,(
  s(bool,'F_0') = s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK1)),s('type.num.num',sK5(sK1)))) | ($spl1 | $spl3 | $spl4)),
  inference(subsumption_resolution,[],[f1258,f313])).
fof(f1258,plain,(
  s(bool,'F_0') = s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK1) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK1)),s('type.num.num',sK5(sK1)))) | ($spl1 | $spl4)),
  inference(superposition,[],[f721,f217])).
fof(f1304,plain,(
  s(bool,'F_0') = s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx','const.clos_known.Other_0'))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK1)),s('type.num.num',sK5(sK1)))) | ($spl1 | $spl4 | $spl13)),
  inference(subsumption_resolution,[],[f1257,f455])).
fof(f1257,plain,(
  s(bool,'F_0') = s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx','const.clos_known.Other_0'))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK1) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK1)),s('type.num.num',sK5(sK1)))) | ($spl1 | $spl4)),
  inference(superposition,[],[f721,f217])).
fof(f1256,plain,(
  ( ! [X1] : (s(bool,'F_0') = s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X1))) | ~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X1))))))) ) | ($spl1 | $spl4)),
  inference(superposition,[],[f721,f300])).
fof(f1252,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx',sK1))) | $spl34),
  inference(cnf_transformation,[],[f1252_D])).
fof(f1252_D,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx',sK1))) <=> ~$spl34),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl34])])).
fof(f1253,plain,(
  ( ! [X0] : (s('type.clos_known.val_approx',sK1) != s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X0))) | ~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx',sK1))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X0))))))) ) | $spl36),
  inference(cnf_transformation,[],[f1253_D])).
fof(f1253_D,plain,(
  ( ! [X0] : (s('type.clos_known.val_approx',sK1) != s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X0))) | ~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx',sK1))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X0))))))) ) <=> ~$spl36),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl36])])).
fof(f1241,plain,(
  ( ! [X0] : (s('type.clos_known.val_approx',sK1) != s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X0))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx',sK1))) | ~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx',sK1))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X0))))))) ) | ($spl1 | $spl4)),
  inference(superposition,[],[f718,f300])).
fof(f718,plain,(
  s('type.clos_known.val_approx',sK1) != s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx',sK1))) | ($spl1 | $spl4)),
  inference(resolution,[],[f563,f304])).
fof(f1250,plain,(
  s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK1)),s('type.num.num',sK5(sK1)))) | ($spl1 | $spl3 | $spl4)),
  inference(subsumption_resolution,[],[f1249,f313])).
fof(f1249,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK1) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK1)),s('type.num.num',sK5(sK1)))) | ($spl1 | $spl4)),
  inference(subsumption_resolution,[],[f1238,f258])).
fof(f1238,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') != s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK1) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK1)),s('type.num.num',sK5(sK1)))) | ($spl1 | $spl4)),
  inference(superposition,[],[f718,f217])).
fof(f1248,plain,(
  s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK1)),s('type.num.num',sK5(sK1)))) | ($spl1 | $spl4 | $spl13)),
  inference(subsumption_resolution,[],[f1247,f455])).
fof(f1247,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK1) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK1)),s('type.num.num',sK5(sK1)))) | ($spl1 | $spl4)),
  inference(subsumption_resolution,[],[f1237,f223])).
fof(f1237,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') != s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx','const.clos_known.Other_0'))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK1) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK1)),s('type.num.num',sK5(sK1)))) | ($spl1 | $spl4)),
  inference(superposition,[],[f718,f217])).
fof(f1233,plain,(
  s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK1)),s('type.num.num',sK5(sK1)))) | ($spl3 | $spl4 | $spl13 | $spl22)),
  inference(subsumption_resolution,[],[f1232,f313])).
fof(f1232,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK1) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK1)),s('type.num.num',sK5(sK1)))) | ($spl4 | $spl13 | $spl22)),
  inference(subsumption_resolution,[],[f1212,f751])).
fof(f1212,plain,(
  ~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK1) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK1)),s('type.num.num',sK5(sK1)))) | ($spl4 | $spl13)),
  inference(superposition,[],[f1134,f217])).
fof(f1134,plain,(
  ~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))) | ($spl4 | $spl13)),
  inference(subsumption_resolution,[],[f1104,f455])).
fof(f1104,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK1) | ~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))) | $spl4),
  inference(superposition,[],[f482,f303])).
fof(f1173,plain,(
  s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | ($spl3 | $spl4 | $spl13)),
  inference(forward_demodulation,[],[f1172,f482])).
fof(f1172,plain,(
  s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | ($spl3 | $spl4 | $spl13)),
  inference(forward_demodulation,[],[f1171,f482])).
fof(f1171,plain,(
  s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | ($spl3 | $spl4 | $spl13)),
  inference(forward_demodulation,[],[f1170,f482])).
fof(f1170,plain,(
  s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | ($spl3 | $spl4 | $spl13)),
  inference(subsumption_resolution,[],[f1169,f455])).
fof(f1169,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK1) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | ($spl3 | $spl4)),
  inference(forward_demodulation,[],[f1168,f482])).
fof(f1168,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | ($spl3 | $spl4)),
  inference(subsumption_resolution,[],[f1113,f313])).
fof(f1113,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK1) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | $spl4),
  inference(superposition,[],[f217,f482])).
fof(f1167,plain,(
  s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | ($spl3 | $spl4 | $spl13)),
  inference(forward_demodulation,[],[f1166,f482])).
fof(f1166,plain,(
  s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | ($spl3 | $spl4 | $spl13)),
  inference(forward_demodulation,[],[f1165,f482])).
fof(f1165,plain,(
  s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | ($spl3 | $spl4 | $spl13)),
  inference(forward_demodulation,[],[f1164,f482])).
fof(f1164,plain,(
  s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | ($spl3 | $spl4 | $spl13)),
  inference(subsumption_resolution,[],[f1163,f313])).
fof(f1163,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK1) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | ($spl4 | $spl13)),
  inference(forward_demodulation,[],[f1162,f482])).
fof(f1162,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | ($spl4 | $spl13)),
  inference(subsumption_resolution,[],[f1112,f455])).
fof(f1112,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK1) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | $spl4),
  inference(superposition,[],[f217,f482])).
fof(f1160,plain,(
  s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | ($spl3 | $spl4 | $spl13)),
  inference(forward_demodulation,[],[f1159,f482])).
fof(f1159,plain,(
  s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | ($spl3 | $spl4 | $spl13)),
  inference(forward_demodulation,[],[f1158,f482])).
fof(f1158,plain,(
  s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | ($spl3 | $spl4 | $spl13)),
  inference(forward_demodulation,[],[f1157,f482])).
fof(f1157,plain,(
  s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | ($spl3 | $spl4 | $spl13)),
  inference(subsumption_resolution,[],[f1156,f313])).
fof(f1156,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK1) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | ($spl4 | $spl13)),
  inference(forward_demodulation,[],[f1155,f482])).
fof(f1155,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | ($spl4 | $spl13)),
  inference(subsumption_resolution,[],[f1109,f455])).
fof(f1109,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK1) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | $spl4),
  inference(superposition,[],[f482,f217])).
fof(f1148,plain,(
  s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | ($spl3 | $spl4 | $spl13)),
  inference(forward_demodulation,[],[f1147,f482])).
fof(f1147,plain,(
  s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | ($spl3 | $spl4 | $spl13)),
  inference(forward_demodulation,[],[f1146,f482])).
fof(f1146,plain,(
  s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | ($spl3 | $spl4 | $spl13)),
  inference(forward_demodulation,[],[f1145,f482])).
fof(f1145,plain,(
  s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | ($spl3 | $spl4 | $spl13)),
  inference(subsumption_resolution,[],[f1144,f455])).
fof(f1144,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK1) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | ($spl3 | $spl4)),
  inference(forward_demodulation,[],[f1143,f482])).
fof(f1143,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | ($spl3 | $spl4)),
  inference(subsumption_resolution,[],[f1108,f313])).
fof(f1108,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK1) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))),s('type.num.num',sK5('const.clos_known.merge_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | $spl4),
  inference(superposition,[],[f482,f217])).
fof(f1090,plain,(
  p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx','const.clos_known.Other_0')))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK1)),s('type.num.num',sK5(sK1)))) | ($spl3 | $spl4)),
  inference(subsumption_resolution,[],[f1071,f313])).
fof(f1071,plain,(
  p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx','const.clos_known.Other_0')))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK1) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK1)),s('type.num.num',sK5(sK1)))) | $spl4),
  inference(superposition,[],[f994,f217])).
fof(f1069,plain,(
  ( ! [X1] : (p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx','const.clos_known.Other_0')))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X1))) | ~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X1))))))) ) | $spl4),
  inference(superposition,[],[f994,f300])).
fof(f790,plain,(
  ~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))) | $spl25),
  inference(cnf_transformation,[],[f790_D])).
fof(f790_D,plain,(
  ~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))) <=> ~$spl25),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl25])])).
fof(f748,plain,(
  p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx','const.clos_known.Other_0')))) | $spl18),
  inference(cnf_transformation,[],[f748_D])).
fof(f748_D,plain,(
  p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx','const.clos_known.Other_0')))) <=> ~$spl18),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl18])])).
fof(f839,plain,(
  p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx','const.clos_known.Other_0')))) | ~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))) | $spl22),
  inference(superposition,[],[f751,f305])).
fof(f824,plain,(
  $false | $spl23),
  inference(subsumption_resolution,[],[f794,f258])).
fof(f794,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') != s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) | $spl23),
  inference(resolution,[],[f752,f304])).
fof(f792,plain,(
  ~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK1)),s('type.num.num',sK5(sK1)))) | $spl3),
  inference(subsumption_resolution,[],[f776,f313])).
fof(f776,plain,(
  ~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK1) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK1)),s('type.num.num',sK5(sK1)))) | $spl3),
  inference(superposition,[],[f448,f217])).
fof(f791,plain,(
  ~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx','const.clos_known.Other_0')))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK1)),s('type.num.num',sK5(sK1)))) | ($spl3 | $spl13)),
  inference(subsumption_resolution,[],[f775,f455])).
fof(f774,plain,(
  ( ! [X1] : (~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X1))) | ~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X1))))))) ) | $spl3),
  inference(superposition,[],[f448,f300])).
fof(f752,plain,(
  ~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))) | $spl23),
  inference(cnf_transformation,[],[f752_D])).
fof(f752_D,plain,(
  ~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))) <=> ~$spl23),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl23])])).
fof(f754,plain,(
  ~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK1)),s('type.num.num',sK5(sK1)))) | ($spl1 | $spl3 | $spl4)),
  inference(subsumption_resolution,[],[f733,f313])).
fof(f733,plain,(
  ~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK1) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK1)),s('type.num.num',sK5(sK1)))) | ($spl1 | $spl4)),
  inference(superposition,[],[f563,f217])).
fof(f753,plain,(
  ~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx','const.clos_known.Other_0')))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK1)),s('type.num.num',sK5(sK1)))) | ($spl1 | $spl4 | $spl13)),
  inference(subsumption_resolution,[],[f732,f455])).
fof(f732,plain,(
  ~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx','const.clos_known.Other_0')))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK1) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK1)),s('type.num.num',sK5(sK1)))) | ($spl1 | $spl4)),
  inference(superposition,[],[f563,f217])).
fof(f731,plain,(
  ( ! [X1] : (~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X1))) | ~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',sK1),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X1))))))) ) | ($spl1 | $spl4)),
  inference(superposition,[],[f563,f300])).
fof(f747,plain,(
  ~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx',sK1)))) | $spl17),
  inference(cnf_transformation,[],[f747_D])).
fof(f747_D,plain,(
  ~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx',sK1)))) <=> ~$spl17),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl17])])).
fof(f730,plain,(
  ~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx','const.clos_known.Other_0')))) | ~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx',sK1)))) | ($spl1 | $spl4)),
  inference(superposition,[],[f563,f305])).
fof(f610,plain,(
  s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK1)),s('type.num.num',sK5(sK1)))) | ($spl3 | $spl13)),
  inference(subsumption_resolution,[],[f608,f313])).
fof(f608,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK1) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK1)),s('type.num.num',sK5(sK1)))) | $spl13),
  inference(trivial_inequality_removal,[],[f607])).
fof(f607,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') != s('type.clos_known.val_approx','const.clos_known.Impossible_0') | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK1) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK1)),s('type.num.num',sK5(sK1)))) | $spl13),
  inference(superposition,[],[f455,f217])).
fof(f587,plain,(
  $false | ($spl4 | $spl12)),
  inference(subsumption_resolution,[],[f564,f246])).
fof(f564,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))) | ($spl4 | $spl12)),
  inference(backward_demodulation,[],[f456,f314])).
fof(f529,plain,(
  s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.Int_1'(s('type.integer.int',sK0)))))) | $spl14),
  inference(cnf_transformation,[],[f529_D])).
fof(f529_D,plain,(
  s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.Int_1'(s('type.integer.int',sK0)))))) <=> ~$spl14),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl14])])).
fof(f537,plain,(
  s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.Int_1'(s('type.integer.int',sK0)))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK1) | $spl4),
  inference(forward_demodulation,[],[f536,f314])).
fof(f536,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK1) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.Int_1'(s('type.integer.int',sK0)))))) | $spl4),
  inference(subsumption_resolution,[],[f535,f229])).
fof(f535,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK1) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.Int_1'(s('type.integer.int',sK0)))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.Int_1'(s('type.integer.int',sK0)))),s('type.num.num',sK5('const.clos_known.Int_1'(s('type.integer.int',sK0)))))) | $spl4),
  inference(subsumption_resolution,[],[f534,f230])).
fof(f534,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK1) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.Int_1'(s('type.integer.int',sK0)))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.Int_1'(s('type.integer.int',sK0)))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.Int_1'(s('type.integer.int',sK0)))),s('type.num.num',sK5('const.clos_known.Int_1'(s('type.integer.int',sK0)))))) | $spl4),
  inference(subsumption_resolution,[],[f488,f216])).
fof(f488,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK1) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.Int_1'(s('type.integer.int',sK0)))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.Int_1'(s('type.integer.int',sK0)))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.Int_1'(s('type.integer.int',sK0)))),s('type.num.num',sK5('const.clos_known.Int_1'(s('type.integer.int',sK0)))))) | $spl4),
  inference(superposition,[],[f217,f314])).
fof(f527,plain,(
  s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.Int_1'(s('type.integer.int',sK0)))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK1) | $spl4),
  inference(forward_demodulation,[],[f526,f314])).
fof(f526,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK1) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.Int_1'(s('type.integer.int',sK0)))))) | $spl4),
  inference(subsumption_resolution,[],[f525,f229])).
fof(f525,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK1) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.Int_1'(s('type.integer.int',sK0)))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.Int_1'(s('type.integer.int',sK0)))),s('type.num.num',sK5('const.clos_known.Int_1'(s('type.integer.int',sK0)))))) | $spl4),
  inference(subsumption_resolution,[],[f524,f230])).
fof(f524,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK1) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.Int_1'(s('type.integer.int',sK0)))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.Int_1'(s('type.integer.int',sK0)))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.Int_1'(s('type.integer.int',sK0)))),s('type.num.num',sK5('const.clos_known.Int_1'(s('type.integer.int',sK0)))))) | $spl4),
  inference(subsumption_resolution,[],[f468,f216])).
fof(f468,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK1) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7('const.clos_known.Int_1'(s('type.integer.int',sK0)))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6('const.clos_known.Int_1'(s('type.integer.int',sK0)))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.Int_1'(s('type.integer.int',sK0)))),s('type.num.num',sK5('const.clos_known.Int_1'(s('type.integer.int',sK0)))))) | $spl4),
  inference(superposition,[],[f314,f217])).
fof(f447,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK1) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK1)),s('type.num.num',sK5(sK1)))) | $spl3),
  inference(trivial_inequality_removal,[],[f445])).
fof(f445,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') != s('type.clos_known.val_approx','const.clos_known.Other_0') | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK1) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK7(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK6(sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK1)),s('type.num.num',sK5(sK1)))) | $spl3),
  inference(superposition,[],[f313,f217])).
fof(f432,plain,(
  $false | ($spl1 | $spl2)),
  inference(subsumption_resolution,[],[f392,f221])).
fof(f392,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') != s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) | ($spl1 | $spl2)),
  inference(resolution,[],[f360,f304])).
fof(f360,plain,(
  ~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx','const.clos_known.Other_0')))) | ($spl1 | $spl2)),
  inference(forward_demodulation,[],[f311,f312])).
fof(f310,plain,(
  p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))) | $spl0),
  inference(cnf_transformation,[],[f310_D])).
fof(f310_D,plain,(
  p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))) <=> ~$spl0),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl0])])).
fof(f314,plain,(
  s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))) | $spl4),
  inference(cnf_transformation,[],[f314_D])).
fof(f314_D,plain,(
  s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))) <=> ~$spl4),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl4])])).
fof(f312,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK1) | $spl2),
  inference(cnf_transformation,[],[f312_D])).
fof(f312_D,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK1) <=> ~$spl2),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl2])])).
fof(f196,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK1) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))) | p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))))),
  inference(cnf_transformation,[],[f151])).
fof(f151,plain,(
  (p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))) | s('type.clos_known.val_approx',sK1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK1)) & (~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))) | (s('type.clos_known.val_approx',sK1) != s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))) & s('type.clos_known.val_approx','const.clos_known.Other_0') != s('type.clos_known.val_approx',sK1)))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1])],[f150])).
fof(f150,plain,(
  ? [X0,X1] : ((p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X0))),s('type.clos_known.val_approx',X1)))) | s('type.clos_known.val_approx',X1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X0))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X1)) & (~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X0))),s('type.clos_known.val_approx',X1)))) | (s('type.clos_known.val_approx',X1) != s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X0))) & s('type.clos_known.val_approx','const.clos_known.Other_0') != s('type.clos_known.val_approx',X1))))),
  inference(flattening,[],[f149])).
fof(f149,plain,(
  ? [X0,X1] : ((p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X0))),s('type.clos_known.val_approx',X1)))) | (s('type.clos_known.val_approx',X1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X0))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X1))) & (~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X0))),s('type.clos_known.val_approx',X1)))) | (s('type.clos_known.val_approx',X1) != s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X0))) & s('type.clos_known.val_approx','const.clos_known.Other_0') != s('type.clos_known.val_approx',X1))))),
  inference(nnf_transformation,[],[f145])).
fof(f145,plain,(
  ? [X0,X1] : (p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X0))),s('type.clos_known.val_approx',X1)))) <~> (s('type.clos_known.val_approx',X1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X0))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X1)))),
  inference(ennf_transformation,[],[f71])).
fof(f71,plain,(
  ~! [X0,X1] : (p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X0))),s('type.clos_known.val_approx',X1)))) <=> (s('type.clos_known.val_approx',X1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X0))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X1)))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6,X7] : (p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X6))),s('type.clos_known.val_approx',X7)))) <=> (s('type.clos_known.val_approx',X7) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X6))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X7)))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6,X7] : (p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X6))),s('type.clos_known.val_approx',X7)))) <=> (s('type.clos_known.val_approx',X7) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X6))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X7)))),
  file('thm.clos_knownProof.subapprox_Int|split|1','thm.clos_knownProof.subapprox_Int|split|1')).
fof(f311,plain,(
  ~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))) | $spl1),
  inference(cnf_transformation,[],[f311_D])).
fof(f311_D,plain,(
  ~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1)))) <=> ~$spl1),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1])])).
fof(f315,plain,(
  s('type.clos_known.val_approx',sK1) != s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))) | $spl5),
  inference(cnf_transformation,[],[f315_D])).
fof(f315_D,plain,(
  s('type.clos_known.val_approx',sK1) != s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))) <=> ~$spl5),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl5])])).
fof(f197,plain,(
  s('type.clos_known.val_approx',sK1) != s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))) | ~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))))),
  inference(cnf_transformation,[],[f151])).
fof(f313,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') != s('type.clos_known.val_approx',sK1) | $spl3),
  inference(cnf_transformation,[],[f313_D])).
fof(f313_D,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') != s('type.clos_known.val_approx',sK1) <=> ~$spl3),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl3])])).
fof(f198,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') != s('type.clos_known.val_approx',sK1) | ~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK0))),s('type.clos_known.val_approx',sK1))))),
  inference(cnf_transformation,[],[f151])).
% SZS output end Proof for thm.clos_knownProof
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 315
% Passive clauses: 2108
% Generated clauses: 13209
% Final active clauses: 145
% Final passive clauses: 697
% Input formulas: 69
% Initial clauses: 111
% 
% Selected by SInE selection: 64
% SInE iterations: 1
% 
% Duplicate literals: 137
% Trivial inequalities: 283
% Fw subsumption resolutions: 2087
% Fw demodulations: 2595
% Bw demodulations: 67
% 
% Simple tautologies: 336
% Equational tautologies: 7
% Forward subsumptions: 5681
% 
% Binary resolution: 824
% Forward superposition: 4139
% Backward superposition: 2595
% Equality resolution: 8
% 
% Split clauses: 229
% Split components: 592
% SAT solver clauses: 266
% SAT solver unit clauses: 5
% SAT solver binary clauses: 18
% 
% Sat splits: 229
% Sat splitting refutations: 36
% 
% Memory used [KB]: 4349
% Time elapsed: 0.196 s
% ------------------------------
% ------------------------------
% Success in time 11.94 s
