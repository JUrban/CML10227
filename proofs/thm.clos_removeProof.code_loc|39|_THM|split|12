Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 149 next slice time: 5
dis+11_7_3 on thm.clos_removeProof
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.clos_removeProof
% SZS output start Proof for thm.clos_removeProof
fof(f1140,plain,(
  $false),
  inference(trivial_inequality_removal,[],[f1136])).
fof(f1136,plain,(
  s('type.list.list'('type.num.num'),'const.closProps.code_locs_1'(s('type.list.list'('type.closLang.exp'),sK0))) != s('type.list.list'('type.num.num'),'const.closProps.code_locs_1'(s('type.list.list'('type.closLang.exp'),sK0)))),
  inference(superposition,[],[f92,f1121])).
fof(f1121,plain,(
  ( ! [X2,X3] : (s('type.list.list'('type.num.num'),'const.closProps.code_locs_1'(s('type.list.list'('type.closLang.exp'),X3))) = s('type.list.list'('type.num.num'),'const.clos_removeProof.code_loc|39|_1'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',X2),s('type.list.list'('type.closLang.exp'),X3)))))) )),
  inference(superposition,[],[f108,f96])).
fof(f96,plain,(
  ( ! [X0] : (s('type.list.list'('type.num.num'),'const.clos_removeProof.code_loc|39|_1'(s('type.closLang.exp',X0))) = s('type.list.list'('type.num.num'),'const.closProps.code_locs_1'(s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X0),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) )),
  inference(cnf_transformation,[],[f40])).
fof(f40,plain,(
  ! [X0] : s('type.list.list'('type.num.num'),'const.clos_removeProof.code_loc|39|_1'(s('type.closLang.exp',X0))) = s('type.list.list'('type.num.num'),'const.closProps.code_locs_1'(s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X0),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))),
  inference(rectify,[],[f23])).
fof(f23,axiom,(
  ! [X11] : s('type.list.list'('type.num.num'),'const.clos_removeProof.code_loc|39|_1'(s('type.closLang.exp',X11))) = s('type.list.list'('type.num.num'),'const.closProps.code_locs_1'(s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X11),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))),
  file('thm.clos_removeProof.code_loc|39|_THM|split|12','thm.clos_removeProof.code_loc|39|_def')).
fof(f108,plain,(
  ( ! [X0,X1] : (s('type.list.list'('type.num.num'),'const.closProps.code_locs_1'(s('type.list.list'('type.closLang.exp'),X0))) = s('type.list.list'('type.num.num'),'const.closProps.code_locs_1'(s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',X1),s('type.list.list'('type.closLang.exp'),X0))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) )),
  inference(cnf_transformation,[],[f55])).
fof(f55,plain,(
  ! [X0,X1] : s('type.list.list'('type.num.num'),'const.closProps.code_locs_1'(s('type.list.list'('type.closLang.exp'),X0))) = s('type.list.list'('type.num.num'),'const.closProps.code_locs_1'(s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',X1),s('type.list.list'('type.closLang.exp'),X0))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))),
  inference(rectify,[],[f21])).
fof(f21,axiom,(
  ! [X6,X7] : s('type.list.list'('type.num.num'),'const.closProps.code_locs_1'(s('type.list.list'('type.closLang.exp'),X6))) = s('type.list.list'('type.num.num'),'const.closProps.code_locs_1'(s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',X7),s('type.list.list'('type.closLang.exp'),X6))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))),
  file('thm.clos_removeProof.code_loc|39|_THM|split|12','thm.closProps.code_locs_def|split|12')).
fof(f92,plain,(
  s('type.list.list'('type.num.num'),'const.closProps.code_locs_1'(s('type.list.list'('type.closLang.exp'),sK0))) != s('type.list.list'('type.num.num'),'const.clos_removeProof.code_loc|39|_1'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK1),s('type.list.list'('type.closLang.exp'),sK0)))))),
  inference(cnf_transformation,[],[f89])).
fof(f89,plain,(
  s('type.list.list'('type.num.num'),'const.closProps.code_locs_1'(s('type.list.list'('type.closLang.exp'),sK0))) != s('type.list.list'('type.num.num'),'const.clos_removeProof.code_loc|39|_1'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK1),s('type.list.list'('type.closLang.exp'),sK0)))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1])],[f87])).
fof(f87,plain,(
  ? [X0,X1] : s('type.list.list'('type.num.num'),'const.closProps.code_locs_1'(s('type.list.list'('type.closLang.exp'),X0))) != s('type.list.list'('type.num.num'),'const.clos_removeProof.code_loc|39|_1'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',X1),s('type.list.list'('type.closLang.exp'),X0)))))),
  inference(ennf_transformation,[],[f38])).
fof(f38,plain,(
  ~! [X0,X1] : s('type.list.list'('type.num.num'),'const.closProps.code_locs_1'(s('type.list.list'('type.closLang.exp'),X0))) = s('type.list.list'('type.num.num'),'const.clos_removeProof.code_loc|39|_1'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',X1),s('type.list.list'('type.closLang.exp'),X0)))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6,X7] : s('type.list.list'('type.num.num'),'const.closProps.code_locs_1'(s('type.list.list'('type.closLang.exp'),X6))) = s('type.list.list'('type.num.num'),'const.clos_removeProof.code_loc|39|_1'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',X7),s('type.list.list'('type.closLang.exp'),X6)))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6,X7] : s('type.list.list'('type.num.num'),'const.closProps.code_locs_1'(s('type.list.list'('type.closLang.exp'),X6))) = s('type.list.list'('type.num.num'),'const.clos_removeProof.code_loc|39|_1'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',X7),s('type.list.list'('type.closLang.exp'),X6)))))),
  file('thm.clos_removeProof.code_loc|39|_THM|split|12','thm.clos_removeProof.code_loc|39|_THM|split|12')).
% SZS output end Proof for thm.clos_removeProof
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 29
% Passive clauses: 191
% Generated clauses: 986
% Final active clauses: 27
% Final passive clauses: 145
% Input formulas: 36
% Initial clauses: 37
% 
% Duplicate literals: 110
% Trivial inequalities: 17
% Fw subsumption resolutions: 30
% Fw demodulations: 70
% 
% Simple tautologies: 36
% Equational tautologies: 16
% Forward subsumptions: 510
% 
% Binary resolution: 4
% Forward superposition: 356
% Backward superposition: 267
% Self superposition: 55
% Equality factoring: 40
% Equality resolution: 3
% 
% Split clauses: 8
% Split components: 16
% SAT solver clauses: 16
% SAT solver unit clauses: 6
% SAT solver binary clauses: 10
% 
% Sat splits: 8
% Sat splitting refutations: 1
% 
% TWLsolver clauses: 16
% TWLsolver calls for satisfiability: 7
% 
% Memory used [KB]: 1151
% Time elapsed: 0.060 s
% ------------------------------
% ------------------------------
% Success in time 0.08 s
