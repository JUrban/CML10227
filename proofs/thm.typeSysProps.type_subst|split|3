Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 149 next slice time: 5
dis+11_7_3 on thm.typeSysProps
% (62640)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 848
% Passive clauses: 4247
% Generated clauses: 16801
% Final active clauses: 827
% Final passive clauses: 3200
% Input formulas: 365
% Initial clauses: 868
% 
% Duplicate literals: 157
% Trivial inequalities: 89
% Fw subsumption resolutions: 1273
% Fw demodulations: 1262
% Bw demodulations: 8
% 
% Simple tautologies: 314
% Equational tautologies: 20
% Forward subsumptions: 9219
% 
% Binary resolution: 3997
% Factoring: 395
% Forward superposition: 5457
% Backward superposition: 3109
% Self superposition: 19
% Equality factoring: 2
% Equality resolution: 18
% 
% Split clauses: 299
% Split components: 600
% SAT solver clauses: 405
% SAT solver unit clauses: 14
% SAT solver binary clauses: 80
% 
% Sat splits: 299
% Sat splitting refutations: 4
% 
% TWLsolver clauses: 404
% TWLsolver calls for satisfiability: 267
% 
% Memory used [KB]: 8187
% Time elapsed: 0.621 s
% ------------------------------
% ------------------------------
% remaining time: 143 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.typeSysProps
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.typeSysProps
% SZS output start Proof for thm.typeSysProps
fof(f2249,plain,(
  $false),
  inference(global_subsumption,[],[f1353,f1354])).
fof(f1354,plain,(
  ~p(s(bool,'const.typeSoundInvariants.consistent_mod_env_4'(s('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),sK45),s('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),sK46),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')))),sK47),s('type.finite_map.fmap'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),sK48))))),
  inference(cnf_transformation,[],[f1016])).
fof(f1016,plain,(
  p(s(bool,'const.typeSoundInvariants.consistent_mod_env_4'(s('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),sK45),s('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),sK46),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')))),sK47),s('type.finite_map.fmap'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),sK48)))) & ~p(s(bool,'const.typeSoundInvariants.consistent_mod_env_4'(s('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),sK45),s('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),sK46),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')))),sK47),s('type.finite_map.fmap'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),sK48))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK45,sK46,sK47,sK48])],[f850])).
fof(f850,plain,(
  ? [X0,X1,X2,X3] : (p(s(bool,'const.typeSoundInvariants.consistent_mod_env_4'(s('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),X0),s('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),X1),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')))),X2),s('type.finite_map.fmap'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),X3)))) & ~p(s(bool,'const.typeSoundInvariants.consistent_mod_env_4'(s('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),X0),s('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),X1),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')))),X2),s('type.finite_map.fmap'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),X3)))))),
  inference(ennf_transformation,[],[f367])).
fof(f367,plain,(
  ~! [X0,X1,X2,X3] : (p(s(bool,'const.typeSoundInvariants.consistent_mod_env_4'(s('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),X0),s('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),X1),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')))),X2),s('type.finite_map.fmap'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),X3)))) => p(s(bool,'const.typeSoundInvariants.consistent_mod_env_4'(s('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),X0),s('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),X1),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')))),X2),s('type.finite_map.fmap'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),X3)))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6,X7,X8,X9] : (p(s(bool,'const.typeSoundInvariants.consistent_mod_env_4'(s('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),X6),s('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),X7),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')))),X8),s('type.finite_map.fmap'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),X9)))) => p(s(bool,'const.typeSoundInvariants.consistent_mod_env_4'(s('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),X6),s('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),X7),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')))),X8),s('type.finite_map.fmap'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),X9)))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6,X7,X8,X9] : (p(s(bool,'const.typeSoundInvariants.consistent_mod_env_4'(s('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),X6),s('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),X7),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')))),X8),s('type.finite_map.fmap'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),X9)))) => p(s(bool,'const.typeSoundInvariants.consistent_mod_env_4'(s('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),X6),s('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),X7),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')))),X8),s('type.finite_map.fmap'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),X9)))))),
  file('thm.typeSysProps.type_subst|split|3','thm.typeSysProps.type_subst|split|3')).
fof(f1353,plain,(
  p(s(bool,'const.typeSoundInvariants.consistent_mod_env_4'(s('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),sK45),s('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),sK46),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')))),sK47),s('type.finite_map.fmap'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),sK48))))),
  inference(cnf_transformation,[],[f1016])).
% SZS output end Proof for thm.typeSysProps
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Generated clauses: 895
% Input formulas: 365
% Initial clauses: 868
% 
% Duplicate literals: 9
% Trivial inequalities: 1
% Condensations: 16
% Global subsumptions: 1
% 
% Simple tautologies: 108
% Equational tautologies: 3
% 
% SAT solver clauses: 4
% SAT solver unit clauses: 3
% SAT solver learnt clauses: 1
% 
% TWLsolver clauses: 3
% TWLsolver calls for satisfiability: 1
% 
% Memory used [KB]: 2174
% Time elapsed: 0.015 s
% ------------------------------
% ------------------------------
% Success in time 0.72 s
