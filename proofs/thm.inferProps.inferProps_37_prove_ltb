Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 149 next slice time: 5
dis+11_7_3 on thm.inferProps
% (7292)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 373
% Passive clauses: 2587
% Generated clauses: 13449
% Final active clauses: 333
% Final passive clauses: 1746
% Input formulas: 38
% Initial clauses: 119
% 
% Duplicate literals: 578
% Trivial inequalities: 182
% Fw subsumption resolutions: 1625
% Fw demodulations: 703
% Bw demodulations: 28
% 
% Simple tautologies: 360
% Equational tautologies: 54
% Forward subsumptions: 6650
% Fw demodulations to eq. taut.: 10
% 
% Binary resolution: 4257
% Factoring: 26
% Forward superposition: 2154
% Backward superposition: 3477
% Self superposition: 56
% Equality factoring: 58
% Equality resolution: 40
% 
% Split clauses: 357
% Split components: 752
% SAT solver clauses: 583
% SAT solver unit clauses: 23
% SAT solver binary clauses: 145
% SAT solver learnt clauses: 1
% SAT solver learnt literals: 1
% 
% Sat splits: 357
% Sat splitting refutations: 8
% 
% TWLsolver clauses: 572
% TWLsolver calls for satisfiability: 183
% 
% Memory used [KB]: 5628
% Time elapsed: 0.600 s
% ------------------------------
% ------------------------------
% remaining time: 144 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.inferProps
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.inferProps
% SZS output start Proof for thm.inferProps
fof(f1339,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f715,f725,f263,f351,f404,f406,f1338,f192,f320,f318,f316,f1168,f1140,f1141,f1101,f1121,f1282,f1306,f1274,f1278,f1269,f1272,f1099,f1120,f266,f357,f262,f352,f267,f356,f260,f349,f191,f319,f1085,f190,f317,f315])).
fof(f315,plain,(
  s('type.pair.prod'('type.infer.exc'('type.num.num',sK7),'type.infer.infer_st'(sK8)),'const.infer.get_next_uvar_1'(s('type.infer.infer_st'(sK8),sK9))) = s('type.pair.prod'('type.infer.exc'('type.num.num',sK7),'type.infer.infer_st'(sK8)),'const.pair.,_2'(s('type.infer.exc'('type.num.num',sK7),'const.infer.Success_1'(s('type.num.num',sK10))),s('type.infer.infer_st'(sK8),sK11))) | $spl0),
  inference(cnf_transformation,[],[f315_D])).
fof(f315_D,plain,(
  s('type.pair.prod'('type.infer.exc'('type.num.num',sK7),'type.infer.infer_st'(sK8)),'const.infer.get_next_uvar_1'(s('type.infer.infer_st'(sK8),sK9))) = s('type.pair.prod'('type.infer.exc'('type.num.num',sK7),'type.infer.infer_st'(sK8)),'const.pair.,_2'(s('type.infer.exc'('type.num.num',sK7),'const.infer.Success_1'(s('type.num.num',sK10))),s('type.infer.infer_st'(sK8),sK11))) <=> ~$spl0),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl0])])).
fof(f317,plain,(
  s('type.num.num',sK10) = s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'(sK8),sK9))) | $spl2),
  inference(cnf_transformation,[],[f317_D])).
fof(f317_D,plain,(
  s('type.num.num',sK10) = s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'(sK8),sK9))) <=> ~$spl2),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl2])])).
fof(f190,plain,(
  s('type.num.num',sK10) = s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'(sK8),sK9))) | s('type.pair.prod'('type.infer.exc'('type.num.num',sK7),'type.infer.infer_st'(sK8)),'const.infer.get_next_uvar_1'(s('type.infer.infer_st'(sK8),sK9))) = s('type.pair.prod'('type.infer.exc'('type.num.num',sK7),'type.infer.infer_st'(sK8)),'const.pair.,_2'(s('type.infer.exc'('type.num.num',sK7),'const.infer.Success_1'(s('type.num.num',sK10))),s('type.infer.infer_st'(sK8),sK11)))),
  inference(cnf_transformation,[],[f140])).
fof(f140,plain,(
  (s('type.pair.prod'('type.infer.exc'('type.num.num',sK7),'type.infer.infer_st'(sK8)),'const.infer.get_next_uvar_1'(s('type.infer.infer_st'(sK8),sK9))) = s('type.pair.prod'('type.infer.exc'('type.num.num',sK7),'type.infer.infer_st'(sK8)),'const.pair.,_2'(s('type.infer.exc'('type.num.num',sK7),'const.infer.Success_1'(s('type.num.num',sK10))),s('type.infer.infer_st'(sK8),sK11))) | (s('type.num.num',sK10) = s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'(sK8),sK9))) & s('type.infer.infer_st'(sK8),sK9) = s('type.infer.infer_st'(sK8),sK11))) & (s('type.pair.prod'('type.infer.exc'('type.num.num',sK7),'type.infer.infer_st'(sK8)),'const.infer.get_next_uvar_1'(s('type.infer.infer_st'(sK8),sK9))) != s('type.pair.prod'('type.infer.exc'('type.num.num',sK7),'type.infer.infer_st'(sK8)),'const.pair.,_2'(s('type.infer.exc'('type.num.num',sK7),'const.infer.Success_1'(s('type.num.num',sK10))),s('type.infer.infer_st'(sK8),sK11))) | s('type.num.num',sK10) != s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'(sK8),sK9))) | s('type.infer.infer_st'(sK8),sK9) != s('type.infer.infer_st'(sK8),sK11))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK7,sK8,sK9,sK10,sK11])],[f139])).
fof(f139,plain,(
  ? [X0,X1,X2,X3,X4] : ((s('type.pair.prod'('type.infer.exc'('type.num.num',X0),'type.infer.infer_st'(X1)),'const.infer.get_next_uvar_1'(s('type.infer.infer_st'(X1),X2))) = s('type.pair.prod'('type.infer.exc'('type.num.num',X0),'type.infer.infer_st'(X1)),'const.pair.,_2'(s('type.infer.exc'('type.num.num',X0),'const.infer.Success_1'(s('type.num.num',X3))),s('type.infer.infer_st'(X1),X4))) | (s('type.num.num',X3) = s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'(X1),X2))) & s('type.infer.infer_st'(X1),X2) = s('type.infer.infer_st'(X1),X4))) & (s('type.pair.prod'('type.infer.exc'('type.num.num',X0),'type.infer.infer_st'(X1)),'const.infer.get_next_uvar_1'(s('type.infer.infer_st'(X1),X2))) != s('type.pair.prod'('type.infer.exc'('type.num.num',X0),'type.infer.infer_st'(X1)),'const.pair.,_2'(s('type.infer.exc'('type.num.num',X0),'const.infer.Success_1'(s('type.num.num',X3))),s('type.infer.infer_st'(X1),X4))) | s('type.num.num',X3) != s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'(X1),X2))) | s('type.infer.infer_st'(X1),X2) != s('type.infer.infer_st'(X1),X4)))),
  inference(flattening,[],[f138])).
fof(f138,plain,(
  ? [X0,X1,X2,X3,X4] : ((s('type.pair.prod'('type.infer.exc'('type.num.num',X0),'type.infer.infer_st'(X1)),'const.infer.get_next_uvar_1'(s('type.infer.infer_st'(X1),X2))) = s('type.pair.prod'('type.infer.exc'('type.num.num',X0),'type.infer.infer_st'(X1)),'const.pair.,_2'(s('type.infer.exc'('type.num.num',X0),'const.infer.Success_1'(s('type.num.num',X3))),s('type.infer.infer_st'(X1),X4))) | (s('type.num.num',X3) = s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'(X1),X2))) & s('type.infer.infer_st'(X1),X2) = s('type.infer.infer_st'(X1),X4))) & (s('type.pair.prod'('type.infer.exc'('type.num.num',X0),'type.infer.infer_st'(X1)),'const.infer.get_next_uvar_1'(s('type.infer.infer_st'(X1),X2))) != s('type.pair.prod'('type.infer.exc'('type.num.num',X0),'type.infer.infer_st'(X1)),'const.pair.,_2'(s('type.infer.exc'('type.num.num',X0),'const.infer.Success_1'(s('type.num.num',X3))),s('type.infer.infer_st'(X1),X4))) | (s('type.num.num',X3) != s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'(X1),X2))) | s('type.infer.infer_st'(X1),X2) != s('type.infer.infer_st'(X1),X4))))),
  inference(nnf_transformation,[],[f98])).
fof(f98,plain,(
  ? [X0,X1,X2,X3,X4] : (s('type.pair.prod'('type.infer.exc'('type.num.num',X0),'type.infer.infer_st'(X1)),'const.infer.get_next_uvar_1'(s('type.infer.infer_st'(X1),X2))) = s('type.pair.prod'('type.infer.exc'('type.num.num',X0),'type.infer.infer_st'(X1)),'const.pair.,_2'(s('type.infer.exc'('type.num.num',X0),'const.infer.Success_1'(s('type.num.num',X3))),s('type.infer.infer_st'(X1),X4))) <~> (s('type.num.num',X3) = s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'(X1),X2))) & s('type.infer.infer_st'(X1),X2) = s('type.infer.infer_st'(X1),X4)))),
  inference(ennf_transformation,[],[f41])).
fof(f41,plain,(
  ~! [X0,X1,X2,X3,X4] : (s('type.pair.prod'('type.infer.exc'('type.num.num',X0),'type.infer.infer_st'(X1)),'const.infer.get_next_uvar_1'(s('type.infer.infer_st'(X1),X2))) = s('type.pair.prod'('type.infer.exc'('type.num.num',X0),'type.infer.infer_st'(X1)),'const.pair.,_2'(s('type.infer.exc'('type.num.num',X0),'const.infer.Success_1'(s('type.num.num',X3))),s('type.infer.infer_st'(X1),X4))) <=> (s('type.num.num',X3) = s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'(X1),X2))) & s('type.infer.infer_st'(X1),X2) = s('type.infer.infer_st'(X1),X4)))),
  inference(flattening,[],[f40])).
fof(f40,plain,(
  ~! [X0,X1] : ! [X2,X3,X4] : (s('type.pair.prod'('type.infer.exc'('type.num.num',X0),'type.infer.infer_st'(X1)),'const.infer.get_next_uvar_1'(s('type.infer.infer_st'(X1),X2))) = s('type.pair.prod'('type.infer.exc'('type.num.num',X0),'type.infer.infer_st'(X1)),'const.pair.,_2'(s('type.infer.exc'('type.num.num',X0),'const.infer.Success_1'(s('type.num.num',X3))),s('type.infer.infer_st'(X1),X4))) <=> (s('type.num.num',X3) = s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'(X1),X2))) & s('type.infer.infer_st'(X1),X2) = s('type.infer.infer_st'(X1),X4)))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6,X7] : ! [X8,X9,X10] : (s('type.pair.prod'('type.infer.exc'('type.num.num',X6),'type.infer.infer_st'(X7)),'const.infer.get_next_uvar_1'(s('type.infer.infer_st'(X7),X8))) = s('type.pair.prod'('type.infer.exc'('type.num.num',X6),'type.infer.infer_st'(X7)),'const.pair.,_2'(s('type.infer.exc'('type.num.num',X6),'const.infer.Success_1'(s('type.num.num',X9))),s('type.infer.infer_st'(X7),X10))) <=> (s('type.num.num',X9) = s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'(X7),X8))) & s('type.infer.infer_st'(X7),X8) = s('type.infer.infer_st'(X7),X10)))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6,X7] : ! [X8,X9,X10] : (s('type.pair.prod'('type.infer.exc'('type.num.num',X6),'type.infer.infer_st'(X7)),'const.infer.get_next_uvar_1'(s('type.infer.infer_st'(X7),X8))) = s('type.pair.prod'('type.infer.exc'('type.num.num',X6),'type.infer.infer_st'(X7)),'const.pair.,_2'(s('type.infer.exc'('type.num.num',X6),'const.infer.Success_1'(s('type.num.num',X9))),s('type.infer.infer_st'(X7),X10))) <=> (s('type.num.num',X9) = s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'(X7),X8))) & s('type.infer.infer_st'(X7),X8) = s('type.infer.infer_st'(X7),X10)))),
  file('thm.inferProps.inferProps_37_prove_ltb','thm.inferProps.inferProps_37_prove_ltb')).
fof(f1085,plain,(
  $false | ($spl2 | $spl30 | $spl222)),
  inference(subsumption_resolution,[],[f1078,f317])).
fof(f1078,plain,(
  s('type.num.num',sK10) != s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'(sK8),sK9))) | ($spl30 | $spl222)),
  inference(trivial_inequality_removal,[],[f1057])).
fof(f1057,plain,(
  s('type.pair.prod'('type.infer.exc'('type.num.num',sK7),'type.infer.infer_st'(sK8)),'const.infer.get_next_uvar_1'(s('type.infer.infer_st'(sK8),sK9))) != s('type.pair.prod'('type.infer.exc'('type.num.num',sK7),'type.infer.infer_st'(sK8)),'const.infer.get_next_uvar_1'(s('type.infer.infer_st'(sK8),sK9))) | s('type.num.num',sK10) != s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'(sK8),sK9))) | ($spl30 | $spl222)),
  inference(superposition,[],[f725,f349])).
fof(f319,plain,(
  s('type.infer.infer_st'(sK8),sK9) = s('type.infer.infer_st'(sK8),sK11) | $spl4),
  inference(cnf_transformation,[],[f319_D])).
fof(f319_D,plain,(
  s('type.infer.infer_st'(sK8),sK9) = s('type.infer.infer_st'(sK8),sK11) <=> ~$spl4),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl4])])).
fof(f191,plain,(
  s('type.infer.infer_st'(sK8),sK9) = s('type.infer.infer_st'(sK8),sK11) | s('type.pair.prod'('type.infer.exc'('type.num.num',sK7),'type.infer.infer_st'(sK8)),'const.infer.get_next_uvar_1'(s('type.infer.infer_st'(sK8),sK9))) = s('type.pair.prod'('type.infer.exc'('type.num.num',sK7),'type.infer.infer_st'(sK8)),'const.pair.,_2'(s('type.infer.exc'('type.num.num',sK7),'const.infer.Success_1'(s('type.num.num',sK10))),s('type.infer.infer_st'(sK8),sK11)))),
  inference(cnf_transformation,[],[f140])).
fof(f349,plain,(
  ( ! [X2,X0,X1] : (s('type.pair.prod'('type.infer.exc'('type.num.num',X0),'type.infer.infer_st'(X1)),'const.infer.get_next_uvar_1'(s('type.infer.infer_st'(X1),X2))) = s('type.pair.prod'('type.infer.exc'('type.num.num',X0),'type.infer.infer_st'(X1)),'const.pair.,_2'(s('type.infer.exc'('type.num.num',X0),'const.infer.Success_1'(s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'(X1),X2))))),s('type.infer.infer_st'(X1),X2)))) ) | $spl30),
  inference(cnf_transformation,[],[f349_D])).
fof(f349_D,plain,(
  ( ! [X2,X0,X1] : (s('type.pair.prod'('type.infer.exc'('type.num.num',X0),'type.infer.infer_st'(X1)),'const.infer.get_next_uvar_1'(s('type.infer.infer_st'(X1),X2))) = s('type.pair.prod'('type.infer.exc'('type.num.num',X0),'type.infer.infer_st'(X1)),'const.pair.,_2'(s('type.infer.exc'('type.num.num',X0),'const.infer.Success_1'(s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'(X1),X2))))),s('type.infer.infer_st'(X1),X2)))) ) <=> ~$spl30),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl30])])).
fof(f260,plain,(
  ( ! [X2,X0,X1] : (s('type.pair.prod'('type.infer.exc'('type.num.num',X0),'type.infer.infer_st'(X1)),'const.infer.get_next_uvar_1'(s('type.infer.infer_st'(X1),X2))) = s('type.pair.prod'('type.infer.exc'('type.num.num',X0),'type.infer.infer_st'(X1)),'const.pair.,_2'(s('type.infer.exc'('type.num.num',X0),'const.infer.Success_1'(s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'(X1),X2))))),s('type.infer.infer_st'(X1),X2)))) )),
  inference(cnf_transformation,[],[f85])).
fof(f85,plain,(
  ! [X0,X1,X2] : s('type.pair.prod'('type.infer.exc'('type.num.num',X0),'type.infer.infer_st'(X1)),'const.infer.get_next_uvar_1'(s('type.infer.infer_st'(X1),X2))) = s('type.pair.prod'('type.infer.exc'('type.num.num',X0),'type.infer.infer_st'(X1)),'const.pair.,_2'(s('type.infer.exc'('type.num.num',X0),'const.infer.Success_1'(s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'(X1),X2))))),s('type.infer.infer_st'(X1),X2)))),
  inference(flattening,[],[f84])).
fof(f84,plain,(
  ! [X0,X1] : ! [X2] : s('type.pair.prod'('type.infer.exc'('type.num.num',X0),'type.infer.infer_st'(X1)),'const.infer.get_next_uvar_1'(s('type.infer.infer_st'(X1),X2))) = s('type.pair.prod'('type.infer.exc'('type.num.num',X0),'type.infer.infer_st'(X1)),'const.pair.,_2'(s('type.infer.exc'('type.num.num',X0),'const.infer.Success_1'(s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'(X1),X2))))),s('type.infer.infer_st'(X1),X2)))),
  inference(rectify,[],[f26])).
fof(f26,axiom,(
  ! [X6,X7] : ! [X5] : s('type.pair.prod'('type.infer.exc'('type.num.num',X6),'type.infer.infer_st'(X7)),'const.infer.get_next_uvar_1'(s('type.infer.infer_st'(X7),X5))) = s('type.pair.prod'('type.infer.exc'('type.num.num',X6),'type.infer.infer_st'(X7)),'const.pair.,_2'(s('type.infer.exc'('type.num.num',X6),'const.infer.Success_1'(s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'(X7),X5))))),s('type.infer.infer_st'(X7),X5)))),
  file('thm.inferProps.inferProps_37_prove_ltb','thm.infer.get_next_uvar_def')).
fof(f356,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'(X0,X1),'const.pair.,_2'(s(X0,X2),s(X1,X3))) != s('type.pair.prod'(X0,X1),'const.pair.,_2'(s(X0,X4),s(X1,X5))) | s(X1,X3) = s(X1,X5)) ) | $spl44),
  inference(cnf_transformation,[],[f356_D])).
fof(f356_D,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'(X0,X1),'const.pair.,_2'(s(X0,X2),s(X1,X3))) != s('type.pair.prod'(X0,X1),'const.pair.,_2'(s(X0,X4),s(X1,X5))) | s(X1,X3) = s(X1,X5)) ) <=> ~$spl44),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl44])])).
fof(f267,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s(X1,X3) = s(X1,X5) | s('type.pair.prod'(X0,X1),'const.pair.,_2'(s(X0,X2),s(X1,X3))) != s('type.pair.prod'(X0,X1),'const.pair.,_2'(s(X0,X4),s(X1,X5)))) )),
  inference(cnf_transformation,[],[f169])).
fof(f169,plain,(
  ! [X0,X1,X2,X3,X4,X5] : ((s('type.pair.prod'(X0,X1),'const.pair.,_2'(s(X0,X2),s(X1,X3))) != s('type.pair.prod'(X0,X1),'const.pair.,_2'(s(X0,X4),s(X1,X5))) | (s(X0,X2) = s(X0,X4) & s(X1,X3) = s(X1,X5))) & (s(X0,X2) != s(X0,X4) | s(X1,X3) != s(X1,X5) | s('type.pair.prod'(X0,X1),'const.pair.,_2'(s(X0,X2),s(X1,X3))) = s('type.pair.prod'(X0,X1),'const.pair.,_2'(s(X0,X4),s(X1,X5)))))),
  inference(flattening,[],[f168])).
fof(f168,plain,(
  ! [X0,X1,X2,X3,X4,X5] : ((s('type.pair.prod'(X0,X1),'const.pair.,_2'(s(X0,X2),s(X1,X3))) != s('type.pair.prod'(X0,X1),'const.pair.,_2'(s(X0,X4),s(X1,X5))) | (s(X0,X2) = s(X0,X4) & s(X1,X3) = s(X1,X5))) & ((s(X0,X2) != s(X0,X4) | s(X1,X3) != s(X1,X5)) | s('type.pair.prod'(X0,X1),'const.pair.,_2'(s(X0,X2),s(X1,X3))) = s('type.pair.prod'(X0,X1),'const.pair.,_2'(s(X0,X4),s(X1,X5)))))),
  inference(nnf_transformation,[],[f93])).
fof(f93,plain,(
  ! [X0,X1,X2,X3,X4,X5] : (s('type.pair.prod'(X0,X1),'const.pair.,_2'(s(X0,X2),s(X1,X3))) = s('type.pair.prod'(X0,X1),'const.pair.,_2'(s(X0,X4),s(X1,X5))) <=> (s(X0,X2) = s(X0,X4) & s(X1,X3) = s(X1,X5)))),
  inference(flattening,[],[f92])).
fof(f92,plain,(
  ! [X0,X1] : ! [X2,X3,X4,X5] : (s('type.pair.prod'(X0,X1),'const.pair.,_2'(s(X0,X2),s(X1,X3))) = s('type.pair.prod'(X0,X1),'const.pair.,_2'(s(X0,X4),s(X1,X5))) <=> (s(X0,X2) = s(X0,X4) & s(X1,X3) = s(X1,X5)))),
  inference(rectify,[],[f27])).
fof(f27,axiom,(
  ! [X7,X6] : ! [X14,X17,X15,X18] : (s('type.pair.prod'(X7,X6),'const.pair.,_2'(s(X7,X14),s(X6,X17))) = s('type.pair.prod'(X7,X6),'const.pair.,_2'(s(X7,X15),s(X6,X18))) <=> (s(X7,X14) = s(X7,X15) & s(X6,X17) = s(X6,X18)))),
  file('thm.inferProps.inferProps_37_prove_ltb','thm.pair.CLOSED_PAIR_EQ')).
fof(f352,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.infer.exc'(X1,X0),'const.infer.Success_1'(s(X1,X2))) != s('type.infer.exc'(X1,X0),'const.infer.Success_1'(s(X1,X3))) | s(X1,X2) = s(X1,X3)) ) | $spl36),
  inference(cnf_transformation,[],[f352_D])).
fof(f352_D,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.infer.exc'(X1,X0),'const.infer.Success_1'(s(X1,X2))) != s('type.infer.exc'(X1,X0),'const.infer.Success_1'(s(X1,X3))) | s(X1,X2) = s(X1,X3)) ) <=> ~$spl36),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl36])])).
fof(f262,plain,(
  ( ! [X2,X0,X3,X1] : (s(X1,X2) = s(X1,X3) | s('type.infer.exc'(X1,X0),'const.infer.Success_1'(s(X1,X2))) != s('type.infer.exc'(X1,X0),'const.infer.Success_1'(s(X1,X3)))) )),
  inference(cnf_transformation,[],[f166])).
fof(f166,plain,(
  ! [X0,X1,X2,X3] : ((s('type.infer.exc'(X1,X0),'const.infer.Success_1'(s(X1,X2))) != s('type.infer.exc'(X1,X0),'const.infer.Success_1'(s(X1,X3))) | s(X1,X2) = s(X1,X3)) & (s(X1,X2) != s(X1,X3) | s('type.infer.exc'(X1,X0),'const.infer.Success_1'(s(X1,X2))) = s('type.infer.exc'(X1,X0),'const.infer.Success_1'(s(X1,X3)))))),
  inference(nnf_transformation,[],[f89])).
fof(f89,plain,(
  ! [X0,X1,X2,X3] : (s('type.infer.exc'(X1,X0),'const.infer.Success_1'(s(X1,X2))) = s('type.infer.exc'(X1,X0),'const.infer.Success_1'(s(X1,X3))) <=> s(X1,X2) = s(X1,X3))),
  inference(flattening,[],[f88])).
fof(f88,plain,(
  ! [X0,X1] : ! [X2,X3] : (s('type.infer.exc'(X1,X0),'const.infer.Success_1'(s(X1,X2))) = s('type.infer.exc'(X1,X0),'const.infer.Success_1'(s(X1,X3))) <=> s(X1,X2) = s(X1,X3))),
  inference(rectify,[],[f24])).
fof(f24,axiom,(
  ! [X6,X7] : ! [X15,X16] : (s('type.infer.exc'(X7,X6),'const.infer.Success_1'(s(X7,X15))) = s('type.infer.exc'(X7,X6),'const.infer.Success_1'(s(X7,X16))) <=> s(X7,X15) = s(X7,X16))),
  file('thm.inferProps.inferProps_37_prove_ltb','thm.infer.exc_|49||49||split|0')).
fof(f357,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'(X0,X1),'const.pair.,_2'(s(X0,X2),s(X1,X3))) != s('type.pair.prod'(X0,X1),'const.pair.,_2'(s(X0,X4),s(X1,X5))) | s(X0,X2) = s(X0,X4)) ) | $spl46),
  inference(cnf_transformation,[],[f357_D])).
fof(f357_D,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'(X0,X1),'const.pair.,_2'(s(X0,X2),s(X1,X3))) != s('type.pair.prod'(X0,X1),'const.pair.,_2'(s(X0,X4),s(X1,X5))) | s(X0,X2) = s(X0,X4)) ) <=> ~$spl46),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl46])])).
fof(f266,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s(X0,X2) = s(X0,X4) | s('type.pair.prod'(X0,X1),'const.pair.,_2'(s(X0,X2),s(X1,X3))) != s('type.pair.prod'(X0,X1),'const.pair.,_2'(s(X0,X4),s(X1,X5)))) )),
  inference(cnf_transformation,[],[f169])).
fof(f1120,plain,(
  ( ! [X0,X1] : (s('type.pair.prod'('type.infer.exc'('type.num.num',sK7),'type.infer.infer_st'(sK8)),'const.infer.get_next_uvar_1'(s('type.infer.infer_st'(sK8),sK9))) != s('type.pair.prod'('type.infer.exc'('type.num.num',sK7),'type.infer.infer_st'(sK8)),'const.pair.,_2'(s('type.infer.exc'('type.num.num',sK7),X0),s('type.infer.infer_st'(sK8),X1))) | s('type.infer.exc'('type.num.num',sK7),X0) = s('type.infer.exc'('type.num.num',sK7),'const.infer.Success_1'(s('type.num.num',sK10)))) ) | $spl378),
  inference(cnf_transformation,[],[f1120_D])).
fof(f1120_D,plain,(
  ( ! [X0,X1] : (s('type.pair.prod'('type.infer.exc'('type.num.num',sK7),'type.infer.infer_st'(sK8)),'const.infer.get_next_uvar_1'(s('type.infer.infer_st'(sK8),sK9))) != s('type.pair.prod'('type.infer.exc'('type.num.num',sK7),'type.infer.infer_st'(sK8)),'const.pair.,_2'(s('type.infer.exc'('type.num.num',sK7),X0),s('type.infer.infer_st'(sK8),X1))) | s('type.infer.exc'('type.num.num',sK7),X0) = s('type.infer.exc'('type.num.num',sK7),'const.infer.Success_1'(s('type.num.num',sK10)))) ) <=> ~$spl378),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl378])])).
fof(f1099,plain,(
  ( ! [X0,X1] : (s('type.pair.prod'('type.infer.exc'('type.num.num',sK7),'type.infer.infer_st'(sK8)),'const.infer.get_next_uvar_1'(s('type.infer.infer_st'(sK8),sK9))) != s('type.pair.prod'('type.infer.exc'('type.num.num',sK7),'type.infer.infer_st'(sK8)),'const.pair.,_2'(s('type.infer.exc'('type.num.num',sK7),X0),s('type.infer.infer_st'(sK8),X1))) | s('type.infer.exc'('type.num.num',sK7),X0) = s('type.infer.exc'('type.num.num',sK7),'const.infer.Success_1'(s('type.num.num',sK10)))) ) | ($spl0 | $spl46)),
  inference(superposition,[],[f357,f315])).
fof(f1272,plain,(
  ( ! [X0] : (s('type.pair.prod'('type.infer.exc'('type.num.num',sK7),'type.infer.infer_st'(sK8)),'const.infer.get_next_uvar_1'(s('type.infer.infer_st'(sK8),sK9))) != s('type.pair.prod'('type.infer.exc'('type.num.num',sK7),'type.infer.infer_st'(sK8)),'const.infer.get_next_uvar_1'(s('type.infer.infer_st'(sK8),X0))) | s('type.infer.exc'('type.num.num',sK7),'const.infer.Success_1'(s('type.num.num',sK10))) = s('type.infer.exc'('type.num.num',sK7),'const.infer.Success_1'(s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'(sK8),X0)))))) ) | $spl406),
  inference(cnf_transformation,[],[f1272_D])).
fof(f1272_D,plain,(
  ( ! [X0] : (s('type.pair.prod'('type.infer.exc'('type.num.num',sK7),'type.infer.infer_st'(sK8)),'const.infer.get_next_uvar_1'(s('type.infer.infer_st'(sK8),sK9))) != s('type.pair.prod'('type.infer.exc'('type.num.num',sK7),'type.infer.infer_st'(sK8)),'const.infer.get_next_uvar_1'(s('type.infer.infer_st'(sK8),X0))) | s('type.infer.exc'('type.num.num',sK7),'const.infer.Success_1'(s('type.num.num',sK10))) = s('type.infer.exc'('type.num.num',sK7),'const.infer.Success_1'(s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'(sK8),X0)))))) ) <=> ~$spl406),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl406])])).
fof(f1269,plain,(
  ( ! [X0] : (s('type.pair.prod'('type.infer.exc'('type.num.num',sK7),'type.infer.infer_st'(sK8)),'const.infer.get_next_uvar_1'(s('type.infer.infer_st'(sK8),sK9))) != s('type.pair.prod'('type.infer.exc'('type.num.num',sK7),'type.infer.infer_st'(sK8)),'const.infer.get_next_uvar_1'(s('type.infer.infer_st'(sK8),X0))) | s('type.infer.exc'('type.num.num',sK7),'const.infer.Success_1'(s('type.num.num',sK10))) = s('type.infer.exc'('type.num.num',sK7),'const.infer.Success_1'(s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'(sK8),X0)))))) ) | ($spl30 | $spl378)),
  inference(superposition,[],[f1120,f349])).
fof(f1278,plain,(
  s('type.infer.exc'('type.num.num',sK7),'const.infer.Success_1'(s('type.num.num',sK10))) = s('type.infer.exc'('type.num.num',sK7),'const.infer.Success_1'(s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'(sK8),sK9))))) | $spl408),
  inference(cnf_transformation,[],[f1278_D])).
fof(f1278_D,plain,(
  s('type.infer.exc'('type.num.num',sK7),'const.infer.Success_1'(s('type.num.num',sK10))) = s('type.infer.exc'('type.num.num',sK7),'const.infer.Success_1'(s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'(sK8),sK9))))) <=> ~$spl408),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl408])])).
fof(f1274,plain,(
  s('type.infer.exc'('type.num.num',sK7),'const.infer.Success_1'(s('type.num.num',sK10))) = s('type.infer.exc'('type.num.num',sK7),'const.infer.Success_1'(s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'(sK8),sK9))))) | $spl406),
  inference(equality_resolution,[],[f1272])).
fof(f1306,plain,(
  ( ! [X0] : (s('type.infer.exc'('type.num.num',sK7),'const.infer.Success_1'(s('type.num.num',sK10))) != s('type.infer.exc'('type.num.num',sK7),'const.infer.Success_1'(s('type.num.num',X0))) | s('type.num.num',X0) = s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'(sK8),sK9)))) ) | $spl412),
  inference(cnf_transformation,[],[f1306_D])).
fof(f1306_D,plain,(
  ( ! [X0] : (s('type.infer.exc'('type.num.num',sK7),'const.infer.Success_1'(s('type.num.num',sK10))) != s('type.infer.exc'('type.num.num',sK7),'const.infer.Success_1'(s('type.num.num',X0))) | s('type.num.num',X0) = s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'(sK8),sK9)))) ) <=> ~$spl412),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl412])])).
fof(f1282,plain,(
  ( ! [X0] : (s('type.infer.exc'('type.num.num',sK7),'const.infer.Success_1'(s('type.num.num',sK10))) != s('type.infer.exc'('type.num.num',sK7),'const.infer.Success_1'(s('type.num.num',X0))) | s('type.num.num',X0) = s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'(sK8),sK9)))) ) | ($spl36 | $spl408)),
  inference(superposition,[],[f352,f1278])).
fof(f1121,plain,(
  ( ! [X4,X5] : (s('type.pair.prod'('type.infer.exc'('type.num.num',sK7),'type.infer.infer_st'(sK8)),'const.infer.get_next_uvar_1'(s('type.infer.infer_st'(sK8),sK9))) != s('type.pair.prod'('type.infer.exc'('type.num.num',sK7),'type.infer.infer_st'(sK8)),'const.pair.,_2'(s('type.infer.exc'('type.num.num',sK7),X4),s('type.infer.infer_st'(sK8),X5))) | s('type.infer.infer_st'(sK8),sK11) = s('type.infer.infer_st'(sK8),X5)) ) | $spl380),
  inference(cnf_transformation,[],[f1121_D])).
fof(f1121_D,plain,(
  ( ! [X4,X5] : (s('type.pair.prod'('type.infer.exc'('type.num.num',sK7),'type.infer.infer_st'(sK8)),'const.infer.get_next_uvar_1'(s('type.infer.infer_st'(sK8),sK9))) != s('type.pair.prod'('type.infer.exc'('type.num.num',sK7),'type.infer.infer_st'(sK8)),'const.pair.,_2'(s('type.infer.exc'('type.num.num',sK7),X4),s('type.infer.infer_st'(sK8),X5))) | s('type.infer.infer_st'(sK8),sK11) = s('type.infer.infer_st'(sK8),X5)) ) <=> ~$spl380),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl380])])).
fof(f1101,plain,(
  ( ! [X4,X5] : (s('type.pair.prod'('type.infer.exc'('type.num.num',sK7),'type.infer.infer_st'(sK8)),'const.infer.get_next_uvar_1'(s('type.infer.infer_st'(sK8),sK9))) != s('type.pair.prod'('type.infer.exc'('type.num.num',sK7),'type.infer.infer_st'(sK8)),'const.pair.,_2'(s('type.infer.exc'('type.num.num',sK7),X4),s('type.infer.infer_st'(sK8),X5))) | s('type.infer.infer_st'(sK8),sK11) = s('type.infer.infer_st'(sK8),X5)) ) | ($spl0 | $spl44)),
  inference(superposition,[],[f356,f315])).
fof(f1141,plain,(
  ( ! [X0] : (s('type.pair.prod'('type.infer.exc'('type.num.num',sK7),'type.infer.infer_st'(sK8)),'const.infer.get_next_uvar_1'(s('type.infer.infer_st'(sK8),sK9))) != s('type.pair.prod'('type.infer.exc'('type.num.num',sK7),'type.infer.infer_st'(sK8)),'const.infer.get_next_uvar_1'(s('type.infer.infer_st'(sK8),X0))) | s('type.infer.infer_st'(sK8),sK11) = s('type.infer.infer_st'(sK8),X0)) ) | $spl382),
  inference(cnf_transformation,[],[f1141_D])).
fof(f1141_D,plain,(
  ( ! [X0] : (s('type.pair.prod'('type.infer.exc'('type.num.num',sK7),'type.infer.infer_st'(sK8)),'const.infer.get_next_uvar_1'(s('type.infer.infer_st'(sK8),sK9))) != s('type.pair.prod'('type.infer.exc'('type.num.num',sK7),'type.infer.infer_st'(sK8)),'const.infer.get_next_uvar_1'(s('type.infer.infer_st'(sK8),X0))) | s('type.infer.infer_st'(sK8),sK11) = s('type.infer.infer_st'(sK8),X0)) ) <=> ~$spl382),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl382])])).
fof(f1140,plain,(
  ( ! [X0] : (s('type.pair.prod'('type.infer.exc'('type.num.num',sK7),'type.infer.infer_st'(sK8)),'const.infer.get_next_uvar_1'(s('type.infer.infer_st'(sK8),sK9))) != s('type.pair.prod'('type.infer.exc'('type.num.num',sK7),'type.infer.infer_st'(sK8)),'const.infer.get_next_uvar_1'(s('type.infer.infer_st'(sK8),X0))) | s('type.infer.infer_st'(sK8),sK11) = s('type.infer.infer_st'(sK8),X0)) ) | ($spl30 | $spl380)),
  inference(superposition,[],[f1121,f349])).
fof(f1168,plain,(
  s('type.infer.infer_st'(sK8),sK9) = s('type.infer.infer_st'(sK8),sK11) | $spl382),
  inference(equality_resolution,[],[f1141])).
fof(f316,plain,(
  s('type.pair.prod'('type.infer.exc'('type.num.num',sK7),'type.infer.infer_st'(sK8)),'const.infer.get_next_uvar_1'(s('type.infer.infer_st'(sK8),sK9))) != s('type.pair.prod'('type.infer.exc'('type.num.num',sK7),'type.infer.infer_st'(sK8)),'const.pair.,_2'(s('type.infer.exc'('type.num.num',sK7),'const.infer.Success_1'(s('type.num.num',sK10))),s('type.infer.infer_st'(sK8),sK11))) | $spl1),
  inference(cnf_transformation,[],[f316_D])).
fof(f316_D,plain,(
  s('type.pair.prod'('type.infer.exc'('type.num.num',sK7),'type.infer.infer_st'(sK8)),'const.infer.get_next_uvar_1'(s('type.infer.infer_st'(sK8),sK9))) != s('type.pair.prod'('type.infer.exc'('type.num.num',sK7),'type.infer.infer_st'(sK8)),'const.pair.,_2'(s('type.infer.exc'('type.num.num',sK7),'const.infer.Success_1'(s('type.num.num',sK10))),s('type.infer.infer_st'(sK8),sK11))) <=> ~$spl1),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1])])).
fof(f318,plain,(
  s('type.num.num',sK10) != s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'(sK8),sK9))) | $spl3),
  inference(cnf_transformation,[],[f318_D])).
fof(f318_D,plain,(
  s('type.num.num',sK10) != s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'(sK8),sK9))) <=> ~$spl3),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl3])])).
fof(f320,plain,(
  s('type.infer.infer_st'(sK8),sK9) != s('type.infer.infer_st'(sK8),sK11) | $spl5),
  inference(cnf_transformation,[],[f320_D])).
fof(f320_D,plain,(
  s('type.infer.infer_st'(sK8),sK9) != s('type.infer.infer_st'(sK8),sK11) <=> ~$spl5),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl5])])).
fof(f192,plain,(
  s('type.infer.infer_st'(sK8),sK9) != s('type.infer.infer_st'(sK8),sK11) | s('type.num.num',sK10) != s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'(sK8),sK9))) | s('type.pair.prod'('type.infer.exc'('type.num.num',sK7),'type.infer.infer_st'(sK8)),'const.infer.get_next_uvar_1'(s('type.infer.infer_st'(sK8),sK9))) != s('type.pair.prod'('type.infer.exc'('type.num.num',sK7),'type.infer.infer_st'(sK8)),'const.pair.,_2'(s('type.infer.exc'('type.num.num',sK7),'const.infer.Success_1'(s('type.num.num',sK10))),s('type.infer.infer_st'(sK8),sK11)))),
  inference(cnf_transformation,[],[f140])).
fof(f1338,plain,(
  $false | ($spl3 | $spl412)),
  inference(subsumption_resolution,[],[f1335,f318])).
fof(f1335,plain,(
  s('type.num.num',sK10) = s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'(sK8),sK9))) | $spl412),
  inference(equality_resolution,[],[f1306])).
fof(f406,plain,(
  s('type.pair.prod'('type.infer.exc'('type.num.num',sK7),'type.infer.infer_st'(sK8)),'const.infer.get_next_uvar_1'(s('type.infer.infer_st'(sK8),sK9))) != s('type.pair.prod'('type.infer.exc'('type.num.num',sK7),'type.infer.infer_st'(sK8)),'const.pair.,_2'(s('type.infer.exc'('type.num.num',sK7),'const.infer.Success_1'(s('type.num.num',sK10))),s('type.infer.infer_st'(sK8),sK9))) | $spl131),
  inference(cnf_transformation,[],[f406_D])).
fof(f406_D,plain,(
  s('type.pair.prod'('type.infer.exc'('type.num.num',sK7),'type.infer.infer_st'(sK8)),'const.infer.get_next_uvar_1'(s('type.infer.infer_st'(sK8),sK9))) != s('type.pair.prod'('type.infer.exc'('type.num.num',sK7),'type.infer.infer_st'(sK8)),'const.pair.,_2'(s('type.infer.exc'('type.num.num',sK7),'const.infer.Success_1'(s('type.num.num',sK10))),s('type.infer.infer_st'(sK8),sK9))) <=> ~$spl131),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl131])])).
fof(f404,plain,(
  s('type.pair.prod'('type.infer.exc'('type.num.num',sK7),'type.infer.infer_st'(sK8)),'const.infer.get_next_uvar_1'(s('type.infer.infer_st'(sK8),sK9))) != s('type.pair.prod'('type.infer.exc'('type.num.num',sK7),'type.infer.infer_st'(sK8)),'const.pair.,_2'(s('type.infer.exc'('type.num.num',sK7),'const.infer.Success_1'(s('type.num.num',sK10))),s('type.infer.infer_st'(sK8),sK9))) | ($spl1 | $spl4)),
  inference(forward_demodulation,[],[f316,f319])).
fof(f351,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.infer.exc'(X1,X0),'const.infer.Success_1'(s(X1,X2))) = s('type.infer.exc'(X1,X0),'const.infer.Success_1'(s(X1,X3))) | s(X1,X2) != s(X1,X3)) ) | $spl34),
  inference(cnf_transformation,[],[f351_D])).
fof(f351_D,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.infer.exc'(X1,X0),'const.infer.Success_1'(s(X1,X2))) = s('type.infer.exc'(X1,X0),'const.infer.Success_1'(s(X1,X3))) | s(X1,X2) != s(X1,X3)) ) <=> ~$spl34),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl34])])).
fof(f263,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.infer.exc'(X1,X0),'const.infer.Success_1'(s(X1,X2))) = s('type.infer.exc'(X1,X0),'const.infer.Success_1'(s(X1,X3))) | s(X1,X2) != s(X1,X3)) )),
  inference(cnf_transformation,[],[f166])).
fof(f725,plain,(
  ( ! [X0] : (s('type.pair.prod'('type.infer.exc'('type.num.num',sK7),'type.infer.infer_st'(sK8)),'const.infer.get_next_uvar_1'(s('type.infer.infer_st'(sK8),sK9))) != s('type.pair.prod'('type.infer.exc'('type.num.num',sK7),'type.infer.infer_st'(sK8)),'const.pair.,_2'(s('type.infer.exc'('type.num.num',sK7),'const.infer.Success_1'(s('type.num.num',X0))),s('type.infer.infer_st'(sK8),sK9))) | s('type.num.num',sK10) != s('type.num.num',X0)) ) | $spl222),
  inference(cnf_transformation,[],[f725_D])).
fof(f725_D,plain,(
  ( ! [X0] : (s('type.pair.prod'('type.infer.exc'('type.num.num',sK7),'type.infer.infer_st'(sK8)),'const.infer.get_next_uvar_1'(s('type.infer.infer_st'(sK8),sK9))) != s('type.pair.prod'('type.infer.exc'('type.num.num',sK7),'type.infer.infer_st'(sK8)),'const.pair.,_2'(s('type.infer.exc'('type.num.num',sK7),'const.infer.Success_1'(s('type.num.num',X0))),s('type.infer.infer_st'(sK8),sK9))) | s('type.num.num',sK10) != s('type.num.num',X0)) ) <=> ~$spl222),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl222])])).
fof(f715,plain,(
  ( ! [X0] : (s('type.pair.prod'('type.infer.exc'('type.num.num',sK7),'type.infer.infer_st'(sK8)),'const.infer.get_next_uvar_1'(s('type.infer.infer_st'(sK8),sK9))) != s('type.pair.prod'('type.infer.exc'('type.num.num',sK7),'type.infer.infer_st'(sK8)),'const.pair.,_2'(s('type.infer.exc'('type.num.num',sK7),'const.infer.Success_1'(s('type.num.num',X0))),s('type.infer.infer_st'(sK8),sK9))) | s('type.num.num',sK10) != s('type.num.num',X0)) ) | ($spl34 | $spl131)),
  inference(superposition,[],[f406,f351])).
% SZS output end Proof for thm.inferProps
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 115
% Passive clauses: 209
% Generated clauses: 1182
% Final active clauses: 100
% Final passive clauses: 89
% Input formulas: 38
% Initial clauses: 119
% 
% Duplicate literals: 26
% Trivial inequalities: 11
% Fw subsumption resolutions: 48
% Fw demodulations: 85
% Bw demodulations: 8
% Condensations: 21
% Global subsumptions: 14
% 
% Simple tautologies: 81
% Equational tautologies: 14
% Forward subsumptions: 280
% 
% Binary resolution: 202
% Factoring: 4
% Forward superposition: 213
% Backward superposition: 137
% Self superposition: 18
% Equality factoring: 2
% Equality resolution: 19
% 
% Split clauses: 10
% Split components: 21
% SAT solver clauses: 519
% SAT solver unit clauses: 135
% SAT solver binary clauses: 78
% SAT solver learnt clauses: 30
% SAT solver learnt literals: 11
% 
% Sat splits: 10
% Sat splitting refutations: 7
% 
% TWLsolver clauses: 461
% TWLsolver calls for satisfiability: 966
% 
% Memory used [KB]: 2046
% Time elapsed: 0.042 s
% ------------------------------
% ------------------------------
% Success in time 0.67 s
