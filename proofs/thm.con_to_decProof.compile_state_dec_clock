Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 149 next slice time: 5
dis+11_7_3 on thm.con_to_decProof
% (122855)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 835
% Passive clauses: 6065
% Generated clauses: 26288
% Final active clauses: 784
% Final passive clauses: 4849
% Input formulas: 260
% Initial clauses: 497
% 
% Duplicate literals: 194
% Trivial inequalities: 48
% Fw subsumption resolutions: 1645
% Fw demodulations: 1938
% Bw demodulations: 12
% 
% Simple tautologies: 196
% Equational tautologies: 34
% Forward subsumptions: 15842
% 
% Binary resolution: 4807
% Factoring: 962
% Forward superposition: 6892
% Backward superposition: 9283
% Self superposition: 58
% Equality factoring: 2
% Equality resolution: 19
% 
% Split clauses: 399
% Split components: 800
% SAT solver clauses: 577
% SAT solver unit clauses: 13
% SAT solver binary clauses: 71
% 
% Sat splits: 399
% Sat splitting refutations: 12
% 
% TWLsolver clauses: 577
% TWLsolver calls for satisfiability: 340
% 
% Memory used [KB]: 15479
% Time elapsed: 0.618 s
% ------------------------------
% ------------------------------
% remaining time: 143 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.con_to_decProof
% (122880)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 495
% Passive clauses: 2695
% Generated clauses: 19423
% Final active clauses: 476
% Final passive clauses: 1935
% Input formulas: 260
% Initial clauses: 497
% 
% Duplicate literals: 94
% Trivial inequalities: 31
% Fw subsumption resolutions: 711
% Fw demodulations: 2118
% Bw demodulations: 273
% Condensations: 127
% Global subsumptions: 24
% 
% Simple tautologies: 211
% Equational tautologies: 20
% Forward subsumptions: 9869
% Fw demodulations to eq. taut.: 7
% Bw demodulations to eq. taut.: 2
% 
% Binary resolution: 1933
% Factoring: 307
% Forward superposition: 5465
% Backward superposition: 4919
% Self superposition: 74
% Equality factoring: 2
% Equality resolution: 16
% 
% Split clauses: 6
% Split components: 12
% SAT solver clauses: 3941
% SAT solver unit clauses: 673
% SAT solver binary clauses: 177
% SAT solver learnt clauses: 50
% SAT solver learnt literals: 15
% 
% Sat splits: 6
% Sat splitting refutations: 19
% 
% TWLsolver clauses: 3843
% TWLsolver calls for satisfiability: 11648
% 
% Memory used [KB]: 22515
% Time elapsed: 0.700 s
% ------------------------------
% ------------------------------
% remaining time: 136 next slice time: 103
lrs+11_2_br=off:cond=on:fde=none:gs=on:gsaa=full_model:lwlo=on:nwc=2:sas=minisat:stl=30:ssfp=100000:ssfq=1.4:smm=sco:ssnc=none:sp=occurrence:urr=on_98 on thm.con_to_decProof
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.con_to_decProof
% SZS output start Proof for thm.con_to_decProof
fof(f122495,plain,(
  $false),
  inference(trivial_inequality_removal,[],[f122489])).
fof(f122489,plain,(
  ( ! [X0] : (s('type.semanticPrimitives.result'('type.decSem.state'(sK24),X0),'const.semanticPrimitives.Rval_1'(s('type.decSem.state'(sK24),'const.con_to_decProof.compile_state_1'(s('type.conSem.state'(sK24),'const.conSem.dec_clock_1'(s('type.conSem.state'(sK24),sK25))))))) != s('type.semanticPrimitives.result'('type.decSem.state'(sK24),X0),'const.semanticPrimitives.Rval_1'(s('type.decSem.state'(sK24),'const.con_to_decProof.compile_state_1'(s('type.conSem.state'(sK24),'const.conSem.dec_clock_1'(s('type.conSem.state'(sK24),sK25)))))))) )),
  inference(backward_demodulation,[],[f122486,f9781])).
fof(f9781,plain,(
  ( ! [X0] : (s('type.semanticPrimitives.result'('type.decSem.state'(sK24),X0),'const.semanticPrimitives.Rval_1'(s('type.decSem.state'(sK24),'const.con_to_decProof.compile_state_1'(s('type.conSem.state'(sK24),'const.conSem.dec_clock_1'(s('type.conSem.state'(sK24),sK25))))))) != s('type.semanticPrimitives.result'('type.decSem.state'(sK24),X0),'const.semanticPrimitives.Rval_1'(s('type.decSem.state'(sK24),'const.decSem.dec_clock_1'(s('type.decSem.state'(sK24),'const.con_to_decProof.compile_state_1'(s('type.conSem.state'(sK24),sK25)))))))) )),
  inference(unit_resulting_resolution,[],[f931,f1300])).
fof(f1300,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.semanticPrimitives.result'(X1,X0),'const.semanticPrimitives.Rval_1'(s(X1,X2))) != s('type.semanticPrimitives.result'(X1,X0),'const.semanticPrimitives.Rval_1'(s(X1,X3))) | s(X1,X2) = s(X1,X3)) )),
  inference(cnf_transformation,[],[f890])).
fof(f890,plain,(
  ! [X0,X1,X2,X3] : ((s('type.semanticPrimitives.result'(X1,X0),'const.semanticPrimitives.Rval_1'(s(X1,X2))) != s('type.semanticPrimitives.result'(X1,X0),'const.semanticPrimitives.Rval_1'(s(X1,X3))) | s(X1,X2) = s(X1,X3)) & (s(X1,X2) != s(X1,X3) | s('type.semanticPrimitives.result'(X1,X0),'const.semanticPrimitives.Rval_1'(s(X1,X2))) = s('type.semanticPrimitives.result'(X1,X0),'const.semanticPrimitives.Rval_1'(s(X1,X3)))))),
  inference(nnf_transformation,[],[f595])).
fof(f595,plain,(
  ! [X0,X1,X2,X3] : (s('type.semanticPrimitives.result'(X1,X0),'const.semanticPrimitives.Rval_1'(s(X1,X2))) = s('type.semanticPrimitives.result'(X1,X0),'const.semanticPrimitives.Rval_1'(s(X1,X3))) <=> s(X1,X2) = s(X1,X3))),
  inference(flattening,[],[f594])).
fof(f594,plain,(
  ! [X0,X1] : ! [X2,X3] : (s('type.semanticPrimitives.result'(X1,X0),'const.semanticPrimitives.Rval_1'(s(X1,X2))) = s('type.semanticPrimitives.result'(X1,X0),'const.semanticPrimitives.Rval_1'(s(X1,X3))) <=> s(X1,X2) = s(X1,X3))),
  inference(rectify,[],[f110])).
fof(f110,axiom,(
  ! [X42,X6] : ! [X57,X61] : (s('type.semanticPrimitives.result'(X6,X42),'const.semanticPrimitives.Rval_1'(s(X6,X57))) = s('type.semanticPrimitives.result'(X6,X42),'const.semanticPrimitives.Rval_1'(s(X6,X61))) <=> s(X6,X57) = s(X6,X61))),
  file('thm.con_to_decProof.compile_state_dec_clock','thm.semanticPrimitives.result_|49||49||split|0')).
fof(f931,plain,(
  s('type.decSem.state'(sK24),'const.con_to_decProof.compile_state_1'(s('type.conSem.state'(sK24),'const.conSem.dec_clock_1'(s('type.conSem.state'(sK24),sK25))))) != s('type.decSem.state'(sK24),'const.decSem.dec_clock_1'(s('type.decSem.state'(sK24),'const.con_to_decProof.compile_state_1'(s('type.conSem.state'(sK24),sK25)))))),
  inference(cnf_transformation,[],[f759])).
fof(f759,plain,(
  s('type.decSem.state'(sK24),'const.con_to_decProof.compile_state_1'(s('type.conSem.state'(sK24),'const.conSem.dec_clock_1'(s('type.conSem.state'(sK24),sK25))))) != s('type.decSem.state'(sK24),'const.decSem.dec_clock_1'(s('type.decSem.state'(sK24),'const.con_to_decProof.compile_state_1'(s('type.conSem.state'(sK24),sK25)))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK24,sK25])],[f687])).
fof(f687,plain,(
  ? [X0,X1] : s('type.decSem.state'(X0),'const.con_to_decProof.compile_state_1'(s('type.conSem.state'(X0),'const.conSem.dec_clock_1'(s('type.conSem.state'(X0),X1))))) != s('type.decSem.state'(X0),'const.decSem.dec_clock_1'(s('type.decSem.state'(X0),'const.con_to_decProof.compile_state_1'(s('type.conSem.state'(X0),X1)))))),
  inference(ennf_transformation,[],[f263])).
fof(f263,plain,(
  ~! [X0,X1] : s('type.decSem.state'(X0),'const.con_to_decProof.compile_state_1'(s('type.conSem.state'(X0),'const.conSem.dec_clock_1'(s('type.conSem.state'(X0),X1))))) = s('type.decSem.state'(X0),'const.decSem.dec_clock_1'(s('type.decSem.state'(X0),'const.con_to_decProof.compile_state_1'(s('type.conSem.state'(X0),X1)))))),
  inference(flattening,[],[f262])).
fof(f262,plain,(
  ~! [X0] : ! [X1] : s('type.decSem.state'(X0),'const.con_to_decProof.compile_state_1'(s('type.conSem.state'(X0),'const.conSem.dec_clock_1'(s('type.conSem.state'(X0),X1))))) = s('type.decSem.state'(X0),'const.decSem.dec_clock_1'(s('type.decSem.state'(X0),'const.con_to_decProof.compile_state_1'(s('type.conSem.state'(X0),X1)))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : ! [X7] : s('type.decSem.state'(X6),'const.con_to_decProof.compile_state_1'(s('type.conSem.state'(X6),'const.conSem.dec_clock_1'(s('type.conSem.state'(X6),X7))))) = s('type.decSem.state'(X6),'const.decSem.dec_clock_1'(s('type.decSem.state'(X6),'const.con_to_decProof.compile_state_1'(s('type.conSem.state'(X6),X7)))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : ! [X7] : s('type.decSem.state'(X6),'const.con_to_decProof.compile_state_1'(s('type.conSem.state'(X6),'const.conSem.dec_clock_1'(s('type.conSem.state'(X6),X7))))) = s('type.decSem.state'(X6),'const.decSem.dec_clock_1'(s('type.decSem.state'(X6),'const.con_to_decProof.compile_state_1'(s('type.conSem.state'(X6),X7)))))),
  file('thm.con_to_decProof.compile_state_dec_clock','thm.con_to_decProof.compile_state_dec_clock')).
fof(f122486,plain,(
  ( ! [X2,X3] : (s('type.decSem.state'(X2),'const.con_to_decProof.compile_state_1'(s('type.conSem.state'(X2),'const.conSem.dec_clock_1'(s('type.conSem.state'(X2),X3))))) = s('type.decSem.state'(X2),'const.decSem.dec_clock_1'(s('type.decSem.state'(X2),'const.con_to_decProof.compile_state_1'(s('type.conSem.state'(X2),X3)))))) )),
  inference(forward_demodulation,[],[f122485,f1464])).
fof(f1464,plain,(
  ( ! [X0,X1] : (s('type.conSem.state'(X0),'const.conSem.dec_clock_1'(s('type.conSem.state'(X0),X1))) = s('type.conSem.state'(X0),'const.conSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.conSem.state_clock_1'(s('type.conSem.state'(X0),X1))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))),s('type.conSem.state'(X0),X1)))) )),
  inference(forward_demodulation,[],[f1059,f936])).
fof(f936,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),
  inference(cnf_transformation,[],[f169])).
fof(f169,axiom,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),
  file('thm.con_to_decProof.compile_state_dec_clock','thm.numeral.numeral_distrib|split|13')).
fof(f1059,plain,(
  ( ! [X0,X1] : (s('type.conSem.state'(X0),'const.conSem.dec_clock_1'(s('type.conSem.state'(X0),X1))) = s('type.conSem.state'(X0),'const.conSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.conSem.state_clock_1'(s('type.conSem.state'(X0),X1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.conSem.state'(X0),X1)))) )),
  inference(cnf_transformation,[],[f362])).
fof(f362,plain,(
  ! [X0,X1] : s('type.conSem.state'(X0),'const.conSem.dec_clock_1'(s('type.conSem.state'(X0),X1))) = s('type.conSem.state'(X0),'const.conSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.conSem.state_clock_1'(s('type.conSem.state'(X0),X1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.conSem.state'(X0),X1)))),
  inference(flattening,[],[f361])).
fof(f361,plain,(
  ! [X0] : ! [X1] : s('type.conSem.state'(X0),'const.conSem.dec_clock_1'(s('type.conSem.state'(X0),X1))) = s('type.conSem.state'(X0),'const.conSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.conSem.state_clock_1'(s('type.conSem.state'(X0),X1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.conSem.state'(X0),X1)))),
  inference(rectify,[],[f10])).
fof(f10,axiom,(
  ! [X6] : ! [X7] : s('type.conSem.state'(X6),'const.conSem.dec_clock_1'(s('type.conSem.state'(X6),X7))) = s('type.conSem.state'(X6),'const.conSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.conSem.state_clock_1'(s('type.conSem.state'(X6),X7))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.conSem.state'(X6),X7)))),
  file('thm.con_to_decProof.compile_state_dec_clock','thm.conSem.dec_clock_def')).
fof(f122485,plain,(
  ( ! [X2,X3] : (s('type.decSem.state'(X2),'const.decSem.dec_clock_1'(s('type.decSem.state'(X2),'const.con_to_decProof.compile_state_1'(s('type.conSem.state'(X2),X3))))) = s('type.decSem.state'(X2),'const.con_to_decProof.compile_state_1'(s('type.conSem.state'(X2),'const.conSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.conSem.state_clock_1'(s('type.conSem.state'(X2),X3))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))),s('type.conSem.state'(X2),X3)))))) )),
  inference(forward_demodulation,[],[f121527,f1047])).
fof(f1047,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.conSem.state_clock_1'(s('type.conSem.state'(X0),X1))) = s('type.num.num','const.decSem.state_clock_1'(s('type.decSem.state'(X0),'const.con_to_decProof.compile_state_1'(s('type.conSem.state'(X0),X1)))))) )),
  inference(cnf_transformation,[],[f338])).
fof(f338,plain,(
  ! [X0,X1] : s('type.num.num','const.conSem.state_clock_1'(s('type.conSem.state'(X0),X1))) = s('type.num.num','const.decSem.state_clock_1'(s('type.decSem.state'(X0),'const.con_to_decProof.compile_state_1'(s('type.conSem.state'(X0),X1)))))),
  inference(flattening,[],[f337])).
fof(f337,plain,(
  ! [X0] : ! [X1] : s('type.num.num','const.conSem.state_clock_1'(s('type.conSem.state'(X0),X1))) = s('type.num.num','const.decSem.state_clock_1'(s('type.decSem.state'(X0),'const.con_to_decProof.compile_state_1'(s('type.conSem.state'(X0),X1)))))),
  inference(rectify,[],[f18])).
fof(f18,axiom,(
  ! [X6] : ! [X7] : s('type.num.num','const.conSem.state_clock_1'(s('type.conSem.state'(X6),X7))) = s('type.num.num','const.decSem.state_clock_1'(s('type.decSem.state'(X6),'const.con_to_decProof.compile_state_1'(s('type.conSem.state'(X6),X7)))))),
  file('thm.con_to_decProof.compile_state_dec_clock','thm.con_to_decProof.compile_state_clock')).
fof(f121527,plain,(
  ( ! [X2,X3] : (s('type.decSem.state'(X2),'const.decSem.dec_clock_1'(s('type.decSem.state'(X2),'const.con_to_decProof.compile_state_1'(s('type.conSem.state'(X2),X3))))) = s('type.decSem.state'(X2),'const.con_to_decProof.compile_state_1'(s('type.conSem.state'(X2),'const.conSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.decSem.state_clock_1'(s('type.decSem.state'(X2),'const.con_to_decProof.compile_state_1'(s('type.conSem.state'(X2),X3))))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))),s('type.conSem.state'(X2),X3)))))) )),
  inference(superposition,[],[f1463,f1095])).
fof(f1095,plain,(
  ( ! [X2,X0,X1] : (s('type.decSem.state'(X0),'const.con_to_decProof.compile_state_1'(s('type.conSem.state'(X0),'const.conSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),X2),s('type.conSem.state'(X0),X1))))) = s('type.decSem.state'(X0),'const.decSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),X2),s('type.decSem.state'(X0),'const.con_to_decProof.compile_state_1'(s('type.conSem.state'(X0),X1)))))) )),
  inference(cnf_transformation,[],[f429])).
fof(f429,plain,(
  ! [X0,X1,X2] : s('type.decSem.state'(X0),'const.con_to_decProof.compile_state_1'(s('type.conSem.state'(X0),'const.conSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),X2),s('type.conSem.state'(X0),X1))))) = s('type.decSem.state'(X0),'const.decSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),X2),s('type.decSem.state'(X0),'const.con_to_decProof.compile_state_1'(s('type.conSem.state'(X0),X1)))))),
  inference(flattening,[],[f428])).
fof(f428,plain,(
  ! [X0] : ! [X1,X2] : s('type.decSem.state'(X0),'const.con_to_decProof.compile_state_1'(s('type.conSem.state'(X0),'const.conSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),X2),s('type.conSem.state'(X0),X1))))) = s('type.decSem.state'(X0),'const.decSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),X2),s('type.decSem.state'(X0),'const.con_to_decProof.compile_state_1'(s('type.conSem.state'(X0),X1)))))),
  inference(rectify,[],[f16])).
fof(f16,axiom,(
  ! [X6] : ! [X7,X38] : s('type.decSem.state'(X6),'const.con_to_decProof.compile_state_1'(s('type.conSem.state'(X6),'const.conSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),X38),s('type.conSem.state'(X6),X7))))) = s('type.decSem.state'(X6),'const.decSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),X38),s('type.decSem.state'(X6),'const.con_to_decProof.compile_state_1'(s('type.conSem.state'(X6),X7)))))),
  file('thm.con_to_decProof.compile_state_dec_clock','thm.con_to_decProof.compile_state_with_clock')).
fof(f1463,plain,(
  ( ! [X0,X1] : (s('type.decSem.state'(X0),'const.decSem.dec_clock_1'(s('type.decSem.state'(X0),X1))) = s('type.decSem.state'(X0),'const.decSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.decSem.state_clock_1'(s('type.decSem.state'(X0),X1))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))),s('type.decSem.state'(X0),X1)))) )),
  inference(forward_demodulation,[],[f1058,f936])).
fof(f1058,plain,(
  ( ! [X0,X1] : (s('type.decSem.state'(X0),'const.decSem.dec_clock_1'(s('type.decSem.state'(X0),X1))) = s('type.decSem.state'(X0),'const.decSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.decSem.state_clock_1'(s('type.decSem.state'(X0),X1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.decSem.state'(X0),X1)))) )),
  inference(cnf_transformation,[],[f360])).
fof(f360,plain,(
  ! [X0,X1] : s('type.decSem.state'(X0),'const.decSem.dec_clock_1'(s('type.decSem.state'(X0),X1))) = s('type.decSem.state'(X0),'const.decSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.decSem.state_clock_1'(s('type.decSem.state'(X0),X1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.decSem.state'(X0),X1)))),
  inference(flattening,[],[f359])).
fof(f359,plain,(
  ! [X0] : ! [X1] : s('type.decSem.state'(X0),'const.decSem.dec_clock_1'(s('type.decSem.state'(X0),X1))) = s('type.decSem.state'(X0),'const.decSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.decSem.state_clock_1'(s('type.decSem.state'(X0),X1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.decSem.state'(X0),X1)))),
  inference(rectify,[],[f11])).
fof(f11,axiom,(
  ! [X6] : ! [X7] : s('type.decSem.state'(X6),'const.decSem.dec_clock_1'(s('type.decSem.state'(X6),X7))) = s('type.decSem.state'(X6),'const.decSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.decSem.state_clock_1'(s('type.decSem.state'(X6),X7))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.decSem.state'(X6),X7)))),
  file('thm.con_to_decProof.compile_state_dec_clock','thm.decSem.dec_clock_def')).
% SZS output end Proof for thm.con_to_decProof
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 602
% Passive clauses: 3080
% Generated clauses: 121562
% Final active clauses: 596
% Final passive clauses: 2396
% Input formulas: 260
% Initial clauses: 497
% 
% Duplicate literals: 7
% Trivial inequalities: 15
% Fw subsumption resolutions: 103
% Fw demodulations: 52926
% Bw demodulations: 77
% Condensations: 22
% 
% Simple tautologies: 95
% Equational tautologies: 36
% Forward subsumptions: 16804
% Fw demodulations to eq. taut.: 48392
% 
% Unit resulting resolution: 52294
% Factoring: 2
% Forward superposition: 7747
% Backward superposition: 7766
% Self superposition: 79
% Equality factoring: 2
% Equality resolution: 18
% 
% Split clauses: 2
% Split components: 4
% SAT solver clauses: 3087
% SAT solver unit clauses: 1490
% SAT solver binary clauses: 1269
% 
% Sat splits: 2
% Sat splitting refutations: 1
% 
% Memory used [KB]: 60254
% Time elapsed: 3.174 s
% ------------------------------
% ------------------------------
% Success in time 4.55 s
