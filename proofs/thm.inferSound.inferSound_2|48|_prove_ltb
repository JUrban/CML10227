Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 150 next slice time: 5
dis+11_7_3 on thm.inferSound
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.inferSound
% SZS output start Proof for thm.inferSound
fof(f3813,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f3799,f3558,f2089,f2092,f32,f37,f3204,f3207,f35,f29,f60,f1993,f3155,f33,f94,f230,f31,f58,f56,f36,f34,f54,f52,f50,f3605,f3608,f38,f68,f39,f66,f40,f64,f62,f30,f59,f53])).
fof(f53,plain,(
  ~sP0 | $spl5),
  inference(cnf_transformation,[],[f53_D])).
fof(f53_D,plain,(
  ~sP0 <=> ~$spl5),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl5])])).
fof(f59,plain,(
  ( ! [X6,X8,X7] : (p(s(bool,'const.list.EVERY_2'(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X7),s('type.list.list'('type.list.list'('type.string.char')),'const.list.nub_1'(s('type.list.list'('type.list.list'('type.string.char')),X8))))),s('type.list.list'('type.ast.t'),X6)))) | ~p(s(bool,'const.list.EVERY_2'(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X7),s('type.list.list'('type.list.list'('type.string.char')),X8))),s('type.list.list'('type.ast.t'),X6))))) ) | $spl10),
  inference(cnf_transformation,[],[f59_D])).
fof(f59_D,plain,(
  ( ! [X6,X8,X7] : (p(s(bool,'const.list.EVERY_2'(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X7),s('type.list.list'('type.list.list'('type.string.char')),'const.list.nub_1'(s('type.list.list'('type.list.list'('type.string.char')),X8))))),s('type.list.list'('type.ast.t'),X6)))) | ~p(s(bool,'const.list.EVERY_2'(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X7),s('type.list.list'('type.list.list'('type.string.char')),X8))),s('type.list.list'('type.ast.t'),X6))))) ) <=> ~$spl10),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl10])])).
fof(f30,plain,(
  ( ! [X6,X8,X7] : (p(s(bool,'const.list.EVERY_2'(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X7),s('type.list.list'('type.list.list'('type.string.char')),'const.list.nub_1'(s('type.list.list'('type.list.list'('type.string.char')),X8))))),s('type.list.list'('type.ast.t'),X6)))) | ~p(s(bool,'const.list.EVERY_2'(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X7),s('type.list.list'('type.list.list'('type.string.char')),X8))),s('type.list.list'('type.ast.t'),X6)))) | ~sP0) )),
  inference(cnf_transformation,[],[f22])).
fof(f22,plain,(
  (~sP0 | (! [X9,X10,X11] : (~p(s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X10),s('type.list.list'('type.list.list'('type.string.char')),X11))),s('type.ast.t',X9)))) | p(s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X10),s('type.list.list'('type.list.list'('type.string.char')),'const.list.nub_1'(s('type.list.list'('type.list.list'('type.string.char')),X11))))),s('type.ast.t',X9))))) & ! [X6,X7,X8] : (~p(s(bool,'const.list.EVERY_2'(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X7),s('type.list.list'('type.list.list'('type.string.char')),X8))),s('type.list.list'('type.ast.t'),X6)))) | p(s(bool,'const.list.EVERY_2'(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X7),s('type.list.list'('type.list.list'('type.string.char')),'const.list.nub_1'(s('type.list.list'('type.list.list'('type.string.char')),X8))))),s('type.list.list'('type.ast.t'),X6))))))) & ((p(s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',sK2),s('type.list.list'('type.list.list'('type.string.char')),sK3))),s('type.ast.t',sK1)))) & ~p(s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',sK2),s('type.list.list'('type.list.list'('type.string.char')),'const.list.nub_1'(s('type.list.list'('type.list.list'('type.string.char')),sK3))))),s('type.ast.t',sK1))))) | (p(s(bool,'const.list.EVERY_2'(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',sK5),s('type.list.list'('type.list.list'('type.string.char')),sK6))),s('type.list.list'('type.ast.t'),sK4)))) & ~p(s(bool,'const.list.EVERY_2'(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',sK5),s('type.list.list'('type.list.list'('type.string.char')),'const.list.nub_1'(s('type.list.list'('type.list.list'('type.string.char')),sK6))))),s('type.list.list'('type.ast.t'),sK4))))) | sP0)),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK1,sK2,sK3,sK4,sK5,sK6])],[f21])).
fof(f21,plain,(
  (~sP0 | (! [X9,X10,X11] : (~p(s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X10),s('type.list.list'('type.list.list'('type.string.char')),X11))),s('type.ast.t',X9)))) | p(s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X10),s('type.list.list'('type.list.list'('type.string.char')),'const.list.nub_1'(s('type.list.list'('type.list.list'('type.string.char')),X11))))),s('type.ast.t',X9))))) & ! [X6,X7,X8] : (~p(s(bool,'const.list.EVERY_2'(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X7),s('type.list.list'('type.list.list'('type.string.char')),X8))),s('type.list.list'('type.ast.t'),X6)))) | p(s(bool,'const.list.EVERY_2'(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X7),s('type.list.list'('type.list.list'('type.string.char')),'const.list.nub_1'(s('type.list.list'('type.list.list'('type.string.char')),X8))))),s('type.list.list'('type.ast.t'),X6))))))) & (? [X3,X4,X5] : (p(s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X4),s('type.list.list'('type.list.list'('type.string.char')),X5))),s('type.ast.t',X3)))) & ~p(s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X4),s('type.list.list'('type.list.list'('type.string.char')),'const.list.nub_1'(s('type.list.list'('type.list.list'('type.string.char')),X5))))),s('type.ast.t',X3))))) | ? [X0,X1,X2] : (p(s(bool,'const.list.EVERY_2'(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X1),s('type.list.list'('type.list.list'('type.string.char')),X2))),s('type.list.list'('type.ast.t'),X0)))) & ~p(s(bool,'const.list.EVERY_2'(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X1),s('type.list.list'('type.list.list'('type.string.char')),'const.list.nub_1'(s('type.list.list'('type.list.list'('type.string.char')),X2))))),s('type.list.list'('type.ast.t'),X0))))) | sP0)),
  inference(rectify,[],[f20])).
fof(f20,plain,(
  (~sP0 | (! [X3,X4,X5] : (~p(s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X4),s('type.list.list'('type.list.list'('type.string.char')),X5))),s('type.ast.t',X3)))) | p(s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X4),s('type.list.list'('type.list.list'('type.string.char')),'const.list.nub_1'(s('type.list.list'('type.list.list'('type.string.char')),X5))))),s('type.ast.t',X3))))) & ! [X0,X1,X2] : (~p(s(bool,'const.list.EVERY_2'(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X1),s('type.list.list'('type.list.list'('type.string.char')),X2))),s('type.list.list'('type.ast.t'),X0)))) | p(s(bool,'const.list.EVERY_2'(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X1),s('type.list.list'('type.list.list'('type.string.char')),'const.list.nub_1'(s('type.list.list'('type.list.list'('type.string.char')),X2))))),s('type.list.list'('type.ast.t'),X0))))))) & (? [X3,X4,X5] : (p(s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X4),s('type.list.list'('type.list.list'('type.string.char')),X5))),s('type.ast.t',X3)))) & ~p(s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X4),s('type.list.list'('type.list.list'('type.string.char')),'const.list.nub_1'(s('type.list.list'('type.list.list'('type.string.char')),X5))))),s('type.ast.t',X3))))) | ? [X0,X1,X2] : (p(s(bool,'const.list.EVERY_2'(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X1),s('type.list.list'('type.list.list'('type.string.char')),X2))),s('type.list.list'('type.ast.t'),X0)))) & ~p(s(bool,'const.list.EVERY_2'(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X1),s('type.list.list'('type.list.list'('type.string.char')),'const.list.nub_1'(s('type.list.list'('type.list.list'('type.string.char')),X2))))),s('type.list.list'('type.ast.t'),X0))))) | sP0)),
  inference(flattening,[],[f19])).
fof(f19,plain,(
  (~sP0 | (! [X3,X4,X5] : (~p(s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X4),s('type.list.list'('type.list.list'('type.string.char')),X5))),s('type.ast.t',X3)))) | p(s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X4),s('type.list.list'('type.list.list'('type.string.char')),'const.list.nub_1'(s('type.list.list'('type.list.list'('type.string.char')),X5))))),s('type.ast.t',X3))))) & ! [X0,X1,X2] : (~p(s(bool,'const.list.EVERY_2'(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X1),s('type.list.list'('type.list.list'('type.string.char')),X2))),s('type.list.list'('type.ast.t'),X0)))) | p(s(bool,'const.list.EVERY_2'(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X1),s('type.list.list'('type.list.list'('type.string.char')),'const.list.nub_1'(s('type.list.list'('type.list.list'('type.string.char')),X2))))),s('type.list.list'('type.ast.t'),X0))))))) & ((? [X3,X4,X5] : (p(s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X4),s('type.list.list'('type.list.list'('type.string.char')),X5))),s('type.ast.t',X3)))) & ~p(s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X4),s('type.list.list'('type.list.list'('type.string.char')),'const.list.nub_1'(s('type.list.list'('type.list.list'('type.string.char')),X5))))),s('type.ast.t',X3))))) | ? [X0,X1,X2] : (p(s(bool,'const.list.EVERY_2'(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X1),s('type.list.list'('type.list.list'('type.string.char')),X2))),s('type.list.list'('type.ast.t'),X0)))) & ~p(s(bool,'const.list.EVERY_2'(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X1),s('type.list.list'('type.list.list'('type.string.char')),'const.list.nub_1'(s('type.list.list'('type.list.list'('type.string.char')),X2))))),s('type.list.list'('type.ast.t'),X0)))))) | sP0)),
  inference(nnf_transformation,[],[f17])).
fof(f17,plain,(
  sP0 <=> (! [X3,X4,X5] : (~p(s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X4),s('type.list.list'('type.list.list'('type.string.char')),X5))),s('type.ast.t',X3)))) | p(s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X4),s('type.list.list'('type.list.list'('type.string.char')),'const.list.nub_1'(s('type.list.list'('type.list.list'('type.string.char')),X5))))),s('type.ast.t',X3))))) & ! [X0,X1,X2] : (~p(s(bool,'const.list.EVERY_2'(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X1),s('type.list.list'('type.list.list'('type.string.char')),X2))),s('type.list.list'('type.ast.t'),X0)))) | p(s(bool,'const.list.EVERY_2'(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X1),s('type.list.list'('type.list.list'('type.string.char')),'const.list.nub_1'(s('type.list.list'('type.list.list'('type.string.char')),X2))))),s('type.list.list'('type.ast.t'),X0))))))),
  introduced(predicate_definition_introduction,[new_symbols(naming,[sP0])])).
fof(f62,plain,(
  ~p(s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',sK8),s('type.list.list'('type.list.list'('type.string.char')),'const.list.nub_1'(s('type.list.list'('type.list.list'('type.string.char')),sK9))))),s('type.ast.t',sK7)))) | $spl15),
  inference(cnf_transformation,[],[f62_D])).
fof(f62_D,plain,(
  ~p(s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',sK8),s('type.list.list'('type.list.list'('type.string.char')),'const.list.nub_1'(s('type.list.list'('type.list.list'('type.string.char')),sK9))))),s('type.ast.t',sK7)))) <=> ~$spl15),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl15])])).
fof(f64,plain,(
  ~p(s(bool,'const.list.EVERY_2'(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',sK11),s('type.list.list'('type.list.list'('type.string.char')),'const.list.nub_1'(s('type.list.list'('type.list.list'('type.string.char')),sK12))))),s('type.list.list'('type.ast.t'),sK10)))) | $spl17),
  inference(cnf_transformation,[],[f64_D])).
fof(f64_D,plain,(
  ~p(s(bool,'const.list.EVERY_2'(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',sK11),s('type.list.list'('type.list.list'('type.string.char')),'const.list.nub_1'(s('type.list.list'('type.list.list'('type.string.char')),sK12))))),s('type.list.list'('type.ast.t'),sK10)))) <=> ~$spl17),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl17])])).
fof(f40,plain,(
  ~p(s(bool,'const.list.EVERY_2'(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',sK11),s('type.list.list'('type.list.list'('type.string.char')),'const.list.nub_1'(s('type.list.list'('type.list.list'('type.string.char')),sK12))))),s('type.list.list'('type.ast.t'),sK10)))) | ~p(s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',sK8),s('type.list.list'('type.list.list'('type.string.char')),'const.list.nub_1'(s('type.list.list'('type.list.list'('type.string.char')),sK9))))),s('type.ast.t',sK7)))) | ~sP0),
  inference(cnf_transformation,[],[f26])).
fof(f26,plain,(
  (sP0 | (! [X9,X10,X11] : (~p(s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X10),s('type.list.list'('type.list.list'('type.string.char')),X11))),s('type.ast.t',X9)))) | p(s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X10),s('type.list.list'('type.list.list'('type.string.char')),'const.list.nub_1'(s('type.list.list'('type.list.list'('type.string.char')),X11))))),s('type.ast.t',X9))))) & ! [X6,X7,X8] : (~p(s(bool,'const.list.EVERY_2'(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X7),s('type.list.list'('type.list.list'('type.string.char')),X8))),s('type.list.list'('type.ast.t'),X6)))) | p(s(bool,'const.list.EVERY_2'(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X7),s('type.list.list'('type.list.list'('type.string.char')),'const.list.nub_1'(s('type.list.list'('type.list.list'('type.string.char')),X8))))),s('type.list.list'('type.ast.t'),X6))))))) & (~sP0 | (p(s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',sK8),s('type.list.list'('type.list.list'('type.string.char')),sK9))),s('type.ast.t',sK7)))) & ~p(s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',sK8),s('type.list.list'('type.list.list'('type.string.char')),'const.list.nub_1'(s('type.list.list'('type.list.list'('type.string.char')),sK9))))),s('type.ast.t',sK7))))) | (p(s(bool,'const.list.EVERY_2'(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',sK11),s('type.list.list'('type.list.list'('type.string.char')),sK12))),s('type.list.list'('type.ast.t'),sK10)))) & ~p(s(bool,'const.list.EVERY_2'(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',sK11),s('type.list.list'('type.list.list'('type.string.char')),'const.list.nub_1'(s('type.list.list'('type.list.list'('type.string.char')),sK12))))),s('type.list.list'('type.ast.t'),sK10))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK7,sK8,sK9,sK10,sK11,sK12])],[f25])).
fof(f25,plain,(
  (sP0 | (! [X9,X10,X11] : (~p(s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X10),s('type.list.list'('type.list.list'('type.string.char')),X11))),s('type.ast.t',X9)))) | p(s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X10),s('type.list.list'('type.list.list'('type.string.char')),'const.list.nub_1'(s('type.list.list'('type.list.list'('type.string.char')),X11))))),s('type.ast.t',X9))))) & ! [X6,X7,X8] : (~p(s(bool,'const.list.EVERY_2'(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X7),s('type.list.list'('type.list.list'('type.string.char')),X8))),s('type.list.list'('type.ast.t'),X6)))) | p(s(bool,'const.list.EVERY_2'(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X7),s('type.list.list'('type.list.list'('type.string.char')),'const.list.nub_1'(s('type.list.list'('type.list.list'('type.string.char')),X8))))),s('type.list.list'('type.ast.t'),X6))))))) & (~sP0 | ? [X3,X4,X5] : (p(s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X4),s('type.list.list'('type.list.list'('type.string.char')),X5))),s('type.ast.t',X3)))) & ~p(s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X4),s('type.list.list'('type.list.list'('type.string.char')),'const.list.nub_1'(s('type.list.list'('type.list.list'('type.string.char')),X5))))),s('type.ast.t',X3))))) | ? [X0,X1,X2] : (p(s(bool,'const.list.EVERY_2'(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X1),s('type.list.list'('type.list.list'('type.string.char')),X2))),s('type.list.list'('type.ast.t'),X0)))) & ~p(s(bool,'const.list.EVERY_2'(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X1),s('type.list.list'('type.list.list'('type.string.char')),'const.list.nub_1'(s('type.list.list'('type.list.list'('type.string.char')),X2))))),s('type.list.list'('type.ast.t'),X0))))))),
  inference(rectify,[],[f24])).
fof(f24,plain,(
  (sP0 | (! [X9,X10,X11] : (~p(s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X10),s('type.list.list'('type.list.list'('type.string.char')),X11))),s('type.ast.t',X9)))) | p(s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X10),s('type.list.list'('type.list.list'('type.string.char')),'const.list.nub_1'(s('type.list.list'('type.list.list'('type.string.char')),X11))))),s('type.ast.t',X9))))) & ! [X6,X7,X8] : (~p(s(bool,'const.list.EVERY_2'(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X7),s('type.list.list'('type.list.list'('type.string.char')),X8))),s('type.list.list'('type.ast.t'),X6)))) | p(s(bool,'const.list.EVERY_2'(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X7),s('type.list.list'('type.list.list'('type.string.char')),'const.list.nub_1'(s('type.list.list'('type.list.list'('type.string.char')),X8))))),s('type.list.list'('type.ast.t'),X6))))))) & (~sP0 | ? [X9,X10,X11] : (p(s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X10),s('type.list.list'('type.list.list'('type.string.char')),X11))),s('type.ast.t',X9)))) & ~p(s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X10),s('type.list.list'('type.list.list'('type.string.char')),'const.list.nub_1'(s('type.list.list'('type.list.list'('type.string.char')),X11))))),s('type.ast.t',X9))))) | ? [X6,X7,X8] : (p(s(bool,'const.list.EVERY_2'(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X7),s('type.list.list'('type.list.list'('type.string.char')),X8))),s('type.list.list'('type.ast.t'),X6)))) & ~p(s(bool,'const.list.EVERY_2'(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X7),s('type.list.list'('type.list.list'('type.string.char')),'const.list.nub_1'(s('type.list.list'('type.list.list'('type.string.char')),X8))))),s('type.list.list'('type.ast.t'),X6))))))),
  inference(flattening,[],[f23])).
fof(f23,plain,(
  (sP0 | (! [X9,X10,X11] : (~p(s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X10),s('type.list.list'('type.list.list'('type.string.char')),X11))),s('type.ast.t',X9)))) | p(s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X10),s('type.list.list'('type.list.list'('type.string.char')),'const.list.nub_1'(s('type.list.list'('type.list.list'('type.string.char')),X11))))),s('type.ast.t',X9))))) & ! [X6,X7,X8] : (~p(s(bool,'const.list.EVERY_2'(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X7),s('type.list.list'('type.list.list'('type.string.char')),X8))),s('type.list.list'('type.ast.t'),X6)))) | p(s(bool,'const.list.EVERY_2'(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X7),s('type.list.list'('type.list.list'('type.string.char')),'const.list.nub_1'(s('type.list.list'('type.list.list'('type.string.char')),X8))))),s('type.list.list'('type.ast.t'),X6))))))) & (~sP0 | (? [X9,X10,X11] : (p(s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X10),s('type.list.list'('type.list.list'('type.string.char')),X11))),s('type.ast.t',X9)))) & ~p(s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X10),s('type.list.list'('type.list.list'('type.string.char')),'const.list.nub_1'(s('type.list.list'('type.list.list'('type.string.char')),X11))))),s('type.ast.t',X9))))) | ? [X6,X7,X8] : (p(s(bool,'const.list.EVERY_2'(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X7),s('type.list.list'('type.list.list'('type.string.char')),X8))),s('type.list.list'('type.ast.t'),X6)))) & ~p(s(bool,'const.list.EVERY_2'(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X7),s('type.list.list'('type.list.list'('type.string.char')),'const.list.nub_1'(s('type.list.list'('type.list.list'('type.string.char')),X8))))),s('type.list.list'('type.ast.t'),X6)))))))),
  inference(nnf_transformation,[],[f18])).
fof(f18,plain,(
  sP0 <~> (! [X9,X10,X11] : (~p(s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X10),s('type.list.list'('type.list.list'('type.string.char')),X11))),s('type.ast.t',X9)))) | p(s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X10),s('type.list.list'('type.list.list'('type.string.char')),'const.list.nub_1'(s('type.list.list'('type.list.list'('type.string.char')),X11))))),s('type.ast.t',X9))))) & ! [X6,X7,X8] : (~p(s(bool,'const.list.EVERY_2'(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X7),s('type.list.list'('type.list.list'('type.string.char')),X8))),s('type.list.list'('type.ast.t'),X6)))) | p(s(bool,'const.list.EVERY_2'(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X7),s('type.list.list'('type.list.list'('type.string.char')),'const.list.nub_1'(s('type.list.list'('type.list.list'('type.string.char')),X8))))),s('type.list.list'('type.ast.t'),X6))))))),
  inference(definition_folding,[],[f15,f17])).
fof(f15,plain,(
  (! [X3,X4,X5] : (~p(s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X4),s('type.list.list'('type.list.list'('type.string.char')),X5))),s('type.ast.t',X3)))) | p(s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X4),s('type.list.list'('type.list.list'('type.string.char')),'const.list.nub_1'(s('type.list.list'('type.list.list'('type.string.char')),X5))))),s('type.ast.t',X3))))) & ! [X0,X1,X2] : (~p(s(bool,'const.list.EVERY_2'(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X1),s('type.list.list'('type.list.list'('type.string.char')),X2))),s('type.list.list'('type.ast.t'),X0)))) | p(s(bool,'const.list.EVERY_2'(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X1),s('type.list.list'('type.list.list'('type.string.char')),'const.list.nub_1'(s('type.list.list'('type.list.list'('type.string.char')),X2))))),s('type.list.list'('type.ast.t'),X0)))))) <~> (! [X9,X10,X11] : (~p(s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X10),s('type.list.list'('type.list.list'('type.string.char')),X11))),s('type.ast.t',X9)))) | p(s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X10),s('type.list.list'('type.list.list'('type.string.char')),'const.list.nub_1'(s('type.list.list'('type.list.list'('type.string.char')),X11))))),s('type.ast.t',X9))))) & ! [X6,X7,X8] : (~p(s(bool,'const.list.EVERY_2'(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X7),s('type.list.list'('type.list.list'('type.string.char')),X8))),s('type.list.list'('type.ast.t'),X6)))) | p(s(bool,'const.list.EVERY_2'(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X7),s('type.list.list'('type.list.list'('type.string.char')),'const.list.nub_1'(s('type.list.list'('type.list.list'('type.string.char')),X8))))),s('type.list.list'('type.ast.t'),X6))))))),
  inference(ennf_transformation,[],[f9])).
fof(f9,plain,(
  ~((! [X3,X4,X5] : (p(s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X4),s('type.list.list'('type.list.list'('type.string.char')),X5))),s('type.ast.t',X3)))) => p(s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X4),s('type.list.list'('type.list.list'('type.string.char')),'const.list.nub_1'(s('type.list.list'('type.list.list'('type.string.char')),X5))))),s('type.ast.t',X3))))) & ! [X0,X1,X2] : (p(s(bool,'const.list.EVERY_2'(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X1),s('type.list.list'('type.list.list'('type.string.char')),X2))),s('type.list.list'('type.ast.t'),X0)))) => p(s(bool,'const.list.EVERY_2'(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X1),s('type.list.list'('type.list.list'('type.string.char')),'const.list.nub_1'(s('type.list.list'('type.list.list'('type.string.char')),X2))))),s('type.list.list'('type.ast.t'),X0)))))) <=> (! [X9,X10,X11] : (p(s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X10),s('type.list.list'('type.list.list'('type.string.char')),X11))),s('type.ast.t',X9)))) => p(s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X10),s('type.list.list'('type.list.list'('type.string.char')),'const.list.nub_1'(s('type.list.list'('type.list.list'('type.string.char')),X11))))),s('type.ast.t',X9))))) & ! [X6,X7,X8] : (p(s(bool,'const.list.EVERY_2'(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X7),s('type.list.list'('type.list.list'('type.string.char')),X8))),s('type.list.list'('type.ast.t'),X6)))) => p(s(bool,'const.list.EVERY_2'(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X7),s('type.list.list'('type.list.list'('type.string.char')),'const.list.nub_1'(s('type.list.list'('type.list.list'('type.string.char')),X8))))),s('type.list.list'('type.ast.t'),X6)))))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~((! [X6,X7,X8] : (p(s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X7),s('type.list.list'('type.list.list'('type.string.char')),X8))),s('type.ast.t',X6)))) => p(s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X7),s('type.list.list'('type.list.list'('type.string.char')),'const.list.nub_1'(s('type.list.list'('type.list.list'('type.string.char')),X8))))),s('type.ast.t',X6))))) & ! [X9,X7,X8] : (p(s(bool,'const.list.EVERY_2'(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X7),s('type.list.list'('type.list.list'('type.string.char')),X8))),s('type.list.list'('type.ast.t'),X9)))) => p(s(bool,'const.list.EVERY_2'(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X7),s('type.list.list'('type.list.list'('type.string.char')),'const.list.nub_1'(s('type.list.list'('type.list.list'('type.string.char')),X8))))),s('type.list.list'('type.ast.t'),X9)))))) <=> (! [X6,X7,X8] : (p(s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X7),s('type.list.list'('type.list.list'('type.string.char')),X8))),s('type.ast.t',X6)))) => p(s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X7),s('type.list.list'('type.list.list'('type.string.char')),'const.list.nub_1'(s('type.list.list'('type.list.list'('type.string.char')),X8))))),s('type.ast.t',X6))))) & ! [X9,X7,X8] : (p(s(bool,'const.list.EVERY_2'(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X7),s('type.list.list'('type.list.list'('type.string.char')),X8))),s('type.list.list'('type.ast.t'),X9)))) => p(s(bool,'const.list.EVERY_2'(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X7),s('type.list.list'('type.list.list'('type.string.char')),'const.list.nub_1'(s('type.list.list'('type.list.list'('type.string.char')),X8))))),s('type.list.list'('type.ast.t'),X9)))))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  (! [X6,X7,X8] : (p(s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X7),s('type.list.list'('type.list.list'('type.string.char')),X8))),s('type.ast.t',X6)))) => p(s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X7),s('type.list.list'('type.list.list'('type.string.char')),'const.list.nub_1'(s('type.list.list'('type.list.list'('type.string.char')),X8))))),s('type.ast.t',X6))))) & ! [X9,X7,X8] : (p(s(bool,'const.list.EVERY_2'(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X7),s('type.list.list'('type.list.list'('type.string.char')),X8))),s('type.list.list'('type.ast.t'),X9)))) => p(s(bool,'const.list.EVERY_2'(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X7),s('type.list.list'('type.list.list'('type.string.char')),'const.list.nub_1'(s('type.list.list'('type.list.list'('type.string.char')),X8))))),s('type.list.list'('type.ast.t'),X9)))))) <=> (! [X6,X7,X8] : (p(s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X7),s('type.list.list'('type.list.list'('type.string.char')),X8))),s('type.ast.t',X6)))) => p(s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X7),s('type.list.list'('type.list.list'('type.string.char')),'const.list.nub_1'(s('type.list.list'('type.list.list'('type.string.char')),X8))))),s('type.ast.t',X6))))) & ! [X9,X7,X8] : (p(s(bool,'const.list.EVERY_2'(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X7),s('type.list.list'('type.list.list'('type.string.char')),X8))),s('type.list.list'('type.ast.t'),X9)))) => p(s(bool,'const.list.EVERY_2'(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X7),s('type.list.list'('type.list.list'('type.string.char')),'const.list.nub_1'(s('type.list.list'('type.list.list'('type.string.char')),X8))))),s('type.list.list'('type.ast.t'),X9))))))),
  file('thm.inferSound.inferSound_2|48|_prove_ltb','thm.inferSound.inferSound_2|48|_prove_ltb')).
fof(f66,plain,(
  p(s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',sK8),s('type.list.list'('type.list.list'('type.string.char')),sK9))),s('type.ast.t',sK7)))) | $spl18),
  inference(cnf_transformation,[],[f66_D])).
fof(f66_D,plain,(
  p(s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',sK8),s('type.list.list'('type.list.list'('type.string.char')),sK9))),s('type.ast.t',sK7)))) <=> ~$spl18),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl18])])).
fof(f39,plain,(
  ~p(s(bool,'const.list.EVERY_2'(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',sK11),s('type.list.list'('type.list.list'('type.string.char')),'const.list.nub_1'(s('type.list.list'('type.list.list'('type.string.char')),sK12))))),s('type.list.list'('type.ast.t'),sK10)))) | p(s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',sK8),s('type.list.list'('type.list.list'('type.string.char')),sK9))),s('type.ast.t',sK7)))) | ~sP0),
  inference(cnf_transformation,[],[f26])).
fof(f68,plain,(
  p(s(bool,'const.list.EVERY_2'(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',sK11),s('type.list.list'('type.list.list'('type.string.char')),sK12))),s('type.list.list'('type.ast.t'),sK10)))) | $spl20),
  inference(cnf_transformation,[],[f68_D])).
fof(f68_D,plain,(
  p(s(bool,'const.list.EVERY_2'(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',sK11),s('type.list.list'('type.list.list'('type.string.char')),sK12))),s('type.list.list'('type.ast.t'),sK10)))) <=> ~$spl20),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl20])])).
fof(f38,plain,(
  p(s(bool,'const.list.EVERY_2'(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',sK11),s('type.list.list'('type.list.list'('type.string.char')),sK12))),s('type.list.list'('type.ast.t'),sK10)))) | ~p(s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',sK8),s('type.list.list'('type.list.list'('type.string.char')),'const.list.nub_1'(s('type.list.list'('type.list.list'('type.string.char')),sK9))))),s('type.ast.t',sK7)))) | ~sP0),
  inference(cnf_transformation,[],[f26])).
fof(f3608,plain,(
  s(bool,'T_0') = s(bool,'const.list.EVERY_2'(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',sK11),s('type.list.list'('type.list.list'('type.string.char')),sK12))),s('type.list.list'('type.ast.t'),sK10))) | $spl116),
  inference(cnf_transformation,[],[f3608_D])).
fof(f3608_D,plain,(
  s(bool,'T_0') = s(bool,'const.list.EVERY_2'(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',sK11),s('type.list.list'('type.list.list'('type.string.char')),sK12))),s('type.list.list'('type.ast.t'),sK10))) <=> ~$spl116),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl116])])).
fof(f3605,plain,(
  s(bool,'T_0') = s(bool,'const.list.EVERY_2'(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',sK11),s('type.list.list'('type.list.list'('type.string.char')),sK12))),s('type.list.list'('type.ast.t'),sK10))) | $spl20),
  inference(subsumption_resolution,[],[f3575,f43])).
fof(f43,plain,(
  ~p(s(bool,'F_0'))),
  inference(cnf_transformation,[],[f10])).
fof(f10,plain,(
  ~p(s(bool,'F_0'))),
  inference(flattening,[],[f2])).
fof(f2,axiom,(
  ~p(s(bool,'F_0'))),
  file('thm.inferSound.inferSound_2|48|_prove_ltb',aHL_FALSITY)).
fof(f3575,plain,(
  p(s(bool,'F_0')) | s(bool,'T_0') = s(bool,'const.list.EVERY_2'(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',sK11),s('type.list.list'('type.list.list'('type.string.char')),sK12))),s('type.list.list'('type.ast.t'),sK10))) | $spl20),
  inference(superposition,[],[f68,f44])).
fof(f44,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f3])).
fof(f3,axiom,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) | s(bool,'F_0') = s(bool,X0))),
  file('thm.inferSound.inferSound_2|48|_prove_ltb',aHL_BOOL_CASES)).
fof(f50,plain,(
  ~p(s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',sK2),s('type.list.list'('type.list.list'('type.string.char')),'const.list.nub_1'(s('type.list.list'('type.list.list'('type.string.char')),sK3))))),s('type.ast.t',sK1)))) | $spl1),
  inference(cnf_transformation,[],[f50_D])).
fof(f50_D,plain,(
  ~p(s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',sK2),s('type.list.list'('type.list.list'('type.string.char')),'const.list.nub_1'(s('type.list.list'('type.list.list'('type.string.char')),sK3))))),s('type.ast.t',sK1)))) <=> ~$spl1),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1])])).
fof(f52,plain,(
  ~p(s(bool,'const.list.EVERY_2'(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',sK5),s('type.list.list'('type.list.list'('type.string.char')),'const.list.nub_1'(s('type.list.list'('type.list.list'('type.string.char')),sK6))))),s('type.list.list'('type.ast.t'),sK4)))) | $spl3),
  inference(cnf_transformation,[],[f52_D])).
fof(f52_D,plain,(
  ~p(s(bool,'const.list.EVERY_2'(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',sK5),s('type.list.list'('type.list.list'('type.string.char')),'const.list.nub_1'(s('type.list.list'('type.list.list'('type.string.char')),sK6))))),s('type.list.list'('type.ast.t'),sK4)))) <=> ~$spl3),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl3])])).
fof(f54,plain,(
  sP0 | $spl4),
  inference(cnf_transformation,[],[f54_D])).
fof(f54_D,plain,(
  sP0 <=> ~$spl4),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl4])])).
fof(f34,plain,(
  sP0 | ~p(s(bool,'const.list.EVERY_2'(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',sK5),s('type.list.list'('type.list.list'('type.string.char')),'const.list.nub_1'(s('type.list.list'('type.list.list'('type.string.char')),sK6))))),s('type.list.list'('type.ast.t'),sK4)))) | ~p(s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',sK2),s('type.list.list'('type.list.list'('type.string.char')),'const.list.nub_1'(s('type.list.list'('type.list.list'('type.string.char')),sK3))))),s('type.ast.t',sK1))))),
  inference(cnf_transformation,[],[f22])).
fof(f36,plain,(
  ( ! [X6,X8,X7] : (p(s(bool,'const.list.EVERY_2'(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X7),s('type.list.list'('type.list.list'('type.string.char')),'const.list.nub_1'(s('type.list.list'('type.list.list'('type.string.char')),X8))))),s('type.list.list'('type.ast.t'),X6)))) | ~p(s(bool,'const.list.EVERY_2'(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X7),s('type.list.list'('type.list.list'('type.string.char')),X8))),s('type.list.list'('type.ast.t'),X6)))) | sP0) )),
  inference(cnf_transformation,[],[f26])).
fof(f56,plain,(
  p(s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',sK2),s('type.list.list'('type.list.list'('type.string.char')),sK3))),s('type.ast.t',sK1)))) | $spl6),
  inference(cnf_transformation,[],[f56_D])).
fof(f56_D,plain,(
  p(s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',sK2),s('type.list.list'('type.list.list'('type.string.char')),sK3))),s('type.ast.t',sK1)))) <=> ~$spl6),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl6])])).
fof(f58,plain,(
  p(s(bool,'const.list.EVERY_2'(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',sK5),s('type.list.list'('type.list.list'('type.string.char')),sK6))),s('type.list.list'('type.ast.t'),sK4)))) | $spl8),
  inference(cnf_transformation,[],[f58_D])).
fof(f58_D,plain,(
  p(s(bool,'const.list.EVERY_2'(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',sK5),s('type.list.list'('type.list.list'('type.string.char')),sK6))),s('type.list.list'('type.ast.t'),sK4)))) <=> ~$spl8),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl8])])).
fof(f31,plain,(
  sP0 | p(s(bool,'const.list.EVERY_2'(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',sK5),s('type.list.list'('type.list.list'('type.string.char')),sK6))),s('type.list.list'('type.ast.t'),sK4)))) | p(s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',sK2),s('type.list.list'('type.list.list'('type.string.char')),sK3))),s('type.ast.t',sK1))))),
  inference(cnf_transformation,[],[f22])).
fof(f230,plain,(
  s(bool,'T_0') = s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',sK2),s('type.list.list'('type.list.list'('type.string.char')),sK3))),s('type.ast.t',sK1))) | $spl26),
  inference(cnf_transformation,[],[f230_D])).
fof(f230_D,plain,(
  s(bool,'T_0') = s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',sK2),s('type.list.list'('type.list.list'('type.string.char')),sK3))),s('type.ast.t',sK1))) <=> ~$spl26),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl26])])).
fof(f94,plain,(
  s(bool,'T_0') = s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',sK2),s('type.list.list'('type.list.list'('type.string.char')),sK3))),s('type.ast.t',sK1))) | $spl6),
  inference(subsumption_resolution,[],[f93,f43])).
fof(f93,plain,(
  p(s(bool,'F_0')) | s(bool,'T_0') = s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',sK2),s('type.list.list'('type.list.list'('type.string.char')),sK3))),s('type.ast.t',sK1))) | $spl6),
  inference(superposition,[],[f56,f44])).
fof(f33,plain,(
  sP0 | ~p(s(bool,'const.list.EVERY_2'(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',sK5),s('type.list.list'('type.list.list'('type.string.char')),'const.list.nub_1'(s('type.list.list'('type.list.list'('type.string.char')),sK6))))),s('type.list.list'('type.ast.t'),sK4)))) | p(s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',sK2),s('type.list.list'('type.list.list'('type.string.char')),sK3))),s('type.ast.t',sK1))))),
  inference(cnf_transformation,[],[f22])).
fof(f3155,plain,(
  $false | ($spl3 | $spl10 | $spl72)),
  inference(subsumption_resolution,[],[f3154,f41])).
fof(f41,plain,(
  p(s(bool,'T_0'))),
  inference(cnf_transformation,[],[f7])).
fof(f7,axiom,(
  p(s(bool,'T_0'))),
  file('thm.inferSound.inferSound_2|48|_prove_ltb','thm.bool.TRUTH')).
fof(f3154,plain,(
  ~p(s(bool,'T_0')) | ($spl3 | $spl10 | $spl72)),
  inference(forward_demodulation,[],[f3120,f2092])).
fof(f3120,plain,(
  ~p(s(bool,'const.list.EVERY_2'(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',sK5),s('type.list.list'('type.list.list'('type.string.char')),sK6))),s('type.list.list'('type.ast.t'),sK4)))) | ($spl3 | $spl10)),
  inference(resolution,[],[f59,f52])).
fof(f1993,plain,(
  $false | ($spl1 | $spl12 | $spl26)),
  inference(subsumption_resolution,[],[f1992,f41])).
fof(f1992,plain,(
  ~p(s(bool,'T_0')) | ($spl1 | $spl12 | $spl26)),
  inference(forward_demodulation,[],[f1965,f230])).
fof(f1965,plain,(
  ~p(s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',sK2),s('type.list.list'('type.list.list'('type.string.char')),sK3))),s('type.ast.t',sK1)))) | ($spl1 | $spl12)),
  inference(resolution,[],[f60,f50])).
fof(f60,plain,(
  ( ! [X10,X11,X9] : (p(s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X10),s('type.list.list'('type.list.list'('type.string.char')),'const.list.nub_1'(s('type.list.list'('type.list.list'('type.string.char')),X11))))),s('type.ast.t',X9)))) | ~p(s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X10),s('type.list.list'('type.list.list'('type.string.char')),X11))),s('type.ast.t',X9))))) ) | $spl12),
  inference(cnf_transformation,[],[f60_D])).
fof(f60_D,plain,(
  ( ! [X10,X11,X9] : (p(s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X10),s('type.list.list'('type.list.list'('type.string.char')),'const.list.nub_1'(s('type.list.list'('type.list.list'('type.string.char')),X11))))),s('type.ast.t',X9)))) | ~p(s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X10),s('type.list.list'('type.list.list'('type.string.char')),X11))),s('type.ast.t',X9))))) ) <=> ~$spl12),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl12])])).
fof(f29,plain,(
  ( ! [X10,X11,X9] : (p(s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X10),s('type.list.list'('type.list.list'('type.string.char')),'const.list.nub_1'(s('type.list.list'('type.list.list'('type.string.char')),X11))))),s('type.ast.t',X9)))) | ~p(s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X10),s('type.list.list'('type.list.list'('type.string.char')),X11))),s('type.ast.t',X9)))) | ~sP0) )),
  inference(cnf_transformation,[],[f22])).
fof(f35,plain,(
  ( ! [X10,X11,X9] : (p(s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X10),s('type.list.list'('type.list.list'('type.string.char')),'const.list.nub_1'(s('type.list.list'('type.list.list'('type.string.char')),X11))))),s('type.ast.t',X9)))) | ~p(s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',X10),s('type.list.list'('type.list.list'('type.string.char')),X11))),s('type.ast.t',X9)))) | sP0) )),
  inference(cnf_transformation,[],[f26])).
fof(f3207,plain,(
  s(bool,'T_0') = s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',sK8),s('type.list.list'('type.list.list'('type.string.char')),sK9))),s('type.ast.t',sK7))) | $spl104),
  inference(cnf_transformation,[],[f3207_D])).
fof(f3207_D,plain,(
  s(bool,'T_0') = s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',sK8),s('type.list.list'('type.list.list'('type.string.char')),sK9))),s('type.ast.t',sK7))) <=> ~$spl104),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl104])])).
fof(f3204,plain,(
  s(bool,'T_0') = s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',sK8),s('type.list.list'('type.list.list'('type.string.char')),sK9))),s('type.ast.t',sK7))) | $spl18),
  inference(subsumption_resolution,[],[f3174,f43])).
fof(f3174,plain,(
  p(s(bool,'F_0')) | s(bool,'T_0') = s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',sK8),s('type.list.list'('type.list.list'('type.string.char')),sK9))),s('type.ast.t',sK7))) | $spl18),
  inference(superposition,[],[f66,f44])).
fof(f37,plain,(
  p(s(bool,'const.list.EVERY_2'(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',sK11),s('type.list.list'('type.list.list'('type.string.char')),sK12))),s('type.list.list'('type.ast.t'),sK10)))) | p(s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',sK8),s('type.list.list'('type.list.list'('type.string.char')),sK9))),s('type.ast.t',sK7)))) | ~sP0),
  inference(cnf_transformation,[],[f26])).
fof(f32,plain,(
  sP0 | p(s(bool,'const.list.EVERY_2'(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',sK5),s('type.list.list'('type.list.list'('type.string.char')),sK6))),s('type.list.list'('type.ast.t'),sK4)))) | ~p(s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',sK2),s('type.list.list'('type.list.list'('type.string.char')),'const.list.nub_1'(s('type.list.list'('type.list.list'('type.string.char')),sK3))))),s('type.ast.t',sK1))))),
  inference(cnf_transformation,[],[f22])).
fof(f2092,plain,(
  s(bool,'T_0') = s(bool,'const.list.EVERY_2'(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',sK5),s('type.list.list'('type.list.list'('type.string.char')),sK6))),s('type.list.list'('type.ast.t'),sK4))) | $spl72),
  inference(cnf_transformation,[],[f2092_D])).
fof(f2092_D,plain,(
  s(bool,'T_0') = s(bool,'const.list.EVERY_2'(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',sK5),s('type.list.list'('type.list.list'('type.string.char')),sK6))),s('type.list.list'('type.ast.t'),sK4))) <=> ~$spl72),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl72])])).
fof(f2089,plain,(
  s(bool,'T_0') = s(bool,'const.list.EVERY_2'(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',sK5),s('type.list.list'('type.list.list'('type.string.char')),sK6))),s('type.list.list'('type.ast.t'),sK4))) | $spl8),
  inference(subsumption_resolution,[],[f2065,f43])).
fof(f2065,plain,(
  p(s(bool,'F_0')) | s(bool,'T_0') = s(bool,'const.list.EVERY_2'(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',sK5),s('type.list.list'('type.list.list'('type.string.char')),sK6))),s('type.list.list'('type.ast.t'),sK4))) | $spl8),
  inference(superposition,[],[f58,f44])).
fof(f3558,plain,(
  $false | ($spl12 | $spl15 | $spl104)),
  inference(subsumption_resolution,[],[f3557,f41])).
fof(f3557,plain,(
  ~p(s(bool,'T_0')) | ($spl12 | $spl15 | $spl104)),
  inference(forward_demodulation,[],[f3523,f3207])).
fof(f3523,plain,(
  ~p(s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',sK8),s('type.list.list'('type.list.list'('type.string.char')),sK9))),s('type.ast.t',sK7)))) | ($spl12 | $spl15)),
  inference(resolution,[],[f62,f60])).
fof(f3799,plain,(
  $false | ($spl10 | $spl17 | $spl116)),
  inference(subsumption_resolution,[],[f3798,f41])).
fof(f3798,plain,(
  ~p(s(bool,'T_0')) | ($spl10 | $spl17 | $spl116)),
  inference(forward_demodulation,[],[f3764,f3608])).
fof(f3764,plain,(
  ~p(s(bool,'const.list.EVERY_2'(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num',sK11),s('type.list.list'('type.list.list'('type.string.char')),sK12))),s('type.list.list'('type.ast.t'),sK10)))) | ($spl10 | $spl17)),
  inference(resolution,[],[f64,f59])).
% SZS output end Proof for thm.inferSound
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 41
% Passive clauses: 696
% Generated clauses: 3642
% Final active clauses: 31
% Final passive clauses: 591
% Input formulas: 7
% Initial clauses: 19
% 
% Duplicate literals: 362
% Trivial inequalities: 41
% Fw subsumption resolutions: 367
% Fw demodulations: 4
% Bw demodulations: 4
% 
% Simple tautologies: 116
% Equational tautologies: 80
% Forward subsumptions: 1370
% 
% Binary resolution: 53
% Forward superposition: 1357
% Backward superposition: 952
% Self superposition: 222
% Equality factoring: 202
% Equality resolution: 4
% 
% Split clauses: 241
% Split components: 492
% SAT solver clauses: 656
% SAT solver unit clauses: 229
% SAT solver binary clauses: 206
% SAT solver learnt clauses: 25
% SAT solver learnt literals: 59
% 
% Sat splits: 241
% Sat splitting refutations: 5
% 
% TWLsolver clauses: 629
% TWLsolver calls for satisfiability: 38
% 
% Memory used [KB]: 1918
% Time elapsed: 0.164 s
% ------------------------------
% ------------------------------
% Success in time 0.16 s
