Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 149 next slice time: 5
dis+11_7_3 on thm.labProps
% (70383)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 130
% Passive clauses: 2772
% Generated clauses: 16466
% Final active clauses: 127
% Final passive clauses: 2519
% Input formulas: 261
% Initial clauses: 307
% 
% Duplicate literals: 571
% Trivial inequalities: 241
% Fw subsumption resolutions: 1315
% Fw demodulations: 1955
% Bw demodulations: 3
% 
% Simple tautologies: 317
% Equational tautologies: 38
% Forward subsumptions: 9030
% 
% Binary resolution: 214
% Factoring: 3
% Forward superposition: 6521
% Backward superposition: 5362
% Self superposition: 135
% Equality factoring: 66
% Equality resolution: 22
% 
% Split clauses: 151
% Split components: 302
% SAT solver clauses: 350
% SAT solver unit clauses: 11
% SAT solver binary clauses: 104
% 
% Sat splits: 151
% 
% TWLsolver clauses: 350
% TWLsolver calls for satisfiability: 94
% 
% Memory used [KB]: 11129
% Time elapsed: 0.602 s
% ------------------------------
% ------------------------------
% remaining time: 143 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.labProps
% (70396)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 150
% Passive clauses: 1414
% Generated clauses: 18968
% Final active clauses: 141
% Final passive clauses: 1181
% Input formulas: 261
% Initial clauses: 307
% 
% Duplicate literals: 610
% Trivial inequalities: 335
% Fw subsumption resolutions: 796
% Fw demodulations: 1561
% Bw demodulations: 81
% Condensations: 1227
% Global subsumptions: 13
% 
% Simple tautologies: 231
% Equational tautologies: 35
% Forward subsumptions: 10523
% Fw demodulations to eq. taut.: 2
% 
% Binary resolution: 91
% Factoring: 1
% Forward superposition: 6271
% Backward superposition: 6015
% Self superposition: 120
% Equality factoring: 59
% Equality resolution: 20
% 
% Split clauses: 48
% Split components: 96
% SAT solver clauses: 2517
% SAT solver unit clauses: 552
% SAT solver binary clauses: 55
% SAT solver learnt clauses: 26
% 
% Sat splits: 48
% Sat splitting refutations: 5
% 
% TWLsolver clauses: 2465
% TWLsolver calls for satisfiability: 952
% 
% Memory used [KB]: 16758
% Time elapsed: 0.700 s
% ------------------------------
% ------------------------------
% remaining time: 136 next slice time: 103
lrs+11_2_br=off:cond=on:fde=none:gs=on:gsaa=full_model:lwlo=on:nwc=2:sas=minisat:stl=30:ssfp=100000:ssfq=1.4:smm=sco:ssnc=none:sp=occurrence:urr=on_98 on thm.labProps
% (70435)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 763
% Passive clauses: 9867
% Generated clauses: 233927
% Final active clauses: 376
% Final passive clauses: 1749
% Input formulas: 261
% Initial clauses: 307
% Discarded non-redundant clauses: 40020
% 
% Duplicate literals: 6565
% Trivial inequalities: 1784
% Fw subsumption resolutions: 13773
% Fw demodulations: 41180
% Bw demodulations: 2951
% Condensations: 14966
% Global subsumptions: 146
% 
% Simple tautologies: 1807
% Equational tautologies: 865
% Forward subsumptions: 139792
% Fw demodulations to eq. taut.: 292
% Bw demodulations to eq. taut.: 158
% 
% Unit resulting resolution: 12965
% Factoring: 2
% Forward superposition: 70996
% Backward superposition: 62541
% Self superposition: 808
% Equality factoring: 383
% Equality resolution: 127
% 
% Split clauses: 238
% Split components: 483
% SAT solver clauses: 10746
% SAT solver unit clauses: 608
% SAT solver binary clauses: 1765
% 
% Sat splits: 238
% Sat splitting refutations: 255
% 
% Memory used [KB]: 130360
% Time elapsed: 10.400 s
% ------------------------------
% ------------------------------
% remaining time: 32 next slice time: 32
dis+11_5_fde=none:nwc=1:sas=minisat:sd=1:ss=axioms:st=5.0:sos=all:sdd=large:sser=off:sfr=on:ssfp=100000:ssfq=2.0:ssnc=none_37 on thm.labProps
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.labProps
% SZS output start Proof for thm.labProps
fof(f10036,plain,(
  $false),
  inference(trivial_inequality_removal,[],[f10035])).
fof(f10035,plain,(
  s('type.num.num','const.labSem.state_link_reg_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),sK2))))) != s('type.num.num','const.labSem.state_link_reg_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),sK2))))) | s('type.num.num','const.labSem.state_len_reg_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),sK2))))) != s('type.num.num','const.labSem.state_len_reg_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),sK2))))) | s('type.num.num','const.labSem.state_ptr_reg_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),sK2))))) != s('type.num.num','const.labSem.state_ptr_reg_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),sK2))))) | s(bool,'const.labSem.state_failed_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),sK2))))) != s(bool,'const.labSem.state_failed_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),sK2))))) | s(fun('type.num.num','type.wordSem.word_loc'(sK0)),'const.labSem.state_regs_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),sK2))))) != s(fun('type.num.num','type.wordSem.word_loc'(sK0)),'const.labSem.state_regs_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),sK2))))) | s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'const.labSem.state_mem_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),sK2))))) != s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'const.labSem.state_mem_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),sK2))))) | s(fun('type.num.num',fun('type.num.num','type.option.option'('type.fcp.cart'(bool,sK0)))),'const.labSem.state_io_regs_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),sK2))))) != s(fun('type.num.num',fun('type.num.num','type.option.option'('type.fcp.cart'(bool,sK0)))),'const.labSem.state_io_regs_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),sK2))))) | s('type.ffi.ffi_state'(sK1),'const.labSem.state_ffi_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),sK2))))) != s('type.ffi.ffi_state'(sK1),'const.labSem.state_ffi_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),sK2))))) | s(bool,'const.labSem.state_be_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),sK2))))) != s(bool,'const.labSem.state_be_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),sK2))))) | s('type.num.num','const.labSem.state_pc_1'(s('type.labSem.state'(sK0,sK1),sK2))) != s('type.num.num','const.labSem.state_pc_1'(s('type.labSem.state'(sK0,sK1),sK2))) | s(fun('type.fcp.cart'(bool,sK0),bool),'const.labSem.state_mem_domain_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),sK2))))) != s(fun('type.fcp.cart'(bool,sK0),bool),'const.labSem.state_mem_domain_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),sK2))))) | s('type.list.list'('type.labLang.sec'(sK0)),'const.labSem.state_code_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),sK2))))) != s('type.list.list'('type.labLang.sec'(sK0)),'const.labSem.state_code_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),sK2)))))),
  inference(equality_resolution,[],[f650])).
fof(f650,plain,(
  ( ! [X0] : (s('type.num.num','const.labSem.state_clock_1'(s('type.labSem.state'(sK0,sK1),sK2))) != s('type.num.num','const.labSem.state_clock_1'(s('type.labSem.state'(sK0,sK1),X0))) | s('type.num.num','const.labSem.state_link_reg_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),sK2))))) != s('type.num.num','const.labSem.state_link_reg_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),X0))))) | s('type.num.num','const.labSem.state_len_reg_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),sK2))))) != s('type.num.num','const.labSem.state_len_reg_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),X0))))) | s('type.num.num','const.labSem.state_ptr_reg_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),sK2))))) != s('type.num.num','const.labSem.state_ptr_reg_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),X0))))) | s(bool,'const.labSem.state_failed_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),sK2))))) != s(bool,'const.labSem.state_failed_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),X0))))) | s(fun('type.num.num','type.wordSem.word_loc'(sK0)),'const.labSem.state_regs_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),sK2))))) != s(fun('type.num.num','type.wordSem.word_loc'(sK0)),'const.labSem.state_regs_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),X0))))) | s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'const.labSem.state_mem_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),sK2))))) != s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'const.labSem.state_mem_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),X0))))) | s(fun('type.num.num',fun('type.num.num','type.option.option'('type.fcp.cart'(bool,sK0)))),'const.labSem.state_io_regs_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),sK2))))) != s(fun('type.num.num',fun('type.num.num','type.option.option'('type.fcp.cart'(bool,sK0)))),'const.labSem.state_io_regs_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),X0))))) | s('type.ffi.ffi_state'(sK1),'const.labSem.state_ffi_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),sK2))))) != s('type.ffi.ffi_state'(sK1),'const.labSem.state_ffi_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),X0))))) | s(bool,'const.labSem.state_be_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),sK2))))) != s(bool,'const.labSem.state_be_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),X0))))) | s('type.num.num','const.labSem.state_pc_1'(s('type.labSem.state'(sK0,sK1),sK2))) != s('type.num.num','const.labSem.state_pc_1'(s('type.labSem.state'(sK0,sK1),X0))) | s(fun('type.fcp.cart'(bool,sK0),bool),'const.labSem.state_mem_domain_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),sK2))))) != s(fun('type.fcp.cart'(bool,sK0),bool),'const.labSem.state_mem_domain_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),X0))))) | s('type.list.list'('type.labLang.sec'(sK0)),'const.labSem.state_code_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),sK2))))) != s('type.list.list'('type.labLang.sec'(sK0)),'const.labSem.state_code_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),X0)))))) )),
  inference(forward_demodulation,[],[f649,f307])).
fof(f307,plain,(
  ( ! [X2,X0,X1] : (s('type.labSem.state'(X0,X1),'const.labProps.align_dm_1'(s('type.labSem.state'(X0,X1),X2))) = s('type.labSem.state'(X0,X1),'const.labSem.state_mem_domain_fupd_2'(s(fun(fun('type.fcp.cart'(bool,X0),bool),fun('type.fcp.cart'(bool,X0),bool)),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,X0),bool),'const.pred_set.INTER_2'(s(fun('type.fcp.cart'(bool,X0),bool),'const.labSem.state_mem_domain_1'(s('type.labSem.state'(X0,X1),X2))),s(fun('type.fcp.cart'(bool,X0),bool),'const.alignment.byte_aligned_0'))))),s('type.labSem.state'(X0,X1),X2)))) )),
  inference(cnf_transformation,[],[f268])).
fof(f268,plain,(
  ! [X0,X1,X2] : s('type.labSem.state'(X0,X1),'const.labProps.align_dm_1'(s('type.labSem.state'(X0,X1),X2))) = s('type.labSem.state'(X0,X1),'const.labSem.state_mem_domain_fupd_2'(s(fun(fun('type.fcp.cart'(bool,X0),bool),fun('type.fcp.cart'(bool,X0),bool)),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,X0),bool),'const.pred_set.INTER_2'(s(fun('type.fcp.cart'(bool,X0),bool),'const.labSem.state_mem_domain_1'(s('type.labSem.state'(X0,X1),X2))),s(fun('type.fcp.cart'(bool,X0),bool),'const.alignment.byte_aligned_0'))))),s('type.labSem.state'(X0,X1),X2)))),
  inference(flattening,[],[f267])).
fof(f267,plain,(
  ! [X0,X1] : ! [X2] : s('type.labSem.state'(X0,X1),'const.labProps.align_dm_1'(s('type.labSem.state'(X0,X1),X2))) = s('type.labSem.state'(X0,X1),'const.labSem.state_mem_domain_fupd_2'(s(fun(fun('type.fcp.cart'(bool,X0),bool),fun('type.fcp.cart'(bool,X0),bool)),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,X0),bool),'const.pred_set.INTER_2'(s(fun('type.fcp.cart'(bool,X0),bool),'const.labSem.state_mem_domain_1'(s('type.labSem.state'(X0,X1),X2))),s(fun('type.fcp.cart'(bool,X0),bool),'const.alignment.byte_aligned_0'))))),s('type.labSem.state'(X0,X1),X2)))),
  inference(rectify,[],[f8])).
fof(f8,axiom,(
  ! [X6,X10] : ! [X8] : s('type.labSem.state'(X6,X10),'const.labProps.align_dm_1'(s('type.labSem.state'(X6,X10),X8))) = s('type.labSem.state'(X6,X10),'const.labSem.state_mem_domain_fupd_2'(s(fun(fun('type.fcp.cart'(bool,X6),bool),fun('type.fcp.cart'(bool,X6),bool)),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,X6),bool),'const.pred_set.INTER_2'(s(fun('type.fcp.cart'(bool,X6),bool),'const.labSem.state_mem_domain_1'(s('type.labSem.state'(X6,X10),X8))),s(fun('type.fcp.cart'(bool,X6),bool),'const.alignment.byte_aligned_0'))))),s('type.labSem.state'(X6,X10),X8)))),
  file('thm.labProps.align_dm_const|split|1','thm.labProps.align_dm_def')).
fof(f649,plain,(
  ( ! [X0] : (s('type.num.num','const.labSem.state_link_reg_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),sK2))))) != s('type.num.num','const.labSem.state_link_reg_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),X0))))) | s('type.num.num','const.labSem.state_len_reg_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),sK2))))) != s('type.num.num','const.labSem.state_len_reg_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),X0))))) | s('type.num.num','const.labSem.state_ptr_reg_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),sK2))))) != s('type.num.num','const.labSem.state_ptr_reg_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),X0))))) | s(bool,'const.labSem.state_failed_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),sK2))))) != s(bool,'const.labSem.state_failed_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),X0))))) | s('type.num.num','const.labSem.state_clock_1'(s('type.labSem.state'(sK0,sK1),sK2))) != s('type.num.num','const.labSem.state_clock_1'(s('type.labSem.state'(sK0,sK1),X0))) | s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'const.labSem.state_mem_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),sK2))))) != s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'const.labSem.state_mem_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),X0))))) | s(fun('type.num.num',fun('type.num.num','type.option.option'('type.fcp.cart'(bool,sK0)))),'const.labSem.state_io_regs_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),sK2))))) != s(fun('type.num.num',fun('type.num.num','type.option.option'('type.fcp.cart'(bool,sK0)))),'const.labSem.state_io_regs_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),X0))))) | s('type.ffi.ffi_state'(sK1),'const.labSem.state_ffi_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),sK2))))) != s('type.ffi.ffi_state'(sK1),'const.labSem.state_ffi_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),X0))))) | s(bool,'const.labSem.state_be_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),sK2))))) != s(bool,'const.labSem.state_be_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),X0))))) | s('type.num.num','const.labSem.state_pc_1'(s('type.labSem.state'(sK0,sK1),sK2))) != s('type.num.num','const.labSem.state_pc_1'(s('type.labSem.state'(sK0,sK1),X0))) | s(fun('type.fcp.cart'(bool,sK0),bool),'const.labSem.state_mem_domain_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),sK2))))) != s(fun('type.fcp.cart'(bool,sK0),bool),'const.labSem.state_mem_domain_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),X0))))) | s('type.list.list'('type.labLang.sec'(sK0)),'const.labSem.state_code_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),sK2))))) != s('type.list.list'('type.labLang.sec'(sK0)),'const.labSem.state_code_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),X0))))) | s(fun('type.num.num','type.wordSem.word_loc'(sK0)),'const.labSem.state_regs_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),sK2))))) != s(fun('type.num.num','type.wordSem.word_loc'(sK0)),'const.labSem.state_regs_1'(s('type.labSem.state'(sK0,sK1),'const.labSem.state_mem_domain_fupd_2'(s(fun(fun('type.fcp.cart'(bool,sK0),bool),fun('type.fcp.cart'(bool,sK0),bool)),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.pred_set.INTER_2'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.labSem.state_mem_domain_1'(s('type.labSem.state'(sK0,sK1),X0))),s(fun('type.fcp.cart'(bool,sK0),bool),'const.alignment.byte_aligned_0'))))),s('type.labSem.state'(sK0,sK1),X0)))))) )),
  inference(forward_demodulation,[],[f648,f307])).
fof(f648,plain,(
  ( ! [X0] : (s('type.num.num','const.labSem.state_len_reg_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),sK2))))) != s('type.num.num','const.labSem.state_len_reg_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),X0))))) | s('type.num.num','const.labSem.state_ptr_reg_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),sK2))))) != s('type.num.num','const.labSem.state_ptr_reg_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),X0))))) | s(bool,'const.labSem.state_failed_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),sK2))))) != s(bool,'const.labSem.state_failed_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),X0))))) | s('type.num.num','const.labSem.state_clock_1'(s('type.labSem.state'(sK0,sK1),sK2))) != s('type.num.num','const.labSem.state_clock_1'(s('type.labSem.state'(sK0,sK1),X0))) | s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'const.labSem.state_mem_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),sK2))))) != s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'const.labSem.state_mem_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),X0))))) | s(fun('type.num.num',fun('type.num.num','type.option.option'('type.fcp.cart'(bool,sK0)))),'const.labSem.state_io_regs_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),sK2))))) != s(fun('type.num.num',fun('type.num.num','type.option.option'('type.fcp.cart'(bool,sK0)))),'const.labSem.state_io_regs_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),X0))))) | s('type.ffi.ffi_state'(sK1),'const.labSem.state_ffi_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),sK2))))) != s('type.ffi.ffi_state'(sK1),'const.labSem.state_ffi_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),X0))))) | s(bool,'const.labSem.state_be_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),sK2))))) != s(bool,'const.labSem.state_be_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),X0))))) | s('type.num.num','const.labSem.state_pc_1'(s('type.labSem.state'(sK0,sK1),sK2))) != s('type.num.num','const.labSem.state_pc_1'(s('type.labSem.state'(sK0,sK1),X0))) | s(fun('type.fcp.cart'(bool,sK0),bool),'const.labSem.state_mem_domain_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),sK2))))) != s(fun('type.fcp.cart'(bool,sK0),bool),'const.labSem.state_mem_domain_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),X0))))) | s('type.list.list'('type.labLang.sec'(sK0)),'const.labSem.state_code_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),sK2))))) != s('type.list.list'('type.labLang.sec'(sK0)),'const.labSem.state_code_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),X0))))) | s('type.num.num','const.labSem.state_link_reg_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),sK2))))) != s('type.num.num','const.labSem.state_link_reg_1'(s('type.labSem.state'(sK0,sK1),'const.labSem.state_mem_domain_fupd_2'(s(fun(fun('type.fcp.cart'(bool,sK0),bool),fun('type.fcp.cart'(bool,sK0),bool)),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.pred_set.INTER_2'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.labSem.state_mem_domain_1'(s('type.labSem.state'(sK0,sK1),X0))),s(fun('type.fcp.cart'(bool,sK0),bool),'const.alignment.byte_aligned_0'))))),s('type.labSem.state'(sK0,sK1),X0))))) | s(fun('type.num.num','type.wordSem.word_loc'(sK0)),'const.labSem.state_regs_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),sK2))))) != s(fun('type.num.num','type.wordSem.word_loc'(sK0)),'const.labSem.state_regs_1'(s('type.labSem.state'(sK0,sK1),'const.labSem.state_mem_domain_fupd_2'(s(fun(fun('type.fcp.cart'(bool,sK0),bool),fun('type.fcp.cart'(bool,sK0),bool)),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.pred_set.INTER_2'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.labSem.state_mem_domain_1'(s('type.labSem.state'(sK0,sK1),X0))),s(fun('type.fcp.cart'(bool,sK0),bool),'const.alignment.byte_aligned_0'))))),s('type.labSem.state'(sK0,sK1),X0)))))) )),
  inference(forward_demodulation,[],[f647,f307])).
fof(f647,plain,(
  ( ! [X0] : (s('type.num.num','const.labSem.state_ptr_reg_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),sK2))))) != s('type.num.num','const.labSem.state_ptr_reg_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),X0))))) | s(bool,'const.labSem.state_failed_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),sK2))))) != s(bool,'const.labSem.state_failed_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),X0))))) | s('type.num.num','const.labSem.state_clock_1'(s('type.labSem.state'(sK0,sK1),sK2))) != s('type.num.num','const.labSem.state_clock_1'(s('type.labSem.state'(sK0,sK1),X0))) | s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'const.labSem.state_mem_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),sK2))))) != s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'const.labSem.state_mem_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),X0))))) | s(fun('type.num.num',fun('type.num.num','type.option.option'('type.fcp.cart'(bool,sK0)))),'const.labSem.state_io_regs_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),sK2))))) != s(fun('type.num.num',fun('type.num.num','type.option.option'('type.fcp.cart'(bool,sK0)))),'const.labSem.state_io_regs_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),X0))))) | s('type.ffi.ffi_state'(sK1),'const.labSem.state_ffi_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),sK2))))) != s('type.ffi.ffi_state'(sK1),'const.labSem.state_ffi_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),X0))))) | s(bool,'const.labSem.state_be_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),sK2))))) != s(bool,'const.labSem.state_be_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),X0))))) | s('type.num.num','const.labSem.state_pc_1'(s('type.labSem.state'(sK0,sK1),sK2))) != s('type.num.num','const.labSem.state_pc_1'(s('type.labSem.state'(sK0,sK1),X0))) | s(fun('type.fcp.cart'(bool,sK0),bool),'const.labSem.state_mem_domain_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),sK2))))) != s(fun('type.fcp.cart'(bool,sK0),bool),'const.labSem.state_mem_domain_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),X0))))) | s('type.list.list'('type.labLang.sec'(sK0)),'const.labSem.state_code_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),sK2))))) != s('type.list.list'('type.labLang.sec'(sK0)),'const.labSem.state_code_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),X0))))) | s('type.num.num','const.labSem.state_len_reg_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),sK2))))) != s('type.num.num','const.labSem.state_len_reg_1'(s('type.labSem.state'(sK0,sK1),'const.labSem.state_mem_domain_fupd_2'(s(fun(fun('type.fcp.cart'(bool,sK0),bool),fun('type.fcp.cart'(bool,sK0),bool)),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.pred_set.INTER_2'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.labSem.state_mem_domain_1'(s('type.labSem.state'(sK0,sK1),X0))),s(fun('type.fcp.cart'(bool,sK0),bool),'const.alignment.byte_aligned_0'))))),s('type.labSem.state'(sK0,sK1),X0))))) | s('type.num.num','const.labSem.state_link_reg_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),sK2))))) != s('type.num.num','const.labSem.state_link_reg_1'(s('type.labSem.state'(sK0,sK1),'const.labSem.state_mem_domain_fupd_2'(s(fun(fun('type.fcp.cart'(bool,sK0),bool),fun('type.fcp.cart'(bool,sK0),bool)),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.pred_set.INTER_2'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.labSem.state_mem_domain_1'(s('type.labSem.state'(sK0,sK1),X0))),s(fun('type.fcp.cart'(bool,sK0),bool),'const.alignment.byte_aligned_0'))))),s('type.labSem.state'(sK0,sK1),X0))))) | s(fun('type.num.num','type.wordSem.word_loc'(sK0)),'const.labSem.state_regs_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),sK2))))) != s(fun('type.num.num','type.wordSem.word_loc'(sK0)),'const.labSem.state_regs_1'(s('type.labSem.state'(sK0,sK1),'const.labSem.state_mem_domain_fupd_2'(s(fun(fun('type.fcp.cart'(bool,sK0),bool),fun('type.fcp.cart'(bool,sK0),bool)),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.pred_set.INTER_2'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.labSem.state_mem_domain_1'(s('type.labSem.state'(sK0,sK1),X0))),s(fun('type.fcp.cart'(bool,sK0),bool),'const.alignment.byte_aligned_0'))))),s('type.labSem.state'(sK0,sK1),X0)))))) )),
  inference(forward_demodulation,[],[f646,f307])).
fof(f646,plain,(
  ( ! [X0] : (s(bool,'const.labSem.state_failed_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),sK2))))) != s(bool,'const.labSem.state_failed_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),X0))))) | s('type.num.num','const.labSem.state_clock_1'(s('type.labSem.state'(sK0,sK1),sK2))) != s('type.num.num','const.labSem.state_clock_1'(s('type.labSem.state'(sK0,sK1),X0))) | s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'const.labSem.state_mem_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),sK2))))) != s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'const.labSem.state_mem_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),X0))))) | s(fun('type.num.num',fun('type.num.num','type.option.option'('type.fcp.cart'(bool,sK0)))),'const.labSem.state_io_regs_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),sK2))))) != s(fun('type.num.num',fun('type.num.num','type.option.option'('type.fcp.cart'(bool,sK0)))),'const.labSem.state_io_regs_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),X0))))) | s('type.ffi.ffi_state'(sK1),'const.labSem.state_ffi_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),sK2))))) != s('type.ffi.ffi_state'(sK1),'const.labSem.state_ffi_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),X0))))) | s(bool,'const.labSem.state_be_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),sK2))))) != s(bool,'const.labSem.state_be_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),X0))))) | s('type.num.num','const.labSem.state_pc_1'(s('type.labSem.state'(sK0,sK1),sK2))) != s('type.num.num','const.labSem.state_pc_1'(s('type.labSem.state'(sK0,sK1),X0))) | s(fun('type.fcp.cart'(bool,sK0),bool),'const.labSem.state_mem_domain_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),sK2))))) != s(fun('type.fcp.cart'(bool,sK0),bool),'const.labSem.state_mem_domain_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),X0))))) | s('type.list.list'('type.labLang.sec'(sK0)),'const.labSem.state_code_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),sK2))))) != s('type.list.list'('type.labLang.sec'(sK0)),'const.labSem.state_code_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),X0))))) | s('type.num.num','const.labSem.state_ptr_reg_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),sK2))))) != s('type.num.num','const.labSem.state_ptr_reg_1'(s('type.labSem.state'(sK0,sK1),'const.labSem.state_mem_domain_fupd_2'(s(fun(fun('type.fcp.cart'(bool,sK0),bool),fun('type.fcp.cart'(bool,sK0),bool)),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.pred_set.INTER_2'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.labSem.state_mem_domain_1'(s('type.labSem.state'(sK0,sK1),X0))),s(fun('type.fcp.cart'(bool,sK0),bool),'const.alignment.byte_aligned_0'))))),s('type.labSem.state'(sK0,sK1),X0))))) | s('type.num.num','const.labSem.state_len_reg_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),sK2))))) != s('type.num.num','const.labSem.state_len_reg_1'(s('type.labSem.state'(sK0,sK1),'const.labSem.state_mem_domain_fupd_2'(s(fun(fun('type.fcp.cart'(bool,sK0),bool),fun('type.fcp.cart'(bool,sK0),bool)),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.pred_set.INTER_2'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.labSem.state_mem_domain_1'(s('type.labSem.state'(sK0,sK1),X0))),s(fun('type.fcp.cart'(bool,sK0),bool),'const.alignment.byte_aligned_0'))))),s('type.labSem.state'(sK0,sK1),X0))))) | s('type.num.num','const.labSem.state_link_reg_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),sK2))))) != s('type.num.num','const.labSem.state_link_reg_1'(s('type.labSem.state'(sK0,sK1),'const.labSem.state_mem_domain_fupd_2'(s(fun(fun('type.fcp.cart'(bool,sK0),bool),fun('type.fcp.cart'(bool,sK0),bool)),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.pred_set.INTER_2'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.labSem.state_mem_domain_1'(s('type.labSem.state'(sK0,sK1),X0))),s(fun('type.fcp.cart'(bool,sK0),bool),'const.alignment.byte_aligned_0'))))),s('type.labSem.state'(sK0,sK1),X0))))) | s(fun('type.num.num','type.wordSem.word_loc'(sK0)),'const.labSem.state_regs_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),sK2))))) != s(fun('type.num.num','type.wordSem.word_loc'(sK0)),'const.labSem.state_regs_1'(s('type.labSem.state'(sK0,sK1),'const.labSem.state_mem_domain_fupd_2'(s(fun(fun('type.fcp.cart'(bool,sK0),bool),fun('type.fcp.cart'(bool,sK0),bool)),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.pred_set.INTER_2'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.labSem.state_mem_domain_1'(s('type.labSem.state'(sK0,sK1),X0))),s(fun('type.fcp.cart'(bool,sK0),bool),'const.alignment.byte_aligned_0'))))),s('type.labSem.state'(sK0,sK1),X0)))))) )),
  inference(forward_demodulation,[],[f645,f307])).
fof(f645,plain,(
  ( ! [X0] : (s('type.num.num','const.labSem.state_clock_1'(s('type.labSem.state'(sK0,sK1),sK2))) != s('type.num.num','const.labSem.state_clock_1'(s('type.labSem.state'(sK0,sK1),X0))) | s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'const.labSem.state_mem_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),sK2))))) != s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'const.labSem.state_mem_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),X0))))) | s(fun('type.num.num',fun('type.num.num','type.option.option'('type.fcp.cart'(bool,sK0)))),'const.labSem.state_io_regs_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),sK2))))) != s(fun('type.num.num',fun('type.num.num','type.option.option'('type.fcp.cart'(bool,sK0)))),'const.labSem.state_io_regs_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),X0))))) | s('type.ffi.ffi_state'(sK1),'const.labSem.state_ffi_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),sK2))))) != s('type.ffi.ffi_state'(sK1),'const.labSem.state_ffi_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),X0))))) | s(bool,'const.labSem.state_be_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),sK2))))) != s(bool,'const.labSem.state_be_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),X0))))) | s('type.num.num','const.labSem.state_pc_1'(s('type.labSem.state'(sK0,sK1),sK2))) != s('type.num.num','const.labSem.state_pc_1'(s('type.labSem.state'(sK0,sK1),X0))) | s(fun('type.fcp.cart'(bool,sK0),bool),'const.labSem.state_mem_domain_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),sK2))))) != s(fun('type.fcp.cart'(bool,sK0),bool),'const.labSem.state_mem_domain_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),X0))))) | s('type.list.list'('type.labLang.sec'(sK0)),'const.labSem.state_code_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),sK2))))) != s('type.list.list'('type.labLang.sec'(sK0)),'const.labSem.state_code_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),X0))))) | s(bool,'const.labSem.state_failed_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),sK2))))) != s(bool,'const.labSem.state_failed_1'(s('type.labSem.state'(sK0,sK1),'const.labSem.state_mem_domain_fupd_2'(s(fun(fun('type.fcp.cart'(bool,sK0),bool),fun('type.fcp.cart'(bool,sK0),bool)),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.pred_set.INTER_2'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.labSem.state_mem_domain_1'(s('type.labSem.state'(sK0,sK1),X0))),s(fun('type.fcp.cart'(bool,sK0),bool),'const.alignment.byte_aligned_0'))))),s('type.labSem.state'(sK0,sK1),X0))))) | s('type.num.num','const.labSem.state_ptr_reg_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),sK2))))) != s('type.num.num','const.labSem.state_ptr_reg_1'(s('type.labSem.state'(sK0,sK1),'const.labSem.state_mem_domain_fupd_2'(s(fun(fun('type.fcp.cart'(bool,sK0),bool),fun('type.fcp.cart'(bool,sK0),bool)),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.pred_set.INTER_2'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.labSem.state_mem_domain_1'(s('type.labSem.state'(sK0,sK1),X0))),s(fun('type.fcp.cart'(bool,sK0),bool),'const.alignment.byte_aligned_0'))))),s('type.labSem.state'(sK0,sK1),X0))))) | s('type.num.num','const.labSem.state_len_reg_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),sK2))))) != s('type.num.num','const.labSem.state_len_reg_1'(s('type.labSem.state'(sK0,sK1),'const.labSem.state_mem_domain_fupd_2'(s(fun(fun('type.fcp.cart'(bool,sK0),bool),fun('type.fcp.cart'(bool,sK0),bool)),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.pred_set.INTER_2'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.labSem.state_mem_domain_1'(s('type.labSem.state'(sK0,sK1),X0))),s(fun('type.fcp.cart'(bool,sK0),bool),'const.alignment.byte_aligned_0'))))),s('type.labSem.state'(sK0,sK1),X0))))) | s('type.num.num','const.labSem.state_link_reg_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),sK2))))) != s('type.num.num','const.labSem.state_link_reg_1'(s('type.labSem.state'(sK0,sK1),'const.labSem.state_mem_domain_fupd_2'(s(fun(fun('type.fcp.cart'(bool,sK0),bool),fun('type.fcp.cart'(bool,sK0),bool)),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.pred_set.INTER_2'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.labSem.state_mem_domain_1'(s('type.labSem.state'(sK0,sK1),X0))),s(fun('type.fcp.cart'(bool,sK0),bool),'const.alignment.byte_aligned_0'))))),s('type.labSem.state'(sK0,sK1),X0))))) | s(fun('type.num.num','type.wordSem.word_loc'(sK0)),'const.labSem.state_regs_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),sK2))))) != s(fun('type.num.num','type.wordSem.word_loc'(sK0)),'const.labSem.state_regs_1'(s('type.labSem.state'(sK0,sK1),'const.labSem.state_mem_domain_fupd_2'(s(fun(fun('type.fcp.cart'(bool,sK0),bool),fun('type.fcp.cart'(bool,sK0),bool)),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.pred_set.INTER_2'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.labSem.state_mem_domain_1'(s('type.labSem.state'(sK0,sK1),X0))),s(fun('type.fcp.cart'(bool,sK0),bool),'const.alignment.byte_aligned_0'))))),s('type.labSem.state'(sK0,sK1),X0)))))) )),
  inference(forward_demodulation,[],[f644,f308])).
fof(f308,plain,(
  ( ! [X2,X0,X1] : (s('type.num.num','const.labSem.state_clock_1'(s('type.labSem.state'(X0,X1),X2))) = s('type.num.num','const.labSem.state_clock_1'(s('type.labSem.state'(X0,X1),'const.labProps.align_dm_1'(s('type.labSem.state'(X0,X1),X2)))))) )),
  inference(cnf_transformation,[],[f270])).
fof(f270,plain,(
  ! [X0,X1,X2] : s('type.num.num','const.labSem.state_clock_1'(s('type.labSem.state'(X0,X1),X2))) = s('type.num.num','const.labSem.state_clock_1'(s('type.labSem.state'(X0,X1),'const.labProps.align_dm_1'(s('type.labSem.state'(X0,X1),X2)))))),
  inference(flattening,[],[f269])).
fof(f269,plain,(
  ! [X0,X1] : ! [X2] : s('type.num.num','const.labSem.state_clock_1'(s('type.labSem.state'(X0,X1),X2))) = s('type.num.num','const.labSem.state_clock_1'(s('type.labSem.state'(X0,X1),'const.labProps.align_dm_1'(s('type.labSem.state'(X0,X1),X2)))))),
  inference(rectify,[],[f9])).
fof(f9,axiom,(
  ! [X6,X7] : ! [X8] : s('type.num.num','const.labSem.state_clock_1'(s('type.labSem.state'(X6,X7),X8))) = s('type.num.num','const.labSem.state_clock_1'(s('type.labSem.state'(X6,X7),'const.labProps.align_dm_1'(s('type.labSem.state'(X6,X7),X8)))))),
  file('thm.labProps.align_dm_const|split|1','thm.labProps.align_dm_const|split|0')).
fof(f644,plain,(
  ( ! [X0] : (s('type.num.num','const.labSem.state_clock_1'(s('type.labSem.state'(sK0,sK1),sK2))) != s('type.num.num','const.labSem.state_clock_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),X0))))) | s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'const.labSem.state_mem_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),sK2))))) != s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'const.labSem.state_mem_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),X0))))) | s(fun('type.num.num',fun('type.num.num','type.option.option'('type.fcp.cart'(bool,sK0)))),'const.labSem.state_io_regs_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),sK2))))) != s(fun('type.num.num',fun('type.num.num','type.option.option'('type.fcp.cart'(bool,sK0)))),'const.labSem.state_io_regs_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),X0))))) | s('type.ffi.ffi_state'(sK1),'const.labSem.state_ffi_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),sK2))))) != s('type.ffi.ffi_state'(sK1),'const.labSem.state_ffi_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),X0))))) | s(bool,'const.labSem.state_be_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),sK2))))) != s(bool,'const.labSem.state_be_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),X0))))) | s('type.num.num','const.labSem.state_pc_1'(s('type.labSem.state'(sK0,sK1),sK2))) != s('type.num.num','const.labSem.state_pc_1'(s('type.labSem.state'(sK0,sK1),X0))) | s(fun('type.fcp.cart'(bool,sK0),bool),'const.labSem.state_mem_domain_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),sK2))))) != s(fun('type.fcp.cart'(bool,sK0),bool),'const.labSem.state_mem_domain_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),X0))))) | s('type.list.list'('type.labLang.sec'(sK0)),'const.labSem.state_code_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),sK2))))) != s('type.list.list'('type.labLang.sec'(sK0)),'const.labSem.state_code_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),X0))))) | s(bool,'const.labSem.state_failed_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),sK2))))) != s(bool,'const.labSem.state_failed_1'(s('type.labSem.state'(sK0,sK1),'const.labSem.state_mem_domain_fupd_2'(s(fun(fun('type.fcp.cart'(bool,sK0),bool),fun('type.fcp.cart'(bool,sK0),bool)),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.pred_set.INTER_2'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.labSem.state_mem_domain_1'(s('type.labSem.state'(sK0,sK1),X0))),s(fun('type.fcp.cart'(bool,sK0),bool),'const.alignment.byte_aligned_0'))))),s('type.labSem.state'(sK0,sK1),X0))))) | s('type.num.num','const.labSem.state_ptr_reg_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),sK2))))) != s('type.num.num','const.labSem.state_ptr_reg_1'(s('type.labSem.state'(sK0,sK1),'const.labSem.state_mem_domain_fupd_2'(s(fun(fun('type.fcp.cart'(bool,sK0),bool),fun('type.fcp.cart'(bool,sK0),bool)),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.pred_set.INTER_2'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.labSem.state_mem_domain_1'(s('type.labSem.state'(sK0,sK1),X0))),s(fun('type.fcp.cart'(bool,sK0),bool),'const.alignment.byte_aligned_0'))))),s('type.labSem.state'(sK0,sK1),X0))))) | s('type.num.num','const.labSem.state_len_reg_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),sK2))))) != s('type.num.num','const.labSem.state_len_reg_1'(s('type.labSem.state'(sK0,sK1),'const.labSem.state_mem_domain_fupd_2'(s(fun(fun('type.fcp.cart'(bool,sK0),bool),fun('type.fcp.cart'(bool,sK0),bool)),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.pred_set.INTER_2'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.labSem.state_mem_domain_1'(s('type.labSem.state'(sK0,sK1),X0))),s(fun('type.fcp.cart'(bool,sK0),bool),'const.alignment.byte_aligned_0'))))),s('type.labSem.state'(sK0,sK1),X0))))) | s('type.num.num','const.labSem.state_link_reg_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),sK2))))) != s('type.num.num','const.labSem.state_link_reg_1'(s('type.labSem.state'(sK0,sK1),'const.labSem.state_mem_domain_fupd_2'(s(fun(fun('type.fcp.cart'(bool,sK0),bool),fun('type.fcp.cart'(bool,sK0),bool)),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.pred_set.INTER_2'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.labSem.state_mem_domain_1'(s('type.labSem.state'(sK0,sK1),X0))),s(fun('type.fcp.cart'(bool,sK0),bool),'const.alignment.byte_aligned_0'))))),s('type.labSem.state'(sK0,sK1),X0))))) | s(fun('type.num.num','type.wordSem.word_loc'(sK0)),'const.labSem.state_regs_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),sK2))))) != s(fun('type.num.num','type.wordSem.word_loc'(sK0)),'const.labSem.state_regs_1'(s('type.labSem.state'(sK0,sK1),'const.labSem.state_mem_domain_fupd_2'(s(fun(fun('type.fcp.cart'(bool,sK0),bool),fun('type.fcp.cart'(bool,sK0),bool)),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.pred_set.INTER_2'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.labSem.state_mem_domain_1'(s('type.labSem.state'(sK0,sK1),X0))),s(fun('type.fcp.cart'(bool,sK0),bool),'const.alignment.byte_aligned_0'))))),s('type.labSem.state'(sK0,sK1),X0)))))) )),
  inference(forward_demodulation,[],[f643,f307])).
fof(f643,plain,(
  ( ! [X0] : (s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'const.labSem.state_mem_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),sK2))))) != s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'const.labSem.state_mem_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),X0))))) | s(fun('type.num.num',fun('type.num.num','type.option.option'('type.fcp.cart'(bool,sK0)))),'const.labSem.state_io_regs_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),sK2))))) != s(fun('type.num.num',fun('type.num.num','type.option.option'('type.fcp.cart'(bool,sK0)))),'const.labSem.state_io_regs_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),X0))))) | s('type.ffi.ffi_state'(sK1),'const.labSem.state_ffi_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),sK2))))) != s('type.ffi.ffi_state'(sK1),'const.labSem.state_ffi_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),X0))))) | s(bool,'const.labSem.state_be_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),sK2))))) != s(bool,'const.labSem.state_be_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),X0))))) | s('type.num.num','const.labSem.state_pc_1'(s('type.labSem.state'(sK0,sK1),sK2))) != s('type.num.num','const.labSem.state_pc_1'(s('type.labSem.state'(sK0,sK1),X0))) | s(fun('type.fcp.cart'(bool,sK0),bool),'const.labSem.state_mem_domain_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),sK2))))) != s(fun('type.fcp.cart'(bool,sK0),bool),'const.labSem.state_mem_domain_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),X0))))) | s('type.list.list'('type.labLang.sec'(sK0)),'const.labSem.state_code_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),sK2))))) != s('type.list.list'('type.labLang.sec'(sK0)),'const.labSem.state_code_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),X0))))) | s('type.num.num','const.labSem.state_clock_1'(s('type.labSem.state'(sK0,sK1),sK2))) != s('type.num.num','const.labSem.state_clock_1'(s('type.labSem.state'(sK0,sK1),'const.labSem.state_mem_domain_fupd_2'(s(fun(fun('type.fcp.cart'(bool,sK0),bool),fun('type.fcp.cart'(bool,sK0),bool)),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.pred_set.INTER_2'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.labSem.state_mem_domain_1'(s('type.labSem.state'(sK0,sK1),X0))),s(fun('type.fcp.cart'(bool,sK0),bool),'const.alignment.byte_aligned_0'))))),s('type.labSem.state'(sK0,sK1),X0))))) | s(bool,'const.labSem.state_failed_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),sK2))))) != s(bool,'const.labSem.state_failed_1'(s('type.labSem.state'(sK0,sK1),'const.labSem.state_mem_domain_fupd_2'(s(fun(fun('type.fcp.cart'(bool,sK0),bool),fun('type.fcp.cart'(bool,sK0),bool)),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.pred_set.INTER_2'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.labSem.state_mem_domain_1'(s('type.labSem.state'(sK0,sK1),X0))),s(fun('type.fcp.cart'(bool,sK0),bool),'const.alignment.byte_aligned_0'))))),s('type.labSem.state'(sK0,sK1),X0))))) | s('type.num.num','const.labSem.state_ptr_reg_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),sK2))))) != s('type.num.num','const.labSem.state_ptr_reg_1'(s('type.labSem.state'(sK0,sK1),'const.labSem.state_mem_domain_fupd_2'(s(fun(fun('type.fcp.cart'(bool,sK0),bool),fun('type.fcp.cart'(bool,sK0),bool)),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.pred_set.INTER_2'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.labSem.state_mem_domain_1'(s('type.labSem.state'(sK0,sK1),X0))),s(fun('type.fcp.cart'(bool,sK0),bool),'const.alignment.byte_aligned_0'))))),s('type.labSem.state'(sK0,sK1),X0))))) | s('type.num.num','const.labSem.state_len_reg_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),sK2))))) != s('type.num.num','const.labSem.state_len_reg_1'(s('type.labSem.state'(sK0,sK1),'const.labSem.state_mem_domain_fupd_2'(s(fun(fun('type.fcp.cart'(bool,sK0),bool),fun('type.fcp.cart'(bool,sK0),bool)),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.pred_set.INTER_2'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.labSem.state_mem_domain_1'(s('type.labSem.state'(sK0,sK1),X0))),s(fun('type.fcp.cart'(bool,sK0),bool),'const.alignment.byte_aligned_0'))))),s('type.labSem.state'(sK0,sK1),X0))))) | s('type.num.num','const.labSem.state_link_reg_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),sK2))))) != s('type.num.num','const.labSem.state_link_reg_1'(s('type.labSem.state'(sK0,sK1),'const.labSem.state_mem_domain_fupd_2'(s(fun(fun('type.fcp.cart'(bool,sK0),bool),fun('type.fcp.cart'(bool,sK0),bool)),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.pred_set.INTER_2'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.labSem.state_mem_domain_1'(s('type.labSem.state'(sK0,sK1),X0))),s(fun('type.fcp.cart'(bool,sK0),bool),'const.alignment.byte_aligned_0'))))),s('type.labSem.state'(sK0,sK1),X0))))) | s(fun('type.num.num','type.wordSem.word_loc'(sK0)),'const.labSem.state_regs_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),sK2))))) != s(fun('type.num.num','type.wordSem.word_loc'(sK0)),'const.labSem.state_regs_1'(s('type.labSem.state'(sK0,sK1),'const.labSem.state_mem_domain_fupd_2'(s(fun(fun('type.fcp.cart'(bool,sK0),bool),fun('type.fcp.cart'(bool,sK0),bool)),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.pred_set.INTER_2'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.labSem.state_mem_domain_1'(s('type.labSem.state'(sK0,sK1),X0))),s(fun('type.fcp.cart'(bool,sK0),bool),'const.alignment.byte_aligned_0'))))),s('type.labSem.state'(sK0,sK1),X0)))))) )),
  inference(forward_demodulation,[],[f642,f307])).
fof(f642,plain,(
  ( ! [X0] : (s(fun('type.num.num',fun('type.num.num','type.option.option'('type.fcp.cart'(bool,sK0)))),'const.labSem.state_io_regs_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),sK2))))) != s(fun('type.num.num',fun('type.num.num','type.option.option'('type.fcp.cart'(bool,sK0)))),'const.labSem.state_io_regs_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),X0))))) | s('type.ffi.ffi_state'(sK1),'const.labSem.state_ffi_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),sK2))))) != s('type.ffi.ffi_state'(sK1),'const.labSem.state_ffi_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),X0))))) | s(bool,'const.labSem.state_be_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),sK2))))) != s(bool,'const.labSem.state_be_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),X0))))) | s('type.num.num','const.labSem.state_pc_1'(s('type.labSem.state'(sK0,sK1),sK2))) != s('type.num.num','const.labSem.state_pc_1'(s('type.labSem.state'(sK0,sK1),X0))) | s(fun('type.fcp.cart'(bool,sK0),bool),'const.labSem.state_mem_domain_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),sK2))))) != s(fun('type.fcp.cart'(bool,sK0),bool),'const.labSem.state_mem_domain_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),X0))))) | s('type.list.list'('type.labLang.sec'(sK0)),'const.labSem.state_code_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),sK2))))) != s('type.list.list'('type.labLang.sec'(sK0)),'const.labSem.state_code_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),X0))))) | s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'const.labSem.state_mem_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),sK2))))) != s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'const.labSem.state_mem_1'(s('type.labSem.state'(sK0,sK1),'const.labSem.state_mem_domain_fupd_2'(s(fun(fun('type.fcp.cart'(bool,sK0),bool),fun('type.fcp.cart'(bool,sK0),bool)),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.pred_set.INTER_2'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.labSem.state_mem_domain_1'(s('type.labSem.state'(sK0,sK1),X0))),s(fun('type.fcp.cart'(bool,sK0),bool),'const.alignment.byte_aligned_0'))))),s('type.labSem.state'(sK0,sK1),X0))))) | s('type.num.num','const.labSem.state_clock_1'(s('type.labSem.state'(sK0,sK1),sK2))) != s('type.num.num','const.labSem.state_clock_1'(s('type.labSem.state'(sK0,sK1),'const.labSem.state_mem_domain_fupd_2'(s(fun(fun('type.fcp.cart'(bool,sK0),bool),fun('type.fcp.cart'(bool,sK0),bool)),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.pred_set.INTER_2'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.labSem.state_mem_domain_1'(s('type.labSem.state'(sK0,sK1),X0))),s(fun('type.fcp.cart'(bool,sK0),bool),'const.alignment.byte_aligned_0'))))),s('type.labSem.state'(sK0,sK1),X0))))) | s(bool,'const.labSem.state_failed_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),sK2))))) != s(bool,'const.labSem.state_failed_1'(s('type.labSem.state'(sK0,sK1),'const.labSem.state_mem_domain_fupd_2'(s(fun(fun('type.fcp.cart'(bool,sK0),bool),fun('type.fcp.cart'(bool,sK0),bool)),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.pred_set.INTER_2'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.labSem.state_mem_domain_1'(s('type.labSem.state'(sK0,sK1),X0))),s(fun('type.fcp.cart'(bool,sK0),bool),'const.alignment.byte_aligned_0'))))),s('type.labSem.state'(sK0,sK1),X0))))) | s('type.num.num','const.labSem.state_ptr_reg_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),sK2))))) != s('type.num.num','const.labSem.state_ptr_reg_1'(s('type.labSem.state'(sK0,sK1),'const.labSem.state_mem_domain_fupd_2'(s(fun(fun('type.fcp.cart'(bool,sK0),bool),fun('type.fcp.cart'(bool,sK0),bool)),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.pred_set.INTER_2'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.labSem.state_mem_domain_1'(s('type.labSem.state'(sK0,sK1),X0))),s(fun('type.fcp.cart'(bool,sK0),bool),'const.alignment.byte_aligned_0'))))),s('type.labSem.state'(sK0,sK1),X0))))) | s('type.num.num','const.labSem.state_len_reg_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),sK2))))) != s('type.num.num','const.labSem.state_len_reg_1'(s('type.labSem.state'(sK0,sK1),'const.labSem.state_mem_domain_fupd_2'(s(fun(fun('type.fcp.cart'(bool,sK0),bool),fun('type.fcp.cart'(bool,sK0),bool)),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.pred_set.INTER_2'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.labSem.state_mem_domain_1'(s('type.labSem.state'(sK0,sK1),X0))),s(fun('type.fcp.cart'(bool,sK0),bool),'const.alignment.byte_aligned_0'))))),s('type.labSem.state'(sK0,sK1),X0))))) | s('type.num.num','const.labSem.state_link_reg_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),sK2))))) != s('type.num.num','const.labSem.state_link_reg_1'(s('type.labSem.state'(sK0,sK1),'const.labSem.state_mem_domain_fupd_2'(s(fun(fun('type.fcp.cart'(bool,sK0),bool),fun('type.fcp.cart'(bool,sK0),bool)),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.pred_set.INTER_2'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.labSem.state_mem_domain_1'(s('type.labSem.state'(sK0,sK1),X0))),s(fun('type.fcp.cart'(bool,sK0),bool),'const.alignment.byte_aligned_0'))))),s('type.labSem.state'(sK0,sK1),X0))))) | s(fun('type.num.num','type.wordSem.word_loc'(sK0)),'const.labSem.state_regs_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),sK2))))) != s(fun('type.num.num','type.wordSem.word_loc'(sK0)),'const.labSem.state_regs_1'(s('type.labSem.state'(sK0,sK1),'const.labSem.state_mem_domain_fupd_2'(s(fun(fun('type.fcp.cart'(bool,sK0),bool),fun('type.fcp.cart'(bool,sK0),bool)),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.pred_set.INTER_2'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.labSem.state_mem_domain_1'(s('type.labSem.state'(sK0,sK1),X0))),s(fun('type.fcp.cart'(bool,sK0),bool),'const.alignment.byte_aligned_0'))))),s('type.labSem.state'(sK0,sK1),X0)))))) )),
  inference(forward_demodulation,[],[f641,f307])).
fof(f641,plain,(
  ( ! [X0] : (s('type.ffi.ffi_state'(sK1),'const.labSem.state_ffi_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),sK2))))) != s('type.ffi.ffi_state'(sK1),'const.labSem.state_ffi_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),X0))))) | s(bool,'const.labSem.state_be_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),sK2))))) != s(bool,'const.labSem.state_be_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),X0))))) | s('type.num.num','const.labSem.state_pc_1'(s('type.labSem.state'(sK0,sK1),sK2))) != s('type.num.num','const.labSem.state_pc_1'(s('type.labSem.state'(sK0,sK1),X0))) | s(fun('type.fcp.cart'(bool,sK0),bool),'const.labSem.state_mem_domain_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),sK2))))) != s(fun('type.fcp.cart'(bool,sK0),bool),'const.labSem.state_mem_domain_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),X0))))) | s('type.list.list'('type.labLang.sec'(sK0)),'const.labSem.state_code_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),sK2))))) != s('type.list.list'('type.labLang.sec'(sK0)),'const.labSem.state_code_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),X0))))) | s(fun('type.num.num',fun('type.num.num','type.option.option'('type.fcp.cart'(bool,sK0)))),'const.labSem.state_io_regs_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),sK2))))) != s(fun('type.num.num',fun('type.num.num','type.option.option'('type.fcp.cart'(bool,sK0)))),'const.labSem.state_io_regs_1'(s('type.labSem.state'(sK0,sK1),'const.labSem.state_mem_domain_fupd_2'(s(fun(fun('type.fcp.cart'(bool,sK0),bool),fun('type.fcp.cart'(bool,sK0),bool)),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.pred_set.INTER_2'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.labSem.state_mem_domain_1'(s('type.labSem.state'(sK0,sK1),X0))),s(fun('type.fcp.cart'(bool,sK0),bool),'const.alignment.byte_aligned_0'))))),s('type.labSem.state'(sK0,sK1),X0))))) | s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'const.labSem.state_mem_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),sK2))))) != s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'const.labSem.state_mem_1'(s('type.labSem.state'(sK0,sK1),'const.labSem.state_mem_domain_fupd_2'(s(fun(fun('type.fcp.cart'(bool,sK0),bool),fun('type.fcp.cart'(bool,sK0),bool)),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.pred_set.INTER_2'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.labSem.state_mem_domain_1'(s('type.labSem.state'(sK0,sK1),X0))),s(fun('type.fcp.cart'(bool,sK0),bool),'const.alignment.byte_aligned_0'))))),s('type.labSem.state'(sK0,sK1),X0))))) | s('type.num.num','const.labSem.state_clock_1'(s('type.labSem.state'(sK0,sK1),sK2))) != s('type.num.num','const.labSem.state_clock_1'(s('type.labSem.state'(sK0,sK1),'const.labSem.state_mem_domain_fupd_2'(s(fun(fun('type.fcp.cart'(bool,sK0),bool),fun('type.fcp.cart'(bool,sK0),bool)),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.pred_set.INTER_2'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.labSem.state_mem_domain_1'(s('type.labSem.state'(sK0,sK1),X0))),s(fun('type.fcp.cart'(bool,sK0),bool),'const.alignment.byte_aligned_0'))))),s('type.labSem.state'(sK0,sK1),X0))))) | s(bool,'const.labSem.state_failed_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),sK2))))) != s(bool,'const.labSem.state_failed_1'(s('type.labSem.state'(sK0,sK1),'const.labSem.state_mem_domain_fupd_2'(s(fun(fun('type.fcp.cart'(bool,sK0),bool),fun('type.fcp.cart'(bool,sK0),bool)),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.pred_set.INTER_2'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.labSem.state_mem_domain_1'(s('type.labSem.state'(sK0,sK1),X0))),s(fun('type.fcp.cart'(bool,sK0),bool),'const.alignment.byte_aligned_0'))))),s('type.labSem.state'(sK0,sK1),X0))))) | s('type.num.num','const.labSem.state_ptr_reg_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),sK2))))) != s('type.num.num','const.labSem.state_ptr_reg_1'(s('type.labSem.state'(sK0,sK1),'const.labSem.state_mem_domain_fupd_2'(s(fun(fun('type.fcp.cart'(bool,sK0),bool),fun('type.fcp.cart'(bool,sK0),bool)),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.pred_set.INTER_2'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.labSem.state_mem_domain_1'(s('type.labSem.state'(sK0,sK1),X0))),s(fun('type.fcp.cart'(bool,sK0),bool),'const.alignment.byte_aligned_0'))))),s('type.labSem.state'(sK0,sK1),X0))))) | s('type.num.num','const.labSem.state_len_reg_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),sK2))))) != s('type.num.num','const.labSem.state_len_reg_1'(s('type.labSem.state'(sK0,sK1),'const.labSem.state_mem_domain_fupd_2'(s(fun(fun('type.fcp.cart'(bool,sK0),bool),fun('type.fcp.cart'(bool,sK0),bool)),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.pred_set.INTER_2'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.labSem.state_mem_domain_1'(s('type.labSem.state'(sK0,sK1),X0))),s(fun('type.fcp.cart'(bool,sK0),bool),'const.alignment.byte_aligned_0'))))),s('type.labSem.state'(sK0,sK1),X0))))) | s('type.num.num','const.labSem.state_link_reg_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),sK2))))) != s('type.num.num','const.labSem.state_link_reg_1'(s('type.labSem.state'(sK0,sK1),'const.labSem.state_mem_domain_fupd_2'(s(fun(fun('type.fcp.cart'(bool,sK0),bool),fun('type.fcp.cart'(bool,sK0),bool)),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.pred_set.INTER_2'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.labSem.state_mem_domain_1'(s('type.labSem.state'(sK0,sK1),X0))),s(fun('type.fcp.cart'(bool,sK0),bool),'const.alignment.byte_aligned_0'))))),s('type.labSem.state'(sK0,sK1),X0))))) | s(fun('type.num.num','type.wordSem.word_loc'(sK0)),'const.labSem.state_regs_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),sK2))))) != s(fun('type.num.num','type.wordSem.word_loc'(sK0)),'const.labSem.state_regs_1'(s('type.labSem.state'(sK0,sK1),'const.labSem.state_mem_domain_fupd_2'(s(fun(fun('type.fcp.cart'(bool,sK0),bool),fun('type.fcp.cart'(bool,sK0),bool)),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.pred_set.INTER_2'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.labSem.state_mem_domain_1'(s('type.labSem.state'(sK0,sK1),X0))),s(fun('type.fcp.cart'(bool,sK0),bool),'const.alignment.byte_aligned_0'))))),s('type.labSem.state'(sK0,sK1),X0)))))) )),
  inference(forward_demodulation,[],[f640,f307])).
fof(f640,plain,(
  ( ! [X0] : (s(bool,'const.labSem.state_be_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),sK2))))) != s(bool,'const.labSem.state_be_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),X0))))) | s('type.num.num','const.labSem.state_pc_1'(s('type.labSem.state'(sK0,sK1),sK2))) != s('type.num.num','const.labSem.state_pc_1'(s('type.labSem.state'(sK0,sK1),X0))) | s(fun('type.fcp.cart'(bool,sK0),bool),'const.labSem.state_mem_domain_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),sK2))))) != s(fun('type.fcp.cart'(bool,sK0),bool),'const.labSem.state_mem_domain_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),X0))))) | s('type.list.list'('type.labLang.sec'(sK0)),'const.labSem.state_code_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),sK2))))) != s('type.list.list'('type.labLang.sec'(sK0)),'const.labSem.state_code_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),X0))))) | s('type.ffi.ffi_state'(sK1),'const.labSem.state_ffi_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),sK2))))) != s('type.ffi.ffi_state'(sK1),'const.labSem.state_ffi_1'(s('type.labSem.state'(sK0,sK1),'const.labSem.state_mem_domain_fupd_2'(s(fun(fun('type.fcp.cart'(bool,sK0),bool),fun('type.fcp.cart'(bool,sK0),bool)),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.pred_set.INTER_2'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.labSem.state_mem_domain_1'(s('type.labSem.state'(sK0,sK1),X0))),s(fun('type.fcp.cart'(bool,sK0),bool),'const.alignment.byte_aligned_0'))))),s('type.labSem.state'(sK0,sK1),X0))))) | s(fun('type.num.num',fun('type.num.num','type.option.option'('type.fcp.cart'(bool,sK0)))),'const.labSem.state_io_regs_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),sK2))))) != s(fun('type.num.num',fun('type.num.num','type.option.option'('type.fcp.cart'(bool,sK0)))),'const.labSem.state_io_regs_1'(s('type.labSem.state'(sK0,sK1),'const.labSem.state_mem_domain_fupd_2'(s(fun(fun('type.fcp.cart'(bool,sK0),bool),fun('type.fcp.cart'(bool,sK0),bool)),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.pred_set.INTER_2'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.labSem.state_mem_domain_1'(s('type.labSem.state'(sK0,sK1),X0))),s(fun('type.fcp.cart'(bool,sK0),bool),'const.alignment.byte_aligned_0'))))),s('type.labSem.state'(sK0,sK1),X0))))) | s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'const.labSem.state_mem_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),sK2))))) != s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'const.labSem.state_mem_1'(s('type.labSem.state'(sK0,sK1),'const.labSem.state_mem_domain_fupd_2'(s(fun(fun('type.fcp.cart'(bool,sK0),bool),fun('type.fcp.cart'(bool,sK0),bool)),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.pred_set.INTER_2'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.labSem.state_mem_domain_1'(s('type.labSem.state'(sK0,sK1),X0))),s(fun('type.fcp.cart'(bool,sK0),bool),'const.alignment.byte_aligned_0'))))),s('type.labSem.state'(sK0,sK1),X0))))) | s('type.num.num','const.labSem.state_clock_1'(s('type.labSem.state'(sK0,sK1),sK2))) != s('type.num.num','const.labSem.state_clock_1'(s('type.labSem.state'(sK0,sK1),'const.labSem.state_mem_domain_fupd_2'(s(fun(fun('type.fcp.cart'(bool,sK0),bool),fun('type.fcp.cart'(bool,sK0),bool)),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.pred_set.INTER_2'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.labSem.state_mem_domain_1'(s('type.labSem.state'(sK0,sK1),X0))),s(fun('type.fcp.cart'(bool,sK0),bool),'const.alignment.byte_aligned_0'))))),s('type.labSem.state'(sK0,sK1),X0))))) | s(bool,'const.labSem.state_failed_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),sK2))))) != s(bool,'const.labSem.state_failed_1'(s('type.labSem.state'(sK0,sK1),'const.labSem.state_mem_domain_fupd_2'(s(fun(fun('type.fcp.cart'(bool,sK0),bool),fun('type.fcp.cart'(bool,sK0),bool)),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.pred_set.INTER_2'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.labSem.state_mem_domain_1'(s('type.labSem.state'(sK0,sK1),X0))),s(fun('type.fcp.cart'(bool,sK0),bool),'const.alignment.byte_aligned_0'))))),s('type.labSem.state'(sK0,sK1),X0))))) | s('type.num.num','const.labSem.state_ptr_reg_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),sK2))))) != s('type.num.num','const.labSem.state_ptr_reg_1'(s('type.labSem.state'(sK0,sK1),'const.labSem.state_mem_domain_fupd_2'(s(fun(fun('type.fcp.cart'(bool,sK0),bool),fun('type.fcp.cart'(bool,sK0),bool)),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.pred_set.INTER_2'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.labSem.state_mem_domain_1'(s('type.labSem.state'(sK0,sK1),X0))),s(fun('type.fcp.cart'(bool,sK0),bool),'const.alignment.byte_aligned_0'))))),s('type.labSem.state'(sK0,sK1),X0))))) | s('type.num.num','const.labSem.state_len_reg_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),sK2))))) != s('type.num.num','const.labSem.state_len_reg_1'(s('type.labSem.state'(sK0,sK1),'const.labSem.state_mem_domain_fupd_2'(s(fun(fun('type.fcp.cart'(bool,sK0),bool),fun('type.fcp.cart'(bool,sK0),bool)),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.pred_set.INTER_2'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.labSem.state_mem_domain_1'(s('type.labSem.state'(sK0,sK1),X0))),s(fun('type.fcp.cart'(bool,sK0),bool),'const.alignment.byte_aligned_0'))))),s('type.labSem.state'(sK0,sK1),X0))))) | s('type.num.num','const.labSem.state_link_reg_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),sK2))))) != s('type.num.num','const.labSem.state_link_reg_1'(s('type.labSem.state'(sK0,sK1),'const.labSem.state_mem_domain_fupd_2'(s(fun(fun('type.fcp.cart'(bool,sK0),bool),fun('type.fcp.cart'(bool,sK0),bool)),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.pred_set.INTER_2'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.labSem.state_mem_domain_1'(s('type.labSem.state'(sK0,sK1),X0))),s(fun('type.fcp.cart'(bool,sK0),bool),'const.alignment.byte_aligned_0'))))),s('type.labSem.state'(sK0,sK1),X0))))) | s(fun('type.num.num','type.wordSem.word_loc'(sK0)),'const.labSem.state_regs_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),sK2))))) != s(fun('type.num.num','type.wordSem.word_loc'(sK0)),'const.labSem.state_regs_1'(s('type.labSem.state'(sK0,sK1),'const.labSem.state_mem_domain_fupd_2'(s(fun(fun('type.fcp.cart'(bool,sK0),bool),fun('type.fcp.cart'(bool,sK0),bool)),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.pred_set.INTER_2'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.labSem.state_mem_domain_1'(s('type.labSem.state'(sK0,sK1),X0))),s(fun('type.fcp.cart'(bool,sK0),bool),'const.alignment.byte_aligned_0'))))),s('type.labSem.state'(sK0,sK1),X0)))))) )),
  inference(forward_demodulation,[],[f639,f307])).
fof(f639,plain,(
  ( ! [X0] : (s('type.num.num','const.labSem.state_pc_1'(s('type.labSem.state'(sK0,sK1),sK2))) != s('type.num.num','const.labSem.state_pc_1'(s('type.labSem.state'(sK0,sK1),X0))) | s(fun('type.fcp.cart'(bool,sK0),bool),'const.labSem.state_mem_domain_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),sK2))))) != s(fun('type.fcp.cart'(bool,sK0),bool),'const.labSem.state_mem_domain_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),X0))))) | s('type.list.list'('type.labLang.sec'(sK0)),'const.labSem.state_code_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),sK2))))) != s('type.list.list'('type.labLang.sec'(sK0)),'const.labSem.state_code_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),X0))))) | s(bool,'const.labSem.state_be_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),sK2))))) != s(bool,'const.labSem.state_be_1'(s('type.labSem.state'(sK0,sK1),'const.labSem.state_mem_domain_fupd_2'(s(fun(fun('type.fcp.cart'(bool,sK0),bool),fun('type.fcp.cart'(bool,sK0),bool)),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.pred_set.INTER_2'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.labSem.state_mem_domain_1'(s('type.labSem.state'(sK0,sK1),X0))),s(fun('type.fcp.cart'(bool,sK0),bool),'const.alignment.byte_aligned_0'))))),s('type.labSem.state'(sK0,sK1),X0))))) | s('type.ffi.ffi_state'(sK1),'const.labSem.state_ffi_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),sK2))))) != s('type.ffi.ffi_state'(sK1),'const.labSem.state_ffi_1'(s('type.labSem.state'(sK0,sK1),'const.labSem.state_mem_domain_fupd_2'(s(fun(fun('type.fcp.cart'(bool,sK0),bool),fun('type.fcp.cart'(bool,sK0),bool)),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.pred_set.INTER_2'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.labSem.state_mem_domain_1'(s('type.labSem.state'(sK0,sK1),X0))),s(fun('type.fcp.cart'(bool,sK0),bool),'const.alignment.byte_aligned_0'))))),s('type.labSem.state'(sK0,sK1),X0))))) | s(fun('type.num.num',fun('type.num.num','type.option.option'('type.fcp.cart'(bool,sK0)))),'const.labSem.state_io_regs_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),sK2))))) != s(fun('type.num.num',fun('type.num.num','type.option.option'('type.fcp.cart'(bool,sK0)))),'const.labSem.state_io_regs_1'(s('type.labSem.state'(sK0,sK1),'const.labSem.state_mem_domain_fupd_2'(s(fun(fun('type.fcp.cart'(bool,sK0),bool),fun('type.fcp.cart'(bool,sK0),bool)),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.pred_set.INTER_2'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.labSem.state_mem_domain_1'(s('type.labSem.state'(sK0,sK1),X0))),s(fun('type.fcp.cart'(bool,sK0),bool),'const.alignment.byte_aligned_0'))))),s('type.labSem.state'(sK0,sK1),X0))))) | s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'const.labSem.state_mem_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),sK2))))) != s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'const.labSem.state_mem_1'(s('type.labSem.state'(sK0,sK1),'const.labSem.state_mem_domain_fupd_2'(s(fun(fun('type.fcp.cart'(bool,sK0),bool),fun('type.fcp.cart'(bool,sK0),bool)),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.pred_set.INTER_2'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.labSem.state_mem_domain_1'(s('type.labSem.state'(sK0,sK1),X0))),s(fun('type.fcp.cart'(bool,sK0),bool),'const.alignment.byte_aligned_0'))))),s('type.labSem.state'(sK0,sK1),X0))))) | s('type.num.num','const.labSem.state_clock_1'(s('type.labSem.state'(sK0,sK1),sK2))) != s('type.num.num','const.labSem.state_clock_1'(s('type.labSem.state'(sK0,sK1),'const.labSem.state_mem_domain_fupd_2'(s(fun(fun('type.fcp.cart'(bool,sK0),bool),fun('type.fcp.cart'(bool,sK0),bool)),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.pred_set.INTER_2'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.labSem.state_mem_domain_1'(s('type.labSem.state'(sK0,sK1),X0))),s(fun('type.fcp.cart'(bool,sK0),bool),'const.alignment.byte_aligned_0'))))),s('type.labSem.state'(sK0,sK1),X0))))) | s(bool,'const.labSem.state_failed_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),sK2))))) != s(bool,'const.labSem.state_failed_1'(s('type.labSem.state'(sK0,sK1),'const.labSem.state_mem_domain_fupd_2'(s(fun(fun('type.fcp.cart'(bool,sK0),bool),fun('type.fcp.cart'(bool,sK0),bool)),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.pred_set.INTER_2'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.labSem.state_mem_domain_1'(s('type.labSem.state'(sK0,sK1),X0))),s(fun('type.fcp.cart'(bool,sK0),bool),'const.alignment.byte_aligned_0'))))),s('type.labSem.state'(sK0,sK1),X0))))) | s('type.num.num','const.labSem.state_ptr_reg_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),sK2))))) != s('type.num.num','const.labSem.state_ptr_reg_1'(s('type.labSem.state'(sK0,sK1),'const.labSem.state_mem_domain_fupd_2'(s(fun(fun('type.fcp.cart'(bool,sK0),bool),fun('type.fcp.cart'(bool,sK0),bool)),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.pred_set.INTER_2'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.labSem.state_mem_domain_1'(s('type.labSem.state'(sK0,sK1),X0))),s(fun('type.fcp.cart'(bool,sK0),bool),'const.alignment.byte_aligned_0'))))),s('type.labSem.state'(sK0,sK1),X0))))) | s('type.num.num','const.labSem.state_len_reg_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),sK2))))) != s('type.num.num','const.labSem.state_len_reg_1'(s('type.labSem.state'(sK0,sK1),'const.labSem.state_mem_domain_fupd_2'(s(fun(fun('type.fcp.cart'(bool,sK0),bool),fun('type.fcp.cart'(bool,sK0),bool)),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.pred_set.INTER_2'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.labSem.state_mem_domain_1'(s('type.labSem.state'(sK0,sK1),X0))),s(fun('type.fcp.cart'(bool,sK0),bool),'const.alignment.byte_aligned_0'))))),s('type.labSem.state'(sK0,sK1),X0))))) | s('type.num.num','const.labSem.state_link_reg_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),sK2))))) != s('type.num.num','const.labSem.state_link_reg_1'(s('type.labSem.state'(sK0,sK1),'const.labSem.state_mem_domain_fupd_2'(s(fun(fun('type.fcp.cart'(bool,sK0),bool),fun('type.fcp.cart'(bool,sK0),bool)),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.pred_set.INTER_2'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.labSem.state_mem_domain_1'(s('type.labSem.state'(sK0,sK1),X0))),s(fun('type.fcp.cart'(bool,sK0),bool),'const.alignment.byte_aligned_0'))))),s('type.labSem.state'(sK0,sK1),X0))))) | s(fun('type.num.num','type.wordSem.word_loc'(sK0)),'const.labSem.state_regs_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),sK2))))) != s(fun('type.num.num','type.wordSem.word_loc'(sK0)),'const.labSem.state_regs_1'(s('type.labSem.state'(sK0,sK1),'const.labSem.state_mem_domain_fupd_2'(s(fun(fun('type.fcp.cart'(bool,sK0),bool),fun('type.fcp.cart'(bool,sK0),bool)),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.pred_set.INTER_2'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.labSem.state_mem_domain_1'(s('type.labSem.state'(sK0,sK1),X0))),s(fun('type.fcp.cart'(bool,sK0),bool),'const.alignment.byte_aligned_0'))))),s('type.labSem.state'(sK0,sK1),X0)))))) )),
  inference(forward_demodulation,[],[f638,f327])).
fof(f327,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.num.num','const.labSem.state_pc_1'(s('type.labSem.state'(X0,X1),X2))) = s('type.num.num','const.labSem.state_pc_1'(s('type.labSem.state'(X0,X1),'const.labSem.state_mem_domain_fupd_2'(s(fun(fun('type.fcp.cart'(bool,X0),bool),fun('type.fcp.cart'(bool,X0),bool)),X3),s('type.labSem.state'(X0,X1),X2)))))) )),
  inference(cnf_transformation,[],[f282])).
fof(f282,plain,(
  ! [X0,X1,X2,X3] : s('type.num.num','const.labSem.state_pc_1'(s('type.labSem.state'(X0,X1),X2))) = s('type.num.num','const.labSem.state_pc_1'(s('type.labSem.state'(X0,X1),'const.labSem.state_mem_domain_fupd_2'(s(fun(fun('type.fcp.cart'(bool,X0),bool),fun('type.fcp.cart'(bool,X0),bool)),X3),s('type.labSem.state'(X0,X1),X2)))))),
  inference(flattening,[],[f281])).
fof(f281,plain,(
  ! [X0,X1] : ! [X2,X3] : s('type.num.num','const.labSem.state_pc_1'(s('type.labSem.state'(X0,X1),X2))) = s('type.num.num','const.labSem.state_pc_1'(s('type.labSem.state'(X0,X1),'const.labSem.state_mem_domain_fupd_2'(s(fun(fun('type.fcp.cart'(bool,X0),bool),fun('type.fcp.cart'(bool,X0),bool)),X3),s('type.labSem.state'(X0,X1),X2)))))),
  inference(rectify,[],[f10])).
fof(f10,axiom,(
  ! [X6,X10] : ! [X8,X11] : s('type.num.num','const.labSem.state_pc_1'(s('type.labSem.state'(X6,X10),X8))) = s('type.num.num','const.labSem.state_pc_1'(s('type.labSem.state'(X6,X10),'const.labSem.state_mem_domain_fupd_2'(s(fun(fun('type.fcp.cart'(bool,X6),bool),fun('type.fcp.cart'(bool,X6),bool)),X11),s('type.labSem.state'(X6,X10),X8)))))),
  file('thm.labProps.align_dm_const|split|1','thm.labSem.labSem_87_prove_ltb')).
fof(f638,plain,(
  ( ! [X0] : (s(fun('type.fcp.cart'(bool,sK0),bool),'const.labSem.state_mem_domain_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),sK2))))) != s(fun('type.fcp.cart'(bool,sK0),bool),'const.labSem.state_mem_domain_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),X0))))) | s('type.list.list'('type.labLang.sec'(sK0)),'const.labSem.state_code_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),sK2))))) != s('type.list.list'('type.labLang.sec'(sK0)),'const.labSem.state_code_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),X0))))) | s('type.num.num','const.labSem.state_pc_1'(s('type.labSem.state'(sK0,sK1),sK2))) != s('type.num.num','const.labSem.state_pc_1'(s('type.labSem.state'(sK0,sK1),'const.labSem.state_mem_domain_fupd_2'(s(fun(fun('type.fcp.cart'(bool,sK0),bool),fun('type.fcp.cart'(bool,sK0),bool)),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.pred_set.INTER_2'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.labSem.state_mem_domain_1'(s('type.labSem.state'(sK0,sK1),X0))),s(fun('type.fcp.cart'(bool,sK0),bool),'const.alignment.byte_aligned_0'))))),s('type.labSem.state'(sK0,sK1),X0))))) | s(bool,'const.labSem.state_be_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),sK2))))) != s(bool,'const.labSem.state_be_1'(s('type.labSem.state'(sK0,sK1),'const.labSem.state_mem_domain_fupd_2'(s(fun(fun('type.fcp.cart'(bool,sK0),bool),fun('type.fcp.cart'(bool,sK0),bool)),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.pred_set.INTER_2'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.labSem.state_mem_domain_1'(s('type.labSem.state'(sK0,sK1),X0))),s(fun('type.fcp.cart'(bool,sK0),bool),'const.alignment.byte_aligned_0'))))),s('type.labSem.state'(sK0,sK1),X0))))) | s('type.ffi.ffi_state'(sK1),'const.labSem.state_ffi_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),sK2))))) != s('type.ffi.ffi_state'(sK1),'const.labSem.state_ffi_1'(s('type.labSem.state'(sK0,sK1),'const.labSem.state_mem_domain_fupd_2'(s(fun(fun('type.fcp.cart'(bool,sK0),bool),fun('type.fcp.cart'(bool,sK0),bool)),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.pred_set.INTER_2'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.labSem.state_mem_domain_1'(s('type.labSem.state'(sK0,sK1),X0))),s(fun('type.fcp.cart'(bool,sK0),bool),'const.alignment.byte_aligned_0'))))),s('type.labSem.state'(sK0,sK1),X0))))) | s(fun('type.num.num',fun('type.num.num','type.option.option'('type.fcp.cart'(bool,sK0)))),'const.labSem.state_io_regs_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),sK2))))) != s(fun('type.num.num',fun('type.num.num','type.option.option'('type.fcp.cart'(bool,sK0)))),'const.labSem.state_io_regs_1'(s('type.labSem.state'(sK0,sK1),'const.labSem.state_mem_domain_fupd_2'(s(fun(fun('type.fcp.cart'(bool,sK0),bool),fun('type.fcp.cart'(bool,sK0),bool)),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.pred_set.INTER_2'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.labSem.state_mem_domain_1'(s('type.labSem.state'(sK0,sK1),X0))),s(fun('type.fcp.cart'(bool,sK0),bool),'const.alignment.byte_aligned_0'))))),s('type.labSem.state'(sK0,sK1),X0))))) | s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'const.labSem.state_mem_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),sK2))))) != s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'const.labSem.state_mem_1'(s('type.labSem.state'(sK0,sK1),'const.labSem.state_mem_domain_fupd_2'(s(fun(fun('type.fcp.cart'(bool,sK0),bool),fun('type.fcp.cart'(bool,sK0),bool)),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.pred_set.INTER_2'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.labSem.state_mem_domain_1'(s('type.labSem.state'(sK0,sK1),X0))),s(fun('type.fcp.cart'(bool,sK0),bool),'const.alignment.byte_aligned_0'))))),s('type.labSem.state'(sK0,sK1),X0))))) | s('type.num.num','const.labSem.state_clock_1'(s('type.labSem.state'(sK0,sK1),sK2))) != s('type.num.num','const.labSem.state_clock_1'(s('type.labSem.state'(sK0,sK1),'const.labSem.state_mem_domain_fupd_2'(s(fun(fun('type.fcp.cart'(bool,sK0),bool),fun('type.fcp.cart'(bool,sK0),bool)),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.pred_set.INTER_2'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.labSem.state_mem_domain_1'(s('type.labSem.state'(sK0,sK1),X0))),s(fun('type.fcp.cart'(bool,sK0),bool),'const.alignment.byte_aligned_0'))))),s('type.labSem.state'(sK0,sK1),X0))))) | s(bool,'const.labSem.state_failed_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),sK2))))) != s(bool,'const.labSem.state_failed_1'(s('type.labSem.state'(sK0,sK1),'const.labSem.state_mem_domain_fupd_2'(s(fun(fun('type.fcp.cart'(bool,sK0),bool),fun('type.fcp.cart'(bool,sK0),bool)),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.pred_set.INTER_2'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.labSem.state_mem_domain_1'(s('type.labSem.state'(sK0,sK1),X0))),s(fun('type.fcp.cart'(bool,sK0),bool),'const.alignment.byte_aligned_0'))))),s('type.labSem.state'(sK0,sK1),X0))))) | s('type.num.num','const.labSem.state_ptr_reg_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),sK2))))) != s('type.num.num','const.labSem.state_ptr_reg_1'(s('type.labSem.state'(sK0,sK1),'const.labSem.state_mem_domain_fupd_2'(s(fun(fun('type.fcp.cart'(bool,sK0),bool),fun('type.fcp.cart'(bool,sK0),bool)),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.pred_set.INTER_2'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.labSem.state_mem_domain_1'(s('type.labSem.state'(sK0,sK1),X0))),s(fun('type.fcp.cart'(bool,sK0),bool),'const.alignment.byte_aligned_0'))))),s('type.labSem.state'(sK0,sK1),X0))))) | s('type.num.num','const.labSem.state_len_reg_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),sK2))))) != s('type.num.num','const.labSem.state_len_reg_1'(s('type.labSem.state'(sK0,sK1),'const.labSem.state_mem_domain_fupd_2'(s(fun(fun('type.fcp.cart'(bool,sK0),bool),fun('type.fcp.cart'(bool,sK0),bool)),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.pred_set.INTER_2'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.labSem.state_mem_domain_1'(s('type.labSem.state'(sK0,sK1),X0))),s(fun('type.fcp.cart'(bool,sK0),bool),'const.alignment.byte_aligned_0'))))),s('type.labSem.state'(sK0,sK1),X0))))) | s('type.num.num','const.labSem.state_link_reg_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),sK2))))) != s('type.num.num','const.labSem.state_link_reg_1'(s('type.labSem.state'(sK0,sK1),'const.labSem.state_mem_domain_fupd_2'(s(fun(fun('type.fcp.cart'(bool,sK0),bool),fun('type.fcp.cart'(bool,sK0),bool)),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.pred_set.INTER_2'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.labSem.state_mem_domain_1'(s('type.labSem.state'(sK0,sK1),X0))),s(fun('type.fcp.cart'(bool,sK0),bool),'const.alignment.byte_aligned_0'))))),s('type.labSem.state'(sK0,sK1),X0))))) | s(fun('type.num.num','type.wordSem.word_loc'(sK0)),'const.labSem.state_regs_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),sK2))))) != s(fun('type.num.num','type.wordSem.word_loc'(sK0)),'const.labSem.state_regs_1'(s('type.labSem.state'(sK0,sK1),'const.labSem.state_mem_domain_fupd_2'(s(fun(fun('type.fcp.cart'(bool,sK0),bool),fun('type.fcp.cart'(bool,sK0),bool)),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.pred_set.INTER_2'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.labSem.state_mem_domain_1'(s('type.labSem.state'(sK0,sK1),X0))),s(fun('type.fcp.cart'(bool,sK0),bool),'const.alignment.byte_aligned_0'))))),s('type.labSem.state'(sK0,sK1),X0)))))) )),
  inference(forward_demodulation,[],[f625,f307])).
fof(f625,plain,(
  ( ! [X0] : (s('type.list.list'('type.labLang.sec'(sK0)),'const.labSem.state_code_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),sK2))))) != s('type.list.list'('type.labLang.sec'(sK0)),'const.labSem.state_code_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),X0))))) | s(fun('type.fcp.cart'(bool,sK0),bool),'const.labSem.state_mem_domain_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),sK2))))) != s(fun('type.fcp.cart'(bool,sK0),bool),'const.labSem.state_mem_domain_1'(s('type.labSem.state'(sK0,sK1),'const.labSem.state_mem_domain_fupd_2'(s(fun(fun('type.fcp.cart'(bool,sK0),bool),fun('type.fcp.cart'(bool,sK0),bool)),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.pred_set.INTER_2'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.labSem.state_mem_domain_1'(s('type.labSem.state'(sK0,sK1),X0))),s(fun('type.fcp.cart'(bool,sK0),bool),'const.alignment.byte_aligned_0'))))),s('type.labSem.state'(sK0,sK1),X0))))) | s('type.num.num','const.labSem.state_pc_1'(s('type.labSem.state'(sK0,sK1),sK2))) != s('type.num.num','const.labSem.state_pc_1'(s('type.labSem.state'(sK0,sK1),'const.labSem.state_mem_domain_fupd_2'(s(fun(fun('type.fcp.cart'(bool,sK0),bool),fun('type.fcp.cart'(bool,sK0),bool)),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.pred_set.INTER_2'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.labSem.state_mem_domain_1'(s('type.labSem.state'(sK0,sK1),X0))),s(fun('type.fcp.cart'(bool,sK0),bool),'const.alignment.byte_aligned_0'))))),s('type.labSem.state'(sK0,sK1),X0))))) | s(bool,'const.labSem.state_be_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),sK2))))) != s(bool,'const.labSem.state_be_1'(s('type.labSem.state'(sK0,sK1),'const.labSem.state_mem_domain_fupd_2'(s(fun(fun('type.fcp.cart'(bool,sK0),bool),fun('type.fcp.cart'(bool,sK0),bool)),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.pred_set.INTER_2'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.labSem.state_mem_domain_1'(s('type.labSem.state'(sK0,sK1),X0))),s(fun('type.fcp.cart'(bool,sK0),bool),'const.alignment.byte_aligned_0'))))),s('type.labSem.state'(sK0,sK1),X0))))) | s('type.ffi.ffi_state'(sK1),'const.labSem.state_ffi_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),sK2))))) != s('type.ffi.ffi_state'(sK1),'const.labSem.state_ffi_1'(s('type.labSem.state'(sK0,sK1),'const.labSem.state_mem_domain_fupd_2'(s(fun(fun('type.fcp.cart'(bool,sK0),bool),fun('type.fcp.cart'(bool,sK0),bool)),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.pred_set.INTER_2'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.labSem.state_mem_domain_1'(s('type.labSem.state'(sK0,sK1),X0))),s(fun('type.fcp.cart'(bool,sK0),bool),'const.alignment.byte_aligned_0'))))),s('type.labSem.state'(sK0,sK1),X0))))) | s(fun('type.num.num',fun('type.num.num','type.option.option'('type.fcp.cart'(bool,sK0)))),'const.labSem.state_io_regs_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),sK2))))) != s(fun('type.num.num',fun('type.num.num','type.option.option'('type.fcp.cart'(bool,sK0)))),'const.labSem.state_io_regs_1'(s('type.labSem.state'(sK0,sK1),'const.labSem.state_mem_domain_fupd_2'(s(fun(fun('type.fcp.cart'(bool,sK0),bool),fun('type.fcp.cart'(bool,sK0),bool)),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.pred_set.INTER_2'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.labSem.state_mem_domain_1'(s('type.labSem.state'(sK0,sK1),X0))),s(fun('type.fcp.cart'(bool,sK0),bool),'const.alignment.byte_aligned_0'))))),s('type.labSem.state'(sK0,sK1),X0))))) | s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'const.labSem.state_mem_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),sK2))))) != s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'const.labSem.state_mem_1'(s('type.labSem.state'(sK0,sK1),'const.labSem.state_mem_domain_fupd_2'(s(fun(fun('type.fcp.cart'(bool,sK0),bool),fun('type.fcp.cart'(bool,sK0),bool)),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.pred_set.INTER_2'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.labSem.state_mem_domain_1'(s('type.labSem.state'(sK0,sK1),X0))),s(fun('type.fcp.cart'(bool,sK0),bool),'const.alignment.byte_aligned_0'))))),s('type.labSem.state'(sK0,sK1),X0))))) | s('type.num.num','const.labSem.state_clock_1'(s('type.labSem.state'(sK0,sK1),sK2))) != s('type.num.num','const.labSem.state_clock_1'(s('type.labSem.state'(sK0,sK1),'const.labSem.state_mem_domain_fupd_2'(s(fun(fun('type.fcp.cart'(bool,sK0),bool),fun('type.fcp.cart'(bool,sK0),bool)),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.pred_set.INTER_2'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.labSem.state_mem_domain_1'(s('type.labSem.state'(sK0,sK1),X0))),s(fun('type.fcp.cart'(bool,sK0),bool),'const.alignment.byte_aligned_0'))))),s('type.labSem.state'(sK0,sK1),X0))))) | s(bool,'const.labSem.state_failed_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),sK2))))) != s(bool,'const.labSem.state_failed_1'(s('type.labSem.state'(sK0,sK1),'const.labSem.state_mem_domain_fupd_2'(s(fun(fun('type.fcp.cart'(bool,sK0),bool),fun('type.fcp.cart'(bool,sK0),bool)),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.pred_set.INTER_2'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.labSem.state_mem_domain_1'(s('type.labSem.state'(sK0,sK1),X0))),s(fun('type.fcp.cart'(bool,sK0),bool),'const.alignment.byte_aligned_0'))))),s('type.labSem.state'(sK0,sK1),X0))))) | s('type.num.num','const.labSem.state_ptr_reg_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),sK2))))) != s('type.num.num','const.labSem.state_ptr_reg_1'(s('type.labSem.state'(sK0,sK1),'const.labSem.state_mem_domain_fupd_2'(s(fun(fun('type.fcp.cart'(bool,sK0),bool),fun('type.fcp.cart'(bool,sK0),bool)),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.pred_set.INTER_2'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.labSem.state_mem_domain_1'(s('type.labSem.state'(sK0,sK1),X0))),s(fun('type.fcp.cart'(bool,sK0),bool),'const.alignment.byte_aligned_0'))))),s('type.labSem.state'(sK0,sK1),X0))))) | s('type.num.num','const.labSem.state_len_reg_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),sK2))))) != s('type.num.num','const.labSem.state_len_reg_1'(s('type.labSem.state'(sK0,sK1),'const.labSem.state_mem_domain_fupd_2'(s(fun(fun('type.fcp.cart'(bool,sK0),bool),fun('type.fcp.cart'(bool,sK0),bool)),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.pred_set.INTER_2'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.labSem.state_mem_domain_1'(s('type.labSem.state'(sK0,sK1),X0))),s(fun('type.fcp.cart'(bool,sK0),bool),'const.alignment.byte_aligned_0'))))),s('type.labSem.state'(sK0,sK1),X0))))) | s('type.num.num','const.labSem.state_link_reg_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),sK2))))) != s('type.num.num','const.labSem.state_link_reg_1'(s('type.labSem.state'(sK0,sK1),'const.labSem.state_mem_domain_fupd_2'(s(fun(fun('type.fcp.cart'(bool,sK0),bool),fun('type.fcp.cart'(bool,sK0),bool)),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.pred_set.INTER_2'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.labSem.state_mem_domain_1'(s('type.labSem.state'(sK0,sK1),X0))),s(fun('type.fcp.cart'(bool,sK0),bool),'const.alignment.byte_aligned_0'))))),s('type.labSem.state'(sK0,sK1),X0))))) | s(fun('type.num.num','type.wordSem.word_loc'(sK0)),'const.labSem.state_regs_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),sK2))))) != s(fun('type.num.num','type.wordSem.word_loc'(sK0)),'const.labSem.state_regs_1'(s('type.labSem.state'(sK0,sK1),'const.labSem.state_mem_domain_fupd_2'(s(fun(fun('type.fcp.cart'(bool,sK0),bool),fun('type.fcp.cart'(bool,sK0),bool)),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.pred_set.INTER_2'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.labSem.state_mem_domain_1'(s('type.labSem.state'(sK0,sK1),X0))),s(fun('type.fcp.cart'(bool,sK0),bool),'const.alignment.byte_aligned_0'))))),s('type.labSem.state'(sK0,sK1),X0)))))) )),
  inference(superposition,[],[f606,f307])).
fof(f606,plain,(
  ( ! [X0] : (s('type.list.list'('type.labLang.sec'(sK0)),'const.labSem.state_code_1'(s('type.labSem.state'(sK0,sK1),X0))) != s('type.list.list'('type.labLang.sec'(sK0)),'const.labSem.state_code_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),sK2))))) | s(fun('type.fcp.cart'(bool,sK0),bool),'const.labSem.state_mem_domain_1'(s('type.labSem.state'(sK0,sK1),X0))) != s(fun('type.fcp.cart'(bool,sK0),bool),'const.labSem.state_mem_domain_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),sK2))))) | s('type.num.num','const.labSem.state_pc_1'(s('type.labSem.state'(sK0,sK1),sK2))) != s('type.num.num','const.labSem.state_pc_1'(s('type.labSem.state'(sK0,sK1),X0))) | s(bool,'const.labSem.state_be_1'(s('type.labSem.state'(sK0,sK1),X0))) != s(bool,'const.labSem.state_be_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),sK2))))) | s('type.ffi.ffi_state'(sK1),'const.labSem.state_ffi_1'(s('type.labSem.state'(sK0,sK1),X0))) != s('type.ffi.ffi_state'(sK1),'const.labSem.state_ffi_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),sK2))))) | s(fun('type.num.num',fun('type.num.num','type.option.option'('type.fcp.cart'(bool,sK0)))),'const.labSem.state_io_regs_1'(s('type.labSem.state'(sK0,sK1),X0))) != s(fun('type.num.num',fun('type.num.num','type.option.option'('type.fcp.cart'(bool,sK0)))),'const.labSem.state_io_regs_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),sK2))))) | s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'const.labSem.state_mem_1'(s('type.labSem.state'(sK0,sK1),X0))) != s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'const.labSem.state_mem_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),sK2))))) | s('type.num.num','const.labSem.state_clock_1'(s('type.labSem.state'(sK0,sK1),sK2))) != s('type.num.num','const.labSem.state_clock_1'(s('type.labSem.state'(sK0,sK1),X0))) | s(bool,'const.labSem.state_failed_1'(s('type.labSem.state'(sK0,sK1),X0))) != s(bool,'const.labSem.state_failed_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),sK2))))) | s('type.num.num','const.labSem.state_ptr_reg_1'(s('type.labSem.state'(sK0,sK1),X0))) != s('type.num.num','const.labSem.state_ptr_reg_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),sK2))))) | s('type.num.num','const.labSem.state_len_reg_1'(s('type.labSem.state'(sK0,sK1),X0))) != s('type.num.num','const.labSem.state_len_reg_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),sK2))))) | s('type.num.num','const.labSem.state_link_reg_1'(s('type.labSem.state'(sK0,sK1),X0))) != s('type.num.num','const.labSem.state_link_reg_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),sK2))))) | s(fun('type.num.num','type.wordSem.word_loc'(sK0)),'const.labSem.state_regs_1'(s('type.labSem.state'(sK0,sK1),X0))) != s(fun('type.num.num','type.wordSem.word_loc'(sK0)),'const.labSem.state_regs_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),sK2)))))) )),
  inference(duplicate_literal_removal,[],[f605])).
fof(f605,plain,(
  ( ! [X0] : (s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'const.labSem.state_mem_1'(s('type.labSem.state'(sK0,sK1),X0))) != s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'const.labSem.state_mem_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),sK2))))) | s(fun('type.fcp.cart'(bool,sK0),bool),'const.labSem.state_mem_domain_1'(s('type.labSem.state'(sK0,sK1),X0))) != s(fun('type.fcp.cart'(bool,sK0),bool),'const.labSem.state_mem_domain_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),sK2))))) | s('type.num.num','const.labSem.state_pc_1'(s('type.labSem.state'(sK0,sK1),sK2))) != s('type.num.num','const.labSem.state_pc_1'(s('type.labSem.state'(sK0,sK1),X0))) | s(bool,'const.labSem.state_be_1'(s('type.labSem.state'(sK0,sK1),X0))) != s(bool,'const.labSem.state_be_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),sK2))))) | s('type.ffi.ffi_state'(sK1),'const.labSem.state_ffi_1'(s('type.labSem.state'(sK0,sK1),X0))) != s('type.ffi.ffi_state'(sK1),'const.labSem.state_ffi_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),sK2))))) | s(fun('type.num.num',fun('type.num.num','type.option.option'('type.fcp.cart'(bool,sK0)))),'const.labSem.state_io_regs_1'(s('type.labSem.state'(sK0,sK1),X0))) != s(fun('type.num.num',fun('type.num.num','type.option.option'('type.fcp.cart'(bool,sK0)))),'const.labSem.state_io_regs_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),sK2))))) | s('type.list.list'('type.labLang.sec'(sK0)),'const.labSem.state_code_1'(s('type.labSem.state'(sK0,sK1),X0))) != s('type.list.list'('type.labLang.sec'(sK0)),'const.labSem.state_code_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),sK2))))) | s('type.num.num','const.labSem.state_clock_1'(s('type.labSem.state'(sK0,sK1),sK2))) != s('type.num.num','const.labSem.state_clock_1'(s('type.labSem.state'(sK0,sK1),X0))) | s(bool,'const.labSem.state_failed_1'(s('type.labSem.state'(sK0,sK1),X0))) != s(bool,'const.labSem.state_failed_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),sK2))))) | s('type.num.num','const.labSem.state_ptr_reg_1'(s('type.labSem.state'(sK0,sK1),X0))) != s('type.num.num','const.labSem.state_ptr_reg_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),sK2))))) | s('type.num.num','const.labSem.state_len_reg_1'(s('type.labSem.state'(sK0,sK1),X0))) != s('type.num.num','const.labSem.state_len_reg_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),sK2))))) | s('type.num.num','const.labSem.state_link_reg_1'(s('type.labSem.state'(sK0,sK1),X0))) != s('type.num.num','const.labSem.state_link_reg_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),sK2))))) | s(fun('type.num.num','type.wordSem.word_loc'(sK0)),'const.labSem.state_regs_1'(s('type.labSem.state'(sK0,sK1),X0))) != s(fun('type.num.num','type.wordSem.word_loc'(sK0)),'const.labSem.state_regs_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),sK2))))) | s('type.num.num','const.labSem.state_pc_1'(s('type.labSem.state'(sK0,sK1),sK2))) != s('type.num.num','const.labSem.state_pc_1'(s('type.labSem.state'(sK0,sK1),X0)))) )),
  inference(equality_resolution,[],[f402])).
fof(f402,plain,(
  ( ! [X0,X1] : (s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),sK2))) != s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),X0))) | s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'const.labSem.state_mem_1'(s('type.labSem.state'(sK0,sK1),X1))) != s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'const.labSem.state_mem_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),X0))))) | s(fun('type.fcp.cart'(bool,sK0),bool),'const.labSem.state_mem_domain_1'(s('type.labSem.state'(sK0,sK1),X1))) != s(fun('type.fcp.cart'(bool,sK0),bool),'const.labSem.state_mem_domain_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),X0))))) | s('type.num.num','const.labSem.state_pc_1'(s('type.labSem.state'(sK0,sK1),X0))) != s('type.num.num','const.labSem.state_pc_1'(s('type.labSem.state'(sK0,sK1),X1))) | s(bool,'const.labSem.state_be_1'(s('type.labSem.state'(sK0,sK1),X1))) != s(bool,'const.labSem.state_be_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),X0))))) | s('type.ffi.ffi_state'(sK1),'const.labSem.state_ffi_1'(s('type.labSem.state'(sK0,sK1),X1))) != s('type.ffi.ffi_state'(sK1),'const.labSem.state_ffi_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),X0))))) | s(fun('type.num.num',fun('type.num.num','type.option.option'('type.fcp.cart'(bool,sK0)))),'const.labSem.state_io_regs_1'(s('type.labSem.state'(sK0,sK1),X1))) != s(fun('type.num.num',fun('type.num.num','type.option.option'('type.fcp.cart'(bool,sK0)))),'const.labSem.state_io_regs_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),X0))))) | s('type.list.list'('type.labLang.sec'(sK0)),'const.labSem.state_code_1'(s('type.labSem.state'(sK0,sK1),X1))) != s('type.list.list'('type.labLang.sec'(sK0)),'const.labSem.state_code_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),X0))))) | s('type.num.num','const.labSem.state_clock_1'(s('type.labSem.state'(sK0,sK1),X0))) != s('type.num.num','const.labSem.state_clock_1'(s('type.labSem.state'(sK0,sK1),X1))) | s(bool,'const.labSem.state_failed_1'(s('type.labSem.state'(sK0,sK1),X1))) != s(bool,'const.labSem.state_failed_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),X0))))) | s('type.num.num','const.labSem.state_ptr_reg_1'(s('type.labSem.state'(sK0,sK1),X1))) != s('type.num.num','const.labSem.state_ptr_reg_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),X0))))) | s('type.num.num','const.labSem.state_len_reg_1'(s('type.labSem.state'(sK0,sK1),X1))) != s('type.num.num','const.labSem.state_len_reg_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),X0))))) | s('type.num.num','const.labSem.state_link_reg_1'(s('type.labSem.state'(sK0,sK1),X1))) != s('type.num.num','const.labSem.state_link_reg_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),X0))))) | s(fun('type.num.num','type.wordSem.word_loc'(sK0)),'const.labSem.state_regs_1'(s('type.labSem.state'(sK0,sK1),X1))) != s(fun('type.num.num','type.wordSem.word_loc'(sK0)),'const.labSem.state_regs_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),X0))))) | s('type.num.num','const.labSem.state_pc_1'(s('type.labSem.state'(sK0,sK1),sK2))) != s('type.num.num','const.labSem.state_pc_1'(s('type.labSem.state'(sK0,sK1),X1)))) )),
  inference(forward_demodulation,[],[f401,f307])).
fof(f401,plain,(
  ( ! [X0,X1] : (s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'const.labSem.state_mem_1'(s('type.labSem.state'(sK0,sK1),X1))) != s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'const.labSem.state_mem_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),X0))))) | s(fun('type.fcp.cart'(bool,sK0),bool),'const.labSem.state_mem_domain_1'(s('type.labSem.state'(sK0,sK1),X1))) != s(fun('type.fcp.cart'(bool,sK0),bool),'const.labSem.state_mem_domain_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),X0))))) | s('type.num.num','const.labSem.state_pc_1'(s('type.labSem.state'(sK0,sK1),X0))) != s('type.num.num','const.labSem.state_pc_1'(s('type.labSem.state'(sK0,sK1),X1))) | s(bool,'const.labSem.state_be_1'(s('type.labSem.state'(sK0,sK1),X1))) != s(bool,'const.labSem.state_be_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),X0))))) | s('type.ffi.ffi_state'(sK1),'const.labSem.state_ffi_1'(s('type.labSem.state'(sK0,sK1),X1))) != s('type.ffi.ffi_state'(sK1),'const.labSem.state_ffi_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),X0))))) | s(fun('type.num.num',fun('type.num.num','type.option.option'('type.fcp.cart'(bool,sK0)))),'const.labSem.state_io_regs_1'(s('type.labSem.state'(sK0,sK1),X1))) != s(fun('type.num.num',fun('type.num.num','type.option.option'('type.fcp.cart'(bool,sK0)))),'const.labSem.state_io_regs_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),X0))))) | s('type.list.list'('type.labLang.sec'(sK0)),'const.labSem.state_code_1'(s('type.labSem.state'(sK0,sK1),X1))) != s('type.list.list'('type.labLang.sec'(sK0)),'const.labSem.state_code_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),X0))))) | s('type.num.num','const.labSem.state_clock_1'(s('type.labSem.state'(sK0,sK1),X0))) != s('type.num.num','const.labSem.state_clock_1'(s('type.labSem.state'(sK0,sK1),X1))) | s(bool,'const.labSem.state_failed_1'(s('type.labSem.state'(sK0,sK1),X1))) != s(bool,'const.labSem.state_failed_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),X0))))) | s('type.num.num','const.labSem.state_ptr_reg_1'(s('type.labSem.state'(sK0,sK1),X1))) != s('type.num.num','const.labSem.state_ptr_reg_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),X0))))) | s('type.num.num','const.labSem.state_len_reg_1'(s('type.labSem.state'(sK0,sK1),X1))) != s('type.num.num','const.labSem.state_len_reg_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),X0))))) | s('type.num.num','const.labSem.state_link_reg_1'(s('type.labSem.state'(sK0,sK1),X1))) != s('type.num.num','const.labSem.state_link_reg_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),X0))))) | s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),sK2))) != s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),X0))) | s('type.num.num','const.labSem.state_pc_1'(s('type.labSem.state'(sK0,sK1),sK2))) != s('type.num.num','const.labSem.state_pc_1'(s('type.labSem.state'(sK0,sK1),X1))) | s(fun('type.num.num','type.wordSem.word_loc'(sK0)),'const.labSem.state_regs_1'(s('type.labSem.state'(sK0,sK1),X1))) != s(fun('type.num.num','type.wordSem.word_loc'(sK0)),'const.labSem.state_regs_1'(s('type.labSem.state'(sK0,sK1),'const.labSem.state_mem_domain_fupd_2'(s(fun(fun('type.fcp.cart'(bool,sK0),bool),fun('type.fcp.cart'(bool,sK0),bool)),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.pred_set.INTER_2'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.labSem.state_mem_domain_1'(s('type.labSem.state'(sK0,sK1),X0))),s(fun('type.fcp.cart'(bool,sK0),bool),'const.alignment.byte_aligned_0'))))),s('type.labSem.state'(sK0,sK1),X0)))))) )),
  inference(forward_demodulation,[],[f400,f307])).
fof(f400,plain,(
  ( ! [X0,X1] : (s(fun('type.fcp.cart'(bool,sK0),bool),'const.labSem.state_mem_domain_1'(s('type.labSem.state'(sK0,sK1),X1))) != s(fun('type.fcp.cart'(bool,sK0),bool),'const.labSem.state_mem_domain_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),X0))))) | s('type.num.num','const.labSem.state_pc_1'(s('type.labSem.state'(sK0,sK1),X0))) != s('type.num.num','const.labSem.state_pc_1'(s('type.labSem.state'(sK0,sK1),X1))) | s(bool,'const.labSem.state_be_1'(s('type.labSem.state'(sK0,sK1),X1))) != s(bool,'const.labSem.state_be_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),X0))))) | s('type.ffi.ffi_state'(sK1),'const.labSem.state_ffi_1'(s('type.labSem.state'(sK0,sK1),X1))) != s('type.ffi.ffi_state'(sK1),'const.labSem.state_ffi_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),X0))))) | s(fun('type.num.num',fun('type.num.num','type.option.option'('type.fcp.cart'(bool,sK0)))),'const.labSem.state_io_regs_1'(s('type.labSem.state'(sK0,sK1),X1))) != s(fun('type.num.num',fun('type.num.num','type.option.option'('type.fcp.cart'(bool,sK0)))),'const.labSem.state_io_regs_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),X0))))) | s('type.list.list'('type.labLang.sec'(sK0)),'const.labSem.state_code_1'(s('type.labSem.state'(sK0,sK1),X1))) != s('type.list.list'('type.labLang.sec'(sK0)),'const.labSem.state_code_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),X0))))) | s('type.num.num','const.labSem.state_clock_1'(s('type.labSem.state'(sK0,sK1),X0))) != s('type.num.num','const.labSem.state_clock_1'(s('type.labSem.state'(sK0,sK1),X1))) | s(bool,'const.labSem.state_failed_1'(s('type.labSem.state'(sK0,sK1),X1))) != s(bool,'const.labSem.state_failed_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),X0))))) | s('type.num.num','const.labSem.state_ptr_reg_1'(s('type.labSem.state'(sK0,sK1),X1))) != s('type.num.num','const.labSem.state_ptr_reg_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),X0))))) | s('type.num.num','const.labSem.state_len_reg_1'(s('type.labSem.state'(sK0,sK1),X1))) != s('type.num.num','const.labSem.state_len_reg_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),X0))))) | s('type.num.num','const.labSem.state_link_reg_1'(s('type.labSem.state'(sK0,sK1),X1))) != s('type.num.num','const.labSem.state_link_reg_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),X0))))) | s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),sK2))) != s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),X0))) | s('type.num.num','const.labSem.state_pc_1'(s('type.labSem.state'(sK0,sK1),sK2))) != s('type.num.num','const.labSem.state_pc_1'(s('type.labSem.state'(sK0,sK1),X1))) | s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'const.labSem.state_mem_1'(s('type.labSem.state'(sK0,sK1),X1))) != s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'const.labSem.state_mem_1'(s('type.labSem.state'(sK0,sK1),'const.labSem.state_mem_domain_fupd_2'(s(fun(fun('type.fcp.cart'(bool,sK0),bool),fun('type.fcp.cart'(bool,sK0),bool)),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.pred_set.INTER_2'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.labSem.state_mem_domain_1'(s('type.labSem.state'(sK0,sK1),X0))),s(fun('type.fcp.cart'(bool,sK0),bool),'const.alignment.byte_aligned_0'))))),s('type.labSem.state'(sK0,sK1),X0))))) | s(fun('type.num.num','type.wordSem.word_loc'(sK0)),'const.labSem.state_regs_1'(s('type.labSem.state'(sK0,sK1),X1))) != s(fun('type.num.num','type.wordSem.word_loc'(sK0)),'const.labSem.state_regs_1'(s('type.labSem.state'(sK0,sK1),'const.labSem.state_mem_domain_fupd_2'(s(fun(fun('type.fcp.cart'(bool,sK0),bool),fun('type.fcp.cart'(bool,sK0),bool)),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.pred_set.INTER_2'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.labSem.state_mem_domain_1'(s('type.labSem.state'(sK0,sK1),X0))),s(fun('type.fcp.cart'(bool,sK0),bool),'const.alignment.byte_aligned_0'))))),s('type.labSem.state'(sK0,sK1),X0)))))) )),
  inference(forward_demodulation,[],[f399,f307])).
fof(f399,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.labSem.state_pc_1'(s('type.labSem.state'(sK0,sK1),X0))) != s('type.num.num','const.labSem.state_pc_1'(s('type.labSem.state'(sK0,sK1),X1))) | s(bool,'const.labSem.state_be_1'(s('type.labSem.state'(sK0,sK1),X1))) != s(bool,'const.labSem.state_be_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),X0))))) | s('type.ffi.ffi_state'(sK1),'const.labSem.state_ffi_1'(s('type.labSem.state'(sK0,sK1),X1))) != s('type.ffi.ffi_state'(sK1),'const.labSem.state_ffi_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),X0))))) | s(fun('type.num.num',fun('type.num.num','type.option.option'('type.fcp.cart'(bool,sK0)))),'const.labSem.state_io_regs_1'(s('type.labSem.state'(sK0,sK1),X1))) != s(fun('type.num.num',fun('type.num.num','type.option.option'('type.fcp.cart'(bool,sK0)))),'const.labSem.state_io_regs_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),X0))))) | s('type.list.list'('type.labLang.sec'(sK0)),'const.labSem.state_code_1'(s('type.labSem.state'(sK0,sK1),X1))) != s('type.list.list'('type.labLang.sec'(sK0)),'const.labSem.state_code_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),X0))))) | s('type.num.num','const.labSem.state_clock_1'(s('type.labSem.state'(sK0,sK1),X0))) != s('type.num.num','const.labSem.state_clock_1'(s('type.labSem.state'(sK0,sK1),X1))) | s(bool,'const.labSem.state_failed_1'(s('type.labSem.state'(sK0,sK1),X1))) != s(bool,'const.labSem.state_failed_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),X0))))) | s('type.num.num','const.labSem.state_ptr_reg_1'(s('type.labSem.state'(sK0,sK1),X1))) != s('type.num.num','const.labSem.state_ptr_reg_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),X0))))) | s('type.num.num','const.labSem.state_len_reg_1'(s('type.labSem.state'(sK0,sK1),X1))) != s('type.num.num','const.labSem.state_len_reg_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),X0))))) | s('type.num.num','const.labSem.state_link_reg_1'(s('type.labSem.state'(sK0,sK1),X1))) != s('type.num.num','const.labSem.state_link_reg_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),X0))))) | s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),sK2))) != s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),X0))) | s('type.num.num','const.labSem.state_pc_1'(s('type.labSem.state'(sK0,sK1),sK2))) != s('type.num.num','const.labSem.state_pc_1'(s('type.labSem.state'(sK0,sK1),X1))) | s(fun('type.fcp.cart'(bool,sK0),bool),'const.labSem.state_mem_domain_1'(s('type.labSem.state'(sK0,sK1),X1))) != s(fun('type.fcp.cart'(bool,sK0),bool),'const.labSem.state_mem_domain_1'(s('type.labSem.state'(sK0,sK1),'const.labSem.state_mem_domain_fupd_2'(s(fun(fun('type.fcp.cart'(bool,sK0),bool),fun('type.fcp.cart'(bool,sK0),bool)),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.pred_set.INTER_2'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.labSem.state_mem_domain_1'(s('type.labSem.state'(sK0,sK1),X0))),s(fun('type.fcp.cart'(bool,sK0),bool),'const.alignment.byte_aligned_0'))))),s('type.labSem.state'(sK0,sK1),X0))))) | s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'const.labSem.state_mem_1'(s('type.labSem.state'(sK0,sK1),X1))) != s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'const.labSem.state_mem_1'(s('type.labSem.state'(sK0,sK1),'const.labSem.state_mem_domain_fupd_2'(s(fun(fun('type.fcp.cart'(bool,sK0),bool),fun('type.fcp.cart'(bool,sK0),bool)),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.pred_set.INTER_2'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.labSem.state_mem_domain_1'(s('type.labSem.state'(sK0,sK1),X0))),s(fun('type.fcp.cart'(bool,sK0),bool),'const.alignment.byte_aligned_0'))))),s('type.labSem.state'(sK0,sK1),X0))))) | s(fun('type.num.num','type.wordSem.word_loc'(sK0)),'const.labSem.state_regs_1'(s('type.labSem.state'(sK0,sK1),X1))) != s(fun('type.num.num','type.wordSem.word_loc'(sK0)),'const.labSem.state_regs_1'(s('type.labSem.state'(sK0,sK1),'const.labSem.state_mem_domain_fupd_2'(s(fun(fun('type.fcp.cart'(bool,sK0),bool),fun('type.fcp.cart'(bool,sK0),bool)),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.pred_set.INTER_2'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.labSem.state_mem_domain_1'(s('type.labSem.state'(sK0,sK1),X0))),s(fun('type.fcp.cart'(bool,sK0),bool),'const.alignment.byte_aligned_0'))))),s('type.labSem.state'(sK0,sK1),X0)))))) )),
  inference(forward_demodulation,[],[f398,f327])).
fof(f398,plain,(
  ( ! [X0,X1] : (s(bool,'const.labSem.state_be_1'(s('type.labSem.state'(sK0,sK1),X1))) != s(bool,'const.labSem.state_be_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),X0))))) | s('type.ffi.ffi_state'(sK1),'const.labSem.state_ffi_1'(s('type.labSem.state'(sK0,sK1),X1))) != s('type.ffi.ffi_state'(sK1),'const.labSem.state_ffi_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),X0))))) | s(fun('type.num.num',fun('type.num.num','type.option.option'('type.fcp.cart'(bool,sK0)))),'const.labSem.state_io_regs_1'(s('type.labSem.state'(sK0,sK1),X1))) != s(fun('type.num.num',fun('type.num.num','type.option.option'('type.fcp.cart'(bool,sK0)))),'const.labSem.state_io_regs_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),X0))))) | s('type.list.list'('type.labLang.sec'(sK0)),'const.labSem.state_code_1'(s('type.labSem.state'(sK0,sK1),X1))) != s('type.list.list'('type.labLang.sec'(sK0)),'const.labSem.state_code_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),X0))))) | s('type.num.num','const.labSem.state_clock_1'(s('type.labSem.state'(sK0,sK1),X0))) != s('type.num.num','const.labSem.state_clock_1'(s('type.labSem.state'(sK0,sK1),X1))) | s(bool,'const.labSem.state_failed_1'(s('type.labSem.state'(sK0,sK1),X1))) != s(bool,'const.labSem.state_failed_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),X0))))) | s('type.num.num','const.labSem.state_ptr_reg_1'(s('type.labSem.state'(sK0,sK1),X1))) != s('type.num.num','const.labSem.state_ptr_reg_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),X0))))) | s('type.num.num','const.labSem.state_len_reg_1'(s('type.labSem.state'(sK0,sK1),X1))) != s('type.num.num','const.labSem.state_len_reg_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),X0))))) | s('type.num.num','const.labSem.state_link_reg_1'(s('type.labSem.state'(sK0,sK1),X1))) != s('type.num.num','const.labSem.state_link_reg_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),X0))))) | s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),sK2))) != s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),X0))) | s('type.num.num','const.labSem.state_pc_1'(s('type.labSem.state'(sK0,sK1),sK2))) != s('type.num.num','const.labSem.state_pc_1'(s('type.labSem.state'(sK0,sK1),X1))) | s('type.num.num','const.labSem.state_pc_1'(s('type.labSem.state'(sK0,sK1),X1))) != s('type.num.num','const.labSem.state_pc_1'(s('type.labSem.state'(sK0,sK1),'const.labSem.state_mem_domain_fupd_2'(s(fun(fun('type.fcp.cart'(bool,sK0),bool),fun('type.fcp.cart'(bool,sK0),bool)),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.pred_set.INTER_2'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.labSem.state_mem_domain_1'(s('type.labSem.state'(sK0,sK1),X0))),s(fun('type.fcp.cart'(bool,sK0),bool),'const.alignment.byte_aligned_0'))))),s('type.labSem.state'(sK0,sK1),X0))))) | s(fun('type.fcp.cart'(bool,sK0),bool),'const.labSem.state_mem_domain_1'(s('type.labSem.state'(sK0,sK1),X1))) != s(fun('type.fcp.cart'(bool,sK0),bool),'const.labSem.state_mem_domain_1'(s('type.labSem.state'(sK0,sK1),'const.labSem.state_mem_domain_fupd_2'(s(fun(fun('type.fcp.cart'(bool,sK0),bool),fun('type.fcp.cart'(bool,sK0),bool)),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.pred_set.INTER_2'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.labSem.state_mem_domain_1'(s('type.labSem.state'(sK0,sK1),X0))),s(fun('type.fcp.cart'(bool,sK0),bool),'const.alignment.byte_aligned_0'))))),s('type.labSem.state'(sK0,sK1),X0))))) | s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'const.labSem.state_mem_1'(s('type.labSem.state'(sK0,sK1),X1))) != s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'const.labSem.state_mem_1'(s('type.labSem.state'(sK0,sK1),'const.labSem.state_mem_domain_fupd_2'(s(fun(fun('type.fcp.cart'(bool,sK0),bool),fun('type.fcp.cart'(bool,sK0),bool)),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.pred_set.INTER_2'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.labSem.state_mem_domain_1'(s('type.labSem.state'(sK0,sK1),X0))),s(fun('type.fcp.cart'(bool,sK0),bool),'const.alignment.byte_aligned_0'))))),s('type.labSem.state'(sK0,sK1),X0))))) | s(fun('type.num.num','type.wordSem.word_loc'(sK0)),'const.labSem.state_regs_1'(s('type.labSem.state'(sK0,sK1),X1))) != s(fun('type.num.num','type.wordSem.word_loc'(sK0)),'const.labSem.state_regs_1'(s('type.labSem.state'(sK0,sK1),'const.labSem.state_mem_domain_fupd_2'(s(fun(fun('type.fcp.cart'(bool,sK0),bool),fun('type.fcp.cart'(bool,sK0),bool)),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.pred_set.INTER_2'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.labSem.state_mem_domain_1'(s('type.labSem.state'(sK0,sK1),X0))),s(fun('type.fcp.cart'(bool,sK0),bool),'const.alignment.byte_aligned_0'))))),s('type.labSem.state'(sK0,sK1),X0)))))) )),
  inference(forward_demodulation,[],[f397,f307])).
fof(f397,plain,(
  ( ! [X0,X1] : (s('type.ffi.ffi_state'(sK1),'const.labSem.state_ffi_1'(s('type.labSem.state'(sK0,sK1),X1))) != s('type.ffi.ffi_state'(sK1),'const.labSem.state_ffi_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),X0))))) | s(fun('type.num.num',fun('type.num.num','type.option.option'('type.fcp.cart'(bool,sK0)))),'const.labSem.state_io_regs_1'(s('type.labSem.state'(sK0,sK1),X1))) != s(fun('type.num.num',fun('type.num.num','type.option.option'('type.fcp.cart'(bool,sK0)))),'const.labSem.state_io_regs_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),X0))))) | s('type.list.list'('type.labLang.sec'(sK0)),'const.labSem.state_code_1'(s('type.labSem.state'(sK0,sK1),X1))) != s('type.list.list'('type.labLang.sec'(sK0)),'const.labSem.state_code_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),X0))))) | s('type.num.num','const.labSem.state_clock_1'(s('type.labSem.state'(sK0,sK1),X0))) != s('type.num.num','const.labSem.state_clock_1'(s('type.labSem.state'(sK0,sK1),X1))) | s(bool,'const.labSem.state_failed_1'(s('type.labSem.state'(sK0,sK1),X1))) != s(bool,'const.labSem.state_failed_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),X0))))) | s('type.num.num','const.labSem.state_ptr_reg_1'(s('type.labSem.state'(sK0,sK1),X1))) != s('type.num.num','const.labSem.state_ptr_reg_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),X0))))) | s('type.num.num','const.labSem.state_len_reg_1'(s('type.labSem.state'(sK0,sK1),X1))) != s('type.num.num','const.labSem.state_len_reg_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),X0))))) | s('type.num.num','const.labSem.state_link_reg_1'(s('type.labSem.state'(sK0,sK1),X1))) != s('type.num.num','const.labSem.state_link_reg_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),X0))))) | s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),sK2))) != s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),X0))) | s('type.num.num','const.labSem.state_pc_1'(s('type.labSem.state'(sK0,sK1),sK2))) != s('type.num.num','const.labSem.state_pc_1'(s('type.labSem.state'(sK0,sK1),X1))) | s(bool,'const.labSem.state_be_1'(s('type.labSem.state'(sK0,sK1),X1))) != s(bool,'const.labSem.state_be_1'(s('type.labSem.state'(sK0,sK1),'const.labSem.state_mem_domain_fupd_2'(s(fun(fun('type.fcp.cart'(bool,sK0),bool),fun('type.fcp.cart'(bool,sK0),bool)),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.pred_set.INTER_2'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.labSem.state_mem_domain_1'(s('type.labSem.state'(sK0,sK1),X0))),s(fun('type.fcp.cart'(bool,sK0),bool),'const.alignment.byte_aligned_0'))))),s('type.labSem.state'(sK0,sK1),X0))))) | s('type.num.num','const.labSem.state_pc_1'(s('type.labSem.state'(sK0,sK1),X1))) != s('type.num.num','const.labSem.state_pc_1'(s('type.labSem.state'(sK0,sK1),'const.labSem.state_mem_domain_fupd_2'(s(fun(fun('type.fcp.cart'(bool,sK0),bool),fun('type.fcp.cart'(bool,sK0),bool)),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.pred_set.INTER_2'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.labSem.state_mem_domain_1'(s('type.labSem.state'(sK0,sK1),X0))),s(fun('type.fcp.cart'(bool,sK0),bool),'const.alignment.byte_aligned_0'))))),s('type.labSem.state'(sK0,sK1),X0))))) | s(fun('type.fcp.cart'(bool,sK0),bool),'const.labSem.state_mem_domain_1'(s('type.labSem.state'(sK0,sK1),X1))) != s(fun('type.fcp.cart'(bool,sK0),bool),'const.labSem.state_mem_domain_1'(s('type.labSem.state'(sK0,sK1),'const.labSem.state_mem_domain_fupd_2'(s(fun(fun('type.fcp.cart'(bool,sK0),bool),fun('type.fcp.cart'(bool,sK0),bool)),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.pred_set.INTER_2'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.labSem.state_mem_domain_1'(s('type.labSem.state'(sK0,sK1),X0))),s(fun('type.fcp.cart'(bool,sK0),bool),'const.alignment.byte_aligned_0'))))),s('type.labSem.state'(sK0,sK1),X0))))) | s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'const.labSem.state_mem_1'(s('type.labSem.state'(sK0,sK1),X1))) != s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'const.labSem.state_mem_1'(s('type.labSem.state'(sK0,sK1),'const.labSem.state_mem_domain_fupd_2'(s(fun(fun('type.fcp.cart'(bool,sK0),bool),fun('type.fcp.cart'(bool,sK0),bool)),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.pred_set.INTER_2'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.labSem.state_mem_domain_1'(s('type.labSem.state'(sK0,sK1),X0))),s(fun('type.fcp.cart'(bool,sK0),bool),'const.alignment.byte_aligned_0'))))),s('type.labSem.state'(sK0,sK1),X0))))) | s(fun('type.num.num','type.wordSem.word_loc'(sK0)),'const.labSem.state_regs_1'(s('type.labSem.state'(sK0,sK1),X1))) != s(fun('type.num.num','type.wordSem.word_loc'(sK0)),'const.labSem.state_regs_1'(s('type.labSem.state'(sK0,sK1),'const.labSem.state_mem_domain_fupd_2'(s(fun(fun('type.fcp.cart'(bool,sK0),bool),fun('type.fcp.cart'(bool,sK0),bool)),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.pred_set.INTER_2'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.labSem.state_mem_domain_1'(s('type.labSem.state'(sK0,sK1),X0))),s(fun('type.fcp.cart'(bool,sK0),bool),'const.alignment.byte_aligned_0'))))),s('type.labSem.state'(sK0,sK1),X0)))))) )),
  inference(forward_demodulation,[],[f396,f307])).
fof(f396,plain,(
  ( ! [X0,X1] : (s(fun('type.num.num',fun('type.num.num','type.option.option'('type.fcp.cart'(bool,sK0)))),'const.labSem.state_io_regs_1'(s('type.labSem.state'(sK0,sK1),X1))) != s(fun('type.num.num',fun('type.num.num','type.option.option'('type.fcp.cart'(bool,sK0)))),'const.labSem.state_io_regs_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),X0))))) | s('type.list.list'('type.labLang.sec'(sK0)),'const.labSem.state_code_1'(s('type.labSem.state'(sK0,sK1),X1))) != s('type.list.list'('type.labLang.sec'(sK0)),'const.labSem.state_code_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),X0))))) | s('type.num.num','const.labSem.state_clock_1'(s('type.labSem.state'(sK0,sK1),X0))) != s('type.num.num','const.labSem.state_clock_1'(s('type.labSem.state'(sK0,sK1),X1))) | s(bool,'const.labSem.state_failed_1'(s('type.labSem.state'(sK0,sK1),X1))) != s(bool,'const.labSem.state_failed_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),X0))))) | s('type.num.num','const.labSem.state_ptr_reg_1'(s('type.labSem.state'(sK0,sK1),X1))) != s('type.num.num','const.labSem.state_ptr_reg_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),X0))))) | s('type.num.num','const.labSem.state_len_reg_1'(s('type.labSem.state'(sK0,sK1),X1))) != s('type.num.num','const.labSem.state_len_reg_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),X0))))) | s('type.num.num','const.labSem.state_link_reg_1'(s('type.labSem.state'(sK0,sK1),X1))) != s('type.num.num','const.labSem.state_link_reg_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),X0))))) | s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),sK2))) != s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),X0))) | s('type.num.num','const.labSem.state_pc_1'(s('type.labSem.state'(sK0,sK1),sK2))) != s('type.num.num','const.labSem.state_pc_1'(s('type.labSem.state'(sK0,sK1),X1))) | s('type.ffi.ffi_state'(sK1),'const.labSem.state_ffi_1'(s('type.labSem.state'(sK0,sK1),X1))) != s('type.ffi.ffi_state'(sK1),'const.labSem.state_ffi_1'(s('type.labSem.state'(sK0,sK1),'const.labSem.state_mem_domain_fupd_2'(s(fun(fun('type.fcp.cart'(bool,sK0),bool),fun('type.fcp.cart'(bool,sK0),bool)),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.pred_set.INTER_2'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.labSem.state_mem_domain_1'(s('type.labSem.state'(sK0,sK1),X0))),s(fun('type.fcp.cart'(bool,sK0),bool),'const.alignment.byte_aligned_0'))))),s('type.labSem.state'(sK0,sK1),X0))))) | s(bool,'const.labSem.state_be_1'(s('type.labSem.state'(sK0,sK1),X1))) != s(bool,'const.labSem.state_be_1'(s('type.labSem.state'(sK0,sK1),'const.labSem.state_mem_domain_fupd_2'(s(fun(fun('type.fcp.cart'(bool,sK0),bool),fun('type.fcp.cart'(bool,sK0),bool)),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.pred_set.INTER_2'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.labSem.state_mem_domain_1'(s('type.labSem.state'(sK0,sK1),X0))),s(fun('type.fcp.cart'(bool,sK0),bool),'const.alignment.byte_aligned_0'))))),s('type.labSem.state'(sK0,sK1),X0))))) | s('type.num.num','const.labSem.state_pc_1'(s('type.labSem.state'(sK0,sK1),X1))) != s('type.num.num','const.labSem.state_pc_1'(s('type.labSem.state'(sK0,sK1),'const.labSem.state_mem_domain_fupd_2'(s(fun(fun('type.fcp.cart'(bool,sK0),bool),fun('type.fcp.cart'(bool,sK0),bool)),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.pred_set.INTER_2'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.labSem.state_mem_domain_1'(s('type.labSem.state'(sK0,sK1),X0))),s(fun('type.fcp.cart'(bool,sK0),bool),'const.alignment.byte_aligned_0'))))),s('type.labSem.state'(sK0,sK1),X0))))) | s(fun('type.fcp.cart'(bool,sK0),bool),'const.labSem.state_mem_domain_1'(s('type.labSem.state'(sK0,sK1),X1))) != s(fun('type.fcp.cart'(bool,sK0),bool),'const.labSem.state_mem_domain_1'(s('type.labSem.state'(sK0,sK1),'const.labSem.state_mem_domain_fupd_2'(s(fun(fun('type.fcp.cart'(bool,sK0),bool),fun('type.fcp.cart'(bool,sK0),bool)),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.pred_set.INTER_2'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.labSem.state_mem_domain_1'(s('type.labSem.state'(sK0,sK1),X0))),s(fun('type.fcp.cart'(bool,sK0),bool),'const.alignment.byte_aligned_0'))))),s('type.labSem.state'(sK0,sK1),X0))))) | s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'const.labSem.state_mem_1'(s('type.labSem.state'(sK0,sK1),X1))) != s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'const.labSem.state_mem_1'(s('type.labSem.state'(sK0,sK1),'const.labSem.state_mem_domain_fupd_2'(s(fun(fun('type.fcp.cart'(bool,sK0),bool),fun('type.fcp.cart'(bool,sK0),bool)),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.pred_set.INTER_2'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.labSem.state_mem_domain_1'(s('type.labSem.state'(sK0,sK1),X0))),s(fun('type.fcp.cart'(bool,sK0),bool),'const.alignment.byte_aligned_0'))))),s('type.labSem.state'(sK0,sK1),X0))))) | s(fun('type.num.num','type.wordSem.word_loc'(sK0)),'const.labSem.state_regs_1'(s('type.labSem.state'(sK0,sK1),X1))) != s(fun('type.num.num','type.wordSem.word_loc'(sK0)),'const.labSem.state_regs_1'(s('type.labSem.state'(sK0,sK1),'const.labSem.state_mem_domain_fupd_2'(s(fun(fun('type.fcp.cart'(bool,sK0),bool),fun('type.fcp.cart'(bool,sK0),bool)),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.pred_set.INTER_2'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.labSem.state_mem_domain_1'(s('type.labSem.state'(sK0,sK1),X0))),s(fun('type.fcp.cart'(bool,sK0),bool),'const.alignment.byte_aligned_0'))))),s('type.labSem.state'(sK0,sK1),X0)))))) )),
  inference(forward_demodulation,[],[f395,f307])).
fof(f395,plain,(
  ( ! [X0,X1] : (s('type.list.list'('type.labLang.sec'(sK0)),'const.labSem.state_code_1'(s('type.labSem.state'(sK0,sK1),X1))) != s('type.list.list'('type.labLang.sec'(sK0)),'const.labSem.state_code_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),X0))))) | s('type.num.num','const.labSem.state_clock_1'(s('type.labSem.state'(sK0,sK1),X0))) != s('type.num.num','const.labSem.state_clock_1'(s('type.labSem.state'(sK0,sK1),X1))) | s(bool,'const.labSem.state_failed_1'(s('type.labSem.state'(sK0,sK1),X1))) != s(bool,'const.labSem.state_failed_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),X0))))) | s('type.num.num','const.labSem.state_ptr_reg_1'(s('type.labSem.state'(sK0,sK1),X1))) != s('type.num.num','const.labSem.state_ptr_reg_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),X0))))) | s('type.num.num','const.labSem.state_len_reg_1'(s('type.labSem.state'(sK0,sK1),X1))) != s('type.num.num','const.labSem.state_len_reg_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),X0))))) | s('type.num.num','const.labSem.state_link_reg_1'(s('type.labSem.state'(sK0,sK1),X1))) != s('type.num.num','const.labSem.state_link_reg_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),X0))))) | s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),sK2))) != s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),X0))) | s('type.num.num','const.labSem.state_pc_1'(s('type.labSem.state'(sK0,sK1),sK2))) != s('type.num.num','const.labSem.state_pc_1'(s('type.labSem.state'(sK0,sK1),X1))) | s(fun('type.num.num',fun('type.num.num','type.option.option'('type.fcp.cart'(bool,sK0)))),'const.labSem.state_io_regs_1'(s('type.labSem.state'(sK0,sK1),X1))) != s(fun('type.num.num',fun('type.num.num','type.option.option'('type.fcp.cart'(bool,sK0)))),'const.labSem.state_io_regs_1'(s('type.labSem.state'(sK0,sK1),'const.labSem.state_mem_domain_fupd_2'(s(fun(fun('type.fcp.cart'(bool,sK0),bool),fun('type.fcp.cart'(bool,sK0),bool)),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.pred_set.INTER_2'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.labSem.state_mem_domain_1'(s('type.labSem.state'(sK0,sK1),X0))),s(fun('type.fcp.cart'(bool,sK0),bool),'const.alignment.byte_aligned_0'))))),s('type.labSem.state'(sK0,sK1),X0))))) | s('type.ffi.ffi_state'(sK1),'const.labSem.state_ffi_1'(s('type.labSem.state'(sK0,sK1),X1))) != s('type.ffi.ffi_state'(sK1),'const.labSem.state_ffi_1'(s('type.labSem.state'(sK0,sK1),'const.labSem.state_mem_domain_fupd_2'(s(fun(fun('type.fcp.cart'(bool,sK0),bool),fun('type.fcp.cart'(bool,sK0),bool)),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.pred_set.INTER_2'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.labSem.state_mem_domain_1'(s('type.labSem.state'(sK0,sK1),X0))),s(fun('type.fcp.cart'(bool,sK0),bool),'const.alignment.byte_aligned_0'))))),s('type.labSem.state'(sK0,sK1),X0))))) | s(bool,'const.labSem.state_be_1'(s('type.labSem.state'(sK0,sK1),X1))) != s(bool,'const.labSem.state_be_1'(s('type.labSem.state'(sK0,sK1),'const.labSem.state_mem_domain_fupd_2'(s(fun(fun('type.fcp.cart'(bool,sK0),bool),fun('type.fcp.cart'(bool,sK0),bool)),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.pred_set.INTER_2'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.labSem.state_mem_domain_1'(s('type.labSem.state'(sK0,sK1),X0))),s(fun('type.fcp.cart'(bool,sK0),bool),'const.alignment.byte_aligned_0'))))),s('type.labSem.state'(sK0,sK1),X0))))) | s('type.num.num','const.labSem.state_pc_1'(s('type.labSem.state'(sK0,sK1),X1))) != s('type.num.num','const.labSem.state_pc_1'(s('type.labSem.state'(sK0,sK1),'const.labSem.state_mem_domain_fupd_2'(s(fun(fun('type.fcp.cart'(bool,sK0),bool),fun('type.fcp.cart'(bool,sK0),bool)),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.pred_set.INTER_2'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.labSem.state_mem_domain_1'(s('type.labSem.state'(sK0,sK1),X0))),s(fun('type.fcp.cart'(bool,sK0),bool),'const.alignment.byte_aligned_0'))))),s('type.labSem.state'(sK0,sK1),X0))))) | s(fun('type.fcp.cart'(bool,sK0),bool),'const.labSem.state_mem_domain_1'(s('type.labSem.state'(sK0,sK1),X1))) != s(fun('type.fcp.cart'(bool,sK0),bool),'const.labSem.state_mem_domain_1'(s('type.labSem.state'(sK0,sK1),'const.labSem.state_mem_domain_fupd_2'(s(fun(fun('type.fcp.cart'(bool,sK0),bool),fun('type.fcp.cart'(bool,sK0),bool)),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.pred_set.INTER_2'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.labSem.state_mem_domain_1'(s('type.labSem.state'(sK0,sK1),X0))),s(fun('type.fcp.cart'(bool,sK0),bool),'const.alignment.byte_aligned_0'))))),s('type.labSem.state'(sK0,sK1),X0))))) | s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'const.labSem.state_mem_1'(s('type.labSem.state'(sK0,sK1),X1))) != s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'const.labSem.state_mem_1'(s('type.labSem.state'(sK0,sK1),'const.labSem.state_mem_domain_fupd_2'(s(fun(fun('type.fcp.cart'(bool,sK0),bool),fun('type.fcp.cart'(bool,sK0),bool)),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.pred_set.INTER_2'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.labSem.state_mem_domain_1'(s('type.labSem.state'(sK0,sK1),X0))),s(fun('type.fcp.cart'(bool,sK0),bool),'const.alignment.byte_aligned_0'))))),s('type.labSem.state'(sK0,sK1),X0))))) | s(fun('type.num.num','type.wordSem.word_loc'(sK0)),'const.labSem.state_regs_1'(s('type.labSem.state'(sK0,sK1),X1))) != s(fun('type.num.num','type.wordSem.word_loc'(sK0)),'const.labSem.state_regs_1'(s('type.labSem.state'(sK0,sK1),'const.labSem.state_mem_domain_fupd_2'(s(fun(fun('type.fcp.cart'(bool,sK0),bool),fun('type.fcp.cart'(bool,sK0),bool)),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.pred_set.INTER_2'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.labSem.state_mem_domain_1'(s('type.labSem.state'(sK0,sK1),X0))),s(fun('type.fcp.cart'(bool,sK0),bool),'const.alignment.byte_aligned_0'))))),s('type.labSem.state'(sK0,sK1),X0)))))) )),
  inference(forward_demodulation,[],[f394,f307])).
fof(f394,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.labSem.state_clock_1'(s('type.labSem.state'(sK0,sK1),X0))) != s('type.num.num','const.labSem.state_clock_1'(s('type.labSem.state'(sK0,sK1),X1))) | s(bool,'const.labSem.state_failed_1'(s('type.labSem.state'(sK0,sK1),X1))) != s(bool,'const.labSem.state_failed_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),X0))))) | s('type.num.num','const.labSem.state_ptr_reg_1'(s('type.labSem.state'(sK0,sK1),X1))) != s('type.num.num','const.labSem.state_ptr_reg_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),X0))))) | s('type.num.num','const.labSem.state_len_reg_1'(s('type.labSem.state'(sK0,sK1),X1))) != s('type.num.num','const.labSem.state_len_reg_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),X0))))) | s('type.num.num','const.labSem.state_link_reg_1'(s('type.labSem.state'(sK0,sK1),X1))) != s('type.num.num','const.labSem.state_link_reg_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),X0))))) | s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),sK2))) != s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),X0))) | s('type.num.num','const.labSem.state_pc_1'(s('type.labSem.state'(sK0,sK1),sK2))) != s('type.num.num','const.labSem.state_pc_1'(s('type.labSem.state'(sK0,sK1),X1))) | s('type.list.list'('type.labLang.sec'(sK0)),'const.labSem.state_code_1'(s('type.labSem.state'(sK0,sK1),X1))) != s('type.list.list'('type.labLang.sec'(sK0)),'const.labSem.state_code_1'(s('type.labSem.state'(sK0,sK1),'const.labSem.state_mem_domain_fupd_2'(s(fun(fun('type.fcp.cart'(bool,sK0),bool),fun('type.fcp.cart'(bool,sK0),bool)),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.pred_set.INTER_2'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.labSem.state_mem_domain_1'(s('type.labSem.state'(sK0,sK1),X0))),s(fun('type.fcp.cart'(bool,sK0),bool),'const.alignment.byte_aligned_0'))))),s('type.labSem.state'(sK0,sK1),X0))))) | s(fun('type.num.num',fun('type.num.num','type.option.option'('type.fcp.cart'(bool,sK0)))),'const.labSem.state_io_regs_1'(s('type.labSem.state'(sK0,sK1),X1))) != s(fun('type.num.num',fun('type.num.num','type.option.option'('type.fcp.cart'(bool,sK0)))),'const.labSem.state_io_regs_1'(s('type.labSem.state'(sK0,sK1),'const.labSem.state_mem_domain_fupd_2'(s(fun(fun('type.fcp.cart'(bool,sK0),bool),fun('type.fcp.cart'(bool,sK0),bool)),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.pred_set.INTER_2'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.labSem.state_mem_domain_1'(s('type.labSem.state'(sK0,sK1),X0))),s(fun('type.fcp.cart'(bool,sK0),bool),'const.alignment.byte_aligned_0'))))),s('type.labSem.state'(sK0,sK1),X0))))) | s('type.ffi.ffi_state'(sK1),'const.labSem.state_ffi_1'(s('type.labSem.state'(sK0,sK1),X1))) != s('type.ffi.ffi_state'(sK1),'const.labSem.state_ffi_1'(s('type.labSem.state'(sK0,sK1),'const.labSem.state_mem_domain_fupd_2'(s(fun(fun('type.fcp.cart'(bool,sK0),bool),fun('type.fcp.cart'(bool,sK0),bool)),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.pred_set.INTER_2'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.labSem.state_mem_domain_1'(s('type.labSem.state'(sK0,sK1),X0))),s(fun('type.fcp.cart'(bool,sK0),bool),'const.alignment.byte_aligned_0'))))),s('type.labSem.state'(sK0,sK1),X0))))) | s(bool,'const.labSem.state_be_1'(s('type.labSem.state'(sK0,sK1),X1))) != s(bool,'const.labSem.state_be_1'(s('type.labSem.state'(sK0,sK1),'const.labSem.state_mem_domain_fupd_2'(s(fun(fun('type.fcp.cart'(bool,sK0),bool),fun('type.fcp.cart'(bool,sK0),bool)),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.pred_set.INTER_2'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.labSem.state_mem_domain_1'(s('type.labSem.state'(sK0,sK1),X0))),s(fun('type.fcp.cart'(bool,sK0),bool),'const.alignment.byte_aligned_0'))))),s('type.labSem.state'(sK0,sK1),X0))))) | s('type.num.num','const.labSem.state_pc_1'(s('type.labSem.state'(sK0,sK1),X1))) != s('type.num.num','const.labSem.state_pc_1'(s('type.labSem.state'(sK0,sK1),'const.labSem.state_mem_domain_fupd_2'(s(fun(fun('type.fcp.cart'(bool,sK0),bool),fun('type.fcp.cart'(bool,sK0),bool)),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.pred_set.INTER_2'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.labSem.state_mem_domain_1'(s('type.labSem.state'(sK0,sK1),X0))),s(fun('type.fcp.cart'(bool,sK0),bool),'const.alignment.byte_aligned_0'))))),s('type.labSem.state'(sK0,sK1),X0))))) | s(fun('type.fcp.cart'(bool,sK0),bool),'const.labSem.state_mem_domain_1'(s('type.labSem.state'(sK0,sK1),X1))) != s(fun('type.fcp.cart'(bool,sK0),bool),'const.labSem.state_mem_domain_1'(s('type.labSem.state'(sK0,sK1),'const.labSem.state_mem_domain_fupd_2'(s(fun(fun('type.fcp.cart'(bool,sK0),bool),fun('type.fcp.cart'(bool,sK0),bool)),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.pred_set.INTER_2'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.labSem.state_mem_domain_1'(s('type.labSem.state'(sK0,sK1),X0))),s(fun('type.fcp.cart'(bool,sK0),bool),'const.alignment.byte_aligned_0'))))),s('type.labSem.state'(sK0,sK1),X0))))) | s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'const.labSem.state_mem_1'(s('type.labSem.state'(sK0,sK1),X1))) != s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'const.labSem.state_mem_1'(s('type.labSem.state'(sK0,sK1),'const.labSem.state_mem_domain_fupd_2'(s(fun(fun('type.fcp.cart'(bool,sK0),bool),fun('type.fcp.cart'(bool,sK0),bool)),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.pred_set.INTER_2'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.labSem.state_mem_domain_1'(s('type.labSem.state'(sK0,sK1),X0))),s(fun('type.fcp.cart'(bool,sK0),bool),'const.alignment.byte_aligned_0'))))),s('type.labSem.state'(sK0,sK1),X0))))) | s(fun('type.num.num','type.wordSem.word_loc'(sK0)),'const.labSem.state_regs_1'(s('type.labSem.state'(sK0,sK1),X1))) != s(fun('type.num.num','type.wordSem.word_loc'(sK0)),'const.labSem.state_regs_1'(s('type.labSem.state'(sK0,sK1),'const.labSem.state_mem_domain_fupd_2'(s(fun(fun('type.fcp.cart'(bool,sK0),bool),fun('type.fcp.cart'(bool,sK0),bool)),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.pred_set.INTER_2'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.labSem.state_mem_domain_1'(s('type.labSem.state'(sK0,sK1),X0))),s(fun('type.fcp.cart'(bool,sK0),bool),'const.alignment.byte_aligned_0'))))),s('type.labSem.state'(sK0,sK1),X0)))))) )),
  inference(forward_demodulation,[],[f393,f308])).
fof(f393,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.labSem.state_clock_1'(s('type.labSem.state'(sK0,sK1),X1))) != s('type.num.num','const.labSem.state_clock_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),X0))))) | s(bool,'const.labSem.state_failed_1'(s('type.labSem.state'(sK0,sK1),X1))) != s(bool,'const.labSem.state_failed_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),X0))))) | s('type.num.num','const.labSem.state_ptr_reg_1'(s('type.labSem.state'(sK0,sK1),X1))) != s('type.num.num','const.labSem.state_ptr_reg_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),X0))))) | s('type.num.num','const.labSem.state_len_reg_1'(s('type.labSem.state'(sK0,sK1),X1))) != s('type.num.num','const.labSem.state_len_reg_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),X0))))) | s('type.num.num','const.labSem.state_link_reg_1'(s('type.labSem.state'(sK0,sK1),X1))) != s('type.num.num','const.labSem.state_link_reg_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),X0))))) | s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),sK2))) != s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),X0))) | s('type.num.num','const.labSem.state_pc_1'(s('type.labSem.state'(sK0,sK1),sK2))) != s('type.num.num','const.labSem.state_pc_1'(s('type.labSem.state'(sK0,sK1),X1))) | s('type.list.list'('type.labLang.sec'(sK0)),'const.labSem.state_code_1'(s('type.labSem.state'(sK0,sK1),X1))) != s('type.list.list'('type.labLang.sec'(sK0)),'const.labSem.state_code_1'(s('type.labSem.state'(sK0,sK1),'const.labSem.state_mem_domain_fupd_2'(s(fun(fun('type.fcp.cart'(bool,sK0),bool),fun('type.fcp.cart'(bool,sK0),bool)),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.pred_set.INTER_2'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.labSem.state_mem_domain_1'(s('type.labSem.state'(sK0,sK1),X0))),s(fun('type.fcp.cart'(bool,sK0),bool),'const.alignment.byte_aligned_0'))))),s('type.labSem.state'(sK0,sK1),X0))))) | s(fun('type.num.num',fun('type.num.num','type.option.option'('type.fcp.cart'(bool,sK0)))),'const.labSem.state_io_regs_1'(s('type.labSem.state'(sK0,sK1),X1))) != s(fun('type.num.num',fun('type.num.num','type.option.option'('type.fcp.cart'(bool,sK0)))),'const.labSem.state_io_regs_1'(s('type.labSem.state'(sK0,sK1),'const.labSem.state_mem_domain_fupd_2'(s(fun(fun('type.fcp.cart'(bool,sK0),bool),fun('type.fcp.cart'(bool,sK0),bool)),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.pred_set.INTER_2'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.labSem.state_mem_domain_1'(s('type.labSem.state'(sK0,sK1),X0))),s(fun('type.fcp.cart'(bool,sK0),bool),'const.alignment.byte_aligned_0'))))),s('type.labSem.state'(sK0,sK1),X0))))) | s('type.ffi.ffi_state'(sK1),'const.labSem.state_ffi_1'(s('type.labSem.state'(sK0,sK1),X1))) != s('type.ffi.ffi_state'(sK1),'const.labSem.state_ffi_1'(s('type.labSem.state'(sK0,sK1),'const.labSem.state_mem_domain_fupd_2'(s(fun(fun('type.fcp.cart'(bool,sK0),bool),fun('type.fcp.cart'(bool,sK0),bool)),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.pred_set.INTER_2'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.labSem.state_mem_domain_1'(s('type.labSem.state'(sK0,sK1),X0))),s(fun('type.fcp.cart'(bool,sK0),bool),'const.alignment.byte_aligned_0'))))),s('type.labSem.state'(sK0,sK1),X0))))) | s(bool,'const.labSem.state_be_1'(s('type.labSem.state'(sK0,sK1),X1))) != s(bool,'const.labSem.state_be_1'(s('type.labSem.state'(sK0,sK1),'const.labSem.state_mem_domain_fupd_2'(s(fun(fun('type.fcp.cart'(bool,sK0),bool),fun('type.fcp.cart'(bool,sK0),bool)),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.pred_set.INTER_2'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.labSem.state_mem_domain_1'(s('type.labSem.state'(sK0,sK1),X0))),s(fun('type.fcp.cart'(bool,sK0),bool),'const.alignment.byte_aligned_0'))))),s('type.labSem.state'(sK0,sK1),X0))))) | s('type.num.num','const.labSem.state_pc_1'(s('type.labSem.state'(sK0,sK1),X1))) != s('type.num.num','const.labSem.state_pc_1'(s('type.labSem.state'(sK0,sK1),'const.labSem.state_mem_domain_fupd_2'(s(fun(fun('type.fcp.cart'(bool,sK0),bool),fun('type.fcp.cart'(bool,sK0),bool)),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.pred_set.INTER_2'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.labSem.state_mem_domain_1'(s('type.labSem.state'(sK0,sK1),X0))),s(fun('type.fcp.cart'(bool,sK0),bool),'const.alignment.byte_aligned_0'))))),s('type.labSem.state'(sK0,sK1),X0))))) | s(fun('type.fcp.cart'(bool,sK0),bool),'const.labSem.state_mem_domain_1'(s('type.labSem.state'(sK0,sK1),X1))) != s(fun('type.fcp.cart'(bool,sK0),bool),'const.labSem.state_mem_domain_1'(s('type.labSem.state'(sK0,sK1),'const.labSem.state_mem_domain_fupd_2'(s(fun(fun('type.fcp.cart'(bool,sK0),bool),fun('type.fcp.cart'(bool,sK0),bool)),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.pred_set.INTER_2'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.labSem.state_mem_domain_1'(s('type.labSem.state'(sK0,sK1),X0))),s(fun('type.fcp.cart'(bool,sK0),bool),'const.alignment.byte_aligned_0'))))),s('type.labSem.state'(sK0,sK1),X0))))) | s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'const.labSem.state_mem_1'(s('type.labSem.state'(sK0,sK1),X1))) != s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'const.labSem.state_mem_1'(s('type.labSem.state'(sK0,sK1),'const.labSem.state_mem_domain_fupd_2'(s(fun(fun('type.fcp.cart'(bool,sK0),bool),fun('type.fcp.cart'(bool,sK0),bool)),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.pred_set.INTER_2'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.labSem.state_mem_domain_1'(s('type.labSem.state'(sK0,sK1),X0))),s(fun('type.fcp.cart'(bool,sK0),bool),'const.alignment.byte_aligned_0'))))),s('type.labSem.state'(sK0,sK1),X0))))) | s(fun('type.num.num','type.wordSem.word_loc'(sK0)),'const.labSem.state_regs_1'(s('type.labSem.state'(sK0,sK1),X1))) != s(fun('type.num.num','type.wordSem.word_loc'(sK0)),'const.labSem.state_regs_1'(s('type.labSem.state'(sK0,sK1),'const.labSem.state_mem_domain_fupd_2'(s(fun(fun('type.fcp.cart'(bool,sK0),bool),fun('type.fcp.cart'(bool,sK0),bool)),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.pred_set.INTER_2'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.labSem.state_mem_domain_1'(s('type.labSem.state'(sK0,sK1),X0))),s(fun('type.fcp.cart'(bool,sK0),bool),'const.alignment.byte_aligned_0'))))),s('type.labSem.state'(sK0,sK1),X0)))))) )),
  inference(forward_demodulation,[],[f392,f307])).
fof(f392,plain,(
  ( ! [X0,X1] : (s(bool,'const.labSem.state_failed_1'(s('type.labSem.state'(sK0,sK1),X1))) != s(bool,'const.labSem.state_failed_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),X0))))) | s('type.num.num','const.labSem.state_ptr_reg_1'(s('type.labSem.state'(sK0,sK1),X1))) != s('type.num.num','const.labSem.state_ptr_reg_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),X0))))) | s('type.num.num','const.labSem.state_len_reg_1'(s('type.labSem.state'(sK0,sK1),X1))) != s('type.num.num','const.labSem.state_len_reg_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),X0))))) | s('type.num.num','const.labSem.state_link_reg_1'(s('type.labSem.state'(sK0,sK1),X1))) != s('type.num.num','const.labSem.state_link_reg_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),X0))))) | s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),sK2))) != s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),X0))) | s('type.num.num','const.labSem.state_pc_1'(s('type.labSem.state'(sK0,sK1),sK2))) != s('type.num.num','const.labSem.state_pc_1'(s('type.labSem.state'(sK0,sK1),X1))) | s('type.num.num','const.labSem.state_clock_1'(s('type.labSem.state'(sK0,sK1),X1))) != s('type.num.num','const.labSem.state_clock_1'(s('type.labSem.state'(sK0,sK1),'const.labSem.state_mem_domain_fupd_2'(s(fun(fun('type.fcp.cart'(bool,sK0),bool),fun('type.fcp.cart'(bool,sK0),bool)),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.pred_set.INTER_2'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.labSem.state_mem_domain_1'(s('type.labSem.state'(sK0,sK1),X0))),s(fun('type.fcp.cart'(bool,sK0),bool),'const.alignment.byte_aligned_0'))))),s('type.labSem.state'(sK0,sK1),X0))))) | s('type.list.list'('type.labLang.sec'(sK0)),'const.labSem.state_code_1'(s('type.labSem.state'(sK0,sK1),X1))) != s('type.list.list'('type.labLang.sec'(sK0)),'const.labSem.state_code_1'(s('type.labSem.state'(sK0,sK1),'const.labSem.state_mem_domain_fupd_2'(s(fun(fun('type.fcp.cart'(bool,sK0),bool),fun('type.fcp.cart'(bool,sK0),bool)),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.pred_set.INTER_2'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.labSem.state_mem_domain_1'(s('type.labSem.state'(sK0,sK1),X0))),s(fun('type.fcp.cart'(bool,sK0),bool),'const.alignment.byte_aligned_0'))))),s('type.labSem.state'(sK0,sK1),X0))))) | s(fun('type.num.num',fun('type.num.num','type.option.option'('type.fcp.cart'(bool,sK0)))),'const.labSem.state_io_regs_1'(s('type.labSem.state'(sK0,sK1),X1))) != s(fun('type.num.num',fun('type.num.num','type.option.option'('type.fcp.cart'(bool,sK0)))),'const.labSem.state_io_regs_1'(s('type.labSem.state'(sK0,sK1),'const.labSem.state_mem_domain_fupd_2'(s(fun(fun('type.fcp.cart'(bool,sK0),bool),fun('type.fcp.cart'(bool,sK0),bool)),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.pred_set.INTER_2'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.labSem.state_mem_domain_1'(s('type.labSem.state'(sK0,sK1),X0))),s(fun('type.fcp.cart'(bool,sK0),bool),'const.alignment.byte_aligned_0'))))),s('type.labSem.state'(sK0,sK1),X0))))) | s('type.ffi.ffi_state'(sK1),'const.labSem.state_ffi_1'(s('type.labSem.state'(sK0,sK1),X1))) != s('type.ffi.ffi_state'(sK1),'const.labSem.state_ffi_1'(s('type.labSem.state'(sK0,sK1),'const.labSem.state_mem_domain_fupd_2'(s(fun(fun('type.fcp.cart'(bool,sK0),bool),fun('type.fcp.cart'(bool,sK0),bool)),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.pred_set.INTER_2'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.labSem.state_mem_domain_1'(s('type.labSem.state'(sK0,sK1),X0))),s(fun('type.fcp.cart'(bool,sK0),bool),'const.alignment.byte_aligned_0'))))),s('type.labSem.state'(sK0,sK1),X0))))) | s(bool,'const.labSem.state_be_1'(s('type.labSem.state'(sK0,sK1),X1))) != s(bool,'const.labSem.state_be_1'(s('type.labSem.state'(sK0,sK1),'const.labSem.state_mem_domain_fupd_2'(s(fun(fun('type.fcp.cart'(bool,sK0),bool),fun('type.fcp.cart'(bool,sK0),bool)),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.pred_set.INTER_2'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.labSem.state_mem_domain_1'(s('type.labSem.state'(sK0,sK1),X0))),s(fun('type.fcp.cart'(bool,sK0),bool),'const.alignment.byte_aligned_0'))))),s('type.labSem.state'(sK0,sK1),X0))))) | s('type.num.num','const.labSem.state_pc_1'(s('type.labSem.state'(sK0,sK1),X1))) != s('type.num.num','const.labSem.state_pc_1'(s('type.labSem.state'(sK0,sK1),'const.labSem.state_mem_domain_fupd_2'(s(fun(fun('type.fcp.cart'(bool,sK0),bool),fun('type.fcp.cart'(bool,sK0),bool)),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.pred_set.INTER_2'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.labSem.state_mem_domain_1'(s('type.labSem.state'(sK0,sK1),X0))),s(fun('type.fcp.cart'(bool,sK0),bool),'const.alignment.byte_aligned_0'))))),s('type.labSem.state'(sK0,sK1),X0))))) | s(fun('type.fcp.cart'(bool,sK0),bool),'const.labSem.state_mem_domain_1'(s('type.labSem.state'(sK0,sK1),X1))) != s(fun('type.fcp.cart'(bool,sK0),bool),'const.labSem.state_mem_domain_1'(s('type.labSem.state'(sK0,sK1),'const.labSem.state_mem_domain_fupd_2'(s(fun(fun('type.fcp.cart'(bool,sK0),bool),fun('type.fcp.cart'(bool,sK0),bool)),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.pred_set.INTER_2'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.labSem.state_mem_domain_1'(s('type.labSem.state'(sK0,sK1),X0))),s(fun('type.fcp.cart'(bool,sK0),bool),'const.alignment.byte_aligned_0'))))),s('type.labSem.state'(sK0,sK1),X0))))) | s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'const.labSem.state_mem_1'(s('type.labSem.state'(sK0,sK1),X1))) != s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'const.labSem.state_mem_1'(s('type.labSem.state'(sK0,sK1),'const.labSem.state_mem_domain_fupd_2'(s(fun(fun('type.fcp.cart'(bool,sK0),bool),fun('type.fcp.cart'(bool,sK0),bool)),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.pred_set.INTER_2'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.labSem.state_mem_domain_1'(s('type.labSem.state'(sK0,sK1),X0))),s(fun('type.fcp.cart'(bool,sK0),bool),'const.alignment.byte_aligned_0'))))),s('type.labSem.state'(sK0,sK1),X0))))) | s(fun('type.num.num','type.wordSem.word_loc'(sK0)),'const.labSem.state_regs_1'(s('type.labSem.state'(sK0,sK1),X1))) != s(fun('type.num.num','type.wordSem.word_loc'(sK0)),'const.labSem.state_regs_1'(s('type.labSem.state'(sK0,sK1),'const.labSem.state_mem_domain_fupd_2'(s(fun(fun('type.fcp.cart'(bool,sK0),bool),fun('type.fcp.cart'(bool,sK0),bool)),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.pred_set.INTER_2'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.labSem.state_mem_domain_1'(s('type.labSem.state'(sK0,sK1),X0))),s(fun('type.fcp.cart'(bool,sK0),bool),'const.alignment.byte_aligned_0'))))),s('type.labSem.state'(sK0,sK1),X0)))))) )),
  inference(forward_demodulation,[],[f391,f307])).
fof(f391,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.labSem.state_ptr_reg_1'(s('type.labSem.state'(sK0,sK1),X1))) != s('type.num.num','const.labSem.state_ptr_reg_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),X0))))) | s('type.num.num','const.labSem.state_len_reg_1'(s('type.labSem.state'(sK0,sK1),X1))) != s('type.num.num','const.labSem.state_len_reg_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),X0))))) | s('type.num.num','const.labSem.state_link_reg_1'(s('type.labSem.state'(sK0,sK1),X1))) != s('type.num.num','const.labSem.state_link_reg_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),X0))))) | s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),sK2))) != s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),X0))) | s('type.num.num','const.labSem.state_pc_1'(s('type.labSem.state'(sK0,sK1),sK2))) != s('type.num.num','const.labSem.state_pc_1'(s('type.labSem.state'(sK0,sK1),X1))) | s(bool,'const.labSem.state_failed_1'(s('type.labSem.state'(sK0,sK1),X1))) != s(bool,'const.labSem.state_failed_1'(s('type.labSem.state'(sK0,sK1),'const.labSem.state_mem_domain_fupd_2'(s(fun(fun('type.fcp.cart'(bool,sK0),bool),fun('type.fcp.cart'(bool,sK0),bool)),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.pred_set.INTER_2'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.labSem.state_mem_domain_1'(s('type.labSem.state'(sK0,sK1),X0))),s(fun('type.fcp.cart'(bool,sK0),bool),'const.alignment.byte_aligned_0'))))),s('type.labSem.state'(sK0,sK1),X0))))) | s('type.num.num','const.labSem.state_clock_1'(s('type.labSem.state'(sK0,sK1),X1))) != s('type.num.num','const.labSem.state_clock_1'(s('type.labSem.state'(sK0,sK1),'const.labSem.state_mem_domain_fupd_2'(s(fun(fun('type.fcp.cart'(bool,sK0),bool),fun('type.fcp.cart'(bool,sK0),bool)),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.pred_set.INTER_2'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.labSem.state_mem_domain_1'(s('type.labSem.state'(sK0,sK1),X0))),s(fun('type.fcp.cart'(bool,sK0),bool),'const.alignment.byte_aligned_0'))))),s('type.labSem.state'(sK0,sK1),X0))))) | s('type.list.list'('type.labLang.sec'(sK0)),'const.labSem.state_code_1'(s('type.labSem.state'(sK0,sK1),X1))) != s('type.list.list'('type.labLang.sec'(sK0)),'const.labSem.state_code_1'(s('type.labSem.state'(sK0,sK1),'const.labSem.state_mem_domain_fupd_2'(s(fun(fun('type.fcp.cart'(bool,sK0),bool),fun('type.fcp.cart'(bool,sK0),bool)),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.pred_set.INTER_2'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.labSem.state_mem_domain_1'(s('type.labSem.state'(sK0,sK1),X0))),s(fun('type.fcp.cart'(bool,sK0),bool),'const.alignment.byte_aligned_0'))))),s('type.labSem.state'(sK0,sK1),X0))))) | s(fun('type.num.num',fun('type.num.num','type.option.option'('type.fcp.cart'(bool,sK0)))),'const.labSem.state_io_regs_1'(s('type.labSem.state'(sK0,sK1),X1))) != s(fun('type.num.num',fun('type.num.num','type.option.option'('type.fcp.cart'(bool,sK0)))),'const.labSem.state_io_regs_1'(s('type.labSem.state'(sK0,sK1),'const.labSem.state_mem_domain_fupd_2'(s(fun(fun('type.fcp.cart'(bool,sK0),bool),fun('type.fcp.cart'(bool,sK0),bool)),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.pred_set.INTER_2'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.labSem.state_mem_domain_1'(s('type.labSem.state'(sK0,sK1),X0))),s(fun('type.fcp.cart'(bool,sK0),bool),'const.alignment.byte_aligned_0'))))),s('type.labSem.state'(sK0,sK1),X0))))) | s('type.ffi.ffi_state'(sK1),'const.labSem.state_ffi_1'(s('type.labSem.state'(sK0,sK1),X1))) != s('type.ffi.ffi_state'(sK1),'const.labSem.state_ffi_1'(s('type.labSem.state'(sK0,sK1),'const.labSem.state_mem_domain_fupd_2'(s(fun(fun('type.fcp.cart'(bool,sK0),bool),fun('type.fcp.cart'(bool,sK0),bool)),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.pred_set.INTER_2'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.labSem.state_mem_domain_1'(s('type.labSem.state'(sK0,sK1),X0))),s(fun('type.fcp.cart'(bool,sK0),bool),'const.alignment.byte_aligned_0'))))),s('type.labSem.state'(sK0,sK1),X0))))) | s(bool,'const.labSem.state_be_1'(s('type.labSem.state'(sK0,sK1),X1))) != s(bool,'const.labSem.state_be_1'(s('type.labSem.state'(sK0,sK1),'const.labSem.state_mem_domain_fupd_2'(s(fun(fun('type.fcp.cart'(bool,sK0),bool),fun('type.fcp.cart'(bool,sK0),bool)),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.pred_set.INTER_2'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.labSem.state_mem_domain_1'(s('type.labSem.state'(sK0,sK1),X0))),s(fun('type.fcp.cart'(bool,sK0),bool),'const.alignment.byte_aligned_0'))))),s('type.labSem.state'(sK0,sK1),X0))))) | s('type.num.num','const.labSem.state_pc_1'(s('type.labSem.state'(sK0,sK1),X1))) != s('type.num.num','const.labSem.state_pc_1'(s('type.labSem.state'(sK0,sK1),'const.labSem.state_mem_domain_fupd_2'(s(fun(fun('type.fcp.cart'(bool,sK0),bool),fun('type.fcp.cart'(bool,sK0),bool)),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.pred_set.INTER_2'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.labSem.state_mem_domain_1'(s('type.labSem.state'(sK0,sK1),X0))),s(fun('type.fcp.cart'(bool,sK0),bool),'const.alignment.byte_aligned_0'))))),s('type.labSem.state'(sK0,sK1),X0))))) | s(fun('type.fcp.cart'(bool,sK0),bool),'const.labSem.state_mem_domain_1'(s('type.labSem.state'(sK0,sK1),X1))) != s(fun('type.fcp.cart'(bool,sK0),bool),'const.labSem.state_mem_domain_1'(s('type.labSem.state'(sK0,sK1),'const.labSem.state_mem_domain_fupd_2'(s(fun(fun('type.fcp.cart'(bool,sK0),bool),fun('type.fcp.cart'(bool,sK0),bool)),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.pred_set.INTER_2'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.labSem.state_mem_domain_1'(s('type.labSem.state'(sK0,sK1),X0))),s(fun('type.fcp.cart'(bool,sK0),bool),'const.alignment.byte_aligned_0'))))),s('type.labSem.state'(sK0,sK1),X0))))) | s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'const.labSem.state_mem_1'(s('type.labSem.state'(sK0,sK1),X1))) != s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'const.labSem.state_mem_1'(s('type.labSem.state'(sK0,sK1),'const.labSem.state_mem_domain_fupd_2'(s(fun(fun('type.fcp.cart'(bool,sK0),bool),fun('type.fcp.cart'(bool,sK0),bool)),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.pred_set.INTER_2'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.labSem.state_mem_domain_1'(s('type.labSem.state'(sK0,sK1),X0))),s(fun('type.fcp.cart'(bool,sK0),bool),'const.alignment.byte_aligned_0'))))),s('type.labSem.state'(sK0,sK1),X0))))) | s(fun('type.num.num','type.wordSem.word_loc'(sK0)),'const.labSem.state_regs_1'(s('type.labSem.state'(sK0,sK1),X1))) != s(fun('type.num.num','type.wordSem.word_loc'(sK0)),'const.labSem.state_regs_1'(s('type.labSem.state'(sK0,sK1),'const.labSem.state_mem_domain_fupd_2'(s(fun(fun('type.fcp.cart'(bool,sK0),bool),fun('type.fcp.cart'(bool,sK0),bool)),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.pred_set.INTER_2'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.labSem.state_mem_domain_1'(s('type.labSem.state'(sK0,sK1),X0))),s(fun('type.fcp.cart'(bool,sK0),bool),'const.alignment.byte_aligned_0'))))),s('type.labSem.state'(sK0,sK1),X0)))))) )),
  inference(forward_demodulation,[],[f390,f307])).
fof(f390,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.labSem.state_len_reg_1'(s('type.labSem.state'(sK0,sK1),X1))) != s('type.num.num','const.labSem.state_len_reg_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),X0))))) | s('type.num.num','const.labSem.state_link_reg_1'(s('type.labSem.state'(sK0,sK1),X1))) != s('type.num.num','const.labSem.state_link_reg_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),X0))))) | s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),sK2))) != s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),X0))) | s('type.num.num','const.labSem.state_pc_1'(s('type.labSem.state'(sK0,sK1),sK2))) != s('type.num.num','const.labSem.state_pc_1'(s('type.labSem.state'(sK0,sK1),X1))) | s('type.num.num','const.labSem.state_ptr_reg_1'(s('type.labSem.state'(sK0,sK1),X1))) != s('type.num.num','const.labSem.state_ptr_reg_1'(s('type.labSem.state'(sK0,sK1),'const.labSem.state_mem_domain_fupd_2'(s(fun(fun('type.fcp.cart'(bool,sK0),bool),fun('type.fcp.cart'(bool,sK0),bool)),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.pred_set.INTER_2'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.labSem.state_mem_domain_1'(s('type.labSem.state'(sK0,sK1),X0))),s(fun('type.fcp.cart'(bool,sK0),bool),'const.alignment.byte_aligned_0'))))),s('type.labSem.state'(sK0,sK1),X0))))) | s(bool,'const.labSem.state_failed_1'(s('type.labSem.state'(sK0,sK1),X1))) != s(bool,'const.labSem.state_failed_1'(s('type.labSem.state'(sK0,sK1),'const.labSem.state_mem_domain_fupd_2'(s(fun(fun('type.fcp.cart'(bool,sK0),bool),fun('type.fcp.cart'(bool,sK0),bool)),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.pred_set.INTER_2'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.labSem.state_mem_domain_1'(s('type.labSem.state'(sK0,sK1),X0))),s(fun('type.fcp.cart'(bool,sK0),bool),'const.alignment.byte_aligned_0'))))),s('type.labSem.state'(sK0,sK1),X0))))) | s('type.num.num','const.labSem.state_clock_1'(s('type.labSem.state'(sK0,sK1),X1))) != s('type.num.num','const.labSem.state_clock_1'(s('type.labSem.state'(sK0,sK1),'const.labSem.state_mem_domain_fupd_2'(s(fun(fun('type.fcp.cart'(bool,sK0),bool),fun('type.fcp.cart'(bool,sK0),bool)),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.pred_set.INTER_2'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.labSem.state_mem_domain_1'(s('type.labSem.state'(sK0,sK1),X0))),s(fun('type.fcp.cart'(bool,sK0),bool),'const.alignment.byte_aligned_0'))))),s('type.labSem.state'(sK0,sK1),X0))))) | s('type.list.list'('type.labLang.sec'(sK0)),'const.labSem.state_code_1'(s('type.labSem.state'(sK0,sK1),X1))) != s('type.list.list'('type.labLang.sec'(sK0)),'const.labSem.state_code_1'(s('type.labSem.state'(sK0,sK1),'const.labSem.state_mem_domain_fupd_2'(s(fun(fun('type.fcp.cart'(bool,sK0),bool),fun('type.fcp.cart'(bool,sK0),bool)),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.pred_set.INTER_2'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.labSem.state_mem_domain_1'(s('type.labSem.state'(sK0,sK1),X0))),s(fun('type.fcp.cart'(bool,sK0),bool),'const.alignment.byte_aligned_0'))))),s('type.labSem.state'(sK0,sK1),X0))))) | s(fun('type.num.num',fun('type.num.num','type.option.option'('type.fcp.cart'(bool,sK0)))),'const.labSem.state_io_regs_1'(s('type.labSem.state'(sK0,sK1),X1))) != s(fun('type.num.num',fun('type.num.num','type.option.option'('type.fcp.cart'(bool,sK0)))),'const.labSem.state_io_regs_1'(s('type.labSem.state'(sK0,sK1),'const.labSem.state_mem_domain_fupd_2'(s(fun(fun('type.fcp.cart'(bool,sK0),bool),fun('type.fcp.cart'(bool,sK0),bool)),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.pred_set.INTER_2'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.labSem.state_mem_domain_1'(s('type.labSem.state'(sK0,sK1),X0))),s(fun('type.fcp.cart'(bool,sK0),bool),'const.alignment.byte_aligned_0'))))),s('type.labSem.state'(sK0,sK1),X0))))) | s('type.ffi.ffi_state'(sK1),'const.labSem.state_ffi_1'(s('type.labSem.state'(sK0,sK1),X1))) != s('type.ffi.ffi_state'(sK1),'const.labSem.state_ffi_1'(s('type.labSem.state'(sK0,sK1),'const.labSem.state_mem_domain_fupd_2'(s(fun(fun('type.fcp.cart'(bool,sK0),bool),fun('type.fcp.cart'(bool,sK0),bool)),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.pred_set.INTER_2'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.labSem.state_mem_domain_1'(s('type.labSem.state'(sK0,sK1),X0))),s(fun('type.fcp.cart'(bool,sK0),bool),'const.alignment.byte_aligned_0'))))),s('type.labSem.state'(sK0,sK1),X0))))) | s(bool,'const.labSem.state_be_1'(s('type.labSem.state'(sK0,sK1),X1))) != s(bool,'const.labSem.state_be_1'(s('type.labSem.state'(sK0,sK1),'const.labSem.state_mem_domain_fupd_2'(s(fun(fun('type.fcp.cart'(bool,sK0),bool),fun('type.fcp.cart'(bool,sK0),bool)),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.pred_set.INTER_2'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.labSem.state_mem_domain_1'(s('type.labSem.state'(sK0,sK1),X0))),s(fun('type.fcp.cart'(bool,sK0),bool),'const.alignment.byte_aligned_0'))))),s('type.labSem.state'(sK0,sK1),X0))))) | s('type.num.num','const.labSem.state_pc_1'(s('type.labSem.state'(sK0,sK1),X1))) != s('type.num.num','const.labSem.state_pc_1'(s('type.labSem.state'(sK0,sK1),'const.labSem.state_mem_domain_fupd_2'(s(fun(fun('type.fcp.cart'(bool,sK0),bool),fun('type.fcp.cart'(bool,sK0),bool)),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.pred_set.INTER_2'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.labSem.state_mem_domain_1'(s('type.labSem.state'(sK0,sK1),X0))),s(fun('type.fcp.cart'(bool,sK0),bool),'const.alignment.byte_aligned_0'))))),s('type.labSem.state'(sK0,sK1),X0))))) | s(fun('type.fcp.cart'(bool,sK0),bool),'const.labSem.state_mem_domain_1'(s('type.labSem.state'(sK0,sK1),X1))) != s(fun('type.fcp.cart'(bool,sK0),bool),'const.labSem.state_mem_domain_1'(s('type.labSem.state'(sK0,sK1),'const.labSem.state_mem_domain_fupd_2'(s(fun(fun('type.fcp.cart'(bool,sK0),bool),fun('type.fcp.cart'(bool,sK0),bool)),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.pred_set.INTER_2'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.labSem.state_mem_domain_1'(s('type.labSem.state'(sK0,sK1),X0))),s(fun('type.fcp.cart'(bool,sK0),bool),'const.alignment.byte_aligned_0'))))),s('type.labSem.state'(sK0,sK1),X0))))) | s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'const.labSem.state_mem_1'(s('type.labSem.state'(sK0,sK1),X1))) != s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'const.labSem.state_mem_1'(s('type.labSem.state'(sK0,sK1),'const.labSem.state_mem_domain_fupd_2'(s(fun(fun('type.fcp.cart'(bool,sK0),bool),fun('type.fcp.cart'(bool,sK0),bool)),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.pred_set.INTER_2'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.labSem.state_mem_domain_1'(s('type.labSem.state'(sK0,sK1),X0))),s(fun('type.fcp.cart'(bool,sK0),bool),'const.alignment.byte_aligned_0'))))),s('type.labSem.state'(sK0,sK1),X0))))) | s(fun('type.num.num','type.wordSem.word_loc'(sK0)),'const.labSem.state_regs_1'(s('type.labSem.state'(sK0,sK1),X1))) != s(fun('type.num.num','type.wordSem.word_loc'(sK0)),'const.labSem.state_regs_1'(s('type.labSem.state'(sK0,sK1),'const.labSem.state_mem_domain_fupd_2'(s(fun(fun('type.fcp.cart'(bool,sK0),bool),fun('type.fcp.cart'(bool,sK0),bool)),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.pred_set.INTER_2'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.labSem.state_mem_domain_1'(s('type.labSem.state'(sK0,sK1),X0))),s(fun('type.fcp.cart'(bool,sK0),bool),'const.alignment.byte_aligned_0'))))),s('type.labSem.state'(sK0,sK1),X0)))))) )),
  inference(forward_demodulation,[],[f389,f307])).
fof(f389,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.labSem.state_link_reg_1'(s('type.labSem.state'(sK0,sK1),X1))) != s('type.num.num','const.labSem.state_link_reg_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),X0))))) | s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),sK2))) != s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),X0))) | s('type.num.num','const.labSem.state_pc_1'(s('type.labSem.state'(sK0,sK1),sK2))) != s('type.num.num','const.labSem.state_pc_1'(s('type.labSem.state'(sK0,sK1),X1))) | s('type.num.num','const.labSem.state_len_reg_1'(s('type.labSem.state'(sK0,sK1),X1))) != s('type.num.num','const.labSem.state_len_reg_1'(s('type.labSem.state'(sK0,sK1),'const.labSem.state_mem_domain_fupd_2'(s(fun(fun('type.fcp.cart'(bool,sK0),bool),fun('type.fcp.cart'(bool,sK0),bool)),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.pred_set.INTER_2'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.labSem.state_mem_domain_1'(s('type.labSem.state'(sK0,sK1),X0))),s(fun('type.fcp.cart'(bool,sK0),bool),'const.alignment.byte_aligned_0'))))),s('type.labSem.state'(sK0,sK1),X0))))) | s('type.num.num','const.labSem.state_ptr_reg_1'(s('type.labSem.state'(sK0,sK1),X1))) != s('type.num.num','const.labSem.state_ptr_reg_1'(s('type.labSem.state'(sK0,sK1),'const.labSem.state_mem_domain_fupd_2'(s(fun(fun('type.fcp.cart'(bool,sK0),bool),fun('type.fcp.cart'(bool,sK0),bool)),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.pred_set.INTER_2'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.labSem.state_mem_domain_1'(s('type.labSem.state'(sK0,sK1),X0))),s(fun('type.fcp.cart'(bool,sK0),bool),'const.alignment.byte_aligned_0'))))),s('type.labSem.state'(sK0,sK1),X0))))) | s(bool,'const.labSem.state_failed_1'(s('type.labSem.state'(sK0,sK1),X1))) != s(bool,'const.labSem.state_failed_1'(s('type.labSem.state'(sK0,sK1),'const.labSem.state_mem_domain_fupd_2'(s(fun(fun('type.fcp.cart'(bool,sK0),bool),fun('type.fcp.cart'(bool,sK0),bool)),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.pred_set.INTER_2'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.labSem.state_mem_domain_1'(s('type.labSem.state'(sK0,sK1),X0))),s(fun('type.fcp.cart'(bool,sK0),bool),'const.alignment.byte_aligned_0'))))),s('type.labSem.state'(sK0,sK1),X0))))) | s('type.num.num','const.labSem.state_clock_1'(s('type.labSem.state'(sK0,sK1),X1))) != s('type.num.num','const.labSem.state_clock_1'(s('type.labSem.state'(sK0,sK1),'const.labSem.state_mem_domain_fupd_2'(s(fun(fun('type.fcp.cart'(bool,sK0),bool),fun('type.fcp.cart'(bool,sK0),bool)),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.pred_set.INTER_2'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.labSem.state_mem_domain_1'(s('type.labSem.state'(sK0,sK1),X0))),s(fun('type.fcp.cart'(bool,sK0),bool),'const.alignment.byte_aligned_0'))))),s('type.labSem.state'(sK0,sK1),X0))))) | s('type.list.list'('type.labLang.sec'(sK0)),'const.labSem.state_code_1'(s('type.labSem.state'(sK0,sK1),X1))) != s('type.list.list'('type.labLang.sec'(sK0)),'const.labSem.state_code_1'(s('type.labSem.state'(sK0,sK1),'const.labSem.state_mem_domain_fupd_2'(s(fun(fun('type.fcp.cart'(bool,sK0),bool),fun('type.fcp.cart'(bool,sK0),bool)),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.pred_set.INTER_2'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.labSem.state_mem_domain_1'(s('type.labSem.state'(sK0,sK1),X0))),s(fun('type.fcp.cart'(bool,sK0),bool),'const.alignment.byte_aligned_0'))))),s('type.labSem.state'(sK0,sK1),X0))))) | s(fun('type.num.num',fun('type.num.num','type.option.option'('type.fcp.cart'(bool,sK0)))),'const.labSem.state_io_regs_1'(s('type.labSem.state'(sK0,sK1),X1))) != s(fun('type.num.num',fun('type.num.num','type.option.option'('type.fcp.cart'(bool,sK0)))),'const.labSem.state_io_regs_1'(s('type.labSem.state'(sK0,sK1),'const.labSem.state_mem_domain_fupd_2'(s(fun(fun('type.fcp.cart'(bool,sK0),bool),fun('type.fcp.cart'(bool,sK0),bool)),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.pred_set.INTER_2'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.labSem.state_mem_domain_1'(s('type.labSem.state'(sK0,sK1),X0))),s(fun('type.fcp.cart'(bool,sK0),bool),'const.alignment.byte_aligned_0'))))),s('type.labSem.state'(sK0,sK1),X0))))) | s('type.ffi.ffi_state'(sK1),'const.labSem.state_ffi_1'(s('type.labSem.state'(sK0,sK1),X1))) != s('type.ffi.ffi_state'(sK1),'const.labSem.state_ffi_1'(s('type.labSem.state'(sK0,sK1),'const.labSem.state_mem_domain_fupd_2'(s(fun(fun('type.fcp.cart'(bool,sK0),bool),fun('type.fcp.cart'(bool,sK0),bool)),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.pred_set.INTER_2'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.labSem.state_mem_domain_1'(s('type.labSem.state'(sK0,sK1),X0))),s(fun('type.fcp.cart'(bool,sK0),bool),'const.alignment.byte_aligned_0'))))),s('type.labSem.state'(sK0,sK1),X0))))) | s(bool,'const.labSem.state_be_1'(s('type.labSem.state'(sK0,sK1),X1))) != s(bool,'const.labSem.state_be_1'(s('type.labSem.state'(sK0,sK1),'const.labSem.state_mem_domain_fupd_2'(s(fun(fun('type.fcp.cart'(bool,sK0),bool),fun('type.fcp.cart'(bool,sK0),bool)),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.pred_set.INTER_2'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.labSem.state_mem_domain_1'(s('type.labSem.state'(sK0,sK1),X0))),s(fun('type.fcp.cart'(bool,sK0),bool),'const.alignment.byte_aligned_0'))))),s('type.labSem.state'(sK0,sK1),X0))))) | s('type.num.num','const.labSem.state_pc_1'(s('type.labSem.state'(sK0,sK1),X1))) != s('type.num.num','const.labSem.state_pc_1'(s('type.labSem.state'(sK0,sK1),'const.labSem.state_mem_domain_fupd_2'(s(fun(fun('type.fcp.cart'(bool,sK0),bool),fun('type.fcp.cart'(bool,sK0),bool)),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.pred_set.INTER_2'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.labSem.state_mem_domain_1'(s('type.labSem.state'(sK0,sK1),X0))),s(fun('type.fcp.cart'(bool,sK0),bool),'const.alignment.byte_aligned_0'))))),s('type.labSem.state'(sK0,sK1),X0))))) | s(fun('type.fcp.cart'(bool,sK0),bool),'const.labSem.state_mem_domain_1'(s('type.labSem.state'(sK0,sK1),X1))) != s(fun('type.fcp.cart'(bool,sK0),bool),'const.labSem.state_mem_domain_1'(s('type.labSem.state'(sK0,sK1),'const.labSem.state_mem_domain_fupd_2'(s(fun(fun('type.fcp.cart'(bool,sK0),bool),fun('type.fcp.cart'(bool,sK0),bool)),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.pred_set.INTER_2'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.labSem.state_mem_domain_1'(s('type.labSem.state'(sK0,sK1),X0))),s(fun('type.fcp.cart'(bool,sK0),bool),'const.alignment.byte_aligned_0'))))),s('type.labSem.state'(sK0,sK1),X0))))) | s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'const.labSem.state_mem_1'(s('type.labSem.state'(sK0,sK1),X1))) != s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'const.labSem.state_mem_1'(s('type.labSem.state'(sK0,sK1),'const.labSem.state_mem_domain_fupd_2'(s(fun(fun('type.fcp.cart'(bool,sK0),bool),fun('type.fcp.cart'(bool,sK0),bool)),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.pred_set.INTER_2'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.labSem.state_mem_domain_1'(s('type.labSem.state'(sK0,sK1),X0))),s(fun('type.fcp.cart'(bool,sK0),bool),'const.alignment.byte_aligned_0'))))),s('type.labSem.state'(sK0,sK1),X0))))) | s(fun('type.num.num','type.wordSem.word_loc'(sK0)),'const.labSem.state_regs_1'(s('type.labSem.state'(sK0,sK1),X1))) != s(fun('type.num.num','type.wordSem.word_loc'(sK0)),'const.labSem.state_regs_1'(s('type.labSem.state'(sK0,sK1),'const.labSem.state_mem_domain_fupd_2'(s(fun(fun('type.fcp.cart'(bool,sK0),bool),fun('type.fcp.cart'(bool,sK0),bool)),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.pred_set.INTER_2'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.labSem.state_mem_domain_1'(s('type.labSem.state'(sK0,sK1),X0))),s(fun('type.fcp.cart'(bool,sK0),bool),'const.alignment.byte_aligned_0'))))),s('type.labSem.state'(sK0,sK1),X0)))))) )),
  inference(forward_demodulation,[],[f381,f307])).
fof(f381,plain,(
  ( ! [X0,X1] : (s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),sK2))) != s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),X0))) | s('type.num.num','const.labSem.state_pc_1'(s('type.labSem.state'(sK0,sK1),sK2))) != s('type.num.num','const.labSem.state_pc_1'(s('type.labSem.state'(sK0,sK1),X1))) | s('type.num.num','const.labSem.state_link_reg_1'(s('type.labSem.state'(sK0,sK1),X1))) != s('type.num.num','const.labSem.state_link_reg_1'(s('type.labSem.state'(sK0,sK1),'const.labSem.state_mem_domain_fupd_2'(s(fun(fun('type.fcp.cart'(bool,sK0),bool),fun('type.fcp.cart'(bool,sK0),bool)),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.pred_set.INTER_2'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.labSem.state_mem_domain_1'(s('type.labSem.state'(sK0,sK1),X0))),s(fun('type.fcp.cart'(bool,sK0),bool),'const.alignment.byte_aligned_0'))))),s('type.labSem.state'(sK0,sK1),X0))))) | s('type.num.num','const.labSem.state_len_reg_1'(s('type.labSem.state'(sK0,sK1),X1))) != s('type.num.num','const.labSem.state_len_reg_1'(s('type.labSem.state'(sK0,sK1),'const.labSem.state_mem_domain_fupd_2'(s(fun(fun('type.fcp.cart'(bool,sK0),bool),fun('type.fcp.cart'(bool,sK0),bool)),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.pred_set.INTER_2'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.labSem.state_mem_domain_1'(s('type.labSem.state'(sK0,sK1),X0))),s(fun('type.fcp.cart'(bool,sK0),bool),'const.alignment.byte_aligned_0'))))),s('type.labSem.state'(sK0,sK1),X0))))) | s('type.num.num','const.labSem.state_ptr_reg_1'(s('type.labSem.state'(sK0,sK1),X1))) != s('type.num.num','const.labSem.state_ptr_reg_1'(s('type.labSem.state'(sK0,sK1),'const.labSem.state_mem_domain_fupd_2'(s(fun(fun('type.fcp.cart'(bool,sK0),bool),fun('type.fcp.cart'(bool,sK0),bool)),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.pred_set.INTER_2'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.labSem.state_mem_domain_1'(s('type.labSem.state'(sK0,sK1),X0))),s(fun('type.fcp.cart'(bool,sK0),bool),'const.alignment.byte_aligned_0'))))),s('type.labSem.state'(sK0,sK1),X0))))) | s(bool,'const.labSem.state_failed_1'(s('type.labSem.state'(sK0,sK1),X1))) != s(bool,'const.labSem.state_failed_1'(s('type.labSem.state'(sK0,sK1),'const.labSem.state_mem_domain_fupd_2'(s(fun(fun('type.fcp.cart'(bool,sK0),bool),fun('type.fcp.cart'(bool,sK0),bool)),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.pred_set.INTER_2'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.labSem.state_mem_domain_1'(s('type.labSem.state'(sK0,sK1),X0))),s(fun('type.fcp.cart'(bool,sK0),bool),'const.alignment.byte_aligned_0'))))),s('type.labSem.state'(sK0,sK1),X0))))) | s('type.num.num','const.labSem.state_clock_1'(s('type.labSem.state'(sK0,sK1),X1))) != s('type.num.num','const.labSem.state_clock_1'(s('type.labSem.state'(sK0,sK1),'const.labSem.state_mem_domain_fupd_2'(s(fun(fun('type.fcp.cart'(bool,sK0),bool),fun('type.fcp.cart'(bool,sK0),bool)),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.pred_set.INTER_2'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.labSem.state_mem_domain_1'(s('type.labSem.state'(sK0,sK1),X0))),s(fun('type.fcp.cart'(bool,sK0),bool),'const.alignment.byte_aligned_0'))))),s('type.labSem.state'(sK0,sK1),X0))))) | s('type.list.list'('type.labLang.sec'(sK0)),'const.labSem.state_code_1'(s('type.labSem.state'(sK0,sK1),X1))) != s('type.list.list'('type.labLang.sec'(sK0)),'const.labSem.state_code_1'(s('type.labSem.state'(sK0,sK1),'const.labSem.state_mem_domain_fupd_2'(s(fun(fun('type.fcp.cart'(bool,sK0),bool),fun('type.fcp.cart'(bool,sK0),bool)),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.pred_set.INTER_2'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.labSem.state_mem_domain_1'(s('type.labSem.state'(sK0,sK1),X0))),s(fun('type.fcp.cart'(bool,sK0),bool),'const.alignment.byte_aligned_0'))))),s('type.labSem.state'(sK0,sK1),X0))))) | s(fun('type.num.num',fun('type.num.num','type.option.option'('type.fcp.cart'(bool,sK0)))),'const.labSem.state_io_regs_1'(s('type.labSem.state'(sK0,sK1),X1))) != s(fun('type.num.num',fun('type.num.num','type.option.option'('type.fcp.cart'(bool,sK0)))),'const.labSem.state_io_regs_1'(s('type.labSem.state'(sK0,sK1),'const.labSem.state_mem_domain_fupd_2'(s(fun(fun('type.fcp.cart'(bool,sK0),bool),fun('type.fcp.cart'(bool,sK0),bool)),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.pred_set.INTER_2'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.labSem.state_mem_domain_1'(s('type.labSem.state'(sK0,sK1),X0))),s(fun('type.fcp.cart'(bool,sK0),bool),'const.alignment.byte_aligned_0'))))),s('type.labSem.state'(sK0,sK1),X0))))) | s('type.ffi.ffi_state'(sK1),'const.labSem.state_ffi_1'(s('type.labSem.state'(sK0,sK1),X1))) != s('type.ffi.ffi_state'(sK1),'const.labSem.state_ffi_1'(s('type.labSem.state'(sK0,sK1),'const.labSem.state_mem_domain_fupd_2'(s(fun(fun('type.fcp.cart'(bool,sK0),bool),fun('type.fcp.cart'(bool,sK0),bool)),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.pred_set.INTER_2'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.labSem.state_mem_domain_1'(s('type.labSem.state'(sK0,sK1),X0))),s(fun('type.fcp.cart'(bool,sK0),bool),'const.alignment.byte_aligned_0'))))),s('type.labSem.state'(sK0,sK1),X0))))) | s(bool,'const.labSem.state_be_1'(s('type.labSem.state'(sK0,sK1),X1))) != s(bool,'const.labSem.state_be_1'(s('type.labSem.state'(sK0,sK1),'const.labSem.state_mem_domain_fupd_2'(s(fun(fun('type.fcp.cart'(bool,sK0),bool),fun('type.fcp.cart'(bool,sK0),bool)),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.pred_set.INTER_2'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.labSem.state_mem_domain_1'(s('type.labSem.state'(sK0,sK1),X0))),s(fun('type.fcp.cart'(bool,sK0),bool),'const.alignment.byte_aligned_0'))))),s('type.labSem.state'(sK0,sK1),X0))))) | s('type.num.num','const.labSem.state_pc_1'(s('type.labSem.state'(sK0,sK1),X1))) != s('type.num.num','const.labSem.state_pc_1'(s('type.labSem.state'(sK0,sK1),'const.labSem.state_mem_domain_fupd_2'(s(fun(fun('type.fcp.cart'(bool,sK0),bool),fun('type.fcp.cart'(bool,sK0),bool)),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.pred_set.INTER_2'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.labSem.state_mem_domain_1'(s('type.labSem.state'(sK0,sK1),X0))),s(fun('type.fcp.cart'(bool,sK0),bool),'const.alignment.byte_aligned_0'))))),s('type.labSem.state'(sK0,sK1),X0))))) | s(fun('type.fcp.cart'(bool,sK0),bool),'const.labSem.state_mem_domain_1'(s('type.labSem.state'(sK0,sK1),X1))) != s(fun('type.fcp.cart'(bool,sK0),bool),'const.labSem.state_mem_domain_1'(s('type.labSem.state'(sK0,sK1),'const.labSem.state_mem_domain_fupd_2'(s(fun(fun('type.fcp.cart'(bool,sK0),bool),fun('type.fcp.cart'(bool,sK0),bool)),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.pred_set.INTER_2'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.labSem.state_mem_domain_1'(s('type.labSem.state'(sK0,sK1),X0))),s(fun('type.fcp.cart'(bool,sK0),bool),'const.alignment.byte_aligned_0'))))),s('type.labSem.state'(sK0,sK1),X0))))) | s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'const.labSem.state_mem_1'(s('type.labSem.state'(sK0,sK1),X1))) != s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'const.labSem.state_mem_1'(s('type.labSem.state'(sK0,sK1),'const.labSem.state_mem_domain_fupd_2'(s(fun(fun('type.fcp.cart'(bool,sK0),bool),fun('type.fcp.cart'(bool,sK0),bool)),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.pred_set.INTER_2'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.labSem.state_mem_domain_1'(s('type.labSem.state'(sK0,sK1),X0))),s(fun('type.fcp.cart'(bool,sK0),bool),'const.alignment.byte_aligned_0'))))),s('type.labSem.state'(sK0,sK1),X0))))) | s(fun('type.num.num','type.wordSem.word_loc'(sK0)),'const.labSem.state_regs_1'(s('type.labSem.state'(sK0,sK1),X1))) != s(fun('type.num.num','type.wordSem.word_loc'(sK0)),'const.labSem.state_regs_1'(s('type.labSem.state'(sK0,sK1),'const.labSem.state_mem_domain_fupd_2'(s(fun(fun('type.fcp.cart'(bool,sK0),bool),fun('type.fcp.cart'(bool,sK0),bool)),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.pred_set.INTER_2'(s(fun('type.fcp.cart'(bool,sK0),bool),'const.labSem.state_mem_domain_1'(s('type.labSem.state'(sK0,sK1),X0))),s(fun('type.fcp.cart'(bool,sK0),bool),'const.alignment.byte_aligned_0'))))),s('type.labSem.state'(sK0,sK1),X0)))))) )),
  inference(superposition,[],[f346,f307])).
fof(f346,plain,(
  ( ! [X2,X1] : (s('type.labSem.state'(sK0,sK1),X2) != s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),sK2))) | s('type.num.num','const.labSem.state_pc_1'(s('type.labSem.state'(sK0,sK1),sK2))) != s('type.num.num','const.labSem.state_pc_1'(s('type.labSem.state'(sK0,sK1),X1))) | s('type.num.num','const.labSem.state_link_reg_1'(s('type.labSem.state'(sK0,sK1),X1))) != s('type.num.num','const.labSem.state_link_reg_1'(s('type.labSem.state'(sK0,sK1),X2))) | s('type.num.num','const.labSem.state_len_reg_1'(s('type.labSem.state'(sK0,sK1),X1))) != s('type.num.num','const.labSem.state_len_reg_1'(s('type.labSem.state'(sK0,sK1),X2))) | s('type.num.num','const.labSem.state_ptr_reg_1'(s('type.labSem.state'(sK0,sK1),X1))) != s('type.num.num','const.labSem.state_ptr_reg_1'(s('type.labSem.state'(sK0,sK1),X2))) | s(bool,'const.labSem.state_failed_1'(s('type.labSem.state'(sK0,sK1),X1))) != s(bool,'const.labSem.state_failed_1'(s('type.labSem.state'(sK0,sK1),X2))) | s('type.num.num','const.labSem.state_clock_1'(s('type.labSem.state'(sK0,sK1),X1))) != s('type.num.num','const.labSem.state_clock_1'(s('type.labSem.state'(sK0,sK1),X2))) | s('type.list.list'('type.labLang.sec'(sK0)),'const.labSem.state_code_1'(s('type.labSem.state'(sK0,sK1),X1))) != s('type.list.list'('type.labLang.sec'(sK0)),'const.labSem.state_code_1'(s('type.labSem.state'(sK0,sK1),X2))) | s(fun('type.num.num',fun('type.num.num','type.option.option'('type.fcp.cart'(bool,sK0)))),'const.labSem.state_io_regs_1'(s('type.labSem.state'(sK0,sK1),X1))) != s(fun('type.num.num',fun('type.num.num','type.option.option'('type.fcp.cart'(bool,sK0)))),'const.labSem.state_io_regs_1'(s('type.labSem.state'(sK0,sK1),X2))) | s('type.ffi.ffi_state'(sK1),'const.labSem.state_ffi_1'(s('type.labSem.state'(sK0,sK1),X1))) != s('type.ffi.ffi_state'(sK1),'const.labSem.state_ffi_1'(s('type.labSem.state'(sK0,sK1),X2))) | s(bool,'const.labSem.state_be_1'(s('type.labSem.state'(sK0,sK1),X1))) != s(bool,'const.labSem.state_be_1'(s('type.labSem.state'(sK0,sK1),X2))) | s('type.num.num','const.labSem.state_pc_1'(s('type.labSem.state'(sK0,sK1),X1))) != s('type.num.num','const.labSem.state_pc_1'(s('type.labSem.state'(sK0,sK1),X2))) | s(fun('type.fcp.cart'(bool,sK0),bool),'const.labSem.state_mem_domain_1'(s('type.labSem.state'(sK0,sK1),X1))) != s(fun('type.fcp.cart'(bool,sK0),bool),'const.labSem.state_mem_domain_1'(s('type.labSem.state'(sK0,sK1),X2))) | s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'const.labSem.state_mem_1'(s('type.labSem.state'(sK0,sK1),X1))) != s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'const.labSem.state_mem_1'(s('type.labSem.state'(sK0,sK1),X2))) | s(fun('type.num.num','type.wordSem.word_loc'(sK0)),'const.labSem.state_regs_1'(s('type.labSem.state'(sK0,sK1),X1))) != s(fun('type.num.num','type.wordSem.word_loc'(sK0)),'const.labSem.state_regs_1'(s('type.labSem.state'(sK0,sK1),X2)))) )),
  inference(superposition,[],[f341,f324])).
fof(f324,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.labSem.state'(X0,X1),X2) = s('type.labSem.state'(X0,X1),X3) | s('type.num.num','const.labSem.state_link_reg_1'(s('type.labSem.state'(X0,X1),X2))) != s('type.num.num','const.labSem.state_link_reg_1'(s('type.labSem.state'(X0,X1),X3))) | s('type.num.num','const.labSem.state_len_reg_1'(s('type.labSem.state'(X0,X1),X2))) != s('type.num.num','const.labSem.state_len_reg_1'(s('type.labSem.state'(X0,X1),X3))) | s('type.num.num','const.labSem.state_ptr_reg_1'(s('type.labSem.state'(X0,X1),X2))) != s('type.num.num','const.labSem.state_ptr_reg_1'(s('type.labSem.state'(X0,X1),X3))) | s(bool,'const.labSem.state_failed_1'(s('type.labSem.state'(X0,X1),X2))) != s(bool,'const.labSem.state_failed_1'(s('type.labSem.state'(X0,X1),X3))) | s('type.num.num','const.labSem.state_clock_1'(s('type.labSem.state'(X0,X1),X2))) != s('type.num.num','const.labSem.state_clock_1'(s('type.labSem.state'(X0,X1),X3))) | s('type.list.list'('type.labLang.sec'(X0)),'const.labSem.state_code_1'(s('type.labSem.state'(X0,X1),X2))) != s('type.list.list'('type.labLang.sec'(X0)),'const.labSem.state_code_1'(s('type.labSem.state'(X0,X1),X3))) | s(fun('type.num.num',fun('type.num.num','type.option.option'('type.fcp.cart'(bool,X0)))),'const.labSem.state_io_regs_1'(s('type.labSem.state'(X0,X1),X2))) != s(fun('type.num.num',fun('type.num.num','type.option.option'('type.fcp.cart'(bool,X0)))),'const.labSem.state_io_regs_1'(s('type.labSem.state'(X0,X1),X3))) | s('type.ffi.ffi_state'(X1),'const.labSem.state_ffi_1'(s('type.labSem.state'(X0,X1),X2))) != s('type.ffi.ffi_state'(X1),'const.labSem.state_ffi_1'(s('type.labSem.state'(X0,X1),X3))) | s(bool,'const.labSem.state_be_1'(s('type.labSem.state'(X0,X1),X2))) != s(bool,'const.labSem.state_be_1'(s('type.labSem.state'(X0,X1),X3))) | s('type.num.num','const.labSem.state_pc_1'(s('type.labSem.state'(X0,X1),X2))) != s('type.num.num','const.labSem.state_pc_1'(s('type.labSem.state'(X0,X1),X3))) | s(fun('type.fcp.cart'(bool,X0),bool),'const.labSem.state_mem_domain_1'(s('type.labSem.state'(X0,X1),X2))) != s(fun('type.fcp.cart'(bool,X0),bool),'const.labSem.state_mem_domain_1'(s('type.labSem.state'(X0,X1),X3))) | s(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'const.labSem.state_mem_1'(s('type.labSem.state'(X0,X1),X2))) != s(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'const.labSem.state_mem_1'(s('type.labSem.state'(X0,X1),X3))) | s(fun('type.num.num','type.wordSem.word_loc'(X0)),'const.labSem.state_regs_1'(s('type.labSem.state'(X0,X1),X2))) != s(fun('type.num.num','type.wordSem.word_loc'(X0)),'const.labSem.state_regs_1'(s('type.labSem.state'(X0,X1),X3)))) )),
  inference(cnf_transformation,[],[f304])).
fof(f304,plain,(
  ! [X0,X1,X2,X3] : ((s('type.labSem.state'(X0,X1),X2) != s('type.labSem.state'(X0,X1),X3) | (s(fun('type.num.num','type.wordSem.word_loc'(X0)),'const.labSem.state_regs_1'(s('type.labSem.state'(X0,X1),X2))) = s(fun('type.num.num','type.wordSem.word_loc'(X0)),'const.labSem.state_regs_1'(s('type.labSem.state'(X0,X1),X3))) & s(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'const.labSem.state_mem_1'(s('type.labSem.state'(X0,X1),X2))) = s(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'const.labSem.state_mem_1'(s('type.labSem.state'(X0,X1),X3))) & s(fun('type.fcp.cart'(bool,X0),bool),'const.labSem.state_mem_domain_1'(s('type.labSem.state'(X0,X1),X2))) = s(fun('type.fcp.cart'(bool,X0),bool),'const.labSem.state_mem_domain_1'(s('type.labSem.state'(X0,X1),X3))) & s('type.num.num','const.labSem.state_pc_1'(s('type.labSem.state'(X0,X1),X2))) = s('type.num.num','const.labSem.state_pc_1'(s('type.labSem.state'(X0,X1),X3))) & s(bool,'const.labSem.state_be_1'(s('type.labSem.state'(X0,X1),X2))) = s(bool,'const.labSem.state_be_1'(s('type.labSem.state'(X0,X1),X3))) & s('type.ffi.ffi_state'(X1),'const.labSem.state_ffi_1'(s('type.labSem.state'(X0,X1),X2))) = s('type.ffi.ffi_state'(X1),'const.labSem.state_ffi_1'(s('type.labSem.state'(X0,X1),X3))) & s(fun('type.num.num',fun('type.num.num','type.option.option'('type.fcp.cart'(bool,X0)))),'const.labSem.state_io_regs_1'(s('type.labSem.state'(X0,X1),X2))) = s(fun('type.num.num',fun('type.num.num','type.option.option'('type.fcp.cart'(bool,X0)))),'const.labSem.state_io_regs_1'(s('type.labSem.state'(X0,X1),X3))) & s('type.list.list'('type.labLang.sec'(X0)),'const.labSem.state_code_1'(s('type.labSem.state'(X0,X1),X2))) = s('type.list.list'('type.labLang.sec'(X0)),'const.labSem.state_code_1'(s('type.labSem.state'(X0,X1),X3))) & s('type.num.num','const.labSem.state_clock_1'(s('type.labSem.state'(X0,X1),X2))) = s('type.num.num','const.labSem.state_clock_1'(s('type.labSem.state'(X0,X1),X3))) & s(bool,'const.labSem.state_failed_1'(s('type.labSem.state'(X0,X1),X2))) = s(bool,'const.labSem.state_failed_1'(s('type.labSem.state'(X0,X1),X3))) & s('type.num.num','const.labSem.state_ptr_reg_1'(s('type.labSem.state'(X0,X1),X2))) = s('type.num.num','const.labSem.state_ptr_reg_1'(s('type.labSem.state'(X0,X1),X3))) & s('type.num.num','const.labSem.state_len_reg_1'(s('type.labSem.state'(X0,X1),X2))) = s('type.num.num','const.labSem.state_len_reg_1'(s('type.labSem.state'(X0,X1),X3))) & s('type.num.num','const.labSem.state_link_reg_1'(s('type.labSem.state'(X0,X1),X2))) = s('type.num.num','const.labSem.state_link_reg_1'(s('type.labSem.state'(X0,X1),X3))))) & (s(fun('type.num.num','type.wordSem.word_loc'(X0)),'const.labSem.state_regs_1'(s('type.labSem.state'(X0,X1),X2))) != s(fun('type.num.num','type.wordSem.word_loc'(X0)),'const.labSem.state_regs_1'(s('type.labSem.state'(X0,X1),X3))) | s(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'const.labSem.state_mem_1'(s('type.labSem.state'(X0,X1),X2))) != s(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'const.labSem.state_mem_1'(s('type.labSem.state'(X0,X1),X3))) | s(fun('type.fcp.cart'(bool,X0),bool),'const.labSem.state_mem_domain_1'(s('type.labSem.state'(X0,X1),X2))) != s(fun('type.fcp.cart'(bool,X0),bool),'const.labSem.state_mem_domain_1'(s('type.labSem.state'(X0,X1),X3))) | s('type.num.num','const.labSem.state_pc_1'(s('type.labSem.state'(X0,X1),X2))) != s('type.num.num','const.labSem.state_pc_1'(s('type.labSem.state'(X0,X1),X3))) | s(bool,'const.labSem.state_be_1'(s('type.labSem.state'(X0,X1),X2))) != s(bool,'const.labSem.state_be_1'(s('type.labSem.state'(X0,X1),X3))) | s('type.ffi.ffi_state'(X1),'const.labSem.state_ffi_1'(s('type.labSem.state'(X0,X1),X2))) != s('type.ffi.ffi_state'(X1),'const.labSem.state_ffi_1'(s('type.labSem.state'(X0,X1),X3))) | s(fun('type.num.num',fun('type.num.num','type.option.option'('type.fcp.cart'(bool,X0)))),'const.labSem.state_io_regs_1'(s('type.labSem.state'(X0,X1),X2))) != s(fun('type.num.num',fun('type.num.num','type.option.option'('type.fcp.cart'(bool,X0)))),'const.labSem.state_io_regs_1'(s('type.labSem.state'(X0,X1),X3))) | s('type.list.list'('type.labLang.sec'(X0)),'const.labSem.state_code_1'(s('type.labSem.state'(X0,X1),X2))) != s('type.list.list'('type.labLang.sec'(X0)),'const.labSem.state_code_1'(s('type.labSem.state'(X0,X1),X3))) | s('type.num.num','const.labSem.state_clock_1'(s('type.labSem.state'(X0,X1),X2))) != s('type.num.num','const.labSem.state_clock_1'(s('type.labSem.state'(X0,X1),X3))) | s(bool,'const.labSem.state_failed_1'(s('type.labSem.state'(X0,X1),X2))) != s(bool,'const.labSem.state_failed_1'(s('type.labSem.state'(X0,X1),X3))) | s('type.num.num','const.labSem.state_ptr_reg_1'(s('type.labSem.state'(X0,X1),X2))) != s('type.num.num','const.labSem.state_ptr_reg_1'(s('type.labSem.state'(X0,X1),X3))) | s('type.num.num','const.labSem.state_len_reg_1'(s('type.labSem.state'(X0,X1),X2))) != s('type.num.num','const.labSem.state_len_reg_1'(s('type.labSem.state'(X0,X1),X3))) | s('type.num.num','const.labSem.state_link_reg_1'(s('type.labSem.state'(X0,X1),X2))) != s('type.num.num','const.labSem.state_link_reg_1'(s('type.labSem.state'(X0,X1),X3))) | s('type.labSem.state'(X0,X1),X2) = s('type.labSem.state'(X0,X1),X3)))),
  inference(flattening,[],[f303])).
fof(f303,plain,(
  ! [X0,X1,X2,X3] : ((s('type.labSem.state'(X0,X1),X2) != s('type.labSem.state'(X0,X1),X3) | (s(fun('type.num.num','type.wordSem.word_loc'(X0)),'const.labSem.state_regs_1'(s('type.labSem.state'(X0,X1),X2))) = s(fun('type.num.num','type.wordSem.word_loc'(X0)),'const.labSem.state_regs_1'(s('type.labSem.state'(X0,X1),X3))) & s(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'const.labSem.state_mem_1'(s('type.labSem.state'(X0,X1),X2))) = s(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'const.labSem.state_mem_1'(s('type.labSem.state'(X0,X1),X3))) & s(fun('type.fcp.cart'(bool,X0),bool),'const.labSem.state_mem_domain_1'(s('type.labSem.state'(X0,X1),X2))) = s(fun('type.fcp.cart'(bool,X0),bool),'const.labSem.state_mem_domain_1'(s('type.labSem.state'(X0,X1),X3))) & s('type.num.num','const.labSem.state_pc_1'(s('type.labSem.state'(X0,X1),X2))) = s('type.num.num','const.labSem.state_pc_1'(s('type.labSem.state'(X0,X1),X3))) & s(bool,'const.labSem.state_be_1'(s('type.labSem.state'(X0,X1),X2))) = s(bool,'const.labSem.state_be_1'(s('type.labSem.state'(X0,X1),X3))) & s('type.ffi.ffi_state'(X1),'const.labSem.state_ffi_1'(s('type.labSem.state'(X0,X1),X2))) = s('type.ffi.ffi_state'(X1),'const.labSem.state_ffi_1'(s('type.labSem.state'(X0,X1),X3))) & s(fun('type.num.num',fun('type.num.num','type.option.option'('type.fcp.cart'(bool,X0)))),'const.labSem.state_io_regs_1'(s('type.labSem.state'(X0,X1),X2))) = s(fun('type.num.num',fun('type.num.num','type.option.option'('type.fcp.cart'(bool,X0)))),'const.labSem.state_io_regs_1'(s('type.labSem.state'(X0,X1),X3))) & s('type.list.list'('type.labLang.sec'(X0)),'const.labSem.state_code_1'(s('type.labSem.state'(X0,X1),X2))) = s('type.list.list'('type.labLang.sec'(X0)),'const.labSem.state_code_1'(s('type.labSem.state'(X0,X1),X3))) & s('type.num.num','const.labSem.state_clock_1'(s('type.labSem.state'(X0,X1),X2))) = s('type.num.num','const.labSem.state_clock_1'(s('type.labSem.state'(X0,X1),X3))) & s(bool,'const.labSem.state_failed_1'(s('type.labSem.state'(X0,X1),X2))) = s(bool,'const.labSem.state_failed_1'(s('type.labSem.state'(X0,X1),X3))) & s('type.num.num','const.labSem.state_ptr_reg_1'(s('type.labSem.state'(X0,X1),X2))) = s('type.num.num','const.labSem.state_ptr_reg_1'(s('type.labSem.state'(X0,X1),X3))) & s('type.num.num','const.labSem.state_len_reg_1'(s('type.labSem.state'(X0,X1),X2))) = s('type.num.num','const.labSem.state_len_reg_1'(s('type.labSem.state'(X0,X1),X3))) & s('type.num.num','const.labSem.state_link_reg_1'(s('type.labSem.state'(X0,X1),X2))) = s('type.num.num','const.labSem.state_link_reg_1'(s('type.labSem.state'(X0,X1),X3))))) & ((s(fun('type.num.num','type.wordSem.word_loc'(X0)),'const.labSem.state_regs_1'(s('type.labSem.state'(X0,X1),X2))) != s(fun('type.num.num','type.wordSem.word_loc'(X0)),'const.labSem.state_regs_1'(s('type.labSem.state'(X0,X1),X3))) | s(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'const.labSem.state_mem_1'(s('type.labSem.state'(X0,X1),X2))) != s(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'const.labSem.state_mem_1'(s('type.labSem.state'(X0,X1),X3))) | s(fun('type.fcp.cart'(bool,X0),bool),'const.labSem.state_mem_domain_1'(s('type.labSem.state'(X0,X1),X2))) != s(fun('type.fcp.cart'(bool,X0),bool),'const.labSem.state_mem_domain_1'(s('type.labSem.state'(X0,X1),X3))) | s('type.num.num','const.labSem.state_pc_1'(s('type.labSem.state'(X0,X1),X2))) != s('type.num.num','const.labSem.state_pc_1'(s('type.labSem.state'(X0,X1),X3))) | s(bool,'const.labSem.state_be_1'(s('type.labSem.state'(X0,X1),X2))) != s(bool,'const.labSem.state_be_1'(s('type.labSem.state'(X0,X1),X3))) | s('type.ffi.ffi_state'(X1),'const.labSem.state_ffi_1'(s('type.labSem.state'(X0,X1),X2))) != s('type.ffi.ffi_state'(X1),'const.labSem.state_ffi_1'(s('type.labSem.state'(X0,X1),X3))) | s(fun('type.num.num',fun('type.num.num','type.option.option'('type.fcp.cart'(bool,X0)))),'const.labSem.state_io_regs_1'(s('type.labSem.state'(X0,X1),X2))) != s(fun('type.num.num',fun('type.num.num','type.option.option'('type.fcp.cart'(bool,X0)))),'const.labSem.state_io_regs_1'(s('type.labSem.state'(X0,X1),X3))) | s('type.list.list'('type.labLang.sec'(X0)),'const.labSem.state_code_1'(s('type.labSem.state'(X0,X1),X2))) != s('type.list.list'('type.labLang.sec'(X0)),'const.labSem.state_code_1'(s('type.labSem.state'(X0,X1),X3))) | s('type.num.num','const.labSem.state_clock_1'(s('type.labSem.state'(X0,X1),X2))) != s('type.num.num','const.labSem.state_clock_1'(s('type.labSem.state'(X0,X1),X3))) | s(bool,'const.labSem.state_failed_1'(s('type.labSem.state'(X0,X1),X2))) != s(bool,'const.labSem.state_failed_1'(s('type.labSem.state'(X0,X1),X3))) | s('type.num.num','const.labSem.state_ptr_reg_1'(s('type.labSem.state'(X0,X1),X2))) != s('type.num.num','const.labSem.state_ptr_reg_1'(s('type.labSem.state'(X0,X1),X3))) | s('type.num.num','const.labSem.state_len_reg_1'(s('type.labSem.state'(X0,X1),X2))) != s('type.num.num','const.labSem.state_len_reg_1'(s('type.labSem.state'(X0,X1),X3))) | s('type.num.num','const.labSem.state_link_reg_1'(s('type.labSem.state'(X0,X1),X2))) != s('type.num.num','const.labSem.state_link_reg_1'(s('type.labSem.state'(X0,X1),X3)))) | s('type.labSem.state'(X0,X1),X2) = s('type.labSem.state'(X0,X1),X3)))),
  inference(nnf_transformation,[],[f276])).
fof(f276,plain,(
  ! [X0,X1,X2,X3] : (s('type.labSem.state'(X0,X1),X2) = s('type.labSem.state'(X0,X1),X3) <=> (s(fun('type.num.num','type.wordSem.word_loc'(X0)),'const.labSem.state_regs_1'(s('type.labSem.state'(X0,X1),X2))) = s(fun('type.num.num','type.wordSem.word_loc'(X0)),'const.labSem.state_regs_1'(s('type.labSem.state'(X0,X1),X3))) & s(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'const.labSem.state_mem_1'(s('type.labSem.state'(X0,X1),X2))) = s(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'const.labSem.state_mem_1'(s('type.labSem.state'(X0,X1),X3))) & s(fun('type.fcp.cart'(bool,X0),bool),'const.labSem.state_mem_domain_1'(s('type.labSem.state'(X0,X1),X2))) = s(fun('type.fcp.cart'(bool,X0),bool),'const.labSem.state_mem_domain_1'(s('type.labSem.state'(X0,X1),X3))) & s('type.num.num','const.labSem.state_pc_1'(s('type.labSem.state'(X0,X1),X2))) = s('type.num.num','const.labSem.state_pc_1'(s('type.labSem.state'(X0,X1),X3))) & s(bool,'const.labSem.state_be_1'(s('type.labSem.state'(X0,X1),X2))) = s(bool,'const.labSem.state_be_1'(s('type.labSem.state'(X0,X1),X3))) & s('type.ffi.ffi_state'(X1),'const.labSem.state_ffi_1'(s('type.labSem.state'(X0,X1),X2))) = s('type.ffi.ffi_state'(X1),'const.labSem.state_ffi_1'(s('type.labSem.state'(X0,X1),X3))) & s(fun('type.num.num',fun('type.num.num','type.option.option'('type.fcp.cart'(bool,X0)))),'const.labSem.state_io_regs_1'(s('type.labSem.state'(X0,X1),X2))) = s(fun('type.num.num',fun('type.num.num','type.option.option'('type.fcp.cart'(bool,X0)))),'const.labSem.state_io_regs_1'(s('type.labSem.state'(X0,X1),X3))) & s('type.list.list'('type.labLang.sec'(X0)),'const.labSem.state_code_1'(s('type.labSem.state'(X0,X1),X2))) = s('type.list.list'('type.labLang.sec'(X0)),'const.labSem.state_code_1'(s('type.labSem.state'(X0,X1),X3))) & s('type.num.num','const.labSem.state_clock_1'(s('type.labSem.state'(X0,X1),X2))) = s('type.num.num','const.labSem.state_clock_1'(s('type.labSem.state'(X0,X1),X3))) & s(bool,'const.labSem.state_failed_1'(s('type.labSem.state'(X0,X1),X2))) = s(bool,'const.labSem.state_failed_1'(s('type.labSem.state'(X0,X1),X3))) & s('type.num.num','const.labSem.state_ptr_reg_1'(s('type.labSem.state'(X0,X1),X2))) = s('type.num.num','const.labSem.state_ptr_reg_1'(s('type.labSem.state'(X0,X1),X3))) & s('type.num.num','const.labSem.state_len_reg_1'(s('type.labSem.state'(X0,X1),X2))) = s('type.num.num','const.labSem.state_len_reg_1'(s('type.labSem.state'(X0,X1),X3))) & s('type.num.num','const.labSem.state_link_reg_1'(s('type.labSem.state'(X0,X1),X2))) = s('type.num.num','const.labSem.state_link_reg_1'(s('type.labSem.state'(X0,X1),X3)))))),
  inference(flattening,[],[f275])).
fof(f275,plain,(
  ! [X0,X1] : ! [X2,X3] : (s('type.labSem.state'(X0,X1),X2) = s('type.labSem.state'(X0,X1),X3) <=> (s(fun('type.num.num','type.wordSem.word_loc'(X0)),'const.labSem.state_regs_1'(s('type.labSem.state'(X0,X1),X2))) = s(fun('type.num.num','type.wordSem.word_loc'(X0)),'const.labSem.state_regs_1'(s('type.labSem.state'(X0,X1),X3))) & s(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'const.labSem.state_mem_1'(s('type.labSem.state'(X0,X1),X2))) = s(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'const.labSem.state_mem_1'(s('type.labSem.state'(X0,X1),X3))) & s(fun('type.fcp.cart'(bool,X0),bool),'const.labSem.state_mem_domain_1'(s('type.labSem.state'(X0,X1),X2))) = s(fun('type.fcp.cart'(bool,X0),bool),'const.labSem.state_mem_domain_1'(s('type.labSem.state'(X0,X1),X3))) & s('type.num.num','const.labSem.state_pc_1'(s('type.labSem.state'(X0,X1),X2))) = s('type.num.num','const.labSem.state_pc_1'(s('type.labSem.state'(X0,X1),X3))) & s(bool,'const.labSem.state_be_1'(s('type.labSem.state'(X0,X1),X2))) = s(bool,'const.labSem.state_be_1'(s('type.labSem.state'(X0,X1),X3))) & s('type.ffi.ffi_state'(X1),'const.labSem.state_ffi_1'(s('type.labSem.state'(X0,X1),X2))) = s('type.ffi.ffi_state'(X1),'const.labSem.state_ffi_1'(s('type.labSem.state'(X0,X1),X3))) & s(fun('type.num.num',fun('type.num.num','type.option.option'('type.fcp.cart'(bool,X0)))),'const.labSem.state_io_regs_1'(s('type.labSem.state'(X0,X1),X2))) = s(fun('type.num.num',fun('type.num.num','type.option.option'('type.fcp.cart'(bool,X0)))),'const.labSem.state_io_regs_1'(s('type.labSem.state'(X0,X1),X3))) & s('type.list.list'('type.labLang.sec'(X0)),'const.labSem.state_code_1'(s('type.labSem.state'(X0,X1),X2))) = s('type.list.list'('type.labLang.sec'(X0)),'const.labSem.state_code_1'(s('type.labSem.state'(X0,X1),X3))) & s('type.num.num','const.labSem.state_clock_1'(s('type.labSem.state'(X0,X1),X2))) = s('type.num.num','const.labSem.state_clock_1'(s('type.labSem.state'(X0,X1),X3))) & s(bool,'const.labSem.state_failed_1'(s('type.labSem.state'(X0,X1),X2))) = s(bool,'const.labSem.state_failed_1'(s('type.labSem.state'(X0,X1),X3))) & s('type.num.num','const.labSem.state_ptr_reg_1'(s('type.labSem.state'(X0,X1),X2))) = s('type.num.num','const.labSem.state_ptr_reg_1'(s('type.labSem.state'(X0,X1),X3))) & s('type.num.num','const.labSem.state_len_reg_1'(s('type.labSem.state'(X0,X1),X2))) = s('type.num.num','const.labSem.state_len_reg_1'(s('type.labSem.state'(X0,X1),X3))) & s('type.num.num','const.labSem.state_link_reg_1'(s('type.labSem.state'(X0,X1),X2))) = s('type.num.num','const.labSem.state_link_reg_1'(s('type.labSem.state'(X0,X1),X3)))))),
  inference(rectify,[],[f18])).
fof(f18,axiom,(
  ! [X6,X10] : ! [X13,X14] : (s('type.labSem.state'(X6,X10),X13) = s('type.labSem.state'(X6,X10),X14) <=> (s(fun('type.num.num','type.wordSem.word_loc'(X6)),'const.labSem.state_regs_1'(s('type.labSem.state'(X6,X10),X13))) = s(fun('type.num.num','type.wordSem.word_loc'(X6)),'const.labSem.state_regs_1'(s('type.labSem.state'(X6,X10),X14))) & s(fun('type.fcp.cart'(bool,X6),'type.wordSem.word_loc'(X6)),'const.labSem.state_mem_1'(s('type.labSem.state'(X6,X10),X13))) = s(fun('type.fcp.cart'(bool,X6),'type.wordSem.word_loc'(X6)),'const.labSem.state_mem_1'(s('type.labSem.state'(X6,X10),X14))) & s(fun('type.fcp.cart'(bool,X6),bool),'const.labSem.state_mem_domain_1'(s('type.labSem.state'(X6,X10),X13))) = s(fun('type.fcp.cart'(bool,X6),bool),'const.labSem.state_mem_domain_1'(s('type.labSem.state'(X6,X10),X14))) & s('type.num.num','const.labSem.state_pc_1'(s('type.labSem.state'(X6,X10),X13))) = s('type.num.num','const.labSem.state_pc_1'(s('type.labSem.state'(X6,X10),X14))) & s(bool,'const.labSem.state_be_1'(s('type.labSem.state'(X6,X10),X13))) = s(bool,'const.labSem.state_be_1'(s('type.labSem.state'(X6,X10),X14))) & s('type.ffi.ffi_state'(X10),'const.labSem.state_ffi_1'(s('type.labSem.state'(X6,X10),X13))) = s('type.ffi.ffi_state'(X10),'const.labSem.state_ffi_1'(s('type.labSem.state'(X6,X10),X14))) & s(fun('type.num.num',fun('type.num.num','type.option.option'('type.fcp.cart'(bool,X6)))),'const.labSem.state_io_regs_1'(s('type.labSem.state'(X6,X10),X13))) = s(fun('type.num.num',fun('type.num.num','type.option.option'('type.fcp.cart'(bool,X6)))),'const.labSem.state_io_regs_1'(s('type.labSem.state'(X6,X10),X14))) & s('type.list.list'('type.labLang.sec'(X6)),'const.labSem.state_code_1'(s('type.labSem.state'(X6,X10),X13))) = s('type.list.list'('type.labLang.sec'(X6)),'const.labSem.state_code_1'(s('type.labSem.state'(X6,X10),X14))) & s('type.num.num','const.labSem.state_clock_1'(s('type.labSem.state'(X6,X10),X13))) = s('type.num.num','const.labSem.state_clock_1'(s('type.labSem.state'(X6,X10),X14))) & s(bool,'const.labSem.state_failed_1'(s('type.labSem.state'(X6,X10),X13))) = s(bool,'const.labSem.state_failed_1'(s('type.labSem.state'(X6,X10),X14))) & s('type.num.num','const.labSem.state_ptr_reg_1'(s('type.labSem.state'(X6,X10),X13))) = s('type.num.num','const.labSem.state_ptr_reg_1'(s('type.labSem.state'(X6,X10),X14))) & s('type.num.num','const.labSem.state_len_reg_1'(s('type.labSem.state'(X6,X10),X13))) = s('type.num.num','const.labSem.state_len_reg_1'(s('type.labSem.state'(X6,X10),X14))) & s('type.num.num','const.labSem.state_link_reg_1'(s('type.labSem.state'(X6,X10),X13))) = s('type.num.num','const.labSem.state_link_reg_1'(s('type.labSem.state'(X6,X10),X14)))))),
  file('thm.labProps.align_dm_const|split|1','thm.labSem.labSem_3|49|4_prove_ltb')).
fof(f341,plain,(
  ( ! [X0] : (s('type.labSem.state'(sK0,sK1),X0) != s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),sK2))) | s('type.num.num','const.labSem.state_pc_1'(s('type.labSem.state'(sK0,sK1),sK2))) != s('type.num.num','const.labSem.state_pc_1'(s('type.labSem.state'(sK0,sK1),X0)))) )),
  inference(superposition,[],[f305,f314])).
fof(f314,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.num.num','const.labSem.state_pc_1'(s('type.labSem.state'(X0,X1),X2))) = s('type.num.num','const.labSem.state_pc_1'(s('type.labSem.state'(X0,X1),X3))) | s('type.labSem.state'(X0,X1),X2) != s('type.labSem.state'(X0,X1),X3)) )),
  inference(cnf_transformation,[],[f304])).
fof(f305,plain,(
  s('type.num.num','const.labSem.state_pc_1'(s('type.labSem.state'(sK0,sK1),sK2))) != s('type.num.num','const.labSem.state_pc_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),sK2)))))),
  inference(cnf_transformation,[],[f302])).
fof(f302,plain,(
  s('type.num.num','const.labSem.state_pc_1'(s('type.labSem.state'(sK0,sK1),sK2))) != s('type.num.num','const.labSem.state_pc_1'(s('type.labSem.state'(sK0,sK1),'const.labProps.align_dm_1'(s('type.labSem.state'(sK0,sK1),sK2)))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1,sK2])],[f301])).
fof(f301,plain,(
  ? [X0,X1,X2] : s('type.num.num','const.labSem.state_pc_1'(s('type.labSem.state'(X0,X1),X2))) != s('type.num.num','const.labSem.state_pc_1'(s('type.labSem.state'(X0,X1),'const.labProps.align_dm_1'(s('type.labSem.state'(X0,X1),X2)))))),
  inference(ennf_transformation,[],[f264])).
fof(f264,plain,(
  ~! [X0,X1,X2] : s('type.num.num','const.labSem.state_pc_1'(s('type.labSem.state'(X0,X1),X2))) = s('type.num.num','const.labSem.state_pc_1'(s('type.labSem.state'(X0,X1),'const.labProps.align_dm_1'(s('type.labSem.state'(X0,X1),X2)))))),
  inference(flattening,[],[f263])).
fof(f263,plain,(
  ~! [X0,X1] : ! [X2] : s('type.num.num','const.labSem.state_pc_1'(s('type.labSem.state'(X0,X1),X2))) = s('type.num.num','const.labSem.state_pc_1'(s('type.labSem.state'(X0,X1),'const.labProps.align_dm_1'(s('type.labSem.state'(X0,X1),X2)))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6,X7] : ! [X8] : s('type.num.num','const.labSem.state_pc_1'(s('type.labSem.state'(X6,X7),X8))) = s('type.num.num','const.labSem.state_pc_1'(s('type.labSem.state'(X6,X7),'const.labProps.align_dm_1'(s('type.labSem.state'(X6,X7),X8)))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6,X7] : ! [X8] : s('type.num.num','const.labSem.state_pc_1'(s('type.labSem.state'(X6,X7),X8))) = s('type.num.num','const.labSem.state_pc_1'(s('type.labSem.state'(X6,X7),'const.labProps.align_dm_1'(s('type.labSem.state'(X6,X7),X8)))))),
  file('thm.labProps.align_dm_const|split|1','thm.labProps.align_dm_const|split|1')).
% SZS output end Proof for thm.labProps
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 416
% Passive clauses: 2862
% Generated clauses: 9588
% Final active clauses: 416
% Final passive clauses: 2144
% Input formulas: 261
% Initial clauses: 32
% 
% Selected by SInE selection: 19
% SInE iterations: 1
% 
% Duplicate literals: 87
% Trivial inequalities: 576
% Fw subsumption resolutions: 80
% Fw demodulations: 6036
% 
% Equational tautologies: 1
% Forward subsumptions: 860
% 
% Forward superposition: 3082
% Equality resolution: 318
% 
% Split clauses: 18
% Split components: 63
% SAT solver clauses: 19
% 
% Sat splits: 18
% 
% Memory used [KB]: 13560
% Time elapsed: 3.125 s
% ------------------------------
% ------------------------------
% Success in time 14.882 s
