Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 150 next slice time: 5
dis+11_7_3 on thm.clos_mtiProof
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.clos_mtiProof
% SZS output start Proof for thm.clos_mtiProof
fof(f11558,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f11536,f1126,f95,f153,f151,f149,f1110,f93,f150,f94,f152,f148,f146,f156,f1210,f1223])).
fof(f1223,plain,(
  s(bool,'T_0') = s(bool,'const.closSem.check_loc_5'(s('type.option.option'(sK0),sK4),s('type.option.option'(sK0),'const.option.NONE_0'),s('type.num.num',sK2),s('type.num.num',sK3),s('type.num.num',sK1))) | $spl24),
  inference(cnf_transformation,[],[f1223_D])).
fof(f1223_D,plain,(
  s(bool,'T_0') = s(bool,'const.closSem.check_loc_5'(s('type.option.option'(sK0),sK4),s('type.option.option'(sK0),'const.option.NONE_0'),s('type.num.num',sK2),s('type.num.num',sK3),s('type.num.num',sK1))) <=> ~$spl24),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl24])])).
fof(f1210,plain,(
  s(bool,'T_0') = s(bool,'const.closSem.check_loc_5'(s('type.option.option'(sK0),sK4),s('type.option.option'(sK0),'const.option.NONE_0'),s('type.num.num',sK2),s('type.num.num',sK3),s('type.num.num',sK1))) | $spl0),
  inference(resolution,[],[f148,f106])).
fof(f106,plain,(
  ( ! [X0] : (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f72])).
fof(f72,plain,(
  ! [X0] : ((s(bool,'T_0') != s(bool,X0) | p(s(bool,X0))) & (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f34])).
fof(f34,plain,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) <=> p(s(bool,X0)))),
  inference(rectify,[],[f21])).
fof(f21,axiom,(
  ! [X13] : (s(bool,'T_0') = s(bool,X13) <=> p(s(bool,X13)))),
  file('thm.clos_mtiProof.check_loc_second_NONE','thm.bool.EQ_CLAUSES|split|1')).
fof(f156,plain,(
  p(s(bool,'T_0')) | $spl8),
  inference(cnf_transformation,[],[f156_D])).
fof(f156_D,plain,(
  p(s(bool,'T_0')) <=> ~$spl8),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl8])])).
fof(f146,plain,(
  p(s(bool,'T_0'))),
  inference(trivial_inequality_removal,[],[f131])).
fof(f131,plain,(
  ( ! [X0,X1] : (p(s(bool,'T_0')) | s(X0,X1) != s(X0,X1)) )),
  inference(cnf_transformation,[],[f88])).
fof(f88,plain,(
  ! [X0,X1] : ((s(X0,X1) != s(X0,X1) | p(s(bool,'T_0'))) & (~p(s(bool,'T_0')) | s(X0,X1) = s(X0,X1)))),
  inference(nnf_transformation,[],[f50])).
fof(f50,plain,(
  ! [X0,X1] : (s(X0,X1) = s(X0,X1) <=> p(s(bool,'T_0')))),
  inference(flattening,[],[f49])).
fof(f49,plain,(
  ! [X0] : ! [X1] : (s(X0,X1) = s(X0,X1) <=> p(s(bool,'T_0')))),
  inference(rectify,[],[f18])).
fof(f18,axiom,(
  ! [X6] : ! [X14] : (s(X6,X14) = s(X6,X14) <=> p(s(bool,'T_0')))),
  file('thm.clos_mtiProof.check_loc_second_NONE','thm.bool.REFL_CLAUSE')).
fof(f148,plain,(
  p(s(bool,'const.closSem.check_loc_5'(s('type.option.option'(sK0),sK4),s('type.option.option'(sK0),'const.option.NONE_0'),s('type.num.num',sK2),s('type.num.num',sK3),s('type.num.num',sK1)))) | $spl0),
  inference(cnf_transformation,[],[f148_D])).
fof(f148_D,plain,(
  p(s(bool,'const.closSem.check_loc_5'(s('type.option.option'(sK0),sK4),s('type.option.option'(sK0),'const.option.NONE_0'),s('type.num.num',sK2),s('type.num.num',sK3),s('type.num.num',sK1)))) <=> ~$spl0),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl0])])).
fof(f152,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK3),s('type.num.num','const.closLang.max_app_0')))) | $spl4),
  inference(cnf_transformation,[],[f152_D])).
fof(f152_D,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK3),s('type.num.num','const.closLang.max_app_0')))) <=> ~$spl4),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl4])])).
fof(f94,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK3),s('type.num.num','const.closLang.max_app_0')))) | p(s(bool,'const.closSem.check_loc_5'(s('type.option.option'(sK0),sK4),s('type.option.option'(sK0),'const.option.NONE_0'),s('type.num.num',sK2),s('type.num.num',sK3),s('type.num.num',sK1))))),
  inference(cnf_transformation,[],[f69])).
fof(f69,plain,(
  (p(s(bool,'const.closSem.check_loc_5'(s('type.option.option'(sK0),sK4),s('type.option.option'(sK0),'const.option.NONE_0'),s('type.num.num',sK2),s('type.num.num',sK3),s('type.num.num',sK1)))) | (s('type.option.option'(sK0),'const.option.NONE_0') = s('type.option.option'(sK0),sK4) & p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK3),s('type.num.num','const.closLang.max_app_0')))))) & (~p(s(bool,'const.closSem.check_loc_5'(s('type.option.option'(sK0),sK4),s('type.option.option'(sK0),'const.option.NONE_0'),s('type.num.num',sK2),s('type.num.num',sK3),s('type.num.num',sK1)))) | s('type.option.option'(sK0),'const.option.NONE_0') != s('type.option.option'(sK0),sK4) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK3),s('type.num.num','const.closLang.max_app_0')))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1,sK2,sK3,sK4])],[f68])).
fof(f68,plain,(
  ? [X0,X1,X2,X3,X4] : ((p(s(bool,'const.closSem.check_loc_5'(s('type.option.option'(X0),X4),s('type.option.option'(X0),'const.option.NONE_0'),s('type.num.num',X2),s('type.num.num',X3),s('type.num.num',X1)))) | (s('type.option.option'(X0),'const.option.NONE_0') = s('type.option.option'(X0),X4) & p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X3),s('type.num.num','const.closLang.max_app_0')))))) & (~p(s(bool,'const.closSem.check_loc_5'(s('type.option.option'(X0),X4),s('type.option.option'(X0),'const.option.NONE_0'),s('type.num.num',X2),s('type.num.num',X3),s('type.num.num',X1)))) | s('type.option.option'(X0),'const.option.NONE_0') != s('type.option.option'(X0),X4) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X3),s('type.num.num','const.closLang.max_app_0'))))))),
  inference(flattening,[],[f67])).
fof(f67,plain,(
  ? [X0,X1,X2,X3,X4] : ((p(s(bool,'const.closSem.check_loc_5'(s('type.option.option'(X0),X4),s('type.option.option'(X0),'const.option.NONE_0'),s('type.num.num',X2),s('type.num.num',X3),s('type.num.num',X1)))) | (s('type.option.option'(X0),'const.option.NONE_0') = s('type.option.option'(X0),X4) & p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X3),s('type.num.num','const.closLang.max_app_0')))))) & (~p(s(bool,'const.closSem.check_loc_5'(s('type.option.option'(X0),X4),s('type.option.option'(X0),'const.option.NONE_0'),s('type.num.num',X2),s('type.num.num',X3),s('type.num.num',X1)))) | (s('type.option.option'(X0),'const.option.NONE_0') != s('type.option.option'(X0),X4) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X3),s('type.num.num','const.closLang.max_app_0')))))))),
  inference(nnf_transformation,[],[f62])).
fof(f62,plain,(
  ? [X0,X1,X2,X3,X4] : (p(s(bool,'const.closSem.check_loc_5'(s('type.option.option'(X0),X4),s('type.option.option'(X0),'const.option.NONE_0'),s('type.num.num',X2),s('type.num.num',X3),s('type.num.num',X1)))) <~> (s('type.option.option'(X0),'const.option.NONE_0') = s('type.option.option'(X0),X4) & p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X3),s('type.num.num','const.closLang.max_app_0'))))))),
  inference(ennf_transformation,[],[f29])).
fof(f29,plain,(
  ~! [X0,X1,X2,X3,X4] : (p(s(bool,'const.closSem.check_loc_5'(s('type.option.option'(X0),X4),s('type.option.option'(X0),'const.option.NONE_0'),s('type.num.num',X2),s('type.num.num',X3),s('type.num.num',X1)))) <=> (s('type.option.option'(X0),'const.option.NONE_0') = s('type.option.option'(X0),X4) & p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X3),s('type.num.num','const.closLang.max_app_0'))))))),
  inference(flattening,[],[f28])).
fof(f28,plain,(
  ~! [X0] : ! [X1,X2,X3,X4] : (p(s(bool,'const.closSem.check_loc_5'(s('type.option.option'(X0),X4),s('type.option.option'(X0),'const.option.NONE_0'),s('type.num.num',X2),s('type.num.num',X3),s('type.num.num',X1)))) <=> (s('type.option.option'(X0),'const.option.NONE_0') = s('type.option.option'(X0),X4) & p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X3),s('type.num.num','const.closLang.max_app_0'))))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : ! [X7,X8,X9,X10] : (p(s(bool,'const.closSem.check_loc_5'(s('type.option.option'(X6),X10),s('type.option.option'(X6),'const.option.NONE_0'),s('type.num.num',X8),s('type.num.num',X9),s('type.num.num',X7)))) <=> (s('type.option.option'(X6),'const.option.NONE_0') = s('type.option.option'(X6),X10) & p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X9),s('type.num.num','const.closLang.max_app_0'))))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : ! [X7,X8,X9,X10] : (p(s(bool,'const.closSem.check_loc_5'(s('type.option.option'(X6),X10),s('type.option.option'(X6),'const.option.NONE_0'),s('type.num.num',X8),s('type.num.num',X9),s('type.num.num',X7)))) <=> (s('type.option.option'(X6),'const.option.NONE_0') = s('type.option.option'(X6),X10) & p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X9),s('type.num.num','const.closLang.max_app_0'))))))),
  file('thm.clos_mtiProof.check_loc_second_NONE','thm.clos_mtiProof.check_loc_second_NONE')).
fof(f150,plain,(
  s('type.option.option'(sK0),'const.option.NONE_0') = s('type.option.option'(sK0),sK4) | $spl2),
  inference(cnf_transformation,[],[f150_D])).
fof(f150_D,plain,(
  s('type.option.option'(sK0),'const.option.NONE_0') = s('type.option.option'(sK0),sK4) <=> ~$spl2),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl2])])).
fof(f93,plain,(
  s('type.option.option'(sK0),'const.option.NONE_0') = s('type.option.option'(sK0),sK4) | p(s(bool,'const.closSem.check_loc_5'(s('type.option.option'(sK0),sK4),s('type.option.option'(sK0),'const.option.NONE_0'),s('type.num.num',sK2),s('type.num.num',sK3),s('type.num.num',sK1))))),
  inference(cnf_transformation,[],[f69])).
fof(f1110,plain,(
  $false | ($spl1 | $spl2 | $spl4 | $spl8)),
  inference(subsumption_resolution,[],[f1109,f156])).
fof(f1109,plain,(
  ~p(s(bool,'T_0')) | ($spl1 | $spl2 | $spl4)),
  inference(forward_demodulation,[],[f1070,f162])).
fof(f162,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK3),s('type.num.num','const.closLang.max_app_0'))) | $spl4),
  inference(resolution,[],[f106,f152])).
fof(f1070,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK3),s('type.num.num','const.closLang.max_app_0')))) | ($spl1 | $spl2)),
  inference(backward_demodulation,[],[f136,f240])).
fof(f240,plain,(
  ~p(s(bool,'const.closSem.check_loc_5'(s('type.option.option'(sK0),'const.option.NONE_0'),s('type.option.option'(sK0),'const.option.NONE_0'),s('type.num.num',sK2),s('type.num.num',sK3),s('type.num.num',sK1)))) | ($spl1 | $spl2)),
  inference(forward_demodulation,[],[f149,f150])).
fof(f136,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s(bool,'const.arithmetic.<=_2'(s('type.num.num',X3),s('type.num.num','const.closLang.max_app_0'))) = s(bool,'const.closSem.check_loc_5'(s('type.option.option'(X0),'const.option.NONE_0'),s('type.option.option'(X0),X1),s('type.num.num',X2),s('type.num.num',X3),s('type.num.num',X4)))) )),
  inference(cnf_transformation,[],[f56])).
fof(f56,plain,(
  ! [X0,X1,X2,X3,X4] : s(bool,'const.arithmetic.<=_2'(s('type.num.num',X3),s('type.num.num','const.closLang.max_app_0'))) = s(bool,'const.closSem.check_loc_5'(s('type.option.option'(X0),'const.option.NONE_0'),s('type.option.option'(X0),X1),s('type.num.num',X2),s('type.num.num',X3),s('type.num.num',X4)))),
  inference(flattening,[],[f55])).
fof(f55,plain,(
  ! [X0] : ! [X1,X2,X3,X4] : s(bool,'const.arithmetic.<=_2'(s('type.num.num',X3),s('type.num.num','const.closLang.max_app_0'))) = s(bool,'const.closSem.check_loc_5'(s('type.option.option'(X0),'const.option.NONE_0'),s('type.option.option'(X0),X1),s('type.num.num',X2),s('type.num.num',X3),s('type.num.num',X4)))),
  inference(rectify,[],[f24])).
fof(f24,axiom,(
  ! [X6] : ! [X16,X17,X18,X19] : s(bool,'const.arithmetic.<=_2'(s('type.num.num',X18),s('type.num.num','const.closLang.max_app_0'))) = s(bool,'const.closSem.check_loc_5'(s('type.option.option'(X6),'const.option.NONE_0'),s('type.option.option'(X6),X16),s('type.num.num',X17),s('type.num.num',X18),s('type.num.num',X19)))),
  file('thm.clos_mtiProof.check_loc_second_NONE','thm.closSem.check_loc_def|split|0')).
fof(f149,plain,(
  ~p(s(bool,'const.closSem.check_loc_5'(s('type.option.option'(sK0),sK4),s('type.option.option'(sK0),'const.option.NONE_0'),s('type.num.num',sK2),s('type.num.num',sK3),s('type.num.num',sK1)))) | $spl1),
  inference(cnf_transformation,[],[f149_D])).
fof(f149_D,plain,(
  ~p(s(bool,'const.closSem.check_loc_5'(s('type.option.option'(sK0),sK4),s('type.option.option'(sK0),'const.option.NONE_0'),s('type.num.num',sK2),s('type.num.num',sK3),s('type.num.num',sK1)))) <=> ~$spl1),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1])])).
fof(f151,plain,(
  s('type.option.option'(sK0),'const.option.NONE_0') != s('type.option.option'(sK0),sK4) | $spl3),
  inference(cnf_transformation,[],[f151_D])).
fof(f151_D,plain,(
  s('type.option.option'(sK0),'const.option.NONE_0') != s('type.option.option'(sK0),sK4) <=> ~$spl3),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl3])])).
fof(f153,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK3),s('type.num.num','const.closLang.max_app_0')))) | $spl5),
  inference(cnf_transformation,[],[f153_D])).
fof(f153_D,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK3),s('type.num.num','const.closLang.max_app_0')))) <=> ~$spl5),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl5])])).
fof(f95,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK3),s('type.num.num','const.closLang.max_app_0')))) | s('type.option.option'(sK0),'const.option.NONE_0') != s('type.option.option'(sK0),sK4) | ~p(s(bool,'const.closSem.check_loc_5'(s('type.option.option'(sK0),sK4),s('type.option.option'(sK0),'const.option.NONE_0'),s('type.num.num',sK2),s('type.num.num',sK3),s('type.num.num',sK1))))),
  inference(cnf_transformation,[],[f69])).
fof(f1126,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK3),s('type.num.num','const.closLang.max_app_0')))) | ($spl0 | $spl2)),
  inference(forward_demodulation,[],[f1125,f136])).
fof(f1125,plain,(
  p(s(bool,'const.closSem.check_loc_5'(s('type.option.option'(sK0),'const.option.NONE_0'),s('type.option.option'(sK0),'const.option.NONE_0'),s('type.num.num',sK2),s('type.num.num',sK3),s('type.num.num',sK1)))) | ($spl0 | $spl2)),
  inference(forward_demodulation,[],[f148,f150])).
fof(f11536,plain,(
  $false | ($spl3 | $spl8 | $spl24)),
  inference(subsumption_resolution,[],[f11535,f151])).
fof(f11535,plain,(
  s('type.option.option'(sK0),'const.option.NONE_0') = s('type.option.option'(sK0),sK4) | ($spl3 | $spl8 | $spl24)),
  inference(subsumption_resolution,[],[f11534,f133])).
fof(f133,plain,(
  ( ! [X0,X1] : (s('type.option.option'(X0),'const.option.NONE_0') != s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X1)))) )),
  inference(cnf_transformation,[],[f52])).
fof(f52,plain,(
  ! [X0,X1] : s('type.option.option'(X0),'const.option.NONE_0') != s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X1)))),
  inference(flattening,[],[f51])).
fof(f51,plain,(
  ! [X0] : ! [X1] : ~s('type.option.option'(X0),'const.option.NONE_0') = s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X1)))),
  inference(rectify,[],[f27])).
fof(f27,axiom,(
  ! [X6] : ! [X14] : ~s('type.option.option'(X6),'const.option.NONE_0') = s('type.option.option'(X6),'const.option.SOME_1'(s(X6,X14)))),
  file('thm.clos_mtiProof.check_loc_second_NONE','thm.option.NOT_NONE_SOME')).
fof(f11534,plain,(
  s('type.option.option'(sK0),'const.option.NONE_0') = s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK5(sK4,sK0)))) | s('type.option.option'(sK0),'const.option.NONE_0') = s('type.option.option'(sK0),sK4) | ($spl3 | $spl8 | $spl24)),
  inference(subsumption_resolution,[],[f11450,f156])).
fof(f11450,plain,(
  ~p(s(bool,'T_0')) | s('type.option.option'(sK0),'const.option.NONE_0') = s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK5(sK4,sK0)))) | s('type.option.option'(sK0),'const.option.NONE_0') = s('type.option.option'(sK0),sK4) | ($spl3 | $spl8 | $spl24)),
  inference(superposition,[],[f1784,f4740])).
fof(f4740,plain,(
  s(bool,'T_0') = s(bool,'const.closSem.check_loc_5'(s('type.option.option'(sK0),sK4),s('type.option.option'(sK0),'const.option.NONE_0'),s('type.num.num',sK2),s('type.num.num',sK2),s('type.num.num',sK1))) | ($spl3 | $spl8 | $spl24)),
  inference(backward_demodulation,[],[f4722,f1223])).
fof(f4722,plain,(
  s('type.num.num',sK2) = s('type.num.num',sK3) | ($spl3 | $spl8 | $spl24)),
  inference(subsumption_resolution,[],[f4721,f151])).
fof(f4721,plain,(
  s('type.num.num',sK2) = s('type.num.num',sK3) | s('type.option.option'(sK0),'const.option.NONE_0') = s('type.option.option'(sK0),sK4) | ($spl8 | $spl24)),
  inference(subsumption_resolution,[],[f4703,f156])).
fof(f4703,plain,(
  ~p(s(bool,'T_0')) | s('type.num.num',sK2) = s('type.num.num',sK3) | s('type.option.option'(sK0),'const.option.NONE_0') = s('type.option.option'(sK0),sK4) | $spl24),
  inference(superposition,[],[f1398,f1223])).
fof(f1398,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (~p(s(bool,'const.closSem.check_loc_5'(s('type.option.option'(X0),X1),s('type.option.option'(X0),X2),s('type.num.num',X3),s('type.num.num',X4),s('type.num.num',X5)))) | s('type.num.num',X3) = s('type.num.num',X4) | s('type.option.option'(X0),'const.option.NONE_0') = s('type.option.option'(X0),X1)) )),
  inference(superposition,[],[f137,f130])).
fof(f130,plain,(
  ( ! [X0,X1] : (s('type.option.option'(X0),X1) = s('type.option.option'(X0),'const.option.SOME_1'(s(X0,sK5(X1,X0)))) | s('type.option.option'(X0),'const.option.NONE_0') = s('type.option.option'(X0),X1)) )),
  inference(cnf_transformation,[],[f87])).
fof(f87,plain,(
  ! [X0,X1] : (s('type.option.option'(X0),'const.option.NONE_0') = s('type.option.option'(X0),X1) | s('type.option.option'(X0),X1) = s('type.option.option'(X0),'const.option.SOME_1'(s(X0,sK5(X1,X0)))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK5])],[f48])).
fof(f48,plain,(
  ! [X0,X1] : (s('type.option.option'(X0),'const.option.NONE_0') = s('type.option.option'(X0),X1) | ? [X2] : s('type.option.option'(X0),X1) = s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X2))))),
  inference(flattening,[],[f47])).
fof(f47,plain,(
  ! [X0] : ! [X1] : (s('type.option.option'(X0),'const.option.NONE_0') = s('type.option.option'(X0),X1) | ? [X2] : s('type.option.option'(X0),X1) = s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X2))))),
  inference(rectify,[],[f26])).
fof(f26,axiom,(
  ! [X6] : ! [X21] : (s('type.option.option'(X6),'const.option.NONE_0') = s('type.option.option'(X6),X21) | ? [X14] : s('type.option.option'(X6),X21) = s('type.option.option'(X6),'const.option.SOME_1'(s(X6,X14))))),
  file('thm.clos_mtiProof.check_loc_second_NONE','thm.option.option_nchotomy')).
fof(f137,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (~p(s(bool,'const.closSem.check_loc_5'(s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X1))),s('type.option.option'(X0),X2),s('type.num.num',X3),s('type.num.num',X4),s('type.num.num',X5)))) | s('type.num.num',X3) = s('type.num.num',X4)) )),
  inference(cnf_transformation,[],[f91])).
fof(f91,plain,(
  ! [X0,X1,X2,X3,X4,X5] : ((~p(s(bool,'const.closSem.check_loc_5'(s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X1))),s('type.option.option'(X0),X2),s('type.num.num',X3),s('type.num.num',X4),s('type.num.num',X5)))) | (s('type.num.num',X3) = s('type.num.num',X4) & s('type.num.num','const.num.|48|_0') = s('type.num.num',X5) & s('type.option.option'(X0),X2) = s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X1))))) & (s('type.num.num',X3) != s('type.num.num',X4) | s('type.num.num','const.num.|48|_0') != s('type.num.num',X5) | s('type.option.option'(X0),X2) != s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X1))) | p(s(bool,'const.closSem.check_loc_5'(s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X1))),s('type.option.option'(X0),X2),s('type.num.num',X3),s('type.num.num',X4),s('type.num.num',X5))))))),
  inference(flattening,[],[f90])).
fof(f90,plain,(
  ! [X0,X1,X2,X3,X4,X5] : ((~p(s(bool,'const.closSem.check_loc_5'(s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X1))),s('type.option.option'(X0),X2),s('type.num.num',X3),s('type.num.num',X4),s('type.num.num',X5)))) | (s('type.num.num',X3) = s('type.num.num',X4) & s('type.num.num','const.num.|48|_0') = s('type.num.num',X5) & s('type.option.option'(X0),X2) = s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X1))))) & ((s('type.num.num',X3) != s('type.num.num',X4) | s('type.num.num','const.num.|48|_0') != s('type.num.num',X5) | s('type.option.option'(X0),X2) != s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X1)))) | p(s(bool,'const.closSem.check_loc_5'(s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X1))),s('type.option.option'(X0),X2),s('type.num.num',X3),s('type.num.num',X4),s('type.num.num',X5))))))),
  inference(nnf_transformation,[],[f58])).
fof(f58,plain,(
  ! [X0,X1,X2,X3,X4,X5] : (p(s(bool,'const.closSem.check_loc_5'(s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X1))),s('type.option.option'(X0),X2),s('type.num.num',X3),s('type.num.num',X4),s('type.num.num',X5)))) <=> (s('type.num.num',X3) = s('type.num.num',X4) & s('type.num.num','const.num.|48|_0') = s('type.num.num',X5) & s('type.option.option'(X0),X2) = s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X1)))))),
  inference(flattening,[],[f57])).
fof(f57,plain,(
  ! [X0] : ! [X1,X2,X3,X4,X5] : (p(s(bool,'const.closSem.check_loc_5'(s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X1))),s('type.option.option'(X0),X2),s('type.num.num',X3),s('type.num.num',X4),s('type.num.num',X5)))) <=> (s('type.num.num',X3) = s('type.num.num',X4) & s('type.num.num','const.num.|48|_0') = s('type.num.num',X5) & s('type.option.option'(X0),X2) = s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X1)))))),
  inference(rectify,[],[f25])).
fof(f25,axiom,(
  ! [X6] : ! [X20,X16,X17,X18,X19] : (p(s(bool,'const.closSem.check_loc_5'(s('type.option.option'(X6),'const.option.SOME_1'(s(X6,X20))),s('type.option.option'(X6),X16),s('type.num.num',X17),s('type.num.num',X18),s('type.num.num',X19)))) <=> (s('type.num.num',X17) = s('type.num.num',X18) & s('type.num.num','const.num.|48|_0') = s('type.num.num',X19) & s('type.option.option'(X6),X16) = s('type.option.option'(X6),'const.option.SOME_1'(s(X6,X20)))))),
  file('thm.clos_mtiProof.check_loc_second_NONE','thm.closSem.check_loc_def|split|1')).
fof(f1784,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (~p(s(bool,'const.closSem.check_loc_5'(s('type.option.option'(X0),X1),s('type.option.option'(X0),X2),s('type.num.num',X3),s('type.num.num',X4),s('type.num.num',X5)))) | s('type.option.option'(X0),X2) = s('type.option.option'(X0),'const.option.SOME_1'(s(X0,sK5(X1,X0)))) | s('type.option.option'(X0),'const.option.NONE_0') = s('type.option.option'(X0),X1)) )),
  inference(superposition,[],[f139,f130])).
fof(f139,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (~p(s(bool,'const.closSem.check_loc_5'(s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X1))),s('type.option.option'(X0),X2),s('type.num.num',X3),s('type.num.num',X4),s('type.num.num',X5)))) | s('type.option.option'(X0),X2) = s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X1)))) )),
  inference(cnf_transformation,[],[f91])).
% SZS output end Proof for thm.clos_mtiProof
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 129
% Passive clauses: 1709
% Generated clauses: 11197
% Final active clauses: 89
% Final passive clauses: 1380
% Input formulas: 26
% Initial clauses: 53
% 
% Duplicate literals: 549
% Trivial inequalities: 171
% Fw subsumption resolutions: 1676
% Fw demodulations: 1183
% Bw demodulations: 35
% 
% Simple tautologies: 299
% Equational tautologies: 42
% Forward subsumptions: 5231
% Fw demodulations to eq. taut.: 4
% Bw demodulations to eq. taut.: 1
% 
% Binary resolution: 532
% Factoring: 2
% Forward superposition: 3749
% Backward superposition: 2950
% Self superposition: 104
% Equality factoring: 86
% Equality resolution: 21
% 
% Split clauses: 242
% Split components: 504
% SAT solver clauses: 522
% SAT solver unit clauses: 21
% SAT solver binary clauses: 132
% SAT solver learnt clauses: 3
% SAT solver learnt literals: 2
% 
% Sat splits: 242
% Sat splitting refutations: 2
% 
% TWLsolver clauses: 518
% TWLsolver calls for satisfiability: 158
% 
% Memory used [KB]: 4861
% Time elapsed: 0.287 s
% ------------------------------
% ------------------------------
% Success in time 0.291 s
