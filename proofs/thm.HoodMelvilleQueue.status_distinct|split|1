Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 149 next slice time: 5
dis+11_7_3 on thm.HoodMelvilleQueue
% (48818)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 124
% Passive clauses: 3173
% Generated clauses: 17490
% Final active clauses: 119
% Final passive clauses: 2900
% Input formulas: 69
% Initial clauses: 102
% 
% Duplicate literals: 617
% Trivial inequalities: 254
% Fw subsumption resolutions: 1695
% Fw demodulations: 1849
% Bw demodulations: 4
% 
% Simple tautologies: 286
% Equational tautologies: 53
% Forward subsumptions: 8904
% 
% Binary resolution: 219
% Factoring: 1
% Forward superposition: 6758
% Backward superposition: 5574
% Self superposition: 201
% Equality factoring: 98
% Equality resolution: 35
% 
% Split clauses: 261
% Split components: 523
% SAT solver clauses: 457
% SAT solver unit clauses: 11
% SAT solver binary clauses: 84
% 
% Sat splits: 261
% 
% TWLsolver clauses: 457
% TWLsolver calls for satisfiability: 119
% 
% Memory used [KB]: 18421
% Time elapsed: 0.600 s
% ------------------------------
% ------------------------------
% remaining time: 143 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.HoodMelvilleQueue
% (48847)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 92
% Passive clauses: 752
% Generated clauses: 7956
% Final active clauses: 92
% Final passive clauses: 659
% Input formulas: 69
% Initial clauses: 102
% 
% Duplicate literals: 257
% Trivial inequalities: 67
% Fw subsumption resolutions: 222
% Fw demodulations: 570
% Bw demodulations: 1
% Condensations: 599
% Global subsumptions: 8
% 
% Simple tautologies: 111
% Equational tautologies: 45
% Forward subsumptions: 4137
% 
% Binary resolution: 53
% Factoring: 1
% Forward superposition: 3346
% Backward superposition: 2274
% Self superposition: 134
% Equality factoring: 72
% Equality resolution: 21
% 
% Split clauses: 23
% Split components: 46
% SAT solver clauses: 1318
% SAT solver unit clauses: 156
% SAT solver binary clauses: 46
% SAT solver learnt clauses: 16
% 
% Sat splits: 23
% 
% TWLsolver clauses: 1286
% TWLsolver calls for satisfiability: 397
% 
% Memory used [KB]: 16886
% Time elapsed: 0.700 s
% ------------------------------
% ------------------------------
% remaining time: 136 next slice time: 103
lrs+11_2_br=off:cond=on:fde=none:gs=on:gsaa=full_model:lwlo=on:nwc=2:sas=minisat:stl=30:ssfp=100000:ssfq=1.4:smm=sco:ssnc=none:sp=occurrence:urr=on_98 on thm.HoodMelvilleQueue
% (48878)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 149
% Passive clauses: 2380
% Generated clauses: 69244
% Final active clauses: 127
% Final passive clauses: 1126
% Input formulas: 69
% Initial clauses: 102
% Discarded non-redundant clauses: 9335
% 
% Duplicate literals: 614
% Trivial inequalities: 172
% Fw subsumption resolutions: 785
% Fw demodulations: 30304
% Bw demodulations: 232
% Condensations: 1571
% Global subsumptions: 5
% 
% Simple tautologies: 181
% Equational tautologies: 110
% Forward subsumptions: 20962
% Fw demodulations to eq. taut.: 6493
% Bw demodulations to eq. taut.: 93
% 
% Unit resulting resolution: 22033
% Factoring: 1
% Forward superposition: 7486
% Backward superposition: 5235
% Self superposition: 218
% Equality factoring: 92
% Equality resolution: 31
% 
% Split clauses: 52
% Split components: 104
% SAT solver clauses: 2510
% SAT solver unit clauses: 762
% SAT solver binary clauses: 861
% 
% Sat splits: 52
% Sat splitting refutations: 19
% 
% Memory used [KB]: 157481
% Time elapsed: 10.400 s
% ------------------------------
% ------------------------------
% remaining time: 31 next slice time: 31
dis+11_5_fde=none:nwc=1:sas=minisat:sd=1:ss=axioms:st=5.0:sos=all:sdd=large:sser=off:sfr=on:ssfp=100000:ssfq=2.0:ssnc=none_37 on thm.HoodMelvilleQueue
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.HoodMelvilleQueue
% SZS output start Proof for thm.HoodMelvilleQueue
fof(f10329,plain,(
  $false),
  inference(subsumption_resolution,[],[f9419,f5466])).
fof(f5466,plain,(
  ( ! [X6,X8,X5] : (s(X5,X6) = s(X5,happ(s(fun('type.list.list'(sK0),X5),happ(s(fun('type.list.list'(sK0),fun('type.list.list'(sK0),X5)),happ(s(fun('type.num.num',fun('type.list.list'(sK0),fun('type.list.list'(sK0),X5))),X8),s('type.num.num',sK3))),s('type.list.list'(sK0),sK2))),s('type.list.list'(sK0),sK1)))) )),
  inference(superposition,[],[f198,f143])).
fof(f143,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s(X1,X2) = s(X1,'const.HoodMelvilleQueue.status_CASE_5'(s('type.HoodMelvilleQueue.status'(X0),'const.HoodMelvilleQueue.Idle_0'),s(X1,X2),s(fun('type.num.num',fun('type.list.list'(X0),fun('type.list.list'(X0),fun('type.list.list'(X0),fun('type.list.list'(X0),X1))))),X3),s(fun('type.num.num',fun('type.list.list'(X0),fun('type.list.list'(X0),X1))),X4),s(fun('type.list.list'(X0),X1),X5)))) )),
  inference(cnf_transformation,[],[f91])).
fof(f91,plain,(
  ! [X0,X1,X2,X3,X4,X5] : s(X1,X2) = s(X1,'const.HoodMelvilleQueue.status_CASE_5'(s('type.HoodMelvilleQueue.status'(X0),'const.HoodMelvilleQueue.Idle_0'),s(X1,X2),s(fun('type.num.num',fun('type.list.list'(X0),fun('type.list.list'(X0),fun('type.list.list'(X0),fun('type.list.list'(X0),X1))))),X3),s(fun('type.num.num',fun('type.list.list'(X0),fun('type.list.list'(X0),X1))),X4),s(fun('type.list.list'(X0),X1),X5)))),
  inference(flattening,[],[f90])).
fof(f90,plain,(
  ! [X0,X1] : ! [X2,X3,X4,X5] : s(X1,X2) = s(X1,'const.HoodMelvilleQueue.status_CASE_5'(s('type.HoodMelvilleQueue.status'(X0),'const.HoodMelvilleQueue.Idle_0'),s(X1,X2),s(fun('type.num.num',fun('type.list.list'(X0),fun('type.list.list'(X0),fun('type.list.list'(X0),fun('type.list.list'(X0),X1))))),X3),s(fun('type.num.num',fun('type.list.list'(X0),fun('type.list.list'(X0),X1))),X4),s(fun('type.list.list'(X0),X1),X5)))),
  inference(rectify,[],[f25])).
fof(f25,axiom,(
  ! [X6,X24] : ! [X36,X27,X37,X38] : s(X24,X36) = s(X24,'const.HoodMelvilleQueue.status_CASE_5'(s('type.HoodMelvilleQueue.status'(X6),'const.HoodMelvilleQueue.Idle_0'),s(X24,X36),s(fun('type.num.num',fun('type.list.list'(X6),fun('type.list.list'(X6),fun('type.list.list'(X6),fun('type.list.list'(X6),X24))))),X27),s(fun('type.num.num',fun('type.list.list'(X6),fun('type.list.list'(X6),X24))),X37),s(fun('type.list.list'(X6),X24),X38)))),
  file('thm.HoodMelvilleQueue.status_distinct|split|1','thm.HoodMelvilleQueue.status_case_def|split|0')).
fof(f198,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s(X0,happ(s(fun('type.list.list'(sK0),X0),happ(s(fun('type.list.list'(sK0),fun('type.list.list'(sK0),X0)),happ(s(fun('type.num.num',fun('type.list.list'(sK0),fun('type.list.list'(sK0),X0))),X1),s('type.num.num',sK3))),s('type.list.list'(sK0),sK2))),s('type.list.list'(sK0),sK1))) = s(X0,'const.HoodMelvilleQueue.status_CASE_5'(s('type.HoodMelvilleQueue.status'(sK0),'const.HoodMelvilleQueue.Idle_0'),s(X0,X2),s(fun('type.num.num',fun('type.list.list'(sK0),fun('type.list.list'(sK0),fun('type.list.list'(sK0),fun('type.list.list'(sK0),X0))))),X3),s(fun('type.num.num',fun('type.list.list'(sK0),fun('type.list.list'(sK0),X0))),X1),s(fun('type.list.list'(sK0),X0),X4)))) )),
  inference(superposition,[],[f134,f123])).
fof(f123,plain,(
  s('type.HoodMelvilleQueue.status'(sK0),'const.HoodMelvilleQueue.Idle_0') = s('type.HoodMelvilleQueue.status'(sK0),'const.HoodMelvilleQueue.Appending_3'(s('type.num.num',sK3),s('type.list.list'(sK0),sK2),s('type.list.list'(sK0),sK1)))),
  inference(cnf_transformation,[],[f109])).
fof(f109,plain,(
  s('type.HoodMelvilleQueue.status'(sK0),'const.HoodMelvilleQueue.Idle_0') = s('type.HoodMelvilleQueue.status'(sK0),'const.HoodMelvilleQueue.Appending_3'(s('type.num.num',sK3),s('type.list.list'(sK0),sK2),s('type.list.list'(sK0),sK1)))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1,sK2,sK3])],[f106])).
fof(f106,plain,(
  ? [X0,X1,X2,X3] : s('type.HoodMelvilleQueue.status'(X0),'const.HoodMelvilleQueue.Idle_0') = s('type.HoodMelvilleQueue.status'(X0),'const.HoodMelvilleQueue.Appending_3'(s('type.num.num',X3),s('type.list.list'(X0),X2),s('type.list.list'(X0),X1)))),
  inference(ennf_transformation,[],[f72])).
fof(f72,plain,(
  ~! [X0,X1,X2,X3] : s('type.HoodMelvilleQueue.status'(X0),'const.HoodMelvilleQueue.Idle_0') != s('type.HoodMelvilleQueue.status'(X0),'const.HoodMelvilleQueue.Appending_3'(s('type.num.num',X3),s('type.list.list'(X0),X2),s('type.list.list'(X0),X1)))),
  inference(flattening,[],[f71])).
fof(f71,plain,(
  ~! [X0] : ! [X1,X2,X3] : ~s('type.HoodMelvilleQueue.status'(X0),'const.HoodMelvilleQueue.Idle_0') = s('type.HoodMelvilleQueue.status'(X0),'const.HoodMelvilleQueue.Appending_3'(s('type.num.num',X3),s('type.list.list'(X0),X2),s('type.list.list'(X0),X1)))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : ! [X7,X8,X9] : ~s('type.HoodMelvilleQueue.status'(X6),'const.HoodMelvilleQueue.Idle_0') = s('type.HoodMelvilleQueue.status'(X6),'const.HoodMelvilleQueue.Appending_3'(s('type.num.num',X9),s('type.list.list'(X6),X8),s('type.list.list'(X6),X7)))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : ! [X7,X8,X9] : ~s('type.HoodMelvilleQueue.status'(X6),'const.HoodMelvilleQueue.Idle_0') = s('type.HoodMelvilleQueue.status'(X6),'const.HoodMelvilleQueue.Appending_3'(s('type.num.num',X9),s('type.list.list'(X6),X8),s('type.list.list'(X6),X7)))),
  file('thm.HoodMelvilleQueue.status_distinct|split|1','thm.HoodMelvilleQueue.status_distinct|split|1')).
fof(f134,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1] : (s(X0,happ(s(fun('type.list.list'(X1),X0),happ(s(fun('type.list.list'(X1),fun('type.list.list'(X1),X0)),happ(s(fun('type.num.num',fun('type.list.list'(X1),fun('type.list.list'(X1),X0))),X7),s('type.num.num',X2))),s('type.list.list'(X1),X3))),s('type.list.list'(X1),X4))) = s(X0,'const.HoodMelvilleQueue.status_CASE_5'(s('type.HoodMelvilleQueue.status'(X1),'const.HoodMelvilleQueue.Appending_3'(s('type.num.num',X2),s('type.list.list'(X1),X3),s('type.list.list'(X1),X4))),s(X0,X5),s(fun('type.num.num',fun('type.list.list'(X1),fun('type.list.list'(X1),fun('type.list.list'(X1),fun('type.list.list'(X1),X0))))),X6),s(fun('type.num.num',fun('type.list.list'(X1),fun('type.list.list'(X1),X0))),X7),s(fun('type.list.list'(X1),X0),X8)))) )),
  inference(cnf_transformation,[],[f79])).
fof(f79,plain,(
  ! [X0,X1,X2,X3,X4,X5,X6,X7,X8] : s(X0,happ(s(fun('type.list.list'(X1),X0),happ(s(fun('type.list.list'(X1),fun('type.list.list'(X1),X0)),happ(s(fun('type.num.num',fun('type.list.list'(X1),fun('type.list.list'(X1),X0))),X7),s('type.num.num',X2))),s('type.list.list'(X1),X3))),s('type.list.list'(X1),X4))) = s(X0,'const.HoodMelvilleQueue.status_CASE_5'(s('type.HoodMelvilleQueue.status'(X1),'const.HoodMelvilleQueue.Appending_3'(s('type.num.num',X2),s('type.list.list'(X1),X3),s('type.list.list'(X1),X4))),s(X0,X5),s(fun('type.num.num',fun('type.list.list'(X1),fun('type.list.list'(X1),fun('type.list.list'(X1),fun('type.list.list'(X1),X0))))),X6),s(fun('type.num.num',fun('type.list.list'(X1),fun('type.list.list'(X1),X0))),X7),s(fun('type.list.list'(X1),X0),X8)))),
  inference(flattening,[],[f78])).
fof(f78,plain,(
  ! [X0,X1] : ! [X2,X3,X4,X5,X6,X7,X8] : s(X0,happ(s(fun('type.list.list'(X1),X0),happ(s(fun('type.list.list'(X1),fun('type.list.list'(X1),X0)),happ(s(fun('type.num.num',fun('type.list.list'(X1),fun('type.list.list'(X1),X0))),X7),s('type.num.num',X2))),s('type.list.list'(X1),X3))),s('type.list.list'(X1),X4))) = s(X0,'const.HoodMelvilleQueue.status_CASE_5'(s('type.HoodMelvilleQueue.status'(X1),'const.HoodMelvilleQueue.Appending_3'(s('type.num.num',X2),s('type.list.list'(X1),X3),s('type.list.list'(X1),X4))),s(X0,X5),s(fun('type.num.num',fun('type.list.list'(X1),fun('type.list.list'(X1),fun('type.list.list'(X1),fun('type.list.list'(X1),X0))))),X6),s(fun('type.num.num',fun('type.list.list'(X1),fun('type.list.list'(X1),X0))),X7),s(fun('type.list.list'(X1),X0),X8)))),
  inference(rectify,[],[f21])).
fof(f21,axiom,(
  ! [X24,X6] : ! [X9,X8,X7,X36,X27,X37,X38] : s(X24,happ(s(fun('type.list.list'(X6),X24),happ(s(fun('type.list.list'(X6),fun('type.list.list'(X6),X24)),happ(s(fun('type.num.num',fun('type.list.list'(X6),fun('type.list.list'(X6),X24))),X37),s('type.num.num',X9))),s('type.list.list'(X6),X8))),s('type.list.list'(X6),X7))) = s(X24,'const.HoodMelvilleQueue.status_CASE_5'(s('type.HoodMelvilleQueue.status'(X6),'const.HoodMelvilleQueue.Appending_3'(s('type.num.num',X9),s('type.list.list'(X6),X8),s('type.list.list'(X6),X7))),s(X24,X36),s(fun('type.num.num',fun('type.list.list'(X6),fun('type.list.list'(X6),fun('type.list.list'(X6),fun('type.list.list'(X6),X24))))),X27),s(fun('type.num.num',fun('type.list.list'(X6),fun('type.list.list'(X6),X24))),X37),s(fun('type.list.list'(X6),X24),X38)))),
  file('thm.HoodMelvilleQueue.status_distinct|split|1','thm.HoodMelvilleQueue.status_case_def|split|2')).
fof(f9419,plain,(
  ( ! [X607,X601] : (s('type.HoodMelvilleQueue.status'(X601),'const.HoodMelvilleQueue.Idle_0') != s('type.HoodMelvilleQueue.status'(X601),happ(s(fun('type.list.list'(sK0),'type.HoodMelvilleQueue.status'(X601)),happ(s(fun('type.list.list'(sK0),fun('type.list.list'(sK0),'type.HoodMelvilleQueue.status'(X601))),happ(s(fun('type.num.num',fun('type.list.list'(sK0),fun('type.list.list'(sK0),'type.HoodMelvilleQueue.status'(X601)))),X607),s('type.num.num',sK3))),s('type.list.list'(sK0),sK2))),s('type.list.list'(sK0),sK1)))) )),
  inference(superposition,[],[f150,f5466])).
fof(f150,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s('type.HoodMelvilleQueue.status'(X0),'const.HoodMelvilleQueue.Idle_0') != s('type.HoodMelvilleQueue.status'(X0),'const.HoodMelvilleQueue.Reversing_5'(s('type.num.num',X5),s('type.list.list'(X0),X4),s('type.list.list'(X0),X3),s('type.list.list'(X0),X2),s('type.list.list'(X0),X1)))) )),
  inference(cnf_transformation,[],[f95])).
fof(f95,plain,(
  ! [X0,X1,X2,X3,X4,X5] : s('type.HoodMelvilleQueue.status'(X0),'const.HoodMelvilleQueue.Idle_0') != s('type.HoodMelvilleQueue.status'(X0),'const.HoodMelvilleQueue.Reversing_5'(s('type.num.num',X5),s('type.list.list'(X0),X4),s('type.list.list'(X0),X3),s('type.list.list'(X0),X2),s('type.list.list'(X0),X1)))),
  inference(flattening,[],[f94])).
fof(f94,plain,(
  ! [X0] : ! [X1,X2,X3,X4,X5] : ~s('type.HoodMelvilleQueue.status'(X0),'const.HoodMelvilleQueue.Idle_0') = s('type.HoodMelvilleQueue.status'(X0),'const.HoodMelvilleQueue.Reversing_5'(s('type.num.num',X5),s('type.list.list'(X0),X4),s('type.list.list'(X0),X3),s('type.list.list'(X0),X2),s('type.list.list'(X0),X1)))),
  inference(rectify,[],[f22])).
fof(f22,axiom,(
  ! [X6] : ! [X39,X40,X7,X8,X9] : ~s('type.HoodMelvilleQueue.status'(X6),'const.HoodMelvilleQueue.Idle_0') = s('type.HoodMelvilleQueue.status'(X6),'const.HoodMelvilleQueue.Reversing_5'(s('type.num.num',X9),s('type.list.list'(X6),X8),s('type.list.list'(X6),X7),s('type.list.list'(X6),X40),s('type.list.list'(X6),X39)))),
  file('thm.HoodMelvilleQueue.status_distinct|split|1','thm.HoodMelvilleQueue.status_distinct|split|0')).
% SZS output end Proof for thm.HoodMelvilleQueue
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 142
% Passive clauses: 3412
% Generated clauses: 10148
% Final active clauses: 122
% Final passive clauses: 3112
% Input formulas: 69
% Initial clauses: 39
% 
% Selected by SInE selection: 20
% SInE iterations: 1
% 
% Duplicate literals: 11
% Trivial inequalities: 58
% Fw subsumption resolutions: 112
% Fw demodulations: 374
% Bw demodulations: 2
% 
% Simple tautologies: 34
% Equational tautologies: 1
% Forward subsumptions: 5226
% Bw demodulations to eq. taut.: 9
% 
% Binary resolution: 18
% Forward superposition: 7241
% Backward superposition: 2162
% Self superposition: 30
% Equality resolution: 79
% 
% Split clauses: 91
% Split components: 182
% SAT solver clauses: 103
% SAT solver unit clauses: 4
% SAT solver binary clauses: 73
% 
% Sat splits: 91
% Sat splitting refutations: 9
% 
% Memory used [KB]: 11129
% Time elapsed: 0.481 s
% ------------------------------
% ------------------------------
% Success in time 12.29 s
