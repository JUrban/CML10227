Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 149 next slice time: 5
dis+11_7_3 on thm.ml_translator
% (61222)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 142
% Passive clauses: 2597
% Generated clauses: 17132
% Final active clauses: 133
% Final passive clauses: 2282
% Input formulas: 22
% Initial clauses: 37
% 
% Duplicate literals: 320
% Trivial inequalities: 596
% Fw subsumption resolutions: 1576
% Fw demodulations: 4432
% Bw demodulations: 7
% 
% Simple tautologies: 228
% Equational tautologies: 29
% Forward subsumptions: 7462
% Fw demodulations to eq. taut.: 2
% Bw demodulations to eq. taut.: 1
% 
% Binary resolution: 201
% Factoring: 1
% Forward superposition: 4303
% Backward superposition: 5535
% Self superposition: 103
% Equality factoring: 53
% Equality resolution: 19
% 
% Split clauses: 17
% Split components: 34
% SAT solver clauses: 57
% SAT solver unit clauses: 6
% SAT solver binary clauses: 47
% 
% Sat splits: 17
% Sat splitting refutations: 1
% 
% TWLsolver clauses: 57
% TWLsolver calls for satisfiability: 21
% 
% Memory used [KB]: 9083
% Time elapsed: 0.620 s
% ------------------------------
% ------------------------------
% remaining time: 143 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.ml_translator
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.ml_translator
% SZS output start Proof for thm.ml_translator
fof(f4907,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f4906,f3472,f3476,f107,f135,f147,f148,f81,f118])).
fof(f118,plain,(
  ( ! [X1] : (s('type.pair.prod'(fun('type.num.num',fun('type.one.one',fun('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),'type.ffi.oracle_result'('type.one.one')))),'type.pair.prod'('type.one.one','type.pair.prod'('type.option.option'('type.ffi.final_event'),'type.list.list'('type.ffi.io_event')))),sK0) != s('type.pair.prod'(fun('type.num.num',fun('type.one.one',fun('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),'type.ffi.oracle_result'('type.one.one')))),'type.pair.prod'('type.one.one','type.pair.prod'('type.option.option'('type.ffi.final_event'),'type.list.list'('type.ffi.io_event')))),'const.pair.,_2'(s(fun('type.num.num',fun('type.one.one',fun('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),'type.ffi.oracle_result'('type.one.one')))),'const.pair.FST_1'(s('type.pair.prod'(fun('type.num.num',fun('type.one.one',fun('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),'type.ffi.oracle_result'('type.one.one')))),'type.pair.prod'('type.one.one','type.pair.prod'('type.option.option'('type.ffi.final_event'),'type.list.list'('type.ffi.io_event')))),X1))),s('type.pair.prod'('type.one.one','type.pair.prod'('type.option.option'('type.ffi.final_event'),'type.list.list'('type.ffi.io_event'))),'const.pair.,_2'(s('type.one.one','const.pair.FST_1'(s('type.pair.prod'('type.one.one','type.pair.prod'('type.option.option'('type.ffi.final_event'),'type.list.list'('type.ffi.io_event'))),'const.pair.SND_1'(s('type.pair.prod'(fun('type.num.num',fun('type.one.one',fun('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),'type.ffi.oracle_result'('type.one.one')))),'type.pair.prod'('type.one.one','type.pair.prod'('type.option.option'('type.ffi.final_event'),'type.list.list'('type.ffi.io_event')))),X1))))),s('type.pair.prod'('type.option.option'('type.ffi.final_event'),'type.list.list'('type.ffi.io_event')),'const.pair.,_2'(s('type.option.option'('type.ffi.final_event'),'const.pair.FST_1'(s('type.pair.prod'('type.option.option'('type.ffi.final_event'),'type.list.list'('type.ffi.io_event')),'const.pair.SND_1'(s('type.pair.prod'('type.one.one','type.pair.prod'('type.option.option'('type.ffi.final_event'),'type.list.list'('type.ffi.io_event'))),'const.pair.SND_1'(s('type.pair.prod'(fun('type.num.num',fun('type.one.one',fun('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),'type.ffi.oracle_result'('type.one.one')))),'type.pair.prod'('type.one.one','type.pair.prod'('type.option.option'('type.ffi.final_event'),'type.list.list'('type.ffi.io_event')))),X1))))))),s('type.list.list'('type.ffi.io_event'),'const.pair.SND_1'(s('type.pair.prod'('type.option.option'('type.ffi.final_event'),'type.list.list'('type.ffi.io_event')),'const.pair.SND_1'(s('type.pair.prod'('type.one.one','type.pair.prod'('type.option.option'('type.ffi.final_event'),'type.list.list'('type.ffi.io_event'))),'const.pair.SND_1'(s('type.pair.prod'(fun('type.num.num',fun('type.one.one',fun('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),'type.ffi.oracle_result'('type.one.one')))),'type.pair.prod'('type.one.one','type.pair.prod'('type.option.option'('type.ffi.final_event'),'type.list.list'('type.ffi.io_event')))),X1)))))))))))))) ) | $spl0),
  inference(cnf_transformation,[],[f118_D])).
fof(f118_D,plain,(
  ( ! [X1] : (s('type.pair.prod'(fun('type.num.num',fun('type.one.one',fun('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),'type.ffi.oracle_result'('type.one.one')))),'type.pair.prod'('type.one.one','type.pair.prod'('type.option.option'('type.ffi.final_event'),'type.list.list'('type.ffi.io_event')))),sK0) != s('type.pair.prod'(fun('type.num.num',fun('type.one.one',fun('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),'type.ffi.oracle_result'('type.one.one')))),'type.pair.prod'('type.one.one','type.pair.prod'('type.option.option'('type.ffi.final_event'),'type.list.list'('type.ffi.io_event')))),'const.pair.,_2'(s(fun('type.num.num',fun('type.one.one',fun('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),'type.ffi.oracle_result'('type.one.one')))),'const.pair.FST_1'(s('type.pair.prod'(fun('type.num.num',fun('type.one.one',fun('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),'type.ffi.oracle_result'('type.one.one')))),'type.pair.prod'('type.one.one','type.pair.prod'('type.option.option'('type.ffi.final_event'),'type.list.list'('type.ffi.io_event')))),X1))),s('type.pair.prod'('type.one.one','type.pair.prod'('type.option.option'('type.ffi.final_event'),'type.list.list'('type.ffi.io_event'))),'const.pair.,_2'(s('type.one.one','const.pair.FST_1'(s('type.pair.prod'('type.one.one','type.pair.prod'('type.option.option'('type.ffi.final_event'),'type.list.list'('type.ffi.io_event'))),'const.pair.SND_1'(s('type.pair.prod'(fun('type.num.num',fun('type.one.one',fun('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),'type.ffi.oracle_result'('type.one.one')))),'type.pair.prod'('type.one.one','type.pair.prod'('type.option.option'('type.ffi.final_event'),'type.list.list'('type.ffi.io_event')))),X1))))),s('type.pair.prod'('type.option.option'('type.ffi.final_event'),'type.list.list'('type.ffi.io_event')),'const.pair.,_2'(s('type.option.option'('type.ffi.final_event'),'const.pair.FST_1'(s('type.pair.prod'('type.option.option'('type.ffi.final_event'),'type.list.list'('type.ffi.io_event')),'const.pair.SND_1'(s('type.pair.prod'('type.one.one','type.pair.prod'('type.option.option'('type.ffi.final_event'),'type.list.list'('type.ffi.io_event'))),'const.pair.SND_1'(s('type.pair.prod'(fun('type.num.num',fun('type.one.one',fun('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),'type.ffi.oracle_result'('type.one.one')))),'type.pair.prod'('type.one.one','type.pair.prod'('type.option.option'('type.ffi.final_event'),'type.list.list'('type.ffi.io_event')))),X1))))))),s('type.list.list'('type.ffi.io_event'),'const.pair.SND_1'(s('type.pair.prod'('type.option.option'('type.ffi.final_event'),'type.list.list'('type.ffi.io_event')),'const.pair.SND_1'(s('type.pair.prod'('type.one.one','type.pair.prod'('type.option.option'('type.ffi.final_event'),'type.list.list'('type.ffi.io_event'))),'const.pair.SND_1'(s('type.pair.prod'(fun('type.num.num',fun('type.one.one',fun('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),'type.ffi.oracle_result'('type.one.one')))),'type.pair.prod'('type.one.one','type.pair.prod'('type.option.option'('type.ffi.final_event'),'type.list.list'('type.ffi.io_event')))),X1)))))))))))))) ) <=> ~$spl0),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl0])])).
fof(f81,plain,(
  ( ! [X1] : (s('type.pair.prod'(fun('type.num.num',fun('type.one.one',fun('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),'type.ffi.oracle_result'('type.one.one')))),'type.pair.prod'('type.one.one','type.pair.prod'('type.option.option'('type.ffi.final_event'),'type.list.list'('type.ffi.io_event')))),sK0) != s('type.pair.prod'(fun('type.num.num',fun('type.one.one',fun('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),'type.ffi.oracle_result'('type.one.one')))),'type.pair.prod'('type.one.one','type.pair.prod'('type.option.option'('type.ffi.final_event'),'type.list.list'('type.ffi.io_event')))),'const.pair.,_2'(s(fun('type.num.num',fun('type.one.one',fun('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),'type.ffi.oracle_result'('type.one.one')))),'const.pair.FST_1'(s('type.pair.prod'(fun('type.num.num',fun('type.one.one',fun('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),'type.ffi.oracle_result'('type.one.one')))),'type.pair.prod'('type.one.one','type.pair.prod'('type.option.option'('type.ffi.final_event'),'type.list.list'('type.ffi.io_event')))),X1))),s('type.pair.prod'('type.one.one','type.pair.prod'('type.option.option'('type.ffi.final_event'),'type.list.list'('type.ffi.io_event'))),'const.pair.,_2'(s('type.one.one','const.pair.FST_1'(s('type.pair.prod'('type.one.one','type.pair.prod'('type.option.option'('type.ffi.final_event'),'type.list.list'('type.ffi.io_event'))),'const.pair.SND_1'(s('type.pair.prod'(fun('type.num.num',fun('type.one.one',fun('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),'type.ffi.oracle_result'('type.one.one')))),'type.pair.prod'('type.one.one','type.pair.prod'('type.option.option'('type.ffi.final_event'),'type.list.list'('type.ffi.io_event')))),X1))))),s('type.pair.prod'('type.option.option'('type.ffi.final_event'),'type.list.list'('type.ffi.io_event')),'const.pair.,_2'(s('type.option.option'('type.ffi.final_event'),'const.pair.FST_1'(s('type.pair.prod'('type.option.option'('type.ffi.final_event'),'type.list.list'('type.ffi.io_event')),'const.pair.SND_1'(s('type.pair.prod'('type.one.one','type.pair.prod'('type.option.option'('type.ffi.final_event'),'type.list.list'('type.ffi.io_event'))),'const.pair.SND_1'(s('type.pair.prod'(fun('type.num.num',fun('type.one.one',fun('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),'type.ffi.oracle_result'('type.one.one')))),'type.pair.prod'('type.one.one','type.pair.prod'('type.option.option'('type.ffi.final_event'),'type.list.list'('type.ffi.io_event')))),X1))))))),s('type.list.list'('type.ffi.io_event'),'const.pair.SND_1'(s('type.pair.prod'('type.option.option'('type.ffi.final_event'),'type.list.list'('type.ffi.io_event')),'const.pair.SND_1'(s('type.pair.prod'('type.one.one','type.pair.prod'('type.option.option'('type.ffi.final_event'),'type.list.list'('type.ffi.io_event'))),'const.pair.SND_1'(s('type.pair.prod'(fun('type.num.num',fun('type.one.one',fun('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),'type.ffi.oracle_result'('type.one.one')))),'type.pair.prod'('type.one.one','type.pair.prod'('type.option.option'('type.ffi.final_event'),'type.list.list'('type.ffi.io_event')))),X1)))))))))))))) )),
  inference(cnf_transformation,[],[f60])).
fof(f60,plain,(
  ! [X1] : s('type.pair.prod'(fun('type.num.num',fun('type.one.one',fun('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),'type.ffi.oracle_result'('type.one.one')))),'type.pair.prod'('type.one.one','type.pair.prod'('type.option.option'('type.ffi.final_event'),'type.list.list'('type.ffi.io_event')))),sK0) != s('type.pair.prod'(fun('type.num.num',fun('type.one.one',fun('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),'type.ffi.oracle_result'('type.one.one')))),'type.pair.prod'('type.one.one','type.pair.prod'('type.option.option'('type.ffi.final_event'),'type.list.list'('type.ffi.io_event')))),'const.pair.,_2'(s(fun('type.num.num',fun('type.one.one',fun('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),'type.ffi.oracle_result'('type.one.one')))),'const.pair.FST_1'(s('type.pair.prod'(fun('type.num.num',fun('type.one.one',fun('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),'type.ffi.oracle_result'('type.one.one')))),'type.pair.prod'('type.one.one','type.pair.prod'('type.option.option'('type.ffi.final_event'),'type.list.list'('type.ffi.io_event')))),X1))),s('type.pair.prod'('type.one.one','type.pair.prod'('type.option.option'('type.ffi.final_event'),'type.list.list'('type.ffi.io_event'))),'const.pair.,_2'(s('type.one.one','const.pair.FST_1'(s('type.pair.prod'('type.one.one','type.pair.prod'('type.option.option'('type.ffi.final_event'),'type.list.list'('type.ffi.io_event'))),'const.pair.SND_1'(s('type.pair.prod'(fun('type.num.num',fun('type.one.one',fun('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),'type.ffi.oracle_result'('type.one.one')))),'type.pair.prod'('type.one.one','type.pair.prod'('type.option.option'('type.ffi.final_event'),'type.list.list'('type.ffi.io_event')))),X1))))),s('type.pair.prod'('type.option.option'('type.ffi.final_event'),'type.list.list'('type.ffi.io_event')),'const.pair.,_2'(s('type.option.option'('type.ffi.final_event'),'const.pair.FST_1'(s('type.pair.prod'('type.option.option'('type.ffi.final_event'),'type.list.list'('type.ffi.io_event')),'const.pair.SND_1'(s('type.pair.prod'('type.one.one','type.pair.prod'('type.option.option'('type.ffi.final_event'),'type.list.list'('type.ffi.io_event'))),'const.pair.SND_1'(s('type.pair.prod'(fun('type.num.num',fun('type.one.one',fun('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),'type.ffi.oracle_result'('type.one.one')))),'type.pair.prod'('type.one.one','type.pair.prod'('type.option.option'('type.ffi.final_event'),'type.list.list'('type.ffi.io_event')))),X1))))))),s('type.list.list'('type.ffi.io_event'),'const.pair.SND_1'(s('type.pair.prod'('type.option.option'('type.ffi.final_event'),'type.list.list'('type.ffi.io_event')),'const.pair.SND_1'(s('type.pair.prod'('type.one.one','type.pair.prod'('type.option.option'('type.ffi.final_event'),'type.list.list'('type.ffi.io_event'))),'const.pair.SND_1'(s('type.pair.prod'(fun('type.num.num',fun('type.one.one',fun('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),'type.ffi.oracle_result'('type.one.one')))),'type.pair.prod'('type.one.one','type.pair.prod'('type.option.option'('type.ffi.final_event'),'type.list.list'('type.ffi.io_event')))),X1)))))))))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0])],[f56])).
fof(f56,plain,(
  ? [X0] : ! [X1] : s('type.pair.prod'(fun('type.num.num',fun('type.one.one',fun('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),'type.ffi.oracle_result'('type.one.one')))),'type.pair.prod'('type.one.one','type.pair.prod'('type.option.option'('type.ffi.final_event'),'type.list.list'('type.ffi.io_event')))),X0) != s('type.pair.prod'(fun('type.num.num',fun('type.one.one',fun('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),'type.ffi.oracle_result'('type.one.one')))),'type.pair.prod'('type.one.one','type.pair.prod'('type.option.option'('type.ffi.final_event'),'type.list.list'('type.ffi.io_event')))),'const.pair.,_2'(s(fun('type.num.num',fun('type.one.one',fun('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),'type.ffi.oracle_result'('type.one.one')))),'const.pair.FST_1'(s('type.pair.prod'(fun('type.num.num',fun('type.one.one',fun('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),'type.ffi.oracle_result'('type.one.one')))),'type.pair.prod'('type.one.one','type.pair.prod'('type.option.option'('type.ffi.final_event'),'type.list.list'('type.ffi.io_event')))),X1))),s('type.pair.prod'('type.one.one','type.pair.prod'('type.option.option'('type.ffi.final_event'),'type.list.list'('type.ffi.io_event'))),'const.pair.,_2'(s('type.one.one','const.pair.FST_1'(s('type.pair.prod'('type.one.one','type.pair.prod'('type.option.option'('type.ffi.final_event'),'type.list.list'('type.ffi.io_event'))),'const.pair.SND_1'(s('type.pair.prod'(fun('type.num.num',fun('type.one.one',fun('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),'type.ffi.oracle_result'('type.one.one')))),'type.pair.prod'('type.one.one','type.pair.prod'('type.option.option'('type.ffi.final_event'),'type.list.list'('type.ffi.io_event')))),X1))))),s('type.pair.prod'('type.option.option'('type.ffi.final_event'),'type.list.list'('type.ffi.io_event')),'const.pair.,_2'(s('type.option.option'('type.ffi.final_event'),'const.pair.FST_1'(s('type.pair.prod'('type.option.option'('type.ffi.final_event'),'type.list.list'('type.ffi.io_event')),'const.pair.SND_1'(s('type.pair.prod'('type.one.one','type.pair.prod'('type.option.option'('type.ffi.final_event'),'type.list.list'('type.ffi.io_event'))),'const.pair.SND_1'(s('type.pair.prod'(fun('type.num.num',fun('type.one.one',fun('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),'type.ffi.oracle_result'('type.one.one')))),'type.pair.prod'('type.one.one','type.pair.prod'('type.option.option'('type.ffi.final_event'),'type.list.list'('type.ffi.io_event')))),X1))))))),s('type.list.list'('type.ffi.io_event'),'const.pair.SND_1'(s('type.pair.prod'('type.option.option'('type.ffi.final_event'),'type.list.list'('type.ffi.io_event')),'const.pair.SND_1'(s('type.pair.prod'('type.one.one','type.pair.prod'('type.option.option'('type.ffi.final_event'),'type.list.list'('type.ffi.io_event'))),'const.pair.SND_1'(s('type.pair.prod'(fun('type.num.num',fun('type.one.one',fun('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),'type.ffi.oracle_result'('type.one.one')))),'type.pair.prod'('type.one.one','type.pair.prod'('type.option.option'('type.ffi.final_event'),'type.list.list'('type.ffi.io_event')))),X1)))))))))))))),
  inference(ennf_transformation,[],[f24])).
fof(f24,plain,(
  ~! [X0] : ? [X1] : s('type.pair.prod'(fun('type.num.num',fun('type.one.one',fun('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),'type.ffi.oracle_result'('type.one.one')))),'type.pair.prod'('type.one.one','type.pair.prod'('type.option.option'('type.ffi.final_event'),'type.list.list'('type.ffi.io_event')))),X0) = s('type.pair.prod'(fun('type.num.num',fun('type.one.one',fun('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),'type.ffi.oracle_result'('type.one.one')))),'type.pair.prod'('type.one.one','type.pair.prod'('type.option.option'('type.ffi.final_event'),'type.list.list'('type.ffi.io_event')))),'const.pair.,_2'(s(fun('type.num.num',fun('type.one.one',fun('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),'type.ffi.oracle_result'('type.one.one')))),'const.pair.FST_1'(s('type.pair.prod'(fun('type.num.num',fun('type.one.one',fun('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),'type.ffi.oracle_result'('type.one.one')))),'type.pair.prod'('type.one.one','type.pair.prod'('type.option.option'('type.ffi.final_event'),'type.list.list'('type.ffi.io_event')))),X1))),s('type.pair.prod'('type.one.one','type.pair.prod'('type.option.option'('type.ffi.final_event'),'type.list.list'('type.ffi.io_event'))),'const.pair.,_2'(s('type.one.one','const.pair.FST_1'(s('type.pair.prod'('type.one.one','type.pair.prod'('type.option.option'('type.ffi.final_event'),'type.list.list'('type.ffi.io_event'))),'const.pair.SND_1'(s('type.pair.prod'(fun('type.num.num',fun('type.one.one',fun('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),'type.ffi.oracle_result'('type.one.one')))),'type.pair.prod'('type.one.one','type.pair.prod'('type.option.option'('type.ffi.final_event'),'type.list.list'('type.ffi.io_event')))),X1))))),s('type.pair.prod'('type.option.option'('type.ffi.final_event'),'type.list.list'('type.ffi.io_event')),'const.pair.,_2'(s('type.option.option'('type.ffi.final_event'),'const.pair.FST_1'(s('type.pair.prod'('type.option.option'('type.ffi.final_event'),'type.list.list'('type.ffi.io_event')),'const.pair.SND_1'(s('type.pair.prod'('type.one.one','type.pair.prod'('type.option.option'('type.ffi.final_event'),'type.list.list'('type.ffi.io_event'))),'const.pair.SND_1'(s('type.pair.prod'(fun('type.num.num',fun('type.one.one',fun('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),'type.ffi.oracle_result'('type.one.one')))),'type.pair.prod'('type.one.one','type.pair.prod'('type.option.option'('type.ffi.final_event'),'type.list.list'('type.ffi.io_event')))),X1))))))),s('type.list.list'('type.ffi.io_event'),'const.pair.SND_1'(s('type.pair.prod'('type.option.option'('type.ffi.final_event'),'type.list.list'('type.ffi.io_event')),'const.pair.SND_1'(s('type.pair.prod'('type.one.one','type.pair.prod'('type.option.option'('type.ffi.final_event'),'type.list.list'('type.ffi.io_event'))),'const.pair.SND_1'(s('type.pair.prod'(fun('type.num.num',fun('type.one.one',fun('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),'type.ffi.oracle_result'('type.one.one')))),'type.pair.prod'('type.one.one','type.pair.prod'('type.option.option'('type.ffi.final_event'),'type.list.list'('type.ffi.io_event')))),X1)))))))))))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : ? [X7] : s('type.pair.prod'(fun('type.num.num',fun('type.one.one',fun('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),'type.ffi.oracle_result'('type.one.one')))),'type.pair.prod'('type.one.one','type.pair.prod'('type.option.option'('type.ffi.final_event'),'type.list.list'('type.ffi.io_event')))),X6) = s('type.pair.prod'(fun('type.num.num',fun('type.one.one',fun('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),'type.ffi.oracle_result'('type.one.one')))),'type.pair.prod'('type.one.one','type.pair.prod'('type.option.option'('type.ffi.final_event'),'type.list.list'('type.ffi.io_event')))),'const.pair.,_2'(s(fun('type.num.num',fun('type.one.one',fun('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),'type.ffi.oracle_result'('type.one.one')))),'const.pair.FST_1'(s('type.pair.prod'(fun('type.num.num',fun('type.one.one',fun('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),'type.ffi.oracle_result'('type.one.one')))),'type.pair.prod'('type.one.one','type.pair.prod'('type.option.option'('type.ffi.final_event'),'type.list.list'('type.ffi.io_event')))),X7))),s('type.pair.prod'('type.one.one','type.pair.prod'('type.option.option'('type.ffi.final_event'),'type.list.list'('type.ffi.io_event'))),'const.pair.,_2'(s('type.one.one','const.pair.FST_1'(s('type.pair.prod'('type.one.one','type.pair.prod'('type.option.option'('type.ffi.final_event'),'type.list.list'('type.ffi.io_event'))),'const.pair.SND_1'(s('type.pair.prod'(fun('type.num.num',fun('type.one.one',fun('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),'type.ffi.oracle_result'('type.one.one')))),'type.pair.prod'('type.one.one','type.pair.prod'('type.option.option'('type.ffi.final_event'),'type.list.list'('type.ffi.io_event')))),X7))))),s('type.pair.prod'('type.option.option'('type.ffi.final_event'),'type.list.list'('type.ffi.io_event')),'const.pair.,_2'(s('type.option.option'('type.ffi.final_event'),'const.pair.FST_1'(s('type.pair.prod'('type.option.option'('type.ffi.final_event'),'type.list.list'('type.ffi.io_event')),'const.pair.SND_1'(s('type.pair.prod'('type.one.one','type.pair.prod'('type.option.option'('type.ffi.final_event'),'type.list.list'('type.ffi.io_event'))),'const.pair.SND_1'(s('type.pair.prod'(fun('type.num.num',fun('type.one.one',fun('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),'type.ffi.oracle_result'('type.one.one')))),'type.pair.prod'('type.one.one','type.pair.prod'('type.option.option'('type.ffi.final_event'),'type.list.list'('type.ffi.io_event')))),X7))))))),s('type.list.list'('type.ffi.io_event'),'const.pair.SND_1'(s('type.pair.prod'('type.option.option'('type.ffi.final_event'),'type.list.list'('type.ffi.io_event')),'const.pair.SND_1'(s('type.pair.prod'('type.one.one','type.pair.prod'('type.option.option'('type.ffi.final_event'),'type.list.list'('type.ffi.io_event'))),'const.pair.SND_1'(s('type.pair.prod'(fun('type.num.num',fun('type.one.one',fun('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),'type.ffi.oracle_result'('type.one.one')))),'type.pair.prod'('type.one.one','type.pair.prod'('type.option.option'('type.ffi.final_event'),'type.list.list'('type.ffi.io_event')))),X7)))))))))))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : ? [X7] : s('type.pair.prod'(fun('type.num.num',fun('type.one.one',fun('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),'type.ffi.oracle_result'('type.one.one')))),'type.pair.prod'('type.one.one','type.pair.prod'('type.option.option'('type.ffi.final_event'),'type.list.list'('type.ffi.io_event')))),X6) = s('type.pair.prod'(fun('type.num.num',fun('type.one.one',fun('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),'type.ffi.oracle_result'('type.one.one')))),'type.pair.prod'('type.one.one','type.pair.prod'('type.option.option'('type.ffi.final_event'),'type.list.list'('type.ffi.io_event')))),'const.pair.,_2'(s(fun('type.num.num',fun('type.one.one',fun('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),'type.ffi.oracle_result'('type.one.one')))),'const.pair.FST_1'(s('type.pair.prod'(fun('type.num.num',fun('type.one.one',fun('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),'type.ffi.oracle_result'('type.one.one')))),'type.pair.prod'('type.one.one','type.pair.prod'('type.option.option'('type.ffi.final_event'),'type.list.list'('type.ffi.io_event')))),X7))),s('type.pair.prod'('type.one.one','type.pair.prod'('type.option.option'('type.ffi.final_event'),'type.list.list'('type.ffi.io_event'))),'const.pair.,_2'(s('type.one.one','const.pair.FST_1'(s('type.pair.prod'('type.one.one','type.pair.prod'('type.option.option'('type.ffi.final_event'),'type.list.list'('type.ffi.io_event'))),'const.pair.SND_1'(s('type.pair.prod'(fun('type.num.num',fun('type.one.one',fun('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),'type.ffi.oracle_result'('type.one.one')))),'type.pair.prod'('type.one.one','type.pair.prod'('type.option.option'('type.ffi.final_event'),'type.list.list'('type.ffi.io_event')))),X7))))),s('type.pair.prod'('type.option.option'('type.ffi.final_event'),'type.list.list'('type.ffi.io_event')),'const.pair.,_2'(s('type.option.option'('type.ffi.final_event'),'const.pair.FST_1'(s('type.pair.prod'('type.option.option'('type.ffi.final_event'),'type.list.list'('type.ffi.io_event')),'const.pair.SND_1'(s('type.pair.prod'('type.one.one','type.pair.prod'('type.option.option'('type.ffi.final_event'),'type.list.list'('type.ffi.io_event'))),'const.pair.SND_1'(s('type.pair.prod'(fun('type.num.num',fun('type.one.one',fun('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),'type.ffi.oracle_result'('type.one.one')))),'type.pair.prod'('type.one.one','type.pair.prod'('type.option.option'('type.ffi.final_event'),'type.list.list'('type.ffi.io_event')))),X7))))))),s('type.list.list'('type.ffi.io_event'),'const.pair.SND_1'(s('type.pair.prod'('type.option.option'('type.ffi.final_event'),'type.list.list'('type.ffi.io_event')),'const.pair.SND_1'(s('type.pair.prod'('type.one.one','type.pair.prod'('type.option.option'('type.ffi.final_event'),'type.list.list'('type.ffi.io_event'))),'const.pair.SND_1'(s('type.pair.prod'(fun('type.num.num',fun('type.one.one',fun('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),'type.ffi.oracle_result'('type.one.one')))),'type.pair.prod'('type.one.one','type.pair.prod'('type.option.option'('type.ffi.final_event'),'type.list.list'('type.ffi.io_event')))),X7)))))))))))))),
  file('thm.ml_translator.ml_translator_58_prove_ltb','thm.ml_translator.ml_translator_58_prove_ltb')).
fof(f148,plain,(
  ( ! [X1] : (s('type.pair.prod'(fun('type.num.num',fun('type.one.one',fun('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),'type.ffi.oracle_result'('type.one.one')))),'type.pair.prod'('type.one.one','type.pair.prod'('type.option.option'('type.ffi.final_event'),'type.list.list'('type.ffi.io_event')))),sK0) != s('type.pair.prod'(fun('type.num.num',fun('type.one.one',fun('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),'type.ffi.oracle_result'('type.one.one')))),'type.pair.prod'('type.one.one','type.pair.prod'('type.option.option'('type.ffi.final_event'),'type.list.list'('type.ffi.io_event')))),'const.pair.,_2'(s(fun('type.num.num',fun('type.one.one',fun('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),'type.ffi.oracle_result'('type.one.one')))),'const.pair.FST_1'(s('type.pair.prod'(fun('type.num.num',fun('type.one.one',fun('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),'type.ffi.oracle_result'('type.one.one')))),'type.pair.prod'('type.one.one','type.pair.prod'('type.option.option'('type.ffi.final_event'),'type.list.list'('type.ffi.io_event')))),X1))),s('type.pair.prod'('type.one.one','type.pair.prod'('type.option.option'('type.ffi.final_event'),'type.list.list'('type.ffi.io_event'))),'const.pair.SND_1'(s('type.pair.prod'(fun('type.num.num',fun('type.one.one',fun('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),'type.ffi.oracle_result'('type.one.one')))),'type.pair.prod'('type.one.one','type.pair.prod'('type.option.option'('type.ffi.final_event'),'type.list.list'('type.ffi.io_event')))),X1)))))) ) | $spl52),
  inference(cnf_transformation,[],[f148_D])).
fof(f148_D,plain,(
  ( ! [X1] : (s('type.pair.prod'(fun('type.num.num',fun('type.one.one',fun('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),'type.ffi.oracle_result'('type.one.one')))),'type.pair.prod'('type.one.one','type.pair.prod'('type.option.option'('type.ffi.final_event'),'type.list.list'('type.ffi.io_event')))),sK0) != s('type.pair.prod'(fun('type.num.num',fun('type.one.one',fun('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),'type.ffi.oracle_result'('type.one.one')))),'type.pair.prod'('type.one.one','type.pair.prod'('type.option.option'('type.ffi.final_event'),'type.list.list'('type.ffi.io_event')))),'const.pair.,_2'(s(fun('type.num.num',fun('type.one.one',fun('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),'type.ffi.oracle_result'('type.one.one')))),'const.pair.FST_1'(s('type.pair.prod'(fun('type.num.num',fun('type.one.one',fun('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),'type.ffi.oracle_result'('type.one.one')))),'type.pair.prod'('type.one.one','type.pair.prod'('type.option.option'('type.ffi.final_event'),'type.list.list'('type.ffi.io_event')))),X1))),s('type.pair.prod'('type.one.one','type.pair.prod'('type.option.option'('type.ffi.final_event'),'type.list.list'('type.ffi.io_event'))),'const.pair.SND_1'(s('type.pair.prod'(fun('type.num.num',fun('type.one.one',fun('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),'type.ffi.oracle_result'('type.one.one')))),'type.pair.prod'('type.one.one','type.pair.prod'('type.option.option'('type.ffi.final_event'),'type.list.list'('type.ffi.io_event')))),X1)))))) ) <=> ~$spl52),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl52])])).
fof(f147,plain,(
  ( ! [X1] : (s('type.pair.prod'(fun('type.num.num',fun('type.one.one',fun('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),'type.ffi.oracle_result'('type.one.one')))),'type.pair.prod'('type.one.one','type.pair.prod'('type.option.option'('type.ffi.final_event'),'type.list.list'('type.ffi.io_event')))),sK0) != s('type.pair.prod'(fun('type.num.num',fun('type.one.one',fun('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),'type.ffi.oracle_result'('type.one.one')))),'type.pair.prod'('type.one.one','type.pair.prod'('type.option.option'('type.ffi.final_event'),'type.list.list'('type.ffi.io_event')))),'const.pair.,_2'(s(fun('type.num.num',fun('type.one.one',fun('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),'type.ffi.oracle_result'('type.one.one')))),'const.pair.FST_1'(s('type.pair.prod'(fun('type.num.num',fun('type.one.one',fun('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),'type.ffi.oracle_result'('type.one.one')))),'type.pair.prod'('type.one.one','type.pair.prod'('type.option.option'('type.ffi.final_event'),'type.list.list'('type.ffi.io_event')))),X1))),s('type.pair.prod'('type.one.one','type.pair.prod'('type.option.option'('type.ffi.final_event'),'type.list.list'('type.ffi.io_event'))),'const.pair.SND_1'(s('type.pair.prod'(fun('type.num.num',fun('type.one.one',fun('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),'type.ffi.oracle_result'('type.one.one')))),'type.pair.prod'('type.one.one','type.pair.prod'('type.option.option'('type.ffi.final_event'),'type.list.list'('type.ffi.io_event')))),X1)))))) ) | ($spl0 | $spl30)),
  inference(forward_demodulation,[],[f146,f135])).
fof(f146,plain,(
  ( ! [X1] : (s('type.pair.prod'(fun('type.num.num',fun('type.one.one',fun('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),'type.ffi.oracle_result'('type.one.one')))),'type.pair.prod'('type.one.one','type.pair.prod'('type.option.option'('type.ffi.final_event'),'type.list.list'('type.ffi.io_event')))),sK0) != s('type.pair.prod'(fun('type.num.num',fun('type.one.one',fun('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),'type.ffi.oracle_result'('type.one.one')))),'type.pair.prod'('type.one.one','type.pair.prod'('type.option.option'('type.ffi.final_event'),'type.list.list'('type.ffi.io_event')))),'const.pair.,_2'(s(fun('type.num.num',fun('type.one.one',fun('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),'type.ffi.oracle_result'('type.one.one')))),'const.pair.FST_1'(s('type.pair.prod'(fun('type.num.num',fun('type.one.one',fun('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),'type.ffi.oracle_result'('type.one.one')))),'type.pair.prod'('type.one.one','type.pair.prod'('type.option.option'('type.ffi.final_event'),'type.list.list'('type.ffi.io_event')))),X1))),s('type.pair.prod'('type.one.one','type.pair.prod'('type.option.option'('type.ffi.final_event'),'type.list.list'('type.ffi.io_event'))),'const.pair.,_2'(s('type.one.one','const.pair.FST_1'(s('type.pair.prod'('type.one.one','type.pair.prod'('type.option.option'('type.ffi.final_event'),'type.list.list'('type.ffi.io_event'))),'const.pair.SND_1'(s('type.pair.prod'(fun('type.num.num',fun('type.one.one',fun('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),'type.ffi.oracle_result'('type.one.one')))),'type.pair.prod'('type.one.one','type.pair.prod'('type.option.option'('type.ffi.final_event'),'type.list.list'('type.ffi.io_event')))),X1))))),s('type.pair.prod'('type.option.option'('type.ffi.final_event'),'type.list.list'('type.ffi.io_event')),'const.pair.SND_1'(s('type.pair.prod'('type.one.one','type.pair.prod'('type.option.option'('type.ffi.final_event'),'type.list.list'('type.ffi.io_event'))),'const.pair.SND_1'(s('type.pair.prod'(fun('type.num.num',fun('type.one.one',fun('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),'type.ffi.oracle_result'('type.one.one')))),'type.pair.prod'('type.one.one','type.pair.prod'('type.option.option'('type.ffi.final_event'),'type.list.list'('type.ffi.io_event')))),X1)))))))))) ) | ($spl0 | $spl30)),
  inference(forward_demodulation,[],[f118,f135])).
fof(f135,plain,(
  ( ! [X2,X0,X1] : (s('type.pair.prod'(X0,X1),X2) = s('type.pair.prod'(X0,X1),'const.pair.,_2'(s(X0,'const.pair.FST_1'(s('type.pair.prod'(X0,X1),X2))),s(X1,'const.pair.SND_1'(s('type.pair.prod'(X0,X1),X2)))))) ) | $spl30),
  inference(cnf_transformation,[],[f135_D])).
fof(f135_D,plain,(
  ( ! [X2,X0,X1] : (s('type.pair.prod'(X0,X1),X2) = s('type.pair.prod'(X0,X1),'const.pair.,_2'(s(X0,'const.pair.FST_1'(s('type.pair.prod'(X0,X1),X2))),s(X1,'const.pair.SND_1'(s('type.pair.prod'(X0,X1),X2)))))) ) <=> ~$spl30),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl30])])).
fof(f107,plain,(
  ( ! [X2,X0,X1] : (s('type.pair.prod'(X0,X1),X2) = s('type.pair.prod'(X0,X1),'const.pair.,_2'(s(X0,'const.pair.FST_1'(s('type.pair.prod'(X0,X1),X2))),s(X1,'const.pair.SND_1'(s('type.pair.prod'(X0,X1),X2)))))) )),
  inference(cnf_transformation,[],[f43])).
fof(f43,plain,(
  ! [X0,X1,X2] : s('type.pair.prod'(X0,X1),X2) = s('type.pair.prod'(X0,X1),'const.pair.,_2'(s(X0,'const.pair.FST_1'(s('type.pair.prod'(X0,X1),X2))),s(X1,'const.pair.SND_1'(s('type.pair.prod'(X0,X1),X2)))))),
  inference(flattening,[],[f42])).
fof(f42,plain,(
  ! [X0,X1] : ! [X2] : s('type.pair.prod'(X0,X1),X2) = s('type.pair.prod'(X0,X1),'const.pair.,_2'(s(X0,'const.pair.FST_1'(s('type.pair.prod'(X0,X1),X2))),s(X1,'const.pair.SND_1'(s('type.pair.prod'(X0,X1),X2)))))),
  inference(rectify,[],[f18])).
fof(f18,axiom,(
  ! [X10,X15] : ! [X7] : s('type.pair.prod'(X10,X15),X7) = s('type.pair.prod'(X10,X15),'const.pair.,_2'(s(X10,'const.pair.FST_1'(s('type.pair.prod'(X10,X15),X7))),s(X15,'const.pair.SND_1'(s('type.pair.prod'(X10,X15),X7)))))),
  file('thm.ml_translator.ml_translator_58_prove_ltb','thm.pair.PAIR')).
fof(f3476,plain,(
  ( ! [X0] : (s('type.pair.prod'(fun('type.num.num',fun('type.one.one',fun('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),'type.ffi.oracle_result'('type.one.one')))),'type.pair.prod'('type.one.one','type.pair.prod'('type.option.option'('type.ffi.final_event'),'type.list.list'('type.ffi.io_event')))),sK0) != s('type.pair.prod'(fun('type.num.num',fun('type.one.one',fun('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),'type.ffi.oracle_result'('type.one.one')))),'type.pair.prod'('type.one.one','type.pair.prod'('type.option.option'('type.ffi.final_event'),'type.list.list'('type.ffi.io_event')))),X0)) ) | $spl620),
  inference(cnf_transformation,[],[f3476_D])).
fof(f3476_D,plain,(
  ( ! [X0] : (s('type.pair.prod'(fun('type.num.num',fun('type.one.one',fun('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),'type.ffi.oracle_result'('type.one.one')))),'type.pair.prod'('type.one.one','type.pair.prod'('type.option.option'('type.ffi.final_event'),'type.list.list'('type.ffi.io_event')))),sK0) != s('type.pair.prod'(fun('type.num.num',fun('type.one.one',fun('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),'type.ffi.oracle_result'('type.one.one')))),'type.pair.prod'('type.one.one','type.pair.prod'('type.option.option'('type.ffi.final_event'),'type.list.list'('type.ffi.io_event')))),X0)) ) <=> ~$spl620),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl620])])).
fof(f3472,plain,(
  ( ! [X0] : (s('type.pair.prod'(fun('type.num.num',fun('type.one.one',fun('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),'type.ffi.oracle_result'('type.one.one')))),'type.pair.prod'('type.one.one','type.pair.prod'('type.option.option'('type.ffi.final_event'),'type.list.list'('type.ffi.io_event')))),sK0) != s('type.pair.prod'(fun('type.num.num',fun('type.one.one',fun('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),'type.ffi.oracle_result'('type.one.one')))),'type.pair.prod'('type.one.one','type.pair.prod'('type.option.option'('type.ffi.final_event'),'type.list.list'('type.ffi.io_event')))),X0)) ) | ($spl30 | $spl52)),
  inference(superposition,[],[f148,f135])).
fof(f4906,plain,(
  $false | $spl620),
  inference(equality_resolution,[],[f3476])).
% SZS output end Proof for thm.ml_translator
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 62
% Passive clauses: 416
% Generated clauses: 4746
% Final active clauses: 58
% Final passive clauses: 354
% Input formulas: 22
% Initial clauses: 37
% 
% Duplicate literals: 265
% Trivial inequalities: 83
% Fw subsumption resolutions: 323
% Fw demodulations: 402
% Bw demodulations: 4
% Condensations: 493
% 
% Simple tautologies: 122
% Equational tautologies: 34
% Forward subsumptions: 1763
% Fw demodulations to eq. taut.: 2
% 
% Binary resolution: 122
% Factoring: 1
% Forward superposition: 1202
% Backward superposition: 1235
% Self superposition: 70
% Equality factoring: 68
% Equality resolution: 13
% 
% Split clauses: 39
% Split components: 78
% SAT solver clauses: 875
% SAT solver unit clauses: 41
% SAT solver binary clauses: 40
% SAT solver learnt clauses: 1
% 
% Sat splits: 39
% Sat splitting refutations: 1
% 
% TWLsolver clauses: 874
% TWLsolver calls for satisfiability: 203
% 
% Memory used [KB]: 4733
% Time elapsed: 0.402 s
% ------------------------------
% ------------------------------
% Success in time 1.05 s
