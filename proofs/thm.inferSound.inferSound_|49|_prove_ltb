Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 149 next slice time: 5
dis+11_7_3 on thm.inferSound
% (117987)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 1021
% Passive clauses: 5737
% Generated clauses: 23532
% Final active clauses: 857
% Final passive clauses: 4388
% Input formulas: 261
% Initial clauses: 832
% 
% Duplicate literals: 164
% Trivial inequalities: 69
% Fw subsumption resolutions: 1769
% Fw demodulations: 1399
% Bw demodulations: 161
% 
% Simple tautologies: 291
% Equational tautologies: 28
% Forward subsumptions: 13940
% Fw demodulations to eq. taut.: 4
% Bw demodulations to eq. taut.: 1
% 
% Binary resolution: 5637
% Factoring: 510
% Forward superposition: 5744
% Backward superposition: 7053
% Self superposition: 41
% Equality factoring: 2
% Equality resolution: 12
% 
% Split clauses: 275
% Split components: 552
% SAT solver clauses: 463
% SAT solver unit clauses: 13
% SAT solver binary clauses: 107
% 
% Sat splits: 275
% Sat splitting refutations: 1
% 
% TWLsolver clauses: 463
% TWLsolver calls for satisfiability: 380
% 
% Memory used [KB]: 12920
% Time elapsed: 0.600 s
% ------------------------------
% ------------------------------
% remaining time: 143 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.inferSound
% (118006)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 821
% Passive clauses: 3424
% Generated clauses: 26649
% Final active clauses: 795
% Final passive clauses: 2503
% Input formulas: 261
% Initial clauses: 832
% 
% Duplicate literals: 118
% Trivial inequalities: 31
% Fw subsumption resolutions: 813
% Fw demodulations: 1969
% Bw demodulations: 101
% Condensations: 91
% Global subsumptions: 58
% 
% Simple tautologies: 308
% Equational tautologies: 13
% Forward subsumptions: 15751
% Fw demodulations to eq. taut.: 7
% Bw demodulations to eq. taut.: 3
% 
% Binary resolution: 2772
% Factoring: 306
% Forward superposition: 8188
% Backward superposition: 7796
% Self superposition: 74
% Equality factoring: 2
% Equality resolution: 11
% 
% Split clauses: 11
% Split components: 22
% SAT solver clauses: 5014
% SAT solver unit clauses: 1026
% SAT solver binary clauses: 387
% SAT solver learnt clauses: 121
% SAT solver learnt literals: 90
% 
% Sat splits: 11
% Sat splitting refutations: 48
% 
% TWLsolver clauses: 4775
% TWLsolver calls for satisfiability: 11576
% 
% Memory used [KB]: 25969
% Time elapsed: 0.700 s
% ------------------------------
% ------------------------------
% remaining time: 136 next slice time: 103
lrs+11_2_br=off:cond=on:fde=none:gs=on:gsaa=full_model:lwlo=on:nwc=2:sas=minisat:stl=30:ssfp=100000:ssfq=1.4:smm=sco:ssnc=none:sp=occurrence:urr=on_98 on thm.inferSound
% (118032)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 1577
% Passive clauses: 11674
% Generated clauses: 269004
% Final active clauses: 1253
% Final passive clauses: 5409
% Input formulas: 261
% Initial clauses: 832
% Discarded non-redundant clauses: 79
% 
% Duplicate literals: 12
% Trivial inequalities: 49
% Fw subsumption resolutions: 2526
% Fw demodulations: 116802
% Bw demodulations: 2508
% Condensations: 45
% Global subsumptions: 3
% 
% Simple tautologies: 171
% Equational tautologies: 61
% Forward subsumptions: 79619
% Fw demodulations to eq. taut.: 55308
% Bw demodulations to eq. taut.: 231
% 
% Unit resulting resolution: 99322
% Factoring: 4
% Forward superposition: 22128
% Backward superposition: 22463
% Self superposition: 185
% Equality factoring: 2
% Equality resolution: 19
% 
% Split clauses: 20
% Split components: 40
% SAT solver clauses: 14433
% SAT solver unit clauses: 7619
% SAT solver binary clauses: 4965
% 
% Sat splits: 20
% Sat splitting refutations: 2714
% 
% Memory used [KB]: 206350
% Time elapsed: 10.400 s
% ------------------------------
% ------------------------------
% remaining time: 31 next slice time: 31
dis+11_5_fde=none:nwc=1:sas=minisat:sd=1:ss=axioms:st=5.0:sos=all:sdd=large:sser=off:sfr=on:ssfp=100000:ssfq=2.0:ssnc=none_37 on thm.inferSound
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.inferSound
% SZS output start Proof for thm.inferSound
fof(f121940,plain,(
  $false),
  inference(equality_resolution,[],[f121900])).
fof(f121900,plain,(
  ( ! [X0] : (s('type.num.num',sK17) != s('type.num.num',X0)) )),
  inference(subsumption_resolution,[],[f1960,f42985])).
fof(f42985,plain,(
  ( ! [X2,X0,X1] : (s('type.option.option'('type.pair.prod'('type.num.num','type.ast.t')),'const.typeSystem.lookup_tenv_val_3'(s('type.list.list'('type.string.char'),sK14),s('type.num.num',X0),s('type.typeSystem.tenv_val',sK15))) != s('type.option.option'('type.pair.prod'('type.num.num','type.ast.t')),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.ast.t'),'const.pair.,_2'(s('type.num.num',X1),s('type.ast.t',X2)))))) )),
  inference(equality_resolution,[],[f1059])).
fof(f1059,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s('type.option.option'('type.pair.prod'('type.num.num','type.ast.t')),'const.typeSystem.lookup_tenv_val_3'(s('type.list.list'('type.string.char'),sK14),s('type.num.num',sK19),s('type.typeSystem.tenv_val',sK15))) != s('type.option.option'('type.pair.prod'('type.num.num','type.ast.t')),'const.typeSystem.lookup_tenv_val_3'(s('type.list.list'('type.string.char'),X5),s('type.num.num',X1),s('type.typeSystem.tenv_val',X3))) | s('type.option.option'('type.pair.prod'('type.num.num','type.ast.t')),'const.typeSystem.lookup_tenv_val_3'(s('type.list.list'('type.string.char'),X5),s('type.num.num',X4),s('type.typeSystem.tenv_val',X3))) != s('type.option.option'('type.pair.prod'('type.num.num','type.ast.t')),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.ast.t'),'const.pair.,_2'(s('type.num.num',X0),s('type.ast.t',X2)))))) )),
  inference(superposition,[],[f558,f614])).
fof(f614,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s('type.option.option'('type.pair.prod'('type.num.num','type.ast.t')),'const.typeSystem.lookup_tenv_val_3'(s('type.list.list'('type.string.char'),X0),s('type.num.num',X5),s('type.typeSystem.tenv_val',X2))) = s('type.option.option'('type.pair.prod'('type.num.num','type.ast.t')),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.ast.t'),'const.pair.,_2'(s('type.num.num',X3),s('type.ast.t','const.typeSystem.deBruijn_inc_3'(s('type.num.num',X3),s('type.num.num',X5),s('type.ast.t',sK22(X5,X4,X3,X2,X1,X0)))))))) | s('type.option.option'('type.pair.prod'('type.num.num','type.ast.t')),'const.typeSystem.lookup_tenv_val_3'(s('type.list.list'('type.string.char'),X0),s('type.num.num',X1),s('type.typeSystem.tenv_val',X2))) != s('type.option.option'('type.pair.prod'('type.num.num','type.ast.t')),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.ast.t'),'const.pair.,_2'(s('type.num.num',X3),s('type.ast.t',X4)))))) )),
  inference(cnf_transformation,[],[f458])).
fof(f458,plain,(
  ! [X0,X1,X2,X3,X4,X5] : (s('type.option.option'('type.pair.prod'('type.num.num','type.ast.t')),'const.typeSystem.lookup_tenv_val_3'(s('type.list.list'('type.string.char'),X0),s('type.num.num',X1),s('type.typeSystem.tenv_val',X2))) != s('type.option.option'('type.pair.prod'('type.num.num','type.ast.t')),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.ast.t'),'const.pair.,_2'(s('type.num.num',X3),s('type.ast.t',X4))))) | (s('type.ast.t',X4) = s('type.ast.t','const.typeSystem.deBruijn_inc_3'(s('type.num.num',X3),s('type.num.num',X1),s('type.ast.t',sK22(X5,X4,X3,X2,X1,X0)))) & s('type.option.option'('type.pair.prod'('type.num.num','type.ast.t')),'const.typeSystem.lookup_tenv_val_3'(s('type.list.list'('type.string.char'),X0),s('type.num.num',X5),s('type.typeSystem.tenv_val',X2))) = s('type.option.option'('type.pair.prod'('type.num.num','type.ast.t')),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.ast.t'),'const.pair.,_2'(s('type.num.num',X3),s('type.ast.t','const.typeSystem.deBruijn_inc_3'(s('type.num.num',X3),s('type.num.num',X5),s('type.ast.t',sK22(X5,X4,X3,X2,X1,X0))))))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK22])],[f372])).
fof(f372,plain,(
  ! [X0,X1,X2,X3,X4,X5] : (s('type.option.option'('type.pair.prod'('type.num.num','type.ast.t')),'const.typeSystem.lookup_tenv_val_3'(s('type.list.list'('type.string.char'),X0),s('type.num.num',X1),s('type.typeSystem.tenv_val',X2))) != s('type.option.option'('type.pair.prod'('type.num.num','type.ast.t')),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.ast.t'),'const.pair.,_2'(s('type.num.num',X3),s('type.ast.t',X4))))) | ? [X6] : (s('type.ast.t',X4) = s('type.ast.t','const.typeSystem.deBruijn_inc_3'(s('type.num.num',X3),s('type.num.num',X1),s('type.ast.t',X6))) & s('type.option.option'('type.pair.prod'('type.num.num','type.ast.t')),'const.typeSystem.lookup_tenv_val_3'(s('type.list.list'('type.string.char'),X0),s('type.num.num',X5),s('type.typeSystem.tenv_val',X2))) = s('type.option.option'('type.pair.prod'('type.num.num','type.ast.t')),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.ast.t'),'const.pair.,_2'(s('type.num.num',X3),s('type.ast.t','const.typeSystem.deBruijn_inc_3'(s('type.num.num',X3),s('type.num.num',X5),s('type.ast.t',X6)))))))))),
  inference(ennf_transformation,[],[f285])).
fof(f285,plain,(
  ! [X0,X1,X2,X3,X4,X5] : (s('type.option.option'('type.pair.prod'('type.num.num','type.ast.t')),'const.typeSystem.lookup_tenv_val_3'(s('type.list.list'('type.string.char'),X0),s('type.num.num',X1),s('type.typeSystem.tenv_val',X2))) = s('type.option.option'('type.pair.prod'('type.num.num','type.ast.t')),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.ast.t'),'const.pair.,_2'(s('type.num.num',X3),s('type.ast.t',X4))))) => ? [X6] : (s('type.ast.t',X4) = s('type.ast.t','const.typeSystem.deBruijn_inc_3'(s('type.num.num',X3),s('type.num.num',X1),s('type.ast.t',X6))) & s('type.option.option'('type.pair.prod'('type.num.num','type.ast.t')),'const.typeSystem.lookup_tenv_val_3'(s('type.list.list'('type.string.char'),X0),s('type.num.num',X5),s('type.typeSystem.tenv_val',X2))) = s('type.option.option'('type.pair.prod'('type.num.num','type.ast.t')),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.ast.t'),'const.pair.,_2'(s('type.num.num',X3),s('type.ast.t','const.typeSystem.deBruijn_inc_3'(s('type.num.num',X3),s('type.num.num',X5),s('type.ast.t',X6)))))))))),
  inference(rectify,[],[f13])).
fof(f13,axiom,(
  ! [X8,X15,X33,X9,X10,X34] : (s('type.option.option'('type.pair.prod'('type.num.num','type.ast.t')),'const.typeSystem.lookup_tenv_val_3'(s('type.list.list'('type.string.char'),X8),s('type.num.num',X15),s('type.typeSystem.tenv_val',X33))) = s('type.option.option'('type.pair.prod'('type.num.num','type.ast.t')),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.ast.t'),'const.pair.,_2'(s('type.num.num',X9),s('type.ast.t',X10))))) => ? [X13] : (s('type.ast.t',X10) = s('type.ast.t','const.typeSystem.deBruijn_inc_3'(s('type.num.num',X9),s('type.num.num',X15),s('type.ast.t',X13))) & s('type.option.option'('type.pair.prod'('type.num.num','type.ast.t')),'const.typeSystem.lookup_tenv_val_3'(s('type.list.list'('type.string.char'),X8),s('type.num.num',X34),s('type.typeSystem.tenv_val',X33))) = s('type.option.option'('type.pair.prod'('type.num.num','type.ast.t')),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.ast.t'),'const.pair.,_2'(s('type.num.num',X9),s('type.ast.t','const.typeSystem.deBruijn_inc_3'(s('type.num.num',X9),s('type.num.num',X34),s('type.ast.t',X13)))))))))),
  file('thm.inferSound.inferSound_|49|_prove_ltb','thm.typeSysProps.typeSysProps_63_prove_ltb')).
fof(f558,plain,(
  ( ! [X6,X7] : (s('type.option.option'('type.pair.prod'('type.num.num','type.ast.t')),'const.typeSystem.lookup_tenv_val_3'(s('type.list.list'('type.string.char'),sK14),s('type.num.num',sK19),s('type.typeSystem.tenv_val',sK15))) != s('type.option.option'('type.pair.prod'('type.num.num','type.ast.t')),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.ast.t'),'const.pair.,_2'(s('type.num.num',X6),s('type.ast.t',X7)))))) )),
  inference(cnf_transformation,[],[f434])).
fof(f434,plain,(
  s('type.option.option'('type.pair.prod'('type.num.num','type.ast.t')),'const.typeSystem.lookup_tenv_val_3'(s('type.list.list'('type.string.char'),sK14),s('type.num.num',sK16),s('type.typeSystem.tenv_val',sK15))) = s('type.option.option'('type.pair.prod'('type.num.num','type.ast.t')),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.ast.t'),'const.pair.,_2'(s('type.num.num',sK17),s('type.ast.t',sK18))))) & ! [X6,X7] : s('type.option.option'('type.pair.prod'('type.num.num','type.ast.t')),'const.typeSystem.lookup_tenv_val_3'(s('type.list.list'('type.string.char'),sK14),s('type.num.num',sK19),s('type.typeSystem.tenv_val',sK15))) != s('type.option.option'('type.pair.prod'('type.num.num','type.ast.t')),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.ast.t'),'const.pair.,_2'(s('type.num.num',X6),s('type.ast.t',X7)))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK14,sK15,sK16,sK17,sK18,sK19])],[f367])).
fof(f367,plain,(
  ? [X0,X1,X2,X3,X4] : (s('type.option.option'('type.pair.prod'('type.num.num','type.ast.t')),'const.typeSystem.lookup_tenv_val_3'(s('type.list.list'('type.string.char'),X0),s('type.num.num',X2),s('type.typeSystem.tenv_val',X1))) = s('type.option.option'('type.pair.prod'('type.num.num','type.ast.t')),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.ast.t'),'const.pair.,_2'(s('type.num.num',X3),s('type.ast.t',X4))))) & ? [X5] : ! [X6,X7] : s('type.option.option'('type.pair.prod'('type.num.num','type.ast.t')),'const.typeSystem.lookup_tenv_val_3'(s('type.list.list'('type.string.char'),X0),s('type.num.num',X5),s('type.typeSystem.tenv_val',X1))) != s('type.option.option'('type.pair.prod'('type.num.num','type.ast.t')),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.ast.t'),'const.pair.,_2'(s('type.num.num',X6),s('type.ast.t',X7))))))),
  inference(ennf_transformation,[],[f263])).
fof(f263,plain,(
  ~! [X0,X1,X2,X3,X4] : (s('type.option.option'('type.pair.prod'('type.num.num','type.ast.t')),'const.typeSystem.lookup_tenv_val_3'(s('type.list.list'('type.string.char'),X0),s('type.num.num',X2),s('type.typeSystem.tenv_val',X1))) = s('type.option.option'('type.pair.prod'('type.num.num','type.ast.t')),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.ast.t'),'const.pair.,_2'(s('type.num.num',X3),s('type.ast.t',X4))))) => ! [X5] : ? [X6,X7] : s('type.option.option'('type.pair.prod'('type.num.num','type.ast.t')),'const.typeSystem.lookup_tenv_val_3'(s('type.list.list'('type.string.char'),X0),s('type.num.num',X5),s('type.typeSystem.tenv_val',X1))) = s('type.option.option'('type.pair.prod'('type.num.num','type.ast.t')),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.ast.t'),'const.pair.,_2'(s('type.num.num',X6),s('type.ast.t',X7))))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6,X7,X8,X9,X10] : (s('type.option.option'('type.pair.prod'('type.num.num','type.ast.t')),'const.typeSystem.lookup_tenv_val_3'(s('type.list.list'('type.string.char'),X6),s('type.num.num',X8),s('type.typeSystem.tenv_val',X7))) = s('type.option.option'('type.pair.prod'('type.num.num','type.ast.t')),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.ast.t'),'const.pair.,_2'(s('type.num.num',X9),s('type.ast.t',X10))))) => ! [X11] : ? [X12,X13] : s('type.option.option'('type.pair.prod'('type.num.num','type.ast.t')),'const.typeSystem.lookup_tenv_val_3'(s('type.list.list'('type.string.char'),X6),s('type.num.num',X11),s('type.typeSystem.tenv_val',X7))) = s('type.option.option'('type.pair.prod'('type.num.num','type.ast.t')),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.ast.t'),'const.pair.,_2'(s('type.num.num',X12),s('type.ast.t',X13))))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6,X7,X8,X9,X10] : (s('type.option.option'('type.pair.prod'('type.num.num','type.ast.t')),'const.typeSystem.lookup_tenv_val_3'(s('type.list.list'('type.string.char'),X6),s('type.num.num',X8),s('type.typeSystem.tenv_val',X7))) = s('type.option.option'('type.pair.prod'('type.num.num','type.ast.t')),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.ast.t'),'const.pair.,_2'(s('type.num.num',X9),s('type.ast.t',X10))))) => ! [X11] : ? [X12,X13] : s('type.option.option'('type.pair.prod'('type.num.num','type.ast.t')),'const.typeSystem.lookup_tenv_val_3'(s('type.list.list'('type.string.char'),X6),s('type.num.num',X11),s('type.typeSystem.tenv_val',X7))) = s('type.option.option'('type.pair.prod'('type.num.num','type.ast.t')),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.ast.t'),'const.pair.,_2'(s('type.num.num',X12),s('type.ast.t',X13))))))),
  file('thm.inferSound.inferSound_|49|_prove_ltb','thm.inferSound.inferSound_|49|_prove_ltb')).
fof(f1960,plain,(
  ( ! [X0] : (s('type.option.option'('type.pair.prod'('type.num.num','type.ast.t')),'const.typeSystem.lookup_tenv_val_3'(s('type.list.list'('type.string.char'),sK14),s('type.num.num',sK16),s('type.typeSystem.tenv_val',sK15))) = s('type.option.option'('type.pair.prod'('type.num.num','type.ast.t')),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.ast.t'),'const.pair.,_2'(s('type.num.num',X0),s('type.ast.t',sK18))))) | s('type.num.num',sK17) != s('type.num.num',X0)) )),
  inference(resolution,[],[f842,f623])).
fof(f623,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (p(s(bool,sK23(X5,X4,X3,X2,X1,X0))) | s(X1,X3) != s(X1,X5)) )),
  inference(cnf_transformation,[],[f462])).
fof(f462,plain,(
  ! [X0,X1,X2,X3,X4,X5] : ((~p(s(bool,sK23(X5,X4,X3,X2,X1,X0))) | s(X1,X3) = s(X1,X5)) & (s(X1,X3) != s(X1,X5) | p(s(bool,sK23(X5,X4,X3,X2,X1,X0)))) & s('type.option.option'(X0),'const.alist.ALOOKUP_2'(s('type.list.list'('type.pair.prod'(X1,X0)),'const.list.CONS_2'(s('type.pair.prod'(X1,X0),'const.pair.,_2'(s(X1,X3),s(X0,X2))),s('type.list.list'('type.pair.prod'(X1,X0)),X4))),s(X1,X5))) = s('type.option.option'(X0),'const.bool.COND_3'(s(bool,sK23(X5,X4,X3,X2,X1,X0)),s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X2))),s('type.option.option'(X0),'const.alist.ALOOKUP_2'(s('type.list.list'('type.pair.prod'(X1,X0)),X4),s(X1,X5))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK23])],[f461])).
fof(f461,plain,(
  ! [X0,X1,X2,X3,X4,X5] : ? [X6] : ((~p(s(bool,X6)) | s(X1,X3) = s(X1,X5)) & (s(X1,X3) != s(X1,X5) | p(s(bool,X6))) & s('type.option.option'(X0),'const.bool.COND_3'(s(bool,X6),s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X2))),s('type.option.option'(X0),'const.alist.ALOOKUP_2'(s('type.list.list'('type.pair.prod'(X1,X0)),X4),s(X1,X5))))) = s('type.option.option'(X0),'const.alist.ALOOKUP_2'(s('type.list.list'('type.pair.prod'(X1,X0)),'const.list.CONS_2'(s('type.pair.prod'(X1,X0),'const.pair.,_2'(s(X1,X3),s(X0,X2))),s('type.list.list'('type.pair.prod'(X1,X0)),X4))),s(X1,X5))))),
  inference(flattening,[],[f460])).
fof(f460,plain,(
  ! [X0,X1,X2,X3,X4,X5] : ? [X6] : (((~p(s(bool,X6)) | s(X1,X3) = s(X1,X5)) & (s(X1,X3) != s(X1,X5) | p(s(bool,X6)))) & s('type.option.option'(X0),'const.bool.COND_3'(s(bool,X6),s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X2))),s('type.option.option'(X0),'const.alist.ALOOKUP_2'(s('type.list.list'('type.pair.prod'(X1,X0)),X4),s(X1,X5))))) = s('type.option.option'(X0),'const.alist.ALOOKUP_2'(s('type.list.list'('type.pair.prod'(X1,X0)),'const.list.CONS_2'(s('type.pair.prod'(X1,X0),'const.pair.,_2'(s(X1,X3),s(X0,X2))),s('type.list.list'('type.pair.prod'(X1,X0)),X4))),s(X1,X5))))),
  inference(nnf_transformation,[],[f293])).
fof(f293,plain,(
  ! [X0,X1,X2,X3,X4,X5] : ? [X6] : ((p(s(bool,X6)) <=> s(X1,X3) = s(X1,X5)) & s('type.option.option'(X0),'const.bool.COND_3'(s(bool,X6),s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X2))),s('type.option.option'(X0),'const.alist.ALOOKUP_2'(s('type.list.list'('type.pair.prod'(X1,X0)),X4),s(X1,X5))))) = s('type.option.option'(X0),'const.alist.ALOOKUP_2'(s('type.list.list'('type.pair.prod'(X1,X0)),'const.list.CONS_2'(s('type.pair.prod'(X1,X0),'const.pair.,_2'(s(X1,X3),s(X0,X2))),s('type.list.list'('type.pair.prod'(X1,X0)),X4))),s(X1,X5))))),
  inference(flattening,[],[f292])).
fof(f292,plain,(
  ! [X0,X1] : ! [X2,X3,X4,X5] : ? [X6] : ((p(s(bool,X6)) <=> s(X1,X3) = s(X1,X5)) & s('type.option.option'(X0),'const.bool.COND_3'(s(bool,X6),s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X2))),s('type.option.option'(X0),'const.alist.ALOOKUP_2'(s('type.list.list'('type.pair.prod'(X1,X0)),X4),s(X1,X5))))) = s('type.option.option'(X0),'const.alist.ALOOKUP_2'(s('type.list.list'('type.pair.prod'(X1,X0)),'const.list.CONS_2'(s('type.pair.prod'(X1,X0),'const.pair.,_2'(s(X1,X3),s(X0,X2))),s('type.list.list'('type.pair.prod'(X1,X0)),X4))),s(X1,X5))))),
  inference(rectify,[],[f156])).
fof(f156,axiom,(
  ! [X24,X25] : ! [X75,X6,X10,X72] : ? [X18] : ((p(s(bool,X18)) <=> s(X25,X6) = s(X25,X72)) & s('type.option.option'(X24),'const.bool.COND_3'(s(bool,X18),s('type.option.option'(X24),'const.option.SOME_1'(s(X24,X75))),s('type.option.option'(X24),'const.alist.ALOOKUP_2'(s('type.list.list'('type.pair.prod'(X25,X24)),X10),s(X25,X72))))) = s('type.option.option'(X24),'const.alist.ALOOKUP_2'(s('type.list.list'('type.pair.prod'(X25,X24)),'const.list.CONS_2'(s('type.pair.prod'(X25,X24),'const.pair.,_2'(s(X25,X6),s(X24,X75))),s('type.list.list'('type.pair.prod'(X25,X24)),X10))),s(X25,X72))))),
  file('thm.inferSound.inferSound_|49|_prove_ltb','thm.alist.ALOOKUP_def|split|1')).
fof(f842,plain,(
  ( ! [X24,X23,X25,X22] : (~p(s(bool,sK23(sK17,X23,X22,X24,'type.num.num',X25))) | s('type.option.option'('type.pair.prod'('type.num.num','type.ast.t')),'const.typeSystem.lookup_tenv_val_3'(s('type.list.list'('type.string.char'),sK14),s('type.num.num',sK16),s('type.typeSystem.tenv_val',sK15))) = s('type.option.option'('type.pair.prod'('type.num.num','type.ast.t')),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.ast.t'),'const.pair.,_2'(s('type.num.num',X22),s('type.ast.t',sK18)))))) )),
  inference(superposition,[],[f557,f622])).
fof(f622,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s(X1,X3) = s(X1,X5) | ~p(s(bool,sK23(X5,X4,X3,X2,X1,X0)))) )),
  inference(cnf_transformation,[],[f462])).
fof(f557,plain,(
  s('type.option.option'('type.pair.prod'('type.num.num','type.ast.t')),'const.typeSystem.lookup_tenv_val_3'(s('type.list.list'('type.string.char'),sK14),s('type.num.num',sK16),s('type.typeSystem.tenv_val',sK15))) = s('type.option.option'('type.pair.prod'('type.num.num','type.ast.t')),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.ast.t'),'const.pair.,_2'(s('type.num.num',sK17),s('type.ast.t',sK18)))))),
  inference(cnf_transformation,[],[f434])).
% SZS output end Proof for thm.inferSound
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 2389
% Passive clauses: 54871
% Generated clauses: 124526
% Final active clauses: 1062
% Final passive clauses: 29415
% Input formulas: 261
% Initial clauses: 271
% 
% Selected by SInE selection: 73
% SInE iterations: 1
% 
% Duplicate literals: 3122
% Trivial inequalities: 424
% Fw subsumption resolutions: 7218
% Fw demodulations: 3397
% Bw demodulations: 65
% 
% Simple tautologies: 3340
% Equational tautologies: 65
% Forward subsumptions: 49789
% Fw demodulations to eq. taut.: 10
% Bw demodulations to eq. taut.: 2
% 
% Binary resolution: 74649
% Factoring: 166
% Forward superposition: 28068
% Backward superposition: 3221
% Self superposition: 22
% Equality resolution: 96
% 
% Split clauses: 4697
% Split components: 9919
% SAT solver clauses: 4942
% SAT solver unit clauses: 8
% SAT solver binary clauses: 400
% 
% Sat splits: 4697
% Sat splitting refutations: 70
% 
% Memory used [KB]: 48229
% Time elapsed: 3.144 s
% ------------------------------
% ------------------------------
% Success in time 15.05 s
