Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 149 next slice time: 5
dis+11_7_3 on thm.ml_optimise
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.ml_optimise
% SZS output start Proof for thm.ml_optimise
fof(f6699,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f6698,f223,f523,f521,f519,f517,f515,f513,f511,f509,f507,f505,f503,f501,f499,f497,f495,f493,f491,f489,f487,f485,f483,f481,f479,f477,f475,f473,f471,f469,f467,f465,f463,f461,f459,f457,f455,f453,f451,f449,f447,f445,f443,f441,f439,f6696,f6695,f6694,f6693,f6692,f6691,f6690,f6689,f6688,f6687,f6686,f6685,f6684,f6683,f6682,f6681,f6680,f6679,f6678,f6677,f4918,f4917,f4916,f4915,f4914,f4913,f4912,f4911,f4910,f4909,f4908,f4907,f4906,f4905,f4904,f4903,f4902,f4901,f4480,f4404,f4403,f6697])).
fof(f6697,plain,(
  $false | $spl62),
  inference(subsumption_resolution,[],[f501,f255])).
fof(f255,plain,(
  ( ! [X21] : (s('type.ast.exp',sK12) != s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Vsub_0'),s('type.list.list'('type.ast.exp'),X21)))) )),
  inference(cnf_transformation,[],[f138])).
fof(f138,plain,(
  (s('type.ast.exp',sK12) = s('type.ast.exp','const.ast.Raise_1'(s('type.ast.exp',sK13))) | s('type.ast.exp',sK12) = s('type.ast.exp','const.ast.Handle_2'(s('type.ast.exp',sK14),s('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),sK15))) | s('type.ast.exp',sK12) = s('type.ast.exp','const.ast.Lit_1'(s('type.ast.lit',sK16))) | s('type.ast.exp',sK12) = s('type.ast.exp','const.ast.Con_2'(s('type.option.option'('type.ast.id'('type.list.list'('type.string.char'))),sK17),s('type.list.list'('type.ast.exp'),sK18))) | s('type.ast.exp',sK12) = s('type.ast.exp','const.ast.Var_1'(s('type.ast.id'('type.list.list'('type.string.char')),sK19))) | s('type.ast.exp',sK12) = s('type.ast.exp','const.ast.Fun_2'(s('type.list.list'('type.string.char'),sK20),s('type.ast.exp',sK21))) | s('type.ast.exp',sK12) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Opn_1'(s('type.ast.opn',sK22))),s('type.list.list'('type.ast.exp'),'const.list.NIL_0'))) | s('type.ast.exp',sK12) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Opn_1'(s('type.ast.opn',sK23))),s('type.list.list'('type.ast.exp'),'const.list.CONS_2'(s('type.ast.exp',sK24),s('type.list.list'('type.ast.exp'),'const.list.NIL_0'))))) | s('type.ast.exp',sK12) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Opn_1'(s('type.ast.opn',sK25))),s('type.list.list'('type.ast.exp'),'const.list.CONS_2'(s('type.ast.exp',sK26),s('type.list.list'('type.ast.exp'),'const.list.CONS_2'(s('type.ast.exp',sK27),s('type.list.list'('type.ast.exp'),'const.list.NIL_0'))))))) | s('type.ast.exp',sK12) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Opn_1'(s('type.ast.opn',sK28))),s('type.list.list'('type.ast.exp'),'const.list.CONS_2'(s('type.ast.exp',sK29),s('type.list.list'('type.ast.exp'),'const.list.CONS_2'(s('type.ast.exp',sK30),s('type.list.list'('type.ast.exp'),'const.list.CONS_2'(s('type.ast.exp',sK31),s('type.list.list'('type.ast.exp'),sK32))))))))) | s('type.ast.exp',sK12) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Opb_1'(s('type.ast.opb',sK33))),s('type.list.list'('type.ast.exp'),sK34))) | s('type.ast.exp',sK12) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Opw_2'(s('type.ast.word_size',sK35),s('type.ast.opw',sK36))),s('type.list.list'('type.ast.exp'),sK37))) | s('type.ast.exp',sK12) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Shift_3'(s('type.ast.word_size',sK38),s('type.ast.shift',sK39),s('type.num.num',sK40))),s('type.list.list'('type.ast.exp'),sK41))) | s('type.ast.exp',sK12) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Equality_0'),s('type.list.list'('type.ast.exp'),sK42))) | s('type.ast.exp',sK12) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Opapp_0'),s('type.list.list'('type.ast.exp'),sK43))) | s('type.ast.exp',sK12) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Opassign_0'),s('type.list.list'('type.ast.exp'),sK44))) | s('type.ast.exp',sK12) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Opref_0'),s('type.list.list'('type.ast.exp'),sK45))) | s('type.ast.exp',sK12) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Opderef_0'),s('type.list.list'('type.ast.exp'),sK46))) | s('type.ast.exp',sK12) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Aw8alloc_0'),s('type.list.list'('type.ast.exp'),sK47))) | s('type.ast.exp',sK12) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Aw8sub_0'),s('type.list.list'('type.ast.exp'),sK48))) | s('type.ast.exp',sK12) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Aw8length_0'),s('type.list.list'('type.ast.exp'),sK49))) | s('type.ast.exp',sK12) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Aw8update_0'),s('type.list.list'('type.ast.exp'),sK50))) | s('type.ast.exp',sK12) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.WordFromInt_1'(s('type.ast.word_size',sK51))),s('type.list.list'('type.ast.exp'),sK52))) | s('type.ast.exp',sK12) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.WordToInt_1'(s('type.ast.word_size',sK53))),s('type.list.list'('type.ast.exp'),sK54))) | s('type.ast.exp',sK12) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Ord_0'),s('type.list.list'('type.ast.exp'),sK55))) | s('type.ast.exp',sK12) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Chr_0'),s('type.list.list'('type.ast.exp'),sK56))) | s('type.ast.exp',sK12) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Chopb_1'(s('type.ast.opb',sK57))),s('type.list.list'('type.ast.exp'),sK58))) | s('type.ast.exp',sK12) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Explode_0'),s('type.list.list'('type.ast.exp'),sK59))) | s('type.ast.exp',sK12) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Implode_0'),s('type.list.list'('type.ast.exp'),sK60))) | s('type.ast.exp',sK12) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Strlen_0'),s('type.list.list'('type.ast.exp'),sK61))) | s('type.ast.exp',sK12) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.VfromList_0'),s('type.list.list'('type.ast.exp'),sK62))) | s('type.ast.exp',sK12) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Vsub_0'),s('type.list.list'('type.ast.exp'),sK63))) | s('type.ast.exp',sK12) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Vlength_0'),s('type.list.list'('type.ast.exp'),sK64))) | s('type.ast.exp',sK12) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Aalloc_0'),s('type.list.list'('type.ast.exp'),sK65))) | s('type.ast.exp',sK12) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Asub_0'),s('type.list.list'('type.ast.exp'),sK66))) | s('type.ast.exp',sK12) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Alength_0'),s('type.list.list'('type.ast.exp'),sK67))) | s('type.ast.exp',sK12) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Aupdate_0'),s('type.list.list'('type.ast.exp'),sK68))) | s('type.ast.exp',sK12) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.FFI_1'(s('type.num.num',sK69))),s('type.list.list'('type.ast.exp'),sK70))) | s('type.ast.exp',sK12) = s('type.ast.exp','const.ast.Log_3'(s('type.ast.lop',sK71),s('type.ast.exp',sK72),s('type.ast.exp',sK73))) | s('type.ast.exp',sK12) = s('type.ast.exp','const.ast.If_3'(s('type.ast.exp',sK74),s('type.ast.exp',sK75),s('type.ast.exp',sK76))) | s('type.ast.exp',sK12) = s('type.ast.exp','const.ast.Mat_2'(s('type.ast.exp',sK77),s('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),sK78))) | s('type.ast.exp',sK12) = s('type.ast.exp','const.ast.Let_3'(s('type.option.option'('type.list.list'('type.string.char')),sK79),s('type.ast.exp',sK80),s('type.ast.exp',sK81))) | s('type.ast.exp',sK12) = s('type.ast.exp','const.ast.Letrec_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),sK82),s('type.ast.exp',sK83)))) & ! [X69,X70,X71] : s('type.ast.exp',sK12) != s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Opn_1'(s('type.ast.opn',X69))),s('type.list.list'('type.ast.exp'),'const.list.CONS_2'(s('type.ast.exp',X70),s('type.list.list'('type.ast.exp'),'const.list.CONS_2'(s('type.ast.exp',X71),s('type.list.list'('type.ast.exp'),'const.list.NIL_0'))))))) & ! [X68] : s('type.ast.exp',sK12) != s('type.ast.exp','const.ast.Raise_1'(s('type.ast.exp',X68))) & ! [X66,X67] : s('type.ast.exp',sK12) != s('type.ast.exp','const.ast.Handle_2'(s('type.ast.exp',X66),s('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),X67))) & ! [X65] : s('type.ast.exp',sK12) != s('type.ast.exp','const.ast.Lit_1'(s('type.ast.lit',X65))) & ! [X63,X64] : s('type.ast.exp',sK12) != s('type.ast.exp','const.ast.Con_2'(s('type.option.option'('type.ast.id'('type.list.list'('type.string.char'))),X63),s('type.list.list'('type.ast.exp'),X64))) & ! [X62] : s('type.ast.exp',sK12) != s('type.ast.exp','const.ast.Var_1'(s('type.ast.id'('type.list.list'('type.string.char')),X62))) & ! [X60,X61] : s('type.ast.exp',sK12) != s('type.ast.exp','const.ast.Fun_2'(s('type.list.list'('type.string.char'),X60),s('type.ast.exp',X61))) & ! [X59] : s('type.ast.exp',sK12) != s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Opn_1'(s('type.ast.opn',X59))),s('type.list.list'('type.ast.exp'),'const.list.NIL_0'))) & ! [X57,X58] : s('type.ast.exp',sK12) != s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Opn_1'(s('type.ast.opn',X57))),s('type.list.list'('type.ast.exp'),'const.list.CONS_2'(s('type.ast.exp',X58),s('type.list.list'('type.ast.exp'),'const.list.NIL_0'))))) & ! [X52,X53,X54,X55,X56] : s('type.ast.exp',sK12) != s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Opn_1'(s('type.ast.opn',X52))),s('type.list.list'('type.ast.exp'),'const.list.CONS_2'(s('type.ast.exp',X53),s('type.list.list'('type.ast.exp'),'const.list.CONS_2'(s('type.ast.exp',X54),s('type.list.list'('type.ast.exp'),'const.list.CONS_2'(s('type.ast.exp',X55),s('type.list.list'('type.ast.exp'),X56))))))))) & ! [X50,X51] : s('type.ast.exp',sK12) != s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Opb_1'(s('type.ast.opb',X50))),s('type.list.list'('type.ast.exp'),X51))) & ! [X47,X48,X49] : s('type.ast.exp',sK12) != s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Opw_2'(s('type.ast.word_size',X47),s('type.ast.opw',X48))),s('type.list.list'('type.ast.exp'),X49))) & ! [X43,X44,X45,X46] : s('type.ast.exp',sK12) != s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Shift_3'(s('type.ast.word_size',X43),s('type.ast.shift',X44),s('type.num.num',X45))),s('type.list.list'('type.ast.exp'),X46))) & ! [X42] : s('type.ast.exp',sK12) != s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Equality_0'),s('type.list.list'('type.ast.exp'),X42))) & ! [X41] : s('type.ast.exp',sK12) != s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Opapp_0'),s('type.list.list'('type.ast.exp'),X41))) & ! [X40] : s('type.ast.exp',sK12) != s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Opassign_0'),s('type.list.list'('type.ast.exp'),X40))) & ! [X39] : s('type.ast.exp',sK12) != s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Opref_0'),s('type.list.list'('type.ast.exp'),X39))) & ! [X38] : s('type.ast.exp',sK12) != s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Opderef_0'),s('type.list.list'('type.ast.exp'),X38))) & ! [X37] : s('type.ast.exp',sK12) != s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Aw8alloc_0'),s('type.list.list'('type.ast.exp'),X37))) & ! [X36] : s('type.ast.exp',sK12) != s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Aw8sub_0'),s('type.list.list'('type.ast.exp'),X36))) & ! [X35] : s('type.ast.exp',sK12) != s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Aw8length_0'),s('type.list.list'('type.ast.exp'),X35))) & ! [X34] : s('type.ast.exp',sK12) != s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Aw8update_0'),s('type.list.list'('type.ast.exp'),X34))) & ! [X32,X33] : s('type.ast.exp',sK12) != s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.WordFromInt_1'(s('type.ast.word_size',X32))),s('type.list.list'('type.ast.exp'),X33))) & ! [X30,X31] : s('type.ast.exp',sK12) != s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.WordToInt_1'(s('type.ast.word_size',X30))),s('type.list.list'('type.ast.exp'),X31))) & ! [X29] : s('type.ast.exp',sK12) != s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Ord_0'),s('type.list.list'('type.ast.exp'),X29))) & ! [X28] : s('type.ast.exp',sK12) != s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Chr_0'),s('type.list.list'('type.ast.exp'),X28))) & ! [X26,X27] : s('type.ast.exp',sK12) != s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Chopb_1'(s('type.ast.opb',X26))),s('type.list.list'('type.ast.exp'),X27))) & ! [X25] : s('type.ast.exp',sK12) != s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Explode_0'),s('type.list.list'('type.ast.exp'),X25))) & ! [X24] : s('type.ast.exp',sK12) != s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Implode_0'),s('type.list.list'('type.ast.exp'),X24))) & ! [X23] : s('type.ast.exp',sK12) != s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Strlen_0'),s('type.list.list'('type.ast.exp'),X23))) & ! [X22] : s('type.ast.exp',sK12) != s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.VfromList_0'),s('type.list.list'('type.ast.exp'),X22))) & ! [X21] : s('type.ast.exp',sK12) != s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Vsub_0'),s('type.list.list'('type.ast.exp'),X21))) & ! [X20] : s('type.ast.exp',sK12) != s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Vlength_0'),s('type.list.list'('type.ast.exp'),X20))) & ! [X19] : s('type.ast.exp',sK12) != s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Aalloc_0'),s('type.list.list'('type.ast.exp'),X19))) & ! [X18] : s('type.ast.exp',sK12) != s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Asub_0'),s('type.list.list'('type.ast.exp'),X18))) & ! [X17] : s('type.ast.exp',sK12) != s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Alength_0'),s('type.list.list'('type.ast.exp'),X17))) & ! [X16] : s('type.ast.exp',sK12) != s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Aupdate_0'),s('type.list.list'('type.ast.exp'),X16))) & ! [X14,X15] : s('type.ast.exp',sK12) != s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.FFI_1'(s('type.num.num',X14))),s('type.list.list'('type.ast.exp'),X15))) & ! [X11,X12,X13] : s('type.ast.exp',sK12) != s('type.ast.exp','const.ast.Log_3'(s('type.ast.lop',X11),s('type.ast.exp',X12),s('type.ast.exp',X13))) & ! [X8,X9,X10] : s('type.ast.exp',sK12) != s('type.ast.exp','const.ast.If_3'(s('type.ast.exp',X8),s('type.ast.exp',X9),s('type.ast.exp',X10))) & ! [X6,X7] : s('type.ast.exp',sK12) != s('type.ast.exp','const.ast.Mat_2'(s('type.ast.exp',X6),s('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),X7))) & ! [X3,X4,X5] : s('type.ast.exp',sK12) != s('type.ast.exp','const.ast.Let_3'(s('type.option.option'('type.list.list'('type.string.char')),X3),s('type.ast.exp',X4),s('type.ast.exp',X5))) & ! [X1,X2] : s('type.ast.exp',sK12) != s('type.ast.exp','const.ast.Letrec_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),X1),s('type.ast.exp',X2)))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK12,sK13,sK14,sK15,sK16,sK17,sK18,sK19,sK20,sK21,sK22,sK23,sK24,sK25,sK26,sK27,sK28,sK29,sK30,sK31,sK32,sK33,sK34,sK35,sK36,sK37,sK38,sK39,sK40,sK41,sK42,sK43,sK44,sK45,sK46,sK47,sK48,sK49,sK50,sK51,sK52,sK53,sK54,sK55,sK56,sK57,sK58,sK59,sK60,sK61,sK62,sK63,sK64,sK65,sK66,sK67,sK68,sK69,sK70,sK71,sK72,sK73,sK74,sK75,sK76,sK77,sK78,sK79,sK80,sK81,sK82,sK83])],[f137])).
fof(f137,plain,(
  ? [X0] : ((? [X142] : s('type.ast.exp',X0) = s('type.ast.exp','const.ast.Raise_1'(s('type.ast.exp',X142))) | ? [X140,X141] : s('type.ast.exp',X0) = s('type.ast.exp','const.ast.Handle_2'(s('type.ast.exp',X140),s('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),X141))) | ? [X139] : s('type.ast.exp',X0) = s('type.ast.exp','const.ast.Lit_1'(s('type.ast.lit',X139))) | ? [X137,X138] : s('type.ast.exp',X0) = s('type.ast.exp','const.ast.Con_2'(s('type.option.option'('type.ast.id'('type.list.list'('type.string.char'))),X137),s('type.list.list'('type.ast.exp'),X138))) | ? [X136] : s('type.ast.exp',X0) = s('type.ast.exp','const.ast.Var_1'(s('type.ast.id'('type.list.list'('type.string.char')),X136))) | ? [X134,X135] : s('type.ast.exp',X0) = s('type.ast.exp','const.ast.Fun_2'(s('type.list.list'('type.string.char'),X134),s('type.ast.exp',X135))) | ? [X133] : s('type.ast.exp',X0) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Opn_1'(s('type.ast.opn',X133))),s('type.list.list'('type.ast.exp'),'const.list.NIL_0'))) | ? [X131,X132] : s('type.ast.exp',X0) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Opn_1'(s('type.ast.opn',X131))),s('type.list.list'('type.ast.exp'),'const.list.CONS_2'(s('type.ast.exp',X132),s('type.list.list'('type.ast.exp'),'const.list.NIL_0'))))) | ? [X128,X129,X130] : s('type.ast.exp',X0) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Opn_1'(s('type.ast.opn',X128))),s('type.list.list'('type.ast.exp'),'const.list.CONS_2'(s('type.ast.exp',X129),s('type.list.list'('type.ast.exp'),'const.list.CONS_2'(s('type.ast.exp',X130),s('type.list.list'('type.ast.exp'),'const.list.NIL_0'))))))) | ? [X123,X124,X125,X126,X127] : s('type.ast.exp',X0) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Opn_1'(s('type.ast.opn',X123))),s('type.list.list'('type.ast.exp'),'const.list.CONS_2'(s('type.ast.exp',X124),s('type.list.list'('type.ast.exp'),'const.list.CONS_2'(s('type.ast.exp',X125),s('type.list.list'('type.ast.exp'),'const.list.CONS_2'(s('type.ast.exp',X126),s('type.list.list'('type.ast.exp'),X127))))))))) | ? [X121,X122] : s('type.ast.exp',X0) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Opb_1'(s('type.ast.opb',X121))),s('type.list.list'('type.ast.exp'),X122))) | ? [X118,X119,X120] : s('type.ast.exp',X0) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Opw_2'(s('type.ast.word_size',X118),s('type.ast.opw',X119))),s('type.list.list'('type.ast.exp'),X120))) | ? [X114,X115,X116,X117] : s('type.ast.exp',X0) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Shift_3'(s('type.ast.word_size',X114),s('type.ast.shift',X115),s('type.num.num',X116))),s('type.list.list'('type.ast.exp'),X117))) | ? [X113] : s('type.ast.exp',X0) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Equality_0'),s('type.list.list'('type.ast.exp'),X113))) | ? [X112] : s('type.ast.exp',X0) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Opapp_0'),s('type.list.list'('type.ast.exp'),X112))) | ? [X111] : s('type.ast.exp',X0) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Opassign_0'),s('type.list.list'('type.ast.exp'),X111))) | ? [X110] : s('type.ast.exp',X0) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Opref_0'),s('type.list.list'('type.ast.exp'),X110))) | ? [X109] : s('type.ast.exp',X0) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Opderef_0'),s('type.list.list'('type.ast.exp'),X109))) | ? [X108] : s('type.ast.exp',X0) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Aw8alloc_0'),s('type.list.list'('type.ast.exp'),X108))) | ? [X107] : s('type.ast.exp',X0) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Aw8sub_0'),s('type.list.list'('type.ast.exp'),X107))) | ? [X106] : s('type.ast.exp',X0) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Aw8length_0'),s('type.list.list'('type.ast.exp'),X106))) | ? [X105] : s('type.ast.exp',X0) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Aw8update_0'),s('type.list.list'('type.ast.exp'),X105))) | ? [X103,X104] : s('type.ast.exp',X0) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.WordFromInt_1'(s('type.ast.word_size',X103))),s('type.list.list'('type.ast.exp'),X104))) | ? [X101,X102] : s('type.ast.exp',X0) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.WordToInt_1'(s('type.ast.word_size',X101))),s('type.list.list'('type.ast.exp'),X102))) | ? [X100] : s('type.ast.exp',X0) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Ord_0'),s('type.list.list'('type.ast.exp'),X100))) | ? [X99] : s('type.ast.exp',X0) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Chr_0'),s('type.list.list'('type.ast.exp'),X99))) | ? [X97,X98] : s('type.ast.exp',X0) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Chopb_1'(s('type.ast.opb',X97))),s('type.list.list'('type.ast.exp'),X98))) | ? [X96] : s('type.ast.exp',X0) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Explode_0'),s('type.list.list'('type.ast.exp'),X96))) | ? [X95] : s('type.ast.exp',X0) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Implode_0'),s('type.list.list'('type.ast.exp'),X95))) | ? [X94] : s('type.ast.exp',X0) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Strlen_0'),s('type.list.list'('type.ast.exp'),X94))) | ? [X93] : s('type.ast.exp',X0) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.VfromList_0'),s('type.list.list'('type.ast.exp'),X93))) | ? [X92] : s('type.ast.exp',X0) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Vsub_0'),s('type.list.list'('type.ast.exp'),X92))) | ? [X91] : s('type.ast.exp',X0) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Vlength_0'),s('type.list.list'('type.ast.exp'),X91))) | ? [X90] : s('type.ast.exp',X0) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Aalloc_0'),s('type.list.list'('type.ast.exp'),X90))) | ? [X89] : s('type.ast.exp',X0) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Asub_0'),s('type.list.list'('type.ast.exp'),X89))) | ? [X88] : s('type.ast.exp',X0) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Alength_0'),s('type.list.list'('type.ast.exp'),X88))) | ? [X87] : s('type.ast.exp',X0) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Aupdate_0'),s('type.list.list'('type.ast.exp'),X87))) | ? [X85,X86] : s('type.ast.exp',X0) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.FFI_1'(s('type.num.num',X85))),s('type.list.list'('type.ast.exp'),X86))) | ? [X82,X83,X84] : s('type.ast.exp',X0) = s('type.ast.exp','const.ast.Log_3'(s('type.ast.lop',X82),s('type.ast.exp',X83),s('type.ast.exp',X84))) | ? [X79,X80,X81] : s('type.ast.exp',X0) = s('type.ast.exp','const.ast.If_3'(s('type.ast.exp',X79),s('type.ast.exp',X80),s('type.ast.exp',X81))) | ? [X77,X78] : s('type.ast.exp',X0) = s('type.ast.exp','const.ast.Mat_2'(s('type.ast.exp',X77),s('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),X78))) | ? [X74,X75,X76] : s('type.ast.exp',X0) = s('type.ast.exp','const.ast.Let_3'(s('type.option.option'('type.list.list'('type.string.char')),X74),s('type.ast.exp',X75),s('type.ast.exp',X76))) | ? [X72,X73] : s('type.ast.exp',X0) = s('type.ast.exp','const.ast.Letrec_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),X72),s('type.ast.exp',X73)))) & ! [X69,X70,X71] : s('type.ast.exp',X0) != s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Opn_1'(s('type.ast.opn',X69))),s('type.list.list'('type.ast.exp'),'const.list.CONS_2'(s('type.ast.exp',X70),s('type.list.list'('type.ast.exp'),'const.list.CONS_2'(s('type.ast.exp',X71),s('type.list.list'('type.ast.exp'),'const.list.NIL_0'))))))) & ! [X68] : s('type.ast.exp',X0) != s('type.ast.exp','const.ast.Raise_1'(s('type.ast.exp',X68))) & ! [X66,X67] : s('type.ast.exp',X0) != s('type.ast.exp','const.ast.Handle_2'(s('type.ast.exp',X66),s('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),X67))) & ! [X65] : s('type.ast.exp',X0) != s('type.ast.exp','const.ast.Lit_1'(s('type.ast.lit',X65))) & ! [X63,X64] : s('type.ast.exp',X0) != s('type.ast.exp','const.ast.Con_2'(s('type.option.option'('type.ast.id'('type.list.list'('type.string.char'))),X63),s('type.list.list'('type.ast.exp'),X64))) & ! [X62] : s('type.ast.exp',X0) != s('type.ast.exp','const.ast.Var_1'(s('type.ast.id'('type.list.list'('type.string.char')),X62))) & ! [X60,X61] : s('type.ast.exp',X0) != s('type.ast.exp','const.ast.Fun_2'(s('type.list.list'('type.string.char'),X60),s('type.ast.exp',X61))) & ! [X59] : s('type.ast.exp',X0) != s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Opn_1'(s('type.ast.opn',X59))),s('type.list.list'('type.ast.exp'),'const.list.NIL_0'))) & ! [X57,X58] : s('type.ast.exp',X0) != s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Opn_1'(s('type.ast.opn',X57))),s('type.list.list'('type.ast.exp'),'const.list.CONS_2'(s('type.ast.exp',X58),s('type.list.list'('type.ast.exp'),'const.list.NIL_0'))))) & ! [X52,X53,X54,X55,X56] : s('type.ast.exp',X0) != s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Opn_1'(s('type.ast.opn',X52))),s('type.list.list'('type.ast.exp'),'const.list.CONS_2'(s('type.ast.exp',X53),s('type.list.list'('type.ast.exp'),'const.list.CONS_2'(s('type.ast.exp',X54),s('type.list.list'('type.ast.exp'),'const.list.CONS_2'(s('type.ast.exp',X55),s('type.list.list'('type.ast.exp'),X56))))))))) & ! [X50,X51] : s('type.ast.exp',X0) != s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Opb_1'(s('type.ast.opb',X50))),s('type.list.list'('type.ast.exp'),X51))) & ! [X47,X48,X49] : s('type.ast.exp',X0) != s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Opw_2'(s('type.ast.word_size',X47),s('type.ast.opw',X48))),s('type.list.list'('type.ast.exp'),X49))) & ! [X43,X44,X45,X46] : s('type.ast.exp',X0) != s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Shift_3'(s('type.ast.word_size',X43),s('type.ast.shift',X44),s('type.num.num',X45))),s('type.list.list'('type.ast.exp'),X46))) & ! [X42] : s('type.ast.exp',X0) != s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Equality_0'),s('type.list.list'('type.ast.exp'),X42))) & ! [X41] : s('type.ast.exp',X0) != s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Opapp_0'),s('type.list.list'('type.ast.exp'),X41))) & ! [X40] : s('type.ast.exp',X0) != s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Opassign_0'),s('type.list.list'('type.ast.exp'),X40))) & ! [X39] : s('type.ast.exp',X0) != s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Opref_0'),s('type.list.list'('type.ast.exp'),X39))) & ! [X38] : s('type.ast.exp',X0) != s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Opderef_0'),s('type.list.list'('type.ast.exp'),X38))) & ! [X37] : s('type.ast.exp',X0) != s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Aw8alloc_0'),s('type.list.list'('type.ast.exp'),X37))) & ! [X36] : s('type.ast.exp',X0) != s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Aw8sub_0'),s('type.list.list'('type.ast.exp'),X36))) & ! [X35] : s('type.ast.exp',X0) != s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Aw8length_0'),s('type.list.list'('type.ast.exp'),X35))) & ! [X34] : s('type.ast.exp',X0) != s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Aw8update_0'),s('type.list.list'('type.ast.exp'),X34))) & ! [X32,X33] : s('type.ast.exp',X0) != s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.WordFromInt_1'(s('type.ast.word_size',X32))),s('type.list.list'('type.ast.exp'),X33))) & ! [X30,X31] : s('type.ast.exp',X0) != s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.WordToInt_1'(s('type.ast.word_size',X30))),s('type.list.list'('type.ast.exp'),X31))) & ! [X29] : s('type.ast.exp',X0) != s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Ord_0'),s('type.list.list'('type.ast.exp'),X29))) & ! [X28] : s('type.ast.exp',X0) != s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Chr_0'),s('type.list.list'('type.ast.exp'),X28))) & ! [X26,X27] : s('type.ast.exp',X0) != s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Chopb_1'(s('type.ast.opb',X26))),s('type.list.list'('type.ast.exp'),X27))) & ! [X25] : s('type.ast.exp',X0) != s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Explode_0'),s('type.list.list'('type.ast.exp'),X25))) & ! [X24] : s('type.ast.exp',X0) != s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Implode_0'),s('type.list.list'('type.ast.exp'),X24))) & ! [X23] : s('type.ast.exp',X0) != s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Strlen_0'),s('type.list.list'('type.ast.exp'),X23))) & ! [X22] : s('type.ast.exp',X0) != s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.VfromList_0'),s('type.list.list'('type.ast.exp'),X22))) & ! [X21] : s('type.ast.exp',X0) != s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Vsub_0'),s('type.list.list'('type.ast.exp'),X21))) & ! [X20] : s('type.ast.exp',X0) != s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Vlength_0'),s('type.list.list'('type.ast.exp'),X20))) & ! [X19] : s('type.ast.exp',X0) != s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Aalloc_0'),s('type.list.list'('type.ast.exp'),X19))) & ! [X18] : s('type.ast.exp',X0) != s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Asub_0'),s('type.list.list'('type.ast.exp'),X18))) & ! [X17] : s('type.ast.exp',X0) != s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Alength_0'),s('type.list.list'('type.ast.exp'),X17))) & ! [X16] : s('type.ast.exp',X0) != s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Aupdate_0'),s('type.list.list'('type.ast.exp'),X16))) & ! [X14,X15] : s('type.ast.exp',X0) != s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.FFI_1'(s('type.num.num',X14))),s('type.list.list'('type.ast.exp'),X15))) & ! [X11,X12,X13] : s('type.ast.exp',X0) != s('type.ast.exp','const.ast.Log_3'(s('type.ast.lop',X11),s('type.ast.exp',X12),s('type.ast.exp',X13))) & ! [X8,X9,X10] : s('type.ast.exp',X0) != s('type.ast.exp','const.ast.If_3'(s('type.ast.exp',X8),s('type.ast.exp',X9),s('type.ast.exp',X10))) & ! [X6,X7] : s('type.ast.exp',X0) != s('type.ast.exp','const.ast.Mat_2'(s('type.ast.exp',X6),s('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),X7))) & ! [X3,X4,X5] : s('type.ast.exp',X0) != s('type.ast.exp','const.ast.Let_3'(s('type.option.option'('type.list.list'('type.string.char')),X3),s('type.ast.exp',X4),s('type.ast.exp',X5))) & ! [X1,X2] : s('type.ast.exp',X0) != s('type.ast.exp','const.ast.Letrec_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),X1),s('type.ast.exp',X2))))),
  inference(rectify,[],[f97])).
fof(f97,plain,(
  ? [X0] : ((? [X71] : s('type.ast.exp',X0) = s('type.ast.exp','const.ast.Raise_1'(s('type.ast.exp',X71))) | ? [X69,X70] : s('type.ast.exp',X0) = s('type.ast.exp','const.ast.Handle_2'(s('type.ast.exp',X69),s('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),X70))) | ? [X68] : s('type.ast.exp',X0) = s('type.ast.exp','const.ast.Lit_1'(s('type.ast.lit',X68))) | ? [X66,X67] : s('type.ast.exp',X0) = s('type.ast.exp','const.ast.Con_2'(s('type.option.option'('type.ast.id'('type.list.list'('type.string.char'))),X66),s('type.list.list'('type.ast.exp'),X67))) | ? [X65] : s('type.ast.exp',X0) = s('type.ast.exp','const.ast.Var_1'(s('type.ast.id'('type.list.list'('type.string.char')),X65))) | ? [X63,X64] : s('type.ast.exp',X0) = s('type.ast.exp','const.ast.Fun_2'(s('type.list.list'('type.string.char'),X63),s('type.ast.exp',X64))) | ? [X62] : s('type.ast.exp',X0) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Opn_1'(s('type.ast.opn',X62))),s('type.list.list'('type.ast.exp'),'const.list.NIL_0'))) | ? [X60,X61] : s('type.ast.exp',X0) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Opn_1'(s('type.ast.opn',X60))),s('type.list.list'('type.ast.exp'),'const.list.CONS_2'(s('type.ast.exp',X61),s('type.list.list'('type.ast.exp'),'const.list.NIL_0'))))) | ? [X57,X58,X59] : s('type.ast.exp',X0) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Opn_1'(s('type.ast.opn',X57))),s('type.list.list'('type.ast.exp'),'const.list.CONS_2'(s('type.ast.exp',X58),s('type.list.list'('type.ast.exp'),'const.list.CONS_2'(s('type.ast.exp',X59),s('type.list.list'('type.ast.exp'),'const.list.NIL_0'))))))) | ? [X52,X53,X54,X55,X56] : s('type.ast.exp',X0) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Opn_1'(s('type.ast.opn',X52))),s('type.list.list'('type.ast.exp'),'const.list.CONS_2'(s('type.ast.exp',X53),s('type.list.list'('type.ast.exp'),'const.list.CONS_2'(s('type.ast.exp',X54),s('type.list.list'('type.ast.exp'),'const.list.CONS_2'(s('type.ast.exp',X55),s('type.list.list'('type.ast.exp'),X56))))))))) | ? [X50,X51] : s('type.ast.exp',X0) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Opb_1'(s('type.ast.opb',X50))),s('type.list.list'('type.ast.exp'),X51))) | ? [X47,X48,X49] : s('type.ast.exp',X0) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Opw_2'(s('type.ast.word_size',X47),s('type.ast.opw',X48))),s('type.list.list'('type.ast.exp'),X49))) | ? [X43,X44,X45,X46] : s('type.ast.exp',X0) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Shift_3'(s('type.ast.word_size',X43),s('type.ast.shift',X44),s('type.num.num',X45))),s('type.list.list'('type.ast.exp'),X46))) | ? [X42] : s('type.ast.exp',X0) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Equality_0'),s('type.list.list'('type.ast.exp'),X42))) | ? [X41] : s('type.ast.exp',X0) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Opapp_0'),s('type.list.list'('type.ast.exp'),X41))) | ? [X40] : s('type.ast.exp',X0) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Opassign_0'),s('type.list.list'('type.ast.exp'),X40))) | ? [X39] : s('type.ast.exp',X0) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Opref_0'),s('type.list.list'('type.ast.exp'),X39))) | ? [X38] : s('type.ast.exp',X0) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Opderef_0'),s('type.list.list'('type.ast.exp'),X38))) | ? [X37] : s('type.ast.exp',X0) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Aw8alloc_0'),s('type.list.list'('type.ast.exp'),X37))) | ? [X36] : s('type.ast.exp',X0) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Aw8sub_0'),s('type.list.list'('type.ast.exp'),X36))) | ? [X35] : s('type.ast.exp',X0) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Aw8length_0'),s('type.list.list'('type.ast.exp'),X35))) | ? [X34] : s('type.ast.exp',X0) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Aw8update_0'),s('type.list.list'('type.ast.exp'),X34))) | ? [X32,X33] : s('type.ast.exp',X0) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.WordFromInt_1'(s('type.ast.word_size',X32))),s('type.list.list'('type.ast.exp'),X33))) | ? [X30,X31] : s('type.ast.exp',X0) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.WordToInt_1'(s('type.ast.word_size',X30))),s('type.list.list'('type.ast.exp'),X31))) | ? [X29] : s('type.ast.exp',X0) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Ord_0'),s('type.list.list'('type.ast.exp'),X29))) | ? [X28] : s('type.ast.exp',X0) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Chr_0'),s('type.list.list'('type.ast.exp'),X28))) | ? [X26,X27] : s('type.ast.exp',X0) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Chopb_1'(s('type.ast.opb',X26))),s('type.list.list'('type.ast.exp'),X27))) | ? [X25] : s('type.ast.exp',X0) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Explode_0'),s('type.list.list'('type.ast.exp'),X25))) | ? [X24] : s('type.ast.exp',X0) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Implode_0'),s('type.list.list'('type.ast.exp'),X24))) | ? [X23] : s('type.ast.exp',X0) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Strlen_0'),s('type.list.list'('type.ast.exp'),X23))) | ? [X22] : s('type.ast.exp',X0) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.VfromList_0'),s('type.list.list'('type.ast.exp'),X22))) | ? [X21] : s('type.ast.exp',X0) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Vsub_0'),s('type.list.list'('type.ast.exp'),X21))) | ? [X20] : s('type.ast.exp',X0) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Vlength_0'),s('type.list.list'('type.ast.exp'),X20))) | ? [X19] : s('type.ast.exp',X0) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Aalloc_0'),s('type.list.list'('type.ast.exp'),X19))) | ? [X18] : s('type.ast.exp',X0) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Asub_0'),s('type.list.list'('type.ast.exp'),X18))) | ? [X17] : s('type.ast.exp',X0) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Alength_0'),s('type.list.list'('type.ast.exp'),X17))) | ? [X16] : s('type.ast.exp',X0) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Aupdate_0'),s('type.list.list'('type.ast.exp'),X16))) | ? [X14,X15] : s('type.ast.exp',X0) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.FFI_1'(s('type.num.num',X14))),s('type.list.list'('type.ast.exp'),X15))) | ? [X11,X12,X13] : s('type.ast.exp',X0) = s('type.ast.exp','const.ast.Log_3'(s('type.ast.lop',X11),s('type.ast.exp',X12),s('type.ast.exp',X13))) | ? [X8,X9,X10] : s('type.ast.exp',X0) = s('type.ast.exp','const.ast.If_3'(s('type.ast.exp',X8),s('type.ast.exp',X9),s('type.ast.exp',X10))) | ? [X6,X7] : s('type.ast.exp',X0) = s('type.ast.exp','const.ast.Mat_2'(s('type.ast.exp',X6),s('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),X7))) | ? [X3,X4,X5] : s('type.ast.exp',X0) = s('type.ast.exp','const.ast.Let_3'(s('type.option.option'('type.list.list'('type.string.char')),X3),s('type.ast.exp',X4),s('type.ast.exp',X5))) | ? [X1,X2] : s('type.ast.exp',X0) = s('type.ast.exp','const.ast.Letrec_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),X1),s('type.ast.exp',X2)))) & ! [X140,X141,X142] : s('type.ast.exp',X0) != s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Opn_1'(s('type.ast.opn',X140))),s('type.list.list'('type.ast.exp'),'const.list.CONS_2'(s('type.ast.exp',X141),s('type.list.list'('type.ast.exp'),'const.list.CONS_2'(s('type.ast.exp',X142),s('type.list.list'('type.ast.exp'),'const.list.NIL_0'))))))) & ! [X139] : s('type.ast.exp',X0) != s('type.ast.exp','const.ast.Raise_1'(s('type.ast.exp',X139))) & ! [X137,X138] : s('type.ast.exp',X0) != s('type.ast.exp','const.ast.Handle_2'(s('type.ast.exp',X137),s('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),X138))) & ! [X136] : s('type.ast.exp',X0) != s('type.ast.exp','const.ast.Lit_1'(s('type.ast.lit',X136))) & ! [X134,X135] : s('type.ast.exp',X0) != s('type.ast.exp','const.ast.Con_2'(s('type.option.option'('type.ast.id'('type.list.list'('type.string.char'))),X134),s('type.list.list'('type.ast.exp'),X135))) & ! [X133] : s('type.ast.exp',X0) != s('type.ast.exp','const.ast.Var_1'(s('type.ast.id'('type.list.list'('type.string.char')),X133))) & ! [X131,X132] : s('type.ast.exp',X0) != s('type.ast.exp','const.ast.Fun_2'(s('type.list.list'('type.string.char'),X131),s('type.ast.exp',X132))) & ! [X130] : s('type.ast.exp',X0) != s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Opn_1'(s('type.ast.opn',X130))),s('type.list.list'('type.ast.exp'),'const.list.NIL_0'))) & ! [X128,X129] : s('type.ast.exp',X0) != s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Opn_1'(s('type.ast.opn',X128))),s('type.list.list'('type.ast.exp'),'const.list.CONS_2'(s('type.ast.exp',X129),s('type.list.list'('type.ast.exp'),'const.list.NIL_0'))))) & ! [X123,X124,X125,X126,X127] : s('type.ast.exp',X0) != s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Opn_1'(s('type.ast.opn',X123))),s('type.list.list'('type.ast.exp'),'const.list.CONS_2'(s('type.ast.exp',X124),s('type.list.list'('type.ast.exp'),'const.list.CONS_2'(s('type.ast.exp',X125),s('type.list.list'('type.ast.exp'),'const.list.CONS_2'(s('type.ast.exp',X126),s('type.list.list'('type.ast.exp'),X127))))))))) & ! [X121,X122] : s('type.ast.exp',X0) != s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Opb_1'(s('type.ast.opb',X121))),s('type.list.list'('type.ast.exp'),X122))) & ! [X118,X119,X120] : s('type.ast.exp',X0) != s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Opw_2'(s('type.ast.word_size',X118),s('type.ast.opw',X119))),s('type.list.list'('type.ast.exp'),X120))) & ! [X114,X115,X116,X117] : s('type.ast.exp',X0) != s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Shift_3'(s('type.ast.word_size',X114),s('type.ast.shift',X115),s('type.num.num',X116))),s('type.list.list'('type.ast.exp'),X117))) & ! [X113] : s('type.ast.exp',X0) != s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Equality_0'),s('type.list.list'('type.ast.exp'),X113))) & ! [X112] : s('type.ast.exp',X0) != s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Opapp_0'),s('type.list.list'('type.ast.exp'),X112))) & ! [X111] : s('type.ast.exp',X0) != s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Opassign_0'),s('type.list.list'('type.ast.exp'),X111))) & ! [X110] : s('type.ast.exp',X0) != s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Opref_0'),s('type.list.list'('type.ast.exp'),X110))) & ! [X109] : s('type.ast.exp',X0) != s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Opderef_0'),s('type.list.list'('type.ast.exp'),X109))) & ! [X108] : s('type.ast.exp',X0) != s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Aw8alloc_0'),s('type.list.list'('type.ast.exp'),X108))) & ! [X107] : s('type.ast.exp',X0) != s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Aw8sub_0'),s('type.list.list'('type.ast.exp'),X107))) & ! [X106] : s('type.ast.exp',X0) != s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Aw8length_0'),s('type.list.list'('type.ast.exp'),X106))) & ! [X105] : s('type.ast.exp',X0) != s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Aw8update_0'),s('type.list.list'('type.ast.exp'),X105))) & ! [X103,X104] : s('type.ast.exp',X0) != s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.WordFromInt_1'(s('type.ast.word_size',X103))),s('type.list.list'('type.ast.exp'),X104))) & ! [X101,X102] : s('type.ast.exp',X0) != s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.WordToInt_1'(s('type.ast.word_size',X101))),s('type.list.list'('type.ast.exp'),X102))) & ! [X100] : s('type.ast.exp',X0) != s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Ord_0'),s('type.list.list'('type.ast.exp'),X100))) & ! [X99] : s('type.ast.exp',X0) != s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Chr_0'),s('type.list.list'('type.ast.exp'),X99))) & ! [X97,X98] : s('type.ast.exp',X0) != s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Chopb_1'(s('type.ast.opb',X97))),s('type.list.list'('type.ast.exp'),X98))) & ! [X96] : s('type.ast.exp',X0) != s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Explode_0'),s('type.list.list'('type.ast.exp'),X96))) & ! [X95] : s('type.ast.exp',X0) != s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Implode_0'),s('type.list.list'('type.ast.exp'),X95))) & ! [X94] : s('type.ast.exp',X0) != s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Strlen_0'),s('type.list.list'('type.ast.exp'),X94))) & ! [X93] : s('type.ast.exp',X0) != s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.VfromList_0'),s('type.list.list'('type.ast.exp'),X93))) & ! [X92] : s('type.ast.exp',X0) != s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Vsub_0'),s('type.list.list'('type.ast.exp'),X92))) & ! [X91] : s('type.ast.exp',X0) != s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Vlength_0'),s('type.list.list'('type.ast.exp'),X91))) & ! [X90] : s('type.ast.exp',X0) != s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Aalloc_0'),s('type.list.list'('type.ast.exp'),X90))) & ! [X89] : s('type.ast.exp',X0) != s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Asub_0'),s('type.list.list'('type.ast.exp'),X89))) & ! [X88] : s('type.ast.exp',X0) != s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Alength_0'),s('type.list.list'('type.ast.exp'),X88))) & ! [X87] : s('type.ast.exp',X0) != s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Aupdate_0'),s('type.list.list'('type.ast.exp'),X87))) & ! [X85,X86] : s('type.ast.exp',X0) != s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.FFI_1'(s('type.num.num',X85))),s('type.list.list'('type.ast.exp'),X86))) & ! [X82,X83,X84] : s('type.ast.exp',X0) != s('type.ast.exp','const.ast.Log_3'(s('type.ast.lop',X82),s('type.ast.exp',X83),s('type.ast.exp',X84))) & ! [X79,X80,X81] : s('type.ast.exp',X0) != s('type.ast.exp','const.ast.If_3'(s('type.ast.exp',X79),s('type.ast.exp',X80),s('type.ast.exp',X81))) & ! [X77,X78] : s('type.ast.exp',X0) != s('type.ast.exp','const.ast.Mat_2'(s('type.ast.exp',X77),s('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),X78))) & ! [X74,X75,X76] : s('type.ast.exp',X0) != s('type.ast.exp','const.ast.Let_3'(s('type.option.option'('type.list.list'('type.string.char')),X74),s('type.ast.exp',X75),s('type.ast.exp',X76))) & ! [X72,X73] : s('type.ast.exp',X0) != s('type.ast.exp','const.ast.Letrec_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),X72),s('type.ast.exp',X73))))),
  inference(flattening,[],[f96])).
fof(f96,plain,(
  ? [X0] : ((? [X71] : s('type.ast.exp',X0) = s('type.ast.exp','const.ast.Raise_1'(s('type.ast.exp',X71))) | ? [X69,X70] : s('type.ast.exp',X0) = s('type.ast.exp','const.ast.Handle_2'(s('type.ast.exp',X69),s('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),X70))) | ? [X68] : s('type.ast.exp',X0) = s('type.ast.exp','const.ast.Lit_1'(s('type.ast.lit',X68))) | ? [X66,X67] : s('type.ast.exp',X0) = s('type.ast.exp','const.ast.Con_2'(s('type.option.option'('type.ast.id'('type.list.list'('type.string.char'))),X66),s('type.list.list'('type.ast.exp'),X67))) | ? [X65] : s('type.ast.exp',X0) = s('type.ast.exp','const.ast.Var_1'(s('type.ast.id'('type.list.list'('type.string.char')),X65))) | ? [X63,X64] : s('type.ast.exp',X0) = s('type.ast.exp','const.ast.Fun_2'(s('type.list.list'('type.string.char'),X63),s('type.ast.exp',X64))) | ? [X62] : s('type.ast.exp',X0) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Opn_1'(s('type.ast.opn',X62))),s('type.list.list'('type.ast.exp'),'const.list.NIL_0'))) | ? [X60,X61] : s('type.ast.exp',X0) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Opn_1'(s('type.ast.opn',X60))),s('type.list.list'('type.ast.exp'),'const.list.CONS_2'(s('type.ast.exp',X61),s('type.list.list'('type.ast.exp'),'const.list.NIL_0'))))) | ? [X57,X58,X59] : s('type.ast.exp',X0) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Opn_1'(s('type.ast.opn',X57))),s('type.list.list'('type.ast.exp'),'const.list.CONS_2'(s('type.ast.exp',X58),s('type.list.list'('type.ast.exp'),'const.list.CONS_2'(s('type.ast.exp',X59),s('type.list.list'('type.ast.exp'),'const.list.NIL_0'))))))) | ? [X52,X53,X54,X55,X56] : s('type.ast.exp',X0) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Opn_1'(s('type.ast.opn',X52))),s('type.list.list'('type.ast.exp'),'const.list.CONS_2'(s('type.ast.exp',X53),s('type.list.list'('type.ast.exp'),'const.list.CONS_2'(s('type.ast.exp',X54),s('type.list.list'('type.ast.exp'),'const.list.CONS_2'(s('type.ast.exp',X55),s('type.list.list'('type.ast.exp'),X56))))))))) | ? [X50,X51] : s('type.ast.exp',X0) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Opb_1'(s('type.ast.opb',X50))),s('type.list.list'('type.ast.exp'),X51))) | ? [X47,X48,X49] : s('type.ast.exp',X0) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Opw_2'(s('type.ast.word_size',X47),s('type.ast.opw',X48))),s('type.list.list'('type.ast.exp'),X49))) | ? [X43,X44,X45,X46] : s('type.ast.exp',X0) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Shift_3'(s('type.ast.word_size',X43),s('type.ast.shift',X44),s('type.num.num',X45))),s('type.list.list'('type.ast.exp'),X46))) | ? [X42] : s('type.ast.exp',X0) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Equality_0'),s('type.list.list'('type.ast.exp'),X42))) | ? [X41] : s('type.ast.exp',X0) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Opapp_0'),s('type.list.list'('type.ast.exp'),X41))) | ? [X40] : s('type.ast.exp',X0) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Opassign_0'),s('type.list.list'('type.ast.exp'),X40))) | ? [X39] : s('type.ast.exp',X0) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Opref_0'),s('type.list.list'('type.ast.exp'),X39))) | ? [X38] : s('type.ast.exp',X0) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Opderef_0'),s('type.list.list'('type.ast.exp'),X38))) | ? [X37] : s('type.ast.exp',X0) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Aw8alloc_0'),s('type.list.list'('type.ast.exp'),X37))) | ? [X36] : s('type.ast.exp',X0) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Aw8sub_0'),s('type.list.list'('type.ast.exp'),X36))) | ? [X35] : s('type.ast.exp',X0) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Aw8length_0'),s('type.list.list'('type.ast.exp'),X35))) | ? [X34] : s('type.ast.exp',X0) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Aw8update_0'),s('type.list.list'('type.ast.exp'),X34))) | ? [X32,X33] : s('type.ast.exp',X0) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.WordFromInt_1'(s('type.ast.word_size',X32))),s('type.list.list'('type.ast.exp'),X33))) | ? [X30,X31] : s('type.ast.exp',X0) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.WordToInt_1'(s('type.ast.word_size',X30))),s('type.list.list'('type.ast.exp'),X31))) | ? [X29] : s('type.ast.exp',X0) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Ord_0'),s('type.list.list'('type.ast.exp'),X29))) | ? [X28] : s('type.ast.exp',X0) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Chr_0'),s('type.list.list'('type.ast.exp'),X28))) | ? [X26,X27] : s('type.ast.exp',X0) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Chopb_1'(s('type.ast.opb',X26))),s('type.list.list'('type.ast.exp'),X27))) | ? [X25] : s('type.ast.exp',X0) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Explode_0'),s('type.list.list'('type.ast.exp'),X25))) | ? [X24] : s('type.ast.exp',X0) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Implode_0'),s('type.list.list'('type.ast.exp'),X24))) | ? [X23] : s('type.ast.exp',X0) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Strlen_0'),s('type.list.list'('type.ast.exp'),X23))) | ? [X22] : s('type.ast.exp',X0) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.VfromList_0'),s('type.list.list'('type.ast.exp'),X22))) | ? [X21] : s('type.ast.exp',X0) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Vsub_0'),s('type.list.list'('type.ast.exp'),X21))) | ? [X20] : s('type.ast.exp',X0) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Vlength_0'),s('type.list.list'('type.ast.exp'),X20))) | ? [X19] : s('type.ast.exp',X0) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Aalloc_0'),s('type.list.list'('type.ast.exp'),X19))) | ? [X18] : s('type.ast.exp',X0) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Asub_0'),s('type.list.list'('type.ast.exp'),X18))) | ? [X17] : s('type.ast.exp',X0) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Alength_0'),s('type.list.list'('type.ast.exp'),X17))) | ? [X16] : s('type.ast.exp',X0) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Aupdate_0'),s('type.list.list'('type.ast.exp'),X16))) | ? [X14,X15] : s('type.ast.exp',X0) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.FFI_1'(s('type.num.num',X14))),s('type.list.list'('type.ast.exp'),X15))) | ? [X11,X12,X13] : s('type.ast.exp',X0) = s('type.ast.exp','const.ast.Log_3'(s('type.ast.lop',X11),s('type.ast.exp',X12),s('type.ast.exp',X13))) | ? [X8,X9,X10] : s('type.ast.exp',X0) = s('type.ast.exp','const.ast.If_3'(s('type.ast.exp',X8),s('type.ast.exp',X9),s('type.ast.exp',X10))) | ? [X6,X7] : s('type.ast.exp',X0) = s('type.ast.exp','const.ast.Mat_2'(s('type.ast.exp',X6),s('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),X7))) | ? [X3,X4,X5] : s('type.ast.exp',X0) = s('type.ast.exp','const.ast.Let_3'(s('type.option.option'('type.list.list'('type.string.char')),X3),s('type.ast.exp',X4),s('type.ast.exp',X5))) | ? [X1,X2] : s('type.ast.exp',X0) = s('type.ast.exp','const.ast.Letrec_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),X1),s('type.ast.exp',X2)))) & (! [X140,X141,X142] : s('type.ast.exp',X0) != s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Opn_1'(s('type.ast.opn',X140))),s('type.list.list'('type.ast.exp'),'const.list.CONS_2'(s('type.ast.exp',X141),s('type.list.list'('type.ast.exp'),'const.list.CONS_2'(s('type.ast.exp',X142),s('type.list.list'('type.ast.exp'),'const.list.NIL_0'))))))) & ! [X139] : s('type.ast.exp',X0) != s('type.ast.exp','const.ast.Raise_1'(s('type.ast.exp',X139))) & ! [X137,X138] : s('type.ast.exp',X0) != s('type.ast.exp','const.ast.Handle_2'(s('type.ast.exp',X137),s('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),X138))) & ! [X136] : s('type.ast.exp',X0) != s('type.ast.exp','const.ast.Lit_1'(s('type.ast.lit',X136))) & ! [X134,X135] : s('type.ast.exp',X0) != s('type.ast.exp','const.ast.Con_2'(s('type.option.option'('type.ast.id'('type.list.list'('type.string.char'))),X134),s('type.list.list'('type.ast.exp'),X135))) & ! [X133] : s('type.ast.exp',X0) != s('type.ast.exp','const.ast.Var_1'(s('type.ast.id'('type.list.list'('type.string.char')),X133))) & ! [X131,X132] : s('type.ast.exp',X0) != s('type.ast.exp','const.ast.Fun_2'(s('type.list.list'('type.string.char'),X131),s('type.ast.exp',X132))) & ! [X130] : s('type.ast.exp',X0) != s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Opn_1'(s('type.ast.opn',X130))),s('type.list.list'('type.ast.exp'),'const.list.NIL_0'))) & ! [X128,X129] : s('type.ast.exp',X0) != s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Opn_1'(s('type.ast.opn',X128))),s('type.list.list'('type.ast.exp'),'const.list.CONS_2'(s('type.ast.exp',X129),s('type.list.list'('type.ast.exp'),'const.list.NIL_0'))))) & ! [X123,X124,X125,X126,X127] : s('type.ast.exp',X0) != s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Opn_1'(s('type.ast.opn',X123))),s('type.list.list'('type.ast.exp'),'const.list.CONS_2'(s('type.ast.exp',X124),s('type.list.list'('type.ast.exp'),'const.list.CONS_2'(s('type.ast.exp',X125),s('type.list.list'('type.ast.exp'),'const.list.CONS_2'(s('type.ast.exp',X126),s('type.list.list'('type.ast.exp'),X127))))))))) & ! [X121,X122] : s('type.ast.exp',X0) != s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Opb_1'(s('type.ast.opb',X121))),s('type.list.list'('type.ast.exp'),X122))) & ! [X118,X119,X120] : s('type.ast.exp',X0) != s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Opw_2'(s('type.ast.word_size',X118),s('type.ast.opw',X119))),s('type.list.list'('type.ast.exp'),X120))) & ! [X114,X115,X116,X117] : s('type.ast.exp',X0) != s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Shift_3'(s('type.ast.word_size',X114),s('type.ast.shift',X115),s('type.num.num',X116))),s('type.list.list'('type.ast.exp'),X117))) & ! [X113] : s('type.ast.exp',X0) != s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Equality_0'),s('type.list.list'('type.ast.exp'),X113))) & ! [X112] : s('type.ast.exp',X0) != s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Opapp_0'),s('type.list.list'('type.ast.exp'),X112))) & ! [X111] : s('type.ast.exp',X0) != s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Opassign_0'),s('type.list.list'('type.ast.exp'),X111))) & ! [X110] : s('type.ast.exp',X0) != s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Opref_0'),s('type.list.list'('type.ast.exp'),X110))) & ! [X109] : s('type.ast.exp',X0) != s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Opderef_0'),s('type.list.list'('type.ast.exp'),X109))) & ! [X108] : s('type.ast.exp',X0) != s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Aw8alloc_0'),s('type.list.list'('type.ast.exp'),X108))) & ! [X107] : s('type.ast.exp',X0) != s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Aw8sub_0'),s('type.list.list'('type.ast.exp'),X107))) & ! [X106] : s('type.ast.exp',X0) != s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Aw8length_0'),s('type.list.list'('type.ast.exp'),X106))) & ! [X105] : s('type.ast.exp',X0) != s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Aw8update_0'),s('type.list.list'('type.ast.exp'),X105))) & ! [X103,X104] : s('type.ast.exp',X0) != s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.WordFromInt_1'(s('type.ast.word_size',X103))),s('type.list.list'('type.ast.exp'),X104))) & ! [X101,X102] : s('type.ast.exp',X0) != s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.WordToInt_1'(s('type.ast.word_size',X101))),s('type.list.list'('type.ast.exp'),X102))) & ! [X100] : s('type.ast.exp',X0) != s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Ord_0'),s('type.list.list'('type.ast.exp'),X100))) & ! [X99] : s('type.ast.exp',X0) != s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Chr_0'),s('type.list.list'('type.ast.exp'),X99))) & ! [X97,X98] : s('type.ast.exp',X0) != s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Chopb_1'(s('type.ast.opb',X97))),s('type.list.list'('type.ast.exp'),X98))) & ! [X96] : s('type.ast.exp',X0) != s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Explode_0'),s('type.list.list'('type.ast.exp'),X96))) & ! [X95] : s('type.ast.exp',X0) != s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Implode_0'),s('type.list.list'('type.ast.exp'),X95))) & ! [X94] : s('type.ast.exp',X0) != s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Strlen_0'),s('type.list.list'('type.ast.exp'),X94))) & ! [X93] : s('type.ast.exp',X0) != s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.VfromList_0'),s('type.list.list'('type.ast.exp'),X93))) & ! [X92] : s('type.ast.exp',X0) != s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Vsub_0'),s('type.list.list'('type.ast.exp'),X92))) & ! [X91] : s('type.ast.exp',X0) != s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Vlength_0'),s('type.list.list'('type.ast.exp'),X91))) & ! [X90] : s('type.ast.exp',X0) != s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Aalloc_0'),s('type.list.list'('type.ast.exp'),X90))) & ! [X89] : s('type.ast.exp',X0) != s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Asub_0'),s('type.list.list'('type.ast.exp'),X89))) & ! [X88] : s('type.ast.exp',X0) != s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Alength_0'),s('type.list.list'('type.ast.exp'),X88))) & ! [X87] : s('type.ast.exp',X0) != s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Aupdate_0'),s('type.list.list'('type.ast.exp'),X87))) & ! [X85,X86] : s('type.ast.exp',X0) != s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.FFI_1'(s('type.num.num',X85))),s('type.list.list'('type.ast.exp'),X86))) & ! [X82,X83,X84] : s('type.ast.exp',X0) != s('type.ast.exp','const.ast.Log_3'(s('type.ast.lop',X82),s('type.ast.exp',X83),s('type.ast.exp',X84))) & ! [X79,X80,X81] : s('type.ast.exp',X0) != s('type.ast.exp','const.ast.If_3'(s('type.ast.exp',X79),s('type.ast.exp',X80),s('type.ast.exp',X81))) & ! [X77,X78] : s('type.ast.exp',X0) != s('type.ast.exp','const.ast.Mat_2'(s('type.ast.exp',X77),s('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),X78))) & ! [X74,X75,X76] : s('type.ast.exp',X0) != s('type.ast.exp','const.ast.Let_3'(s('type.option.option'('type.list.list'('type.string.char')),X74),s('type.ast.exp',X75),s('type.ast.exp',X76))) & ! [X72,X73] : s('type.ast.exp',X0) != s('type.ast.exp','const.ast.Letrec_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),X72),s('type.ast.exp',X73)))))),
  inference(ennf_transformation,[],[f39])).
fof(f39,plain,(
  ~! [X0] : ((? [X71] : s('type.ast.exp',X0) = s('type.ast.exp','const.ast.Raise_1'(s('type.ast.exp',X71))) | ? [X69,X70] : s('type.ast.exp',X0) = s('type.ast.exp','const.ast.Handle_2'(s('type.ast.exp',X69),s('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),X70))) | ? [X68] : s('type.ast.exp',X0) = s('type.ast.exp','const.ast.Lit_1'(s('type.ast.lit',X68))) | ? [X66,X67] : s('type.ast.exp',X0) = s('type.ast.exp','const.ast.Con_2'(s('type.option.option'('type.ast.id'('type.list.list'('type.string.char'))),X66),s('type.list.list'('type.ast.exp'),X67))) | ? [X65] : s('type.ast.exp',X0) = s('type.ast.exp','const.ast.Var_1'(s('type.ast.id'('type.list.list'('type.string.char')),X65))) | ? [X63,X64] : s('type.ast.exp',X0) = s('type.ast.exp','const.ast.Fun_2'(s('type.list.list'('type.string.char'),X63),s('type.ast.exp',X64))) | ? [X62] : s('type.ast.exp',X0) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Opn_1'(s('type.ast.opn',X62))),s('type.list.list'('type.ast.exp'),'const.list.NIL_0'))) | ? [X60,X61] : s('type.ast.exp',X0) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Opn_1'(s('type.ast.opn',X60))),s('type.list.list'('type.ast.exp'),'const.list.CONS_2'(s('type.ast.exp',X61),s('type.list.list'('type.ast.exp'),'const.list.NIL_0'))))) | ? [X57,X58,X59] : s('type.ast.exp',X0) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Opn_1'(s('type.ast.opn',X57))),s('type.list.list'('type.ast.exp'),'const.list.CONS_2'(s('type.ast.exp',X58),s('type.list.list'('type.ast.exp'),'const.list.CONS_2'(s('type.ast.exp',X59),s('type.list.list'('type.ast.exp'),'const.list.NIL_0'))))))) | ? [X52,X53,X54,X55,X56] : s('type.ast.exp',X0) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Opn_1'(s('type.ast.opn',X52))),s('type.list.list'('type.ast.exp'),'const.list.CONS_2'(s('type.ast.exp',X53),s('type.list.list'('type.ast.exp'),'const.list.CONS_2'(s('type.ast.exp',X54),s('type.list.list'('type.ast.exp'),'const.list.CONS_2'(s('type.ast.exp',X55),s('type.list.list'('type.ast.exp'),X56))))))))) | ? [X50,X51] : s('type.ast.exp',X0) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Opb_1'(s('type.ast.opb',X50))),s('type.list.list'('type.ast.exp'),X51))) | ? [X47,X48,X49] : s('type.ast.exp',X0) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Opw_2'(s('type.ast.word_size',X47),s('type.ast.opw',X48))),s('type.list.list'('type.ast.exp'),X49))) | ? [X43,X44,X45,X46] : s('type.ast.exp',X0) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Shift_3'(s('type.ast.word_size',X43),s('type.ast.shift',X44),s('type.num.num',X45))),s('type.list.list'('type.ast.exp'),X46))) | ? [X42] : s('type.ast.exp',X0) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Equality_0'),s('type.list.list'('type.ast.exp'),X42))) | ? [X41] : s('type.ast.exp',X0) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Opapp_0'),s('type.list.list'('type.ast.exp'),X41))) | ? [X40] : s('type.ast.exp',X0) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Opassign_0'),s('type.list.list'('type.ast.exp'),X40))) | ? [X39] : s('type.ast.exp',X0) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Opref_0'),s('type.list.list'('type.ast.exp'),X39))) | ? [X38] : s('type.ast.exp',X0) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Opderef_0'),s('type.list.list'('type.ast.exp'),X38))) | ? [X37] : s('type.ast.exp',X0) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Aw8alloc_0'),s('type.list.list'('type.ast.exp'),X37))) | ? [X36] : s('type.ast.exp',X0) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Aw8sub_0'),s('type.list.list'('type.ast.exp'),X36))) | ? [X35] : s('type.ast.exp',X0) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Aw8length_0'),s('type.list.list'('type.ast.exp'),X35))) | ? [X34] : s('type.ast.exp',X0) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Aw8update_0'),s('type.list.list'('type.ast.exp'),X34))) | ? [X32,X33] : s('type.ast.exp',X0) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.WordFromInt_1'(s('type.ast.word_size',X32))),s('type.list.list'('type.ast.exp'),X33))) | ? [X30,X31] : s('type.ast.exp',X0) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.WordToInt_1'(s('type.ast.word_size',X30))),s('type.list.list'('type.ast.exp'),X31))) | ? [X29] : s('type.ast.exp',X0) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Ord_0'),s('type.list.list'('type.ast.exp'),X29))) | ? [X28] : s('type.ast.exp',X0) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Chr_0'),s('type.list.list'('type.ast.exp'),X28))) | ? [X26,X27] : s('type.ast.exp',X0) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Chopb_1'(s('type.ast.opb',X26))),s('type.list.list'('type.ast.exp'),X27))) | ? [X25] : s('type.ast.exp',X0) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Explode_0'),s('type.list.list'('type.ast.exp'),X25))) | ? [X24] : s('type.ast.exp',X0) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Implode_0'),s('type.list.list'('type.ast.exp'),X24))) | ? [X23] : s('type.ast.exp',X0) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Strlen_0'),s('type.list.list'('type.ast.exp'),X23))) | ? [X22] : s('type.ast.exp',X0) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.VfromList_0'),s('type.list.list'('type.ast.exp'),X22))) | ? [X21] : s('type.ast.exp',X0) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Vsub_0'),s('type.list.list'('type.ast.exp'),X21))) | ? [X20] : s('type.ast.exp',X0) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Vlength_0'),s('type.list.list'('type.ast.exp'),X20))) | ? [X19] : s('type.ast.exp',X0) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Aalloc_0'),s('type.list.list'('type.ast.exp'),X19))) | ? [X18] : s('type.ast.exp',X0) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Asub_0'),s('type.list.list'('type.ast.exp'),X18))) | ? [X17] : s('type.ast.exp',X0) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Alength_0'),s('type.list.list'('type.ast.exp'),X17))) | ? [X16] : s('type.ast.exp',X0) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Aupdate_0'),s('type.list.list'('type.ast.exp'),X16))) | ? [X14,X15] : s('type.ast.exp',X0) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.FFI_1'(s('type.num.num',X14))),s('type.list.list'('type.ast.exp'),X15))) | ? [X11,X12,X13] : s('type.ast.exp',X0) = s('type.ast.exp','const.ast.Log_3'(s('type.ast.lop',X11),s('type.ast.exp',X12),s('type.ast.exp',X13))) | ? [X8,X9,X10] : s('type.ast.exp',X0) = s('type.ast.exp','const.ast.If_3'(s('type.ast.exp',X8),s('type.ast.exp',X9),s('type.ast.exp',X10))) | ? [X6,X7] : s('type.ast.exp',X0) = s('type.ast.exp','const.ast.Mat_2'(s('type.ast.exp',X6),s('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),X7))) | ? [X3,X4,X5] : s('type.ast.exp',X0) = s('type.ast.exp','const.ast.Let_3'(s('type.option.option'('type.list.list'('type.string.char')),X3),s('type.ast.exp',X4),s('type.ast.exp',X5))) | ? [X1,X2] : s('type.ast.exp',X0) = s('type.ast.exp','const.ast.Letrec_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),X1),s('type.ast.exp',X2)))) => (? [X140,X141,X142] : s('type.ast.exp',X0) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Opn_1'(s('type.ast.opn',X140))),s('type.list.list'('type.ast.exp'),'const.list.CONS_2'(s('type.ast.exp',X141),s('type.list.list'('type.ast.exp'),'const.list.CONS_2'(s('type.ast.exp',X142),s('type.list.list'('type.ast.exp'),'const.list.NIL_0'))))))) | ? [X139] : s('type.ast.exp',X0) = s('type.ast.exp','const.ast.Raise_1'(s('type.ast.exp',X139))) | ? [X137,X138] : s('type.ast.exp',X0) = s('type.ast.exp','const.ast.Handle_2'(s('type.ast.exp',X137),s('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),X138))) | ? [X136] : s('type.ast.exp',X0) = s('type.ast.exp','const.ast.Lit_1'(s('type.ast.lit',X136))) | ? [X134,X135] : s('type.ast.exp',X0) = s('type.ast.exp','const.ast.Con_2'(s('type.option.option'('type.ast.id'('type.list.list'('type.string.char'))),X134),s('type.list.list'('type.ast.exp'),X135))) | ? [X133] : s('type.ast.exp',X0) = s('type.ast.exp','const.ast.Var_1'(s('type.ast.id'('type.list.list'('type.string.char')),X133))) | ? [X131,X132] : s('type.ast.exp',X0) = s('type.ast.exp','const.ast.Fun_2'(s('type.list.list'('type.string.char'),X131),s('type.ast.exp',X132))) | ? [X130] : s('type.ast.exp',X0) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Opn_1'(s('type.ast.opn',X130))),s('type.list.list'('type.ast.exp'),'const.list.NIL_0'))) | ? [X128,X129] : s('type.ast.exp',X0) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Opn_1'(s('type.ast.opn',X128))),s('type.list.list'('type.ast.exp'),'const.list.CONS_2'(s('type.ast.exp',X129),s('type.list.list'('type.ast.exp'),'const.list.NIL_0'))))) | ? [X123,X124,X125,X126,X127] : s('type.ast.exp',X0) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Opn_1'(s('type.ast.opn',X123))),s('type.list.list'('type.ast.exp'),'const.list.CONS_2'(s('type.ast.exp',X124),s('type.list.list'('type.ast.exp'),'const.list.CONS_2'(s('type.ast.exp',X125),s('type.list.list'('type.ast.exp'),'const.list.CONS_2'(s('type.ast.exp',X126),s('type.list.list'('type.ast.exp'),X127))))))))) | ? [X121,X122] : s('type.ast.exp',X0) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Opb_1'(s('type.ast.opb',X121))),s('type.list.list'('type.ast.exp'),X122))) | ? [X118,X119,X120] : s('type.ast.exp',X0) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Opw_2'(s('type.ast.word_size',X118),s('type.ast.opw',X119))),s('type.list.list'('type.ast.exp'),X120))) | ? [X114,X115,X116,X117] : s('type.ast.exp',X0) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Shift_3'(s('type.ast.word_size',X114),s('type.ast.shift',X115),s('type.num.num',X116))),s('type.list.list'('type.ast.exp'),X117))) | ? [X113] : s('type.ast.exp',X0) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Equality_0'),s('type.list.list'('type.ast.exp'),X113))) | ? [X112] : s('type.ast.exp',X0) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Opapp_0'),s('type.list.list'('type.ast.exp'),X112))) | ? [X111] : s('type.ast.exp',X0) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Opassign_0'),s('type.list.list'('type.ast.exp'),X111))) | ? [X110] : s('type.ast.exp',X0) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Opref_0'),s('type.list.list'('type.ast.exp'),X110))) | ? [X109] : s('type.ast.exp',X0) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Opderef_0'),s('type.list.list'('type.ast.exp'),X109))) | ? [X108] : s('type.ast.exp',X0) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Aw8alloc_0'),s('type.list.list'('type.ast.exp'),X108))) | ? [X107] : s('type.ast.exp',X0) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Aw8sub_0'),s('type.list.list'('type.ast.exp'),X107))) | ? [X106] : s('type.ast.exp',X0) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Aw8length_0'),s('type.list.list'('type.ast.exp'),X106))) | ? [X105] : s('type.ast.exp',X0) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Aw8update_0'),s('type.list.list'('type.ast.exp'),X105))) | ? [X103,X104] : s('type.ast.exp',X0) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.WordFromInt_1'(s('type.ast.word_size',X103))),s('type.list.list'('type.ast.exp'),X104))) | ? [X101,X102] : s('type.ast.exp',X0) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.WordToInt_1'(s('type.ast.word_size',X101))),s('type.list.list'('type.ast.exp'),X102))) | ? [X100] : s('type.ast.exp',X0) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Ord_0'),s('type.list.list'('type.ast.exp'),X100))) | ? [X99] : s('type.ast.exp',X0) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Chr_0'),s('type.list.list'('type.ast.exp'),X99))) | ? [X97,X98] : s('type.ast.exp',X0) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Chopb_1'(s('type.ast.opb',X97))),s('type.list.list'('type.ast.exp'),X98))) | ? [X96] : s('type.ast.exp',X0) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Explode_0'),s('type.list.list'('type.ast.exp'),X96))) | ? [X95] : s('type.ast.exp',X0) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Implode_0'),s('type.list.list'('type.ast.exp'),X95))) | ? [X94] : s('type.ast.exp',X0) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Strlen_0'),s('type.list.list'('type.ast.exp'),X94))) | ? [X93] : s('type.ast.exp',X0) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.VfromList_0'),s('type.list.list'('type.ast.exp'),X93))) | ? [X92] : s('type.ast.exp',X0) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Vsub_0'),s('type.list.list'('type.ast.exp'),X92))) | ? [X91] : s('type.ast.exp',X0) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Vlength_0'),s('type.list.list'('type.ast.exp'),X91))) | ? [X90] : s('type.ast.exp',X0) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Aalloc_0'),s('type.list.list'('type.ast.exp'),X90))) | ? [X89] : s('type.ast.exp',X0) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Asub_0'),s('type.list.list'('type.ast.exp'),X89))) | ? [X88] : s('type.ast.exp',X0) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Alength_0'),s('type.list.list'('type.ast.exp'),X88))) | ? [X87] : s('type.ast.exp',X0) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Aupdate_0'),s('type.list.list'('type.ast.exp'),X87))) | ? [X85,X86] : s('type.ast.exp',X0) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.FFI_1'(s('type.num.num',X85))),s('type.list.list'('type.ast.exp'),X86))) | ? [X82,X83,X84] : s('type.ast.exp',X0) = s('type.ast.exp','const.ast.Log_3'(s('type.ast.lop',X82),s('type.ast.exp',X83),s('type.ast.exp',X84))) | ? [X79,X80,X81] : s('type.ast.exp',X0) = s('type.ast.exp','const.ast.If_3'(s('type.ast.exp',X79),s('type.ast.exp',X80),s('type.ast.exp',X81))) | ? [X77,X78] : s('type.ast.exp',X0) = s('type.ast.exp','const.ast.Mat_2'(s('type.ast.exp',X77),s('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),X78))) | ? [X74,X75,X76] : s('type.ast.exp',X0) = s('type.ast.exp','const.ast.Let_3'(s('type.option.option'('type.list.list'('type.string.char')),X74),s('type.ast.exp',X75),s('type.ast.exp',X76))) | ? [X72,X73] : s('type.ast.exp',X0) = s('type.ast.exp','const.ast.Letrec_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),X72),s('type.ast.exp',X73)))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : ((? [X7] : s('type.ast.exp',X6) = s('type.ast.exp','const.ast.Raise_1'(s('type.ast.exp',X7))) | ? [X8,X9] : s('type.ast.exp',X6) = s('type.ast.exp','const.ast.Handle_2'(s('type.ast.exp',X8),s('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),X9))) | ? [X10] : s('type.ast.exp',X6) = s('type.ast.exp','const.ast.Lit_1'(s('type.ast.lit',X10))) | ? [X11,X12] : s('type.ast.exp',X6) = s('type.ast.exp','const.ast.Con_2'(s('type.option.option'('type.ast.id'('type.list.list'('type.string.char'))),X11),s('type.list.list'('type.ast.exp'),X12))) | ? [X13] : s('type.ast.exp',X6) = s('type.ast.exp','const.ast.Var_1'(s('type.ast.id'('type.list.list'('type.string.char')),X13))) | ? [X14,X15] : s('type.ast.exp',X6) = s('type.ast.exp','const.ast.Fun_2'(s('type.list.list'('type.string.char'),X14),s('type.ast.exp',X15))) | ? [X16] : s('type.ast.exp',X6) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Opn_1'(s('type.ast.opn',X16))),s('type.list.list'('type.ast.exp'),'const.list.NIL_0'))) | ? [X16,X17] : s('type.ast.exp',X6) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Opn_1'(s('type.ast.opn',X16))),s('type.list.list'('type.ast.exp'),'const.list.CONS_2'(s('type.ast.exp',X17),s('type.list.list'('type.ast.exp'),'const.list.NIL_0'))))) | ? [X18,X19,X20] : s('type.ast.exp',X6) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Opn_1'(s('type.ast.opn',X18))),s('type.list.list'('type.ast.exp'),'const.list.CONS_2'(s('type.ast.exp',X19),s('type.list.list'('type.ast.exp'),'const.list.CONS_2'(s('type.ast.exp',X20),s('type.list.list'('type.ast.exp'),'const.list.NIL_0'))))))) | ? [X16,X17,X21,X22,X23] : s('type.ast.exp',X6) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Opn_1'(s('type.ast.opn',X16))),s('type.list.list'('type.ast.exp'),'const.list.CONS_2'(s('type.ast.exp',X17),s('type.list.list'('type.ast.exp'),'const.list.CONS_2'(s('type.ast.exp',X21),s('type.list.list'('type.ast.exp'),'const.list.CONS_2'(s('type.ast.exp',X22),s('type.list.list'('type.ast.exp'),X23))))))))) | ? [X24,X25] : s('type.ast.exp',X6) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Opb_1'(s('type.ast.opb',X24))),s('type.list.list'('type.ast.exp'),X25))) | ? [X26,X27,X25] : s('type.ast.exp',X6) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Opw_2'(s('type.ast.word_size',X26),s('type.ast.opw',X27))),s('type.list.list'('type.ast.exp'),X25))) | ? [X28,X29,X30,X25] : s('type.ast.exp',X6) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Shift_3'(s('type.ast.word_size',X28),s('type.ast.shift',X29),s('type.num.num',X30))),s('type.list.list'('type.ast.exp'),X25))) | ? [X25] : s('type.ast.exp',X6) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Equality_0'),s('type.list.list'('type.ast.exp'),X25))) | ? [X25] : s('type.ast.exp',X6) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Opapp_0'),s('type.list.list'('type.ast.exp'),X25))) | ? [X25] : s('type.ast.exp',X6) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Opassign_0'),s('type.list.list'('type.ast.exp'),X25))) | ? [X25] : s('type.ast.exp',X6) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Opref_0'),s('type.list.list'('type.ast.exp'),X25))) | ? [X25] : s('type.ast.exp',X6) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Opderef_0'),s('type.list.list'('type.ast.exp'),X25))) | ? [X25] : s('type.ast.exp',X6) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Aw8alloc_0'),s('type.list.list'('type.ast.exp'),X25))) | ? [X25] : s('type.ast.exp',X6) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Aw8sub_0'),s('type.list.list'('type.ast.exp'),X25))) | ? [X25] : s('type.ast.exp',X6) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Aw8length_0'),s('type.list.list'('type.ast.exp'),X25))) | ? [X25] : s('type.ast.exp',X6) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Aw8update_0'),s('type.list.list'('type.ast.exp'),X25))) | ? [X31,X25] : s('type.ast.exp',X6) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.WordFromInt_1'(s('type.ast.word_size',X31))),s('type.list.list'('type.ast.exp'),X25))) | ? [X32,X25] : s('type.ast.exp',X6) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.WordToInt_1'(s('type.ast.word_size',X32))),s('type.list.list'('type.ast.exp'),X25))) | ? [X25] : s('type.ast.exp',X6) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Ord_0'),s('type.list.list'('type.ast.exp'),X25))) | ? [X25] : s('type.ast.exp',X6) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Chr_0'),s('type.list.list'('type.ast.exp'),X25))) | ? [X33,X25] : s('type.ast.exp',X6) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Chopb_1'(s('type.ast.opb',X33))),s('type.list.list'('type.ast.exp'),X25))) | ? [X25] : s('type.ast.exp',X6) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Explode_0'),s('type.list.list'('type.ast.exp'),X25))) | ? [X25] : s('type.ast.exp',X6) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Implode_0'),s('type.list.list'('type.ast.exp'),X25))) | ? [X25] : s('type.ast.exp',X6) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Strlen_0'),s('type.list.list'('type.ast.exp'),X25))) | ? [X25] : s('type.ast.exp',X6) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.VfromList_0'),s('type.list.list'('type.ast.exp'),X25))) | ? [X25] : s('type.ast.exp',X6) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Vsub_0'),s('type.list.list'('type.ast.exp'),X25))) | ? [X25] : s('type.ast.exp',X6) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Vlength_0'),s('type.list.list'('type.ast.exp'),X25))) | ? [X25] : s('type.ast.exp',X6) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Aalloc_0'),s('type.list.list'('type.ast.exp'),X25))) | ? [X25] : s('type.ast.exp',X6) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Asub_0'),s('type.list.list'('type.ast.exp'),X25))) | ? [X25] : s('type.ast.exp',X6) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Alength_0'),s('type.list.list'('type.ast.exp'),X25))) | ? [X25] : s('type.ast.exp',X6) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Aupdate_0'),s('type.list.list'('type.ast.exp'),X25))) | ? [X34,X25] : s('type.ast.exp',X6) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.FFI_1'(s('type.num.num',X34))),s('type.list.list'('type.ast.exp'),X25))) | ? [X35,X36,X37] : s('type.ast.exp',X6) = s('type.ast.exp','const.ast.Log_3'(s('type.ast.lop',X35),s('type.ast.exp',X36),s('type.ast.exp',X37))) | ? [X38,X39,X40] : s('type.ast.exp',X6) = s('type.ast.exp','const.ast.If_3'(s('type.ast.exp',X38),s('type.ast.exp',X39),s('type.ast.exp',X40))) | ? [X41,X42] : s('type.ast.exp',X6) = s('type.ast.exp','const.ast.Mat_2'(s('type.ast.exp',X41),s('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),X42))) | ? [X43,X44,X45] : s('type.ast.exp',X6) = s('type.ast.exp','const.ast.Let_3'(s('type.option.option'('type.list.list'('type.string.char')),X43),s('type.ast.exp',X44),s('type.ast.exp',X45))) | ? [X46,X47] : s('type.ast.exp',X6) = s('type.ast.exp','const.ast.Letrec_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),X46),s('type.ast.exp',X47)))) => (? [X18,X19,X20] : s('type.ast.exp',X6) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Opn_1'(s('type.ast.opn',X18))),s('type.list.list'('type.ast.exp'),'const.list.CONS_2'(s('type.ast.exp',X19),s('type.list.list'('type.ast.exp'),'const.list.CONS_2'(s('type.ast.exp',X20),s('type.list.list'('type.ast.exp'),'const.list.NIL_0'))))))) | ? [X7] : s('type.ast.exp',X6) = s('type.ast.exp','const.ast.Raise_1'(s('type.ast.exp',X7))) | ? [X8,X9] : s('type.ast.exp',X6) = s('type.ast.exp','const.ast.Handle_2'(s('type.ast.exp',X8),s('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),X9))) | ? [X10] : s('type.ast.exp',X6) = s('type.ast.exp','const.ast.Lit_1'(s('type.ast.lit',X10))) | ? [X11,X12] : s('type.ast.exp',X6) = s('type.ast.exp','const.ast.Con_2'(s('type.option.option'('type.ast.id'('type.list.list'('type.string.char'))),X11),s('type.list.list'('type.ast.exp'),X12))) | ? [X13] : s('type.ast.exp',X6) = s('type.ast.exp','const.ast.Var_1'(s('type.ast.id'('type.list.list'('type.string.char')),X13))) | ? [X14,X15] : s('type.ast.exp',X6) = s('type.ast.exp','const.ast.Fun_2'(s('type.list.list'('type.string.char'),X14),s('type.ast.exp',X15))) | ? [X16] : s('type.ast.exp',X6) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Opn_1'(s('type.ast.opn',X16))),s('type.list.list'('type.ast.exp'),'const.list.NIL_0'))) | ? [X16,X17] : s('type.ast.exp',X6) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Opn_1'(s('type.ast.opn',X16))),s('type.list.list'('type.ast.exp'),'const.list.CONS_2'(s('type.ast.exp',X17),s('type.list.list'('type.ast.exp'),'const.list.NIL_0'))))) | ? [X16,X17,X21,X22,X23] : s('type.ast.exp',X6) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Opn_1'(s('type.ast.opn',X16))),s('type.list.list'('type.ast.exp'),'const.list.CONS_2'(s('type.ast.exp',X17),s('type.list.list'('type.ast.exp'),'const.list.CONS_2'(s('type.ast.exp',X21),s('type.list.list'('type.ast.exp'),'const.list.CONS_2'(s('type.ast.exp',X22),s('type.list.list'('type.ast.exp'),X23))))))))) | ? [X24,X25] : s('type.ast.exp',X6) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Opb_1'(s('type.ast.opb',X24))),s('type.list.list'('type.ast.exp'),X25))) | ? [X26,X27,X25] : s('type.ast.exp',X6) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Opw_2'(s('type.ast.word_size',X26),s('type.ast.opw',X27))),s('type.list.list'('type.ast.exp'),X25))) | ? [X28,X29,X30,X25] : s('type.ast.exp',X6) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Shift_3'(s('type.ast.word_size',X28),s('type.ast.shift',X29),s('type.num.num',X30))),s('type.list.list'('type.ast.exp'),X25))) | ? [X25] : s('type.ast.exp',X6) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Equality_0'),s('type.list.list'('type.ast.exp'),X25))) | ? [X25] : s('type.ast.exp',X6) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Opapp_0'),s('type.list.list'('type.ast.exp'),X25))) | ? [X25] : s('type.ast.exp',X6) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Opassign_0'),s('type.list.list'('type.ast.exp'),X25))) | ? [X25] : s('type.ast.exp',X6) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Opref_0'),s('type.list.list'('type.ast.exp'),X25))) | ? [X25] : s('type.ast.exp',X6) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Opderef_0'),s('type.list.list'('type.ast.exp'),X25))) | ? [X25] : s('type.ast.exp',X6) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Aw8alloc_0'),s('type.list.list'('type.ast.exp'),X25))) | ? [X25] : s('type.ast.exp',X6) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Aw8sub_0'),s('type.list.list'('type.ast.exp'),X25))) | ? [X25] : s('type.ast.exp',X6) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Aw8length_0'),s('type.list.list'('type.ast.exp'),X25))) | ? [X25] : s('type.ast.exp',X6) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Aw8update_0'),s('type.list.list'('type.ast.exp'),X25))) | ? [X31,X25] : s('type.ast.exp',X6) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.WordFromInt_1'(s('type.ast.word_size',X31))),s('type.list.list'('type.ast.exp'),X25))) | ? [X32,X25] : s('type.ast.exp',X6) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.WordToInt_1'(s('type.ast.word_size',X32))),s('type.list.list'('type.ast.exp'),X25))) | ? [X25] : s('type.ast.exp',X6) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Ord_0'),s('type.list.list'('type.ast.exp'),X25))) | ? [X25] : s('type.ast.exp',X6) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Chr_0'),s('type.list.list'('type.ast.exp'),X25))) | ? [X33,X25] : s('type.ast.exp',X6) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Chopb_1'(s('type.ast.opb',X33))),s('type.list.list'('type.ast.exp'),X25))) | ? [X25] : s('type.ast.exp',X6) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Explode_0'),s('type.list.list'('type.ast.exp'),X25))) | ? [X25] : s('type.ast.exp',X6) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Implode_0'),s('type.list.list'('type.ast.exp'),X25))) | ? [X25] : s('type.ast.exp',X6) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Strlen_0'),s('type.list.list'('type.ast.exp'),X25))) | ? [X25] : s('type.ast.exp',X6) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.VfromList_0'),s('type.list.list'('type.ast.exp'),X25))) | ? [X25] : s('type.ast.exp',X6) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Vsub_0'),s('type.list.list'('type.ast.exp'),X25))) | ? [X25] : s('type.ast.exp',X6) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Vlength_0'),s('type.list.list'('type.ast.exp'),X25))) | ? [X25] : s('type.ast.exp',X6) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Aalloc_0'),s('type.list.list'('type.ast.exp'),X25))) | ? [X25] : s('type.ast.exp',X6) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Asub_0'),s('type.list.list'('type.ast.exp'),X25))) | ? [X25] : s('type.ast.exp',X6) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Alength_0'),s('type.list.list'('type.ast.exp'),X25))) | ? [X25] : s('type.ast.exp',X6) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Aupdate_0'),s('type.list.list'('type.ast.exp'),X25))) | ? [X34,X25] : s('type.ast.exp',X6) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.FFI_1'(s('type.num.num',X34))),s('type.list.list'('type.ast.exp'),X25))) | ? [X35,X36,X37] : s('type.ast.exp',X6) = s('type.ast.exp','const.ast.Log_3'(s('type.ast.lop',X35),s('type.ast.exp',X36),s('type.ast.exp',X37))) | ? [X38,X39,X40] : s('type.ast.exp',X6) = s('type.ast.exp','const.ast.If_3'(s('type.ast.exp',X38),s('type.ast.exp',X39),s('type.ast.exp',X40))) | ? [X41,X42] : s('type.ast.exp',X6) = s('type.ast.exp','const.ast.Mat_2'(s('type.ast.exp',X41),s('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),X42))) | ? [X43,X44,X45] : s('type.ast.exp',X6) = s('type.ast.exp','const.ast.Let_3'(s('type.option.option'('type.list.list'('type.string.char')),X43),s('type.ast.exp',X44),s('type.ast.exp',X45))) | ? [X46,X47] : s('type.ast.exp',X6) = s('type.ast.exp','const.ast.Letrec_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),X46),s('type.ast.exp',X47)))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : ((? [X7] : s('type.ast.exp',X6) = s('type.ast.exp','const.ast.Raise_1'(s('type.ast.exp',X7))) | ? [X8,X9] : s('type.ast.exp',X6) = s('type.ast.exp','const.ast.Handle_2'(s('type.ast.exp',X8),s('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),X9))) | ? [X10] : s('type.ast.exp',X6) = s('type.ast.exp','const.ast.Lit_1'(s('type.ast.lit',X10))) | ? [X11,X12] : s('type.ast.exp',X6) = s('type.ast.exp','const.ast.Con_2'(s('type.option.option'('type.ast.id'('type.list.list'('type.string.char'))),X11),s('type.list.list'('type.ast.exp'),X12))) | ? [X13] : s('type.ast.exp',X6) = s('type.ast.exp','const.ast.Var_1'(s('type.ast.id'('type.list.list'('type.string.char')),X13))) | ? [X14,X15] : s('type.ast.exp',X6) = s('type.ast.exp','const.ast.Fun_2'(s('type.list.list'('type.string.char'),X14),s('type.ast.exp',X15))) | ? [X16] : s('type.ast.exp',X6) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Opn_1'(s('type.ast.opn',X16))),s('type.list.list'('type.ast.exp'),'const.list.NIL_0'))) | ? [X16,X17] : s('type.ast.exp',X6) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Opn_1'(s('type.ast.opn',X16))),s('type.list.list'('type.ast.exp'),'const.list.CONS_2'(s('type.ast.exp',X17),s('type.list.list'('type.ast.exp'),'const.list.NIL_0'))))) | ? [X18,X19,X20] : s('type.ast.exp',X6) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Opn_1'(s('type.ast.opn',X18))),s('type.list.list'('type.ast.exp'),'const.list.CONS_2'(s('type.ast.exp',X19),s('type.list.list'('type.ast.exp'),'const.list.CONS_2'(s('type.ast.exp',X20),s('type.list.list'('type.ast.exp'),'const.list.NIL_0'))))))) | ? [X16,X17,X21,X22,X23] : s('type.ast.exp',X6) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Opn_1'(s('type.ast.opn',X16))),s('type.list.list'('type.ast.exp'),'const.list.CONS_2'(s('type.ast.exp',X17),s('type.list.list'('type.ast.exp'),'const.list.CONS_2'(s('type.ast.exp',X21),s('type.list.list'('type.ast.exp'),'const.list.CONS_2'(s('type.ast.exp',X22),s('type.list.list'('type.ast.exp'),X23))))))))) | ? [X24,X25] : s('type.ast.exp',X6) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Opb_1'(s('type.ast.opb',X24))),s('type.list.list'('type.ast.exp'),X25))) | ? [X26,X27,X25] : s('type.ast.exp',X6) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Opw_2'(s('type.ast.word_size',X26),s('type.ast.opw',X27))),s('type.list.list'('type.ast.exp'),X25))) | ? [X28,X29,X30,X25] : s('type.ast.exp',X6) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Shift_3'(s('type.ast.word_size',X28),s('type.ast.shift',X29),s('type.num.num',X30))),s('type.list.list'('type.ast.exp'),X25))) | ? [X25] : s('type.ast.exp',X6) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Equality_0'),s('type.list.list'('type.ast.exp'),X25))) | ? [X25] : s('type.ast.exp',X6) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Opapp_0'),s('type.list.list'('type.ast.exp'),X25))) | ? [X25] : s('type.ast.exp',X6) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Opassign_0'),s('type.list.list'('type.ast.exp'),X25))) | ? [X25] : s('type.ast.exp',X6) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Opref_0'),s('type.list.list'('type.ast.exp'),X25))) | ? [X25] : s('type.ast.exp',X6) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Opderef_0'),s('type.list.list'('type.ast.exp'),X25))) | ? [X25] : s('type.ast.exp',X6) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Aw8alloc_0'),s('type.list.list'('type.ast.exp'),X25))) | ? [X25] : s('type.ast.exp',X6) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Aw8sub_0'),s('type.list.list'('type.ast.exp'),X25))) | ? [X25] : s('type.ast.exp',X6) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Aw8length_0'),s('type.list.list'('type.ast.exp'),X25))) | ? [X25] : s('type.ast.exp',X6) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Aw8update_0'),s('type.list.list'('type.ast.exp'),X25))) | ? [X31,X25] : s('type.ast.exp',X6) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.WordFromInt_1'(s('type.ast.word_size',X31))),s('type.list.list'('type.ast.exp'),X25))) | ? [X32,X25] : s('type.ast.exp',X6) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.WordToInt_1'(s('type.ast.word_size',X32))),s('type.list.list'('type.ast.exp'),X25))) | ? [X25] : s('type.ast.exp',X6) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Ord_0'),s('type.list.list'('type.ast.exp'),X25))) | ? [X25] : s('type.ast.exp',X6) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Chr_0'),s('type.list.list'('type.ast.exp'),X25))) | ? [X33,X25] : s('type.ast.exp',X6) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Chopb_1'(s('type.ast.opb',X33))),s('type.list.list'('type.ast.exp'),X25))) | ? [X25] : s('type.ast.exp',X6) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Explode_0'),s('type.list.list'('type.ast.exp'),X25))) | ? [X25] : s('type.ast.exp',X6) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Implode_0'),s('type.list.list'('type.ast.exp'),X25))) | ? [X25] : s('type.ast.exp',X6) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Strlen_0'),s('type.list.list'('type.ast.exp'),X25))) | ? [X25] : s('type.ast.exp',X6) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.VfromList_0'),s('type.list.list'('type.ast.exp'),X25))) | ? [X25] : s('type.ast.exp',X6) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Vsub_0'),s('type.list.list'('type.ast.exp'),X25))) | ? [X25] : s('type.ast.exp',X6) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Vlength_0'),s('type.list.list'('type.ast.exp'),X25))) | ? [X25] : s('type.ast.exp',X6) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Aalloc_0'),s('type.list.list'('type.ast.exp'),X25))) | ? [X25] : s('type.ast.exp',X6) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Asub_0'),s('type.list.list'('type.ast.exp'),X25))) | ? [X25] : s('type.ast.exp',X6) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Alength_0'),s('type.list.list'('type.ast.exp'),X25))) | ? [X25] : s('type.ast.exp',X6) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Aupdate_0'),s('type.list.list'('type.ast.exp'),X25))) | ? [X34,X25] : s('type.ast.exp',X6) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.FFI_1'(s('type.num.num',X34))),s('type.list.list'('type.ast.exp'),X25))) | ? [X35,X36,X37] : s('type.ast.exp',X6) = s('type.ast.exp','const.ast.Log_3'(s('type.ast.lop',X35),s('type.ast.exp',X36),s('type.ast.exp',X37))) | ? [X38,X39,X40] : s('type.ast.exp',X6) = s('type.ast.exp','const.ast.If_3'(s('type.ast.exp',X38),s('type.ast.exp',X39),s('type.ast.exp',X40))) | ? [X41,X42] : s('type.ast.exp',X6) = s('type.ast.exp','const.ast.Mat_2'(s('type.ast.exp',X41),s('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),X42))) | ? [X43,X44,X45] : s('type.ast.exp',X6) = s('type.ast.exp','const.ast.Let_3'(s('type.option.option'('type.list.list'('type.string.char')),X43),s('type.ast.exp',X44),s('type.ast.exp',X45))) | ? [X46,X47] : s('type.ast.exp',X6) = s('type.ast.exp','const.ast.Letrec_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),X46),s('type.ast.exp',X47)))) => (? [X18,X19,X20] : s('type.ast.exp',X6) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Opn_1'(s('type.ast.opn',X18))),s('type.list.list'('type.ast.exp'),'const.list.CONS_2'(s('type.ast.exp',X19),s('type.list.list'('type.ast.exp'),'const.list.CONS_2'(s('type.ast.exp',X20),s('type.list.list'('type.ast.exp'),'const.list.NIL_0'))))))) | ? [X7] : s('type.ast.exp',X6) = s('type.ast.exp','const.ast.Raise_1'(s('type.ast.exp',X7))) | ? [X8,X9] : s('type.ast.exp',X6) = s('type.ast.exp','const.ast.Handle_2'(s('type.ast.exp',X8),s('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),X9))) | ? [X10] : s('type.ast.exp',X6) = s('type.ast.exp','const.ast.Lit_1'(s('type.ast.lit',X10))) | ? [X11,X12] : s('type.ast.exp',X6) = s('type.ast.exp','const.ast.Con_2'(s('type.option.option'('type.ast.id'('type.list.list'('type.string.char'))),X11),s('type.list.list'('type.ast.exp'),X12))) | ? [X13] : s('type.ast.exp',X6) = s('type.ast.exp','const.ast.Var_1'(s('type.ast.id'('type.list.list'('type.string.char')),X13))) | ? [X14,X15] : s('type.ast.exp',X6) = s('type.ast.exp','const.ast.Fun_2'(s('type.list.list'('type.string.char'),X14),s('type.ast.exp',X15))) | ? [X16] : s('type.ast.exp',X6) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Opn_1'(s('type.ast.opn',X16))),s('type.list.list'('type.ast.exp'),'const.list.NIL_0'))) | ? [X16,X17] : s('type.ast.exp',X6) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Opn_1'(s('type.ast.opn',X16))),s('type.list.list'('type.ast.exp'),'const.list.CONS_2'(s('type.ast.exp',X17),s('type.list.list'('type.ast.exp'),'const.list.NIL_0'))))) | ? [X16,X17,X21,X22,X23] : s('type.ast.exp',X6) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Opn_1'(s('type.ast.opn',X16))),s('type.list.list'('type.ast.exp'),'const.list.CONS_2'(s('type.ast.exp',X17),s('type.list.list'('type.ast.exp'),'const.list.CONS_2'(s('type.ast.exp',X21),s('type.list.list'('type.ast.exp'),'const.list.CONS_2'(s('type.ast.exp',X22),s('type.list.list'('type.ast.exp'),X23))))))))) | ? [X24,X25] : s('type.ast.exp',X6) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Opb_1'(s('type.ast.opb',X24))),s('type.list.list'('type.ast.exp'),X25))) | ? [X26,X27,X25] : s('type.ast.exp',X6) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Opw_2'(s('type.ast.word_size',X26),s('type.ast.opw',X27))),s('type.list.list'('type.ast.exp'),X25))) | ? [X28,X29,X30,X25] : s('type.ast.exp',X6) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Shift_3'(s('type.ast.word_size',X28),s('type.ast.shift',X29),s('type.num.num',X30))),s('type.list.list'('type.ast.exp'),X25))) | ? [X25] : s('type.ast.exp',X6) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Equality_0'),s('type.list.list'('type.ast.exp'),X25))) | ? [X25] : s('type.ast.exp',X6) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Opapp_0'),s('type.list.list'('type.ast.exp'),X25))) | ? [X25] : s('type.ast.exp',X6) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Opassign_0'),s('type.list.list'('type.ast.exp'),X25))) | ? [X25] : s('type.ast.exp',X6) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Opref_0'),s('type.list.list'('type.ast.exp'),X25))) | ? [X25] : s('type.ast.exp',X6) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Opderef_0'),s('type.list.list'('type.ast.exp'),X25))) | ? [X25] : s('type.ast.exp',X6) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Aw8alloc_0'),s('type.list.list'('type.ast.exp'),X25))) | ? [X25] : s('type.ast.exp',X6) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Aw8sub_0'),s('type.list.list'('type.ast.exp'),X25))) | ? [X25] : s('type.ast.exp',X6) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Aw8length_0'),s('type.list.list'('type.ast.exp'),X25))) | ? [X25] : s('type.ast.exp',X6) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Aw8update_0'),s('type.list.list'('type.ast.exp'),X25))) | ? [X31,X25] : s('type.ast.exp',X6) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.WordFromInt_1'(s('type.ast.word_size',X31))),s('type.list.list'('type.ast.exp'),X25))) | ? [X32,X25] : s('type.ast.exp',X6) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.WordToInt_1'(s('type.ast.word_size',X32))),s('type.list.list'('type.ast.exp'),X25))) | ? [X25] : s('type.ast.exp',X6) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Ord_0'),s('type.list.list'('type.ast.exp'),X25))) | ? [X25] : s('type.ast.exp',X6) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Chr_0'),s('type.list.list'('type.ast.exp'),X25))) | ? [X33,X25] : s('type.ast.exp',X6) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Chopb_1'(s('type.ast.opb',X33))),s('type.list.list'('type.ast.exp'),X25))) | ? [X25] : s('type.ast.exp',X6) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Explode_0'),s('type.list.list'('type.ast.exp'),X25))) | ? [X25] : s('type.ast.exp',X6) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Implode_0'),s('type.list.list'('type.ast.exp'),X25))) | ? [X25] : s('type.ast.exp',X6) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Strlen_0'),s('type.list.list'('type.ast.exp'),X25))) | ? [X25] : s('type.ast.exp',X6) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.VfromList_0'),s('type.list.list'('type.ast.exp'),X25))) | ? [X25] : s('type.ast.exp',X6) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Vsub_0'),s('type.list.list'('type.ast.exp'),X25))) | ? [X25] : s('type.ast.exp',X6) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Vlength_0'),s('type.list.list'('type.ast.exp'),X25))) | ? [X25] : s('type.ast.exp',X6) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Aalloc_0'),s('type.list.list'('type.ast.exp'),X25))) | ? [X25] : s('type.ast.exp',X6) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Asub_0'),s('type.list.list'('type.ast.exp'),X25))) | ? [X25] : s('type.ast.exp',X6) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Alength_0'),s('type.list.list'('type.ast.exp'),X25))) | ? [X25] : s('type.ast.exp',X6) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Aupdate_0'),s('type.list.list'('type.ast.exp'),X25))) | ? [X34,X25] : s('type.ast.exp',X6) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.FFI_1'(s('type.num.num',X34))),s('type.list.list'('type.ast.exp'),X25))) | ? [X35,X36,X37] : s('type.ast.exp',X6) = s('type.ast.exp','const.ast.Log_3'(s('type.ast.lop',X35),s('type.ast.exp',X36),s('type.ast.exp',X37))) | ? [X38,X39,X40] : s('type.ast.exp',X6) = s('type.ast.exp','const.ast.If_3'(s('type.ast.exp',X38),s('type.ast.exp',X39),s('type.ast.exp',X40))) | ? [X41,X42] : s('type.ast.exp',X6) = s('type.ast.exp','const.ast.Mat_2'(s('type.ast.exp',X41),s('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),X42))) | ? [X43,X44,X45] : s('type.ast.exp',X6) = s('type.ast.exp','const.ast.Let_3'(s('type.option.option'('type.list.list'('type.string.char')),X43),s('type.ast.exp',X44),s('type.ast.exp',X45))) | ? [X46,X47] : s('type.ast.exp',X6) = s('type.ast.exp','const.ast.Letrec_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),X46),s('type.ast.exp',X47)))))),
  file('thm.ml_optimise.ml_optimise_24_prove_ltb','thm.ml_optimise.ml_optimise_24_prove_ltb')).
fof(f4403,plain,(
  $false | $spl46),
  inference(subsumption_resolution,[],[f485,f247])).
fof(f247,plain,(
  ( ! [X30,X31] : (s('type.ast.exp',sK12) != s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.WordToInt_1'(s('type.ast.word_size',X30))),s('type.list.list'('type.ast.exp'),X31)))) )),
  inference(cnf_transformation,[],[f138])).
fof(f4404,plain,(
  $false | $spl20),
  inference(subsumption_resolution,[],[f459,f234])).
fof(f234,plain,(
  ( ! [X50,X51] : (s('type.ast.exp',sK12) != s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Opb_1'(s('type.ast.opb',X50))),s('type.list.list'('type.ast.exp'),X51)))) )),
  inference(cnf_transformation,[],[f138])).
fof(f4480,plain,(
  $false | $spl22),
  inference(subsumption_resolution,[],[f461,f235])).
fof(f235,plain,(
  ( ! [X47,X48,X49] : (s('type.ast.exp',sK12) != s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Opw_2'(s('type.ast.word_size',X47),s('type.ast.opw',X48))),s('type.list.list'('type.ast.exp'),X49)))) )),
  inference(cnf_transformation,[],[f138])).
fof(f4901,plain,(
  $false | $spl16),
  inference(subsumption_resolution,[],[f455,f224])).
fof(f224,plain,(
  ( ! [X70,X71,X69] : (s('type.ast.exp',sK12) != s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Opn_1'(s('type.ast.opn',X69))),s('type.list.list'('type.ast.exp'),'const.list.CONS_2'(s('type.ast.exp',X70),s('type.list.list'('type.ast.exp'),'const.list.CONS_2'(s('type.ast.exp',X71),s('type.list.list'('type.ast.exp'),'const.list.NIL_0')))))))) )),
  inference(cnf_transformation,[],[f138])).
fof(f4902,plain,(
  $false | $spl72),
  inference(subsumption_resolution,[],[f511,f260])).
fof(f260,plain,(
  ( ! [X16] : (s('type.ast.exp',sK12) != s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Aupdate_0'),s('type.list.list'('type.ast.exp'),X16)))) )),
  inference(cnf_transformation,[],[f138])).
fof(f4903,plain,(
  $false | $spl56),
  inference(subsumption_resolution,[],[f495,f252])).
fof(f252,plain,(
  ( ! [X24] : (s('type.ast.exp',sK12) != s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Implode_0'),s('type.list.list'('type.ast.exp'),X24)))) )),
  inference(cnf_transformation,[],[f138])).
fof(f4904,plain,(
  $false | $spl38),
  inference(subsumption_resolution,[],[f477,f243])).
fof(f243,plain,(
  ( ! [X36] : (s('type.ast.exp',sK12) != s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Aw8sub_0'),s('type.list.list'('type.ast.exp'),X36)))) )),
  inference(cnf_transformation,[],[f138])).
fof(f4905,plain,(
  $false | $spl84),
  inference(subsumption_resolution,[],[f523,f266])).
fof(f266,plain,(
  ( ! [X2,X1] : (s('type.ast.exp',sK12) != s('type.ast.exp','const.ast.Letrec_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),X1),s('type.ast.exp',X2)))) )),
  inference(cnf_transformation,[],[f138])).
fof(f4906,plain,(
  $false | $spl60),
  inference(subsumption_resolution,[],[f499,f254])).
fof(f254,plain,(
  ( ! [X22] : (s('type.ast.exp',sK12) != s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.VfromList_0'),s('type.list.list'('type.ast.exp'),X22)))) )),
  inference(cnf_transformation,[],[f138])).
fof(f4907,plain,(
  $false | $spl42),
  inference(subsumption_resolution,[],[f481,f245])).
fof(f245,plain,(
  ( ! [X34] : (s('type.ast.exp',sK12) != s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Aw8update_0'),s('type.list.list'('type.ast.exp'),X34)))) )),
  inference(cnf_transformation,[],[f138])).
fof(f4908,plain,(
  $false | $spl32),
  inference(subsumption_resolution,[],[f471,f240])).
fof(f240,plain,(
  ( ! [X39] : (s('type.ast.exp',sK12) != s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Opref_0'),s('type.list.list'('type.ast.exp'),X39)))) )),
  inference(cnf_transformation,[],[f138])).
fof(f4909,plain,(
  $false | $spl26),
  inference(subsumption_resolution,[],[f465,f237])).
fof(f237,plain,(
  ( ! [X42] : (s('type.ast.exp',sK12) != s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Equality_0'),s('type.list.list'('type.ast.exp'),X42)))) )),
  inference(cnf_transformation,[],[f138])).
fof(f4910,plain,(
  $false | $spl80),
  inference(subsumption_resolution,[],[f519,f264])).
fof(f264,plain,(
  ( ! [X6,X7] : (s('type.ast.exp',sK12) != s('type.ast.exp','const.ast.Mat_2'(s('type.ast.exp',X6),s('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),X7)))) )),
  inference(cnf_transformation,[],[f138])).
fof(f4911,plain,(
  $false | $spl68),
  inference(subsumption_resolution,[],[f507,f258])).
fof(f258,plain,(
  ( ! [X18] : (s('type.ast.exp',sK12) != s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Asub_0'),s('type.list.list'('type.ast.exp'),X18)))) )),
  inference(cnf_transformation,[],[f138])).
fof(f4912,plain,(
  $false | $spl58),
  inference(subsumption_resolution,[],[f497,f253])).
fof(f253,plain,(
  ( ! [X23] : (s('type.ast.exp',sK12) != s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Strlen_0'),s('type.list.list'('type.ast.exp'),X23)))) )),
  inference(cnf_transformation,[],[f138])).
fof(f4913,plain,(
  $false | $spl44),
  inference(subsumption_resolution,[],[f483,f246])).
fof(f246,plain,(
  ( ! [X33,X32] : (s('type.ast.exp',sK12) != s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.WordFromInt_1'(s('type.ast.word_size',X32))),s('type.list.list'('type.ast.exp'),X33)))) )),
  inference(cnf_transformation,[],[f138])).
fof(f4914,plain,(
  $false | $spl50),
  inference(subsumption_resolution,[],[f489,f249])).
fof(f249,plain,(
  ( ! [X28] : (s('type.ast.exp',sK12) != s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Chr_0'),s('type.list.list'('type.ast.exp'),X28)))) )),
  inference(cnf_transformation,[],[f138])).
fof(f4915,plain,(
  $false | $spl4),
  inference(subsumption_resolution,[],[f443,f227])).
fof(f227,plain,(
  ( ! [X65] : (s('type.ast.exp',sK12) != s('type.ast.exp','const.ast.Lit_1'(s('type.ast.lit',X65)))) )),
  inference(cnf_transformation,[],[f138])).
fof(f4916,plain,(
  $false | $spl12),
  inference(subsumption_resolution,[],[f451,f231])).
fof(f231,plain,(
  ( ! [X59] : (s('type.ast.exp',sK12) != s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Opn_1'(s('type.ast.opn',X59))),s('type.list.list'('type.ast.exp'),'const.list.NIL_0')))) )),
  inference(cnf_transformation,[],[f138])).
fof(f4917,plain,(
  $false | $spl2),
  inference(subsumption_resolution,[],[f441,f226])).
fof(f226,plain,(
  ( ! [X66,X67] : (s('type.ast.exp',sK12) != s('type.ast.exp','const.ast.Handle_2'(s('type.ast.exp',X66),s('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),X67)))) )),
  inference(cnf_transformation,[],[f138])).
fof(f4918,plain,(
  $false | $spl54),
  inference(subsumption_resolution,[],[f493,f251])).
fof(f251,plain,(
  ( ! [X25] : (s('type.ast.exp',sK12) != s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Explode_0'),s('type.list.list'('type.ast.exp'),X25)))) )),
  inference(cnf_transformation,[],[f138])).
fof(f6677,plain,(
  $false | $spl18),
  inference(subsumption_resolution,[],[f457,f233])).
fof(f233,plain,(
  ( ! [X54,X52,X56,X55,X53] : (s('type.ast.exp',sK12) != s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Opn_1'(s('type.ast.opn',X52))),s('type.list.list'('type.ast.exp'),'const.list.CONS_2'(s('type.ast.exp',X53),s('type.list.list'('type.ast.exp'),'const.list.CONS_2'(s('type.ast.exp',X54),s('type.list.list'('type.ast.exp'),'const.list.CONS_2'(s('type.ast.exp',X55),s('type.list.list'('type.ast.exp'),X56)))))))))) )),
  inference(cnf_transformation,[],[f138])).
fof(f6678,plain,(
  $false | $spl36),
  inference(subsumption_resolution,[],[f475,f242])).
fof(f242,plain,(
  ( ! [X37] : (s('type.ast.exp',sK12) != s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Aw8alloc_0'),s('type.list.list'('type.ast.exp'),X37)))) )),
  inference(cnf_transformation,[],[f138])).
fof(f6679,plain,(
  $false | $spl10),
  inference(subsumption_resolution,[],[f449,f230])).
fof(f230,plain,(
  ( ! [X61,X60] : (s('type.ast.exp',sK12) != s('type.ast.exp','const.ast.Fun_2'(s('type.list.list'('type.string.char'),X60),s('type.ast.exp',X61)))) )),
  inference(cnf_transformation,[],[f138])).
fof(f6680,plain,(
  $false | $spl76),
  inference(subsumption_resolution,[],[f515,f262])).
fof(f262,plain,(
  ( ! [X12,X13,X11] : (s('type.ast.exp',sK12) != s('type.ast.exp','const.ast.Log_3'(s('type.ast.lop',X11),s('type.ast.exp',X12),s('type.ast.exp',X13)))) )),
  inference(cnf_transformation,[],[f138])).
fof(f6681,plain,(
  $false | $spl52),
  inference(subsumption_resolution,[],[f491,f250])).
fof(f250,plain,(
  ( ! [X26,X27] : (s('type.ast.exp',sK12) != s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Chopb_1'(s('type.ast.opb',X26))),s('type.list.list'('type.ast.exp'),X27)))) )),
  inference(cnf_transformation,[],[f138])).
fof(f6682,plain,(
  $false | $spl28),
  inference(subsumption_resolution,[],[f467,f238])).
fof(f238,plain,(
  ( ! [X41] : (s('type.ast.exp',sK12) != s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Opapp_0'),s('type.list.list'('type.ast.exp'),X41)))) )),
  inference(cnf_transformation,[],[f138])).
fof(f6683,plain,(
  $false | $spl30),
  inference(subsumption_resolution,[],[f469,f239])).
fof(f239,plain,(
  ( ! [X40] : (s('type.ast.exp',sK12) != s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Opassign_0'),s('type.list.list'('type.ast.exp'),X40)))) )),
  inference(cnf_transformation,[],[f138])).
fof(f6684,plain,(
  $false | $spl34),
  inference(subsumption_resolution,[],[f473,f241])).
fof(f241,plain,(
  ( ! [X38] : (s('type.ast.exp',sK12) != s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Opderef_0'),s('type.list.list'('type.ast.exp'),X38)))) )),
  inference(cnf_transformation,[],[f138])).
fof(f6685,plain,(
  $false | $spl82),
  inference(subsumption_resolution,[],[f521,f265])).
fof(f265,plain,(
  ( ! [X4,X5,X3] : (s('type.ast.exp',sK12) != s('type.ast.exp','const.ast.Let_3'(s('type.option.option'('type.list.list'('type.string.char')),X3),s('type.ast.exp',X4),s('type.ast.exp',X5)))) )),
  inference(cnf_transformation,[],[f138])).
fof(f6686,plain,(
  $false | $spl8),
  inference(subsumption_resolution,[],[f447,f229])).
fof(f229,plain,(
  ( ! [X62] : (s('type.ast.exp',sK12) != s('type.ast.exp','const.ast.Var_1'(s('type.ast.id'('type.list.list'('type.string.char')),X62)))) )),
  inference(cnf_transformation,[],[f138])).
fof(f6687,plain,(
  $false | $spl78),
  inference(subsumption_resolution,[],[f517,f263])).
fof(f263,plain,(
  ( ! [X10,X8,X9] : (s('type.ast.exp',sK12) != s('type.ast.exp','const.ast.If_3'(s('type.ast.exp',X8),s('type.ast.exp',X9),s('type.ast.exp',X10)))) )),
  inference(cnf_transformation,[],[f138])).
fof(f6688,plain,(
  $false | $spl74),
  inference(subsumption_resolution,[],[f513,f261])).
fof(f261,plain,(
  ( ! [X14,X15] : (s('type.ast.exp',sK12) != s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.FFI_1'(s('type.num.num',X14))),s('type.list.list'('type.ast.exp'),X15)))) )),
  inference(cnf_transformation,[],[f138])).
fof(f6689,plain,(
  $false | $spl64),
  inference(subsumption_resolution,[],[f503,f256])).
fof(f256,plain,(
  ( ! [X20] : (s('type.ast.exp',sK12) != s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Vlength_0'),s('type.list.list'('type.ast.exp'),X20)))) )),
  inference(cnf_transformation,[],[f138])).
fof(f6690,plain,(
  $false | $spl70),
  inference(subsumption_resolution,[],[f509,f259])).
fof(f259,plain,(
  ( ! [X17] : (s('type.ast.exp',sK12) != s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Alength_0'),s('type.list.list'('type.ast.exp'),X17)))) )),
  inference(cnf_transformation,[],[f138])).
fof(f6691,plain,(
  $false | $spl14),
  inference(subsumption_resolution,[],[f453,f232])).
fof(f232,plain,(
  ( ! [X57,X58] : (s('type.ast.exp',sK12) != s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Opn_1'(s('type.ast.opn',X57))),s('type.list.list'('type.ast.exp'),'const.list.CONS_2'(s('type.ast.exp',X58),s('type.list.list'('type.ast.exp'),'const.list.NIL_0')))))) )),
  inference(cnf_transformation,[],[f138])).
fof(f6692,plain,(
  $false | $spl66),
  inference(subsumption_resolution,[],[f505,f257])).
fof(f257,plain,(
  ( ! [X19] : (s('type.ast.exp',sK12) != s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Aalloc_0'),s('type.list.list'('type.ast.exp'),X19)))) )),
  inference(cnf_transformation,[],[f138])).
fof(f6693,plain,(
  $false | $spl40),
  inference(subsumption_resolution,[],[f479,f244])).
fof(f244,plain,(
  ( ! [X35] : (s('type.ast.exp',sK12) != s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Aw8length_0'),s('type.list.list'('type.ast.exp'),X35)))) )),
  inference(cnf_transformation,[],[f138])).
fof(f6694,plain,(
  $false | $spl48),
  inference(subsumption_resolution,[],[f487,f248])).
fof(f248,plain,(
  ( ! [X29] : (s('type.ast.exp',sK12) != s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Ord_0'),s('type.list.list'('type.ast.exp'),X29)))) )),
  inference(cnf_transformation,[],[f138])).
fof(f6695,plain,(
  $false | $spl6),
  inference(subsumption_resolution,[],[f445,f228])).
fof(f228,plain,(
  ( ! [X64,X63] : (s('type.ast.exp',sK12) != s('type.ast.exp','const.ast.Con_2'(s('type.option.option'('type.ast.id'('type.list.list'('type.string.char'))),X63),s('type.list.list'('type.ast.exp'),X64)))) )),
  inference(cnf_transformation,[],[f138])).
fof(f6696,plain,(
  $false | $spl0),
  inference(subsumption_resolution,[],[f439,f225])).
fof(f225,plain,(
  ( ! [X68] : (s('type.ast.exp',sK12) != s('type.ast.exp','const.ast.Raise_1'(s('type.ast.exp',X68)))) )),
  inference(cnf_transformation,[],[f138])).
fof(f439,plain,(
  s('type.ast.exp',sK12) = s('type.ast.exp','const.ast.Raise_1'(s('type.ast.exp',sK13))) | $spl0),
  inference(cnf_transformation,[],[f439_D])).
fof(f439_D,plain,(
  s('type.ast.exp',sK12) = s('type.ast.exp','const.ast.Raise_1'(s('type.ast.exp',sK13))) <=> ~$spl0),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl0])])).
fof(f441,plain,(
  s('type.ast.exp',sK12) = s('type.ast.exp','const.ast.Handle_2'(s('type.ast.exp',sK14),s('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),sK15))) | $spl2),
  inference(cnf_transformation,[],[f441_D])).
fof(f441_D,plain,(
  s('type.ast.exp',sK12) = s('type.ast.exp','const.ast.Handle_2'(s('type.ast.exp',sK14),s('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),sK15))) <=> ~$spl2),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl2])])).
fof(f443,plain,(
  s('type.ast.exp',sK12) = s('type.ast.exp','const.ast.Lit_1'(s('type.ast.lit',sK16))) | $spl4),
  inference(cnf_transformation,[],[f443_D])).
fof(f443_D,plain,(
  s('type.ast.exp',sK12) = s('type.ast.exp','const.ast.Lit_1'(s('type.ast.lit',sK16))) <=> ~$spl4),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl4])])).
fof(f445,plain,(
  s('type.ast.exp',sK12) = s('type.ast.exp','const.ast.Con_2'(s('type.option.option'('type.ast.id'('type.list.list'('type.string.char'))),sK17),s('type.list.list'('type.ast.exp'),sK18))) | $spl6),
  inference(cnf_transformation,[],[f445_D])).
fof(f445_D,plain,(
  s('type.ast.exp',sK12) = s('type.ast.exp','const.ast.Con_2'(s('type.option.option'('type.ast.id'('type.list.list'('type.string.char'))),sK17),s('type.list.list'('type.ast.exp'),sK18))) <=> ~$spl6),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl6])])).
fof(f447,plain,(
  s('type.ast.exp',sK12) = s('type.ast.exp','const.ast.Var_1'(s('type.ast.id'('type.list.list'('type.string.char')),sK19))) | $spl8),
  inference(cnf_transformation,[],[f447_D])).
fof(f447_D,plain,(
  s('type.ast.exp',sK12) = s('type.ast.exp','const.ast.Var_1'(s('type.ast.id'('type.list.list'('type.string.char')),sK19))) <=> ~$spl8),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl8])])).
fof(f449,plain,(
  s('type.ast.exp',sK12) = s('type.ast.exp','const.ast.Fun_2'(s('type.list.list'('type.string.char'),sK20),s('type.ast.exp',sK21))) | $spl10),
  inference(cnf_transformation,[],[f449_D])).
fof(f449_D,plain,(
  s('type.ast.exp',sK12) = s('type.ast.exp','const.ast.Fun_2'(s('type.list.list'('type.string.char'),sK20),s('type.ast.exp',sK21))) <=> ~$spl10),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl10])])).
fof(f451,plain,(
  s('type.ast.exp',sK12) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Opn_1'(s('type.ast.opn',sK22))),s('type.list.list'('type.ast.exp'),'const.list.NIL_0'))) | $spl12),
  inference(cnf_transformation,[],[f451_D])).
fof(f451_D,plain,(
  s('type.ast.exp',sK12) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Opn_1'(s('type.ast.opn',sK22))),s('type.list.list'('type.ast.exp'),'const.list.NIL_0'))) <=> ~$spl12),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl12])])).
fof(f453,plain,(
  s('type.ast.exp',sK12) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Opn_1'(s('type.ast.opn',sK23))),s('type.list.list'('type.ast.exp'),'const.list.CONS_2'(s('type.ast.exp',sK24),s('type.list.list'('type.ast.exp'),'const.list.NIL_0'))))) | $spl14),
  inference(cnf_transformation,[],[f453_D])).
fof(f453_D,plain,(
  s('type.ast.exp',sK12) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Opn_1'(s('type.ast.opn',sK23))),s('type.list.list'('type.ast.exp'),'const.list.CONS_2'(s('type.ast.exp',sK24),s('type.list.list'('type.ast.exp'),'const.list.NIL_0'))))) <=> ~$spl14),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl14])])).
fof(f455,plain,(
  s('type.ast.exp',sK12) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Opn_1'(s('type.ast.opn',sK25))),s('type.list.list'('type.ast.exp'),'const.list.CONS_2'(s('type.ast.exp',sK26),s('type.list.list'('type.ast.exp'),'const.list.CONS_2'(s('type.ast.exp',sK27),s('type.list.list'('type.ast.exp'),'const.list.NIL_0'))))))) | $spl16),
  inference(cnf_transformation,[],[f455_D])).
fof(f455_D,plain,(
  s('type.ast.exp',sK12) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Opn_1'(s('type.ast.opn',sK25))),s('type.list.list'('type.ast.exp'),'const.list.CONS_2'(s('type.ast.exp',sK26),s('type.list.list'('type.ast.exp'),'const.list.CONS_2'(s('type.ast.exp',sK27),s('type.list.list'('type.ast.exp'),'const.list.NIL_0'))))))) <=> ~$spl16),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl16])])).
fof(f457,plain,(
  s('type.ast.exp',sK12) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Opn_1'(s('type.ast.opn',sK28))),s('type.list.list'('type.ast.exp'),'const.list.CONS_2'(s('type.ast.exp',sK29),s('type.list.list'('type.ast.exp'),'const.list.CONS_2'(s('type.ast.exp',sK30),s('type.list.list'('type.ast.exp'),'const.list.CONS_2'(s('type.ast.exp',sK31),s('type.list.list'('type.ast.exp'),sK32))))))))) | $spl18),
  inference(cnf_transformation,[],[f457_D])).
fof(f457_D,plain,(
  s('type.ast.exp',sK12) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Opn_1'(s('type.ast.opn',sK28))),s('type.list.list'('type.ast.exp'),'const.list.CONS_2'(s('type.ast.exp',sK29),s('type.list.list'('type.ast.exp'),'const.list.CONS_2'(s('type.ast.exp',sK30),s('type.list.list'('type.ast.exp'),'const.list.CONS_2'(s('type.ast.exp',sK31),s('type.list.list'('type.ast.exp'),sK32))))))))) <=> ~$spl18),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl18])])).
fof(f459,plain,(
  s('type.ast.exp',sK12) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Opb_1'(s('type.ast.opb',sK33))),s('type.list.list'('type.ast.exp'),sK34))) | $spl20),
  inference(cnf_transformation,[],[f459_D])).
fof(f459_D,plain,(
  s('type.ast.exp',sK12) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Opb_1'(s('type.ast.opb',sK33))),s('type.list.list'('type.ast.exp'),sK34))) <=> ~$spl20),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl20])])).
fof(f461,plain,(
  s('type.ast.exp',sK12) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Opw_2'(s('type.ast.word_size',sK35),s('type.ast.opw',sK36))),s('type.list.list'('type.ast.exp'),sK37))) | $spl22),
  inference(cnf_transformation,[],[f461_D])).
fof(f461_D,plain,(
  s('type.ast.exp',sK12) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Opw_2'(s('type.ast.word_size',sK35),s('type.ast.opw',sK36))),s('type.list.list'('type.ast.exp'),sK37))) <=> ~$spl22),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl22])])).
fof(f463,plain,(
  s('type.ast.exp',sK12) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Shift_3'(s('type.ast.word_size',sK38),s('type.ast.shift',sK39),s('type.num.num',sK40))),s('type.list.list'('type.ast.exp'),sK41))) | $spl24),
  inference(cnf_transformation,[],[f463_D])).
fof(f463_D,plain,(
  s('type.ast.exp',sK12) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Shift_3'(s('type.ast.word_size',sK38),s('type.ast.shift',sK39),s('type.num.num',sK40))),s('type.list.list'('type.ast.exp'),sK41))) <=> ~$spl24),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl24])])).
fof(f465,plain,(
  s('type.ast.exp',sK12) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Equality_0'),s('type.list.list'('type.ast.exp'),sK42))) | $spl26),
  inference(cnf_transformation,[],[f465_D])).
fof(f465_D,plain,(
  s('type.ast.exp',sK12) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Equality_0'),s('type.list.list'('type.ast.exp'),sK42))) <=> ~$spl26),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl26])])).
fof(f467,plain,(
  s('type.ast.exp',sK12) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Opapp_0'),s('type.list.list'('type.ast.exp'),sK43))) | $spl28),
  inference(cnf_transformation,[],[f467_D])).
fof(f467_D,plain,(
  s('type.ast.exp',sK12) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Opapp_0'),s('type.list.list'('type.ast.exp'),sK43))) <=> ~$spl28),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl28])])).
fof(f469,plain,(
  s('type.ast.exp',sK12) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Opassign_0'),s('type.list.list'('type.ast.exp'),sK44))) | $spl30),
  inference(cnf_transformation,[],[f469_D])).
fof(f469_D,plain,(
  s('type.ast.exp',sK12) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Opassign_0'),s('type.list.list'('type.ast.exp'),sK44))) <=> ~$spl30),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl30])])).
fof(f471,plain,(
  s('type.ast.exp',sK12) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Opref_0'),s('type.list.list'('type.ast.exp'),sK45))) | $spl32),
  inference(cnf_transformation,[],[f471_D])).
fof(f471_D,plain,(
  s('type.ast.exp',sK12) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Opref_0'),s('type.list.list'('type.ast.exp'),sK45))) <=> ~$spl32),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl32])])).
fof(f473,plain,(
  s('type.ast.exp',sK12) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Opderef_0'),s('type.list.list'('type.ast.exp'),sK46))) | $spl34),
  inference(cnf_transformation,[],[f473_D])).
fof(f473_D,plain,(
  s('type.ast.exp',sK12) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Opderef_0'),s('type.list.list'('type.ast.exp'),sK46))) <=> ~$spl34),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl34])])).
fof(f475,plain,(
  s('type.ast.exp',sK12) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Aw8alloc_0'),s('type.list.list'('type.ast.exp'),sK47))) | $spl36),
  inference(cnf_transformation,[],[f475_D])).
fof(f475_D,plain,(
  s('type.ast.exp',sK12) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Aw8alloc_0'),s('type.list.list'('type.ast.exp'),sK47))) <=> ~$spl36),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl36])])).
fof(f477,plain,(
  s('type.ast.exp',sK12) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Aw8sub_0'),s('type.list.list'('type.ast.exp'),sK48))) | $spl38),
  inference(cnf_transformation,[],[f477_D])).
fof(f477_D,plain,(
  s('type.ast.exp',sK12) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Aw8sub_0'),s('type.list.list'('type.ast.exp'),sK48))) <=> ~$spl38),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl38])])).
fof(f479,plain,(
  s('type.ast.exp',sK12) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Aw8length_0'),s('type.list.list'('type.ast.exp'),sK49))) | $spl40),
  inference(cnf_transformation,[],[f479_D])).
fof(f479_D,plain,(
  s('type.ast.exp',sK12) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Aw8length_0'),s('type.list.list'('type.ast.exp'),sK49))) <=> ~$spl40),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl40])])).
fof(f481,plain,(
  s('type.ast.exp',sK12) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Aw8update_0'),s('type.list.list'('type.ast.exp'),sK50))) | $spl42),
  inference(cnf_transformation,[],[f481_D])).
fof(f481_D,plain,(
  s('type.ast.exp',sK12) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Aw8update_0'),s('type.list.list'('type.ast.exp'),sK50))) <=> ~$spl42),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl42])])).
fof(f483,plain,(
  s('type.ast.exp',sK12) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.WordFromInt_1'(s('type.ast.word_size',sK51))),s('type.list.list'('type.ast.exp'),sK52))) | $spl44),
  inference(cnf_transformation,[],[f483_D])).
fof(f483_D,plain,(
  s('type.ast.exp',sK12) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.WordFromInt_1'(s('type.ast.word_size',sK51))),s('type.list.list'('type.ast.exp'),sK52))) <=> ~$spl44),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl44])])).
fof(f485,plain,(
  s('type.ast.exp',sK12) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.WordToInt_1'(s('type.ast.word_size',sK53))),s('type.list.list'('type.ast.exp'),sK54))) | $spl46),
  inference(cnf_transformation,[],[f485_D])).
fof(f485_D,plain,(
  s('type.ast.exp',sK12) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.WordToInt_1'(s('type.ast.word_size',sK53))),s('type.list.list'('type.ast.exp'),sK54))) <=> ~$spl46),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl46])])).
fof(f487,plain,(
  s('type.ast.exp',sK12) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Ord_0'),s('type.list.list'('type.ast.exp'),sK55))) | $spl48),
  inference(cnf_transformation,[],[f487_D])).
fof(f487_D,plain,(
  s('type.ast.exp',sK12) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Ord_0'),s('type.list.list'('type.ast.exp'),sK55))) <=> ~$spl48),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl48])])).
fof(f489,plain,(
  s('type.ast.exp',sK12) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Chr_0'),s('type.list.list'('type.ast.exp'),sK56))) | $spl50),
  inference(cnf_transformation,[],[f489_D])).
fof(f489_D,plain,(
  s('type.ast.exp',sK12) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Chr_0'),s('type.list.list'('type.ast.exp'),sK56))) <=> ~$spl50),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl50])])).
fof(f491,plain,(
  s('type.ast.exp',sK12) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Chopb_1'(s('type.ast.opb',sK57))),s('type.list.list'('type.ast.exp'),sK58))) | $spl52),
  inference(cnf_transformation,[],[f491_D])).
fof(f491_D,plain,(
  s('type.ast.exp',sK12) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Chopb_1'(s('type.ast.opb',sK57))),s('type.list.list'('type.ast.exp'),sK58))) <=> ~$spl52),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl52])])).
fof(f493,plain,(
  s('type.ast.exp',sK12) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Explode_0'),s('type.list.list'('type.ast.exp'),sK59))) | $spl54),
  inference(cnf_transformation,[],[f493_D])).
fof(f493_D,plain,(
  s('type.ast.exp',sK12) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Explode_0'),s('type.list.list'('type.ast.exp'),sK59))) <=> ~$spl54),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl54])])).
fof(f495,plain,(
  s('type.ast.exp',sK12) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Implode_0'),s('type.list.list'('type.ast.exp'),sK60))) | $spl56),
  inference(cnf_transformation,[],[f495_D])).
fof(f495_D,plain,(
  s('type.ast.exp',sK12) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Implode_0'),s('type.list.list'('type.ast.exp'),sK60))) <=> ~$spl56),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl56])])).
fof(f497,plain,(
  s('type.ast.exp',sK12) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Strlen_0'),s('type.list.list'('type.ast.exp'),sK61))) | $spl58),
  inference(cnf_transformation,[],[f497_D])).
fof(f497_D,plain,(
  s('type.ast.exp',sK12) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Strlen_0'),s('type.list.list'('type.ast.exp'),sK61))) <=> ~$spl58),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl58])])).
fof(f499,plain,(
  s('type.ast.exp',sK12) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.VfromList_0'),s('type.list.list'('type.ast.exp'),sK62))) | $spl60),
  inference(cnf_transformation,[],[f499_D])).
fof(f499_D,plain,(
  s('type.ast.exp',sK12) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.VfromList_0'),s('type.list.list'('type.ast.exp'),sK62))) <=> ~$spl60),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl60])])).
fof(f501,plain,(
  s('type.ast.exp',sK12) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Vsub_0'),s('type.list.list'('type.ast.exp'),sK63))) | $spl62),
  inference(cnf_transformation,[],[f501_D])).
fof(f501_D,plain,(
  s('type.ast.exp',sK12) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Vsub_0'),s('type.list.list'('type.ast.exp'),sK63))) <=> ~$spl62),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl62])])).
fof(f503,plain,(
  s('type.ast.exp',sK12) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Vlength_0'),s('type.list.list'('type.ast.exp'),sK64))) | $spl64),
  inference(cnf_transformation,[],[f503_D])).
fof(f503_D,plain,(
  s('type.ast.exp',sK12) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Vlength_0'),s('type.list.list'('type.ast.exp'),sK64))) <=> ~$spl64),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl64])])).
fof(f505,plain,(
  s('type.ast.exp',sK12) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Aalloc_0'),s('type.list.list'('type.ast.exp'),sK65))) | $spl66),
  inference(cnf_transformation,[],[f505_D])).
fof(f505_D,plain,(
  s('type.ast.exp',sK12) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Aalloc_0'),s('type.list.list'('type.ast.exp'),sK65))) <=> ~$spl66),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl66])])).
fof(f507,plain,(
  s('type.ast.exp',sK12) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Asub_0'),s('type.list.list'('type.ast.exp'),sK66))) | $spl68),
  inference(cnf_transformation,[],[f507_D])).
fof(f507_D,plain,(
  s('type.ast.exp',sK12) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Asub_0'),s('type.list.list'('type.ast.exp'),sK66))) <=> ~$spl68),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl68])])).
fof(f509,plain,(
  s('type.ast.exp',sK12) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Alength_0'),s('type.list.list'('type.ast.exp'),sK67))) | $spl70),
  inference(cnf_transformation,[],[f509_D])).
fof(f509_D,plain,(
  s('type.ast.exp',sK12) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Alength_0'),s('type.list.list'('type.ast.exp'),sK67))) <=> ~$spl70),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl70])])).
fof(f511,plain,(
  s('type.ast.exp',sK12) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Aupdate_0'),s('type.list.list'('type.ast.exp'),sK68))) | $spl72),
  inference(cnf_transformation,[],[f511_D])).
fof(f511_D,plain,(
  s('type.ast.exp',sK12) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Aupdate_0'),s('type.list.list'('type.ast.exp'),sK68))) <=> ~$spl72),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl72])])).
fof(f513,plain,(
  s('type.ast.exp',sK12) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.FFI_1'(s('type.num.num',sK69))),s('type.list.list'('type.ast.exp'),sK70))) | $spl74),
  inference(cnf_transformation,[],[f513_D])).
fof(f513_D,plain,(
  s('type.ast.exp',sK12) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.FFI_1'(s('type.num.num',sK69))),s('type.list.list'('type.ast.exp'),sK70))) <=> ~$spl74),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl74])])).
fof(f515,plain,(
  s('type.ast.exp',sK12) = s('type.ast.exp','const.ast.Log_3'(s('type.ast.lop',sK71),s('type.ast.exp',sK72),s('type.ast.exp',sK73))) | $spl76),
  inference(cnf_transformation,[],[f515_D])).
fof(f515_D,plain,(
  s('type.ast.exp',sK12) = s('type.ast.exp','const.ast.Log_3'(s('type.ast.lop',sK71),s('type.ast.exp',sK72),s('type.ast.exp',sK73))) <=> ~$spl76),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl76])])).
fof(f517,plain,(
  s('type.ast.exp',sK12) = s('type.ast.exp','const.ast.If_3'(s('type.ast.exp',sK74),s('type.ast.exp',sK75),s('type.ast.exp',sK76))) | $spl78),
  inference(cnf_transformation,[],[f517_D])).
fof(f517_D,plain,(
  s('type.ast.exp',sK12) = s('type.ast.exp','const.ast.If_3'(s('type.ast.exp',sK74),s('type.ast.exp',sK75),s('type.ast.exp',sK76))) <=> ~$spl78),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl78])])).
fof(f519,plain,(
  s('type.ast.exp',sK12) = s('type.ast.exp','const.ast.Mat_2'(s('type.ast.exp',sK77),s('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),sK78))) | $spl80),
  inference(cnf_transformation,[],[f519_D])).
fof(f519_D,plain,(
  s('type.ast.exp',sK12) = s('type.ast.exp','const.ast.Mat_2'(s('type.ast.exp',sK77),s('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),sK78))) <=> ~$spl80),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl80])])).
fof(f521,plain,(
  s('type.ast.exp',sK12) = s('type.ast.exp','const.ast.Let_3'(s('type.option.option'('type.list.list'('type.string.char')),sK79),s('type.ast.exp',sK80),s('type.ast.exp',sK81))) | $spl82),
  inference(cnf_transformation,[],[f521_D])).
fof(f521_D,plain,(
  s('type.ast.exp',sK12) = s('type.ast.exp','const.ast.Let_3'(s('type.option.option'('type.list.list'('type.string.char')),sK79),s('type.ast.exp',sK80),s('type.ast.exp',sK81))) <=> ~$spl82),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl82])])).
fof(f523,plain,(
  s('type.ast.exp',sK12) = s('type.ast.exp','const.ast.Letrec_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),sK82),s('type.ast.exp',sK83))) | $spl84),
  inference(cnf_transformation,[],[f523_D])).
fof(f523_D,plain,(
  s('type.ast.exp',sK12) = s('type.ast.exp','const.ast.Letrec_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),sK82),s('type.ast.exp',sK83))) <=> ~$spl84),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl84])])).
fof(f223,plain,(
  s('type.ast.exp',sK12) = s('type.ast.exp','const.ast.Letrec_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),sK82),s('type.ast.exp',sK83))) | s('type.ast.exp',sK12) = s('type.ast.exp','const.ast.Let_3'(s('type.option.option'('type.list.list'('type.string.char')),sK79),s('type.ast.exp',sK80),s('type.ast.exp',sK81))) | s('type.ast.exp',sK12) = s('type.ast.exp','const.ast.Mat_2'(s('type.ast.exp',sK77),s('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),sK78))) | s('type.ast.exp',sK12) = s('type.ast.exp','const.ast.If_3'(s('type.ast.exp',sK74),s('type.ast.exp',sK75),s('type.ast.exp',sK76))) | s('type.ast.exp',sK12) = s('type.ast.exp','const.ast.Log_3'(s('type.ast.lop',sK71),s('type.ast.exp',sK72),s('type.ast.exp',sK73))) | s('type.ast.exp',sK12) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.FFI_1'(s('type.num.num',sK69))),s('type.list.list'('type.ast.exp'),sK70))) | s('type.ast.exp',sK12) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Aupdate_0'),s('type.list.list'('type.ast.exp'),sK68))) | s('type.ast.exp',sK12) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Alength_0'),s('type.list.list'('type.ast.exp'),sK67))) | s('type.ast.exp',sK12) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Asub_0'),s('type.list.list'('type.ast.exp'),sK66))) | s('type.ast.exp',sK12) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Aalloc_0'),s('type.list.list'('type.ast.exp'),sK65))) | s('type.ast.exp',sK12) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Vlength_0'),s('type.list.list'('type.ast.exp'),sK64))) | s('type.ast.exp',sK12) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Vsub_0'),s('type.list.list'('type.ast.exp'),sK63))) | s('type.ast.exp',sK12) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.VfromList_0'),s('type.list.list'('type.ast.exp'),sK62))) | s('type.ast.exp',sK12) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Strlen_0'),s('type.list.list'('type.ast.exp'),sK61))) | s('type.ast.exp',sK12) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Implode_0'),s('type.list.list'('type.ast.exp'),sK60))) | s('type.ast.exp',sK12) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Explode_0'),s('type.list.list'('type.ast.exp'),sK59))) | s('type.ast.exp',sK12) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Chopb_1'(s('type.ast.opb',sK57))),s('type.list.list'('type.ast.exp'),sK58))) | s('type.ast.exp',sK12) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Chr_0'),s('type.list.list'('type.ast.exp'),sK56))) | s('type.ast.exp',sK12) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Ord_0'),s('type.list.list'('type.ast.exp'),sK55))) | s('type.ast.exp',sK12) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.WordToInt_1'(s('type.ast.word_size',sK53))),s('type.list.list'('type.ast.exp'),sK54))) | s('type.ast.exp',sK12) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.WordFromInt_1'(s('type.ast.word_size',sK51))),s('type.list.list'('type.ast.exp'),sK52))) | s('type.ast.exp',sK12) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Aw8update_0'),s('type.list.list'('type.ast.exp'),sK50))) | s('type.ast.exp',sK12) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Aw8length_0'),s('type.list.list'('type.ast.exp'),sK49))) | s('type.ast.exp',sK12) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Aw8sub_0'),s('type.list.list'('type.ast.exp'),sK48))) | s('type.ast.exp',sK12) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Aw8alloc_0'),s('type.list.list'('type.ast.exp'),sK47))) | s('type.ast.exp',sK12) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Opderef_0'),s('type.list.list'('type.ast.exp'),sK46))) | s('type.ast.exp',sK12) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Opref_0'),s('type.list.list'('type.ast.exp'),sK45))) | s('type.ast.exp',sK12) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Opassign_0'),s('type.list.list'('type.ast.exp'),sK44))) | s('type.ast.exp',sK12) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Opapp_0'),s('type.list.list'('type.ast.exp'),sK43))) | s('type.ast.exp',sK12) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Equality_0'),s('type.list.list'('type.ast.exp'),sK42))) | s('type.ast.exp',sK12) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Shift_3'(s('type.ast.word_size',sK38),s('type.ast.shift',sK39),s('type.num.num',sK40))),s('type.list.list'('type.ast.exp'),sK41))) | s('type.ast.exp',sK12) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Opw_2'(s('type.ast.word_size',sK35),s('type.ast.opw',sK36))),s('type.list.list'('type.ast.exp'),sK37))) | s('type.ast.exp',sK12) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Opb_1'(s('type.ast.opb',sK33))),s('type.list.list'('type.ast.exp'),sK34))) | s('type.ast.exp',sK12) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Opn_1'(s('type.ast.opn',sK28))),s('type.list.list'('type.ast.exp'),'const.list.CONS_2'(s('type.ast.exp',sK29),s('type.list.list'('type.ast.exp'),'const.list.CONS_2'(s('type.ast.exp',sK30),s('type.list.list'('type.ast.exp'),'const.list.CONS_2'(s('type.ast.exp',sK31),s('type.list.list'('type.ast.exp'),sK32))))))))) | s('type.ast.exp',sK12) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Opn_1'(s('type.ast.opn',sK25))),s('type.list.list'('type.ast.exp'),'const.list.CONS_2'(s('type.ast.exp',sK26),s('type.list.list'('type.ast.exp'),'const.list.CONS_2'(s('type.ast.exp',sK27),s('type.list.list'('type.ast.exp'),'const.list.NIL_0'))))))) | s('type.ast.exp',sK12) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Opn_1'(s('type.ast.opn',sK23))),s('type.list.list'('type.ast.exp'),'const.list.CONS_2'(s('type.ast.exp',sK24),s('type.list.list'('type.ast.exp'),'const.list.NIL_0'))))) | s('type.ast.exp',sK12) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Opn_1'(s('type.ast.opn',sK22))),s('type.list.list'('type.ast.exp'),'const.list.NIL_0'))) | s('type.ast.exp',sK12) = s('type.ast.exp','const.ast.Fun_2'(s('type.list.list'('type.string.char'),sK20),s('type.ast.exp',sK21))) | s('type.ast.exp',sK12) = s('type.ast.exp','const.ast.Var_1'(s('type.ast.id'('type.list.list'('type.string.char')),sK19))) | s('type.ast.exp',sK12) = s('type.ast.exp','const.ast.Con_2'(s('type.option.option'('type.ast.id'('type.list.list'('type.string.char'))),sK17),s('type.list.list'('type.ast.exp'),sK18))) | s('type.ast.exp',sK12) = s('type.ast.exp','const.ast.Lit_1'(s('type.ast.lit',sK16))) | s('type.ast.exp',sK12) = s('type.ast.exp','const.ast.Handle_2'(s('type.ast.exp',sK14),s('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),sK15))) | s('type.ast.exp',sK12) = s('type.ast.exp','const.ast.Raise_1'(s('type.ast.exp',sK13)))),
  inference(cnf_transformation,[],[f138])).
fof(f6698,plain,(
  $false | $spl24),
  inference(subsumption_resolution,[],[f463,f236])).
fof(f236,plain,(
  ( ! [X45,X43,X46,X44] : (s('type.ast.exp',sK12) != s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Shift_3'(s('type.ast.word_size',X43),s('type.ast.shift',X44),s('type.num.num',X45))),s('type.list.list'('type.ast.exp'),X46)))) )),
  inference(cnf_transformation,[],[f138])).
% SZS output end Proof for thm.ml_optimise
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 474
% Passive clauses: 2659
% Generated clauses: 6469
% Final active clauses: 474
% Final passive clauses: 1961
% Input formulas: 37
% Initial clauses: 211
% 
% Duplicate literals: 179
% Trivial inequalities: 29
% Fw subsumption resolutions: 436
% 
% Simple tautologies: 157
% Equational tautologies: 42
% Forward subsumptions: 2894
% 
% Binary resolution: 4272
% Factoring: 910
% Forward superposition: 158
% Backward superposition: 123
% Self superposition: 2
% Equality factoring: 2
% Equality resolution: 16
% 
% Split clauses: 118
% Split components: 278
% SAT solver clauses: 307
% SAT solver unit clauses: 49
% SAT solver binary clauses: 44
% SAT solver learnt clauses: 1
% 
% Sat splits: 118
% Sat splitting refutations: 43
% 
% TWLsolver clauses: 306
% TWLsolver calls for satisfiability: 254
% 
% Memory used [KB]: 3709
% Time elapsed: 0.183 s
% ------------------------------
% ------------------------------
% Success in time 0.2 s
