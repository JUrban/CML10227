Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 149 next slice time: 5
dis+11_7_3 on thm.closProps
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.closProps
% SZS output start Proof for thm.closProps
fof(f4195,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f4194,f223,f412,f410,f408,f406,f404,f402,f4192,f4191,f4190,f3720,f4193])).
fof(f4193,plain,(
  $false | $spl0),
  inference(subsumption_resolution,[],[f402,f226])).
fof(f226,plain,(
  ( ! [X5] : (s('type.closSem.v',sK12) != s('type.closSem.v','const.closSem.Number_1'(s('type.integer.int',X5)))) )),
  inference(cnf_transformation,[],[f138])).
fof(f138,plain,(
  (s('type.closSem.v',sK12) = s('type.closSem.v','const.closSem.Number_1'(s('type.integer.int',sK13))) | s('type.closSem.v',sK12) = s('type.closSem.v','const.closSem.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK14))) | s('type.closSem.v',sK12) = s('type.closSem.v','const.closSem.Block_2'(s('type.num.num',sK15),s('type.list.list'('type.closSem.v'),sK16))) | s('type.closSem.v',sK12) = s('type.closSem.v','const.closSem.RefPtr_1'(s('type.num.num',sK17))) | s('type.closSem.v',sK12) = s('type.closSem.v','const.closSem.Closure_5'(s('type.option.option'('type.num.num'),sK18),s('type.list.list'('type.closSem.v'),sK19),s('type.list.list'('type.closSem.v'),sK20),s('type.num.num',sK21),s('type.closLang.exp',sK22))) | s('type.closSem.v',sK12) = s('type.closSem.v','const.closSem.Recclosure_5'(s('type.option.option'('type.num.num'),sK23),s('type.list.list'('type.closSem.v'),sK24),s('type.list.list'('type.closSem.v'),sK25),s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),sK26),s('type.num.num',sK27)))) & ! [X11,X12,X13,X14,X15] : s('type.closSem.v',sK12) != s('type.closSem.v','const.closSem.Closure_5'(s('type.option.option'('type.num.num'),X11),s('type.list.list'('type.closSem.v'),X12),s('type.list.list'('type.closSem.v'),X13),s('type.num.num',X14),s('type.closLang.exp',X15))) & ! [X6,X7,X8,X9,X10] : s('type.closSem.v',sK12) != s('type.closSem.v','const.closSem.Recclosure_5'(s('type.option.option'('type.num.num'),X6),s('type.list.list'('type.closSem.v'),X7),s('type.list.list'('type.closSem.v'),X8),s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),X9),s('type.num.num',X10))) & ! [X5] : s('type.closSem.v',sK12) != s('type.closSem.v','const.closSem.Number_1'(s('type.integer.int',X5))) & ! [X4] : s('type.closSem.v',sK12) != s('type.closSem.v','const.closSem.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),X4))) & ! [X2,X3] : s('type.closSem.v',sK12) != s('type.closSem.v','const.closSem.Block_2'(s('type.num.num',X2),s('type.list.list'('type.closSem.v'),X3))) & ! [X1] : s('type.closSem.v',sK12) != s('type.closSem.v','const.closSem.RefPtr_1'(s('type.num.num',X1)))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK12,sK13,sK14,sK15,sK16,sK17,sK18,sK19,sK20,sK21,sK22,sK23,sK24,sK25,sK26,sK27])],[f137])).
fof(f137,plain,(
  ? [X0] : ((? [X30] : s('type.closSem.v',X0) = s('type.closSem.v','const.closSem.Number_1'(s('type.integer.int',X30))) | ? [X29] : s('type.closSem.v',X0) = s('type.closSem.v','const.closSem.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),X29))) | ? [X27,X28] : s('type.closSem.v',X0) = s('type.closSem.v','const.closSem.Block_2'(s('type.num.num',X27),s('type.list.list'('type.closSem.v'),X28))) | ? [X26] : s('type.closSem.v',X0) = s('type.closSem.v','const.closSem.RefPtr_1'(s('type.num.num',X26))) | ? [X21,X22,X23,X24,X25] : s('type.closSem.v',X0) = s('type.closSem.v','const.closSem.Closure_5'(s('type.option.option'('type.num.num'),X21),s('type.list.list'('type.closSem.v'),X22),s('type.list.list'('type.closSem.v'),X23),s('type.num.num',X24),s('type.closLang.exp',X25))) | ? [X16,X17,X18,X19,X20] : s('type.closSem.v',X0) = s('type.closSem.v','const.closSem.Recclosure_5'(s('type.option.option'('type.num.num'),X16),s('type.list.list'('type.closSem.v'),X17),s('type.list.list'('type.closSem.v'),X18),s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),X19),s('type.num.num',X20)))) & ! [X11,X12,X13,X14,X15] : s('type.closSem.v',X0) != s('type.closSem.v','const.closSem.Closure_5'(s('type.option.option'('type.num.num'),X11),s('type.list.list'('type.closSem.v'),X12),s('type.list.list'('type.closSem.v'),X13),s('type.num.num',X14),s('type.closLang.exp',X15))) & ! [X6,X7,X8,X9,X10] : s('type.closSem.v',X0) != s('type.closSem.v','const.closSem.Recclosure_5'(s('type.option.option'('type.num.num'),X6),s('type.list.list'('type.closSem.v'),X7),s('type.list.list'('type.closSem.v'),X8),s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),X9),s('type.num.num',X10))) & ! [X5] : s('type.closSem.v',X0) != s('type.closSem.v','const.closSem.Number_1'(s('type.integer.int',X5))) & ! [X4] : s('type.closSem.v',X0) != s('type.closSem.v','const.closSem.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),X4))) & ! [X2,X3] : s('type.closSem.v',X0) != s('type.closSem.v','const.closSem.Block_2'(s('type.num.num',X2),s('type.list.list'('type.closSem.v'),X3))) & ! [X1] : s('type.closSem.v',X0) != s('type.closSem.v','const.closSem.RefPtr_1'(s('type.num.num',X1))))),
  inference(rectify,[],[f97])).
fof(f97,plain,(
  ? [X0] : ((? [X15] : s('type.closSem.v',X0) = s('type.closSem.v','const.closSem.Number_1'(s('type.integer.int',X15))) | ? [X14] : s('type.closSem.v',X0) = s('type.closSem.v','const.closSem.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),X14))) | ? [X12,X13] : s('type.closSem.v',X0) = s('type.closSem.v','const.closSem.Block_2'(s('type.num.num',X12),s('type.list.list'('type.closSem.v'),X13))) | ? [X11] : s('type.closSem.v',X0) = s('type.closSem.v','const.closSem.RefPtr_1'(s('type.num.num',X11))) | ? [X6,X7,X8,X9,X10] : s('type.closSem.v',X0) = s('type.closSem.v','const.closSem.Closure_5'(s('type.option.option'('type.num.num'),X6),s('type.list.list'('type.closSem.v'),X7),s('type.list.list'('type.closSem.v'),X8),s('type.num.num',X9),s('type.closLang.exp',X10))) | ? [X1,X2,X3,X4,X5] : s('type.closSem.v',X0) = s('type.closSem.v','const.closSem.Recclosure_5'(s('type.option.option'('type.num.num'),X1),s('type.list.list'('type.closSem.v'),X2),s('type.list.list'('type.closSem.v'),X3),s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),X4),s('type.num.num',X5)))) & ! [X26,X27,X28,X29,X30] : s('type.closSem.v',X0) != s('type.closSem.v','const.closSem.Closure_5'(s('type.option.option'('type.num.num'),X26),s('type.list.list'('type.closSem.v'),X27),s('type.list.list'('type.closSem.v'),X28),s('type.num.num',X29),s('type.closLang.exp',X30))) & ! [X21,X22,X23,X24,X25] : s('type.closSem.v',X0) != s('type.closSem.v','const.closSem.Recclosure_5'(s('type.option.option'('type.num.num'),X21),s('type.list.list'('type.closSem.v'),X22),s('type.list.list'('type.closSem.v'),X23),s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),X24),s('type.num.num',X25))) & ! [X20] : s('type.closSem.v',X0) != s('type.closSem.v','const.closSem.Number_1'(s('type.integer.int',X20))) & ! [X19] : s('type.closSem.v',X0) != s('type.closSem.v','const.closSem.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),X19))) & ! [X17,X18] : s('type.closSem.v',X0) != s('type.closSem.v','const.closSem.Block_2'(s('type.num.num',X17),s('type.list.list'('type.closSem.v'),X18))) & ! [X16] : s('type.closSem.v',X0) != s('type.closSem.v','const.closSem.RefPtr_1'(s('type.num.num',X16))))),
  inference(flattening,[],[f96])).
fof(f96,plain,(
  ? [X0] : ((? [X15] : s('type.closSem.v',X0) = s('type.closSem.v','const.closSem.Number_1'(s('type.integer.int',X15))) | ? [X14] : s('type.closSem.v',X0) = s('type.closSem.v','const.closSem.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),X14))) | ? [X12,X13] : s('type.closSem.v',X0) = s('type.closSem.v','const.closSem.Block_2'(s('type.num.num',X12),s('type.list.list'('type.closSem.v'),X13))) | ? [X11] : s('type.closSem.v',X0) = s('type.closSem.v','const.closSem.RefPtr_1'(s('type.num.num',X11))) | ? [X6,X7,X8,X9,X10] : s('type.closSem.v',X0) = s('type.closSem.v','const.closSem.Closure_5'(s('type.option.option'('type.num.num'),X6),s('type.list.list'('type.closSem.v'),X7),s('type.list.list'('type.closSem.v'),X8),s('type.num.num',X9),s('type.closLang.exp',X10))) | ? [X1,X2,X3,X4,X5] : s('type.closSem.v',X0) = s('type.closSem.v','const.closSem.Recclosure_5'(s('type.option.option'('type.num.num'),X1),s('type.list.list'('type.closSem.v'),X2),s('type.list.list'('type.closSem.v'),X3),s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),X4),s('type.num.num',X5)))) & (! [X26,X27,X28,X29,X30] : s('type.closSem.v',X0) != s('type.closSem.v','const.closSem.Closure_5'(s('type.option.option'('type.num.num'),X26),s('type.list.list'('type.closSem.v'),X27),s('type.list.list'('type.closSem.v'),X28),s('type.num.num',X29),s('type.closLang.exp',X30))) & ! [X21,X22,X23,X24,X25] : s('type.closSem.v',X0) != s('type.closSem.v','const.closSem.Recclosure_5'(s('type.option.option'('type.num.num'),X21),s('type.list.list'('type.closSem.v'),X22),s('type.list.list'('type.closSem.v'),X23),s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),X24),s('type.num.num',X25))) & ! [X20] : s('type.closSem.v',X0) != s('type.closSem.v','const.closSem.Number_1'(s('type.integer.int',X20))) & ! [X19] : s('type.closSem.v',X0) != s('type.closSem.v','const.closSem.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),X19))) & ! [X17,X18] : s('type.closSem.v',X0) != s('type.closSem.v','const.closSem.Block_2'(s('type.num.num',X17),s('type.list.list'('type.closSem.v'),X18))) & ! [X16] : s('type.closSem.v',X0) != s('type.closSem.v','const.closSem.RefPtr_1'(s('type.num.num',X16)))))),
  inference(ennf_transformation,[],[f39])).
fof(f39,plain,(
  ~! [X0] : ((? [X15] : s('type.closSem.v',X0) = s('type.closSem.v','const.closSem.Number_1'(s('type.integer.int',X15))) | ? [X14] : s('type.closSem.v',X0) = s('type.closSem.v','const.closSem.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),X14))) | ? [X12,X13] : s('type.closSem.v',X0) = s('type.closSem.v','const.closSem.Block_2'(s('type.num.num',X12),s('type.list.list'('type.closSem.v'),X13))) | ? [X11] : s('type.closSem.v',X0) = s('type.closSem.v','const.closSem.RefPtr_1'(s('type.num.num',X11))) | ? [X6,X7,X8,X9,X10] : s('type.closSem.v',X0) = s('type.closSem.v','const.closSem.Closure_5'(s('type.option.option'('type.num.num'),X6),s('type.list.list'('type.closSem.v'),X7),s('type.list.list'('type.closSem.v'),X8),s('type.num.num',X9),s('type.closLang.exp',X10))) | ? [X1,X2,X3,X4,X5] : s('type.closSem.v',X0) = s('type.closSem.v','const.closSem.Recclosure_5'(s('type.option.option'('type.num.num'),X1),s('type.list.list'('type.closSem.v'),X2),s('type.list.list'('type.closSem.v'),X3),s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),X4),s('type.num.num',X5)))) => (? [X26,X27,X28,X29,X30] : s('type.closSem.v',X0) = s('type.closSem.v','const.closSem.Closure_5'(s('type.option.option'('type.num.num'),X26),s('type.list.list'('type.closSem.v'),X27),s('type.list.list'('type.closSem.v'),X28),s('type.num.num',X29),s('type.closLang.exp',X30))) | ? [X21,X22,X23,X24,X25] : s('type.closSem.v',X0) = s('type.closSem.v','const.closSem.Recclosure_5'(s('type.option.option'('type.num.num'),X21),s('type.list.list'('type.closSem.v'),X22),s('type.list.list'('type.closSem.v'),X23),s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),X24),s('type.num.num',X25))) | ? [X20] : s('type.closSem.v',X0) = s('type.closSem.v','const.closSem.Number_1'(s('type.integer.int',X20))) | ? [X19] : s('type.closSem.v',X0) = s('type.closSem.v','const.closSem.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),X19))) | ? [X17,X18] : s('type.closSem.v',X0) = s('type.closSem.v','const.closSem.Block_2'(s('type.num.num',X17),s('type.list.list'('type.closSem.v'),X18))) | ? [X16] : s('type.closSem.v',X0) = s('type.closSem.v','const.closSem.RefPtr_1'(s('type.num.num',X16)))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : ((? [X7] : s('type.closSem.v',X6) = s('type.closSem.v','const.closSem.Number_1'(s('type.integer.int',X7))) | ? [X8] : s('type.closSem.v',X6) = s('type.closSem.v','const.closSem.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),X8))) | ? [X9,X10] : s('type.closSem.v',X6) = s('type.closSem.v','const.closSem.Block_2'(s('type.num.num',X9),s('type.list.list'('type.closSem.v'),X10))) | ? [X11] : s('type.closSem.v',X6) = s('type.closSem.v','const.closSem.RefPtr_1'(s('type.num.num',X11))) | ? [X12,X13,X14,X15,X16] : s('type.closSem.v',X6) = s('type.closSem.v','const.closSem.Closure_5'(s('type.option.option'('type.num.num'),X12),s('type.list.list'('type.closSem.v'),X13),s('type.list.list'('type.closSem.v'),X14),s('type.num.num',X15),s('type.closLang.exp',X16))) | ? [X17,X18,X19,X20,X21] : s('type.closSem.v',X6) = s('type.closSem.v','const.closSem.Recclosure_5'(s('type.option.option'('type.num.num'),X17),s('type.list.list'('type.closSem.v'),X18),s('type.list.list'('type.closSem.v'),X19),s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),X20),s('type.num.num',X21)))) => (? [X12,X13,X14,X15,X16] : s('type.closSem.v',X6) = s('type.closSem.v','const.closSem.Closure_5'(s('type.option.option'('type.num.num'),X12),s('type.list.list'('type.closSem.v'),X13),s('type.list.list'('type.closSem.v'),X14),s('type.num.num',X15),s('type.closLang.exp',X16))) | ? [X17,X18,X19,X20,X21] : s('type.closSem.v',X6) = s('type.closSem.v','const.closSem.Recclosure_5'(s('type.option.option'('type.num.num'),X17),s('type.list.list'('type.closSem.v'),X18),s('type.list.list'('type.closSem.v'),X19),s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),X20),s('type.num.num',X21))) | ? [X7] : s('type.closSem.v',X6) = s('type.closSem.v','const.closSem.Number_1'(s('type.integer.int',X7))) | ? [X8] : s('type.closSem.v',X6) = s('type.closSem.v','const.closSem.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),X8))) | ? [X9,X10] : s('type.closSem.v',X6) = s('type.closSem.v','const.closSem.Block_2'(s('type.num.num',X9),s('type.list.list'('type.closSem.v'),X10))) | ? [X11] : s('type.closSem.v',X6) = s('type.closSem.v','const.closSem.RefPtr_1'(s('type.num.num',X11)))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : ((? [X7] : s('type.closSem.v',X6) = s('type.closSem.v','const.closSem.Number_1'(s('type.integer.int',X7))) | ? [X8] : s('type.closSem.v',X6) = s('type.closSem.v','const.closSem.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),X8))) | ? [X9,X10] : s('type.closSem.v',X6) = s('type.closSem.v','const.closSem.Block_2'(s('type.num.num',X9),s('type.list.list'('type.closSem.v'),X10))) | ? [X11] : s('type.closSem.v',X6) = s('type.closSem.v','const.closSem.RefPtr_1'(s('type.num.num',X11))) | ? [X12,X13,X14,X15,X16] : s('type.closSem.v',X6) = s('type.closSem.v','const.closSem.Closure_5'(s('type.option.option'('type.num.num'),X12),s('type.list.list'('type.closSem.v'),X13),s('type.list.list'('type.closSem.v'),X14),s('type.num.num',X15),s('type.closLang.exp',X16))) | ? [X17,X18,X19,X20,X21] : s('type.closSem.v',X6) = s('type.closSem.v','const.closSem.Recclosure_5'(s('type.option.option'('type.num.num'),X17),s('type.list.list'('type.closSem.v'),X18),s('type.list.list'('type.closSem.v'),X19),s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),X20),s('type.num.num',X21)))) => (? [X12,X13,X14,X15,X16] : s('type.closSem.v',X6) = s('type.closSem.v','const.closSem.Closure_5'(s('type.option.option'('type.num.num'),X12),s('type.list.list'('type.closSem.v'),X13),s('type.list.list'('type.closSem.v'),X14),s('type.num.num',X15),s('type.closLang.exp',X16))) | ? [X17,X18,X19,X20,X21] : s('type.closSem.v',X6) = s('type.closSem.v','const.closSem.Recclosure_5'(s('type.option.option'('type.num.num'),X17),s('type.list.list'('type.closSem.v'),X18),s('type.list.list'('type.closSem.v'),X19),s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),X20),s('type.num.num',X21))) | ? [X7] : s('type.closSem.v',X6) = s('type.closSem.v','const.closSem.Number_1'(s('type.integer.int',X7))) | ? [X8] : s('type.closSem.v',X6) = s('type.closSem.v','const.closSem.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),X8))) | ? [X9,X10] : s('type.closSem.v',X6) = s('type.closSem.v','const.closSem.Block_2'(s('type.num.num',X9),s('type.list.list'('type.closSem.v'),X10))) | ? [X11] : s('type.closSem.v',X6) = s('type.closSem.v','const.closSem.RefPtr_1'(s('type.num.num',X11)))))),
  file('thm.closProps.closProps_9|49|_prove_ltb','thm.closProps.closProps_9|49|_prove_ltb')).
fof(f3720,plain,(
  $false | $spl2),
  inference(subsumption_resolution,[],[f404,f227])).
fof(f227,plain,(
  ( ! [X4] : (s('type.closSem.v',sK12) != s('type.closSem.v','const.closSem.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),X4)))) )),
  inference(cnf_transformation,[],[f138])).
fof(f4190,plain,(
  $false | $spl10),
  inference(subsumption_resolution,[],[f412,f225])).
fof(f225,plain,(
  ( ! [X6,X10,X8,X7,X9] : (s('type.closSem.v',sK12) != s('type.closSem.v','const.closSem.Recclosure_5'(s('type.option.option'('type.num.num'),X6),s('type.list.list'('type.closSem.v'),X7),s('type.list.list'('type.closSem.v'),X8),s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),X9),s('type.num.num',X10)))) )),
  inference(cnf_transformation,[],[f138])).
fof(f4191,plain,(
  $false | $spl4),
  inference(subsumption_resolution,[],[f406,f228])).
fof(f228,plain,(
  ( ! [X2,X3] : (s('type.closSem.v',sK12) != s('type.closSem.v','const.closSem.Block_2'(s('type.num.num',X2),s('type.list.list'('type.closSem.v'),X3)))) )),
  inference(cnf_transformation,[],[f138])).
fof(f4192,plain,(
  $false | $spl8),
  inference(subsumption_resolution,[],[f410,f224])).
fof(f224,plain,(
  ( ! [X14,X12,X15,X13,X11] : (s('type.closSem.v',sK12) != s('type.closSem.v','const.closSem.Closure_5'(s('type.option.option'('type.num.num'),X11),s('type.list.list'('type.closSem.v'),X12),s('type.list.list'('type.closSem.v'),X13),s('type.num.num',X14),s('type.closLang.exp',X15)))) )),
  inference(cnf_transformation,[],[f138])).
fof(f402,plain,(
  s('type.closSem.v',sK12) = s('type.closSem.v','const.closSem.Number_1'(s('type.integer.int',sK13))) | $spl0),
  inference(cnf_transformation,[],[f402_D])).
fof(f402_D,plain,(
  s('type.closSem.v',sK12) = s('type.closSem.v','const.closSem.Number_1'(s('type.integer.int',sK13))) <=> ~$spl0),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl0])])).
fof(f404,plain,(
  s('type.closSem.v',sK12) = s('type.closSem.v','const.closSem.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK14))) | $spl2),
  inference(cnf_transformation,[],[f404_D])).
fof(f404_D,plain,(
  s('type.closSem.v',sK12) = s('type.closSem.v','const.closSem.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK14))) <=> ~$spl2),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl2])])).
fof(f406,plain,(
  s('type.closSem.v',sK12) = s('type.closSem.v','const.closSem.Block_2'(s('type.num.num',sK15),s('type.list.list'('type.closSem.v'),sK16))) | $spl4),
  inference(cnf_transformation,[],[f406_D])).
fof(f406_D,plain,(
  s('type.closSem.v',sK12) = s('type.closSem.v','const.closSem.Block_2'(s('type.num.num',sK15),s('type.list.list'('type.closSem.v'),sK16))) <=> ~$spl4),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl4])])).
fof(f408,plain,(
  s('type.closSem.v',sK12) = s('type.closSem.v','const.closSem.RefPtr_1'(s('type.num.num',sK17))) | $spl6),
  inference(cnf_transformation,[],[f408_D])).
fof(f408_D,plain,(
  s('type.closSem.v',sK12) = s('type.closSem.v','const.closSem.RefPtr_1'(s('type.num.num',sK17))) <=> ~$spl6),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl6])])).
fof(f410,plain,(
  s('type.closSem.v',sK12) = s('type.closSem.v','const.closSem.Closure_5'(s('type.option.option'('type.num.num'),sK18),s('type.list.list'('type.closSem.v'),sK19),s('type.list.list'('type.closSem.v'),sK20),s('type.num.num',sK21),s('type.closLang.exp',sK22))) | $spl8),
  inference(cnf_transformation,[],[f410_D])).
fof(f410_D,plain,(
  s('type.closSem.v',sK12) = s('type.closSem.v','const.closSem.Closure_5'(s('type.option.option'('type.num.num'),sK18),s('type.list.list'('type.closSem.v'),sK19),s('type.list.list'('type.closSem.v'),sK20),s('type.num.num',sK21),s('type.closLang.exp',sK22))) <=> ~$spl8),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl8])])).
fof(f412,plain,(
  s('type.closSem.v',sK12) = s('type.closSem.v','const.closSem.Recclosure_5'(s('type.option.option'('type.num.num'),sK23),s('type.list.list'('type.closSem.v'),sK24),s('type.list.list'('type.closSem.v'),sK25),s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),sK26),s('type.num.num',sK27))) | $spl10),
  inference(cnf_transformation,[],[f412_D])).
fof(f412_D,plain,(
  s('type.closSem.v',sK12) = s('type.closSem.v','const.closSem.Recclosure_5'(s('type.option.option'('type.num.num'),sK23),s('type.list.list'('type.closSem.v'),sK24),s('type.list.list'('type.closSem.v'),sK25),s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),sK26),s('type.num.num',sK27))) <=> ~$spl10),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl10])])).
fof(f223,plain,(
  s('type.closSem.v',sK12) = s('type.closSem.v','const.closSem.Recclosure_5'(s('type.option.option'('type.num.num'),sK23),s('type.list.list'('type.closSem.v'),sK24),s('type.list.list'('type.closSem.v'),sK25),s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),sK26),s('type.num.num',sK27))) | s('type.closSem.v',sK12) = s('type.closSem.v','const.closSem.Closure_5'(s('type.option.option'('type.num.num'),sK18),s('type.list.list'('type.closSem.v'),sK19),s('type.list.list'('type.closSem.v'),sK20),s('type.num.num',sK21),s('type.closLang.exp',sK22))) | s('type.closSem.v',sK12) = s('type.closSem.v','const.closSem.RefPtr_1'(s('type.num.num',sK17))) | s('type.closSem.v',sK12) = s('type.closSem.v','const.closSem.Block_2'(s('type.num.num',sK15),s('type.list.list'('type.closSem.v'),sK16))) | s('type.closSem.v',sK12) = s('type.closSem.v','const.closSem.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK14))) | s('type.closSem.v',sK12) = s('type.closSem.v','const.closSem.Number_1'(s('type.integer.int',sK13)))),
  inference(cnf_transformation,[],[f138])).
fof(f4194,plain,(
  $false | $spl6),
  inference(subsumption_resolution,[],[f408,f229])).
fof(f229,plain,(
  ( ! [X1] : (s('type.closSem.v',sK12) != s('type.closSem.v','const.closSem.RefPtr_1'(s('type.num.num',X1)))) )),
  inference(cnf_transformation,[],[f138])).
% SZS output end Proof for thm.closProps
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 325
% Passive clauses: 1271
% Generated clauses: 3965
% Final active clauses: 325
% Final passive clauses: 797
% Input formulas: 37
% Initial clauses: 174
% 
% Duplicate literals: 150
% Trivial inequalities: 13
% Fw subsumption resolutions: 269
% 
% Simple tautologies: 145
% Equational tautologies: 24
% Forward subsumptions: 2094
% 
% Binary resolution: 2421
% Factoring: 719
% Forward superposition: 112
% Backward superposition: 59
% Self superposition: 2
% Equality factoring: 2
% Equality resolution: 8
% 
% Split clauses: 78
% Split components: 161
% SAT solver clauses: 158
% SAT solver unit clauses: 12
% SAT solver binary clauses: 29
% SAT solver learnt clauses: 1
% 
% Sat splits: 78
% Sat splitting refutations: 6
% 
% TWLsolver clauses: 157
% TWLsolver calls for satisfiability: 137
% 
% Memory used [KB]: 2046
% Time elapsed: 0.161 s
% ------------------------------
% ------------------------------
% Success in time 0.19 s
