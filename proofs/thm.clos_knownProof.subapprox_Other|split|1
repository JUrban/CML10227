Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 149 next slice time: 5
dis+11_7_3 on thm.clos_knownProof
% (63007)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 602
% Passive clauses: 2566
% Generated clauses: 33699
% Final active clauses: 512
% Final passive clauses: 1383
% Input formulas: 62
% Initial clauses: 156
% 
% Duplicate literals: 456
% Trivial inequalities: 56
% Fw subsumption resolutions: 2935
% Fw demodulations: 10146
% Bw demodulations: 72
% 
% Simple tautologies: 425
% Equational tautologies: 40
% Forward subsumptions: 16931
% Fw demodulations to eq. taut.: 1
% 
% Binary resolution: 14559
% Factoring: 25
% Forward superposition: 2316
% Backward superposition: 2667
% Self superposition: 100
% Equality factoring: 46
% Equality resolution: 7
% 
% Split clauses: 285
% Split components: 582
% SAT solver clauses: 486
% SAT solver unit clauses: 16
% SAT solver binary clauses: 118
% 
% Sat splits: 285
% Sat splitting refutations: 2
% 
% TWLsolver clauses: 484
% TWLsolver calls for satisfiability: 159
% 
% Memory used [KB]: 12153
% Time elapsed: 0.600 s
% ------------------------------
% ------------------------------
% remaining time: 143 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.clos_knownProof
% (63046)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 256
% Passive clauses: 916
% Generated clauses: 9361
% Final active clauses: 212
% Final passive clauses: 510
% Input formulas: 62
% Initial clauses: 156
% 
% Duplicate literals: 113
% Trivial inequalities: 91
% Fw subsumption resolutions: 896
% Fw demodulations: 1463
% Bw demodulations: 185
% Condensations: 708
% Global subsumptions: 17
% 
% Simple tautologies: 154
% Equational tautologies: 40
% Forward subsumptions: 3792
% Bw demodulations to eq. taut.: 7
% 
% Binary resolution: 1106
% Factoring: 27
% Forward superposition: 1237
% Backward superposition: 2224
% Self superposition: 113
% Equality factoring: 62
% Equality resolution: 26
% 
% Split clauses: 43
% Split components: 88
% SAT solver clauses: 1178
% SAT solver unit clauses: 194
% SAT solver binary clauses: 70
% SAT solver learnt clauses: 34
% SAT solver learnt literals: 10
% 
% Sat splits: 43
% Sat splitting refutations: 1
% 
% TWLsolver clauses: 1110
% TWLsolver calls for satisfiability: 1092
% 
% Memory used [KB]: 7547
% Time elapsed: 0.700 s
% ------------------------------
% ------------------------------
% remaining time: 136 next slice time: 103
lrs+11_2_br=off:cond=on:fde=none:gs=on:gsaa=full_model:lwlo=on:nwc=2:sas=minisat:stl=30:ssfp=100000:ssfq=1.4:smm=sco:ssnc=none:sp=occurrence:urr=on_98 on thm.clos_knownProof
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.clos_knownProof
% SZS output start Proof for thm.clos_knownProof
fof(f6673,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f3404,f3409,f3412,f3415,f3418,f3421,f3424,f3427,f3430,f3433,f3459,f3405,f3462,f3410,f3464,f3413,f3466,f3416,f3468,f3419,f3470,f3422,f3472,f3425,f3474,f3428,f3476,f3431,f3478,f3406,f3434,f3521,f3522,f3524,f3526,f3528,f3530,f3531,f3533,f3534,f3536,f3538,f3539,f3540,f4761,f4827,f4825,f4835,f4836,f4843,f4840,f4837,f4838,f4846,f4839,f4848,f4841,f4845,f4854,f4855,f4867,f4865,f4971,f4999,f4997,f4995,f5081,f5083,f5084,f5085,f5086,f5087,f5088,f5089,f5090,f5091,f5092,f5093,f5094,f5095,f5096,f5097,f5098,f6427,f6439,f6449,f6455,f6462,f6464,f6471,f6478,f6443,f6441,f6480,f6518,f6530,f6540,f6546,f6553,f6555,f6465,f6561,f6568,f6534,f5001,f6532,f6570,f6481,f5000,f6653,f6655,f6656,f6657,f6658,f6659,f6660,f6661,f6662,f6663,f6664,f6665,f6666,f6667,f6668,f6669,f6670,f6671])).
fof(f6671,plain,(
  $false | $spl48),
  inference(subsumption_resolution,[],[f6650,f2095])).
fof(f2095,plain,(
  ( ! [X0,X1] : (sP3(X0,X1,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx','const.clos_known.Other_0')))) )),
  inference(unit_resulting_resolution,[],[f1373,f364])).
fof(f364,plain,(
  ( ! [X2,X0,X1] : (sP3(X0,X1,X2) | ~p(s(bool,X2))) )),
  inference(cnf_transformation,[],[f226])).
fof(f226,plain,(
  ! [X0,X1,X2] : ((~sP3(X0,X1,X2) | p(s(bool,X2)) | ~p(s(bool,X1)) | ~p(s(bool,X0))) & ((~p(s(bool,X2)) & p(s(bool,X1)) & p(s(bool,X0))) | sP3(X0,X1,X2)))),
  inference(rectify,[],[f225])).
fof(f225,plain,(
  ! [X2,X0,X1] : ((~sP3(X2,X0,X1) | p(s(bool,X1)) | ~p(s(bool,X0)) | ~p(s(bool,X2))) & ((~p(s(bool,X1)) & p(s(bool,X0)) & p(s(bool,X2))) | sP3(X2,X0,X1)))),
  inference(flattening,[],[f224])).
fof(f224,plain,(
  ! [X2,X0,X1] : ((~sP3(X2,X0,X1) | (p(s(bool,X1)) | ~p(s(bool,X0)) | ~p(s(bool,X2)))) & ((~p(s(bool,X1)) & p(s(bool,X0)) & p(s(bool,X2))) | sP3(X2,X0,X1)))),
  inference(nnf_transformation,[],[f170])).
fof(f170,plain,(
  ! [X2,X0,X1] : (sP3(X2,X0,X1) <=> (p(s(bool,X1)) | ~p(s(bool,X0)) | ~p(s(bool,X2))))),
  introduced(predicate_definition_introduction,[new_symbols(naming,[sP3])])).
fof(f1373,plain,(
  p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx','const.clos_known.Other_0'))))),
  inference(unit_resulting_resolution,[],[f248,f329])).
fof(f329,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',X0),s('type.clos_known.val_approx',X1)))) | s('type.clos_known.val_approx',X1) != s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X0),s('type.clos_known.val_approx',X1)))) )),
  inference(cnf_transformation,[],[f207])).
fof(f207,plain,(
  ! [X0,X1] : ((~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',X0),s('type.clos_known.val_approx',X1)))) | s('type.clos_known.val_approx',X1) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X0),s('type.clos_known.val_approx',X1)))) & (s('type.clos_known.val_approx',X1) != s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X0),s('type.clos_known.val_approx',X1))) | p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',X0),s('type.clos_known.val_approx',X1))))))),
  inference(nnf_transformation,[],[f121])).
fof(f121,plain,(
  ! [X0,X1] : (p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',X0),s('type.clos_known.val_approx',X1)))) <=> s('type.clos_known.val_approx',X1) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X0),s('type.clos_known.val_approx',X1))))),
  inference(rectify,[],[f50])).
fof(f50,axiom,(
  ! [X46,X47] : (p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',X46),s('type.clos_known.val_approx',X47)))) <=> s('type.clos_known.val_approx',X47) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X46),s('type.clos_known.val_approx',X47))))),
  file('thm.clos_knownProof.subapprox_Other|split|1','thm.clos_knownProof.subapprox_def')).
fof(f248,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx','const.clos_known.Other_0')))),
  inference(cnf_transformation,[],[f49])).
fof(f49,axiom,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx','const.clos_known.Other_0')))),
  file('thm.clos_knownProof.subapprox_Other|split|1','thm.clos_known.merge_def|split|20')).
fof(f6650,plain,(
  ( ! [X0,X1] : (~sP3(sK15(X0,X0,X1,X1),'T_0','const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx','const.clos_known.Other_0')))) ) | $spl48),
  inference(backward_demodulation,[],[f5001,f4702])).
fof(f4702,plain,(
  ( ! [X0,X1] : (~sP3(sK15(X0,X0,X1,X1),'T_0','const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',sK7),s('type.clos_known.val_approx','const.clos_known.Other_0')))) )),
  inference(unit_resulting_resolution,[],[f245,f425,f422,f4499,f360])).
fof(f360,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,X2)) | sP4(X0,X1,X2) | ~sP3(X0,X2,X1) | ~sP2(X1,X2,X0) | ~sP1(X2,X1,X0)) )),
  inference(cnf_transformation,[],[f223])).
fof(f223,plain,(
  ! [X0,X1,X2] : ((~sP4(X0,X1,X2) | (sP1(X2,X1,X0) & sP2(X1,X2,X0) & sP3(X0,X2,X1) & (p(s(bool,X2)) | ~p(s(bool,X1)) | ~p(s(bool,X0))))) & (~sP1(X2,X1,X0) | ~sP2(X1,X2,X0) | ~sP3(X0,X2,X1) | (~p(s(bool,X2)) & p(s(bool,X1)) & p(s(bool,X0))) | sP4(X0,X1,X2)))),
  inference(rectify,[],[f222])).
fof(f222,plain,(
  ! [X2,X1,X0] : ((~sP4(X2,X1,X0) | (sP1(X0,X1,X2) & sP2(X1,X0,X2) & sP3(X2,X0,X1) & (p(s(bool,X0)) | ~p(s(bool,X1)) | ~p(s(bool,X2))))) & (~sP1(X0,X1,X2) | ~sP2(X1,X0,X2) | ~sP3(X2,X0,X1) | (~p(s(bool,X0)) & p(s(bool,X1)) & p(s(bool,X2))) | sP4(X2,X1,X0)))),
  inference(flattening,[],[f221])).
fof(f221,plain,(
  ! [X2,X1,X0] : ((~sP4(X2,X1,X0) | (sP1(X0,X1,X2) & sP2(X1,X0,X2) & sP3(X2,X0,X1) & (p(s(bool,X0)) | ~p(s(bool,X1)) | ~p(s(bool,X2))))) & ((~sP1(X0,X1,X2) | ~sP2(X1,X0,X2) | ~sP3(X2,X0,X1) | (~p(s(bool,X0)) & p(s(bool,X1)) & p(s(bool,X2)))) | sP4(X2,X1,X0)))),
  inference(nnf_transformation,[],[f171])).
fof(f171,plain,(
  ! [X2,X1,X0] : (sP4(X2,X1,X0) <=> (sP1(X0,X1,X2) & sP2(X1,X0,X2) & sP3(X2,X0,X1) & (p(s(bool,X0)) | ~p(s(bool,X1)) | ~p(s(bool,X2)))))),
  introduced(predicate_definition_introduction,[new_symbols(naming,[sP4])])).
fof(f4499,plain,(
  ( ! [X0,X1] : (~sP4(sK15(X0,X0,X1,X1),'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',sK7),s('type.clos_known.val_approx','const.clos_known.Other_0')),'T_0')) )),
  inference(unit_resulting_resolution,[],[f432,f2746,f377])).
fof(f377,plain,(
  ( ! [X2,X0,X1] : (~sP4(X2,X1,X0) | ~p(s(bool,X2)) | s(bool,X0) = s(bool,X1)) )),
  inference(cnf_transformation,[],[f232])).
fof(f232,plain,(
  ! [X0,X1,X2] : ((((p(s(bool,X2)) | s(bool,X0) = s(bool,X1)) & (~p(s(bool,X2)) | s(bool,X0) != s(bool,X1))) | sP4(X2,X1,X0)) & (~sP4(X2,X1,X0) | ((~p(s(bool,X2)) | s(bool,X0) = s(bool,X1)) & (s(bool,X0) != s(bool,X1) | p(s(bool,X2))))))),
  inference(nnf_transformation,[],[f172])).
fof(f172,plain,(
  ! [X0,X1,X2] : ((p(s(bool,X2)) <=> s(bool,X0) = s(bool,X1)) <=> sP4(X2,X1,X0))),
  inference(definition_folding,[],[f135,f171,f170,f169,f168])).
fof(f168,plain,(
  ! [X0,X1,X2] : (sP1(X0,X1,X2) <=> (p(s(bool,X2)) | p(s(bool,X1)) | p(s(bool,X0))))),
  introduced(predicate_definition_introduction,[new_symbols(naming,[sP1])])).
fof(f169,plain,(
  ! [X1,X0,X2] : (sP2(X1,X0,X2) <=> (p(s(bool,X2)) | ~p(s(bool,X0)) | ~p(s(bool,X1))))),
  introduced(predicate_definition_introduction,[new_symbols(naming,[sP2])])).
fof(f135,plain,(
  ! [X0,X1,X2] : ((p(s(bool,X2)) <=> s(bool,X0) = s(bool,X1)) <=> ((p(s(bool,X2)) | p(s(bool,X1)) | p(s(bool,X0))) & (p(s(bool,X2)) | ~p(s(bool,X0)) | ~p(s(bool,X1))) & (p(s(bool,X1)) | ~p(s(bool,X0)) | ~p(s(bool,X2))) & (p(s(bool,X0)) | ~p(s(bool,X1)) | ~p(s(bool,X2)))))),
  inference(flattening,[],[f134])).
fof(f134,plain,(
  ! [X0,X1,X2] : ((p(s(bool,X2)) <=> s(bool,X0) = s(bool,X1)) <=> ((p(s(bool,X2)) | p(s(bool,X1)) | p(s(bool,X0))) & (p(s(bool,X2)) | ~p(s(bool,X0)) | ~p(s(bool,X1))) & (p(s(bool,X1)) | ~p(s(bool,X0)) | ~p(s(bool,X2))) & (p(s(bool,X0)) | ~p(s(bool,X1)) | ~p(s(bool,X2)))))),
  inference(rectify,[],[f56])).
fof(f56,axiom,(
  ! [X49,X50,X51] : ((p(s(bool,X51)) <=> s(bool,X49) = s(bool,X50)) <=> ((p(s(bool,X51)) | p(s(bool,X50)) | p(s(bool,X49))) & (p(s(bool,X51)) | ~p(s(bool,X49)) | ~p(s(bool,X50))) & (p(s(bool,X50)) | ~p(s(bool,X49)) | ~p(s(bool,X51))) & (p(s(bool,X49)) | ~p(s(bool,X50)) | ~p(s(bool,X51)))))),
  file('thm.clos_knownProof.subapprox_Other|split|1','thm.sat.sat_2|49|_prove_ltb')).
fof(f2746,plain,(
  ( ! [X0,X1] : (p(s(bool,sK15(X0,X0,X1,X1)))) )),
  inference(equality_resolution,[],[f1292])).
fof(f1292,plain,(
  ( ! [X2,X0,X1] : (s('type.num.num',X0) != s('type.num.num',X1) | p(s(bool,sK15(X2,X2,X1,X0)))) )),
  inference(equality_resolution,[],[f398])).
fof(f398,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.num.num',X2) != s('type.num.num',X3) | s('type.num.num',X0) != s('type.num.num',X1) | p(s(bool,sK15(X3,X2,X1,X0)))) )),
  inference(cnf_transformation,[],[f243])).
fof(f243,plain,(
  ! [X0,X1,X2,X3] : ((~p(s(bool,sK15(X3,X2,X1,X0))) | (s('type.num.num',X2) = s('type.num.num',X3) & s('type.num.num',X0) = s('type.num.num',X1))) & (s('type.num.num',X2) != s('type.num.num',X3) | s('type.num.num',X0) != s('type.num.num',X1) | p(s(bool,sK15(X3,X2,X1,X0)))) & s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X3),s('type.num.num',X1))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X2),s('type.num.num',X0))))) = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK15(X3,X2,X1,X0)),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X2),s('type.num.num',X0))),s('type.clos_known.val_approx','const.clos_known.Other_0'))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK15])],[f242])).
fof(f242,plain,(
  ! [X0,X1,X2,X3] : ? [X4] : ((~p(s(bool,X4)) | (s('type.num.num',X2) = s('type.num.num',X3) & s('type.num.num',X0) = s('type.num.num',X1))) & (s('type.num.num',X2) != s('type.num.num',X3) | s('type.num.num',X0) != s('type.num.num',X1) | p(s(bool,X4))) & s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,X4),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X2),s('type.num.num',X0))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X3),s('type.num.num',X1))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X2),s('type.num.num',X0))))))),
  inference(flattening,[],[f241])).
fof(f241,plain,(
  ! [X0,X1,X2,X3] : ? [X4] : (((~p(s(bool,X4)) | (s('type.num.num',X2) = s('type.num.num',X3) & s('type.num.num',X0) = s('type.num.num',X1))) & ((s('type.num.num',X2) != s('type.num.num',X3) | s('type.num.num',X0) != s('type.num.num',X1)) | p(s(bool,X4)))) & s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,X4),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X2),s('type.num.num',X0))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X3),s('type.num.num',X1))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X2),s('type.num.num',X0))))))),
  inference(nnf_transformation,[],[f138])).
fof(f138,plain,(
  ! [X0,X1,X2,X3] : ? [X4] : ((p(s(bool,X4)) <=> (s('type.num.num',X2) = s('type.num.num',X3) & s('type.num.num',X0) = s('type.num.num',X1))) & s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,X4),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X2),s('type.num.num',X0))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X3),s('type.num.num',X1))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X2),s('type.num.num',X0))))))),
  inference(rectify,[],[f35])).
fof(f35,axiom,(
  ! [X25,X26,X27,X28] : ? [X24] : ((p(s(bool,X24)) <=> (s('type.num.num',X27) = s('type.num.num',X28) & s('type.num.num',X25) = s('type.num.num',X26))) & s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,X24),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X27),s('type.num.num',X25))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X28),s('type.num.num',X26))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X27),s('type.num.num',X25))))))),
  file('thm.clos_knownProof.subapprox_Other|split|1','thm.clos_known.merge_def|split|6')).
fof(f432,plain,(
  s(bool,'T_0') != s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',sK7),s('type.clos_known.val_approx','const.clos_known.Other_0')))),
  inference(unit_resulting_resolution,[],[f244,f269])).
fof(f269,plain,(
  ( ! [X0] : (s(bool,'T_0') != s(bool,X0) | p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f180])).
fof(f180,plain,(
  ! [X0] : ((s(bool,'T_0') != s(bool,X0) | p(s(bool,X0))) & (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f82])).
fof(f82,plain,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) <=> p(s(bool,X0)))),
  inference(rectify,[],[f25])).
fof(f25,axiom,(
  ! [X9] : (s(bool,'T_0') = s(bool,X9) <=> p(s(bool,X9)))),
  file('thm.clos_knownProof.subapprox_Other|split|1','thm.bool.EQ_CLAUSES|split|1')).
fof(f244,plain,(
  ~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',sK7),s('type.clos_known.val_approx','const.clos_known.Other_0'))))),
  inference(cnf_transformation,[],[f176])).
fof(f176,plain,(
  ~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',sK7),s('type.clos_known.val_approx','const.clos_known.Other_0'))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK7])],[f139])).
fof(f139,plain,(
  ? [X0] : ~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',X0),s('type.clos_known.val_approx','const.clos_known.Other_0'))))),
  inference(ennf_transformation,[],[f64])).
fof(f64,plain,(
  ~! [X0] : p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',X0),s('type.clos_known.val_approx','const.clos_known.Other_0'))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',X6),s('type.clos_known.val_approx','const.clos_known.Other_0'))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',X6),s('type.clos_known.val_approx','const.clos_known.Other_0'))))),
  file('thm.clos_knownProof.subapprox_Other|split|1','thm.clos_knownProof.subapprox_Other|split|1')).
fof(f422,plain,(
  ( ! [X0,X1] : (sP2('const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',sK7),s('type.clos_known.val_approx','const.clos_known.Other_0')),X0,X1)) )),
  inference(unit_resulting_resolution,[],[f244,f370])).
fof(f370,plain,(
  ( ! [X2,X0,X1] : (sP2(X0,X1,X2) | p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f229])).
fof(f229,plain,(
  ! [X0,X1,X2] : ((~sP2(X0,X1,X2) | p(s(bool,X2)) | ~p(s(bool,X1)) | ~p(s(bool,X0))) & ((~p(s(bool,X2)) & p(s(bool,X1)) & p(s(bool,X0))) | sP2(X0,X1,X2)))),
  inference(rectify,[],[f228])).
fof(f228,plain,(
  ! [X1,X0,X2] : ((~sP2(X1,X0,X2) | p(s(bool,X2)) | ~p(s(bool,X0)) | ~p(s(bool,X1))) & ((~p(s(bool,X2)) & p(s(bool,X0)) & p(s(bool,X1))) | sP2(X1,X0,X2)))),
  inference(flattening,[],[f227])).
fof(f227,plain,(
  ! [X1,X0,X2] : ((~sP2(X1,X0,X2) | (p(s(bool,X2)) | ~p(s(bool,X0)) | ~p(s(bool,X1)))) & ((~p(s(bool,X2)) & p(s(bool,X0)) & p(s(bool,X1))) | sP2(X1,X0,X2)))),
  inference(nnf_transformation,[],[f169])).
fof(f425,plain,(
  ( ! [X0,X1] : (sP1('T_0',X0,X1)) )),
  inference(unit_resulting_resolution,[],[f245,f374])).
fof(f374,plain,(
  ( ! [X2,X0,X1] : (sP1(X0,X1,X2) | ~p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f231])).
fof(f231,plain,(
  ! [X0,X1,X2] : ((~sP1(X0,X1,X2) | p(s(bool,X2)) | p(s(bool,X1)) | p(s(bool,X0))) & ((~p(s(bool,X2)) & ~p(s(bool,X1)) & ~p(s(bool,X0))) | sP1(X0,X1,X2)))),
  inference(flattening,[],[f230])).
fof(f230,plain,(
  ! [X0,X1,X2] : ((~sP1(X0,X1,X2) | (p(s(bool,X2)) | p(s(bool,X1)) | p(s(bool,X0)))) & ((~p(s(bool,X2)) & ~p(s(bool,X1)) & ~p(s(bool,X0))) | sP1(X0,X1,X2)))),
  inference(nnf_transformation,[],[f168])).
fof(f245,plain,(
  p(s(bool,'T_0'))),
  inference(cnf_transformation,[],[f1])).
fof(f1,axiom,(
  p(s(bool,'T_0'))),
  file('thm.clos_knownProof.subapprox_Other|split|1',aHL_TRUTH)).
fof(f6670,plain,(
  $false | $spl48),
  inference(subsumption_resolution,[],[f6643,f2095])).
fof(f6643,plain,(
  ~sP3('const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx','const.clos_known.Other_0')),'T_0','const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx','const.clos_known.Other_0'))) | $spl48),
  inference(backward_demodulation,[],[f5001,f4128])).
fof(f4128,plain,(
  ~sP3('const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx','const.clos_known.Other_0')),'T_0','const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',sK7),s('type.clos_known.val_approx','const.clos_known.Other_0')))),
  inference(unit_resulting_resolution,[],[f245,f425,f422,f2124,f360])).
fof(f2124,plain,(
  ~sP4('const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx','const.clos_known.Other_0')),'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',sK7),s('type.clos_known.val_approx','const.clos_known.Other_0')),'T_0')),
  inference(unit_resulting_resolution,[],[f432,f1373,f377])).
fof(f6669,plain,(
  $false | $spl48),
  inference(subsumption_resolution,[],[f6642,f2095])).
fof(f6642,plain,(
  ( ! [X0] : (~sP3('const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X0)),'T_0','const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx','const.clos_known.Other_0')))) ) | $spl48),
  inference(backward_demodulation,[],[f5001,f4036])).
fof(f4036,plain,(
  ( ! [X0] : (~sP3('const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X0)),'T_0','const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',sK7),s('type.clos_known.val_approx','const.clos_known.Other_0')))) )),
  inference(unit_resulting_resolution,[],[f245,f425,f422,f1846,f360])).
fof(f1846,plain,(
  ( ! [X0] : (~sP4('const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X0)),'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',sK7),s('type.clos_known.val_approx','const.clos_known.Other_0')),'T_0')) )),
  inference(unit_resulting_resolution,[],[f432,f1372,f377])).
fof(f1372,plain,(
  ( ! [X0] : (p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X0))))) )),
  inference(unit_resulting_resolution,[],[f254,f329])).
fof(f254,plain,(
  ( ! [X0] : (s('type.clos_known.val_approx',X0) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X0)))) )),
  inference(cnf_transformation,[],[f68])).
fof(f68,plain,(
  ! [X0] : s('type.clos_known.val_approx',X0) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X0)))),
  inference(rectify,[],[f29])).
fof(f29,axiom,(
  ! [X17] : s('type.clos_known.val_approx',X17) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X17)))),
  file('thm.clos_knownProof.subapprox_Other|split|1','thm.clos_known.merge_def|split|0')).
fof(f6668,plain,(
  $false | $spl48),
  inference(subsumption_resolution,[],[f6621,f2194])).
fof(f2194,plain,(
  ~sP6('const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx','const.clos_known.Other_0')),'F_0','const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx','const.clos_known.Other_0')))),
  inference(unit_resulting_resolution,[],[f1373,f408,f1373,f393])).
fof(f393,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,X2)) | ~p(s(bool,X1)) | p(s(bool,X0)) | ~sP6(X2,X0,X1)) )),
  inference(cnf_transformation,[],[f240])).
fof(f240,plain,(
  ! [X0,X1,X2] : ((((p(s(bool,X2)) | ~p(s(bool,X1)) | p(s(bool,X0))) & (~p(s(bool,X2)) | (p(s(bool,X1)) & ~p(s(bool,X0))))) | sP6(X2,X0,X1)) & (~sP6(X2,X0,X1) | ((~p(s(bool,X2)) | ~p(s(bool,X1)) | p(s(bool,X0))) & ((p(s(bool,X1)) & ~p(s(bool,X0))) | p(s(bool,X2))))))),
  inference(flattening,[],[f239])).
fof(f239,plain,(
  ! [X0,X1,X2] : ((((p(s(bool,X2)) | (~p(s(bool,X1)) | p(s(bool,X0)))) & (~p(s(bool,X2)) | (p(s(bool,X1)) & ~p(s(bool,X0))))) | sP6(X2,X0,X1)) & (~sP6(X2,X0,X1) | ((~p(s(bool,X2)) | (~p(s(bool,X1)) | p(s(bool,X0)))) & ((p(s(bool,X1)) & ~p(s(bool,X0))) | p(s(bool,X2))))))),
  inference(nnf_transformation,[],[f175])).
fof(f175,plain,(
  ! [X0,X1,X2] : ((p(s(bool,X2)) <=> (~p(s(bool,X1)) | p(s(bool,X0)))) <=> sP6(X2,X0,X1))),
  inference(definition_folding,[],[f165,f174,f173])).
fof(f173,plain,(
  ! [X2,X0,X1] : (sP5(X2,X0,X1) <=> (~p(s(bool,X1)) | p(s(bool,X0)) | ~p(s(bool,X2))))),
  introduced(predicate_definition_introduction,[new_symbols(naming,[sP5])])).
fof(f174,plain,(
  ! [X2,X0,X1] : (sP6(X2,X0,X1) <=> ((p(s(bool,X2)) | p(s(bool,X1))) & (p(s(bool,X2)) | ~p(s(bool,X0))) & sP5(X2,X0,X1)))),
  introduced(predicate_definition_introduction,[new_symbols(naming,[sP6])])).
fof(f165,plain,(
  ! [X0,X1,X2] : ((p(s(bool,X2)) <=> (~p(s(bool,X1)) | p(s(bool,X0)))) <=> ((p(s(bool,X2)) | p(s(bool,X1))) & (p(s(bool,X2)) | ~p(s(bool,X0))) & (~p(s(bool,X1)) | p(s(bool,X0)) | ~p(s(bool,X2)))))),
  inference(ennf_transformation,[],[f137])).
fof(f137,plain,(
  ! [X0,X1,X2] : ((p(s(bool,X2)) <=> (p(s(bool,X1)) => p(s(bool,X0)))) <=> ((p(s(bool,X2)) | p(s(bool,X1))) & (p(s(bool,X2)) | ~p(s(bool,X0))) & (~p(s(bool,X1)) | p(s(bool,X0)) | ~p(s(bool,X2)))))),
  inference(flattening,[],[f136])).
fof(f136,plain,(
  ! [X0,X1,X2] : ((p(s(bool,X2)) <=> (p(s(bool,X1)) => p(s(bool,X0)))) <=> ((p(s(bool,X2)) | p(s(bool,X1))) & (p(s(bool,X2)) | ~p(s(bool,X0))) & (~p(s(bool,X1)) | p(s(bool,X0)) | ~p(s(bool,X2)))))),
  inference(rectify,[],[f57])).
fof(f57,axiom,(
  ! [X49,X50,X51] : ((p(s(bool,X51)) <=> (p(s(bool,X50)) => p(s(bool,X49)))) <=> ((p(s(bool,X51)) | p(s(bool,X50))) & (p(s(bool,X51)) | ~p(s(bool,X49))) & (~p(s(bool,X50)) | p(s(bool,X49)) | ~p(s(bool,X51)))))),
  file('thm.clos_knownProof.subapprox_Other|split|1','thm.sat.sat_27_prove_ltb')).
fof(f408,plain,(
  ~p(s(bool,'F_0'))),
  inference(subsumption_resolution,[],[f250,f245])).
fof(f250,plain,(
  ~p(s(bool,'T_0')) | ~p(s(bool,'F_0'))),
  inference(cnf_transformation,[],[f177])).
fof(f177,plain,(
  (p(s(bool,'T_0')) | p(s(bool,'F_0'))) & (~p(s(bool,'F_0')) | ~p(s(bool,'T_0')))),
  inference(nnf_transformation,[],[f65])).
fof(f65,plain,(
  ~p(s(bool,'T_0')) <=> p(s(bool,'F_0'))),
  inference(flattening,[],[f20])).
fof(f20,axiom,(
  ~p(s(bool,'T_0')) <=> p(s(bool,'F_0'))),
  file('thm.clos_knownProof.subapprox_Other|split|1','thm.bool.NOT_CLAUSES|split|1')).
fof(f6621,plain,(
  sP6('const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx','const.clos_known.Other_0')),'F_0','const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx','const.clos_known.Other_0'))) | $spl48),
  inference(backward_demodulation,[],[f5001,f2158])).
fof(f2158,plain,(
  sP6('const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',sK7),s('type.clos_known.val_approx','const.clos_known.Other_0')),'F_0','const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx','const.clos_known.Other_0')))),
  inference(unit_resulting_resolution,[],[f408,f430,f1373,f385])).
fof(f385,plain,(
  ( ! [X2,X0,X1] : (sP6(X0,X1,X2) | ~sP5(X0,X1,X2) | p(s(bool,X1)) | ~p(s(bool,X2))) )),
  inference(cnf_transformation,[],[f235])).
fof(f235,plain,(
  ! [X0,X1,X2] : ((~sP6(X0,X1,X2) | ((p(s(bool,X0)) | p(s(bool,X2))) & (p(s(bool,X0)) | ~p(s(bool,X1))) & sP5(X0,X1,X2))) & ((~p(s(bool,X0)) & ~p(s(bool,X2))) | (~p(s(bool,X0)) & p(s(bool,X1))) | ~sP5(X0,X1,X2) | sP6(X0,X1,X2)))),
  inference(rectify,[],[f234])).
fof(f234,plain,(
  ! [X2,X0,X1] : ((~sP6(X2,X0,X1) | ((p(s(bool,X2)) | p(s(bool,X1))) & (p(s(bool,X2)) | ~p(s(bool,X0))) & sP5(X2,X0,X1))) & ((~p(s(bool,X2)) & ~p(s(bool,X1))) | (~p(s(bool,X2)) & p(s(bool,X0))) | ~sP5(X2,X0,X1) | sP6(X2,X0,X1)))),
  inference(flattening,[],[f233])).
fof(f233,plain,(
  ! [X2,X0,X1] : ((~sP6(X2,X0,X1) | ((p(s(bool,X2)) | p(s(bool,X1))) & (p(s(bool,X2)) | ~p(s(bool,X0))) & sP5(X2,X0,X1))) & (((~p(s(bool,X2)) & ~p(s(bool,X1))) | (~p(s(bool,X2)) & p(s(bool,X0))) | ~sP5(X2,X0,X1)) | sP6(X2,X0,X1)))),
  inference(nnf_transformation,[],[f174])).
fof(f430,plain,(
  ( ! [X0,X1] : (sP5('const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',sK7),s('type.clos_known.val_approx','const.clos_known.Other_0')),X0,X1)) )),
  inference(unit_resulting_resolution,[],[f244,f389])).
fof(f389,plain,(
  ( ! [X2,X0,X1] : (sP5(X0,X1,X2) | p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f238])).
fof(f238,plain,(
  ! [X0,X1,X2] : ((~sP5(X0,X1,X2) | ~p(s(bool,X2)) | p(s(bool,X1)) | ~p(s(bool,X0))) & ((p(s(bool,X2)) & ~p(s(bool,X1)) & p(s(bool,X0))) | sP5(X0,X1,X2)))),
  inference(rectify,[],[f237])).
fof(f237,plain,(
  ! [X2,X0,X1] : ((~sP5(X2,X0,X1) | ~p(s(bool,X1)) | p(s(bool,X0)) | ~p(s(bool,X2))) & ((p(s(bool,X1)) & ~p(s(bool,X0)) & p(s(bool,X2))) | sP5(X2,X0,X1)))),
  inference(flattening,[],[f236])).
fof(f236,plain,(
  ! [X2,X0,X1] : ((~sP5(X2,X0,X1) | (~p(s(bool,X1)) | p(s(bool,X0)) | ~p(s(bool,X2)))) & ((p(s(bool,X1)) & ~p(s(bool,X0)) & p(s(bool,X2))) | sP5(X2,X0,X1)))),
  inference(nnf_transformation,[],[f173])).
fof(f6667,plain,(
  $false | $spl48),
  inference(subsumption_resolution,[],[f6620,f6592])).
fof(f6592,plain,(
  sP4('const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx','const.clos_known.Other_0')),'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx','const.clos_known.Other_0')),'T_0') | $spl48),
  inference(backward_demodulation,[],[f5001,f938])).
fof(f938,plain,(
  sP4('const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',sK7),s('type.clos_known.val_approx','const.clos_known.Other_0')),'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',sK7),s('type.clos_known.val_approx','const.clos_known.Other_0')),'T_0')),
  inference(unit_resulting_resolution,[],[f425,f422,f417,f245,f360])).
fof(f417,plain,(
  ( ! [X0,X1] : (sP3('const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',sK7),s('type.clos_known.val_approx','const.clos_known.Other_0')),X0,X1)) )),
  inference(unit_resulting_resolution,[],[f244,f366])).
fof(f366,plain,(
  ( ! [X2,X0,X1] : (sP3(X0,X1,X2) | p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f226])).
fof(f6620,plain,(
  ~sP4('const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx','const.clos_known.Other_0')),'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx','const.clos_known.Other_0')),'T_0') | $spl48),
  inference(backward_demodulation,[],[f5001,f2124])).
fof(f6666,plain,(
  $false | $spl48),
  inference(subsumption_resolution,[],[f6617,f2059])).
fof(f2059,plain,(
  ~sP4('const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx','const.clos_known.Other_0')),'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx','const.clos_known.Other_0')),'F_0')),
  inference(unit_resulting_resolution,[],[f1373,f408,f1373,f359])).
fof(f359,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,X1)) | ~p(s(bool,X0)) | p(s(bool,X2)) | ~sP4(X0,X1,X2)) )),
  inference(cnf_transformation,[],[f223])).
fof(f6617,plain,(
  sP4('const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx','const.clos_known.Other_0')),'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx','const.clos_known.Other_0')),'F_0') | $spl48),
  inference(backward_demodulation,[],[f5001,f2118])).
fof(f2118,plain,(
  sP4('const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx','const.clos_known.Other_0')),'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',sK7),s('type.clos_known.val_approx','const.clos_known.Other_0')),'F_0')),
  inference(unit_resulting_resolution,[],[f439,f1373,f376])).
fof(f376,plain,(
  ( ! [X2,X0,X1] : (sP4(X2,X1,X0) | s(bool,X0) != s(bool,X1) | ~p(s(bool,X2))) )),
  inference(cnf_transformation,[],[f232])).
fof(f439,plain,(
  s(bool,'F_0') = s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',sK7),s('type.clos_known.val_approx','const.clos_known.Other_0')))),
  inference(unit_resulting_resolution,[],[f244,f274])).
fof(f274,plain,(
  ( ! [X0] : (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f182])).
fof(f182,plain,(
  ! [X0] : ((s(bool,'F_0') != s(bool,X0) | ~p(s(bool,X0))) & (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f85])).
fof(f85,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(flattening,[],[f84])).
fof(f84,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(rectify,[],[f26])).
fof(f26,axiom,(
  ! [X9] : (s(bool,'F_0') = s(bool,X9) <=> ~p(s(bool,X9)))),
  file('thm.clos_knownProof.subapprox_Other|split|1','thm.bool.EQ_CLAUSES|split|2')).
fof(f6665,plain,(
  $false | $spl48),
  inference(subsumption_resolution,[],[f6607,f248])).
fof(f6607,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') != s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx','const.clos_known.Other_0'))) | $spl48),
  inference(backward_demodulation,[],[f5001,f1439])).
fof(f1439,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') != s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK7),s('type.clos_known.val_approx','const.clos_known.Other_0')))),
  inference(subsumption_resolution,[],[f1407,f408])).
fof(f1407,plain,(
  p(s(bool,'F_0')) | s('type.clos_known.val_approx','const.clos_known.Other_0') != s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK7),s('type.clos_known.val_approx','const.clos_known.Other_0')))),
  inference(superposition,[],[f329,f439])).
fof(f6664,plain,(
  $false | $spl48),
  inference(subsumption_resolution,[],[f6606,f2095])).
fof(f6606,plain,(
  ( ! [X0] : (~sP3(sK14(X0,X0),'T_0','const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx','const.clos_known.Other_0')))) ) | $spl48),
  inference(backward_demodulation,[],[f5001,f1293])).
fof(f1293,plain,(
  ( ! [X0] : (~sP3(sK14(X0,X0),'T_0','const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',sK7),s('type.clos_known.val_approx','const.clos_known.Other_0')))) )),
  inference(unit_resulting_resolution,[],[f245,f425,f422,f1155,f360])).
fof(f1155,plain,(
  ( ! [X0] : (~sP4(sK14(X0,X0),'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',sK7),s('type.clos_known.val_approx','const.clos_known.Other_0')),'T_0')) )),
  inference(unit_resulting_resolution,[],[f432,f1090,f377])).
fof(f1090,plain,(
  ( ! [X0] : (p(s(bool,sK14(X0,X0)))) )),
  inference(equality_resolution,[],[f350])).
fof(f350,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.clos_known.val_approx'),X0))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.clos_known.val_approx'),X1))) | p(s(bool,sK14(X1,X0)))) )),
  inference(cnf_transformation,[],[f220])).
fof(f220,plain,(
  ! [X0,X1] : ((~p(s(bool,sK14(X1,X0))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.clos_known.val_approx'),X0))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.clos_known.val_approx'),X1)))) & (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.clos_known.val_approx'),X0))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.clos_known.val_approx'),X1))) | p(s(bool,sK14(X1,X0)))) & s('type.clos_known.val_approx',happ(s(fun('type.clos_known.val_approx','type.clos_known.val_approx'),happ(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X1))))),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X0))))) = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK14(X1,X0)),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X1),s('type.list.list'('type.clos_known.val_approx'),X0))))),s('type.clos_known.val_approx','const.clos_known.Other_0'))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK14])],[f219])).
fof(f219,plain,(
  ! [X0,X1] : ? [X2] : ((~p(s(bool,X2)) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.clos_known.val_approx'),X0))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.clos_known.val_approx'),X1)))) & (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.clos_known.val_approx'),X0))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.clos_known.val_approx'),X1))) | p(s(bool,X2))) & s('type.clos_known.val_approx',happ(s(fun('type.clos_known.val_approx','type.clos_known.val_approx'),happ(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X1))))),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X0))))) = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,X2),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X1),s('type.list.list'('type.clos_known.val_approx'),X0))))),s('type.clos_known.val_approx','const.clos_known.Other_0'))))),
  inference(flattening,[],[f218])).
fof(f218,plain,(
  ! [X0,X1] : ? [X2] : (((~p(s(bool,X2)) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.clos_known.val_approx'),X0))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.clos_known.val_approx'),X1)))) & (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.clos_known.val_approx'),X0))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.clos_known.val_approx'),X1))) | p(s(bool,X2)))) & s('type.clos_known.val_approx',happ(s(fun('type.clos_known.val_approx','type.clos_known.val_approx'),happ(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X1))))),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X0))))) = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,X2),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X1),s('type.list.list'('type.clos_known.val_approx'),X0))))),s('type.clos_known.val_approx','const.clos_known.Other_0'))))),
  inference(nnf_transformation,[],[f129])).
fof(f129,plain,(
  ! [X0,X1] : ? [X2] : ((p(s(bool,X2)) <=> s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.clos_known.val_approx'),X0))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.clos_known.val_approx'),X1)))) & s('type.clos_known.val_approx',happ(s(fun('type.clos_known.val_approx','type.clos_known.val_approx'),happ(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X1))))),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X0))))) = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,X2),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X1),s('type.list.list'('type.clos_known.val_approx'),X0))))),s('type.clos_known.val_approx','const.clos_known.Other_0'))))),
  inference(rectify,[],[f34])).
fof(f34,axiom,(
  ! [X22,X23] : ? [X24] : ((p(s(bool,X24)) <=> s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.clos_known.val_approx'),X22))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.clos_known.val_approx'),X23)))) & s('type.clos_known.val_approx',happ(s(fun('type.clos_known.val_approx','type.clos_known.val_approx'),happ(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X23))))),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X22))))) = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,X24),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X23),s('type.list.list'('type.clos_known.val_approx'),X22))))),s('type.clos_known.val_approx','const.clos_known.Other_0'))))),
  file('thm.clos_knownProof.subapprox_Other|split|1','thm.clos_known.merge_def|split|5')).
fof(f6663,plain,(
  $false | $spl48),
  inference(subsumption_resolution,[],[f6602,f2064])).
fof(f2064,plain,(
  ( ! [X0] : (sP4(sK14(X0,X0),'T_0','const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx','const.clos_known.Other_0')))) )),
  inference(unit_resulting_resolution,[],[f1146,f1145,f413,f1373,f360])).
fof(f413,plain,(
  ( ! [X0,X1] : (sP3(X0,X1,'T_0')) )),
  inference(unit_resulting_resolution,[],[f245,f364])).
fof(f1145,plain,(
  ( ! [X2,X0,X1] : (sP2(X0,X1,sK14(X2,X2))) )),
  inference(unit_resulting_resolution,[],[f1090,f368])).
fof(f368,plain,(
  ( ! [X2,X0,X1] : (sP2(X0,X1,X2) | ~p(s(bool,X2))) )),
  inference(cnf_transformation,[],[f229])).
fof(f1146,plain,(
  ( ! [X2,X0,X1] : (sP1(X0,X1,sK14(X2,X2))) )),
  inference(unit_resulting_resolution,[],[f1090,f372])).
fof(f372,plain,(
  ( ! [X2,X0,X1] : (sP1(X0,X1,X2) | ~p(s(bool,X2))) )),
  inference(cnf_transformation,[],[f231])).
fof(f6602,plain,(
  ( ! [X0] : (~sP4(sK14(X0,X0),'T_0','const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx','const.clos_known.Other_0')))) ) | $spl48),
  inference(backward_demodulation,[],[f5001,f1153])).
fof(f1153,plain,(
  ( ! [X0] : (~sP4(sK14(X0,X0),'T_0','const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',sK7),s('type.clos_known.val_approx','const.clos_known.Other_0')))) )),
  inference(unit_resulting_resolution,[],[f432,f1090,f377])).
fof(f6662,plain,(
  $false | $spl48),
  inference(subsumption_resolution,[],[f6598,f2116])).
fof(f2116,plain,(
  ( ! [X0,X1] : (sP1(X0,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx','const.clos_known.Other_0')),X1)) )),
  inference(unit_resulting_resolution,[],[f1373,f373])).
fof(f373,plain,(
  ( ! [X2,X0,X1] : (sP1(X0,X1,X2) | ~p(s(bool,X1))) )),
  inference(cnf_transformation,[],[f231])).
fof(f6598,plain,(
  ~sP1('F_0','const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx','const.clos_known.Other_0')),'F_0') | $spl48),
  inference(backward_demodulation,[],[f5001,f1054])).
fof(f1054,plain,(
  ~sP1('F_0','const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',sK7),s('type.clos_known.val_approx','const.clos_known.Other_0')),'F_0')),
  inference(unit_resulting_resolution,[],[f422,f614,f414,f408,f362])).
fof(f362,plain,(
  ( ! [X2,X0,X1] : (~sP3(X0,X2,X1) | p(s(bool,X0)) | sP4(X0,X1,X2) | ~sP2(X1,X2,X0) | ~sP1(X2,X1,X0)) )),
  inference(cnf_transformation,[],[f223])).
fof(f414,plain,(
  ( ! [X0,X1] : (sP3(X0,'F_0',X1)) )),
  inference(unit_resulting_resolution,[],[f408,f365])).
fof(f365,plain,(
  ( ! [X2,X0,X1] : (sP3(X0,X1,X2) | p(s(bool,X1))) )),
  inference(cnf_transformation,[],[f226])).
fof(f614,plain,(
  ~sP4('F_0','const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',sK7),s('type.clos_known.val_approx','const.clos_known.Other_0')),'F_0')),
  inference(unit_resulting_resolution,[],[f408,f439,f378])).
fof(f378,plain,(
  ( ! [X2,X0,X1] : (~sP4(X2,X1,X0) | s(bool,X0) != s(bool,X1) | p(s(bool,X2))) )),
  inference(cnf_transformation,[],[f232])).
fof(f6661,plain,(
  $false | $spl48),
  inference(subsumption_resolution,[],[f6595,f2117])).
fof(f2117,plain,(
  ( ! [X0,X1] : (sP1('const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx','const.clos_known.Other_0')),X0,X1)) )),
  inference(unit_resulting_resolution,[],[f1373,f374])).
fof(f6595,plain,(
  ~sP1('const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx','const.clos_known.Other_0')),'F_0','F_0') | $spl48),
  inference(backward_demodulation,[],[f5001,f996])).
fof(f996,plain,(
  ~sP1('const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',sK7),s('type.clos_known.val_approx','const.clos_known.Other_0')),'F_0','F_0')),
  inference(unit_resulting_resolution,[],[f421,f615,f416,f408,f361])).
fof(f361,plain,(
  ( ! [X2,X0,X1] : (~sP3(X0,X2,X1) | p(s(bool,X1)) | sP4(X0,X1,X2) | ~sP2(X1,X2,X0) | ~sP1(X2,X1,X0)) )),
  inference(cnf_transformation,[],[f223])).
fof(f416,plain,(
  ( ! [X0,X1] : (sP3('F_0',X0,X1)) )),
  inference(unit_resulting_resolution,[],[f408,f366])).
fof(f615,plain,(
  ~sP4('F_0','F_0','const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',sK7),s('type.clos_known.val_approx','const.clos_known.Other_0')))),
  inference(unit_resulting_resolution,[],[f408,f439,f378])).
fof(f421,plain,(
  ( ! [X0,X1] : (sP2('F_0',X0,X1)) )),
  inference(unit_resulting_resolution,[],[f408,f370])).
fof(f6660,plain,(
  $false | $spl48),
  inference(subsumption_resolution,[],[f6593,f2095])).
fof(f6593,plain,(
  ~sP3('T_0','T_0','const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx','const.clos_known.Other_0'))) | $spl48),
  inference(backward_demodulation,[],[f5001,f940])).
fof(f940,plain,(
  ~sP3('T_0','T_0','const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',sK7),s('type.clos_known.val_approx','const.clos_known.Other_0')))),
  inference(unit_resulting_resolution,[],[f425,f422,f598,f245,f360])).
fof(f598,plain,(
  ~sP4('T_0','const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',sK7),s('type.clos_known.val_approx','const.clos_known.Other_0')),'T_0')),
  inference(unit_resulting_resolution,[],[f245,f432,f377])).
fof(f6659,plain,(
  $false | $spl48),
  inference(subsumption_resolution,[],[f6591,f2125])).
fof(f2125,plain,(
  ~sP4('const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx','const.clos_known.Other_0')),'F_0','T_0')),
  inference(unit_resulting_resolution,[],[f431,f1373,f377])).
fof(f431,plain,(
  s(bool,'T_0') != s(bool,'F_0')),
  inference(unit_resulting_resolution,[],[f408,f269])).
fof(f6591,plain,(
  sP4('const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx','const.clos_known.Other_0')),'F_0','T_0') | $spl48),
  inference(backward_demodulation,[],[f5001,f937])).
fof(f937,plain,(
  sP4('const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',sK7),s('type.clos_known.val_approx','const.clos_known.Other_0')),'F_0','T_0')),
  inference(unit_resulting_resolution,[],[f425,f421,f417,f245,f360])).
fof(f6658,plain,(
  $false | $spl48),
  inference(subsumption_resolution,[],[f6590,f2193])).
fof(f2193,plain,(
  ~sP6('const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx','const.clos_known.Other_0')),'F_0','T_0')),
  inference(unit_resulting_resolution,[],[f245,f408,f1373,f393])).
fof(f6590,plain,(
  sP6('const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx','const.clos_known.Other_0')),'F_0','T_0') | $spl48),
  inference(backward_demodulation,[],[f5001,f772])).
fof(f772,plain,(
  sP6('const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',sK7),s('type.clos_known.val_approx','const.clos_known.Other_0')),'F_0','T_0')),
  inference(unit_resulting_resolution,[],[f430,f245,f408,f385])).
fof(f6657,plain,(
  $false | $spl48),
  inference(subsumption_resolution,[],[f6587,f2060])).
fof(f2060,plain,(
  sP4('T_0','T_0','const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx','const.clos_known.Other_0')))),
  inference(unit_resulting_resolution,[],[f424,f418,f413,f1373,f360])).
fof(f418,plain,(
  ( ! [X0,X1] : (sP2(X0,X1,'T_0')) )),
  inference(unit_resulting_resolution,[],[f245,f368])).
fof(f424,plain,(
  ( ! [X0,X1] : (sP1(X0,'T_0',X1)) )),
  inference(unit_resulting_resolution,[],[f245,f373])).
fof(f6587,plain,(
  ~sP4('T_0','T_0','const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx','const.clos_known.Other_0'))) | $spl48),
  inference(backward_demodulation,[],[f5001,f602])).
fof(f602,plain,(
  ~sP4('T_0','T_0','const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',sK7),s('type.clos_known.val_approx','const.clos_known.Other_0')))),
  inference(unit_resulting_resolution,[],[f245,f432,f377])).
fof(f6656,plain,(
  $false | $spl48),
  inference(subsumption_resolution,[],[f6584,f2058])).
fof(f2058,plain,(
  ~sP4('T_0','const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx','const.clos_known.Other_0')),'F_0')),
  inference(unit_resulting_resolution,[],[f245,f408,f1373,f359])).
fof(f6584,plain,(
  sP4('T_0','const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx','const.clos_known.Other_0')),'F_0') | $spl48),
  inference(backward_demodulation,[],[f5001,f590])).
fof(f590,plain,(
  sP4('T_0','const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',sK7),s('type.clos_known.val_approx','const.clos_known.Other_0')),'F_0')),
  inference(unit_resulting_resolution,[],[f245,f439,f376])).
fof(f6655,plain,(
  $false | $spl48),
  inference(subsumption_resolution,[],[f6654,f431])).
fof(f6654,plain,(
  s(bool,'T_0') = s(bool,'F_0') | $spl48),
  inference(forward_demodulation,[],[f6579,f2052])).
fof(f2052,plain,(
  s(bool,'T_0') = s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx','const.clos_known.Other_0')))),
  inference(unit_resulting_resolution,[],[f245,f1373,f323])).
fof(f323,plain,(
  ( ! [X0,X1] : (~p(s(bool,X1)) | ~p(s(bool,X0)) | s(bool,X0) = s(bool,X1)) )),
  inference(cnf_transformation,[],[f151])).
fof(f151,plain,(
  ! [X0,X1] : ((p(s(bool,X0)) & ~p(s(bool,X1))) | (p(s(bool,X1)) & ~p(s(bool,X0))) | s(bool,X0) = s(bool,X1))),
  inference(flattening,[],[f150])).
fof(f150,plain,(
  ! [X0,X1] : ((p(s(bool,X0)) & ~p(s(bool,X1))) | ((p(s(bool,X1)) & ~p(s(bool,X0))) | s(bool,X0) = s(bool,X1)))),
  inference(ennf_transformation,[],[f113])).
fof(f113,plain,(
  ! [X0,X1] : ((p(s(bool,X0)) => p(s(bool,X1))) => ((p(s(bool,X1)) => p(s(bool,X0))) => s(bool,X0) = s(bool,X1)))),
  inference(rectify,[],[f8])).
fof(f8,axiom,(
  ! [X7,X8] : ((p(s(bool,X7)) => p(s(bool,X8))) => ((p(s(bool,X8)) => p(s(bool,X7))) => s(bool,X7) = s(bool,X8)))),
  file('thm.clos_knownProof.subapprox_Other|split|1','thm.bool.IMP_ANTISYM_AX')).
fof(f6579,plain,(
  s(bool,'F_0') = s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx','const.clos_known.Other_0'))) | $spl48),
  inference(backward_demodulation,[],[f5001,f439])).
fof(f6653,plain,(
  $false | $spl48),
  inference(subsumption_resolution,[],[f6578,f2052])).
fof(f6578,plain,(
  s(bool,'T_0') != s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx','const.clos_known.Other_0'))) | $spl48),
  inference(backward_demodulation,[],[f5001,f432])).
fof(f5000,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') != s('type.clos_known.val_approx',sK7) | $spl49),
  inference(cnf_transformation,[],[f5000_D])).
fof(f5000_D,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') != s('type.clos_known.val_approx',sK7) <=> ~$spl49),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl49])])).
fof(f6481,plain,(
  ( ! [X26] : (p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',X26),s('type.clos_known.val_approx',sK7)))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X26) | s('type.clos_known.val_approx',X26) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(X26)))) | s('type.clos_known.val_approx',X26) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(X26)))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X26)) ) | $spl56),
  inference(cnf_transformation,[],[f6481_D])).
fof(f6481_D,plain,(
  ( ! [X26] : (p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',X26),s('type.clos_known.val_approx',sK7)))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X26) | s('type.clos_known.val_approx',X26) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(X26)))) | s('type.clos_known.val_approx',X26) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(X26)))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X26)) ) <=> ~$spl56),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl56])])).
fof(f6570,plain,(
  ( ! [X29] : (p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',X29),s('type.clos_known.val_approx',sK7)))) | s('type.clos_known.val_approx','const.clos_known.Other_0') != s('type.clos_known.val_approx',sK7) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X29) | s('type.clos_known.val_approx',X29) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(X29)))) | s('type.clos_known.val_approx',X29) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(X29)))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X29)) ) | $spl46),
  inference(forward_demodulation,[],[f6569,f4999])).
fof(f6569,plain,(
  ( ! [X29] : (s('type.clos_known.val_approx','const.clos_known.Other_0') != s('type.clos_known.val_approx',sK7) | p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',X29),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(sK7))))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X29) | s('type.clos_known.val_approx',X29) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(X29)))) | s('type.clos_known.val_approx',X29) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(X29)))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X29)) ) | $spl46),
  inference(forward_demodulation,[],[f6516,f6489])).
fof(f6489,plain,(
  ( ! [X4,X3] : (s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X3),s('type.num.num',X4))),s('type.clos_known.val_approx',sK7)))) ) | $spl46),
  inference(superposition,[],[f352,f4999])).
fof(f352,plain,(
  ( ! [X2,X0,X1] : (s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X1),s('type.num.num',X0))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X2)))))) )),
  inference(cnf_transformation,[],[f130])).
fof(f130,plain,(
  ! [X0,X1,X2] : s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X1),s('type.num.num',X0))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X2)))))),
  inference(rectify,[],[f38])).
fof(f38,axiom,(
  ! [X30,X31,X33] : s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X31),s('type.num.num',X30))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X33)))))),
  file('thm.clos_knownProof.subapprox_Other|split|1','thm.clos_known.merge_def|split|9')).
fof(f6516,plain,(
  ( ! [X29] : (s('type.clos_known.val_approx',sK7) != s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8(X29)),s('type.num.num',sK9(X29)))),s('type.clos_known.val_approx',sK7))) | p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',X29),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(sK7))))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X29) | s('type.clos_known.val_approx',X29) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(X29)))) | s('type.clos_known.val_approx',X29) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(X29)))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X29)) ) | $spl46),
  inference(superposition,[],[f1758,f4999])).
fof(f1758,plain,(
  ( ! [X24,X23] : (s('type.clos_known.val_approx',X24) != s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8(X23)),s('type.num.num',sK9(X23)))),s('type.clos_known.val_approx',X24))) | p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',X23),s('type.clos_known.val_approx',X24)))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X23) | s('type.clos_known.val_approx',X23) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(X23)))) | s('type.clos_known.val_approx',X23) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(X23)))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X23)) )),
  inference(superposition,[],[f329,f262])).
fof(f262,plain,(
  ( ! [X0] : (s('type.clos_known.val_approx',X0) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8(X0)),s('type.num.num',sK9(X0)))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X0) | s('type.clos_known.val_approx',X0) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(X0)))) | s('type.clos_known.val_approx',X0) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(X0)))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X0)) )),
  inference(cnf_transformation,[],[f179])).
fof(f179,plain,(
  ! [X0] : (s('type.clos_known.val_approx',X0) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8(X0)),s('type.num.num',sK9(X0)))) | s('type.clos_known.val_approx',X0) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(X0)))) | s('type.clos_known.val_approx',X0) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(X0)))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X0) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X0))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK8,sK9,sK10,sK11])],[f75])).
fof(f75,plain,(
  ! [X0] : (? [X3,X4] : s('type.clos_known.val_approx',X0) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X3),s('type.num.num',X4))) | ? [X2] : s('type.clos_known.val_approx',X0) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X2))) | ? [X1] : s('type.clos_known.val_approx',X0) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X1))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X0) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X0))),
  inference(rectify,[],[f28])).
fof(f28,axiom,(
  ! [X12] : (? [X13,X14] : s('type.clos_known.val_approx',X12) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X13),s('type.num.num',X14))) | ? [X15] : s('type.clos_known.val_approx',X12) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X15))) | ? [X16] : s('type.clos_known.val_approx',X12) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X16))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X12) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X12))),
  file('thm.clos_knownProof.subapprox_Other|split|1','thm.clos_known.val_approx_nchotomy')).
fof(f6532,plain,(
  s('type.clos_known.val_approx',sK7) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.clos_known.Int_1'(s('type.integer.int',sK11(sK7))))))) | $spl58),
  inference(cnf_transformation,[],[f6532_D])).
fof(f6532_D,plain,(
  s('type.clos_known.val_approx',sK7) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.clos_known.Int_1'(s('type.integer.int',sK11(sK7))))))) <=> ~$spl58),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl58])])).
fof(f5001,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK7) | $spl48),
  inference(cnf_transformation,[],[f5001_D])).
fof(f5001_D,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK7) <=> ~$spl48),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl48])])).
fof(f6534,plain,(
  s('type.clos_known.val_approx',sK7) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.clos_known.Int_1'(s('type.integer.int',sK11(sK7))))))) | $spl60),
  inference(cnf_transformation,[],[f6534_D])).
fof(f6534_D,plain,(
  s('type.clos_known.val_approx',sK7) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.clos_known.Int_1'(s('type.integer.int',sK11(sK7))))))) <=> ~$spl60),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl60])])).
fof(f6568,plain,(
  s('type.clos_known.val_approx',sK7) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.clos_known.Int_1'(s('type.integer.int',sK11(sK7))))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK7) | s('type.clos_known.val_approx',sK7) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.clos_known.Int_1'(s('type.integer.int',sK11(sK7))))))) | ($spl43 | $spl46)),
  inference(global_subsumption,[],[f244,f245,f247,f248,f254,f255,f256,f257,f258,f259,f260,f261,f262,f270,f269,f314,f315,f316,f317,f318,f319,f323,f320,f332,f331,f409,f345,f352,f353,f354,f355,f362,f361,f360,f359,f358,f357,f356,f366,f365,f364,f363,f370,f369,f368,f367,f374,f373,f372,f371,f378,f377,f376,f375,f385,f384,f383,f400,f381,f380,f379,f389,f388,f387,f386,f393,f392,f391,f390,f411,f412,f413,f414,f416,f418,f419,f421,f423,f424,f425,f426,f428,f429,f431,f453,f454,f457,f460,f464,f487,f510,f508,f507,f504,f501,f500,f497,f496,f495,f494,f493,f492,f491,f490,f489,f518,f565,f583,f581,f605,f601,f668,f688,f698,f704,f713,f723,f722,f721,f720,f749,f750,f751,f752,f753,f754,f771,f785,f793,f797,f832,f839,f844,f854,f859,f872,f883,f893,f902,f906,f915,f945,f934,f928,f925,f952,f995,f985,f984,f1052,f1090,f1228,f1225,f1224,f1221,f1218,f1217,f1216,f1215,f1213,f1212,f1211,f1207,f1206,f1203,f1200,f1197,f1194,f1193,f1185,f1161,f1156,f1154,f1152,f1150,f1148,f1147,f1146,f1145,f1142,f1139,f1131,f1128,f1125,f1122,f1114,f1111,f1109,f1107,f1105,f1103,f1102,f1099,f1098,f1097,f1096,f1376,f1375,f1374,f1373,f1372,f1464,f1473,f1471,f1494,f1499,f1518,f1515,f1540,f1608,f1629,f1671,f1745,f1746,f1747,f1748,f1749,f1750,f1751,f1935,f1931,f1930,f1926,f1922,f1921,f1920,f1919,f1918,f1916,f1915,f1914,f1909,f1908,f1904,f1899,f1898,f1890,f1889,f1880,f1848,f1847,f1845,f1843,f1841,f1839,f1838,f1837,f1836,f1828,f1827,f1818,f1817,f1809,f1808,f1799,f1798,f1796,f1794,f1792,f1790,f1788,f1786,f1784,f1782,f1780,f1779,f1776,f1775,f1774,f1773,f2214,f2210,f2209,f2205,f2201,f2200,f2199,f2198,f2197,f2195,f2194,f2193,f2188,f2187,f2183,f2178,f2177,f2169,f2168,f2159,f2126,f2125,f2123,f2121,f2119,f2117,f2116,f2115,f2114,f2106,f2105,f2096,f2095,f2087,f2086,f2077,f2076,f2074,f2072,f2070,f2068,f2066,f2064,f2062,f2060,f2059,f2058,f2055,f2054,f2052,f2449,f2445,f2444,f2440,f2436,f2435,f2434,f2433,f2432,f2430,f2429,f2428,f2423,f2422,f2418,f2413,f2412,f2404,f2403,f2394,f2361,f2360,f2358,f2356,f2354,f2352,f2351,f2350,f2349,f2341,f2340,f2331,f2330,f2322,f2321,f2312,f2311,f2309,f2307,f2305,f2303,f2301,f2299,f2297,f2295,f2293,f2292,f2289,f2288,f2287,f2286,f2683,f2679,f2678,f2674,f2670,f2669,f2668,f2667,f2666,f2664,f2663,f2662,f2657,f2656,f2652,f2647,f2646,f2638,f2637,f2628,f2595,f2594,f2592,f2590,f2588,f2586,f2585,f2584,f2583,f2575,f2574,f2565,f2564,f2556,f2555,f2546,f2545,f2543,f2541,f2539,f2537,f2535,f2533,f2531,f2529,f2527,f2526,f2523,f2522,f2521,f2520,f2926,f2922,f2921,f2917,f2913,f2912,f2911,f2910,f2909,f2907,f2906,f2905,f2900,f2899,f2895,f2890,f2889,f2881,f2880,f2871,f2838,f2837,f2835,f2833,f2831,f2829,f2828,f2827,f2826,f2818,f2817,f2808,f2807,f2799,f2798,f2789,f2788,f2786,f2784,f2782,f2780,f2778,f2776,f2774,f2772,f2770,f2769,f2766,f2765,f2764,f2763,f3047,f3107,f3149,f3404,f3409,f3412,f3415,f3418,f3421,f3424,f3427,f3430,f3433,f3435,f3436,f3437,f3438,f3439,f3440,f3441,f3442,f3443,f3444,f3445,f3446,f3447,f3448,f3450,f3451,f3452,f3453,f3208,f3459,f3462,f3464,f3466,f3468,f3470,f3472,f3474,f3476,f3478,f1752,f2746,f1292,f3205,f3104,f399,f398,f397,f396,f3203,f3102,f410,f350,f349,f3201,f3099,f348,f347,f346,f2929,f3449,f1759,f1758,f1757,f1756,f1440,f329,f328,f3108,f3209,f1725,f1696,f1672,f1634,f1633,f408,f274,f273,f4356,f4362,f4591,f4587,f4586,f4582,f4578,f4577,f4576,f4575,f4574,f4572,f4571,f4570,f4565,f4564,f4560,f4555,f4554,f4546,f4545,f4536,f4501,f4500,f4498,f4495,f4493,f4492,f4491,f4490,f4489,f4481,f4480,f4471,f4470,f4462,f4461,f4452,f4451,f4449,f4447,f4445,f4443,f4441,f4439,f4437,f4435,f4433,f4432,f4429,f4428,f4427,f4426,f4711,f4734,f4758,f4759,f4760,f4761,f4763,f4764,f4765,f4767,f4768,f4769,f4771,f4772,f4773,f4835,f4836,f4837,f4838,f4839,f4854,f4855,f4869,f4886,f4890,f4891,f4892,f4893,f4894,f4895,f4902,f4906,f4907,f4908,f4909,f4910,f4911,f4946,f4977,f4981,f4950,f4985,f4989,f4993,f4972,f4971,f4959,f4960,f4961,f4962,f4963,f4964,f4702,f4573,f4535,f4499,f4497,f4496,f4494,f4128,f4036,f3004,f2908,f2870,f2836,f2834,f2832,f2830,f2665,f2627,f2593,f2591,f2589,f2587,f2431,f2393,f2359,f2357,f2355,f2353,f2196,f2158,f2124,f2122,f2120,f2118,f1917,f1879,f1846,f1844,f1842,f1840,f1630,f1628,f1611,f1439,f1293,f1214,f1180,f1155,f1153,f1151,f1149,f1056,f1054,f1033,f999,f996,f992,f940,f938,f937,f772,f615,f614,f602,f598,f591,f590,f582,f580,f509,f479,f439,f432,f430,f427,f422,f420,f417,f415,f4994,f5267,f5290,f5294,f5271,f5298,f5302,f5306,f5279,f5280,f5281,f5282,f5283,f5284,f5336,f5360,f5364,f5340,f5368,f5372,f5376,f5348,f5349,f5350,f5351,f5352,f5353,f5384,f5385,f5386,f5390,f5391,f5392,f5393,f5394,f5395,f5396,f5397,f5398,f5418,f5429,f5458,f5462,f5466,f5433,f5470,f5474,f5478,f5437,f5439,f5445,f5446,f5447,f5448,f5449,f5450,f5500,f5512,f5544,f5548,f5552,f5516,f5556,f5560,f5564,f5520,f5530,f5531,f5532,f5533,f5534,f5535,f5587,f5628,f5599,f5632,f5636,f5603,f5640,f5644,f5648,f5608,f5613,f5614,f5615,f5616,f5617,f5618,f5671,f5716,f5684,f5720,f5724,f5688,f5728,f5732,f5736,f5700,f5701,f5702,f5703,f5704,f5705,f5782,f5783,f5784,f5785,f5786,f5787,f5788,f5789,f5790,f5791,f5792,f5793,f5794,f5799,f5803,f5811,f5876,f5880,f5824,f5884,f5888,f5892,f5828,f5829,f5896,f5900,f5904,f5833,f5905,f5906,f5907,f5837,f5908,f5845,f5926,f5934,f5858,f5862,f5863,f5947,f5957,f6003,f6004,f6005,f5961,f6006,f5969,f6024,f6032,f6033,f5982,f6041,f5986,f5987,f5992,f5995,f6059,f6061,f6064,f6068,f6076,f6121,f6126,f6089,f6131,f6135,f6139,f6093,f6094,f6143,f6147,f6151,f6098,f6102,f6103,f6104,f6105,f6106,f6107,f6108,f6109,f6110,f6111,f6112,f6113,f6114,f6115,f6116,f6117,f6165,f6166,f6167,f6168,f6169,f6176,f6180,f6185,f6189,f6193,f6194,f6198,f6199,f6203,f6211,f6265,f6269,f6224,f6273,f6277,f6281,f6228,f6229,f6285,f6289,f6293,f6233,f6294,f6304,f6350,f6351,f6352,f6308,f6353,f6355,f6316,f6371,f6379,f6380,f6329,f6388,f6333,f6334,f6338,f6342,f4999,f6483,f6485,f6486,f6487,f6488,f6489,f6490,f6491,f6492,f6493,f6494,f6530,f6539,f6540,f6545,f6546,f6552,f6553,f6555,f6560,f6561,f6562,f6567])).
fof(f6567,plain,(
  ( ! [X28] : (s('type.clos_known.val_approx',sK7) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.clos_known.Int_1'(s('type.integer.int',sK11(sK7))))))) | s('type.clos_known.val_approx',sK7) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.clos_known.Int_1'(s('type.integer.int',sK11(sK7))))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK7) | ~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',X28),s('type.clos_known.val_approx',sK7)))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8('const.clos_known.Int_1'(s('type.integer.int',sK11(sK7))))),s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK11(sK7))))))) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X28),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8('const.clos_known.Int_1'(s('type.integer.int',sK11(sK7))))),s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK11(sK7)))))))))) ) | ($spl43 | $spl46)),
  inference(subsumption_resolution,[],[f6566,f4994])).
fof(f6566,plain,(
  ( ! [X28] : (s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK7) | s('type.clos_known.val_approx',sK7) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.clos_known.Int_1'(s('type.integer.int',sK11(sK7))))))) | s('type.clos_known.val_approx',sK7) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.clos_known.Int_1'(s('type.integer.int',sK11(sK7))))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK7) | ~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',X28),s('type.clos_known.val_approx',sK7)))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8('const.clos_known.Int_1'(s('type.integer.int',sK11(sK7))))),s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK11(sK7))))))) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X28),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8('const.clos_known.Int_1'(s('type.integer.int',sK11(sK7))))),s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK11(sK7)))))))))) ) | $spl46),
  inference(forward_demodulation,[],[f6565,f4999])).
fof(f6565,plain,(
  ( ! [X28] : (s('type.clos_known.val_approx',sK7) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.clos_known.Int_1'(s('type.integer.int',sK11(sK7))))))) | s('type.clos_known.val_approx',sK7) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.clos_known.Int_1'(s('type.integer.int',sK11(sK7))))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK7) | ~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',X28),s('type.clos_known.val_approx',sK7)))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8('const.clos_known.Int_1'(s('type.integer.int',sK11(sK7))))),s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK11(sK7))))))) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X28),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8('const.clos_known.Int_1'(s('type.integer.int',sK11(sK7))))),s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK11(sK7))))))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(sK7))))) ) | $spl46),
  inference(forward_demodulation,[],[f6564,f4999])).
fof(f6564,plain,(
  ( ! [X28] : (s('type.clos_known.val_approx',sK7) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.clos_known.Int_1'(s('type.integer.int',sK11(sK7))))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK7) | ~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',X28),s('type.clos_known.val_approx',sK7)))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8('const.clos_known.Int_1'(s('type.integer.int',sK11(sK7))))),s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK11(sK7))))))) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X28),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8('const.clos_known.Int_1'(s('type.integer.int',sK11(sK7))))),s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK11(sK7))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(sK7)))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.clos_known.Int_1'(s('type.integer.int',sK11(sK7))))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(sK7))))) ) | $spl46),
  inference(forward_demodulation,[],[f6563,f4999])).
fof(f6563,plain,(
  ( ! [X28] : (s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK7) | ~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',X28),s('type.clos_known.val_approx',sK7)))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8('const.clos_known.Int_1'(s('type.integer.int',sK11(sK7))))),s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK11(sK7))))))) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X28),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8('const.clos_known.Int_1'(s('type.integer.int',sK11(sK7))))),s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK11(sK7))))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(sK7)))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.clos_known.Int_1'(s('type.integer.int',sK11(sK7))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(sK7)))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.clos_known.Int_1'(s('type.integer.int',sK11(sK7))))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(sK7))))) ) | $spl46),
  inference(forward_demodulation,[],[f6515,f4999])).
fof(f6515,plain,(
  ( ! [X28] : (~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',X28),s('type.clos_known.val_approx',sK7)))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8('const.clos_known.Int_1'(s('type.integer.int',sK11(sK7))))),s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK11(sK7))))))) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X28),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8('const.clos_known.Int_1'(s('type.integer.int',sK11(sK7))))),s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK11(sK7))))))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(sK7)))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(sK7)))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.clos_known.Int_1'(s('type.integer.int',sK11(sK7))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(sK7)))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.clos_known.Int_1'(s('type.integer.int',sK11(sK7))))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(sK7))))) ) | $spl46),
  inference(superposition,[],[f1757,f4999])).
fof(f6562,plain,(
  ( ! [X27] : (s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8(X27)),s('type.num.num',sK9(X27)))) | ~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',sK7),s('type.clos_known.val_approx',X27)))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X27) | s('type.clos_known.val_approx',X27) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(X27)))) | s('type.clos_known.val_approx',X27) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(X27)))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X27)) ) | $spl46),
  inference(forward_demodulation,[],[f6514,f353])).
fof(f6514,plain,(
  ( ! [X27] : (~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',sK7),s('type.clos_known.val_approx',X27)))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8(X27)),s('type.num.num',sK9(X27)))) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(sK7)))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8(X27)),s('type.num.num',sK9(X27)))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X27) | s('type.clos_known.val_approx',X27) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(X27)))) | s('type.clos_known.val_approx',X27) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(X27)))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X27)) ) | $spl46),
  inference(superposition,[],[f1757,f4999])).
fof(f6560,plain,(
  ( ! [X26] : (s('type.clos_known.val_approx',sK7) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.clos_known.Int_1'(s('type.integer.int',sK11(sK7))))))) | s('type.clos_known.val_approx',sK7) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.clos_known.Int_1'(s('type.integer.int',sK11(sK7))))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK7) | ~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',sK7),s('type.clos_known.val_approx',X26)))) | s('type.clos_known.val_approx',X26) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8('const.clos_known.Int_1'(s('type.integer.int',sK11(sK7))))),s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK11(sK7))))))),s('type.clos_known.val_approx',X26)))) ) | ($spl43 | $spl46)),
  inference(subsumption_resolution,[],[f6559,f4994])).
fof(f6559,plain,(
  ( ! [X26] : (s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK7) | s('type.clos_known.val_approx',sK7) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.clos_known.Int_1'(s('type.integer.int',sK11(sK7))))))) | s('type.clos_known.val_approx',sK7) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.clos_known.Int_1'(s('type.integer.int',sK11(sK7))))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK7) | ~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',sK7),s('type.clos_known.val_approx',X26)))) | s('type.clos_known.val_approx',X26) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8('const.clos_known.Int_1'(s('type.integer.int',sK11(sK7))))),s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK11(sK7))))))),s('type.clos_known.val_approx',X26)))) ) | $spl46),
  inference(forward_demodulation,[],[f6558,f4999])).
fof(f6558,plain,(
  ( ! [X26] : (s('type.clos_known.val_approx',sK7) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.clos_known.Int_1'(s('type.integer.int',sK11(sK7))))))) | s('type.clos_known.val_approx',sK7) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.clos_known.Int_1'(s('type.integer.int',sK11(sK7))))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK7) | ~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',sK7),s('type.clos_known.val_approx',X26)))) | s('type.clos_known.val_approx',X26) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8('const.clos_known.Int_1'(s('type.integer.int',sK11(sK7))))),s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK11(sK7))))))),s('type.clos_known.val_approx',X26))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(sK7))))) ) | $spl46),
  inference(forward_demodulation,[],[f6557,f4999])).
fof(f6557,plain,(
  ( ! [X26] : (s('type.clos_known.val_approx',sK7) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.clos_known.Int_1'(s('type.integer.int',sK11(sK7))))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK7) | ~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',sK7),s('type.clos_known.val_approx',X26)))) | s('type.clos_known.val_approx',X26) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8('const.clos_known.Int_1'(s('type.integer.int',sK11(sK7))))),s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK11(sK7))))))),s('type.clos_known.val_approx',X26))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(sK7)))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.clos_known.Int_1'(s('type.integer.int',sK11(sK7))))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(sK7))))) ) | $spl46),
  inference(forward_demodulation,[],[f6556,f4999])).
fof(f6556,plain,(
  ( ! [X26] : (s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK7) | ~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',sK7),s('type.clos_known.val_approx',X26)))) | s('type.clos_known.val_approx',X26) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8('const.clos_known.Int_1'(s('type.integer.int',sK11(sK7))))),s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK11(sK7))))))),s('type.clos_known.val_approx',X26))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(sK7)))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.clos_known.Int_1'(s('type.integer.int',sK11(sK7))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(sK7)))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.clos_known.Int_1'(s('type.integer.int',sK11(sK7))))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(sK7))))) ) | $spl46),
  inference(forward_demodulation,[],[f6513,f4999])).
fof(f6513,plain,(
  ( ! [X26] : (~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',sK7),s('type.clos_known.val_approx',X26)))) | s('type.clos_known.val_approx',X26) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8('const.clos_known.Int_1'(s('type.integer.int',sK11(sK7))))),s('type.num.num',sK9('const.clos_known.Int_1'(s('type.integer.int',sK11(sK7))))))),s('type.clos_known.val_approx',X26))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(sK7)))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(sK7)))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.clos_known.Int_1'(s('type.integer.int',sK11(sK7))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(sK7)))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.clos_known.Int_1'(s('type.integer.int',sK11(sK7))))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(sK7))))) ) | $spl46),
  inference(superposition,[],[f1756,f4999])).
fof(f6552,plain,(
  ( ! [X24,X23] : (s('type.clos_known.val_approx',sK7) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.clos_known.Int_1'(s('type.integer.int',sK11(sK7))))))) | s('type.clos_known.val_approx',sK7) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.clos_known.Int_1'(s('type.integer.int',sK11(sK7))))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK7) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK15(X23,sK8('const.clos_known.Int_1'(s('type.integer.int',sK11(sK7)))),X24,sK9('const.clos_known.Int_1'(s('type.integer.int',sK11(sK7)))))),s('type.clos_known.val_approx',sK7),s('type.clos_known.val_approx','const.clos_known.Other_0')))) ) | ($spl43 | $spl46)),
  inference(subsumption_resolution,[],[f6551,f4994])).
fof(f6551,plain,(
  ( ! [X24,X23] : (s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK7) | s('type.clos_known.val_approx',sK7) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.clos_known.Int_1'(s('type.integer.int',sK11(sK7))))))) | s('type.clos_known.val_approx',sK7) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.clos_known.Int_1'(s('type.integer.int',sK11(sK7))))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK7) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK15(X23,sK8('const.clos_known.Int_1'(s('type.integer.int',sK11(sK7)))),X24,sK9('const.clos_known.Int_1'(s('type.integer.int',sK11(sK7)))))),s('type.clos_known.val_approx',sK7),s('type.clos_known.val_approx','const.clos_known.Other_0')))) ) | $spl46),
  inference(forward_demodulation,[],[f6550,f4999])).
fof(f6550,plain,(
  ( ! [X24,X23] : (s('type.clos_known.val_approx',sK7) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.clos_known.Int_1'(s('type.integer.int',sK11(sK7))))))) | s('type.clos_known.val_approx',sK7) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.clos_known.Int_1'(s('type.integer.int',sK11(sK7))))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK7) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK15(X23,sK8('const.clos_known.Int_1'(s('type.integer.int',sK11(sK7)))),X24,sK9('const.clos_known.Int_1'(s('type.integer.int',sK11(sK7)))))),s('type.clos_known.val_approx',sK7),s('type.clos_known.val_approx','const.clos_known.Other_0'))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(sK7))))) ) | $spl46),
  inference(forward_demodulation,[],[f6549,f4999])).
fof(f6549,plain,(
  ( ! [X24,X23] : (s('type.clos_known.val_approx',sK7) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.clos_known.Int_1'(s('type.integer.int',sK11(sK7))))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK7) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK15(X23,sK8('const.clos_known.Int_1'(s('type.integer.int',sK11(sK7)))),X24,sK9('const.clos_known.Int_1'(s('type.integer.int',sK11(sK7)))))),s('type.clos_known.val_approx',sK7),s('type.clos_known.val_approx','const.clos_known.Other_0'))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(sK7)))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.clos_known.Int_1'(s('type.integer.int',sK11(sK7))))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(sK7))))) ) | $spl46),
  inference(forward_demodulation,[],[f6548,f4999])).
fof(f6548,plain,(
  ( ! [X24,X23] : (s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK7) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK15(X23,sK8('const.clos_known.Int_1'(s('type.integer.int',sK11(sK7)))),X24,sK9('const.clos_known.Int_1'(s('type.integer.int',sK11(sK7)))))),s('type.clos_known.val_approx',sK7),s('type.clos_known.val_approx','const.clos_known.Other_0'))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(sK7)))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.clos_known.Int_1'(s('type.integer.int',sK11(sK7))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(sK7)))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.clos_known.Int_1'(s('type.integer.int',sK11(sK7))))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(sK7))))) ) | $spl46),
  inference(forward_demodulation,[],[f6547,f4999])).
fof(f6547,plain,(
  ( ! [X24,X23] : (s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK15(X23,sK8('const.clos_known.Int_1'(s('type.integer.int',sK11(sK7)))),X24,sK9('const.clos_known.Int_1'(s('type.integer.int',sK11(sK7)))))),s('type.clos_known.val_approx',sK7),s('type.clos_known.val_approx','const.clos_known.Other_0'))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(sK7)))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(sK7)))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.clos_known.Int_1'(s('type.integer.int',sK11(sK7))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(sK7)))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.clos_known.Int_1'(s('type.integer.int',sK11(sK7))))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(sK7))))) ) | $spl46),
  inference(forward_demodulation,[],[f6511,f6489])).
fof(f6511,plain,(
  ( ! [X24,X23] : (s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X23),s('type.num.num',X24))),s('type.clos_known.val_approx',sK7))) = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK15(X23,sK8('const.clos_known.Int_1'(s('type.integer.int',sK11(sK7)))),X24,sK9('const.clos_known.Int_1'(s('type.integer.int',sK11(sK7)))))),s('type.clos_known.val_approx',sK7),s('type.clos_known.val_approx','const.clos_known.Other_0'))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(sK7)))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(sK7)))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.clos_known.Int_1'(s('type.integer.int',sK11(sK7))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(sK7)))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.clos_known.Int_1'(s('type.integer.int',sK11(sK7))))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(sK7))))) ) | $spl46),
  inference(superposition,[],[f1752,f4999])).
fof(f6545,plain,(
  ( ! [X20] : (s('type.clos_known.val_approx',sK7) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.clos_known.Int_1'(s('type.integer.int',sK11(sK7))))))) | s('type.clos_known.val_approx',sK7) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.clos_known.Int_1'(s('type.integer.int',sK11(sK7))))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK7) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X20))),s('type.clos_known.val_approx',sK7)))) ) | ($spl43 | $spl46)),
  inference(subsumption_resolution,[],[f6544,f4994])).
fof(f6544,plain,(
  ( ! [X20] : (s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK7) | s('type.clos_known.val_approx',sK7) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.clos_known.Int_1'(s('type.integer.int',sK11(sK7))))))) | s('type.clos_known.val_approx',sK7) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.clos_known.Int_1'(s('type.integer.int',sK11(sK7))))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK7) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X20))),s('type.clos_known.val_approx',sK7)))) ) | $spl46),
  inference(forward_demodulation,[],[f6543,f4999])).
fof(f6543,plain,(
  ( ! [X20] : (s('type.clos_known.val_approx',sK7) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.clos_known.Int_1'(s('type.integer.int',sK11(sK7))))))) | s('type.clos_known.val_approx',sK7) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.clos_known.Int_1'(s('type.integer.int',sK11(sK7))))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK7) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X20))),s('type.clos_known.val_approx',sK7))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(sK7))))) ) | $spl46),
  inference(forward_demodulation,[],[f6542,f4999])).
fof(f6542,plain,(
  ( ! [X20] : (s('type.clos_known.val_approx',sK7) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.clos_known.Int_1'(s('type.integer.int',sK11(sK7))))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK7) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X20))),s('type.clos_known.val_approx',sK7))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(sK7)))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.clos_known.Int_1'(s('type.integer.int',sK11(sK7))))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(sK7))))) ) | $spl46),
  inference(forward_demodulation,[],[f6541,f4999])).
fof(f6541,plain,(
  ( ! [X20] : (s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK7) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X20))),s('type.clos_known.val_approx',sK7))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(sK7)))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.clos_known.Int_1'(s('type.integer.int',sK11(sK7))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(sK7)))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.clos_known.Int_1'(s('type.integer.int',sK11(sK7))))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(sK7))))) ) | $spl46),
  inference(forward_demodulation,[],[f6508,f4999])).
fof(f6508,plain,(
  ( ! [X20] : (s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X20))),s('type.clos_known.val_approx',sK7))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(sK7)))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(sK7)))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.clos_known.Int_1'(s('type.integer.int',sK11(sK7))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(sK7)))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.clos_known.Int_1'(s('type.integer.int',sK11(sK7))))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(sK7))))) ) | $spl46),
  inference(superposition,[],[f1749,f4999])).
fof(f6539,plain,(
  ( ! [X19] : (s('type.clos_known.val_approx',sK7) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.clos_known.Int_1'(s('type.integer.int',sK11(sK7))))))) | s('type.clos_known.val_approx',sK7) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.clos_known.Int_1'(s('type.integer.int',sK11(sK7))))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK7) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK7),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X19)))))) ) | ($spl43 | $spl46)),
  inference(subsumption_resolution,[],[f6538,f4994])).
fof(f6538,plain,(
  ( ! [X19] : (s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK7) | s('type.clos_known.val_approx',sK7) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.clos_known.Int_1'(s('type.integer.int',sK11(sK7))))))) | s('type.clos_known.val_approx',sK7) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.clos_known.Int_1'(s('type.integer.int',sK11(sK7))))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK7) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK7),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X19)))))) ) | $spl46),
  inference(forward_demodulation,[],[f6537,f4999])).
fof(f6537,plain,(
  ( ! [X19] : (s('type.clos_known.val_approx',sK7) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.clos_known.Int_1'(s('type.integer.int',sK11(sK7))))))) | s('type.clos_known.val_approx',sK7) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.clos_known.Int_1'(s('type.integer.int',sK11(sK7))))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK7) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK7),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X19))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(sK7))))) ) | $spl46),
  inference(forward_demodulation,[],[f6536,f4999])).
fof(f6536,plain,(
  ( ! [X19] : (s('type.clos_known.val_approx',sK7) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.clos_known.Int_1'(s('type.integer.int',sK11(sK7))))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK7) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK7),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X19))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(sK7)))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.clos_known.Int_1'(s('type.integer.int',sK11(sK7))))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(sK7))))) ) | $spl46),
  inference(forward_demodulation,[],[f6535,f4999])).
fof(f6535,plain,(
  ( ! [X19] : (s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK7) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK7),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X19))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(sK7)))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.clos_known.Int_1'(s('type.integer.int',sK11(sK7))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(sK7)))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.clos_known.Int_1'(s('type.integer.int',sK11(sK7))))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(sK7))))) ) | $spl46),
  inference(forward_demodulation,[],[f6507,f4999])).
fof(f6507,plain,(
  ( ! [X19] : (s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK7),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X19))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(sK7)))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(sK7)))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.clos_known.Int_1'(s('type.integer.int',sK11(sK7))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(sK7)))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.clos_known.Int_1'(s('type.integer.int',sK11(sK7))))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(sK7))))) ) | $spl46),
  inference(superposition,[],[f1748,f4999])).
fof(f6494,plain,(
  ( ! [X10] : (s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK7),s('type.clos_known.val_approx',X10))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X10) | s('type.clos_known.val_approx',X10) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(X10)))) | s('type.clos_known.val_approx',X10) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(X10)))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X10)) ) | $spl46),
  inference(superposition,[],[f1749,f4999])).
fof(f6493,plain,(
  ( ! [X9] : (s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X9),s('type.clos_known.val_approx',sK7))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X9) | s('type.clos_known.val_approx',X9) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(X9)))) | s('type.clos_known.val_approx',X9) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(X9)))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X9)) ) | $spl46),
  inference(superposition,[],[f1748,f4999])).
fof(f6492,plain,(
  ( ! [X8] : (s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,'F_0'),s('type.clos_known.val_approx',sK7),s('type.clos_known.val_approx','const.clos_known.Other_0'))) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X8))),s('type.clos_known.val_approx',sK7))) | s(bool,'T_0') = s(bool,sK13(X8,sK11(sK7)))) ) | $spl46),
  inference(superposition,[],[f1672,f4999])).
fof(f6491,plain,(
  ( ! [X7] : (s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK7),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X7))))) = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,'F_0'),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X7))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) | s(bool,'T_0') = s(bool,sK13(sK11(sK7),X7))) ) | $spl46),
  inference(superposition,[],[f1672,f4999])).
fof(f6490,plain,(
  ( ! [X6,X5] : (s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK7),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X5),s('type.num.num',X6)))))) ) | $spl46),
  inference(superposition,[],[f353,f4999])).
fof(f6488,plain,(
  ( ! [X2] : (s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X2))),s('type.clos_known.val_approx',sK7))) = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK13(X2,sK11(sK7))),s('type.clos_known.val_approx',sK7),s('type.clos_known.val_approx','const.clos_known.Other_0')))) ) | $spl46),
  inference(superposition,[],[f348,f4999])).
fof(f6487,plain,(
  ( ! [X1] : (s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK7),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X1)))))) ) | $spl46),
  inference(superposition,[],[f317,f4999])).
fof(f6486,plain,(
  ( ! [X0] : (s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X0))),s('type.clos_known.val_approx',sK7)))) ) | $spl46),
  inference(superposition,[],[f316,f4999])).
fof(f6485,plain,(
  s('type.clos_known.val_approx',sK7) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK7),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) | $spl46),
  inference(superposition,[],[f259,f4999])).
fof(f6483,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx',sK7))) | $spl46),
  inference(superposition,[],[f255,f4999])).
fof(f6342,plain,(
  ( ! [X4,X2,X3] : (s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8(X4)),s('type.num.num',sK9(X4)))) != s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,'F_0'),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8(X4)),s('type.num.num',sK9(X4)))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) | p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X2),s('type.num.num',X3))),s('type.clos_known.val_approx',X4)))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X4) | s('type.clos_known.val_approx',X4) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(X4)))) | s('type.clos_known.val_approx',X4) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(X4)))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X4) | s(bool,'T_0') = s(bool,sK15(X2,sK8(X4),X3,sK9(X4)))) )),
  inference(superposition,[],[f1759,f1696])).
fof(f6338,plain,(
  ( ! [X97,X95,X98,X96] : (s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8(X98)),s('type.num.num',sK9(X98)))) != s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X95),s('type.num.num',X97))),s('type.clos_known.val_approx',X96))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8(X98)),s('type.num.num',sK9(X98)))))) | p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK15(X95,sK8(X96),X97,sK9(X96))),s('type.clos_known.val_approx',X96),s('type.clos_known.val_approx','const.clos_known.Other_0'))),s('type.clos_known.val_approx',X98)))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X98) | s('type.clos_known.val_approx',X98) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(X98)))) | s('type.clos_known.val_approx',X98) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(X98)))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X98) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X96) | s('type.clos_known.val_approx',X96) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(X96)))) | s('type.clos_known.val_approx',X96) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(X96)))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X96)) )),
  inference(superposition,[],[f1759,f1752])).
fof(f6334,plain,(
  ( ! [X83,X81,X82] : (s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8(X83)),s('type.num.num',sK9(X83)))) != s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X81))),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X82))))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8(X83)),s('type.num.num',sK9(X83)))))) | p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,'F_0'),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X81),s('type.list.list'('type.clos_known.val_approx'),X82))))),s('type.clos_known.val_approx','const.clos_known.Other_0'))),s('type.clos_known.val_approx',X83)))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X83) | s('type.clos_known.val_approx',X83) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(X83)))) | s('type.clos_known.val_approx',X83) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(X83)))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X83) | s(bool,'T_0') = s(bool,sK14(X81,X82))) )),
  inference(superposition,[],[f1759,f1725])).
fof(f6333,plain,(
  ( ! [X80,X78,X79] : (s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8(X80)),s('type.num.num',sK9(X80)))) != s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X79))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X78))))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8(X80)),s('type.num.num',sK9(X80)))))) | p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,'F_0'),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X78))),s('type.clos_known.val_approx','const.clos_known.Other_0'))),s('type.clos_known.val_approx',X80)))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X80) | s('type.clos_known.val_approx',X80) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(X80)))) | s('type.clos_known.val_approx',X80) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(X80)))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X80) | s(bool,'T_0') = s(bool,sK13(X79,X78))) )),
  inference(superposition,[],[f1759,f1672])).
fof(f6388,plain,(
  ( ! [X72,X71] : (p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X71))),s('type.clos_known.val_approx',X72)))) | s('type.clos_known.val_approx','const.clos_known.Other_0') != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8(X72)),s('type.num.num',sK9(X72)))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X72) | s('type.clos_known.val_approx',X72) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(X72)))) | s('type.clos_known.val_approx',X72) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(X72)))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X72)) )),
  inference(forward_demodulation,[],[f6387,f259])).
fof(f6387,plain,(
  ( ! [X72,X71] : (s('type.clos_known.val_approx','const.clos_known.Other_0') != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8(X72)),s('type.num.num',sK9(X72)))) | p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X71))),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))),s('type.clos_known.val_approx',X72)))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X72) | s('type.clos_known.val_approx',X72) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(X72)))) | s('type.clos_known.val_approx',X72) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(X72)))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X72)) )),
  inference(forward_demodulation,[],[f6330,f353])).
fof(f6330,plain,(
  ( ! [X72,X71] : (s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8(X72)),s('type.num.num',sK9(X72)))) != s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X71))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8(X72)),s('type.num.num',sK9(X72)))))) | p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X71))),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))),s('type.clos_known.val_approx',X72)))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X72) | s('type.clos_known.val_approx',X72) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(X72)))) | s('type.clos_known.val_approx',X72) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(X72)))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X72)) )),
  inference(superposition,[],[f1759,f259])).
fof(f6329,plain,(
  ( ! [X70,X68,X69] : (s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8(X70)),s('type.num.num',sK9(X70)))) != s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,'F_0'),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X69))),s('type.clos_known.val_approx','const.clos_known.Other_0'))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8(X70)),s('type.num.num',sK9(X70)))))) | p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X68))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X69))))),s('type.clos_known.val_approx',X70)))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X70) | s('type.clos_known.val_approx',X70) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(X70)))) | s('type.clos_known.val_approx',X70) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(X70)))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X70) | s(bool,'T_0') = s(bool,sK13(X68,X69))) )),
  inference(superposition,[],[f1759,f1672])).
fof(f6380,plain,(
  ( ! [X57,X58,X56] : (s('type.clos_known.val_approx','const.clos_known.Other_0') != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8(X58)),s('type.num.num',sK9(X58)))) | p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X56))),s('type.clos_known.val_approx',X57))),s('type.clos_known.val_approx',X58)))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X58) | s('type.clos_known.val_approx',X58) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(X58)))) | s('type.clos_known.val_approx',X58) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(X58)))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X58) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X57) | s('type.clos_known.val_approx',X57) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(X57)))) | s('type.clos_known.val_approx',X57) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(X57)))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X57)) )),
  inference(forward_demodulation,[],[f6325,f315])).
fof(f6325,plain,(
  ( ! [X57,X58,X56] : (s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8(X58)),s('type.num.num',sK9(X58)))) != s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8(X58)),s('type.num.num',sK9(X58)))))) | p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X56))),s('type.clos_known.val_approx',X57))),s('type.clos_known.val_approx',X58)))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X58) | s('type.clos_known.val_approx',X58) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(X58)))) | s('type.clos_known.val_approx',X58) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(X58)))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X58) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X57) | s('type.clos_known.val_approx',X57) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(X57)))) | s('type.clos_known.val_approx',X57) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(X57)))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X57)) )),
  inference(superposition,[],[f1759,f1749])).
fof(f6379,plain,(
  ( ! [X54,X55] : (p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X54))),s('type.clos_known.val_approx',X55)))) | s('type.clos_known.val_approx','const.clos_known.Other_0') != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8(X55)),s('type.num.num',sK9(X55)))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X55) | s('type.clos_known.val_approx',X55) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(X55)))) | s('type.clos_known.val_approx',X55) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(X55)))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X55)) )),
  inference(forward_demodulation,[],[f6378,f260])).
fof(f6378,plain,(
  ( ! [X54,X55] : (s('type.clos_known.val_approx','const.clos_known.Other_0') != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8(X55)),s('type.num.num',sK9(X55)))) | p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X54))),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))),s('type.clos_known.val_approx',X55)))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X55) | s('type.clos_known.val_approx',X55) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(X55)))) | s('type.clos_known.val_approx',X55) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(X55)))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X55)) )),
  inference(forward_demodulation,[],[f6324,f355])).
fof(f6324,plain,(
  ( ! [X54,X55] : (s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8(X55)),s('type.num.num',sK9(X55)))) != s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X54))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8(X55)),s('type.num.num',sK9(X55)))))) | p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X54))),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))),s('type.clos_known.val_approx',X55)))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X55) | s('type.clos_known.val_approx',X55) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(X55)))) | s('type.clos_known.val_approx',X55) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(X55)))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X55)) )),
  inference(superposition,[],[f1759,f260])).
fof(f6371,plain,(
  ( ! [X43,X44,X42] : (s('type.clos_known.val_approx','const.clos_known.Other_0') != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8(X44)),s('type.num.num',sK9(X44)))) | p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X42))),s('type.clos_known.val_approx',X43))),s('type.clos_known.val_approx',X44)))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X44) | s('type.clos_known.val_approx',X44) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(X44)))) | s('type.clos_known.val_approx',X44) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(X44)))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X44) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X43) | s('type.clos_known.val_approx',X43) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(X43)))) | s('type.clos_known.val_approx',X43) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(X43)))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X43)) )),
  inference(forward_demodulation,[],[f6320,f315])).
fof(f6320,plain,(
  ( ! [X43,X44,X42] : (s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8(X44)),s('type.num.num',sK9(X44)))) != s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8(X44)),s('type.num.num',sK9(X44)))))) | p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X42))),s('type.clos_known.val_approx',X43))),s('type.clos_known.val_approx',X44)))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X44) | s('type.clos_known.val_approx',X44) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(X44)))) | s('type.clos_known.val_approx',X44) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(X44)))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X44) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X43) | s('type.clos_known.val_approx',X43) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(X43)))) | s('type.clos_known.val_approx',X43) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(X43)))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X43)) )),
  inference(superposition,[],[f1759,f1751])).
fof(f6316,plain,(
  ( ! [X30,X28,X26,X29,X27] : (s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8(X30)),s('type.num.num',sK9(X30)))) != s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,'F_0'),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X28),s('type.num.num',X29))),s('type.clos_known.val_approx','const.clos_known.Other_0'))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8(X30)),s('type.num.num',sK9(X30)))))) | p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X26),s('type.num.num',X27))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X28),s('type.num.num',X29))))),s('type.clos_known.val_approx',X30)))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X30) | s('type.clos_known.val_approx',X30) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(X30)))) | s('type.clos_known.val_approx',X30) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(X30)))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X30) | s(bool,'T_0') = s(bool,sK15(X26,X28,X27,X29))) )),
  inference(superposition,[],[f1759,f1696])).
fof(f6355,plain,(
  ( ! [X14] : (p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx',X14)))) | s('type.clos_known.val_approx','const.clos_known.Other_0') != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8(X14)),s('type.num.num',sK9(X14)))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X14) | s('type.clos_known.val_approx',X14) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(X14)))) | s('type.clos_known.val_approx',X14) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(X14)))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X14)) )),
  inference(forward_demodulation,[],[f6354,f248])).
fof(f6354,plain,(
  ( ! [X14] : (s('type.clos_known.val_approx','const.clos_known.Other_0') != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8(X14)),s('type.num.num',sK9(X14)))) | p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx','const.clos_known.Other_0'))),s('type.clos_known.val_approx',X14)))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X14) | s('type.clos_known.val_approx',X14) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(X14)))) | s('type.clos_known.val_approx',X14) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(X14)))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X14)) )),
  inference(forward_demodulation,[],[f6310,f315])).
fof(f6310,plain,(
  ( ! [X14] : (s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8(X14)),s('type.num.num',sK9(X14)))) != s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8(X14)),s('type.num.num',sK9(X14)))))) | p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx','const.clos_known.Other_0'))),s('type.clos_known.val_approx',X14)))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X14) | s('type.clos_known.val_approx',X14) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(X14)))) | s('type.clos_known.val_approx',X14) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(X14)))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X14)) )),
  inference(superposition,[],[f1759,f248])).
fof(f6353,plain,(
  ( ! [X12,X13] : (s('type.clos_known.val_approx','const.clos_known.Other_0') != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8(X13)),s('type.num.num',sK9(X13)))) | p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx',X12))),s('type.clos_known.val_approx',X13)))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X13) | s('type.clos_known.val_approx',X13) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(X13)))) | s('type.clos_known.val_approx',X13) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(X13)))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X13) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X12) | s('type.clos_known.val_approx',X12) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(X12)))) | s('type.clos_known.val_approx',X12) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(X12)))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X12)) )),
  inference(forward_demodulation,[],[f6309,f315])).
fof(f6309,plain,(
  ( ! [X12,X13] : (s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8(X13)),s('type.num.num',sK9(X13)))) != s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8(X13)),s('type.num.num',sK9(X13)))))) | p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx',X12))),s('type.clos_known.val_approx',X13)))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X13) | s('type.clos_known.val_approx',X13) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(X13)))) | s('type.clos_known.val_approx',X13) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(X13)))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X13) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X12) | s('type.clos_known.val_approx',X12) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(X12)))) | s('type.clos_known.val_approx',X12) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(X12)))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X12)) )),
  inference(superposition,[],[f1759,f1746])).
fof(f6308,plain,(
  ( ! [X10,X11] : (s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8(X11)),s('type.num.num',sK9(X11)))) != s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X10),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8(X11)),s('type.num.num',sK9(X11)))))) | p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X10),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))),s('type.clos_known.val_approx',X11)))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X11) | s('type.clos_known.val_approx',X11) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(X11)))) | s('type.clos_known.val_approx',X11) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(X11)))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X11) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X10) | s('type.clos_known.val_approx',X10) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(X10)))) | s('type.clos_known.val_approx',X10) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(X10)))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X10)) )),
  inference(superposition,[],[f1759,f1747])).
fof(f6352,plain,(
  ( ! [X8,X7,X9] : (s('type.clos_known.val_approx','const.clos_known.Other_0') != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8(X9)),s('type.num.num',sK9(X9)))) | p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X7),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X8))))),s('type.clos_known.val_approx',X9)))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X9) | s('type.clos_known.val_approx',X9) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(X9)))) | s('type.clos_known.val_approx',X9) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(X9)))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X9) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X7) | s('type.clos_known.val_approx',X7) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(X7)))) | s('type.clos_known.val_approx',X7) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(X7)))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X7)) )),
  inference(forward_demodulation,[],[f6307,f315])).
fof(f6307,plain,(
  ( ! [X8,X7,X9] : (s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8(X9)),s('type.num.num',sK9(X9)))) != s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8(X9)),s('type.num.num',sK9(X9)))))) | p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X7),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X8))))),s('type.clos_known.val_approx',X9)))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X9) | s('type.clos_known.val_approx',X9) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(X9)))) | s('type.clos_known.val_approx',X9) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(X9)))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X9) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X7) | s('type.clos_known.val_approx',X7) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(X7)))) | s('type.clos_known.val_approx',X7) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(X7)))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X7)) )),
  inference(superposition,[],[f1759,f1748])).
fof(f6351,plain,(
  ( ! [X6,X4,X5] : (s('type.clos_known.val_approx','const.clos_known.Other_0') != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8(X6)),s('type.num.num',sK9(X6)))) | p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X4),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X5))))),s('type.clos_known.val_approx',X6)))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X6) | s('type.clos_known.val_approx',X6) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(X6)))) | s('type.clos_known.val_approx',X6) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(X6)))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X6) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X4) | s('type.clos_known.val_approx',X4) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(X4)))) | s('type.clos_known.val_approx',X4) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(X4)))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X4)) )),
  inference(forward_demodulation,[],[f6306,f315])).
fof(f6306,plain,(
  ( ! [X6,X4,X5] : (s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8(X6)),s('type.num.num',sK9(X6)))) != s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8(X6)),s('type.num.num',sK9(X6)))))) | p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X4),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X5))))),s('type.clos_known.val_approx',X6)))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X6) | s('type.clos_known.val_approx',X6) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(X6)))) | s('type.clos_known.val_approx',X6) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(X6)))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X6) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X4) | s('type.clos_known.val_approx',X4) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(X4)))) | s('type.clos_known.val_approx',X4) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(X4)))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X4)) )),
  inference(superposition,[],[f1759,f1750])).
fof(f6350,plain,(
  ( ! [X2,X3] : (s('type.clos_known.val_approx','const.clos_known.Other_0') != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8(X3)),s('type.num.num',sK9(X3)))) | p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X2),s('type.clos_known.val_approx','const.clos_known.Other_0'))),s('type.clos_known.val_approx',X3)))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X3) | s('type.clos_known.val_approx',X3) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(X3)))) | s('type.clos_known.val_approx',X3) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(X3)))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X3) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X2) | s('type.clos_known.val_approx',X2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(X2)))) | s('type.clos_known.val_approx',X2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(X2)))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X2)) )),
  inference(forward_demodulation,[],[f6305,f315])).
fof(f6305,plain,(
  ( ! [X2,X3] : (s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8(X3)),s('type.num.num',sK9(X3)))) != s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8(X3)),s('type.num.num',sK9(X3)))))) | p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X2),s('type.clos_known.val_approx','const.clos_known.Other_0'))),s('type.clos_known.val_approx',X3)))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X3) | s('type.clos_known.val_approx',X3) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(X3)))) | s('type.clos_known.val_approx',X3) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(X3)))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X3) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X2) | s('type.clos_known.val_approx',X2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(X2)))) | s('type.clos_known.val_approx',X2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(X2)))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X2)) )),
  inference(superposition,[],[f1759,f1745])).
fof(f6304,plain,(
  ( ! [X0,X1] : (s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8(X1)),s('type.num.num',sK9(X1)))) != s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X0),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8(X1)),s('type.num.num',sK9(X1)))))) | p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8(X0)),s('type.num.num',sK9(X0)))),s('type.clos_known.val_approx',X1)))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X1) | s('type.clos_known.val_approx',X1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(X1)))) | s('type.clos_known.val_approx',X1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(X1)))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X1) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X0) | s('type.clos_known.val_approx',X0) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(X0)))) | s('type.clos_known.val_approx',X0) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(X0)))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X0)) )),
  inference(superposition,[],[f1759,f262])).
fof(f6294,plain,(
  ( ! [X2,X0,X1] : (s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8(X1)),s('type.num.num',sK9(X1)))) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X0),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8(X1)),s('type.num.num',sK9(X1)))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X1) | s('type.clos_known.val_approx',X1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(X1)))) | s('type.clos_known.val_approx',X1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(X1)))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X1) | s(bool,X2) = s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',X0),s('type.clos_known.val_approx',X1))) | s(bool,'T_0') = s(bool,X2)) )),
  inference(subsumption_resolution,[],[f6235,f245])).
fof(f6235,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'T_0')) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8(X1)),s('type.num.num',sK9(X1)))) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X0),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8(X1)),s('type.num.num',sK9(X1)))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X1) | s('type.clos_known.val_approx',X1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(X1)))) | s('type.clos_known.val_approx',X1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(X1)))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X1) | s(bool,X2) = s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',X0),s('type.clos_known.val_approx',X1))) | s(bool,'T_0') = s(bool,X2)) )),
  inference(superposition,[],[f1757,f518])).
fof(f6233,plain,(
  ( ! [X97,X95,X98,X96] : (~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',X98),s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X95),s('type.num.num',X97))),s('type.clos_known.val_approx',X96)))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8('const.bool.COND_3'(s(bool,sK15(X95,sK8(X96),X97,sK9(X96))),s('type.clos_known.val_approx',X96),s('type.clos_known.val_approx','const.clos_known.Other_0')))),s('type.num.num',sK9('const.bool.COND_3'(s(bool,sK15(X95,sK8(X96),X97,sK9(X96))),s('type.clos_known.val_approx',X96),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X98),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8('const.bool.COND_3'(s(bool,sK15(X95,sK8(X96),X97,sK9(X96))),s('type.clos_known.val_approx',X96),s('type.clos_known.val_approx','const.clos_known.Other_0')))),s('type.num.num',sK9('const.bool.COND_3'(s(bool,sK15(X95,sK8(X96),X97,sK9(X96))),s('type.clos_known.val_approx',X96),s('type.clos_known.val_approx','const.clos_known.Other_0')))))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK15(X95,sK8(X96),X97,sK9(X96))),s('type.clos_known.val_approx',X96),s('type.clos_known.val_approx','const.clos_known.Other_0'))) | s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK15(X95,sK8(X96),X97,sK9(X96))),s('type.clos_known.val_approx',X96),s('type.clos_known.val_approx','const.clos_known.Other_0'))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.bool.COND_3'(s(bool,sK15(X95,sK8(X96),X97,sK9(X96))),s('type.clos_known.val_approx',X96),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK15(X95,sK8(X96),X97,sK9(X96))),s('type.clos_known.val_approx',X96),s('type.clos_known.val_approx','const.clos_known.Other_0'))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.bool.COND_3'(s(bool,sK15(X95,sK8(X96),X97,sK9(X96))),s('type.clos_known.val_approx',X96),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK15(X95,sK8(X96),X97,sK9(X96))),s('type.clos_known.val_approx',X96),s('type.clos_known.val_approx','const.clos_known.Other_0'))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X96) | s('type.clos_known.val_approx',X96) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(X96)))) | s('type.clos_known.val_approx',X96) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(X96)))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X96)) )),
  inference(superposition,[],[f1757,f1752])).
fof(f6293,plain,(
  ( ! [X94,X92,X90,X93,X91] : (s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X90),s('type.num.num',X92))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X91),s('type.num.num',X93))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X90),s('type.num.num',X92))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X91),s('type.num.num',X93))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.bool.COND_3'(s(bool,sK15(X90,X91,X92,X93)),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X91),s('type.num.num',X93))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X90),s('type.num.num',X92))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X91),s('type.num.num',X93))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.bool.COND_3'(s(bool,sK15(X90,X91,X92,X93)),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X91),s('type.num.num',X93))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X90),s('type.num.num',X92))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X91),s('type.num.num',X93))))) | ~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',X94),s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X90),s('type.num.num',X92))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X91),s('type.num.num',X93)))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8('const.bool.COND_3'(s(bool,sK15(X90,X91,X92,X93)),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X91),s('type.num.num',X93))),s('type.clos_known.val_approx','const.clos_known.Other_0')))),s('type.num.num',sK9('const.bool.COND_3'(s(bool,sK15(X90,X91,X92,X93)),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X91),s('type.num.num',X93))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X94),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8('const.bool.COND_3'(s(bool,sK15(X90,X91,X92,X93)),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X91),s('type.num.num',X93))),s('type.clos_known.val_approx','const.clos_known.Other_0')))),s('type.num.num',sK9('const.bool.COND_3'(s(bool,sK15(X90,X91,X92,X93)),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X91),s('type.num.num',X93))),s('type.clos_known.val_approx','const.clos_known.Other_0'))))))))) )),
  inference(forward_demodulation,[],[f6292,f399])).
fof(f6292,plain,(
  ( ! [X94,X92,X90,X93,X91] : (s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X90),s('type.num.num',X92))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X91),s('type.num.num',X93))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.bool.COND_3'(s(bool,sK15(X90,X91,X92,X93)),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X91),s('type.num.num',X93))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X90),s('type.num.num',X92))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X91),s('type.num.num',X93))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.bool.COND_3'(s(bool,sK15(X90,X91,X92,X93)),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X91),s('type.num.num',X93))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X90),s('type.num.num',X92))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X91),s('type.num.num',X93))))) | ~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',X94),s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X90),s('type.num.num',X92))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X91),s('type.num.num',X93)))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8('const.bool.COND_3'(s(bool,sK15(X90,X91,X92,X93)),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X91),s('type.num.num',X93))),s('type.clos_known.val_approx','const.clos_known.Other_0')))),s('type.num.num',sK9('const.bool.COND_3'(s(bool,sK15(X90,X91,X92,X93)),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X91),s('type.num.num',X93))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X94),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8('const.bool.COND_3'(s(bool,sK15(X90,X91,X92,X93)),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X91),s('type.num.num',X93))),s('type.clos_known.val_approx','const.clos_known.Other_0')))),s('type.num.num',sK9('const.bool.COND_3'(s(bool,sK15(X90,X91,X92,X93)),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X91),s('type.num.num',X93))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK15(X90,X91,X92,X93)),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X91),s('type.num.num',X93))),s('type.clos_known.val_approx','const.clos_known.Other_0')))) )),
  inference(forward_demodulation,[],[f6291,f399])).
fof(f6291,plain,(
  ( ! [X94,X92,X90,X93,X91] : (s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X90),s('type.num.num',X92))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X91),s('type.num.num',X93))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.bool.COND_3'(s(bool,sK15(X90,X91,X92,X93)),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X91),s('type.num.num',X93))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X90),s('type.num.num',X92))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X91),s('type.num.num',X93))))) | ~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',X94),s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X90),s('type.num.num',X92))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X91),s('type.num.num',X93)))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8('const.bool.COND_3'(s(bool,sK15(X90,X91,X92,X93)),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X91),s('type.num.num',X93))),s('type.clos_known.val_approx','const.clos_known.Other_0')))),s('type.num.num',sK9('const.bool.COND_3'(s(bool,sK15(X90,X91,X92,X93)),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X91),s('type.num.num',X93))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X94),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8('const.bool.COND_3'(s(bool,sK15(X90,X91,X92,X93)),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X91),s('type.num.num',X93))),s('type.clos_known.val_approx','const.clos_known.Other_0')))),s('type.num.num',sK9('const.bool.COND_3'(s(bool,sK15(X90,X91,X92,X93)),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X91),s('type.num.num',X93))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))))) | s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK15(X90,X91,X92,X93)),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X91),s('type.num.num',X93))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.bool.COND_3'(s(bool,sK15(X90,X91,X92,X93)),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X91),s('type.num.num',X93))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK15(X90,X91,X92,X93)),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X91),s('type.num.num',X93))),s('type.clos_known.val_approx','const.clos_known.Other_0')))) )),
  inference(forward_demodulation,[],[f6290,f399])).
fof(f6290,plain,(
  ( ! [X94,X92,X90,X93,X91] : (s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X90),s('type.num.num',X92))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X91),s('type.num.num',X93))))) | ~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',X94),s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X90),s('type.num.num',X92))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X91),s('type.num.num',X93)))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8('const.bool.COND_3'(s(bool,sK15(X90,X91,X92,X93)),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X91),s('type.num.num',X93))),s('type.clos_known.val_approx','const.clos_known.Other_0')))),s('type.num.num',sK9('const.bool.COND_3'(s(bool,sK15(X90,X91,X92,X93)),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X91),s('type.num.num',X93))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X94),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8('const.bool.COND_3'(s(bool,sK15(X90,X91,X92,X93)),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X91),s('type.num.num',X93))),s('type.clos_known.val_approx','const.clos_known.Other_0')))),s('type.num.num',sK9('const.bool.COND_3'(s(bool,sK15(X90,X91,X92,X93)),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X91),s('type.num.num',X93))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))))) | s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK15(X90,X91,X92,X93)),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X91),s('type.num.num',X93))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.bool.COND_3'(s(bool,sK15(X90,X91,X92,X93)),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X91),s('type.num.num',X93))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK15(X90,X91,X92,X93)),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X91),s('type.num.num',X93))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.bool.COND_3'(s(bool,sK15(X90,X91,X92,X93)),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X91),s('type.num.num',X93))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK15(X90,X91,X92,X93)),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X91),s('type.num.num',X93))),s('type.clos_known.val_approx','const.clos_known.Other_0')))) )),
  inference(forward_demodulation,[],[f6232,f399])).
fof(f6232,plain,(
  ( ! [X94,X92,X90,X93,X91] : (~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',X94),s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X90),s('type.num.num',X92))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X91),s('type.num.num',X93)))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8('const.bool.COND_3'(s(bool,sK15(X90,X91,X92,X93)),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X91),s('type.num.num',X93))),s('type.clos_known.val_approx','const.clos_known.Other_0')))),s('type.num.num',sK9('const.bool.COND_3'(s(bool,sK15(X90,X91,X92,X93)),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X91),s('type.num.num',X93))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X94),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8('const.bool.COND_3'(s(bool,sK15(X90,X91,X92,X93)),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X91),s('type.num.num',X93))),s('type.clos_known.val_approx','const.clos_known.Other_0')))),s('type.num.num',sK9('const.bool.COND_3'(s(bool,sK15(X90,X91,X92,X93)),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X91),s('type.num.num',X93))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK15(X90,X91,X92,X93)),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X91),s('type.num.num',X93))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) | s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK15(X90,X91,X92,X93)),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X91),s('type.num.num',X93))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.bool.COND_3'(s(bool,sK15(X90,X91,X92,X93)),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X91),s('type.num.num',X93))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK15(X90,X91,X92,X93)),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X91),s('type.num.num',X93))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.bool.COND_3'(s(bool,sK15(X90,X91,X92,X93)),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X91),s('type.num.num',X93))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK15(X90,X91,X92,X93)),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X91),s('type.num.num',X93))),s('type.clos_known.val_approx','const.clos_known.Other_0')))) )),
  inference(superposition,[],[f1757,f399])).
fof(f6289,plain,(
  ( ! [X88,X87,X89] : (s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X87))),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X88))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X87))),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X88))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.bool.COND_3'(s(bool,sK14(X87,X88)),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X87),s('type.list.list'('type.clos_known.val_approx'),X88))))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X87))),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X88))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.bool.COND_3'(s(bool,sK14(X87,X88)),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X87),s('type.list.list'('type.clos_known.val_approx'),X88))))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X87))),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X88))))) | ~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',X89),s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X87))),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X88)))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8('const.bool.COND_3'(s(bool,sK14(X87,X88)),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X87),s('type.list.list'('type.clos_known.val_approx'),X88))))),s('type.clos_known.val_approx','const.clos_known.Other_0')))),s('type.num.num',sK9('const.bool.COND_3'(s(bool,sK14(X87,X88)),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X87),s('type.list.list'('type.clos_known.val_approx'),X88))))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X89),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8('const.bool.COND_3'(s(bool,sK14(X87,X88)),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X87),s('type.list.list'('type.clos_known.val_approx'),X88))))),s('type.clos_known.val_approx','const.clos_known.Other_0')))),s('type.num.num',sK9('const.bool.COND_3'(s(bool,sK14(X87,X88)),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X87),s('type.list.list'('type.clos_known.val_approx'),X88))))),s('type.clos_known.val_approx','const.clos_known.Other_0'))))))))) )),
  inference(forward_demodulation,[],[f6288,f410])).
fof(f6288,plain,(
  ( ! [X88,X87,X89] : (s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X87))),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X88))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.bool.COND_3'(s(bool,sK14(X87,X88)),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X87),s('type.list.list'('type.clos_known.val_approx'),X88))))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X87))),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X88))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.bool.COND_3'(s(bool,sK14(X87,X88)),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X87),s('type.list.list'('type.clos_known.val_approx'),X88))))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X87))),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X88))))) | ~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',X89),s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X87))),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X88)))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8('const.bool.COND_3'(s(bool,sK14(X87,X88)),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X87),s('type.list.list'('type.clos_known.val_approx'),X88))))),s('type.clos_known.val_approx','const.clos_known.Other_0')))),s('type.num.num',sK9('const.bool.COND_3'(s(bool,sK14(X87,X88)),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X87),s('type.list.list'('type.clos_known.val_approx'),X88))))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X89),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8('const.bool.COND_3'(s(bool,sK14(X87,X88)),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X87),s('type.list.list'('type.clos_known.val_approx'),X88))))),s('type.clos_known.val_approx','const.clos_known.Other_0')))),s('type.num.num',sK9('const.bool.COND_3'(s(bool,sK14(X87,X88)),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X87),s('type.list.list'('type.clos_known.val_approx'),X88))))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK14(X87,X88)),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X87),s('type.list.list'('type.clos_known.val_approx'),X88))))),s('type.clos_known.val_approx','const.clos_known.Other_0')))) )),
  inference(forward_demodulation,[],[f6287,f410])).
fof(f6287,plain,(
  ( ! [X88,X87,X89] : (s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X87))),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X88))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.bool.COND_3'(s(bool,sK14(X87,X88)),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X87),s('type.list.list'('type.clos_known.val_approx'),X88))))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X87))),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X88))))) | ~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',X89),s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X87))),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X88)))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8('const.bool.COND_3'(s(bool,sK14(X87,X88)),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X87),s('type.list.list'('type.clos_known.val_approx'),X88))))),s('type.clos_known.val_approx','const.clos_known.Other_0')))),s('type.num.num',sK9('const.bool.COND_3'(s(bool,sK14(X87,X88)),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X87),s('type.list.list'('type.clos_known.val_approx'),X88))))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X89),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8('const.bool.COND_3'(s(bool,sK14(X87,X88)),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X87),s('type.list.list'('type.clos_known.val_approx'),X88))))),s('type.clos_known.val_approx','const.clos_known.Other_0')))),s('type.num.num',sK9('const.bool.COND_3'(s(bool,sK14(X87,X88)),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X87),s('type.list.list'('type.clos_known.val_approx'),X88))))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))))) | s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK14(X87,X88)),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X87),s('type.list.list'('type.clos_known.val_approx'),X88))))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.bool.COND_3'(s(bool,sK14(X87,X88)),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X87),s('type.list.list'('type.clos_known.val_approx'),X88))))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK14(X87,X88)),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X87),s('type.list.list'('type.clos_known.val_approx'),X88))))),s('type.clos_known.val_approx','const.clos_known.Other_0')))) )),
  inference(forward_demodulation,[],[f6286,f410])).
fof(f6286,plain,(
  ( ! [X88,X87,X89] : (s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X87))),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X88))))) | ~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',X89),s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X87))),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X88)))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8('const.bool.COND_3'(s(bool,sK14(X87,X88)),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X87),s('type.list.list'('type.clos_known.val_approx'),X88))))),s('type.clos_known.val_approx','const.clos_known.Other_0')))),s('type.num.num',sK9('const.bool.COND_3'(s(bool,sK14(X87,X88)),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X87),s('type.list.list'('type.clos_known.val_approx'),X88))))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X89),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8('const.bool.COND_3'(s(bool,sK14(X87,X88)),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X87),s('type.list.list'('type.clos_known.val_approx'),X88))))),s('type.clos_known.val_approx','const.clos_known.Other_0')))),s('type.num.num',sK9('const.bool.COND_3'(s(bool,sK14(X87,X88)),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X87),s('type.list.list'('type.clos_known.val_approx'),X88))))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))))) | s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK14(X87,X88)),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X87),s('type.list.list'('type.clos_known.val_approx'),X88))))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.bool.COND_3'(s(bool,sK14(X87,X88)),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X87),s('type.list.list'('type.clos_known.val_approx'),X88))))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK14(X87,X88)),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X87),s('type.list.list'('type.clos_known.val_approx'),X88))))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.bool.COND_3'(s(bool,sK14(X87,X88)),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X87),s('type.list.list'('type.clos_known.val_approx'),X88))))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK14(X87,X88)),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X87),s('type.list.list'('type.clos_known.val_approx'),X88))))),s('type.clos_known.val_approx','const.clos_known.Other_0')))) )),
  inference(forward_demodulation,[],[f6231,f410])).
fof(f6231,plain,(
  ( ! [X88,X87,X89] : (~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',X89),s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X87))),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X88)))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8('const.bool.COND_3'(s(bool,sK14(X87,X88)),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X87),s('type.list.list'('type.clos_known.val_approx'),X88))))),s('type.clos_known.val_approx','const.clos_known.Other_0')))),s('type.num.num',sK9('const.bool.COND_3'(s(bool,sK14(X87,X88)),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X87),s('type.list.list'('type.clos_known.val_approx'),X88))))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X89),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8('const.bool.COND_3'(s(bool,sK14(X87,X88)),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X87),s('type.list.list'('type.clos_known.val_approx'),X88))))),s('type.clos_known.val_approx','const.clos_known.Other_0')))),s('type.num.num',sK9('const.bool.COND_3'(s(bool,sK14(X87,X88)),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X87),s('type.list.list'('type.clos_known.val_approx'),X88))))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK14(X87,X88)),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X87),s('type.list.list'('type.clos_known.val_approx'),X88))))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) | s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK14(X87,X88)),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X87),s('type.list.list'('type.clos_known.val_approx'),X88))))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.bool.COND_3'(s(bool,sK14(X87,X88)),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X87),s('type.list.list'('type.clos_known.val_approx'),X88))))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK14(X87,X88)),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X87),s('type.list.list'('type.clos_known.val_approx'),X88))))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.bool.COND_3'(s(bool,sK14(X87,X88)),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X87),s('type.list.list'('type.clos_known.val_approx'),X88))))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK14(X87,X88)),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X87),s('type.list.list'('type.clos_known.val_approx'),X88))))),s('type.clos_known.val_approx','const.clos_known.Other_0')))) )),
  inference(superposition,[],[f1757,f410])).
fof(f6285,plain,(
  ( ! [X85,X86,X84] : (s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X84))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X85))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X84))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X85))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.bool.COND_3'(s(bool,sK13(X84,X85)),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X85))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X84))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X85))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.bool.COND_3'(s(bool,sK13(X84,X85)),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X85))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X84))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X85))))) | ~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',X86),s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X84))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X85)))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8('const.bool.COND_3'(s(bool,sK13(X84,X85)),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X85))),s('type.clos_known.val_approx','const.clos_known.Other_0')))),s('type.num.num',sK9('const.bool.COND_3'(s(bool,sK13(X84,X85)),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X85))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X86),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8('const.bool.COND_3'(s(bool,sK13(X84,X85)),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X85))),s('type.clos_known.val_approx','const.clos_known.Other_0')))),s('type.num.num',sK9('const.bool.COND_3'(s(bool,sK13(X84,X85)),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X85))),s('type.clos_known.val_approx','const.clos_known.Other_0'))))))))) )),
  inference(forward_demodulation,[],[f6284,f348])).
fof(f6284,plain,(
  ( ! [X85,X86,X84] : (s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X84))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X85))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.bool.COND_3'(s(bool,sK13(X84,X85)),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X85))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X84))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X85))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.bool.COND_3'(s(bool,sK13(X84,X85)),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X85))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X84))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X85))))) | ~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',X86),s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X84))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X85)))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8('const.bool.COND_3'(s(bool,sK13(X84,X85)),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X85))),s('type.clos_known.val_approx','const.clos_known.Other_0')))),s('type.num.num',sK9('const.bool.COND_3'(s(bool,sK13(X84,X85)),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X85))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X86),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8('const.bool.COND_3'(s(bool,sK13(X84,X85)),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X85))),s('type.clos_known.val_approx','const.clos_known.Other_0')))),s('type.num.num',sK9('const.bool.COND_3'(s(bool,sK13(X84,X85)),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X85))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK13(X84,X85)),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X85))),s('type.clos_known.val_approx','const.clos_known.Other_0')))) )),
  inference(forward_demodulation,[],[f6283,f348])).
fof(f6283,plain,(
  ( ! [X85,X86,X84] : (s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X84))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X85))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.bool.COND_3'(s(bool,sK13(X84,X85)),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X85))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X84))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X85))))) | ~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',X86),s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X84))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X85)))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8('const.bool.COND_3'(s(bool,sK13(X84,X85)),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X85))),s('type.clos_known.val_approx','const.clos_known.Other_0')))),s('type.num.num',sK9('const.bool.COND_3'(s(bool,sK13(X84,X85)),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X85))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X86),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8('const.bool.COND_3'(s(bool,sK13(X84,X85)),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X85))),s('type.clos_known.val_approx','const.clos_known.Other_0')))),s('type.num.num',sK9('const.bool.COND_3'(s(bool,sK13(X84,X85)),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X85))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))))) | s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK13(X84,X85)),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X85))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.bool.COND_3'(s(bool,sK13(X84,X85)),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X85))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK13(X84,X85)),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X85))),s('type.clos_known.val_approx','const.clos_known.Other_0')))) )),
  inference(forward_demodulation,[],[f6282,f348])).
fof(f6282,plain,(
  ( ! [X85,X86,X84] : (s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X84))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X85))))) | ~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',X86),s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X84))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X85)))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8('const.bool.COND_3'(s(bool,sK13(X84,X85)),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X85))),s('type.clos_known.val_approx','const.clos_known.Other_0')))),s('type.num.num',sK9('const.bool.COND_3'(s(bool,sK13(X84,X85)),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X85))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X86),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8('const.bool.COND_3'(s(bool,sK13(X84,X85)),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X85))),s('type.clos_known.val_approx','const.clos_known.Other_0')))),s('type.num.num',sK9('const.bool.COND_3'(s(bool,sK13(X84,X85)),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X85))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))))) | s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK13(X84,X85)),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X85))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.bool.COND_3'(s(bool,sK13(X84,X85)),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X85))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK13(X84,X85)),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X85))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.bool.COND_3'(s(bool,sK13(X84,X85)),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X85))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK13(X84,X85)),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X85))),s('type.clos_known.val_approx','const.clos_known.Other_0')))) )),
  inference(forward_demodulation,[],[f6230,f348])).
fof(f6230,plain,(
  ( ! [X85,X86,X84] : (~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',X86),s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X84))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X85)))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8('const.bool.COND_3'(s(bool,sK13(X84,X85)),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X85))),s('type.clos_known.val_approx','const.clos_known.Other_0')))),s('type.num.num',sK9('const.bool.COND_3'(s(bool,sK13(X84,X85)),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X85))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X86),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8('const.bool.COND_3'(s(bool,sK13(X84,X85)),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X85))),s('type.clos_known.val_approx','const.clos_known.Other_0')))),s('type.num.num',sK9('const.bool.COND_3'(s(bool,sK13(X84,X85)),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X85))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK13(X84,X85)),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X85))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) | s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK13(X84,X85)),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X85))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.bool.COND_3'(s(bool,sK13(X84,X85)),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X85))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK13(X84,X85)),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X85))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.bool.COND_3'(s(bool,sK13(X84,X85)),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X85))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK13(X84,X85)),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X85))),s('type.clos_known.val_approx','const.clos_known.Other_0')))) )),
  inference(superposition,[],[f1757,f348])).
fof(f6229,plain,(
  ( ! [X83,X81,X82] : (~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',X83),s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X81))),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X82)))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8('const.bool.COND_3'(s(bool,'F_0'),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X81),s('type.list.list'('type.clos_known.val_approx'),X82))))),s('type.clos_known.val_approx','const.clos_known.Other_0')))),s('type.num.num',sK9('const.bool.COND_3'(s(bool,'F_0'),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X81),s('type.list.list'('type.clos_known.val_approx'),X82))))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X83),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8('const.bool.COND_3'(s(bool,'F_0'),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X81),s('type.list.list'('type.clos_known.val_approx'),X82))))),s('type.clos_known.val_approx','const.clos_known.Other_0')))),s('type.num.num',sK9('const.bool.COND_3'(s(bool,'F_0'),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X81),s('type.list.list'('type.clos_known.val_approx'),X82))))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,'F_0'),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X81),s('type.list.list'('type.clos_known.val_approx'),X82))))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) | s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,'F_0'),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X81),s('type.list.list'('type.clos_known.val_approx'),X82))))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.bool.COND_3'(s(bool,'F_0'),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X81),s('type.list.list'('type.clos_known.val_approx'),X82))))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,'F_0'),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X81),s('type.list.list'('type.clos_known.val_approx'),X82))))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.bool.COND_3'(s(bool,'F_0'),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X81),s('type.list.list'('type.clos_known.val_approx'),X82))))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,'F_0'),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X81),s('type.list.list'('type.clos_known.val_approx'),X82))))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) | s(bool,'T_0') = s(bool,sK14(X81,X82))) )),
  inference(superposition,[],[f1757,f1725])).
fof(f6228,plain,(
  ( ! [X80,X78,X79] : (~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',X80),s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X79))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X78)))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8('const.bool.COND_3'(s(bool,'F_0'),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X78))),s('type.clos_known.val_approx','const.clos_known.Other_0')))),s('type.num.num',sK9('const.bool.COND_3'(s(bool,'F_0'),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X78))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X80),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8('const.bool.COND_3'(s(bool,'F_0'),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X78))),s('type.clos_known.val_approx','const.clos_known.Other_0')))),s('type.num.num',sK9('const.bool.COND_3'(s(bool,'F_0'),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X78))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,'F_0'),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X78))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) | s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,'F_0'),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X78))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.bool.COND_3'(s(bool,'F_0'),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X78))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,'F_0'),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X78))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.bool.COND_3'(s(bool,'F_0'),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X78))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,'F_0'),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X78))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) | s(bool,'T_0') = s(bool,sK13(X79,X78))) )),
  inference(superposition,[],[f1757,f1672])).
fof(f6281,plain,(
  ( ! [X76,X77,X75] : (s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X75),s('type.clos_known.val_approx',X76))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X75),s('type.clos_known.val_approx',X76))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(happ(s(fun('type.clos_known.val_approx','type.clos_known.val_approx'),happ(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.clos_known.val_approx',X75))),s('type.clos_known.val_approx',X76)))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X75),s('type.clos_known.val_approx',X76))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(happ(s(fun('type.clos_known.val_approx','type.clos_known.val_approx'),happ(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.clos_known.val_approx',X75))),s('type.clos_known.val_approx',X76)))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X75),s('type.clos_known.val_approx',X76))) | ~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',X77),s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X75),s('type.clos_known.val_approx',X76)))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8(happ(s(fun('type.clos_known.val_approx','type.clos_known.val_approx'),happ(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.clos_known.val_approx',X75))),s('type.clos_known.val_approx',X76)))),s('type.num.num',sK9(happ(s(fun('type.clos_known.val_approx','type.clos_known.val_approx'),happ(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.clos_known.val_approx',X75))),s('type.clos_known.val_approx',X76)))))) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X77),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8(happ(s(fun('type.clos_known.val_approx','type.clos_known.val_approx'),happ(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.clos_known.val_approx',X75))),s('type.clos_known.val_approx',X76)))),s('type.num.num',sK9(happ(s(fun('type.clos_known.val_approx','type.clos_known.val_approx'),happ(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.clos_known.val_approx',X75))),s('type.clos_known.val_approx',X76))))))))) )),
  inference(forward_demodulation,[],[f6280,f319])).
fof(f6280,plain,(
  ( ! [X76,X77,X75] : (s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X75),s('type.clos_known.val_approx',X76))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(happ(s(fun('type.clos_known.val_approx','type.clos_known.val_approx'),happ(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.clos_known.val_approx',X75))),s('type.clos_known.val_approx',X76)))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X75),s('type.clos_known.val_approx',X76))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(happ(s(fun('type.clos_known.val_approx','type.clos_known.val_approx'),happ(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.clos_known.val_approx',X75))),s('type.clos_known.val_approx',X76)))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X75),s('type.clos_known.val_approx',X76))) | ~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',X77),s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X75),s('type.clos_known.val_approx',X76)))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8(happ(s(fun('type.clos_known.val_approx','type.clos_known.val_approx'),happ(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.clos_known.val_approx',X75))),s('type.clos_known.val_approx',X76)))),s('type.num.num',sK9(happ(s(fun('type.clos_known.val_approx','type.clos_known.val_approx'),happ(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.clos_known.val_approx',X75))),s('type.clos_known.val_approx',X76)))))) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X77),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8(happ(s(fun('type.clos_known.val_approx','type.clos_known.val_approx'),happ(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.clos_known.val_approx',X75))),s('type.clos_known.val_approx',X76)))),s('type.num.num',sK9(happ(s(fun('type.clos_known.val_approx','type.clos_known.val_approx'),happ(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.clos_known.val_approx',X75))),s('type.clos_known.val_approx',X76)))))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',happ(s(fun('type.clos_known.val_approx','type.clos_known.val_approx'),happ(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.clos_known.val_approx',X75))),s('type.clos_known.val_approx',X76)))) )),
  inference(forward_demodulation,[],[f6279,f319])).
fof(f6279,plain,(
  ( ! [X76,X77,X75] : (s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X75),s('type.clos_known.val_approx',X76))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(happ(s(fun('type.clos_known.val_approx','type.clos_known.val_approx'),happ(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.clos_known.val_approx',X75))),s('type.clos_known.val_approx',X76)))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X75),s('type.clos_known.val_approx',X76))) | ~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',X77),s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X75),s('type.clos_known.val_approx',X76)))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8(happ(s(fun('type.clos_known.val_approx','type.clos_known.val_approx'),happ(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.clos_known.val_approx',X75))),s('type.clos_known.val_approx',X76)))),s('type.num.num',sK9(happ(s(fun('type.clos_known.val_approx','type.clos_known.val_approx'),happ(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.clos_known.val_approx',X75))),s('type.clos_known.val_approx',X76)))))) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X77),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8(happ(s(fun('type.clos_known.val_approx','type.clos_known.val_approx'),happ(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.clos_known.val_approx',X75))),s('type.clos_known.val_approx',X76)))),s('type.num.num',sK9(happ(s(fun('type.clos_known.val_approx','type.clos_known.val_approx'),happ(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.clos_known.val_approx',X75))),s('type.clos_known.val_approx',X76)))))))) | s('type.clos_known.val_approx',happ(s(fun('type.clos_known.val_approx','type.clos_known.val_approx'),happ(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.clos_known.val_approx',X75))),s('type.clos_known.val_approx',X76))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(happ(s(fun('type.clos_known.val_approx','type.clos_known.val_approx'),happ(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.clos_known.val_approx',X75))),s('type.clos_known.val_approx',X76)))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',happ(s(fun('type.clos_known.val_approx','type.clos_known.val_approx'),happ(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.clos_known.val_approx',X75))),s('type.clos_known.val_approx',X76)))) )),
  inference(forward_demodulation,[],[f6278,f319])).
fof(f6278,plain,(
  ( ! [X76,X77,X75] : (s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X75),s('type.clos_known.val_approx',X76))) | ~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',X77),s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X75),s('type.clos_known.val_approx',X76)))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8(happ(s(fun('type.clos_known.val_approx','type.clos_known.val_approx'),happ(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.clos_known.val_approx',X75))),s('type.clos_known.val_approx',X76)))),s('type.num.num',sK9(happ(s(fun('type.clos_known.val_approx','type.clos_known.val_approx'),happ(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.clos_known.val_approx',X75))),s('type.clos_known.val_approx',X76)))))) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X77),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8(happ(s(fun('type.clos_known.val_approx','type.clos_known.val_approx'),happ(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.clos_known.val_approx',X75))),s('type.clos_known.val_approx',X76)))),s('type.num.num',sK9(happ(s(fun('type.clos_known.val_approx','type.clos_known.val_approx'),happ(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.clos_known.val_approx',X75))),s('type.clos_known.val_approx',X76)))))))) | s('type.clos_known.val_approx',happ(s(fun('type.clos_known.val_approx','type.clos_known.val_approx'),happ(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.clos_known.val_approx',X75))),s('type.clos_known.val_approx',X76))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(happ(s(fun('type.clos_known.val_approx','type.clos_known.val_approx'),happ(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.clos_known.val_approx',X75))),s('type.clos_known.val_approx',X76)))))) | s('type.clos_known.val_approx',happ(s(fun('type.clos_known.val_approx','type.clos_known.val_approx'),happ(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.clos_known.val_approx',X75))),s('type.clos_known.val_approx',X76))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(happ(s(fun('type.clos_known.val_approx','type.clos_known.val_approx'),happ(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.clos_known.val_approx',X75))),s('type.clos_known.val_approx',X76)))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',happ(s(fun('type.clos_known.val_approx','type.clos_known.val_approx'),happ(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.clos_known.val_approx',X75))),s('type.clos_known.val_approx',X76)))) )),
  inference(forward_demodulation,[],[f6227,f319])).
fof(f6227,plain,(
  ( ! [X76,X77,X75] : (~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',X77),s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X75),s('type.clos_known.val_approx',X76)))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8(happ(s(fun('type.clos_known.val_approx','type.clos_known.val_approx'),happ(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.clos_known.val_approx',X75))),s('type.clos_known.val_approx',X76)))),s('type.num.num',sK9(happ(s(fun('type.clos_known.val_approx','type.clos_known.val_approx'),happ(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.clos_known.val_approx',X75))),s('type.clos_known.val_approx',X76)))))) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X77),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8(happ(s(fun('type.clos_known.val_approx','type.clos_known.val_approx'),happ(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.clos_known.val_approx',X75))),s('type.clos_known.val_approx',X76)))),s('type.num.num',sK9(happ(s(fun('type.clos_known.val_approx','type.clos_known.val_approx'),happ(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.clos_known.val_approx',X75))),s('type.clos_known.val_approx',X76)))))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',happ(s(fun('type.clos_known.val_approx','type.clos_known.val_approx'),happ(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.clos_known.val_approx',X75))),s('type.clos_known.val_approx',X76))) | s('type.clos_known.val_approx',happ(s(fun('type.clos_known.val_approx','type.clos_known.val_approx'),happ(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.clos_known.val_approx',X75))),s('type.clos_known.val_approx',X76))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(happ(s(fun('type.clos_known.val_approx','type.clos_known.val_approx'),happ(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.clos_known.val_approx',X75))),s('type.clos_known.val_approx',X76)))))) | s('type.clos_known.val_approx',happ(s(fun('type.clos_known.val_approx','type.clos_known.val_approx'),happ(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.clos_known.val_approx',X75))),s('type.clos_known.val_approx',X76))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(happ(s(fun('type.clos_known.val_approx','type.clos_known.val_approx'),happ(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.clos_known.val_approx',X75))),s('type.clos_known.val_approx',X76)))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',happ(s(fun('type.clos_known.val_approx','type.clos_known.val_approx'),happ(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.clos_known.val_approx',X75))),s('type.clos_known.val_approx',X76)))) )),
  inference(superposition,[],[f1757,f319])).
fof(f6277,plain,(
  ( ! [X74,X73] : (s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X73) | s('type.clos_known.val_approx',X73) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X73)))))) | s('type.clos_known.val_approx',X73) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X73)))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X73) | ~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',X74),s('type.clos_known.val_approx',X73)))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X73)))),s('type.num.num',sK9('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X73)))))) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X74),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X73)))),s('type.num.num',sK9('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X73))))))))) )),
  inference(forward_demodulation,[],[f6276,f254])).
fof(f6276,plain,(
  ( ! [X74,X73] : (s('type.clos_known.val_approx',X73) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X73)))))) | s('type.clos_known.val_approx',X73) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X73)))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X73) | ~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',X74),s('type.clos_known.val_approx',X73)))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X73)))),s('type.num.num',sK9('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X73)))))) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X74),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X73)))),s('type.num.num',sK9('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X73)))))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X73)))) )),
  inference(forward_demodulation,[],[f6275,f254])).
fof(f6275,plain,(
  ( ! [X74,X73] : (s('type.clos_known.val_approx',X73) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X73)))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X73) | ~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',X74),s('type.clos_known.val_approx',X73)))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X73)))),s('type.num.num',sK9('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X73)))))) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X74),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X73)))),s('type.num.num',sK9('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X73)))))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X73))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X73)))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X73)))) )),
  inference(forward_demodulation,[],[f6274,f254])).
fof(f6274,plain,(
  ( ! [X74,X73] : (s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X73) | ~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',X74),s('type.clos_known.val_approx',X73)))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X73)))),s('type.num.num',sK9('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X73)))))) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X74),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X73)))),s('type.num.num',sK9('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X73)))))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X73))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X73)))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X73))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X73)))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X73)))) )),
  inference(forward_demodulation,[],[f6226,f254])).
fof(f6226,plain,(
  ( ! [X74,X73] : (~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',X74),s('type.clos_known.val_approx',X73)))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X73)))),s('type.num.num',sK9('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X73)))))) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X74),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X73)))),s('type.num.num',sK9('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X73)))))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X73))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X73))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X73)))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X73))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X73)))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X73)))) )),
  inference(superposition,[],[f1757,f254])).
fof(f6273,plain,(
  ( ! [X72,X71] : (s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X71))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X71))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X71))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X71))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X71))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X71))) | ~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',X72),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X71)))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X71))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))),s('type.num.num',sK9('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X71))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X72),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X71))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))),s('type.num.num',sK9('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X71))),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))))))))) )),
  inference(forward_demodulation,[],[f6272,f259])).
fof(f6272,plain,(
  ( ! [X72,X71] : (s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X71))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X71))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X71))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X71))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X71))) | ~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',X72),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X71)))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X71))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))),s('type.num.num',sK9('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X71))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X72),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X71))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))),s('type.num.num',sK9('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X71))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X71))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))) )),
  inference(forward_demodulation,[],[f6271,f259])).
fof(f6271,plain,(
  ( ! [X72,X71] : (s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X71))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X71))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X71))) | ~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',X72),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X71)))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X71))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))),s('type.num.num',sK9('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X71))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X72),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X71))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))),s('type.num.num',sK9('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X71))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X71))),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X71))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X71))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))) )),
  inference(forward_demodulation,[],[f6270,f259])).
fof(f6270,plain,(
  ( ! [X72,X71] : (s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X71))) | ~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',X72),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X71)))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X71))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))),s('type.num.num',sK9('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X71))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X72),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X71))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))),s('type.num.num',sK9('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X71))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X71))),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X71))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X71))),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X71))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X71))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))) )),
  inference(forward_demodulation,[],[f6225,f259])).
fof(f6225,plain,(
  ( ! [X72,X71] : (~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',X72),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X71)))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X71))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))),s('type.num.num',sK9('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X71))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X72),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X71))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))),s('type.num.num',sK9('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X71))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X71))),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X71))),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X71))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X71))),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X71))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X71))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))) )),
  inference(superposition,[],[f1757,f259])).
fof(f6224,plain,(
  ( ! [X70,X68,X69] : (~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',X70),s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,'F_0'),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X69))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X68))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X69)))))),s('type.num.num',sK9('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X68))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X69)))))))) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X70),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X68))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X69)))))),s('type.num.num',sK9('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X68))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X69)))))))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X68))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X69))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X68))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X69))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X68))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X69)))))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X68))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X69))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X68))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X69)))))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X68))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X69))))) | s(bool,'T_0') = s(bool,sK13(X68,X69))) )),
  inference(superposition,[],[f1757,f1672])).
fof(f6269,plain,(
  ( ! [X54,X55] : (s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X54))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X54))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X54))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X54))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X54))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X54))) | ~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',X55),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X54)))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X54))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))),s('type.num.num',sK9('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X54))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X55),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X54))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))),s('type.num.num',sK9('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X54))),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))))))))) )),
  inference(forward_demodulation,[],[f6268,f260])).
fof(f6268,plain,(
  ( ! [X54,X55] : (s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X54))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X54))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X54))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X54))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X54))) | ~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',X55),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X54)))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X54))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))),s('type.num.num',sK9('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X54))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X55),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X54))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))),s('type.num.num',sK9('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X54))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X54))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))) )),
  inference(forward_demodulation,[],[f6267,f260])).
fof(f6267,plain,(
  ( ! [X54,X55] : (s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X54))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X54))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X54))) | ~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',X55),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X54)))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X54))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))),s('type.num.num',sK9('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X54))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X55),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X54))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))),s('type.num.num',sK9('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X54))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X54))),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X54))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X54))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))) )),
  inference(forward_demodulation,[],[f6266,f260])).
fof(f6266,plain,(
  ( ! [X54,X55] : (s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X54))) | ~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',X55),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X54)))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X54))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))),s('type.num.num',sK9('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X54))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X55),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X54))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))),s('type.num.num',sK9('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X54))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X54))),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X54))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X54))),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X54))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X54))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))) )),
  inference(forward_demodulation,[],[f6219,f260])).
fof(f6219,plain,(
  ( ! [X54,X55] : (~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',X55),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X54)))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X54))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))),s('type.num.num',sK9('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X54))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X55),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X54))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))),s('type.num.num',sK9('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X54))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X54))),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X54))),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X54))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X54))),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X54))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X54))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))) )),
  inference(superposition,[],[f1757,f260])).
fof(f6265,plain,(
  ( ! [X39,X41,X40] : (s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X39),s('type.num.num',X40))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X39),s('type.num.num',X40))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X39),s('type.num.num',X40))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X39),s('type.num.num',X40))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X39),s('type.num.num',X40))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X39),s('type.num.num',X40))) | ~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',X41),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X39),s('type.num.num',X40)))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X39),s('type.num.num',X40))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))),s('type.num.num',sK9('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X39),s('type.num.num',X40))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X41),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X39),s('type.num.num',X40))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))),s('type.num.num',sK9('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X39),s('type.num.num',X40))),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))))))))) )),
  inference(forward_demodulation,[],[f6264,f318])).
fof(f6264,plain,(
  ( ! [X39,X41,X40] : (s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X39),s('type.num.num',X40))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X39),s('type.num.num',X40))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X39),s('type.num.num',X40))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X39),s('type.num.num',X40))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X39),s('type.num.num',X40))) | ~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',X41),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X39),s('type.num.num',X40)))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X39),s('type.num.num',X40))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))),s('type.num.num',sK9('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X39),s('type.num.num',X40))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X41),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X39),s('type.num.num',X40))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))),s('type.num.num',sK9('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X39),s('type.num.num',X40))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X39),s('type.num.num',X40))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))) )),
  inference(forward_demodulation,[],[f6263,f318])).
fof(f6263,plain,(
  ( ! [X39,X41,X40] : (s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X39),s('type.num.num',X40))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X39),s('type.num.num',X40))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X39),s('type.num.num',X40))) | ~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',X41),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X39),s('type.num.num',X40)))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X39),s('type.num.num',X40))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))),s('type.num.num',sK9('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X39),s('type.num.num',X40))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X41),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X39),s('type.num.num',X40))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))),s('type.num.num',sK9('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X39),s('type.num.num',X40))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X39),s('type.num.num',X40))),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X39),s('type.num.num',X40))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X39),s('type.num.num',X40))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))) )),
  inference(forward_demodulation,[],[f6262,f318])).
fof(f6262,plain,(
  ( ! [X39,X41,X40] : (s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X39),s('type.num.num',X40))) | ~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',X41),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X39),s('type.num.num',X40)))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X39),s('type.num.num',X40))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))),s('type.num.num',sK9('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X39),s('type.num.num',X40))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X41),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X39),s('type.num.num',X40))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))),s('type.num.num',sK9('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X39),s('type.num.num',X40))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X39),s('type.num.num',X40))),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X39),s('type.num.num',X40))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X39),s('type.num.num',X40))),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X39),s('type.num.num',X40))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X39),s('type.num.num',X40))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))) )),
  inference(forward_demodulation,[],[f6214,f318])).
fof(f6214,plain,(
  ( ! [X39,X41,X40] : (~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',X41),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X39),s('type.num.num',X40)))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X39),s('type.num.num',X40))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))),s('type.num.num',sK9('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X39),s('type.num.num',X40))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X41),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X39),s('type.num.num',X40))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))),s('type.num.num',sK9('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X39),s('type.num.num',X40))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X39),s('type.num.num',X40))),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X39),s('type.num.num',X40))),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X39),s('type.num.num',X40))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X39),s('type.num.num',X40))),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X39),s('type.num.num',X40))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X39),s('type.num.num',X40))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))) )),
  inference(superposition,[],[f1757,f318])).
fof(f6211,plain,(
  ( ! [X30,X28,X26,X29,X27] : (~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',X30),s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,'F_0'),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X28),s('type.num.num',X29))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X26),s('type.num.num',X27))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X28),s('type.num.num',X29)))))),s('type.num.num',sK9('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X26),s('type.num.num',X27))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X28),s('type.num.num',X29)))))))) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X30),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X26),s('type.num.num',X27))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X28),s('type.num.num',X29)))))),s('type.num.num',sK9('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X26),s('type.num.num',X27))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X28),s('type.num.num',X29)))))))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X26),s('type.num.num',X27))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X28),s('type.num.num',X29))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X26),s('type.num.num',X27))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X28),s('type.num.num',X29))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X26),s('type.num.num',X27))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X28),s('type.num.num',X29)))))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X26),s('type.num.num',X27))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X28),s('type.num.num',X29))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X26),s('type.num.num',X27))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X28),s('type.num.num',X29)))))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X26),s('type.num.num',X27))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X28),s('type.num.num',X29))))) | s(bool,'T_0') = s(bool,sK15(X26,X28,X27,X29))) )),
  inference(superposition,[],[f1757,f1696])).
fof(f6203,plain,(
  ( ! [X10,X11] : (~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',X11),s('type.clos_known.val_approx',X10)))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8('const.clos_known.merge_2'(s('type.clos_known.val_approx',X10),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))),s('type.num.num',sK9('const.clos_known.merge_2'(s('type.clos_known.val_approx',X10),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X11),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8('const.clos_known.merge_2'(s('type.clos_known.val_approx',X10),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))),s('type.num.num',sK9('const.clos_known.merge_2'(s('type.clos_known.val_approx',X10),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X10),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X10),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.clos_known.merge_2'(s('type.clos_known.val_approx',X10),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X10),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.clos_known.merge_2'(s('type.clos_known.val_approx',X10),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X10),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X10) | s('type.clos_known.val_approx',X10) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(X10)))) | s('type.clos_known.val_approx',X10) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(X10)))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X10)) )),
  inference(superposition,[],[f1757,f1747])).
fof(f6199,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',X1),s('type.clos_known.val_approx',X0)))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8('const.clos_known.Clos_2'(s('type.num.num',sK8(X0)),s('type.num.num',sK9(X0))))),s('type.num.num',sK9('const.clos_known.Clos_2'(s('type.num.num',sK8(X0)),s('type.num.num',sK9(X0))))))) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X1),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8('const.clos_known.Clos_2'(s('type.num.num',sK8(X0)),s('type.num.num',sK9(X0))))),s('type.num.num',sK9('const.clos_known.Clos_2'(s('type.num.num',sK8(X0)),s('type.num.num',sK9(X0))))))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8(X0)),s('type.num.num',sK9(X0)))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8(X0)),s('type.num.num',sK9(X0)))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.clos_known.Clos_2'(s('type.num.num',sK8(X0)),s('type.num.num',sK9(X0))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8(X0)),s('type.num.num',sK9(X0)))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.clos_known.Clos_2'(s('type.num.num',sK8(X0)),s('type.num.num',sK9(X0))))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8(X0)),s('type.num.num',sK9(X0)))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X0) | s('type.clos_known.val_approx',X0) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(X0)))) | s('type.clos_known.val_approx',X0) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(X0)))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X0)) )),
  inference(superposition,[],[f1757,f262])).
fof(f6198,plain,(
  ( ! [X97,X95,X98,X96] : (~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X95),s('type.num.num',X97))),s('type.clos_known.val_approx',X96))),s('type.clos_known.val_approx',X98)))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8(X98)),s('type.num.num',sK9(X98)))) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK15(X95,sK8(X96),X97,sK9(X96))),s('type.clos_known.val_approx',X96),s('type.clos_known.val_approx','const.clos_known.Other_0'))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8(X98)),s('type.num.num',sK9(X98)))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X98) | s('type.clos_known.val_approx',X98) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(X98)))) | s('type.clos_known.val_approx',X98) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(X98)))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X98) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X96) | s('type.clos_known.val_approx',X96) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(X96)))) | s('type.clos_known.val_approx',X96) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(X96)))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X96)) )),
  inference(superposition,[],[f1757,f1752])).
fof(f6194,plain,(
  ( ! [X83,X81,X82] : (~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X81))),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X82))))),s('type.clos_known.val_approx',X83)))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8(X83)),s('type.num.num',sK9(X83)))) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,'F_0'),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X81),s('type.list.list'('type.clos_known.val_approx'),X82))))),s('type.clos_known.val_approx','const.clos_known.Other_0'))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8(X83)),s('type.num.num',sK9(X83)))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X83) | s('type.clos_known.val_approx',X83) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(X83)))) | s('type.clos_known.val_approx',X83) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(X83)))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X83) | s(bool,'T_0') = s(bool,sK14(X81,X82))) )),
  inference(superposition,[],[f1757,f1725])).
fof(f6193,plain,(
  ( ! [X80,X78,X79] : (~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X79))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X78))))),s('type.clos_known.val_approx',X80)))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8(X80)),s('type.num.num',sK9(X80)))) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,'F_0'),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X78))),s('type.clos_known.val_approx','const.clos_known.Other_0'))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8(X80)),s('type.num.num',sK9(X80)))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X80) | s('type.clos_known.val_approx',X80) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(X80)))) | s('type.clos_known.val_approx',X80) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(X80)))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X80) | s(bool,'T_0') = s(bool,sK13(X79,X78))) )),
  inference(superposition,[],[f1757,f1672])).
fof(f6189,plain,(
  ( ! [X70,X68,X69] : (~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,'F_0'),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X69))),s('type.clos_known.val_approx','const.clos_known.Other_0'))),s('type.clos_known.val_approx',X70)))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8(X70)),s('type.num.num',sK9(X70)))) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X68))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X69))))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8(X70)),s('type.num.num',sK9(X70)))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X70) | s('type.clos_known.val_approx',X70) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(X70)))) | s('type.clos_known.val_approx',X70) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(X70)))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X70) | s(bool,'T_0') = s(bool,sK13(X68,X69))) )),
  inference(superposition,[],[f1757,f1672])).
fof(f6185,plain,(
  ( ! [X57,X58,X56] : (~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx',X58)))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8(X58)),s('type.num.num',sK9(X58)))) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X56))),s('type.clos_known.val_approx',X57))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8(X58)),s('type.num.num',sK9(X58)))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X58) | s('type.clos_known.val_approx',X58) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(X58)))) | s('type.clos_known.val_approx',X58) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(X58)))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X58) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X57) | s('type.clos_known.val_approx',X57) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(X57)))) | s('type.clos_known.val_approx',X57) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(X57)))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X57)) )),
  inference(superposition,[],[f1757,f1749])).
fof(f6180,plain,(
  ( ! [X43,X44,X42] : (~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx',X44)))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8(X44)),s('type.num.num',sK9(X44)))) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X42))),s('type.clos_known.val_approx',X43))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8(X44)),s('type.num.num',sK9(X44)))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X44) | s('type.clos_known.val_approx',X44) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(X44)))) | s('type.clos_known.val_approx',X44) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(X44)))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X44) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X43) | s('type.clos_known.val_approx',X43) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(X43)))) | s('type.clos_known.val_approx',X43) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(X43)))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X43)) )),
  inference(superposition,[],[f1757,f1751])).
fof(f6176,plain,(
  ( ! [X30,X28,X26,X29,X27] : (~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,'F_0'),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X28),s('type.num.num',X29))),s('type.clos_known.val_approx','const.clos_known.Other_0'))),s('type.clos_known.val_approx',X30)))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8(X30)),s('type.num.num',sK9(X30)))) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X26),s('type.num.num',X27))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X28),s('type.num.num',X29))))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8(X30)),s('type.num.num',sK9(X30)))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X30) | s('type.clos_known.val_approx',X30) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(X30)))) | s('type.clos_known.val_approx',X30) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(X30)))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X30) | s(bool,'T_0') = s(bool,sK15(X26,X28,X27,X29))) )),
  inference(superposition,[],[f1757,f1696])).
fof(f6169,plain,(
  ( ! [X12,X13] : (~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx',X13)))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8(X13)),s('type.num.num',sK9(X13)))) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx',X12))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8(X13)),s('type.num.num',sK9(X13)))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X13) | s('type.clos_known.val_approx',X13) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(X13)))) | s('type.clos_known.val_approx',X13) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(X13)))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X13) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X12) | s('type.clos_known.val_approx',X12) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(X12)))) | s('type.clos_known.val_approx',X12) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(X12)))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X12)) )),
  inference(superposition,[],[f1757,f1746])).
fof(f6168,plain,(
  ( ! [X10,X11] : (~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',X10),s('type.clos_known.val_approx',X11)))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8(X11)),s('type.num.num',sK9(X11)))) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X10),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8(X11)),s('type.num.num',sK9(X11)))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X11) | s('type.clos_known.val_approx',X11) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(X11)))) | s('type.clos_known.val_approx',X11) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(X11)))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X11) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X10) | s('type.clos_known.val_approx',X10) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(X10)))) | s('type.clos_known.val_approx',X10) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(X10)))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X10)) )),
  inference(superposition,[],[f1757,f1747])).
fof(f6167,plain,(
  ( ! [X8,X7,X9] : (~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx',X9)))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8(X9)),s('type.num.num',sK9(X9)))) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X7),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X8))))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8(X9)),s('type.num.num',sK9(X9)))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X9) | s('type.clos_known.val_approx',X9) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(X9)))) | s('type.clos_known.val_approx',X9) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(X9)))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X9) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X7) | s('type.clos_known.val_approx',X7) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(X7)))) | s('type.clos_known.val_approx',X7) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(X7)))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X7)) )),
  inference(superposition,[],[f1757,f1748])).
fof(f6166,plain,(
  ( ! [X6,X4,X5] : (~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx',X6)))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8(X6)),s('type.num.num',sK9(X6)))) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X4),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X5))))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8(X6)),s('type.num.num',sK9(X6)))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X6) | s('type.clos_known.val_approx',X6) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(X6)))) | s('type.clos_known.val_approx',X6) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(X6)))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X6) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X4) | s('type.clos_known.val_approx',X4) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(X4)))) | s('type.clos_known.val_approx',X4) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(X4)))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X4)) )),
  inference(superposition,[],[f1757,f1750])).
fof(f6165,plain,(
  ( ! [X2,X3] : (~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx',X3)))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8(X3)),s('type.num.num',sK9(X3)))) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X2),s('type.clos_known.val_approx','const.clos_known.Other_0'))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8(X3)),s('type.num.num',sK9(X3)))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X3) | s('type.clos_known.val_approx',X3) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(X3)))) | s('type.clos_known.val_approx',X3) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(X3)))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X3) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X2) | s('type.clos_known.val_approx',X2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(X2)))) | s('type.clos_known.val_approx',X2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(X2)))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X2)) )),
  inference(superposition,[],[f1757,f1745])).
fof(f6117,plain,(
  ( ! [X70,X68,X71,X69] : (s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X68),s('type.num.num',X70))),s('type.clos_known.val_approx',X69))) != s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8(X71)),s('type.num.num',sK9(X71)))),s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X68),s('type.num.num',X70))),s('type.clos_known.val_approx',X69))))) | p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',X71),s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK15(X68,sK8(X69),X70,sK9(X69))),s('type.clos_known.val_approx',X69),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X71) | s('type.clos_known.val_approx',X71) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(X71)))) | s('type.clos_known.val_approx',X71) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(X71)))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X71) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X69) | s('type.clos_known.val_approx',X69) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(X69)))) | s('type.clos_known.val_approx',X69) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(X69)))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X69)) )),
  inference(superposition,[],[f1758,f1752])).
fof(f6116,plain,(
  ( ! [X66,X64,X67,X65] : (~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X64),s('type.num.num',X66))),s('type.clos_known.val_approx',X65))),s('type.clos_known.val_approx',X67)))) | s('type.clos_known.val_approx',X67) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8('const.bool.COND_3'(s(bool,sK15(X64,sK8(X65),X66,sK9(X65))),s('type.clos_known.val_approx',X65),s('type.clos_known.val_approx','const.clos_known.Other_0')))),s('type.num.num',sK9('const.bool.COND_3'(s(bool,sK15(X64,sK8(X65),X66,sK9(X65))),s('type.clos_known.val_approx',X65),s('type.clos_known.val_approx','const.clos_known.Other_0')))))),s('type.clos_known.val_approx',X67))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK15(X64,sK8(X65),X66,sK9(X65))),s('type.clos_known.val_approx',X65),s('type.clos_known.val_approx','const.clos_known.Other_0'))) | s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK15(X64,sK8(X65),X66,sK9(X65))),s('type.clos_known.val_approx',X65),s('type.clos_known.val_approx','const.clos_known.Other_0'))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.bool.COND_3'(s(bool,sK15(X64,sK8(X65),X66,sK9(X65))),s('type.clos_known.val_approx',X65),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK15(X64,sK8(X65),X66,sK9(X65))),s('type.clos_known.val_approx',X65),s('type.clos_known.val_approx','const.clos_known.Other_0'))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.bool.COND_3'(s(bool,sK15(X64,sK8(X65),X66,sK9(X65))),s('type.clos_known.val_approx',X65),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK15(X64,sK8(X65),X66,sK9(X65))),s('type.clos_known.val_approx',X65),s('type.clos_known.val_approx','const.clos_known.Other_0'))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X65) | s('type.clos_known.val_approx',X65) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(X65)))) | s('type.clos_known.val_approx',X65) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(X65)))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X65)) )),
  inference(superposition,[],[f1756,f1752])).
fof(f6115,plain,(
  ( ! [X61,X62,X60,X63] : (~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',X63),s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X60),s('type.num.num',X62))),s('type.clos_known.val_approx',X61)))))) | s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK15(X60,sK8(X61),X62,sK9(X61))),s('type.clos_known.val_approx',X61),s('type.clos_known.val_approx','const.clos_known.Other_0'))) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8(X63)),s('type.num.num',sK9(X63)))),s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK15(X60,sK8(X61),X62,sK9(X61))),s('type.clos_known.val_approx',X61),s('type.clos_known.val_approx','const.clos_known.Other_0'))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X63) | s('type.clos_known.val_approx',X63) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(X63)))) | s('type.clos_known.val_approx',X63) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(X63)))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X63) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X61) | s('type.clos_known.val_approx',X61) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(X61)))) | s('type.clos_known.val_approx',X61) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(X61)))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X61)) )),
  inference(superposition,[],[f1756,f1752])).
fof(f6114,plain,(
  ( ! [X59,X57,X58,X56] : (s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X59))),s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X56),s('type.num.num',X58))),s('type.clos_known.val_approx',X57))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK15(X56,sK8(X57),X58,sK9(X57))),s('type.clos_known.val_approx',X57),s('type.clos_known.val_approx','const.clos_known.Other_0'))) | s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK15(X56,sK8(X57),X58,sK9(X57))),s('type.clos_known.val_approx',X57),s('type.clos_known.val_approx','const.clos_known.Other_0'))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.bool.COND_3'(s(bool,sK15(X56,sK8(X57),X58,sK9(X57))),s('type.clos_known.val_approx',X57),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK15(X56,sK8(X57),X58,sK9(X57))),s('type.clos_known.val_approx',X57),s('type.clos_known.val_approx','const.clos_known.Other_0'))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.bool.COND_3'(s(bool,sK15(X56,sK8(X57),X58,sK9(X57))),s('type.clos_known.val_approx',X57),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK15(X56,sK8(X57),X58,sK9(X57))),s('type.clos_known.val_approx',X57),s('type.clos_known.val_approx','const.clos_known.Other_0'))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X57) | s('type.clos_known.val_approx',X57) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(X57)))) | s('type.clos_known.val_approx',X57) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(X57)))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X57)) )),
  inference(superposition,[],[f1751,f1752])).
fof(f6113,plain,(
  ( ! [X54,X52,X55,X53] : (s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X52),s('type.num.num',X54))),s('type.clos_known.val_approx',X53))),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X55))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK15(X52,sK8(X53),X54,sK9(X53))),s('type.clos_known.val_approx',X53),s('type.clos_known.val_approx','const.clos_known.Other_0'))) | s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK15(X52,sK8(X53),X54,sK9(X53))),s('type.clos_known.val_approx',X53),s('type.clos_known.val_approx','const.clos_known.Other_0'))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.bool.COND_3'(s(bool,sK15(X52,sK8(X53),X54,sK9(X53))),s('type.clos_known.val_approx',X53),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK15(X52,sK8(X53),X54,sK9(X53))),s('type.clos_known.val_approx',X53),s('type.clos_known.val_approx','const.clos_known.Other_0'))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.bool.COND_3'(s(bool,sK15(X52,sK8(X53),X54,sK9(X53))),s('type.clos_known.val_approx',X53),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK15(X52,sK8(X53),X54,sK9(X53))),s('type.clos_known.val_approx',X53),s('type.clos_known.val_approx','const.clos_known.Other_0'))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X53) | s('type.clos_known.val_approx',X53) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(X53)))) | s('type.clos_known.val_approx',X53) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(X53)))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X53)) )),
  inference(superposition,[],[f1750,f1752])).
fof(f6112,plain,(
  ( ! [X50,X48,X51,X49] : (s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X51))),s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X48),s('type.num.num',X50))),s('type.clos_known.val_approx',X49))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK15(X48,sK8(X49),X50,sK9(X49))),s('type.clos_known.val_approx',X49),s('type.clos_known.val_approx','const.clos_known.Other_0'))) | s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK15(X48,sK8(X49),X50,sK9(X49))),s('type.clos_known.val_approx',X49),s('type.clos_known.val_approx','const.clos_known.Other_0'))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.bool.COND_3'(s(bool,sK15(X48,sK8(X49),X50,sK9(X49))),s('type.clos_known.val_approx',X49),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK15(X48,sK8(X49),X50,sK9(X49))),s('type.clos_known.val_approx',X49),s('type.clos_known.val_approx','const.clos_known.Other_0'))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.bool.COND_3'(s(bool,sK15(X48,sK8(X49),X50,sK9(X49))),s('type.clos_known.val_approx',X49),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK15(X48,sK8(X49),X50,sK9(X49))),s('type.clos_known.val_approx',X49),s('type.clos_known.val_approx','const.clos_known.Other_0'))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X49) | s('type.clos_known.val_approx',X49) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(X49)))) | s('type.clos_known.val_approx',X49) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(X49)))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X49)) )),
  inference(superposition,[],[f1749,f1752])).
fof(f6111,plain,(
  ( ! [X47,X45,X46,X44] : (s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X44),s('type.num.num',X46))),s('type.clos_known.val_approx',X45))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X47))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK15(X44,sK8(X45),X46,sK9(X45))),s('type.clos_known.val_approx',X45),s('type.clos_known.val_approx','const.clos_known.Other_0'))) | s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK15(X44,sK8(X45),X46,sK9(X45))),s('type.clos_known.val_approx',X45),s('type.clos_known.val_approx','const.clos_known.Other_0'))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.bool.COND_3'(s(bool,sK15(X44,sK8(X45),X46,sK9(X45))),s('type.clos_known.val_approx',X45),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK15(X44,sK8(X45),X46,sK9(X45))),s('type.clos_known.val_approx',X45),s('type.clos_known.val_approx','const.clos_known.Other_0'))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.bool.COND_3'(s(bool,sK15(X44,sK8(X45),X46,sK9(X45))),s('type.clos_known.val_approx',X45),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK15(X44,sK8(X45),X46,sK9(X45))),s('type.clos_known.val_approx',X45),s('type.clos_known.val_approx','const.clos_known.Other_0'))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X45) | s('type.clos_known.val_approx',X45) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(X45)))) | s('type.clos_known.val_approx',X45) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(X45)))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X45)) )),
  inference(superposition,[],[f1748,f1752])).
fof(f6110,plain,(
  ( ! [X43,X41,X42] : (s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X41),s('type.num.num',X43))),s('type.clos_known.val_approx',X42))) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X41),s('type.num.num',X43))),s('type.clos_known.val_approx',X42))),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK15(X41,sK8(X42),X43,sK9(X42))),s('type.clos_known.val_approx',X42),s('type.clos_known.val_approx','const.clos_known.Other_0'))) | s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK15(X41,sK8(X42),X43,sK9(X42))),s('type.clos_known.val_approx',X42),s('type.clos_known.val_approx','const.clos_known.Other_0'))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.bool.COND_3'(s(bool,sK15(X41,sK8(X42),X43,sK9(X42))),s('type.clos_known.val_approx',X42),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK15(X41,sK8(X42),X43,sK9(X42))),s('type.clos_known.val_approx',X42),s('type.clos_known.val_approx','const.clos_known.Other_0'))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.bool.COND_3'(s(bool,sK15(X41,sK8(X42),X43,sK9(X42))),s('type.clos_known.val_approx',X42),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK15(X41,sK8(X42),X43,sK9(X42))),s('type.clos_known.val_approx',X42),s('type.clos_known.val_approx','const.clos_known.Other_0'))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X42) | s('type.clos_known.val_approx',X42) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(X42)))) | s('type.clos_known.val_approx',X42) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(X42)))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X42)) )),
  inference(superposition,[],[f1747,f1752])).
fof(f6109,plain,(
  ( ! [X39,X38,X40] : (s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X38),s('type.num.num',X40))),s('type.clos_known.val_approx',X39))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK15(X38,sK8(X39),X40,sK9(X39))),s('type.clos_known.val_approx',X39),s('type.clos_known.val_approx','const.clos_known.Other_0'))) | s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK15(X38,sK8(X39),X40,sK9(X39))),s('type.clos_known.val_approx',X39),s('type.clos_known.val_approx','const.clos_known.Other_0'))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.bool.COND_3'(s(bool,sK15(X38,sK8(X39),X40,sK9(X39))),s('type.clos_known.val_approx',X39),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK15(X38,sK8(X39),X40,sK9(X39))),s('type.clos_known.val_approx',X39),s('type.clos_known.val_approx','const.clos_known.Other_0'))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.bool.COND_3'(s(bool,sK15(X38,sK8(X39),X40,sK9(X39))),s('type.clos_known.val_approx',X39),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK15(X38,sK8(X39),X40,sK9(X39))),s('type.clos_known.val_approx',X39),s('type.clos_known.val_approx','const.clos_known.Other_0'))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X39) | s('type.clos_known.val_approx',X39) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(X39)))) | s('type.clos_known.val_approx',X39) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(X39)))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X39)) )),
  inference(superposition,[],[f1746,f1752])).
fof(f6108,plain,(
  ( ! [X37,X35,X36] : (s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X35),s('type.num.num',X37))),s('type.clos_known.val_approx',X36))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK15(X35,sK8(X36),X37,sK9(X36))),s('type.clos_known.val_approx',X36),s('type.clos_known.val_approx','const.clos_known.Other_0'))) | s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK15(X35,sK8(X36),X37,sK9(X36))),s('type.clos_known.val_approx',X36),s('type.clos_known.val_approx','const.clos_known.Other_0'))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.bool.COND_3'(s(bool,sK15(X35,sK8(X36),X37,sK9(X36))),s('type.clos_known.val_approx',X36),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK15(X35,sK8(X36),X37,sK9(X36))),s('type.clos_known.val_approx',X36),s('type.clos_known.val_approx','const.clos_known.Other_0'))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.bool.COND_3'(s(bool,sK15(X35,sK8(X36),X37,sK9(X36))),s('type.clos_known.val_approx',X36),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK15(X35,sK8(X36),X37,sK9(X36))),s('type.clos_known.val_approx',X36),s('type.clos_known.val_approx','const.clos_known.Other_0'))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X36) | s('type.clos_known.val_approx',X36) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(X36)))) | s('type.clos_known.val_approx',X36) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(X36)))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X36)) )),
  inference(superposition,[],[f1745,f1752])).
fof(f6107,plain,(
  ( ! [X33,X31,X34,X32] : (s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X31),s('type.num.num',X33))),s('type.clos_known.val_approx',X32))) != s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X34),s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X31),s('type.num.num',X33))),s('type.clos_known.val_approx',X32))))) | s(bool,'T_0') = s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',X34),s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK15(X31,sK8(X32),X33,sK9(X32))),s('type.clos_known.val_approx',X32),s('type.clos_known.val_approx','const.clos_known.Other_0'))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X32) | s('type.clos_known.val_approx',X32) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(X32)))) | s('type.clos_known.val_approx',X32) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(X32)))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X32)) )),
  inference(superposition,[],[f1440,f1752])).
fof(f6106,plain,(
  ( ! [X30,X28,X29,X27] : (s('type.clos_known.val_approx',X30) != s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X27),s('type.num.num',X29))),s('type.clos_known.val_approx',X28))),s('type.clos_known.val_approx',X30))) | s(bool,'T_0') = s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK15(X27,sK8(X28),X29,sK9(X28))),s('type.clos_known.val_approx',X28),s('type.clos_known.val_approx','const.clos_known.Other_0'))),s('type.clos_known.val_approx',X30))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X28) | s('type.clos_known.val_approx',X28) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(X28)))) | s('type.clos_known.val_approx',X28) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(X28)))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X28)) )),
  inference(superposition,[],[f1440,f1752])).
fof(f6105,plain,(
  ( ! [X26,X24,X23,X25] : (p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',X26),s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X23),s('type.num.num',X25))),s('type.clos_known.val_approx',X24)))))) | s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK15(X23,sK8(X24),X25,sK9(X24))),s('type.clos_known.val_approx',X24),s('type.clos_known.val_approx','const.clos_known.Other_0'))) != s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X26),s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK15(X23,sK8(X24),X25,sK9(X24))),s('type.clos_known.val_approx',X24),s('type.clos_known.val_approx','const.clos_known.Other_0'))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X24) | s('type.clos_known.val_approx',X24) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(X24)))) | s('type.clos_known.val_approx',X24) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(X24)))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X24)) )),
  inference(superposition,[],[f329,f1752])).
fof(f6104,plain,(
  ( ! [X21,X19,X22,X20] : (p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X19),s('type.num.num',X21))),s('type.clos_known.val_approx',X20))),s('type.clos_known.val_approx',X22)))) | s('type.clos_known.val_approx',X22) != s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK15(X19,sK8(X20),X21,sK9(X20))),s('type.clos_known.val_approx',X20),s('type.clos_known.val_approx','const.clos_known.Other_0'))),s('type.clos_known.val_approx',X22))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X20) | s('type.clos_known.val_approx',X20) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(X20)))) | s('type.clos_known.val_approx',X20) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(X20)))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X20)) )),
  inference(superposition,[],[f329,f1752])).
fof(f6103,plain,(
  ( ! [X17,X15,X18,X16] : (~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',X18),s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X15),s('type.num.num',X17))),s('type.clos_known.val_approx',X16)))))) | s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK15(X15,sK8(X16),X17,sK9(X16))),s('type.clos_known.val_approx',X16),s('type.clos_known.val_approx','const.clos_known.Other_0'))) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X18),s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK15(X15,sK8(X16),X17,sK9(X16))),s('type.clos_known.val_approx',X16),s('type.clos_known.val_approx','const.clos_known.Other_0'))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X16) | s('type.clos_known.val_approx',X16) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(X16)))) | s('type.clos_known.val_approx',X16) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(X16)))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X16)) )),
  inference(superposition,[],[f328,f1752])).
fof(f6102,plain,(
  ( ! [X14,X12,X13,X11] : (~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X11),s('type.num.num',X13))),s('type.clos_known.val_approx',X12))),s('type.clos_known.val_approx',X14)))) | s('type.clos_known.val_approx',X14) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK15(X11,sK8(X12),X13,sK9(X12))),s('type.clos_known.val_approx',X12),s('type.clos_known.val_approx','const.clos_known.Other_0'))),s('type.clos_known.val_approx',X14))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X12) | s('type.clos_known.val_approx',X12) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(X12)))) | s('type.clos_known.val_approx',X12) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(X12)))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X12)) )),
  inference(superposition,[],[f328,f1752])).
fof(f6098,plain,(
  ( ! [X132,X130,X133,X131,X129] : (s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X132),s('type.num.num',X133))),s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X129),s('type.num.num',X131))),s('type.clos_known.val_approx',X130))))) = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK15(X132,sK8('const.bool.COND_3'(s(bool,sK15(X129,sK8(X130),X131,sK9(X130))),s('type.clos_known.val_approx',X130),s('type.clos_known.val_approx','const.clos_known.Other_0'))),X133,sK9('const.bool.COND_3'(s(bool,sK15(X129,sK8(X130),X131,sK9(X130))),s('type.clos_known.val_approx',X130),s('type.clos_known.val_approx','const.clos_known.Other_0'))))),s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X129),s('type.num.num',X131))),s('type.clos_known.val_approx',X130))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK15(X129,sK8(X130),X131,sK9(X130))),s('type.clos_known.val_approx',X130),s('type.clos_known.val_approx','const.clos_known.Other_0'))) | s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK15(X129,sK8(X130),X131,sK9(X130))),s('type.clos_known.val_approx',X130),s('type.clos_known.val_approx','const.clos_known.Other_0'))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.bool.COND_3'(s(bool,sK15(X129,sK8(X130),X131,sK9(X130))),s('type.clos_known.val_approx',X130),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK15(X129,sK8(X130),X131,sK9(X130))),s('type.clos_known.val_approx',X130),s('type.clos_known.val_approx','const.clos_known.Other_0'))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.bool.COND_3'(s(bool,sK15(X129,sK8(X130),X131,sK9(X130))),s('type.clos_known.val_approx',X130),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK15(X129,sK8(X130),X131,sK9(X130))),s('type.clos_known.val_approx',X130),s('type.clos_known.val_approx','const.clos_known.Other_0'))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X130) | s('type.clos_known.val_approx',X130) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(X130)))) | s('type.clos_known.val_approx',X130) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(X130)))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X130)) )),
  inference(superposition,[],[f1752,f1752])).
fof(f6151,plain,(
  ( ! [X127,X125,X123,X128,X126,X124] : (s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X123),s('type.num.num',X125))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X124),s('type.num.num',X126))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X123),s('type.num.num',X125))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X124),s('type.num.num',X126))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.bool.COND_3'(s(bool,sK15(X123,X124,X125,X126)),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X124),s('type.num.num',X126))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X123),s('type.num.num',X125))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X124),s('type.num.num',X126))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.bool.COND_3'(s(bool,sK15(X123,X124,X125,X126)),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X124),s('type.num.num',X126))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X123),s('type.num.num',X125))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X124),s('type.num.num',X126))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X127),s('type.num.num',X128))),s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X123),s('type.num.num',X125))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X124),s('type.num.num',X126))))))) = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK15(X127,sK8('const.bool.COND_3'(s(bool,sK15(X123,X124,X125,X126)),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X124),s('type.num.num',X126))),s('type.clos_known.val_approx','const.clos_known.Other_0'))),X128,sK9('const.bool.COND_3'(s(bool,sK15(X123,X124,X125,X126)),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X124),s('type.num.num',X126))),s('type.clos_known.val_approx','const.clos_known.Other_0'))))),s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X123),s('type.num.num',X125))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X124),s('type.num.num',X126))))),s('type.clos_known.val_approx','const.clos_known.Other_0')))) )),
  inference(forward_demodulation,[],[f6150,f399])).
fof(f6150,plain,(
  ( ! [X127,X125,X123,X128,X126,X124] : (s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X123),s('type.num.num',X125))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X124),s('type.num.num',X126))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.bool.COND_3'(s(bool,sK15(X123,X124,X125,X126)),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X124),s('type.num.num',X126))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X123),s('type.num.num',X125))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X124),s('type.num.num',X126))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.bool.COND_3'(s(bool,sK15(X123,X124,X125,X126)),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X124),s('type.num.num',X126))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X123),s('type.num.num',X125))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X124),s('type.num.num',X126))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X127),s('type.num.num',X128))),s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X123),s('type.num.num',X125))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X124),s('type.num.num',X126))))))) = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK15(X127,sK8('const.bool.COND_3'(s(bool,sK15(X123,X124,X125,X126)),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X124),s('type.num.num',X126))),s('type.clos_known.val_approx','const.clos_known.Other_0'))),X128,sK9('const.bool.COND_3'(s(bool,sK15(X123,X124,X125,X126)),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X124),s('type.num.num',X126))),s('type.clos_known.val_approx','const.clos_known.Other_0'))))),s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X123),s('type.num.num',X125))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X124),s('type.num.num',X126))))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK15(X123,X124,X125,X126)),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X124),s('type.num.num',X126))),s('type.clos_known.val_approx','const.clos_known.Other_0')))) )),
  inference(forward_demodulation,[],[f6149,f399])).
fof(f6149,plain,(
  ( ! [X127,X125,X123,X128,X126,X124] : (s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X123),s('type.num.num',X125))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X124),s('type.num.num',X126))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.bool.COND_3'(s(bool,sK15(X123,X124,X125,X126)),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X124),s('type.num.num',X126))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X123),s('type.num.num',X125))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X124),s('type.num.num',X126))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X127),s('type.num.num',X128))),s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X123),s('type.num.num',X125))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X124),s('type.num.num',X126))))))) = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK15(X127,sK8('const.bool.COND_3'(s(bool,sK15(X123,X124,X125,X126)),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X124),s('type.num.num',X126))),s('type.clos_known.val_approx','const.clos_known.Other_0'))),X128,sK9('const.bool.COND_3'(s(bool,sK15(X123,X124,X125,X126)),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X124),s('type.num.num',X126))),s('type.clos_known.val_approx','const.clos_known.Other_0'))))),s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X123),s('type.num.num',X125))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X124),s('type.num.num',X126))))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) | s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK15(X123,X124,X125,X126)),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X124),s('type.num.num',X126))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.bool.COND_3'(s(bool,sK15(X123,X124,X125,X126)),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X124),s('type.num.num',X126))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK15(X123,X124,X125,X126)),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X124),s('type.num.num',X126))),s('type.clos_known.val_approx','const.clos_known.Other_0')))) )),
  inference(forward_demodulation,[],[f6148,f399])).
fof(f6148,plain,(
  ( ! [X127,X125,X123,X128,X126,X124] : (s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X123),s('type.num.num',X125))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X124),s('type.num.num',X126))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X127),s('type.num.num',X128))),s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X123),s('type.num.num',X125))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X124),s('type.num.num',X126))))))) = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK15(X127,sK8('const.bool.COND_3'(s(bool,sK15(X123,X124,X125,X126)),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X124),s('type.num.num',X126))),s('type.clos_known.val_approx','const.clos_known.Other_0'))),X128,sK9('const.bool.COND_3'(s(bool,sK15(X123,X124,X125,X126)),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X124),s('type.num.num',X126))),s('type.clos_known.val_approx','const.clos_known.Other_0'))))),s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X123),s('type.num.num',X125))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X124),s('type.num.num',X126))))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) | s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK15(X123,X124,X125,X126)),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X124),s('type.num.num',X126))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.bool.COND_3'(s(bool,sK15(X123,X124,X125,X126)),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X124),s('type.num.num',X126))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK15(X123,X124,X125,X126)),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X124),s('type.num.num',X126))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.bool.COND_3'(s(bool,sK15(X123,X124,X125,X126)),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X124),s('type.num.num',X126))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK15(X123,X124,X125,X126)),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X124),s('type.num.num',X126))),s('type.clos_known.val_approx','const.clos_known.Other_0')))) )),
  inference(forward_demodulation,[],[f6097,f399])).
fof(f6097,plain,(
  ( ! [X127,X125,X123,X128,X126,X124] : (s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X127),s('type.num.num',X128))),s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X123),s('type.num.num',X125))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X124),s('type.num.num',X126))))))) = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK15(X127,sK8('const.bool.COND_3'(s(bool,sK15(X123,X124,X125,X126)),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X124),s('type.num.num',X126))),s('type.clos_known.val_approx','const.clos_known.Other_0'))),X128,sK9('const.bool.COND_3'(s(bool,sK15(X123,X124,X125,X126)),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X124),s('type.num.num',X126))),s('type.clos_known.val_approx','const.clos_known.Other_0'))))),s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X123),s('type.num.num',X125))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X124),s('type.num.num',X126))))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK15(X123,X124,X125,X126)),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X124),s('type.num.num',X126))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) | s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK15(X123,X124,X125,X126)),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X124),s('type.num.num',X126))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.bool.COND_3'(s(bool,sK15(X123,X124,X125,X126)),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X124),s('type.num.num',X126))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK15(X123,X124,X125,X126)),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X124),s('type.num.num',X126))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.bool.COND_3'(s(bool,sK15(X123,X124,X125,X126)),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X124),s('type.num.num',X126))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK15(X123,X124,X125,X126)),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X124),s('type.num.num',X126))),s('type.clos_known.val_approx','const.clos_known.Other_0')))) )),
  inference(superposition,[],[f1752,f399])).
fof(f6147,plain,(
  ( ! [X121,X122,X120,X119] : (s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X119))),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X120))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X119))),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X120))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.bool.COND_3'(s(bool,sK14(X119,X120)),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X119),s('type.list.list'('type.clos_known.val_approx'),X120))))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X119))),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X120))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.bool.COND_3'(s(bool,sK14(X119,X120)),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X119),s('type.list.list'('type.clos_known.val_approx'),X120))))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X119))),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X120))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X121),s('type.num.num',X122))),s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X119))),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X120))))))) = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK15(X121,sK8('const.bool.COND_3'(s(bool,sK14(X119,X120)),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X119),s('type.list.list'('type.clos_known.val_approx'),X120))))),s('type.clos_known.val_approx','const.clos_known.Other_0'))),X122,sK9('const.bool.COND_3'(s(bool,sK14(X119,X120)),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X119),s('type.list.list'('type.clos_known.val_approx'),X120))))),s('type.clos_known.val_approx','const.clos_known.Other_0'))))),s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X119))),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X120))))),s('type.clos_known.val_approx','const.clos_known.Other_0')))) )),
  inference(forward_demodulation,[],[f6146,f410])).
fof(f6146,plain,(
  ( ! [X121,X122,X120,X119] : (s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X119))),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X120))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.bool.COND_3'(s(bool,sK14(X119,X120)),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X119),s('type.list.list'('type.clos_known.val_approx'),X120))))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X119))),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X120))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.bool.COND_3'(s(bool,sK14(X119,X120)),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X119),s('type.list.list'('type.clos_known.val_approx'),X120))))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X119))),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X120))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X121),s('type.num.num',X122))),s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X119))),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X120))))))) = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK15(X121,sK8('const.bool.COND_3'(s(bool,sK14(X119,X120)),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X119),s('type.list.list'('type.clos_known.val_approx'),X120))))),s('type.clos_known.val_approx','const.clos_known.Other_0'))),X122,sK9('const.bool.COND_3'(s(bool,sK14(X119,X120)),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X119),s('type.list.list'('type.clos_known.val_approx'),X120))))),s('type.clos_known.val_approx','const.clos_known.Other_0'))))),s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X119))),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X120))))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK14(X119,X120)),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X119),s('type.list.list'('type.clos_known.val_approx'),X120))))),s('type.clos_known.val_approx','const.clos_known.Other_0')))) )),
  inference(forward_demodulation,[],[f6145,f410])).
fof(f6145,plain,(
  ( ! [X121,X122,X120,X119] : (s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X119))),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X120))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.bool.COND_3'(s(bool,sK14(X119,X120)),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X119),s('type.list.list'('type.clos_known.val_approx'),X120))))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X119))),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X120))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X121),s('type.num.num',X122))),s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X119))),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X120))))))) = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK15(X121,sK8('const.bool.COND_3'(s(bool,sK14(X119,X120)),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X119),s('type.list.list'('type.clos_known.val_approx'),X120))))),s('type.clos_known.val_approx','const.clos_known.Other_0'))),X122,sK9('const.bool.COND_3'(s(bool,sK14(X119,X120)),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X119),s('type.list.list'('type.clos_known.val_approx'),X120))))),s('type.clos_known.val_approx','const.clos_known.Other_0'))))),s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X119))),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X120))))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) | s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK14(X119,X120)),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X119),s('type.list.list'('type.clos_known.val_approx'),X120))))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.bool.COND_3'(s(bool,sK14(X119,X120)),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X119),s('type.list.list'('type.clos_known.val_approx'),X120))))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK14(X119,X120)),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X119),s('type.list.list'('type.clos_known.val_approx'),X120))))),s('type.clos_known.val_approx','const.clos_known.Other_0')))) )),
  inference(forward_demodulation,[],[f6144,f410])).
fof(f6144,plain,(
  ( ! [X121,X122,X120,X119] : (s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X119))),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X120))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X121),s('type.num.num',X122))),s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X119))),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X120))))))) = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK15(X121,sK8('const.bool.COND_3'(s(bool,sK14(X119,X120)),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X119),s('type.list.list'('type.clos_known.val_approx'),X120))))),s('type.clos_known.val_approx','const.clos_known.Other_0'))),X122,sK9('const.bool.COND_3'(s(bool,sK14(X119,X120)),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X119),s('type.list.list'('type.clos_known.val_approx'),X120))))),s('type.clos_known.val_approx','const.clos_known.Other_0'))))),s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X119))),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X120))))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) | s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK14(X119,X120)),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X119),s('type.list.list'('type.clos_known.val_approx'),X120))))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.bool.COND_3'(s(bool,sK14(X119,X120)),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X119),s('type.list.list'('type.clos_known.val_approx'),X120))))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK14(X119,X120)),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X119),s('type.list.list'('type.clos_known.val_approx'),X120))))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.bool.COND_3'(s(bool,sK14(X119,X120)),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X119),s('type.list.list'('type.clos_known.val_approx'),X120))))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK14(X119,X120)),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X119),s('type.list.list'('type.clos_known.val_approx'),X120))))),s('type.clos_known.val_approx','const.clos_known.Other_0')))) )),
  inference(forward_demodulation,[],[f6096,f410])).
fof(f6096,plain,(
  ( ! [X121,X122,X120,X119] : (s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X121),s('type.num.num',X122))),s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X119))),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X120))))))) = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK15(X121,sK8('const.bool.COND_3'(s(bool,sK14(X119,X120)),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X119),s('type.list.list'('type.clos_known.val_approx'),X120))))),s('type.clos_known.val_approx','const.clos_known.Other_0'))),X122,sK9('const.bool.COND_3'(s(bool,sK14(X119,X120)),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X119),s('type.list.list'('type.clos_known.val_approx'),X120))))),s('type.clos_known.val_approx','const.clos_known.Other_0'))))),s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X119))),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X120))))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK14(X119,X120)),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X119),s('type.list.list'('type.clos_known.val_approx'),X120))))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) | s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK14(X119,X120)),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X119),s('type.list.list'('type.clos_known.val_approx'),X120))))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.bool.COND_3'(s(bool,sK14(X119,X120)),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X119),s('type.list.list'('type.clos_known.val_approx'),X120))))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK14(X119,X120)),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X119),s('type.list.list'('type.clos_known.val_approx'),X120))))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.bool.COND_3'(s(bool,sK14(X119,X120)),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X119),s('type.list.list'('type.clos_known.val_approx'),X120))))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK14(X119,X120)),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X119),s('type.list.list'('type.clos_known.val_approx'),X120))))),s('type.clos_known.val_approx','const.clos_known.Other_0')))) )),
  inference(superposition,[],[f1752,f410])).
fof(f6143,plain,(
  ( ! [X118,X116,X117,X115] : (s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X115))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X116))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X115))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X116))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.bool.COND_3'(s(bool,sK13(X115,X116)),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X116))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X115))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X116))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.bool.COND_3'(s(bool,sK13(X115,X116)),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X116))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X115))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X116))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X117),s('type.num.num',X118))),s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X115))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X116))))))) = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK15(X117,sK8('const.bool.COND_3'(s(bool,sK13(X115,X116)),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X116))),s('type.clos_known.val_approx','const.clos_known.Other_0'))),X118,sK9('const.bool.COND_3'(s(bool,sK13(X115,X116)),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X116))),s('type.clos_known.val_approx','const.clos_known.Other_0'))))),s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X115))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X116))))),s('type.clos_known.val_approx','const.clos_known.Other_0')))) )),
  inference(forward_demodulation,[],[f6142,f348])).
fof(f6142,plain,(
  ( ! [X118,X116,X117,X115] : (s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X115))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X116))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.bool.COND_3'(s(bool,sK13(X115,X116)),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X116))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X115))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X116))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.bool.COND_3'(s(bool,sK13(X115,X116)),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X116))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X115))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X116))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X117),s('type.num.num',X118))),s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X115))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X116))))))) = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK15(X117,sK8('const.bool.COND_3'(s(bool,sK13(X115,X116)),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X116))),s('type.clos_known.val_approx','const.clos_known.Other_0'))),X118,sK9('const.bool.COND_3'(s(bool,sK13(X115,X116)),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X116))),s('type.clos_known.val_approx','const.clos_known.Other_0'))))),s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X115))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X116))))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK13(X115,X116)),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X116))),s('type.clos_known.val_approx','const.clos_known.Other_0')))) )),
  inference(forward_demodulation,[],[f6141,f348])).
fof(f6141,plain,(
  ( ! [X118,X116,X117,X115] : (s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X115))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X116))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.bool.COND_3'(s(bool,sK13(X115,X116)),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X116))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X115))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X116))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X117),s('type.num.num',X118))),s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X115))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X116))))))) = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK15(X117,sK8('const.bool.COND_3'(s(bool,sK13(X115,X116)),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X116))),s('type.clos_known.val_approx','const.clos_known.Other_0'))),X118,sK9('const.bool.COND_3'(s(bool,sK13(X115,X116)),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X116))),s('type.clos_known.val_approx','const.clos_known.Other_0'))))),s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X115))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X116))))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) | s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK13(X115,X116)),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X116))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.bool.COND_3'(s(bool,sK13(X115,X116)),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X116))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK13(X115,X116)),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X116))),s('type.clos_known.val_approx','const.clos_known.Other_0')))) )),
  inference(forward_demodulation,[],[f6140,f348])).
fof(f6140,plain,(
  ( ! [X118,X116,X117,X115] : (s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X115))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X116))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X117),s('type.num.num',X118))),s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X115))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X116))))))) = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK15(X117,sK8('const.bool.COND_3'(s(bool,sK13(X115,X116)),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X116))),s('type.clos_known.val_approx','const.clos_known.Other_0'))),X118,sK9('const.bool.COND_3'(s(bool,sK13(X115,X116)),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X116))),s('type.clos_known.val_approx','const.clos_known.Other_0'))))),s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X115))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X116))))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) | s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK13(X115,X116)),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X116))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.bool.COND_3'(s(bool,sK13(X115,X116)),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X116))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK13(X115,X116)),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X116))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.bool.COND_3'(s(bool,sK13(X115,X116)),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X116))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK13(X115,X116)),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X116))),s('type.clos_known.val_approx','const.clos_known.Other_0')))) )),
  inference(forward_demodulation,[],[f6095,f348])).
fof(f6095,plain,(
  ( ! [X118,X116,X117,X115] : (s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X117),s('type.num.num',X118))),s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X115))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X116))))))) = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK15(X117,sK8('const.bool.COND_3'(s(bool,sK13(X115,X116)),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X116))),s('type.clos_known.val_approx','const.clos_known.Other_0'))),X118,sK9('const.bool.COND_3'(s(bool,sK13(X115,X116)),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X116))),s('type.clos_known.val_approx','const.clos_known.Other_0'))))),s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X115))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X116))))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK13(X115,X116)),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X116))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) | s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK13(X115,X116)),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X116))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.bool.COND_3'(s(bool,sK13(X115,X116)),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X116))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK13(X115,X116)),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X116))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.bool.COND_3'(s(bool,sK13(X115,X116)),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X116))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK13(X115,X116)),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X116))),s('type.clos_known.val_approx','const.clos_known.Other_0')))) )),
  inference(superposition,[],[f1752,f348])).
fof(f6094,plain,(
  ( ! [X111,X114,X112,X113] : (s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X113),s('type.num.num',X114))),s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X111))),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X112))))))) = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK15(X113,sK8('const.bool.COND_3'(s(bool,'F_0'),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X111),s('type.list.list'('type.clos_known.val_approx'),X112))))),s('type.clos_known.val_approx','const.clos_known.Other_0'))),X114,sK9('const.bool.COND_3'(s(bool,'F_0'),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X111),s('type.list.list'('type.clos_known.val_approx'),X112))))),s('type.clos_known.val_approx','const.clos_known.Other_0'))))),s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X111))),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X112))))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,'F_0'),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X111),s('type.list.list'('type.clos_known.val_approx'),X112))))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) | s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,'F_0'),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X111),s('type.list.list'('type.clos_known.val_approx'),X112))))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.bool.COND_3'(s(bool,'F_0'),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X111),s('type.list.list'('type.clos_known.val_approx'),X112))))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,'F_0'),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X111),s('type.list.list'('type.clos_known.val_approx'),X112))))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.bool.COND_3'(s(bool,'F_0'),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X111),s('type.list.list'('type.clos_known.val_approx'),X112))))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,'F_0'),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X111),s('type.list.list'('type.clos_known.val_approx'),X112))))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) | s(bool,'T_0') = s(bool,sK14(X111,X112))) )),
  inference(superposition,[],[f1752,f1725])).
fof(f6093,plain,(
  ( ! [X109,X107,X110,X108] : (s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X109),s('type.num.num',X110))),s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X108))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X107))))))) = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK15(X109,sK8('const.bool.COND_3'(s(bool,'F_0'),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X107))),s('type.clos_known.val_approx','const.clos_known.Other_0'))),X110,sK9('const.bool.COND_3'(s(bool,'F_0'),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X107))),s('type.clos_known.val_approx','const.clos_known.Other_0'))))),s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X108))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X107))))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,'F_0'),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X107))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) | s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,'F_0'),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X107))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.bool.COND_3'(s(bool,'F_0'),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X107))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,'F_0'),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X107))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.bool.COND_3'(s(bool,'F_0'),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X107))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,'F_0'),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X107))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) | s(bool,'T_0') = s(bool,sK13(X108,X107))) )),
  inference(superposition,[],[f1752,f1672])).
fof(f6139,plain,(
  ( ! [X103,X105,X106,X104] : (s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X103),s('type.clos_known.val_approx',X104))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X103),s('type.clos_known.val_approx',X104))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(happ(s(fun('type.clos_known.val_approx','type.clos_known.val_approx'),happ(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.clos_known.val_approx',X103))),s('type.clos_known.val_approx',X104)))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X103),s('type.clos_known.val_approx',X104))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(happ(s(fun('type.clos_known.val_approx','type.clos_known.val_approx'),happ(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.clos_known.val_approx',X103))),s('type.clos_known.val_approx',X104)))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X103),s('type.clos_known.val_approx',X104))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X105),s('type.num.num',X106))),s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X103),s('type.clos_known.val_approx',X104))))) = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK15(X105,sK8(happ(s(fun('type.clos_known.val_approx','type.clos_known.val_approx'),happ(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.clos_known.val_approx',X103))),s('type.clos_known.val_approx',X104))),X106,sK9(happ(s(fun('type.clos_known.val_approx','type.clos_known.val_approx'),happ(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.clos_known.val_approx',X103))),s('type.clos_known.val_approx',X104))))),s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X103),s('type.clos_known.val_approx',X104))),s('type.clos_known.val_approx','const.clos_known.Other_0')))) )),
  inference(forward_demodulation,[],[f6138,f319])).
fof(f6138,plain,(
  ( ! [X103,X105,X106,X104] : (s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X103),s('type.clos_known.val_approx',X104))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(happ(s(fun('type.clos_known.val_approx','type.clos_known.val_approx'),happ(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.clos_known.val_approx',X103))),s('type.clos_known.val_approx',X104)))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X103),s('type.clos_known.val_approx',X104))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(happ(s(fun('type.clos_known.val_approx','type.clos_known.val_approx'),happ(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.clos_known.val_approx',X103))),s('type.clos_known.val_approx',X104)))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X103),s('type.clos_known.val_approx',X104))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X105),s('type.num.num',X106))),s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X103),s('type.clos_known.val_approx',X104))))) = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK15(X105,sK8(happ(s(fun('type.clos_known.val_approx','type.clos_known.val_approx'),happ(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.clos_known.val_approx',X103))),s('type.clos_known.val_approx',X104))),X106,sK9(happ(s(fun('type.clos_known.val_approx','type.clos_known.val_approx'),happ(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.clos_known.val_approx',X103))),s('type.clos_known.val_approx',X104))))),s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X103),s('type.clos_known.val_approx',X104))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',happ(s(fun('type.clos_known.val_approx','type.clos_known.val_approx'),happ(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.clos_known.val_approx',X103))),s('type.clos_known.val_approx',X104)))) )),
  inference(forward_demodulation,[],[f6137,f319])).
fof(f6137,plain,(
  ( ! [X103,X105,X106,X104] : (s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X103),s('type.clos_known.val_approx',X104))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(happ(s(fun('type.clos_known.val_approx','type.clos_known.val_approx'),happ(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.clos_known.val_approx',X103))),s('type.clos_known.val_approx',X104)))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X103),s('type.clos_known.val_approx',X104))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X105),s('type.num.num',X106))),s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X103),s('type.clos_known.val_approx',X104))))) = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK15(X105,sK8(happ(s(fun('type.clos_known.val_approx','type.clos_known.val_approx'),happ(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.clos_known.val_approx',X103))),s('type.clos_known.val_approx',X104))),X106,sK9(happ(s(fun('type.clos_known.val_approx','type.clos_known.val_approx'),happ(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.clos_known.val_approx',X103))),s('type.clos_known.val_approx',X104))))),s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X103),s('type.clos_known.val_approx',X104))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) | s('type.clos_known.val_approx',happ(s(fun('type.clos_known.val_approx','type.clos_known.val_approx'),happ(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.clos_known.val_approx',X103))),s('type.clos_known.val_approx',X104))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(happ(s(fun('type.clos_known.val_approx','type.clos_known.val_approx'),happ(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.clos_known.val_approx',X103))),s('type.clos_known.val_approx',X104)))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',happ(s(fun('type.clos_known.val_approx','type.clos_known.val_approx'),happ(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.clos_known.val_approx',X103))),s('type.clos_known.val_approx',X104)))) )),
  inference(forward_demodulation,[],[f6136,f319])).
fof(f6136,plain,(
  ( ! [X103,X105,X106,X104] : (s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X103),s('type.clos_known.val_approx',X104))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X105),s('type.num.num',X106))),s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X103),s('type.clos_known.val_approx',X104))))) = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK15(X105,sK8(happ(s(fun('type.clos_known.val_approx','type.clos_known.val_approx'),happ(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.clos_known.val_approx',X103))),s('type.clos_known.val_approx',X104))),X106,sK9(happ(s(fun('type.clos_known.val_approx','type.clos_known.val_approx'),happ(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.clos_known.val_approx',X103))),s('type.clos_known.val_approx',X104))))),s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X103),s('type.clos_known.val_approx',X104))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) | s('type.clos_known.val_approx',happ(s(fun('type.clos_known.val_approx','type.clos_known.val_approx'),happ(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.clos_known.val_approx',X103))),s('type.clos_known.val_approx',X104))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(happ(s(fun('type.clos_known.val_approx','type.clos_known.val_approx'),happ(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.clos_known.val_approx',X103))),s('type.clos_known.val_approx',X104)))))) | s('type.clos_known.val_approx',happ(s(fun('type.clos_known.val_approx','type.clos_known.val_approx'),happ(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.clos_known.val_approx',X103))),s('type.clos_known.val_approx',X104))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(happ(s(fun('type.clos_known.val_approx','type.clos_known.val_approx'),happ(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.clos_known.val_approx',X103))),s('type.clos_known.val_approx',X104)))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',happ(s(fun('type.clos_known.val_approx','type.clos_known.val_approx'),happ(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.clos_known.val_approx',X103))),s('type.clos_known.val_approx',X104)))) )),
  inference(forward_demodulation,[],[f6092,f319])).
fof(f6092,plain,(
  ( ! [X103,X105,X106,X104] : (s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X105),s('type.num.num',X106))),s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X103),s('type.clos_known.val_approx',X104))))) = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK15(X105,sK8(happ(s(fun('type.clos_known.val_approx','type.clos_known.val_approx'),happ(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.clos_known.val_approx',X103))),s('type.clos_known.val_approx',X104))),X106,sK9(happ(s(fun('type.clos_known.val_approx','type.clos_known.val_approx'),happ(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.clos_known.val_approx',X103))),s('type.clos_known.val_approx',X104))))),s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X103),s('type.clos_known.val_approx',X104))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',happ(s(fun('type.clos_known.val_approx','type.clos_known.val_approx'),happ(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.clos_known.val_approx',X103))),s('type.clos_known.val_approx',X104))) | s('type.clos_known.val_approx',happ(s(fun('type.clos_known.val_approx','type.clos_known.val_approx'),happ(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.clos_known.val_approx',X103))),s('type.clos_known.val_approx',X104))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(happ(s(fun('type.clos_known.val_approx','type.clos_known.val_approx'),happ(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.clos_known.val_approx',X103))),s('type.clos_known.val_approx',X104)))))) | s('type.clos_known.val_approx',happ(s(fun('type.clos_known.val_approx','type.clos_known.val_approx'),happ(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.clos_known.val_approx',X103))),s('type.clos_known.val_approx',X104))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(happ(s(fun('type.clos_known.val_approx','type.clos_known.val_approx'),happ(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.clos_known.val_approx',X103))),s('type.clos_known.val_approx',X104)))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',happ(s(fun('type.clos_known.val_approx','type.clos_known.val_approx'),happ(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.clos_known.val_approx',X103))),s('type.clos_known.val_approx',X104)))) )),
  inference(superposition,[],[f1752,f319])).
fof(f6135,plain,(
  ( ! [X101,X102,X100] : (s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X100) | s('type.clos_known.val_approx',X100) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X100)))))) | s('type.clos_known.val_approx',X100) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X100)))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X100) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X101),s('type.num.num',X102))),s('type.clos_known.val_approx',X100))) = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK15(X101,sK8('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X100))),X102,sK9('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X100))))),s('type.clos_known.val_approx',X100),s('type.clos_known.val_approx','const.clos_known.Other_0')))) )),
  inference(forward_demodulation,[],[f6134,f254])).
fof(f6134,plain,(
  ( ! [X101,X102,X100] : (s('type.clos_known.val_approx',X100) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X100)))))) | s('type.clos_known.val_approx',X100) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X100)))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X100) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X101),s('type.num.num',X102))),s('type.clos_known.val_approx',X100))) = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK15(X101,sK8('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X100))),X102,sK9('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X100))))),s('type.clos_known.val_approx',X100),s('type.clos_known.val_approx','const.clos_known.Other_0'))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X100)))) )),
  inference(forward_demodulation,[],[f6133,f254])).
fof(f6133,plain,(
  ( ! [X101,X102,X100] : (s('type.clos_known.val_approx',X100) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X100)))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X100) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X101),s('type.num.num',X102))),s('type.clos_known.val_approx',X100))) = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK15(X101,sK8('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X100))),X102,sK9('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X100))))),s('type.clos_known.val_approx',X100),s('type.clos_known.val_approx','const.clos_known.Other_0'))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X100))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X100)))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X100)))) )),
  inference(forward_demodulation,[],[f6132,f254])).
fof(f6132,plain,(
  ( ! [X101,X102,X100] : (s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X100) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X101),s('type.num.num',X102))),s('type.clos_known.val_approx',X100))) = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK15(X101,sK8('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X100))),X102,sK9('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X100))))),s('type.clos_known.val_approx',X100),s('type.clos_known.val_approx','const.clos_known.Other_0'))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X100))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X100)))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X100))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X100)))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X100)))) )),
  inference(forward_demodulation,[],[f6091,f254])).
fof(f6091,plain,(
  ( ! [X101,X102,X100] : (s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X101),s('type.num.num',X102))),s('type.clos_known.val_approx',X100))) = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK15(X101,sK8('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X100))),X102,sK9('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X100))))),s('type.clos_known.val_approx',X100),s('type.clos_known.val_approx','const.clos_known.Other_0'))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X100))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X100))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X100)))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X100))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X100)))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X100)))) )),
  inference(superposition,[],[f1752,f254])).
fof(f6131,plain,(
  ( ! [X99,X97,X98] : (s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X97))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X97))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X97))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X97))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X97))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X97))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK15(X98,sK8('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X97))),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))),X99,sK9('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X97))),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X97))),s('type.clos_known.val_approx','const.clos_known.Other_0')))) )),
  inference(forward_demodulation,[],[f6130,f259])).
fof(f6130,plain,(
  ( ! [X99,X97,X98] : (s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X97))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X97))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X97))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X97))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X97))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK15(X98,sK8('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X97))),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))),X99,sK9('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X97))),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X97))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X97))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))) )),
  inference(forward_demodulation,[],[f6129,f259])).
fof(f6129,plain,(
  ( ! [X99,X97,X98] : (s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X97))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X97))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X97))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK15(X98,sK8('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X97))),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))),X99,sK9('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X97))),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X97))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X97))),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X97))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X97))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))) )),
  inference(forward_demodulation,[],[f6128,f259])).
fof(f6128,plain,(
  ( ! [X99,X97,X98] : (s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X97))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK15(X98,sK8('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X97))),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))),X99,sK9('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X97))),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X97))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X97))),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X97))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X97))),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X97))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X97))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))) )),
  inference(forward_demodulation,[],[f6127,f259])).
fof(f6127,plain,(
  ( ! [X99,X97,X98] : (s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK15(X98,sK8('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X97))),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))),X99,sK9('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X97))),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X97))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X97))),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X97))),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X97))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X97))),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X97))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X97))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))) )),
  inference(forward_demodulation,[],[f6090,f352])).
fof(f6090,plain,(
  ( ! [X99,X97,X98] : (s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X98),s('type.num.num',X99))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X97))))) = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK15(X98,sK8('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X97))),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))),X99,sK9('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X97))),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X97))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X97))),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X97))),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X97))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X97))),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X97))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X97))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))) )),
  inference(superposition,[],[f1752,f259])).
fof(f6089,plain,(
  ( ! [X94,X95,X93,X96] : (s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X95),s('type.num.num',X96))),s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,'F_0'),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X94))),s('type.clos_known.val_approx','const.clos_known.Other_0'))))) = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK15(X95,sK8('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X93))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X94))))),X96,sK9('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X93))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X94))))))),s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,'F_0'),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X94))),s('type.clos_known.val_approx','const.clos_known.Other_0'))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X93))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X94))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X93))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X94))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X93))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X94)))))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X93))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X94))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X93))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X94)))))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X93))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X94))))) | s(bool,'T_0') = s(bool,sK13(X93,X94))) )),
  inference(superposition,[],[f1752,f1672])).
fof(f6126,plain,(
  ( ! [X76,X74,X75] : (s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X74))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X74))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X74))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X74))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X74))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X74))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK15(X75,sK8('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X74))),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))),X76,sK9('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X74))),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))))),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X74))),s('type.clos_known.val_approx','const.clos_known.Other_0')))) )),
  inference(forward_demodulation,[],[f6125,f260])).
fof(f6125,plain,(
  ( ! [X76,X74,X75] : (s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X74))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X74))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X74))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X74))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X74))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK15(X75,sK8('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X74))),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))),X76,sK9('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X74))),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))))),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X74))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X74))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))) )),
  inference(forward_demodulation,[],[f6124,f260])).
fof(f6124,plain,(
  ( ! [X76,X74,X75] : (s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X74))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X74))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X74))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK15(X75,sK8('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X74))),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))),X76,sK9('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X74))),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))))),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X74))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X74))),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X74))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X74))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))) )),
  inference(forward_demodulation,[],[f6123,f260])).
fof(f6123,plain,(
  ( ! [X76,X74,X75] : (s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X74))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK15(X75,sK8('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X74))),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))),X76,sK9('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X74))),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))))),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X74))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X74))),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X74))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X74))),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X74))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X74))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))) )),
  inference(forward_demodulation,[],[f6122,f260])).
fof(f6122,plain,(
  ( ! [X76,X74,X75] : (s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK15(X75,sK8('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X74))),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))),X76,sK9('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X74))),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))))),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X74))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X74))),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X74))),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X74))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X74))),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X74))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X74))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))) )),
  inference(forward_demodulation,[],[f6084,f354])).
fof(f6084,plain,(
  ( ! [X76,X74,X75] : (s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X75),s('type.num.num',X76))),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X74))))) = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK15(X75,sK8('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X74))),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))),X76,sK9('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X74))),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))))),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X74))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X74))),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X74))),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X74))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X74))),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X74))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X74))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))) )),
  inference(superposition,[],[f1752,f260])).
fof(f6121,plain,(
  ( ! [X57,X54,X56,X55] : (s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X54),s('type.num.num',X55))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X54),s('type.num.num',X55))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X54),s('type.num.num',X55))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X54),s('type.num.num',X55))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X54),s('type.num.num',X55))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X54),s('type.num.num',X55))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X56),s('type.num.num',X57))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X54),s('type.num.num',X55))))) = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK15(X56,sK8('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X54),s('type.num.num',X55))),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))),X57,sK9('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X54),s('type.num.num',X55))),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X54),s('type.num.num',X55))),s('type.clos_known.val_approx','const.clos_known.Other_0')))) )),
  inference(forward_demodulation,[],[f6120,f318])).
fof(f6120,plain,(
  ( ! [X57,X54,X56,X55] : (s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X54),s('type.num.num',X55))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X54),s('type.num.num',X55))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X54),s('type.num.num',X55))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X54),s('type.num.num',X55))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X54),s('type.num.num',X55))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X56),s('type.num.num',X57))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X54),s('type.num.num',X55))))) = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK15(X56,sK8('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X54),s('type.num.num',X55))),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))),X57,sK9('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X54),s('type.num.num',X55))),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X54),s('type.num.num',X55))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X54),s('type.num.num',X55))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))) )),
  inference(forward_demodulation,[],[f6119,f318])).
fof(f6119,plain,(
  ( ! [X57,X54,X56,X55] : (s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X54),s('type.num.num',X55))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X54),s('type.num.num',X55))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X54),s('type.num.num',X55))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X56),s('type.num.num',X57))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X54),s('type.num.num',X55))))) = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK15(X56,sK8('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X54),s('type.num.num',X55))),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))),X57,sK9('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X54),s('type.num.num',X55))),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X54),s('type.num.num',X55))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X54),s('type.num.num',X55))),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X54),s('type.num.num',X55))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X54),s('type.num.num',X55))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))) )),
  inference(forward_demodulation,[],[f6118,f318])).
fof(f6118,plain,(
  ( ! [X57,X54,X56,X55] : (s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X54),s('type.num.num',X55))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X56),s('type.num.num',X57))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X54),s('type.num.num',X55))))) = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK15(X56,sK8('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X54),s('type.num.num',X55))),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))),X57,sK9('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X54),s('type.num.num',X55))),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X54),s('type.num.num',X55))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X54),s('type.num.num',X55))),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X54),s('type.num.num',X55))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X54),s('type.num.num',X55))),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X54),s('type.num.num',X55))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X54),s('type.num.num',X55))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))) )),
  inference(forward_demodulation,[],[f6079,f318])).
fof(f6079,plain,(
  ( ! [X57,X54,X56,X55] : (s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X56),s('type.num.num',X57))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X54),s('type.num.num',X55))))) = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK15(X56,sK8('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X54),s('type.num.num',X55))),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))),X57,sK9('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X54),s('type.num.num',X55))),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X54),s('type.num.num',X55))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X54),s('type.num.num',X55))),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X54),s('type.num.num',X55))),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X54),s('type.num.num',X55))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X54),s('type.num.num',X55))),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X54),s('type.num.num',X55))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X54),s('type.num.num',X55))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))) )),
  inference(superposition,[],[f1752,f318])).
fof(f6076,plain,(
  ( ! [X39,X43,X41,X38,X42,X40] : (s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X42),s('type.num.num',X43))),s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,'F_0'),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X40),s('type.num.num',X41))),s('type.clos_known.val_approx','const.clos_known.Other_0'))))) = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK15(X42,sK8('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X38),s('type.num.num',X39))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X40),s('type.num.num',X41))))),X43,sK9('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X38),s('type.num.num',X39))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X40),s('type.num.num',X41))))))),s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,'F_0'),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X40),s('type.num.num',X41))),s('type.clos_known.val_approx','const.clos_known.Other_0'))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X38),s('type.num.num',X39))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X40),s('type.num.num',X41))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X38),s('type.num.num',X39))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X40),s('type.num.num',X41))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X38),s('type.num.num',X39))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X40),s('type.num.num',X41)))))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X38),s('type.num.num',X39))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X40),s('type.num.num',X41))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X38),s('type.num.num',X39))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X40),s('type.num.num',X41)))))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X38),s('type.num.num',X39))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X40),s('type.num.num',X41))))) | s(bool,'T_0') = s(bool,sK15(X38,X40,X39,X41))) )),
  inference(superposition,[],[f1752,f1696])).
fof(f6068,plain,(
  ( ! [X14,X15,X16] : (s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X15),s('type.num.num',X16))),s('type.clos_known.val_approx',X14))) = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK15(X15,sK8('const.clos_known.merge_2'(s('type.clos_known.val_approx',X14),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))),X16,sK9('const.clos_known.merge_2'(s('type.clos_known.val_approx',X14),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))))),s('type.clos_known.val_approx',X14),s('type.clos_known.val_approx','const.clos_known.Other_0'))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X14),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X14),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.clos_known.merge_2'(s('type.clos_known.val_approx',X14),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X14),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.clos_known.merge_2'(s('type.clos_known.val_approx',X14),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X14),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X14) | s('type.clos_known.val_approx',X14) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(X14)))) | s('type.clos_known.val_approx',X14) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(X14)))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X14)) )),
  inference(superposition,[],[f1752,f1747])).
fof(f6064,plain,(
  ( ! [X2,X0,X1] : (s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X1),s('type.num.num',X2))),s('type.clos_known.val_approx',X0))) = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK15(X1,sK8('const.clos_known.Clos_2'(s('type.num.num',sK8(X0)),s('type.num.num',sK9(X0)))),X2,sK9('const.clos_known.Clos_2'(s('type.num.num',sK8(X0)),s('type.num.num',sK9(X0)))))),s('type.clos_known.val_approx',X0),s('type.clos_known.val_approx','const.clos_known.Other_0'))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8(X0)),s('type.num.num',sK9(X0)))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8(X0)),s('type.num.num',sK9(X0)))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.clos_known.Clos_2'(s('type.num.num',sK8(X0)),s('type.num.num',sK9(X0))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8(X0)),s('type.num.num',sK9(X0)))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.clos_known.Clos_2'(s('type.num.num',sK8(X0)),s('type.num.num',sK9(X0))))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8(X0)),s('type.num.num',sK9(X0)))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X0) | s('type.clos_known.val_approx',X0) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(X0)))) | s('type.clos_known.val_approx',X0) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(X0)))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X0)) )),
  inference(superposition,[],[f1752,f262])).
fof(f6061,plain,(
  ( ! [X10,X8,X11,X9] : (s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,X11),s('type.clos_known.val_approx',X9),s('type.clos_known.val_approx','const.clos_known.Other_0'))) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X8),s('type.num.num',X10))),s('type.clos_known.val_approx',X9))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X9) | s('type.clos_known.val_approx',X9) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(X9)))) | s('type.clos_known.val_approx',X9) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(X9)))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X9) | s(bool,'T_0') = s(bool,sK15(X8,sK8(X9),X10,sK9(X9))) | s(bool,'T_0') = s(bool,X11)) )),
  inference(superposition,[],[f1752,f518])).
fof(f6059,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,'T_0'),s('type.clos_known.val_approx',X1),s('type.clos_known.val_approx','const.clos_known.Other_0'))) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X0),s('type.num.num',X2))),s('type.clos_known.val_approx',X1))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X1) | s('type.clos_known.val_approx',X1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(X1)))) | s('type.clos_known.val_approx',X1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(X1)))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X1) | s(bool,X3) = s(bool,sK15(X0,sK8(X1),X2,sK9(X1))) | s(bool,'T_0') = s(bool,X3)) )),
  inference(superposition,[],[f1752,f518])).
fof(f5995,plain,(
  ( ! [X8] : (s('type.clos_known.val_approx','const.clos_known.Impossible_0') != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8(X8)),s('type.num.num',sK9(X8)))) | p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',X8),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X8) | s('type.clos_known.val_approx',X8) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(X8)))) | s('type.clos_known.val_approx',X8) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(X8)))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X8)) )),
  inference(superposition,[],[f1758,f318])).
fof(f5992,plain,(
  ( ! [X2,X3,X1] : (s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X2),s('type.num.num',X3))) != s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,'F_0'),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X2),s('type.num.num',X3))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) | p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',X1),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X2),s('type.num.num',X3)))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X1) | s('type.clos_known.val_approx',X1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(X1)))) | s('type.clos_known.val_approx',X1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(X1)))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X1) | s(bool,'T_0') = s(bool,sK15(sK8(X1),X2,sK9(X1),X3))) )),
  inference(superposition,[],[f1758,f1696])).
fof(f5987,plain,(
  ( ! [X83,X81,X82] : (s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X81))),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X82))))) != s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8(X83)),s('type.num.num',sK9(X83)))),s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X81))),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X82))))))) | p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',X83),s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,'F_0'),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X81),s('type.list.list'('type.clos_known.val_approx'),X82))))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X83) | s('type.clos_known.val_approx',X83) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(X83)))) | s('type.clos_known.val_approx',X83) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(X83)))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X83) | s(bool,'T_0') = s(bool,sK14(X81,X82))) )),
  inference(superposition,[],[f1758,f1725])).
fof(f5986,plain,(
  ( ! [X80,X78,X79] : (s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X79))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X78))))) != s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8(X80)),s('type.num.num',sK9(X80)))),s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X79))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X78))))))) | p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',X80),s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,'F_0'),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X78))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X80) | s('type.clos_known.val_approx',X80) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(X80)))) | s('type.clos_known.val_approx',X80) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(X80)))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X80) | s(bool,'T_0') = s(bool,sK13(X79,X78))) )),
  inference(superposition,[],[f1758,f1672])).
fof(f6041,plain,(
  ( ! [X72,X71] : (p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',X72),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X71)))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') != s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X71))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X72) | s('type.clos_known.val_approx',X72) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(X72)))) | s('type.clos_known.val_approx',X72) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(X72)))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X72)) )),
  inference(forward_demodulation,[],[f6040,f259])).
fof(f6040,plain,(
  ( ! [X72,X71] : (s('type.clos_known.val_approx','const.clos_known.Other_0') != s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X71))) | p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',X72),s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X71))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X72) | s('type.clos_known.val_approx',X72) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(X72)))) | s('type.clos_known.val_approx',X72) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(X72)))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X72)) )),
  inference(forward_demodulation,[],[f5983,f352])).
fof(f5983,plain,(
  ( ! [X72,X71] : (s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X71))) != s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8(X72)),s('type.num.num',sK9(X72)))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X71))))) | p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',X72),s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X71))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X72) | s('type.clos_known.val_approx',X72) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(X72)))) | s('type.clos_known.val_approx',X72) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(X72)))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X72)) )),
  inference(superposition,[],[f1758,f259])).
fof(f5982,plain,(
  ( ! [X70,X68,X69] : (s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,'F_0'),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X69))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) != s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8(X70)),s('type.num.num',sK9(X70)))),s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,'F_0'),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X69))),s('type.clos_known.val_approx','const.clos_known.Other_0'))))) | p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',X70),s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X68))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X69)))))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X70) | s('type.clos_known.val_approx',X70) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(X70)))) | s('type.clos_known.val_approx',X70) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(X70)))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X70) | s(bool,'T_0') = s(bool,sK13(X68,X69))) )),
  inference(superposition,[],[f1758,f1672])).
fof(f6033,plain,(
  ( ! [X57,X58,X56] : (p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',X58),s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X56))),s('type.clos_known.val_approx',X57)))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X58) | s('type.clos_known.val_approx',X58) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(X58)))) | s('type.clos_known.val_approx',X58) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(X58)))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X58) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X57) | s('type.clos_known.val_approx',X57) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(X57)))) | s('type.clos_known.val_approx',X57) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(X57)))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X57)) )),
  inference(subsumption_resolution,[],[f5978,f314])).
fof(f5978,plain,(
  ( ! [X57,X58,X56] : (s('type.clos_known.val_approx','const.clos_known.Other_0') != s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8(X58)),s('type.num.num',sK9(X58)))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) | p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',X58),s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X56))),s('type.clos_known.val_approx',X57)))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X58) | s('type.clos_known.val_approx',X58) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(X58)))) | s('type.clos_known.val_approx',X58) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(X58)))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X58) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X57) | s('type.clos_known.val_approx',X57) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(X57)))) | s('type.clos_known.val_approx',X57) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(X57)))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X57)) )),
  inference(superposition,[],[f1758,f1749])).
fof(f6032,plain,(
  ( ! [X54,X55] : (p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',X55),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X54)))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') != s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X54))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X55) | s('type.clos_known.val_approx',X55) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(X55)))) | s('type.clos_known.val_approx',X55) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(X55)))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X55)) )),
  inference(forward_demodulation,[],[f6031,f260])).
fof(f6031,plain,(
  ( ! [X54,X55] : (s('type.clos_known.val_approx','const.clos_known.Other_0') != s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X54))) | p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',X55),s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X54))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X55) | s('type.clos_known.val_approx',X55) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(X55)))) | s('type.clos_known.val_approx',X55) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(X55)))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X55)) )),
  inference(forward_demodulation,[],[f5977,f354])).
fof(f5977,plain,(
  ( ! [X54,X55] : (s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X54))) != s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8(X55)),s('type.num.num',sK9(X55)))),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X54))))) | p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',X55),s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X54))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X55) | s('type.clos_known.val_approx',X55) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(X55)))) | s('type.clos_known.val_approx',X55) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(X55)))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X55)) )),
  inference(superposition,[],[f1758,f260])).
fof(f6024,plain,(
  ( ! [X43,X44,X42] : (p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',X44),s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X42))),s('type.clos_known.val_approx',X43)))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X44) | s('type.clos_known.val_approx',X44) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(X44)))) | s('type.clos_known.val_approx',X44) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(X44)))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X44) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X43) | s('type.clos_known.val_approx',X43) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(X43)))) | s('type.clos_known.val_approx',X43) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(X43)))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X43)) )),
  inference(subsumption_resolution,[],[f5973,f314])).
fof(f5973,plain,(
  ( ! [X43,X44,X42] : (s('type.clos_known.val_approx','const.clos_known.Other_0') != s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8(X44)),s('type.num.num',sK9(X44)))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) | p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',X44),s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X42))),s('type.clos_known.val_approx',X43)))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X44) | s('type.clos_known.val_approx',X44) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(X44)))) | s('type.clos_known.val_approx',X44) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(X44)))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X44) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X43) | s('type.clos_known.val_approx',X43) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(X43)))) | s('type.clos_known.val_approx',X43) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(X43)))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X43)) )),
  inference(superposition,[],[f1758,f1751])).
fof(f5969,plain,(
  ( ! [X30,X28,X26,X29,X27] : (s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,'F_0'),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X28),s('type.num.num',X29))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) != s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8(X30)),s('type.num.num',sK9(X30)))),s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,'F_0'),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X28),s('type.num.num',X29))),s('type.clos_known.val_approx','const.clos_known.Other_0'))))) | p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',X30),s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X26),s('type.num.num',X27))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X28),s('type.num.num',X29)))))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X30) | s('type.clos_known.val_approx',X30) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(X30)))) | s('type.clos_known.val_approx',X30) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(X30)))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X30) | s(bool,'T_0') = s(bool,sK15(X26,X28,X27,X29))) )),
  inference(superposition,[],[f1758,f1696])).
fof(f6006,plain,(
  ( ! [X12,X13] : (p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',X13),s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx',X12)))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X13) | s('type.clos_known.val_approx',X13) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(X13)))) | s('type.clos_known.val_approx',X13) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(X13)))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X13) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X12) | s('type.clos_known.val_approx',X12) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(X12)))) | s('type.clos_known.val_approx',X12) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(X12)))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X12)) )),
  inference(subsumption_resolution,[],[f5962,f314])).
fof(f5962,plain,(
  ( ! [X12,X13] : (s('type.clos_known.val_approx','const.clos_known.Other_0') != s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8(X13)),s('type.num.num',sK9(X13)))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) | p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',X13),s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx',X12)))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X13) | s('type.clos_known.val_approx',X13) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(X13)))) | s('type.clos_known.val_approx',X13) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(X13)))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X13) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X12) | s('type.clos_known.val_approx',X12) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(X12)))) | s('type.clos_known.val_approx',X12) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(X12)))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X12)) )),
  inference(superposition,[],[f1758,f1746])).
fof(f5961,plain,(
  ( ! [X10,X11] : (s('type.clos_known.val_approx',X10) != s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8(X11)),s('type.num.num',sK9(X11)))),s('type.clos_known.val_approx',X10))) | p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',X11),s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X10),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X11) | s('type.clos_known.val_approx',X11) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(X11)))) | s('type.clos_known.val_approx',X11) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(X11)))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X11) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X10) | s('type.clos_known.val_approx',X10) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(X10)))) | s('type.clos_known.val_approx',X10) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(X10)))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X10)) )),
  inference(superposition,[],[f1758,f1747])).
fof(f6005,plain,(
  ( ! [X8,X7,X9] : (p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',X9),s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X7),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X8)))))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X9) | s('type.clos_known.val_approx',X9) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(X9)))) | s('type.clos_known.val_approx',X9) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(X9)))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X9) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X7) | s('type.clos_known.val_approx',X7) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(X7)))) | s('type.clos_known.val_approx',X7) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(X7)))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X7)) )),
  inference(subsumption_resolution,[],[f5960,f314])).
fof(f5960,plain,(
  ( ! [X8,X7,X9] : (s('type.clos_known.val_approx','const.clos_known.Other_0') != s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8(X9)),s('type.num.num',sK9(X9)))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) | p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',X9),s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X7),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X8)))))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X9) | s('type.clos_known.val_approx',X9) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(X9)))) | s('type.clos_known.val_approx',X9) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(X9)))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X9) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X7) | s('type.clos_known.val_approx',X7) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(X7)))) | s('type.clos_known.val_approx',X7) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(X7)))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X7)) )),
  inference(superposition,[],[f1758,f1748])).
fof(f6004,plain,(
  ( ! [X6,X4,X5] : (p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',X6),s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X4),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X5)))))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X6) | s('type.clos_known.val_approx',X6) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(X6)))) | s('type.clos_known.val_approx',X6) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(X6)))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X6) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X4) | s('type.clos_known.val_approx',X4) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(X4)))) | s('type.clos_known.val_approx',X4) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(X4)))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X4)) )),
  inference(subsumption_resolution,[],[f5959,f314])).
fof(f5959,plain,(
  ( ! [X6,X4,X5] : (s('type.clos_known.val_approx','const.clos_known.Other_0') != s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8(X6)),s('type.num.num',sK9(X6)))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) | p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',X6),s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X4),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X5)))))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X6) | s('type.clos_known.val_approx',X6) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(X6)))) | s('type.clos_known.val_approx',X6) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(X6)))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X6) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X4) | s('type.clos_known.val_approx',X4) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(X4)))) | s('type.clos_known.val_approx',X4) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(X4)))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X4)) )),
  inference(superposition,[],[f1758,f1750])).
fof(f6003,plain,(
  ( ! [X2,X3] : (p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',X3),s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X2),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X3) | s('type.clos_known.val_approx',X3) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(X3)))) | s('type.clos_known.val_approx',X3) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(X3)))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X3) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X2) | s('type.clos_known.val_approx',X2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(X2)))) | s('type.clos_known.val_approx',X2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(X2)))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X2)) )),
  inference(subsumption_resolution,[],[f5958,f314])).
fof(f5958,plain,(
  ( ! [X2,X3] : (s('type.clos_known.val_approx','const.clos_known.Other_0') != s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8(X3)),s('type.num.num',sK9(X3)))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) | p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',X3),s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X2),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X3) | s('type.clos_known.val_approx',X3) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(X3)))) | s('type.clos_known.val_approx',X3) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(X3)))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X3) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X2) | s('type.clos_known.val_approx',X2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(X2)))) | s('type.clos_known.val_approx',X2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(X2)))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X2)) )),
  inference(superposition,[],[f1758,f1745])).
fof(f5957,plain,(
  ( ! [X0,X1] : (s('type.clos_known.val_approx',X0) != s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8(X1)),s('type.num.num',sK9(X1)))),s('type.clos_known.val_approx',X0))) | p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',X1),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8(X0)),s('type.num.num',sK9(X0))))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X1) | s('type.clos_known.val_approx',X1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(X1)))) | s('type.clos_known.val_approx',X1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(X1)))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X1) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X0) | s('type.clos_known.val_approx',X0) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(X0)))) | s('type.clos_known.val_approx',X0) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(X0)))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X0)) )),
  inference(superposition,[],[f1758,f262])).
fof(f5947,plain,(
  ( ! [X2,X0,X1] : (s('type.clos_known.val_approx',X1) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8(X0)),s('type.num.num',sK9(X0)))),s('type.clos_known.val_approx',X1))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X0) | s('type.clos_known.val_approx',X0) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(X0)))) | s('type.clos_known.val_approx',X0) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(X0)))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X0) | s(bool,X2) = s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',X0),s('type.clos_known.val_approx',X1))) | s(bool,'T_0') = s(bool,X2)) )),
  inference(subsumption_resolution,[],[f5868,f245])).
fof(f5868,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'T_0')) | s('type.clos_known.val_approx',X1) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8(X0)),s('type.num.num',sK9(X0)))),s('type.clos_known.val_approx',X1))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X0) | s('type.clos_known.val_approx',X0) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(X0)))) | s('type.clos_known.val_approx',X0) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(X0)))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X0) | s(bool,X2) = s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',X0),s('type.clos_known.val_approx',X1))) | s(bool,'T_0') = s(bool,X2)) )),
  inference(superposition,[],[f1756,f518])).
fof(f5863,plain,(
  ( ! [X83,X81,X82] : (~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',X83),s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X81))),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X82)))))))) | s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,'F_0'),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X81),s('type.list.list'('type.clos_known.val_approx'),X82))))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8(X83)),s('type.num.num',sK9(X83)))),s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,'F_0'),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X81),s('type.list.list'('type.clos_known.val_approx'),X82))))),s('type.clos_known.val_approx','const.clos_known.Other_0'))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X83) | s('type.clos_known.val_approx',X83) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(X83)))) | s('type.clos_known.val_approx',X83) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(X83)))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X83) | s(bool,'T_0') = s(bool,sK14(X81,X82))) )),
  inference(superposition,[],[f1756,f1725])).
fof(f5862,plain,(
  ( ! [X80,X78,X79] : (~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',X80),s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X79))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X78)))))))) | s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,'F_0'),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X78))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8(X80)),s('type.num.num',sK9(X80)))),s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,'F_0'),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X78))),s('type.clos_known.val_approx','const.clos_known.Other_0'))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X80) | s('type.clos_known.val_approx',X80) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(X80)))) | s('type.clos_known.val_approx',X80) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(X80)))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X80) | s(bool,'T_0') = s(bool,sK13(X79,X78))) )),
  inference(superposition,[],[f1756,f1672])).
fof(f5858,plain,(
  ( ! [X70,X68,X69] : (~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',X70),s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,'F_0'),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X69))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X68))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X69))))) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8(X70)),s('type.num.num',sK9(X70)))),s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X68))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X69))))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X70) | s('type.clos_known.val_approx',X70) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(X70)))) | s('type.clos_known.val_approx',X70) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(X70)))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X70) | s(bool,'T_0') = s(bool,sK13(X68,X69))) )),
  inference(superposition,[],[f1756,f1672])).
fof(f5934,plain,(
  ( ! [X57,X58,X56] : (s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X56))),s('type.clos_known.val_approx',X57))) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8(X58)),s('type.num.num',sK9(X58)))),s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X56))),s('type.clos_known.val_approx',X57))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X58) | s('type.clos_known.val_approx',X58) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(X58)))) | s('type.clos_known.val_approx',X58) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(X58)))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X58) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X57) | s('type.clos_known.val_approx',X57) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(X57)))) | s('type.clos_known.val_approx',X57) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(X57)))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X57)) )),
  inference(subsumption_resolution,[],[f5854,f2929])).
fof(f5854,plain,(
  ( ! [X57,X58,X56] : (~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',X58),s('type.clos_known.val_approx','const.clos_known.Other_0')))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X56))),s('type.clos_known.val_approx',X57))) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8(X58)),s('type.num.num',sK9(X58)))),s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X56))),s('type.clos_known.val_approx',X57))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X58) | s('type.clos_known.val_approx',X58) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(X58)))) | s('type.clos_known.val_approx',X58) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(X58)))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X58) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X57) | s('type.clos_known.val_approx',X57) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(X57)))) | s('type.clos_known.val_approx',X57) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(X57)))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X57)) )),
  inference(superposition,[],[f1756,f1749])).
fof(f5926,plain,(
  ( ! [X43,X44,X42] : (s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X42))),s('type.clos_known.val_approx',X43))) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8(X44)),s('type.num.num',sK9(X44)))),s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X42))),s('type.clos_known.val_approx',X43))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X44) | s('type.clos_known.val_approx',X44) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(X44)))) | s('type.clos_known.val_approx',X44) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(X44)))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X44) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X43) | s('type.clos_known.val_approx',X43) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(X43)))) | s('type.clos_known.val_approx',X43) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(X43)))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X43)) )),
  inference(subsumption_resolution,[],[f5849,f2929])).
fof(f5849,plain,(
  ( ! [X43,X44,X42] : (~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',X44),s('type.clos_known.val_approx','const.clos_known.Other_0')))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X42))),s('type.clos_known.val_approx',X43))) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8(X44)),s('type.num.num',sK9(X44)))),s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X42))),s('type.clos_known.val_approx',X43))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X44) | s('type.clos_known.val_approx',X44) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(X44)))) | s('type.clos_known.val_approx',X44) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(X44)))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X44) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X43) | s('type.clos_known.val_approx',X43) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(X43)))) | s('type.clos_known.val_approx',X43) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(X43)))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X43)) )),
  inference(superposition,[],[f1756,f1751])).
fof(f5845,plain,(
  ( ! [X30,X28,X26,X29,X27] : (~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',X30),s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,'F_0'),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X28),s('type.num.num',X29))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X26),s('type.num.num',X27))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X28),s('type.num.num',X29))))) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8(X30)),s('type.num.num',sK9(X30)))),s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X26),s('type.num.num',X27))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X28),s('type.num.num',X29))))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X30) | s('type.clos_known.val_approx',X30) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(X30)))) | s('type.clos_known.val_approx',X30) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(X30)))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X30) | s(bool,'T_0') = s(bool,sK15(X26,X28,X27,X29))) )),
  inference(superposition,[],[f1756,f1696])).
fof(f5908,plain,(
  ( ! [X12,X13] : (s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx',X12))) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8(X13)),s('type.num.num',sK9(X13)))),s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx',X12))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X13) | s('type.clos_known.val_approx',X13) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(X13)))) | s('type.clos_known.val_approx',X13) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(X13)))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X13) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X12) | s('type.clos_known.val_approx',X12) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(X12)))) | s('type.clos_known.val_approx',X12) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(X12)))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X12)) )),
  inference(subsumption_resolution,[],[f5838,f2929])).
fof(f5838,plain,(
  ( ! [X12,X13] : (~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',X13),s('type.clos_known.val_approx','const.clos_known.Other_0')))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx',X12))) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8(X13)),s('type.num.num',sK9(X13)))),s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx',X12))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X13) | s('type.clos_known.val_approx',X13) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(X13)))) | s('type.clos_known.val_approx',X13) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(X13)))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X13) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X12) | s('type.clos_known.val_approx',X12) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(X12)))) | s('type.clos_known.val_approx',X12) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(X12)))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X12)) )),
  inference(superposition,[],[f1756,f1746])).
fof(f5837,plain,(
  ( ! [X10,X11] : (~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',X11),s('type.clos_known.val_approx',X10)))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X10),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8(X11)),s('type.num.num',sK9(X11)))),s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X10),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X11) | s('type.clos_known.val_approx',X11) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(X11)))) | s('type.clos_known.val_approx',X11) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(X11)))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X11) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X10) | s('type.clos_known.val_approx',X10) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(X10)))) | s('type.clos_known.val_approx',X10) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(X10)))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X10)) )),
  inference(superposition,[],[f1756,f1747])).
fof(f5907,plain,(
  ( ! [X8,X7,X9] : (s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X7),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X8))))) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8(X9)),s('type.num.num',sK9(X9)))),s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X7),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X8))))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X9) | s('type.clos_known.val_approx',X9) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(X9)))) | s('type.clos_known.val_approx',X9) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(X9)))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X9) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X7) | s('type.clos_known.val_approx',X7) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(X7)))) | s('type.clos_known.val_approx',X7) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(X7)))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X7)) )),
  inference(subsumption_resolution,[],[f5836,f2929])).
fof(f5836,plain,(
  ( ! [X8,X7,X9] : (~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',X9),s('type.clos_known.val_approx','const.clos_known.Other_0')))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X7),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X8))))) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8(X9)),s('type.num.num',sK9(X9)))),s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X7),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X8))))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X9) | s('type.clos_known.val_approx',X9) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(X9)))) | s('type.clos_known.val_approx',X9) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(X9)))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X9) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X7) | s('type.clos_known.val_approx',X7) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(X7)))) | s('type.clos_known.val_approx',X7) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(X7)))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X7)) )),
  inference(superposition,[],[f1756,f1748])).
fof(f5906,plain,(
  ( ! [X6,X4,X5] : (s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X4),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X5))))) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8(X6)),s('type.num.num',sK9(X6)))),s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X4),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X5))))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X6) | s('type.clos_known.val_approx',X6) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(X6)))) | s('type.clos_known.val_approx',X6) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(X6)))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X6) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X4) | s('type.clos_known.val_approx',X4) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(X4)))) | s('type.clos_known.val_approx',X4) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(X4)))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X4)) )),
  inference(subsumption_resolution,[],[f5835,f2929])).
fof(f5835,plain,(
  ( ! [X6,X4,X5] : (~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',X6),s('type.clos_known.val_approx','const.clos_known.Other_0')))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X4),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X5))))) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8(X6)),s('type.num.num',sK9(X6)))),s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X4),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X5))))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X6) | s('type.clos_known.val_approx',X6) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(X6)))) | s('type.clos_known.val_approx',X6) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(X6)))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X6) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X4) | s('type.clos_known.val_approx',X4) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(X4)))) | s('type.clos_known.val_approx',X4) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(X4)))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X4)) )),
  inference(superposition,[],[f1756,f1750])).
fof(f5905,plain,(
  ( ! [X2,X3] : (s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X2),s('type.clos_known.val_approx','const.clos_known.Other_0'))) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8(X3)),s('type.num.num',sK9(X3)))),s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X2),s('type.clos_known.val_approx','const.clos_known.Other_0'))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X3) | s('type.clos_known.val_approx',X3) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(X3)))) | s('type.clos_known.val_approx',X3) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(X3)))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X3) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X2) | s('type.clos_known.val_approx',X2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(X2)))) | s('type.clos_known.val_approx',X2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(X2)))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X2)) )),
  inference(subsumption_resolution,[],[f5834,f2929])).
fof(f5834,plain,(
  ( ! [X2,X3] : (~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',X3),s('type.clos_known.val_approx','const.clos_known.Other_0')))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X2),s('type.clos_known.val_approx','const.clos_known.Other_0'))) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8(X3)),s('type.num.num',sK9(X3)))),s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X2),s('type.clos_known.val_approx','const.clos_known.Other_0'))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X3) | s('type.clos_known.val_approx',X3) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(X3)))) | s('type.clos_known.val_approx',X3) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(X3)))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X3) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X2) | s('type.clos_known.val_approx',X2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(X2)))) | s('type.clos_known.val_approx',X2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(X2)))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X2)) )),
  inference(superposition,[],[f1756,f1745])).
fof(f5833,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',X1),s('type.clos_known.val_approx',X0)))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8(X0)),s('type.num.num',sK9(X0)))) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8(X1)),s('type.num.num',sK9(X1)))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8(X0)),s('type.num.num',sK9(X0)))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X1) | s('type.clos_known.val_approx',X1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(X1)))) | s('type.clos_known.val_approx',X1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(X1)))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X1) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X0) | s('type.clos_known.val_approx',X0) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(X0)))) | s('type.clos_known.val_approx',X0) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(X0)))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X0)) )),
  inference(superposition,[],[f1756,f262])).
fof(f5904,plain,(
  ( ! [X94,X92,X90,X93,X91] : (s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X90),s('type.num.num',X92))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X91),s('type.num.num',X93))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X90),s('type.num.num',X92))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X91),s('type.num.num',X93))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.bool.COND_3'(s(bool,sK15(X90,X91,X92,X93)),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X91),s('type.num.num',X93))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X90),s('type.num.num',X92))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X91),s('type.num.num',X93))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.bool.COND_3'(s(bool,sK15(X90,X91,X92,X93)),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X91),s('type.num.num',X93))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X90),s('type.num.num',X92))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X91),s('type.num.num',X93))))) | ~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X90),s('type.num.num',X92))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X91),s('type.num.num',X93))))),s('type.clos_known.val_approx',X94)))) | s('type.clos_known.val_approx',X94) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8('const.bool.COND_3'(s(bool,sK15(X90,X91,X92,X93)),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X91),s('type.num.num',X93))),s('type.clos_known.val_approx','const.clos_known.Other_0')))),s('type.num.num',sK9('const.bool.COND_3'(s(bool,sK15(X90,X91,X92,X93)),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X91),s('type.num.num',X93))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))),s('type.clos_known.val_approx',X94)))) )),
  inference(forward_demodulation,[],[f5903,f399])).
fof(f5903,plain,(
  ( ! [X94,X92,X90,X93,X91] : (s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X90),s('type.num.num',X92))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X91),s('type.num.num',X93))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.bool.COND_3'(s(bool,sK15(X90,X91,X92,X93)),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X91),s('type.num.num',X93))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X90),s('type.num.num',X92))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X91),s('type.num.num',X93))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.bool.COND_3'(s(bool,sK15(X90,X91,X92,X93)),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X91),s('type.num.num',X93))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X90),s('type.num.num',X92))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X91),s('type.num.num',X93))))) | ~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X90),s('type.num.num',X92))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X91),s('type.num.num',X93))))),s('type.clos_known.val_approx',X94)))) | s('type.clos_known.val_approx',X94) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8('const.bool.COND_3'(s(bool,sK15(X90,X91,X92,X93)),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X91),s('type.num.num',X93))),s('type.clos_known.val_approx','const.clos_known.Other_0')))),s('type.num.num',sK9('const.bool.COND_3'(s(bool,sK15(X90,X91,X92,X93)),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X91),s('type.num.num',X93))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))),s('type.clos_known.val_approx',X94))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK15(X90,X91,X92,X93)),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X91),s('type.num.num',X93))),s('type.clos_known.val_approx','const.clos_known.Other_0')))) )),
  inference(forward_demodulation,[],[f5902,f399])).
fof(f5902,plain,(
  ( ! [X94,X92,X90,X93,X91] : (s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X90),s('type.num.num',X92))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X91),s('type.num.num',X93))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.bool.COND_3'(s(bool,sK15(X90,X91,X92,X93)),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X91),s('type.num.num',X93))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X90),s('type.num.num',X92))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X91),s('type.num.num',X93))))) | ~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X90),s('type.num.num',X92))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X91),s('type.num.num',X93))))),s('type.clos_known.val_approx',X94)))) | s('type.clos_known.val_approx',X94) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8('const.bool.COND_3'(s(bool,sK15(X90,X91,X92,X93)),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X91),s('type.num.num',X93))),s('type.clos_known.val_approx','const.clos_known.Other_0')))),s('type.num.num',sK9('const.bool.COND_3'(s(bool,sK15(X90,X91,X92,X93)),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X91),s('type.num.num',X93))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))),s('type.clos_known.val_approx',X94))) | s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK15(X90,X91,X92,X93)),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X91),s('type.num.num',X93))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.bool.COND_3'(s(bool,sK15(X90,X91,X92,X93)),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X91),s('type.num.num',X93))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK15(X90,X91,X92,X93)),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X91),s('type.num.num',X93))),s('type.clos_known.val_approx','const.clos_known.Other_0')))) )),
  inference(forward_demodulation,[],[f5901,f399])).
fof(f5901,plain,(
  ( ! [X94,X92,X90,X93,X91] : (s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X90),s('type.num.num',X92))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X91),s('type.num.num',X93))))) | ~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X90),s('type.num.num',X92))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X91),s('type.num.num',X93))))),s('type.clos_known.val_approx',X94)))) | s('type.clos_known.val_approx',X94) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8('const.bool.COND_3'(s(bool,sK15(X90,X91,X92,X93)),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X91),s('type.num.num',X93))),s('type.clos_known.val_approx','const.clos_known.Other_0')))),s('type.num.num',sK9('const.bool.COND_3'(s(bool,sK15(X90,X91,X92,X93)),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X91),s('type.num.num',X93))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))),s('type.clos_known.val_approx',X94))) | s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK15(X90,X91,X92,X93)),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X91),s('type.num.num',X93))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.bool.COND_3'(s(bool,sK15(X90,X91,X92,X93)),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X91),s('type.num.num',X93))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK15(X90,X91,X92,X93)),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X91),s('type.num.num',X93))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.bool.COND_3'(s(bool,sK15(X90,X91,X92,X93)),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X91),s('type.num.num',X93))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK15(X90,X91,X92,X93)),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X91),s('type.num.num',X93))),s('type.clos_known.val_approx','const.clos_known.Other_0')))) )),
  inference(forward_demodulation,[],[f5832,f399])).
fof(f5832,plain,(
  ( ! [X94,X92,X90,X93,X91] : (~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X90),s('type.num.num',X92))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X91),s('type.num.num',X93))))),s('type.clos_known.val_approx',X94)))) | s('type.clos_known.val_approx',X94) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8('const.bool.COND_3'(s(bool,sK15(X90,X91,X92,X93)),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X91),s('type.num.num',X93))),s('type.clos_known.val_approx','const.clos_known.Other_0')))),s('type.num.num',sK9('const.bool.COND_3'(s(bool,sK15(X90,X91,X92,X93)),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X91),s('type.num.num',X93))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))),s('type.clos_known.val_approx',X94))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK15(X90,X91,X92,X93)),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X91),s('type.num.num',X93))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) | s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK15(X90,X91,X92,X93)),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X91),s('type.num.num',X93))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.bool.COND_3'(s(bool,sK15(X90,X91,X92,X93)),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X91),s('type.num.num',X93))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK15(X90,X91,X92,X93)),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X91),s('type.num.num',X93))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.bool.COND_3'(s(bool,sK15(X90,X91,X92,X93)),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X91),s('type.num.num',X93))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK15(X90,X91,X92,X93)),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X91),s('type.num.num',X93))),s('type.clos_known.val_approx','const.clos_known.Other_0')))) )),
  inference(superposition,[],[f1756,f399])).
fof(f5900,plain,(
  ( ! [X88,X87,X89] : (s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X87))),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X88))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X87))),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X88))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.bool.COND_3'(s(bool,sK14(X87,X88)),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X87),s('type.list.list'('type.clos_known.val_approx'),X88))))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X87))),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X88))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.bool.COND_3'(s(bool,sK14(X87,X88)),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X87),s('type.list.list'('type.clos_known.val_approx'),X88))))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X87))),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X88))))) | ~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X87))),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X88))))),s('type.clos_known.val_approx',X89)))) | s('type.clos_known.val_approx',X89) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8('const.bool.COND_3'(s(bool,sK14(X87,X88)),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X87),s('type.list.list'('type.clos_known.val_approx'),X88))))),s('type.clos_known.val_approx','const.clos_known.Other_0')))),s('type.num.num',sK9('const.bool.COND_3'(s(bool,sK14(X87,X88)),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X87),s('type.list.list'('type.clos_known.val_approx'),X88))))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))),s('type.clos_known.val_approx',X89)))) )),
  inference(forward_demodulation,[],[f5899,f410])).
fof(f5899,plain,(
  ( ! [X88,X87,X89] : (s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X87))),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X88))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.bool.COND_3'(s(bool,sK14(X87,X88)),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X87),s('type.list.list'('type.clos_known.val_approx'),X88))))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X87))),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X88))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.bool.COND_3'(s(bool,sK14(X87,X88)),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X87),s('type.list.list'('type.clos_known.val_approx'),X88))))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X87))),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X88))))) | ~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X87))),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X88))))),s('type.clos_known.val_approx',X89)))) | s('type.clos_known.val_approx',X89) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8('const.bool.COND_3'(s(bool,sK14(X87,X88)),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X87),s('type.list.list'('type.clos_known.val_approx'),X88))))),s('type.clos_known.val_approx','const.clos_known.Other_0')))),s('type.num.num',sK9('const.bool.COND_3'(s(bool,sK14(X87,X88)),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X87),s('type.list.list'('type.clos_known.val_approx'),X88))))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))),s('type.clos_known.val_approx',X89))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK14(X87,X88)),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X87),s('type.list.list'('type.clos_known.val_approx'),X88))))),s('type.clos_known.val_approx','const.clos_known.Other_0')))) )),
  inference(forward_demodulation,[],[f5898,f410])).
fof(f5898,plain,(
  ( ! [X88,X87,X89] : (s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X87))),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X88))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.bool.COND_3'(s(bool,sK14(X87,X88)),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X87),s('type.list.list'('type.clos_known.val_approx'),X88))))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X87))),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X88))))) | ~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X87))),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X88))))),s('type.clos_known.val_approx',X89)))) | s('type.clos_known.val_approx',X89) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8('const.bool.COND_3'(s(bool,sK14(X87,X88)),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X87),s('type.list.list'('type.clos_known.val_approx'),X88))))),s('type.clos_known.val_approx','const.clos_known.Other_0')))),s('type.num.num',sK9('const.bool.COND_3'(s(bool,sK14(X87,X88)),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X87),s('type.list.list'('type.clos_known.val_approx'),X88))))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))),s('type.clos_known.val_approx',X89))) | s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK14(X87,X88)),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X87),s('type.list.list'('type.clos_known.val_approx'),X88))))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.bool.COND_3'(s(bool,sK14(X87,X88)),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X87),s('type.list.list'('type.clos_known.val_approx'),X88))))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK14(X87,X88)),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X87),s('type.list.list'('type.clos_known.val_approx'),X88))))),s('type.clos_known.val_approx','const.clos_known.Other_0')))) )),
  inference(forward_demodulation,[],[f5897,f410])).
fof(f5897,plain,(
  ( ! [X88,X87,X89] : (s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X87))),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X88))))) | ~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X87))),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X88))))),s('type.clos_known.val_approx',X89)))) | s('type.clos_known.val_approx',X89) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8('const.bool.COND_3'(s(bool,sK14(X87,X88)),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X87),s('type.list.list'('type.clos_known.val_approx'),X88))))),s('type.clos_known.val_approx','const.clos_known.Other_0')))),s('type.num.num',sK9('const.bool.COND_3'(s(bool,sK14(X87,X88)),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X87),s('type.list.list'('type.clos_known.val_approx'),X88))))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))),s('type.clos_known.val_approx',X89))) | s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK14(X87,X88)),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X87),s('type.list.list'('type.clos_known.val_approx'),X88))))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.bool.COND_3'(s(bool,sK14(X87,X88)),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X87),s('type.list.list'('type.clos_known.val_approx'),X88))))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK14(X87,X88)),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X87),s('type.list.list'('type.clos_known.val_approx'),X88))))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.bool.COND_3'(s(bool,sK14(X87,X88)),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X87),s('type.list.list'('type.clos_known.val_approx'),X88))))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK14(X87,X88)),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X87),s('type.list.list'('type.clos_known.val_approx'),X88))))),s('type.clos_known.val_approx','const.clos_known.Other_0')))) )),
  inference(forward_demodulation,[],[f5831,f410])).
fof(f5831,plain,(
  ( ! [X88,X87,X89] : (~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X87))),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X88))))),s('type.clos_known.val_approx',X89)))) | s('type.clos_known.val_approx',X89) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8('const.bool.COND_3'(s(bool,sK14(X87,X88)),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X87),s('type.list.list'('type.clos_known.val_approx'),X88))))),s('type.clos_known.val_approx','const.clos_known.Other_0')))),s('type.num.num',sK9('const.bool.COND_3'(s(bool,sK14(X87,X88)),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X87),s('type.list.list'('type.clos_known.val_approx'),X88))))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))),s('type.clos_known.val_approx',X89))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK14(X87,X88)),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X87),s('type.list.list'('type.clos_known.val_approx'),X88))))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) | s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK14(X87,X88)),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X87),s('type.list.list'('type.clos_known.val_approx'),X88))))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.bool.COND_3'(s(bool,sK14(X87,X88)),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X87),s('type.list.list'('type.clos_known.val_approx'),X88))))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK14(X87,X88)),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X87),s('type.list.list'('type.clos_known.val_approx'),X88))))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.bool.COND_3'(s(bool,sK14(X87,X88)),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X87),s('type.list.list'('type.clos_known.val_approx'),X88))))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK14(X87,X88)),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X87),s('type.list.list'('type.clos_known.val_approx'),X88))))),s('type.clos_known.val_approx','const.clos_known.Other_0')))) )),
  inference(superposition,[],[f1756,f410])).
fof(f5896,plain,(
  ( ! [X85,X86,X84] : (s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X84))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X85))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X84))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X85))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.bool.COND_3'(s(bool,sK13(X84,X85)),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X85))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X84))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X85))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.bool.COND_3'(s(bool,sK13(X84,X85)),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X85))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X84))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X85))))) | ~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X84))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X85))))),s('type.clos_known.val_approx',X86)))) | s('type.clos_known.val_approx',X86) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8('const.bool.COND_3'(s(bool,sK13(X84,X85)),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X85))),s('type.clos_known.val_approx','const.clos_known.Other_0')))),s('type.num.num',sK9('const.bool.COND_3'(s(bool,sK13(X84,X85)),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X85))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))),s('type.clos_known.val_approx',X86)))) )),
  inference(forward_demodulation,[],[f5895,f348])).
fof(f5895,plain,(
  ( ! [X85,X86,X84] : (s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X84))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X85))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.bool.COND_3'(s(bool,sK13(X84,X85)),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X85))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X84))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X85))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.bool.COND_3'(s(bool,sK13(X84,X85)),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X85))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X84))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X85))))) | ~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X84))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X85))))),s('type.clos_known.val_approx',X86)))) | s('type.clos_known.val_approx',X86) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8('const.bool.COND_3'(s(bool,sK13(X84,X85)),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X85))),s('type.clos_known.val_approx','const.clos_known.Other_0')))),s('type.num.num',sK9('const.bool.COND_3'(s(bool,sK13(X84,X85)),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X85))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))),s('type.clos_known.val_approx',X86))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK13(X84,X85)),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X85))),s('type.clos_known.val_approx','const.clos_known.Other_0')))) )),
  inference(forward_demodulation,[],[f5894,f348])).
fof(f5894,plain,(
  ( ! [X85,X86,X84] : (s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X84))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X85))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.bool.COND_3'(s(bool,sK13(X84,X85)),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X85))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X84))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X85))))) | ~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X84))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X85))))),s('type.clos_known.val_approx',X86)))) | s('type.clos_known.val_approx',X86) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8('const.bool.COND_3'(s(bool,sK13(X84,X85)),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X85))),s('type.clos_known.val_approx','const.clos_known.Other_0')))),s('type.num.num',sK9('const.bool.COND_3'(s(bool,sK13(X84,X85)),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X85))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))),s('type.clos_known.val_approx',X86))) | s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK13(X84,X85)),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X85))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.bool.COND_3'(s(bool,sK13(X84,X85)),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X85))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK13(X84,X85)),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X85))),s('type.clos_known.val_approx','const.clos_known.Other_0')))) )),
  inference(forward_demodulation,[],[f5893,f348])).
fof(f5893,plain,(
  ( ! [X85,X86,X84] : (s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X84))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X85))))) | ~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X84))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X85))))),s('type.clos_known.val_approx',X86)))) | s('type.clos_known.val_approx',X86) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8('const.bool.COND_3'(s(bool,sK13(X84,X85)),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X85))),s('type.clos_known.val_approx','const.clos_known.Other_0')))),s('type.num.num',sK9('const.bool.COND_3'(s(bool,sK13(X84,X85)),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X85))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))),s('type.clos_known.val_approx',X86))) | s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK13(X84,X85)),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X85))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.bool.COND_3'(s(bool,sK13(X84,X85)),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X85))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK13(X84,X85)),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X85))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.bool.COND_3'(s(bool,sK13(X84,X85)),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X85))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK13(X84,X85)),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X85))),s('type.clos_known.val_approx','const.clos_known.Other_0')))) )),
  inference(forward_demodulation,[],[f5830,f348])).
fof(f5830,plain,(
  ( ! [X85,X86,X84] : (~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X84))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X85))))),s('type.clos_known.val_approx',X86)))) | s('type.clos_known.val_approx',X86) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8('const.bool.COND_3'(s(bool,sK13(X84,X85)),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X85))),s('type.clos_known.val_approx','const.clos_known.Other_0')))),s('type.num.num',sK9('const.bool.COND_3'(s(bool,sK13(X84,X85)),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X85))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))),s('type.clos_known.val_approx',X86))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK13(X84,X85)),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X85))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) | s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK13(X84,X85)),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X85))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.bool.COND_3'(s(bool,sK13(X84,X85)),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X85))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK13(X84,X85)),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X85))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.bool.COND_3'(s(bool,sK13(X84,X85)),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X85))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK13(X84,X85)),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X85))),s('type.clos_known.val_approx','const.clos_known.Other_0')))) )),
  inference(superposition,[],[f1756,f348])).
fof(f5829,plain,(
  ( ! [X83,X81,X82] : (~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X81))),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X82))))),s('type.clos_known.val_approx',X83)))) | s('type.clos_known.val_approx',X83) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8('const.bool.COND_3'(s(bool,'F_0'),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X81),s('type.list.list'('type.clos_known.val_approx'),X82))))),s('type.clos_known.val_approx','const.clos_known.Other_0')))),s('type.num.num',sK9('const.bool.COND_3'(s(bool,'F_0'),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X81),s('type.list.list'('type.clos_known.val_approx'),X82))))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))),s('type.clos_known.val_approx',X83))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,'F_0'),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X81),s('type.list.list'('type.clos_known.val_approx'),X82))))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) | s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,'F_0'),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X81),s('type.list.list'('type.clos_known.val_approx'),X82))))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.bool.COND_3'(s(bool,'F_0'),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X81),s('type.list.list'('type.clos_known.val_approx'),X82))))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,'F_0'),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X81),s('type.list.list'('type.clos_known.val_approx'),X82))))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.bool.COND_3'(s(bool,'F_0'),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X81),s('type.list.list'('type.clos_known.val_approx'),X82))))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,'F_0'),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X81),s('type.list.list'('type.clos_known.val_approx'),X82))))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) | s(bool,'T_0') = s(bool,sK14(X81,X82))) )),
  inference(superposition,[],[f1756,f1725])).
fof(f5828,plain,(
  ( ! [X80,X78,X79] : (~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X79))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X78))))),s('type.clos_known.val_approx',X80)))) | s('type.clos_known.val_approx',X80) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8('const.bool.COND_3'(s(bool,'F_0'),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X78))),s('type.clos_known.val_approx','const.clos_known.Other_0')))),s('type.num.num',sK9('const.bool.COND_3'(s(bool,'F_0'),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X78))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))),s('type.clos_known.val_approx',X80))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,'F_0'),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X78))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) | s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,'F_0'),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X78))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.bool.COND_3'(s(bool,'F_0'),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X78))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,'F_0'),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X78))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.bool.COND_3'(s(bool,'F_0'),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X78))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,'F_0'),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X78))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) | s(bool,'T_0') = s(bool,sK13(X79,X78))) )),
  inference(superposition,[],[f1756,f1672])).
fof(f5892,plain,(
  ( ! [X76,X77,X75] : (s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X75),s('type.clos_known.val_approx',X76))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X75),s('type.clos_known.val_approx',X76))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(happ(s(fun('type.clos_known.val_approx','type.clos_known.val_approx'),happ(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.clos_known.val_approx',X75))),s('type.clos_known.val_approx',X76)))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X75),s('type.clos_known.val_approx',X76))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(happ(s(fun('type.clos_known.val_approx','type.clos_known.val_approx'),happ(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.clos_known.val_approx',X75))),s('type.clos_known.val_approx',X76)))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X75),s('type.clos_known.val_approx',X76))) | ~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X75),s('type.clos_known.val_approx',X76))),s('type.clos_known.val_approx',X77)))) | s('type.clos_known.val_approx',X77) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8(happ(s(fun('type.clos_known.val_approx','type.clos_known.val_approx'),happ(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.clos_known.val_approx',X75))),s('type.clos_known.val_approx',X76)))),s('type.num.num',sK9(happ(s(fun('type.clos_known.val_approx','type.clos_known.val_approx'),happ(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.clos_known.val_approx',X75))),s('type.clos_known.val_approx',X76)))))),s('type.clos_known.val_approx',X77)))) )),
  inference(forward_demodulation,[],[f5891,f319])).
fof(f5891,plain,(
  ( ! [X76,X77,X75] : (s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X75),s('type.clos_known.val_approx',X76))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(happ(s(fun('type.clos_known.val_approx','type.clos_known.val_approx'),happ(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.clos_known.val_approx',X75))),s('type.clos_known.val_approx',X76)))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X75),s('type.clos_known.val_approx',X76))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(happ(s(fun('type.clos_known.val_approx','type.clos_known.val_approx'),happ(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.clos_known.val_approx',X75))),s('type.clos_known.val_approx',X76)))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X75),s('type.clos_known.val_approx',X76))) | ~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X75),s('type.clos_known.val_approx',X76))),s('type.clos_known.val_approx',X77)))) | s('type.clos_known.val_approx',X77) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8(happ(s(fun('type.clos_known.val_approx','type.clos_known.val_approx'),happ(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.clos_known.val_approx',X75))),s('type.clos_known.val_approx',X76)))),s('type.num.num',sK9(happ(s(fun('type.clos_known.val_approx','type.clos_known.val_approx'),happ(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.clos_known.val_approx',X75))),s('type.clos_known.val_approx',X76)))))),s('type.clos_known.val_approx',X77))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',happ(s(fun('type.clos_known.val_approx','type.clos_known.val_approx'),happ(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.clos_known.val_approx',X75))),s('type.clos_known.val_approx',X76)))) )),
  inference(forward_demodulation,[],[f5890,f319])).
fof(f5890,plain,(
  ( ! [X76,X77,X75] : (s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X75),s('type.clos_known.val_approx',X76))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(happ(s(fun('type.clos_known.val_approx','type.clos_known.val_approx'),happ(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.clos_known.val_approx',X75))),s('type.clos_known.val_approx',X76)))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X75),s('type.clos_known.val_approx',X76))) | ~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X75),s('type.clos_known.val_approx',X76))),s('type.clos_known.val_approx',X77)))) | s('type.clos_known.val_approx',X77) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8(happ(s(fun('type.clos_known.val_approx','type.clos_known.val_approx'),happ(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.clos_known.val_approx',X75))),s('type.clos_known.val_approx',X76)))),s('type.num.num',sK9(happ(s(fun('type.clos_known.val_approx','type.clos_known.val_approx'),happ(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.clos_known.val_approx',X75))),s('type.clos_known.val_approx',X76)))))),s('type.clos_known.val_approx',X77))) | s('type.clos_known.val_approx',happ(s(fun('type.clos_known.val_approx','type.clos_known.val_approx'),happ(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.clos_known.val_approx',X75))),s('type.clos_known.val_approx',X76))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(happ(s(fun('type.clos_known.val_approx','type.clos_known.val_approx'),happ(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.clos_known.val_approx',X75))),s('type.clos_known.val_approx',X76)))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',happ(s(fun('type.clos_known.val_approx','type.clos_known.val_approx'),happ(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.clos_known.val_approx',X75))),s('type.clos_known.val_approx',X76)))) )),
  inference(forward_demodulation,[],[f5889,f319])).
fof(f5889,plain,(
  ( ! [X76,X77,X75] : (s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X75),s('type.clos_known.val_approx',X76))) | ~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X75),s('type.clos_known.val_approx',X76))),s('type.clos_known.val_approx',X77)))) | s('type.clos_known.val_approx',X77) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8(happ(s(fun('type.clos_known.val_approx','type.clos_known.val_approx'),happ(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.clos_known.val_approx',X75))),s('type.clos_known.val_approx',X76)))),s('type.num.num',sK9(happ(s(fun('type.clos_known.val_approx','type.clos_known.val_approx'),happ(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.clos_known.val_approx',X75))),s('type.clos_known.val_approx',X76)))))),s('type.clos_known.val_approx',X77))) | s('type.clos_known.val_approx',happ(s(fun('type.clos_known.val_approx','type.clos_known.val_approx'),happ(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.clos_known.val_approx',X75))),s('type.clos_known.val_approx',X76))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(happ(s(fun('type.clos_known.val_approx','type.clos_known.val_approx'),happ(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.clos_known.val_approx',X75))),s('type.clos_known.val_approx',X76)))))) | s('type.clos_known.val_approx',happ(s(fun('type.clos_known.val_approx','type.clos_known.val_approx'),happ(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.clos_known.val_approx',X75))),s('type.clos_known.val_approx',X76))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(happ(s(fun('type.clos_known.val_approx','type.clos_known.val_approx'),happ(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.clos_known.val_approx',X75))),s('type.clos_known.val_approx',X76)))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',happ(s(fun('type.clos_known.val_approx','type.clos_known.val_approx'),happ(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.clos_known.val_approx',X75))),s('type.clos_known.val_approx',X76)))) )),
  inference(forward_demodulation,[],[f5827,f319])).
fof(f5827,plain,(
  ( ! [X76,X77,X75] : (~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X75),s('type.clos_known.val_approx',X76))),s('type.clos_known.val_approx',X77)))) | s('type.clos_known.val_approx',X77) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8(happ(s(fun('type.clos_known.val_approx','type.clos_known.val_approx'),happ(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.clos_known.val_approx',X75))),s('type.clos_known.val_approx',X76)))),s('type.num.num',sK9(happ(s(fun('type.clos_known.val_approx','type.clos_known.val_approx'),happ(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.clos_known.val_approx',X75))),s('type.clos_known.val_approx',X76)))))),s('type.clos_known.val_approx',X77))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',happ(s(fun('type.clos_known.val_approx','type.clos_known.val_approx'),happ(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.clos_known.val_approx',X75))),s('type.clos_known.val_approx',X76))) | s('type.clos_known.val_approx',happ(s(fun('type.clos_known.val_approx','type.clos_known.val_approx'),happ(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.clos_known.val_approx',X75))),s('type.clos_known.val_approx',X76))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(happ(s(fun('type.clos_known.val_approx','type.clos_known.val_approx'),happ(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.clos_known.val_approx',X75))),s('type.clos_known.val_approx',X76)))))) | s('type.clos_known.val_approx',happ(s(fun('type.clos_known.val_approx','type.clos_known.val_approx'),happ(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.clos_known.val_approx',X75))),s('type.clos_known.val_approx',X76))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(happ(s(fun('type.clos_known.val_approx','type.clos_known.val_approx'),happ(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.clos_known.val_approx',X75))),s('type.clos_known.val_approx',X76)))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',happ(s(fun('type.clos_known.val_approx','type.clos_known.val_approx'),happ(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.clos_known.val_approx',X75))),s('type.clos_known.val_approx',X76)))) )),
  inference(superposition,[],[f1756,f319])).
fof(f5888,plain,(
  ( ! [X74,X73] : (s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X73) | s('type.clos_known.val_approx',X73) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X73)))))) | s('type.clos_known.val_approx',X73) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X73)))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X73) | ~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',X73),s('type.clos_known.val_approx',X74)))) | s('type.clos_known.val_approx',X74) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X73)))),s('type.num.num',sK9('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X73)))))),s('type.clos_known.val_approx',X74)))) )),
  inference(forward_demodulation,[],[f5887,f254])).
fof(f5887,plain,(
  ( ! [X74,X73] : (s('type.clos_known.val_approx',X73) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X73)))))) | s('type.clos_known.val_approx',X73) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X73)))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X73) | ~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',X73),s('type.clos_known.val_approx',X74)))) | s('type.clos_known.val_approx',X74) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X73)))),s('type.num.num',sK9('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X73)))))),s('type.clos_known.val_approx',X74))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X73)))) )),
  inference(forward_demodulation,[],[f5886,f254])).
fof(f5886,plain,(
  ( ! [X74,X73] : (s('type.clos_known.val_approx',X73) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X73)))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X73) | ~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',X73),s('type.clos_known.val_approx',X74)))) | s('type.clos_known.val_approx',X74) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X73)))),s('type.num.num',sK9('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X73)))))),s('type.clos_known.val_approx',X74))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X73))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X73)))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X73)))) )),
  inference(forward_demodulation,[],[f5885,f254])).
fof(f5885,plain,(
  ( ! [X74,X73] : (s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X73) | ~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',X73),s('type.clos_known.val_approx',X74)))) | s('type.clos_known.val_approx',X74) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X73)))),s('type.num.num',sK9('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X73)))))),s('type.clos_known.val_approx',X74))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X73))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X73)))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X73))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X73)))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X73)))) )),
  inference(forward_demodulation,[],[f5826,f254])).
fof(f5826,plain,(
  ( ! [X74,X73] : (~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',X73),s('type.clos_known.val_approx',X74)))) | s('type.clos_known.val_approx',X74) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X73)))),s('type.num.num',sK9('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X73)))))),s('type.clos_known.val_approx',X74))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X73))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X73))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X73)))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X73))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X73)))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X73)))) )),
  inference(superposition,[],[f1756,f254])).
fof(f5884,plain,(
  ( ! [X72,X71] : (s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X71))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X71))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X71))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X71))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X71))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X71))) | ~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X71))),s('type.clos_known.val_approx',X72)))) | s('type.clos_known.val_approx',X72) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X71))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))),s('type.num.num',sK9('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X71))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))),s('type.clos_known.val_approx',X72)))) )),
  inference(forward_demodulation,[],[f5883,f259])).
fof(f5883,plain,(
  ( ! [X72,X71] : (s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X71))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X71))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X71))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X71))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X71))) | ~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X71))),s('type.clos_known.val_approx',X72)))) | s('type.clos_known.val_approx',X72) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X71))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))),s('type.num.num',sK9('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X71))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))),s('type.clos_known.val_approx',X72))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X71))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))) )),
  inference(forward_demodulation,[],[f5882,f259])).
fof(f5882,plain,(
  ( ! [X72,X71] : (s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X71))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X71))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X71))) | ~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X71))),s('type.clos_known.val_approx',X72)))) | s('type.clos_known.val_approx',X72) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X71))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))),s('type.num.num',sK9('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X71))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))),s('type.clos_known.val_approx',X72))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X71))),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X71))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X71))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))) )),
  inference(forward_demodulation,[],[f5881,f259])).
fof(f5881,plain,(
  ( ! [X72,X71] : (s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X71))) | ~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X71))),s('type.clos_known.val_approx',X72)))) | s('type.clos_known.val_approx',X72) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X71))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))),s('type.num.num',sK9('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X71))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))),s('type.clos_known.val_approx',X72))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X71))),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X71))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X71))),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X71))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X71))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))) )),
  inference(forward_demodulation,[],[f5825,f259])).
fof(f5825,plain,(
  ( ! [X72,X71] : (~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X71))),s('type.clos_known.val_approx',X72)))) | s('type.clos_known.val_approx',X72) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X71))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))),s('type.num.num',sK9('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X71))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))),s('type.clos_known.val_approx',X72))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X71))),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X71))),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X71))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X71))),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X71))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X71))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))) )),
  inference(superposition,[],[f1756,f259])).
fof(f5824,plain,(
  ( ! [X70,X68,X69] : (~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,'F_0'),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X69))),s('type.clos_known.val_approx','const.clos_known.Other_0'))),s('type.clos_known.val_approx',X70)))) | s('type.clos_known.val_approx',X70) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X68))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X69)))))),s('type.num.num',sK9('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X68))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X69)))))))),s('type.clos_known.val_approx',X70))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X68))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X69))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X68))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X69))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X68))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X69)))))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X68))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X69))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X68))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X69)))))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X68))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X69))))) | s(bool,'T_0') = s(bool,sK13(X68,X69))) )),
  inference(superposition,[],[f1756,f1672])).
fof(f5880,plain,(
  ( ! [X54,X55] : (s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X54))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X54))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X54))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X54))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X54))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X54))) | ~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X54))),s('type.clos_known.val_approx',X55)))) | s('type.clos_known.val_approx',X55) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X54))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))),s('type.num.num',sK9('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X54))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))),s('type.clos_known.val_approx',X55)))) )),
  inference(forward_demodulation,[],[f5879,f260])).
fof(f5879,plain,(
  ( ! [X54,X55] : (s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X54))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X54))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X54))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X54))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X54))) | ~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X54))),s('type.clos_known.val_approx',X55)))) | s('type.clos_known.val_approx',X55) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X54))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))),s('type.num.num',sK9('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X54))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))),s('type.clos_known.val_approx',X55))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X54))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))) )),
  inference(forward_demodulation,[],[f5878,f260])).
fof(f5878,plain,(
  ( ! [X54,X55] : (s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X54))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X54))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X54))) | ~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X54))),s('type.clos_known.val_approx',X55)))) | s('type.clos_known.val_approx',X55) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X54))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))),s('type.num.num',sK9('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X54))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))),s('type.clos_known.val_approx',X55))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X54))),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X54))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X54))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))) )),
  inference(forward_demodulation,[],[f5877,f260])).
fof(f5877,plain,(
  ( ! [X54,X55] : (s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X54))) | ~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X54))),s('type.clos_known.val_approx',X55)))) | s('type.clos_known.val_approx',X55) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X54))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))),s('type.num.num',sK9('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X54))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))),s('type.clos_known.val_approx',X55))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X54))),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X54))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X54))),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X54))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X54))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))) )),
  inference(forward_demodulation,[],[f5819,f260])).
fof(f5819,plain,(
  ( ! [X54,X55] : (~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X54))),s('type.clos_known.val_approx',X55)))) | s('type.clos_known.val_approx',X55) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X54))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))),s('type.num.num',sK9('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X54))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))),s('type.clos_known.val_approx',X55))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X54))),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X54))),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X54))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X54))),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X54))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X54))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))) )),
  inference(superposition,[],[f1756,f260])).
fof(f5876,plain,(
  ( ! [X39,X41,X40] : (s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X39),s('type.num.num',X40))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X39),s('type.num.num',X40))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X39),s('type.num.num',X40))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X39),s('type.num.num',X40))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X39),s('type.num.num',X40))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X39),s('type.num.num',X40))) | ~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X39),s('type.num.num',X40))),s('type.clos_known.val_approx',X41)))) | s('type.clos_known.val_approx',X41) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X39),s('type.num.num',X40))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))),s('type.num.num',sK9('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X39),s('type.num.num',X40))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))),s('type.clos_known.val_approx',X41)))) )),
  inference(forward_demodulation,[],[f5875,f318])).
fof(f5875,plain,(
  ( ! [X39,X41,X40] : (s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X39),s('type.num.num',X40))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X39),s('type.num.num',X40))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X39),s('type.num.num',X40))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X39),s('type.num.num',X40))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X39),s('type.num.num',X40))) | ~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X39),s('type.num.num',X40))),s('type.clos_known.val_approx',X41)))) | s('type.clos_known.val_approx',X41) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X39),s('type.num.num',X40))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))),s('type.num.num',sK9('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X39),s('type.num.num',X40))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))),s('type.clos_known.val_approx',X41))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X39),s('type.num.num',X40))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))) )),
  inference(forward_demodulation,[],[f5874,f318])).
fof(f5874,plain,(
  ( ! [X39,X41,X40] : (s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X39),s('type.num.num',X40))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X39),s('type.num.num',X40))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X39),s('type.num.num',X40))) | ~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X39),s('type.num.num',X40))),s('type.clos_known.val_approx',X41)))) | s('type.clos_known.val_approx',X41) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X39),s('type.num.num',X40))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))),s('type.num.num',sK9('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X39),s('type.num.num',X40))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))),s('type.clos_known.val_approx',X41))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X39),s('type.num.num',X40))),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X39),s('type.num.num',X40))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X39),s('type.num.num',X40))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))) )),
  inference(forward_demodulation,[],[f5873,f318])).
fof(f5873,plain,(
  ( ! [X39,X41,X40] : (s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X39),s('type.num.num',X40))) | ~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X39),s('type.num.num',X40))),s('type.clos_known.val_approx',X41)))) | s('type.clos_known.val_approx',X41) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X39),s('type.num.num',X40))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))),s('type.num.num',sK9('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X39),s('type.num.num',X40))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))),s('type.clos_known.val_approx',X41))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X39),s('type.num.num',X40))),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X39),s('type.num.num',X40))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X39),s('type.num.num',X40))),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X39),s('type.num.num',X40))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X39),s('type.num.num',X40))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))) )),
  inference(forward_demodulation,[],[f5814,f318])).
fof(f5814,plain,(
  ( ! [X39,X41,X40] : (~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X39),s('type.num.num',X40))),s('type.clos_known.val_approx',X41)))) | s('type.clos_known.val_approx',X41) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X39),s('type.num.num',X40))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))),s('type.num.num',sK9('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X39),s('type.num.num',X40))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))),s('type.clos_known.val_approx',X41))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X39),s('type.num.num',X40))),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X39),s('type.num.num',X40))),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X39),s('type.num.num',X40))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X39),s('type.num.num',X40))),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X39),s('type.num.num',X40))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X39),s('type.num.num',X40))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))) )),
  inference(superposition,[],[f1756,f318])).
fof(f5811,plain,(
  ( ! [X30,X28,X26,X29,X27] : (~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,'F_0'),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X28),s('type.num.num',X29))),s('type.clos_known.val_approx','const.clos_known.Other_0'))),s('type.clos_known.val_approx',X30)))) | s('type.clos_known.val_approx',X30) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X26),s('type.num.num',X27))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X28),s('type.num.num',X29)))))),s('type.num.num',sK9('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X26),s('type.num.num',X27))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X28),s('type.num.num',X29)))))))),s('type.clos_known.val_approx',X30))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X26),s('type.num.num',X27))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X28),s('type.num.num',X29))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X26),s('type.num.num',X27))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X28),s('type.num.num',X29))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X26),s('type.num.num',X27))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X28),s('type.num.num',X29)))))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X26),s('type.num.num',X27))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X28),s('type.num.num',X29))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X26),s('type.num.num',X27))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X28),s('type.num.num',X29)))))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X26),s('type.num.num',X27))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X28),s('type.num.num',X29))))) | s(bool,'T_0') = s(bool,sK15(X26,X28,X27,X29))) )),
  inference(superposition,[],[f1756,f1696])).
fof(f5803,plain,(
  ( ! [X10,X11] : (~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',X10),s('type.clos_known.val_approx',X11)))) | s('type.clos_known.val_approx',X11) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8('const.clos_known.merge_2'(s('type.clos_known.val_approx',X10),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))),s('type.num.num',sK9('const.clos_known.merge_2'(s('type.clos_known.val_approx',X10),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))),s('type.clos_known.val_approx',X11))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X10),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X10),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.clos_known.merge_2'(s('type.clos_known.val_approx',X10),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X10),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.clos_known.merge_2'(s('type.clos_known.val_approx',X10),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X10),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X10) | s('type.clos_known.val_approx',X10) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(X10)))) | s('type.clos_known.val_approx',X10) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(X10)))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X10)) )),
  inference(superposition,[],[f1756,f1747])).
fof(f5799,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',X0),s('type.clos_known.val_approx',X1)))) | s('type.clos_known.val_approx',X1) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8('const.clos_known.Clos_2'(s('type.num.num',sK8(X0)),s('type.num.num',sK9(X0))))),s('type.num.num',sK9('const.clos_known.Clos_2'(s('type.num.num',sK8(X0)),s('type.num.num',sK9(X0))))))),s('type.clos_known.val_approx',X1))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8(X0)),s('type.num.num',sK9(X0)))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8(X0)),s('type.num.num',sK9(X0)))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.clos_known.Clos_2'(s('type.num.num',sK8(X0)),s('type.num.num',sK9(X0))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8(X0)),s('type.num.num',sK9(X0)))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.clos_known.Clos_2'(s('type.num.num',sK8(X0)),s('type.num.num',sK9(X0))))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8(X0)),s('type.num.num',sK9(X0)))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X0) | s('type.clos_known.val_approx',X0) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(X0)))) | s('type.clos_known.val_approx',X0) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(X0)))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X0)) )),
  inference(superposition,[],[f1756,f262])).
fof(f5794,plain,(
  ( ! [X43,X41,X42] : (s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X43))),s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X41))),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X42))))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,'F_0'),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X41),s('type.list.list'('type.clos_known.val_approx'),X42))))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) | s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,'F_0'),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X41),s('type.list.list'('type.clos_known.val_approx'),X42))))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.bool.COND_3'(s(bool,'F_0'),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X41),s('type.list.list'('type.clos_known.val_approx'),X42))))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,'F_0'),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X41),s('type.list.list'('type.clos_known.val_approx'),X42))))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.bool.COND_3'(s(bool,'F_0'),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X41),s('type.list.list'('type.clos_known.val_approx'),X42))))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,'F_0'),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X41),s('type.list.list'('type.clos_known.val_approx'),X42))))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) | s(bool,'T_0') = s(bool,sK14(X41,X42))) )),
  inference(superposition,[],[f1751,f1725])).
fof(f5793,plain,(
  ( ! [X39,X38,X40] : (s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X38))),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X39))))),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X40))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,'F_0'),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X38),s('type.list.list'('type.clos_known.val_approx'),X39))))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) | s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,'F_0'),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X38),s('type.list.list'('type.clos_known.val_approx'),X39))))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.bool.COND_3'(s(bool,'F_0'),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X38),s('type.list.list'('type.clos_known.val_approx'),X39))))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,'F_0'),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X38),s('type.list.list'('type.clos_known.val_approx'),X39))))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.bool.COND_3'(s(bool,'F_0'),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X38),s('type.list.list'('type.clos_known.val_approx'),X39))))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,'F_0'),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X38),s('type.list.list'('type.clos_known.val_approx'),X39))))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) | s(bool,'T_0') = s(bool,sK14(X38,X39))) )),
  inference(superposition,[],[f1750,f1725])).
fof(f5792,plain,(
  ( ! [X37,X35,X36] : (s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X37))),s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X35))),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X36))))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,'F_0'),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X35),s('type.list.list'('type.clos_known.val_approx'),X36))))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) | s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,'F_0'),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X35),s('type.list.list'('type.clos_known.val_approx'),X36))))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.bool.COND_3'(s(bool,'F_0'),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X35),s('type.list.list'('type.clos_known.val_approx'),X36))))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,'F_0'),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X35),s('type.list.list'('type.clos_known.val_approx'),X36))))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.bool.COND_3'(s(bool,'F_0'),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X35),s('type.list.list'('type.clos_known.val_approx'),X36))))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,'F_0'),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X35),s('type.list.list'('type.clos_known.val_approx'),X36))))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) | s(bool,'T_0') = s(bool,sK14(X35,X36))) )),
  inference(superposition,[],[f1749,f1725])).
fof(f5791,plain,(
  ( ! [X33,X34,X32] : (s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X32))),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X33))))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X34))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,'F_0'),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X32),s('type.list.list'('type.clos_known.val_approx'),X33))))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) | s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,'F_0'),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X32),s('type.list.list'('type.clos_known.val_approx'),X33))))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.bool.COND_3'(s(bool,'F_0'),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X32),s('type.list.list'('type.clos_known.val_approx'),X33))))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,'F_0'),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X32),s('type.list.list'('type.clos_known.val_approx'),X33))))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.bool.COND_3'(s(bool,'F_0'),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X32),s('type.list.list'('type.clos_known.val_approx'),X33))))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,'F_0'),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X32),s('type.list.list'('type.clos_known.val_approx'),X33))))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) | s(bool,'T_0') = s(bool,sK14(X32,X33))) )),
  inference(superposition,[],[f1748,f1725])).
fof(f5790,plain,(
  ( ! [X30,X31] : (s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X30))),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X31))))) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X30))),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X31))))),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,'F_0'),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X30),s('type.list.list'('type.clos_known.val_approx'),X31))))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) | s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,'F_0'),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X30),s('type.list.list'('type.clos_known.val_approx'),X31))))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.bool.COND_3'(s(bool,'F_0'),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X30),s('type.list.list'('type.clos_known.val_approx'),X31))))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,'F_0'),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X30),s('type.list.list'('type.clos_known.val_approx'),X31))))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.bool.COND_3'(s(bool,'F_0'),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X30),s('type.list.list'('type.clos_known.val_approx'),X31))))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,'F_0'),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X30),s('type.list.list'('type.clos_known.val_approx'),X31))))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) | s(bool,'T_0') = s(bool,sK14(X30,X31))) )),
  inference(superposition,[],[f1747,f1725])).
fof(f5789,plain,(
  ( ! [X28,X29] : (s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X28))),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X29))))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,'F_0'),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X28),s('type.list.list'('type.clos_known.val_approx'),X29))))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) | s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,'F_0'),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X28),s('type.list.list'('type.clos_known.val_approx'),X29))))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.bool.COND_3'(s(bool,'F_0'),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X28),s('type.list.list'('type.clos_known.val_approx'),X29))))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,'F_0'),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X28),s('type.list.list'('type.clos_known.val_approx'),X29))))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.bool.COND_3'(s(bool,'F_0'),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X28),s('type.list.list'('type.clos_known.val_approx'),X29))))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,'F_0'),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X28),s('type.list.list'('type.clos_known.val_approx'),X29))))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) | s(bool,'T_0') = s(bool,sK14(X28,X29))) )),
  inference(superposition,[],[f1746,f1725])).
fof(f5788,plain,(
  ( ! [X26,X27] : (s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X26))),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X27))))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,'F_0'),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X26),s('type.list.list'('type.clos_known.val_approx'),X27))))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) | s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,'F_0'),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X26),s('type.list.list'('type.clos_known.val_approx'),X27))))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.bool.COND_3'(s(bool,'F_0'),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X26),s('type.list.list'('type.clos_known.val_approx'),X27))))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,'F_0'),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X26),s('type.list.list'('type.clos_known.val_approx'),X27))))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.bool.COND_3'(s(bool,'F_0'),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X26),s('type.list.list'('type.clos_known.val_approx'),X27))))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,'F_0'),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X26),s('type.list.list'('type.clos_known.val_approx'),X27))))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) | s(bool,'T_0') = s(bool,sK14(X26,X27))) )),
  inference(superposition,[],[f1745,f1725])).
fof(f5787,plain,(
  ( ! [X24,X23,X25] : (s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X23))),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X24))))) != s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X25),s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X23))),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X24))))))) | s(bool,'T_0') = s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',X25),s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,'F_0'),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X23),s('type.list.list'('type.clos_known.val_approx'),X24))))),s('type.clos_known.val_approx','const.clos_known.Other_0'))))) | s(bool,'T_0') = s(bool,sK14(X23,X24))) )),
  inference(superposition,[],[f1440,f1725])).
fof(f5786,plain,(
  ( ! [X21,X22,X20] : (s('type.clos_known.val_approx',X22) != s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X20))),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X21))))),s('type.clos_known.val_approx',X22))) | s(bool,'T_0') = s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,'F_0'),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X20),s('type.list.list'('type.clos_known.val_approx'),X21))))),s('type.clos_known.val_approx','const.clos_known.Other_0'))),s('type.clos_known.val_approx',X22))) | s(bool,'T_0') = s(bool,sK14(X20,X21))) )),
  inference(superposition,[],[f1440,f1725])).
fof(f5785,plain,(
  ( ! [X19,X17,X18] : (p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',X19),s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X17))),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X18)))))))) | s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,'F_0'),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X17),s('type.list.list'('type.clos_known.val_approx'),X18))))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) != s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X19),s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,'F_0'),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X17),s('type.list.list'('type.clos_known.val_approx'),X18))))),s('type.clos_known.val_approx','const.clos_known.Other_0'))))) | s(bool,'T_0') = s(bool,sK14(X17,X18))) )),
  inference(superposition,[],[f329,f1725])).
fof(f5784,plain,(
  ( ! [X14,X15,X16] : (p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X14))),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X15))))),s('type.clos_known.val_approx',X16)))) | s('type.clos_known.val_approx',X16) != s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,'F_0'),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X14),s('type.list.list'('type.clos_known.val_approx'),X15))))),s('type.clos_known.val_approx','const.clos_known.Other_0'))),s('type.clos_known.val_approx',X16))) | s(bool,'T_0') = s(bool,sK14(X14,X15))) )),
  inference(superposition,[],[f329,f1725])).
fof(f5783,plain,(
  ( ! [X12,X13,X11] : (~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',X13),s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X11))),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X12)))))))) | s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,'F_0'),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X11),s('type.list.list'('type.clos_known.val_approx'),X12))))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X13),s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,'F_0'),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X11),s('type.list.list'('type.clos_known.val_approx'),X12))))),s('type.clos_known.val_approx','const.clos_known.Other_0'))))) | s(bool,'T_0') = s(bool,sK14(X11,X12))) )),
  inference(superposition,[],[f328,f1725])).
fof(f5782,plain,(
  ( ! [X10,X8,X9] : (~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X8))),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X9))))),s('type.clos_known.val_approx',X10)))) | s('type.clos_known.val_approx',X10) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,'F_0'),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X8),s('type.list.list'('type.clos_known.val_approx'),X9))))),s('type.clos_known.val_approx','const.clos_known.Other_0'))),s('type.clos_known.val_approx',X10))) | s(bool,'T_0') = s(bool,sK14(X8,X9))) )),
  inference(superposition,[],[f328,f1725])).
fof(f5705,plain,(
  ( ! [X39,X38,X40] : (s('type.clos_known.val_approx','const.clos_known.Other_0') != s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X40),s('type.clos_known.val_approx','const.clos_known.Other_0'))) | s(bool,'T_0') = s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',X40),s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X38))),s('type.clos_known.val_approx',X39))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X39) | s('type.clos_known.val_approx',X39) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(X39)))) | s('type.clos_known.val_approx',X39) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(X39)))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X39)) )),
  inference(superposition,[],[f1440,f1751])).
fof(f5704,plain,(
  ( ! [X37,X35,X36] : (s('type.clos_known.val_approx',X37) != s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx',X37))) | s(bool,'T_0') = s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X35))),s('type.clos_known.val_approx',X36))),s('type.clos_known.val_approx',X37))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X36) | s('type.clos_known.val_approx',X36) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(X36)))) | s('type.clos_known.val_approx',X36) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(X36)))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X36)) )),
  inference(superposition,[],[f1440,f1751])).
fof(f5703,plain,(
  ( ! [X33,X34,X32] : (p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',X34),s('type.clos_known.val_approx','const.clos_known.Other_0')))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X32))),s('type.clos_known.val_approx',X33))) != s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X34),s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X32))),s('type.clos_known.val_approx',X33))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X33) | s('type.clos_known.val_approx',X33) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(X33)))) | s('type.clos_known.val_approx',X33) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(X33)))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X33)) )),
  inference(superposition,[],[f329,f1751])).
fof(f5702,plain,(
  ( ! [X30,X31,X29] : (p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx',X31)))) | s('type.clos_known.val_approx',X31) != s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X29))),s('type.clos_known.val_approx',X30))),s('type.clos_known.val_approx',X31))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X30) | s('type.clos_known.val_approx',X30) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(X30)))) | s('type.clos_known.val_approx',X30) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(X30)))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X30)) )),
  inference(superposition,[],[f329,f1751])).
fof(f5701,plain,(
  ( ! [X28,X26,X27] : (~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',X28),s('type.clos_known.val_approx','const.clos_known.Other_0')))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X26))),s('type.clos_known.val_approx',X27))) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X28),s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X26))),s('type.clos_known.val_approx',X27))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X27) | s('type.clos_known.val_approx',X27) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(X27)))) | s('type.clos_known.val_approx',X27) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(X27)))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X27)) )),
  inference(superposition,[],[f328,f1751])).
fof(f5700,plain,(
  ( ! [X24,X23,X25] : (~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx',X25)))) | s('type.clos_known.val_approx',X25) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X23))),s('type.clos_known.val_approx',X24))),s('type.clos_known.val_approx',X25))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X24) | s('type.clos_known.val_approx',X24) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(X24)))) | s('type.clos_known.val_approx',X24) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(X24)))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X24)) )),
  inference(superposition,[],[f328,f1751])).
fof(f5736,plain,(
  ( ! [X90,X88,X87,X91,X89] : (s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X87),s('type.num.num',X89))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X88),s('type.num.num',X90))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X87),s('type.num.num',X89))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X88),s('type.num.num',X90))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.bool.COND_3'(s(bool,sK15(X87,X88,X89,X90)),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X88),s('type.num.num',X90))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X87),s('type.num.num',X89))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X88),s('type.num.num',X90))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.bool.COND_3'(s(bool,sK15(X87,X88,X89,X90)),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X88),s('type.num.num',X90))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X87),s('type.num.num',X89))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X88),s('type.num.num',X90))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X91))),s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X87),s('type.num.num',X89))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X88),s('type.num.num',X90)))))))) )),
  inference(forward_demodulation,[],[f5735,f399])).
fof(f5735,plain,(
  ( ! [X90,X88,X87,X91,X89] : (s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X87),s('type.num.num',X89))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X88),s('type.num.num',X90))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.bool.COND_3'(s(bool,sK15(X87,X88,X89,X90)),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X88),s('type.num.num',X90))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X87),s('type.num.num',X89))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X88),s('type.num.num',X90))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.bool.COND_3'(s(bool,sK15(X87,X88,X89,X90)),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X88),s('type.num.num',X90))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X87),s('type.num.num',X89))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X88),s('type.num.num',X90))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X91))),s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X87),s('type.num.num',X89))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X88),s('type.num.num',X90))))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK15(X87,X88,X89,X90)),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X88),s('type.num.num',X90))),s('type.clos_known.val_approx','const.clos_known.Other_0')))) )),
  inference(forward_demodulation,[],[f5734,f399])).
fof(f5734,plain,(
  ( ! [X90,X88,X87,X91,X89] : (s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X87),s('type.num.num',X89))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X88),s('type.num.num',X90))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.bool.COND_3'(s(bool,sK15(X87,X88,X89,X90)),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X88),s('type.num.num',X90))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X87),s('type.num.num',X89))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X88),s('type.num.num',X90))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X91))),s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X87),s('type.num.num',X89))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X88),s('type.num.num',X90))))))) | s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK15(X87,X88,X89,X90)),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X88),s('type.num.num',X90))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.bool.COND_3'(s(bool,sK15(X87,X88,X89,X90)),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X88),s('type.num.num',X90))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK15(X87,X88,X89,X90)),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X88),s('type.num.num',X90))),s('type.clos_known.val_approx','const.clos_known.Other_0')))) )),
  inference(forward_demodulation,[],[f5733,f399])).
fof(f5733,plain,(
  ( ! [X90,X88,X87,X91,X89] : (s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X87),s('type.num.num',X89))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X88),s('type.num.num',X90))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X91))),s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X87),s('type.num.num',X89))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X88),s('type.num.num',X90))))))) | s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK15(X87,X88,X89,X90)),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X88),s('type.num.num',X90))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.bool.COND_3'(s(bool,sK15(X87,X88,X89,X90)),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X88),s('type.num.num',X90))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK15(X87,X88,X89,X90)),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X88),s('type.num.num',X90))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.bool.COND_3'(s(bool,sK15(X87,X88,X89,X90)),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X88),s('type.num.num',X90))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK15(X87,X88,X89,X90)),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X88),s('type.num.num',X90))),s('type.clos_known.val_approx','const.clos_known.Other_0')))) )),
  inference(forward_demodulation,[],[f5691,f399])).
fof(f5691,plain,(
  ( ! [X90,X88,X87,X91,X89] : (s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X91))),s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X87),s('type.num.num',X89))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X88),s('type.num.num',X90))))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK15(X87,X88,X89,X90)),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X88),s('type.num.num',X90))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) | s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK15(X87,X88,X89,X90)),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X88),s('type.num.num',X90))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.bool.COND_3'(s(bool,sK15(X87,X88,X89,X90)),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X88),s('type.num.num',X90))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK15(X87,X88,X89,X90)),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X88),s('type.num.num',X90))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.bool.COND_3'(s(bool,sK15(X87,X88,X89,X90)),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X88),s('type.num.num',X90))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK15(X87,X88,X89,X90)),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X88),s('type.num.num',X90))),s('type.clos_known.val_approx','const.clos_known.Other_0')))) )),
  inference(superposition,[],[f1751,f399])).
fof(f5732,plain,(
  ( ! [X85,X86,X84] : (s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X84))),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X85))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X84))),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X85))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.bool.COND_3'(s(bool,sK14(X84,X85)),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X84),s('type.list.list'('type.clos_known.val_approx'),X85))))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X84))),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X85))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.bool.COND_3'(s(bool,sK14(X84,X85)),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X84),s('type.list.list'('type.clos_known.val_approx'),X85))))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X84))),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X85))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X86))),s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X84))),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X85)))))))) )),
  inference(forward_demodulation,[],[f5731,f410])).
fof(f5731,plain,(
  ( ! [X85,X86,X84] : (s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X84))),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X85))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.bool.COND_3'(s(bool,sK14(X84,X85)),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X84),s('type.list.list'('type.clos_known.val_approx'),X85))))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X84))),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X85))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.bool.COND_3'(s(bool,sK14(X84,X85)),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X84),s('type.list.list'('type.clos_known.val_approx'),X85))))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X84))),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X85))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X86))),s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X84))),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X85))))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK14(X84,X85)),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X84),s('type.list.list'('type.clos_known.val_approx'),X85))))),s('type.clos_known.val_approx','const.clos_known.Other_0')))) )),
  inference(forward_demodulation,[],[f5730,f410])).
fof(f5730,plain,(
  ( ! [X85,X86,X84] : (s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X84))),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X85))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.bool.COND_3'(s(bool,sK14(X84,X85)),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X84),s('type.list.list'('type.clos_known.val_approx'),X85))))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X84))),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X85))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X86))),s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X84))),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X85))))))) | s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK14(X84,X85)),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X84),s('type.list.list'('type.clos_known.val_approx'),X85))))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.bool.COND_3'(s(bool,sK14(X84,X85)),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X84),s('type.list.list'('type.clos_known.val_approx'),X85))))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK14(X84,X85)),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X84),s('type.list.list'('type.clos_known.val_approx'),X85))))),s('type.clos_known.val_approx','const.clos_known.Other_0')))) )),
  inference(forward_demodulation,[],[f5729,f410])).
fof(f5729,plain,(
  ( ! [X85,X86,X84] : (s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X84))),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X85))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X86))),s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X84))),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X85))))))) | s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK14(X84,X85)),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X84),s('type.list.list'('type.clos_known.val_approx'),X85))))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.bool.COND_3'(s(bool,sK14(X84,X85)),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X84),s('type.list.list'('type.clos_known.val_approx'),X85))))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK14(X84,X85)),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X84),s('type.list.list'('type.clos_known.val_approx'),X85))))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.bool.COND_3'(s(bool,sK14(X84,X85)),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X84),s('type.list.list'('type.clos_known.val_approx'),X85))))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK14(X84,X85)),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X84),s('type.list.list'('type.clos_known.val_approx'),X85))))),s('type.clos_known.val_approx','const.clos_known.Other_0')))) )),
  inference(forward_demodulation,[],[f5690,f410])).
fof(f5690,plain,(
  ( ! [X85,X86,X84] : (s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X86))),s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X84))),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X85))))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK14(X84,X85)),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X84),s('type.list.list'('type.clos_known.val_approx'),X85))))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) | s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK14(X84,X85)),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X84),s('type.list.list'('type.clos_known.val_approx'),X85))))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.bool.COND_3'(s(bool,sK14(X84,X85)),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X84),s('type.list.list'('type.clos_known.val_approx'),X85))))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK14(X84,X85)),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X84),s('type.list.list'('type.clos_known.val_approx'),X85))))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.bool.COND_3'(s(bool,sK14(X84,X85)),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X84),s('type.list.list'('type.clos_known.val_approx'),X85))))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK14(X84,X85)),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X84),s('type.list.list'('type.clos_known.val_approx'),X85))))),s('type.clos_known.val_approx','const.clos_known.Other_0')))) )),
  inference(superposition,[],[f1751,f410])).
fof(f5728,plain,(
  ( ! [X83,X81,X82] : (s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X81))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X82))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X81))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X82))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.bool.COND_3'(s(bool,sK13(X81,X82)),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X82))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X81))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X82))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.bool.COND_3'(s(bool,sK13(X81,X82)),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X82))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X81))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X82))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X83))),s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X81))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X82)))))))) )),
  inference(forward_demodulation,[],[f5727,f348])).
fof(f5727,plain,(
  ( ! [X83,X81,X82] : (s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X81))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X82))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.bool.COND_3'(s(bool,sK13(X81,X82)),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X82))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X81))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X82))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.bool.COND_3'(s(bool,sK13(X81,X82)),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X82))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X81))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X82))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X83))),s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X81))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X82))))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK13(X81,X82)),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X82))),s('type.clos_known.val_approx','const.clos_known.Other_0')))) )),
  inference(forward_demodulation,[],[f5726,f348])).
fof(f5726,plain,(
  ( ! [X83,X81,X82] : (s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X81))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X82))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.bool.COND_3'(s(bool,sK13(X81,X82)),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X82))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X81))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X82))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X83))),s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X81))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X82))))))) | s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK13(X81,X82)),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X82))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.bool.COND_3'(s(bool,sK13(X81,X82)),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X82))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK13(X81,X82)),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X82))),s('type.clos_known.val_approx','const.clos_known.Other_0')))) )),
  inference(forward_demodulation,[],[f5725,f348])).
fof(f5725,plain,(
  ( ! [X83,X81,X82] : (s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X81))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X82))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X83))),s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X81))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X82))))))) | s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK13(X81,X82)),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X82))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.bool.COND_3'(s(bool,sK13(X81,X82)),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X82))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK13(X81,X82)),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X82))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.bool.COND_3'(s(bool,sK13(X81,X82)),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X82))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK13(X81,X82)),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X82))),s('type.clos_known.val_approx','const.clos_known.Other_0')))) )),
  inference(forward_demodulation,[],[f5689,f348])).
fof(f5689,plain,(
  ( ! [X83,X81,X82] : (s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X83))),s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X81))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X82))))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK13(X81,X82)),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X82))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) | s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK13(X81,X82)),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X82))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.bool.COND_3'(s(bool,sK13(X81,X82)),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X82))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK13(X81,X82)),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X82))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.bool.COND_3'(s(bool,sK13(X81,X82)),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X82))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK13(X81,X82)),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X82))),s('type.clos_known.val_approx','const.clos_known.Other_0')))) )),
  inference(superposition,[],[f1751,f348])).
fof(f5688,plain,(
  ( ! [X80,X78,X79] : (s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X80))),s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X79))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X78))))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,'F_0'),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X78))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) | s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,'F_0'),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X78))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.bool.COND_3'(s(bool,'F_0'),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X78))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,'F_0'),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X78))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.bool.COND_3'(s(bool,'F_0'),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X78))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,'F_0'),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X78))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) | s(bool,'T_0') = s(bool,sK13(X79,X78))) )),
  inference(superposition,[],[f1751,f1672])).
fof(f5724,plain,(
  ( ! [X76,X77,X75] : (s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X75),s('type.clos_known.val_approx',X76))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X75),s('type.clos_known.val_approx',X76))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(happ(s(fun('type.clos_known.val_approx','type.clos_known.val_approx'),happ(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.clos_known.val_approx',X75))),s('type.clos_known.val_approx',X76)))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X75),s('type.clos_known.val_approx',X76))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(happ(s(fun('type.clos_known.val_approx','type.clos_known.val_approx'),happ(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.clos_known.val_approx',X75))),s('type.clos_known.val_approx',X76)))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X75),s('type.clos_known.val_approx',X76))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X77))),s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X75),s('type.clos_known.val_approx',X76)))))) )),
  inference(forward_demodulation,[],[f5723,f319])).
fof(f5723,plain,(
  ( ! [X76,X77,X75] : (s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X75),s('type.clos_known.val_approx',X76))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(happ(s(fun('type.clos_known.val_approx','type.clos_known.val_approx'),happ(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.clos_known.val_approx',X75))),s('type.clos_known.val_approx',X76)))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X75),s('type.clos_known.val_approx',X76))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(happ(s(fun('type.clos_known.val_approx','type.clos_known.val_approx'),happ(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.clos_known.val_approx',X75))),s('type.clos_known.val_approx',X76)))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X75),s('type.clos_known.val_approx',X76))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X77))),s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X75),s('type.clos_known.val_approx',X76))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',happ(s(fun('type.clos_known.val_approx','type.clos_known.val_approx'),happ(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.clos_known.val_approx',X75))),s('type.clos_known.val_approx',X76)))) )),
  inference(forward_demodulation,[],[f5722,f319])).
fof(f5722,plain,(
  ( ! [X76,X77,X75] : (s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X75),s('type.clos_known.val_approx',X76))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(happ(s(fun('type.clos_known.val_approx','type.clos_known.val_approx'),happ(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.clos_known.val_approx',X75))),s('type.clos_known.val_approx',X76)))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X75),s('type.clos_known.val_approx',X76))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X77))),s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X75),s('type.clos_known.val_approx',X76))))) | s('type.clos_known.val_approx',happ(s(fun('type.clos_known.val_approx','type.clos_known.val_approx'),happ(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.clos_known.val_approx',X75))),s('type.clos_known.val_approx',X76))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(happ(s(fun('type.clos_known.val_approx','type.clos_known.val_approx'),happ(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.clos_known.val_approx',X75))),s('type.clos_known.val_approx',X76)))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',happ(s(fun('type.clos_known.val_approx','type.clos_known.val_approx'),happ(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.clos_known.val_approx',X75))),s('type.clos_known.val_approx',X76)))) )),
  inference(forward_demodulation,[],[f5721,f319])).
fof(f5721,plain,(
  ( ! [X76,X77,X75] : (s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X75),s('type.clos_known.val_approx',X76))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X77))),s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X75),s('type.clos_known.val_approx',X76))))) | s('type.clos_known.val_approx',happ(s(fun('type.clos_known.val_approx','type.clos_known.val_approx'),happ(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.clos_known.val_approx',X75))),s('type.clos_known.val_approx',X76))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(happ(s(fun('type.clos_known.val_approx','type.clos_known.val_approx'),happ(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.clos_known.val_approx',X75))),s('type.clos_known.val_approx',X76)))))) | s('type.clos_known.val_approx',happ(s(fun('type.clos_known.val_approx','type.clos_known.val_approx'),happ(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.clos_known.val_approx',X75))),s('type.clos_known.val_approx',X76))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(happ(s(fun('type.clos_known.val_approx','type.clos_known.val_approx'),happ(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.clos_known.val_approx',X75))),s('type.clos_known.val_approx',X76)))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',happ(s(fun('type.clos_known.val_approx','type.clos_known.val_approx'),happ(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.clos_known.val_approx',X75))),s('type.clos_known.val_approx',X76)))) )),
  inference(forward_demodulation,[],[f5687,f319])).
fof(f5687,plain,(
  ( ! [X76,X77,X75] : (s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X77))),s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X75),s('type.clos_known.val_approx',X76))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',happ(s(fun('type.clos_known.val_approx','type.clos_known.val_approx'),happ(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.clos_known.val_approx',X75))),s('type.clos_known.val_approx',X76))) | s('type.clos_known.val_approx',happ(s(fun('type.clos_known.val_approx','type.clos_known.val_approx'),happ(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.clos_known.val_approx',X75))),s('type.clos_known.val_approx',X76))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(happ(s(fun('type.clos_known.val_approx','type.clos_known.val_approx'),happ(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.clos_known.val_approx',X75))),s('type.clos_known.val_approx',X76)))))) | s('type.clos_known.val_approx',happ(s(fun('type.clos_known.val_approx','type.clos_known.val_approx'),happ(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.clos_known.val_approx',X75))),s('type.clos_known.val_approx',X76))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(happ(s(fun('type.clos_known.val_approx','type.clos_known.val_approx'),happ(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.clos_known.val_approx',X75))),s('type.clos_known.val_approx',X76)))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',happ(s(fun('type.clos_known.val_approx','type.clos_known.val_approx'),happ(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.clos_known.val_approx',X75))),s('type.clos_known.val_approx',X76)))) )),
  inference(superposition,[],[f1751,f319])).
fof(f5720,plain,(
  ( ! [X74,X73] : (s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X73) | s('type.clos_known.val_approx',X73) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X73)))))) | s('type.clos_known.val_approx',X73) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X73)))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X73) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X74))),s('type.clos_known.val_approx',X73)))) )),
  inference(forward_demodulation,[],[f5719,f254])).
fof(f5719,plain,(
  ( ! [X74,X73] : (s('type.clos_known.val_approx',X73) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X73)))))) | s('type.clos_known.val_approx',X73) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X73)))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X73) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X74))),s('type.clos_known.val_approx',X73))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X73)))) )),
  inference(forward_demodulation,[],[f5718,f254])).
fof(f5718,plain,(
  ( ! [X74,X73] : (s('type.clos_known.val_approx',X73) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X73)))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X73) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X74))),s('type.clos_known.val_approx',X73))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X73))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X73)))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X73)))) )),
  inference(forward_demodulation,[],[f5717,f254])).
fof(f5717,plain,(
  ( ! [X74,X73] : (s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X73) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X74))),s('type.clos_known.val_approx',X73))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X73))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X73)))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X73))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X73)))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X73)))) )),
  inference(forward_demodulation,[],[f5686,f254])).
fof(f5686,plain,(
  ( ! [X74,X73] : (s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X74))),s('type.clos_known.val_approx',X73))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X73))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X73))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X73)))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X73))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X73)))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X73)))) )),
  inference(superposition,[],[f1751,f254])).
fof(f5684,plain,(
  ( ! [X70,X68,X69] : (s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X70))),s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,'F_0'),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X69))),s('type.clos_known.val_approx','const.clos_known.Other_0'))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X68))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X69))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X68))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X69))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X68))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X69)))))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X68))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X69))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X68))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X69)))))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X68))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X69))))) | s(bool,'T_0') = s(bool,sK13(X68,X69))) )),
  inference(superposition,[],[f1751,f1672])).
fof(f5716,plain,(
  ( ! [X54,X55] : (s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X54))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X54))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X54))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X54))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X54))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X54))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X55))),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X54)))))) )),
  inference(forward_demodulation,[],[f5715,f260])).
fof(f5715,plain,(
  ( ! [X54,X55] : (s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X54))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X54))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X54))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X54))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X54))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X55))),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X54))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X54))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))) )),
  inference(forward_demodulation,[],[f5714,f260])).
fof(f5714,plain,(
  ( ! [X54,X55] : (s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X54))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X54))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X54))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X55))),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X54))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X54))),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X54))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X54))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))) )),
  inference(forward_demodulation,[],[f5713,f260])).
fof(f5713,plain,(
  ( ! [X54,X55] : (s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X54))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X55))),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X54))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X54))),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X54))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X54))),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X54))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X54))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))) )),
  inference(forward_demodulation,[],[f5679,f260])).
fof(f5679,plain,(
  ( ! [X54,X55] : (s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X55))),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X54))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X54))),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X54))),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X54))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X54))),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X54))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X54))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))) )),
  inference(superposition,[],[f1751,f260])).
fof(f5671,plain,(
  ( ! [X30,X28,X26,X29,X27] : (s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X30))),s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,'F_0'),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X28),s('type.num.num',X29))),s('type.clos_known.val_approx','const.clos_known.Other_0'))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X26),s('type.num.num',X27))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X28),s('type.num.num',X29))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X26),s('type.num.num',X27))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X28),s('type.num.num',X29))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X26),s('type.num.num',X27))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X28),s('type.num.num',X29)))))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X26),s('type.num.num',X27))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X28),s('type.num.num',X29))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X26),s('type.num.num',X27))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X28),s('type.num.num',X29)))))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X26),s('type.num.num',X27))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X28),s('type.num.num',X29))))) | s(bool,'T_0') = s(bool,sK15(X26,X28,X27,X29))) )),
  inference(superposition,[],[f1751,f1696])).
fof(f5618,plain,(
  ( ! [X37,X35,X36] : (s('type.clos_known.val_approx','const.clos_known.Other_0') != s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X37),s('type.clos_known.val_approx','const.clos_known.Other_0'))) | s(bool,'T_0') = s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',X37),s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X35),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X36))))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X35) | s('type.clos_known.val_approx',X35) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(X35)))) | s('type.clos_known.val_approx',X35) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(X35)))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X35)) )),
  inference(superposition,[],[f1440,f1750])).
fof(f5617,plain,(
  ( ! [X33,X34,X32] : (s('type.clos_known.val_approx',X34) != s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx',X34))) | s(bool,'T_0') = s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X32),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X33))))),s('type.clos_known.val_approx',X34))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X32) | s('type.clos_known.val_approx',X32) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(X32)))) | s('type.clos_known.val_approx',X32) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(X32)))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X32)) )),
  inference(superposition,[],[f1440,f1750])).
fof(f5616,plain,(
  ( ! [X30,X31,X29] : (p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',X31),s('type.clos_known.val_approx','const.clos_known.Other_0')))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X29),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X30))))) != s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X31),s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X29),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X30))))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X29) | s('type.clos_known.val_approx',X29) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(X29)))) | s('type.clos_known.val_approx',X29) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(X29)))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X29)) )),
  inference(superposition,[],[f329,f1750])).
fof(f5615,plain,(
  ( ! [X28,X26,X27] : (p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx',X28)))) | s('type.clos_known.val_approx',X28) != s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X26),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X27))))),s('type.clos_known.val_approx',X28))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X26) | s('type.clos_known.val_approx',X26) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(X26)))) | s('type.clos_known.val_approx',X26) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(X26)))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X26)) )),
  inference(superposition,[],[f329,f1750])).
fof(f5614,plain,(
  ( ! [X24,X23,X25] : (~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',X25),s('type.clos_known.val_approx','const.clos_known.Other_0')))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X23),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X24))))) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X25),s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X23),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X24))))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X23) | s('type.clos_known.val_approx',X23) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(X23)))) | s('type.clos_known.val_approx',X23) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(X23)))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X23)) )),
  inference(superposition,[],[f328,f1750])).
fof(f5613,plain,(
  ( ! [X21,X22,X20] : (~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx',X22)))) | s('type.clos_known.val_approx',X22) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X20),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X21))))),s('type.clos_known.val_approx',X22))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X20) | s('type.clos_known.val_approx',X20) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(X20)))) | s('type.clos_known.val_approx',X20) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(X20)))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X20)) )),
  inference(superposition,[],[f328,f1750])).
fof(f5608,plain,(
  ( ! [X0,X1] : (s('type.clos_known.val_approx','const.clos_known.Other_0') != s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X1))) | s(bool,'T_0') = s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',X0),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X1))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X0) | s('type.clos_known.val_approx',X0) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(X0)))) | s('type.clos_known.val_approx',X0) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(X0)))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X0)) )),
  inference(superposition,[],[f1440,f1750])).
fof(f5648,plain,(
  ( ! [X88,X87,X85,X86,X84] : (s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X84),s('type.num.num',X86))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X85),s('type.num.num',X87))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X84),s('type.num.num',X86))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X85),s('type.num.num',X87))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.bool.COND_3'(s(bool,sK15(X84,X85,X86,X87)),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X85),s('type.num.num',X87))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X84),s('type.num.num',X86))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X85),s('type.num.num',X87))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.bool.COND_3'(s(bool,sK15(X84,X85,X86,X87)),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X85),s('type.num.num',X87))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X84),s('type.num.num',X86))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X85),s('type.num.num',X87))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X84),s('type.num.num',X86))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X85),s('type.num.num',X87))))),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X88)))))) )),
  inference(forward_demodulation,[],[f5647,f399])).
fof(f5647,plain,(
  ( ! [X88,X87,X85,X86,X84] : (s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X84),s('type.num.num',X86))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X85),s('type.num.num',X87))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.bool.COND_3'(s(bool,sK15(X84,X85,X86,X87)),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X85),s('type.num.num',X87))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X84),s('type.num.num',X86))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X85),s('type.num.num',X87))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.bool.COND_3'(s(bool,sK15(X84,X85,X86,X87)),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X85),s('type.num.num',X87))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X84),s('type.num.num',X86))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X85),s('type.num.num',X87))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X84),s('type.num.num',X86))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X85),s('type.num.num',X87))))),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X88))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK15(X84,X85,X86,X87)),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X85),s('type.num.num',X87))),s('type.clos_known.val_approx','const.clos_known.Other_0')))) )),
  inference(forward_demodulation,[],[f5646,f399])).
fof(f5646,plain,(
  ( ! [X88,X87,X85,X86,X84] : (s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X84),s('type.num.num',X86))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X85),s('type.num.num',X87))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.bool.COND_3'(s(bool,sK15(X84,X85,X86,X87)),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X85),s('type.num.num',X87))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X84),s('type.num.num',X86))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X85),s('type.num.num',X87))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X84),s('type.num.num',X86))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X85),s('type.num.num',X87))))),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X88))))) | s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK15(X84,X85,X86,X87)),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X85),s('type.num.num',X87))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.bool.COND_3'(s(bool,sK15(X84,X85,X86,X87)),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X85),s('type.num.num',X87))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK15(X84,X85,X86,X87)),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X85),s('type.num.num',X87))),s('type.clos_known.val_approx','const.clos_known.Other_0')))) )),
  inference(forward_demodulation,[],[f5645,f399])).
fof(f5645,plain,(
  ( ! [X88,X87,X85,X86,X84] : (s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X84),s('type.num.num',X86))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X85),s('type.num.num',X87))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X84),s('type.num.num',X86))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X85),s('type.num.num',X87))))),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X88))))) | s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK15(X84,X85,X86,X87)),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X85),s('type.num.num',X87))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.bool.COND_3'(s(bool,sK15(X84,X85,X86,X87)),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X85),s('type.num.num',X87))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK15(X84,X85,X86,X87)),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X85),s('type.num.num',X87))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.bool.COND_3'(s(bool,sK15(X84,X85,X86,X87)),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X85),s('type.num.num',X87))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK15(X84,X85,X86,X87)),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X85),s('type.num.num',X87))),s('type.clos_known.val_approx','const.clos_known.Other_0')))) )),
  inference(forward_demodulation,[],[f5606,f399])).
fof(f5606,plain,(
  ( ! [X88,X87,X85,X86,X84] : (s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X84),s('type.num.num',X86))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X85),s('type.num.num',X87))))),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X88))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK15(X84,X85,X86,X87)),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X85),s('type.num.num',X87))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) | s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK15(X84,X85,X86,X87)),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X85),s('type.num.num',X87))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.bool.COND_3'(s(bool,sK15(X84,X85,X86,X87)),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X85),s('type.num.num',X87))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK15(X84,X85,X86,X87)),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X85),s('type.num.num',X87))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.bool.COND_3'(s(bool,sK15(X84,X85,X86,X87)),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X85),s('type.num.num',X87))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK15(X84,X85,X86,X87)),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X85),s('type.num.num',X87))),s('type.clos_known.val_approx','const.clos_known.Other_0')))) )),
  inference(superposition,[],[f1750,f399])).
fof(f5644,plain,(
  ( ! [X83,X81,X82] : (s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X81))),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X82))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X81))),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X82))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.bool.COND_3'(s(bool,sK14(X81,X82)),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X81),s('type.list.list'('type.clos_known.val_approx'),X82))))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X81))),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X82))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.bool.COND_3'(s(bool,sK14(X81,X82)),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X81),s('type.list.list'('type.clos_known.val_approx'),X82))))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X81))),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X82))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X81))),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X82))))),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X83)))))) )),
  inference(forward_demodulation,[],[f5643,f410])).
fof(f5643,plain,(
  ( ! [X83,X81,X82] : (s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X81))),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X82))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.bool.COND_3'(s(bool,sK14(X81,X82)),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X81),s('type.list.list'('type.clos_known.val_approx'),X82))))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X81))),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X82))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.bool.COND_3'(s(bool,sK14(X81,X82)),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X81),s('type.list.list'('type.clos_known.val_approx'),X82))))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X81))),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X82))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X81))),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X82))))),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X83))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK14(X81,X82)),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X81),s('type.list.list'('type.clos_known.val_approx'),X82))))),s('type.clos_known.val_approx','const.clos_known.Other_0')))) )),
  inference(forward_demodulation,[],[f5642,f410])).
fof(f5642,plain,(
  ( ! [X83,X81,X82] : (s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X81))),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X82))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.bool.COND_3'(s(bool,sK14(X81,X82)),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X81),s('type.list.list'('type.clos_known.val_approx'),X82))))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X81))),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X82))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X81))),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X82))))),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X83))))) | s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK14(X81,X82)),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X81),s('type.list.list'('type.clos_known.val_approx'),X82))))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.bool.COND_3'(s(bool,sK14(X81,X82)),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X81),s('type.list.list'('type.clos_known.val_approx'),X82))))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK14(X81,X82)),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X81),s('type.list.list'('type.clos_known.val_approx'),X82))))),s('type.clos_known.val_approx','const.clos_known.Other_0')))) )),
  inference(forward_demodulation,[],[f5641,f410])).
fof(f5641,plain,(
  ( ! [X83,X81,X82] : (s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X81))),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X82))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X81))),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X82))))),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X83))))) | s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK14(X81,X82)),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X81),s('type.list.list'('type.clos_known.val_approx'),X82))))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.bool.COND_3'(s(bool,sK14(X81,X82)),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X81),s('type.list.list'('type.clos_known.val_approx'),X82))))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK14(X81,X82)),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X81),s('type.list.list'('type.clos_known.val_approx'),X82))))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.bool.COND_3'(s(bool,sK14(X81,X82)),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X81),s('type.list.list'('type.clos_known.val_approx'),X82))))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK14(X81,X82)),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X81),s('type.list.list'('type.clos_known.val_approx'),X82))))),s('type.clos_known.val_approx','const.clos_known.Other_0')))) )),
  inference(forward_demodulation,[],[f5605,f410])).
fof(f5605,plain,(
  ( ! [X83,X81,X82] : (s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X81))),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X82))))),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X83))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK14(X81,X82)),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X81),s('type.list.list'('type.clos_known.val_approx'),X82))))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) | s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK14(X81,X82)),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X81),s('type.list.list'('type.clos_known.val_approx'),X82))))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.bool.COND_3'(s(bool,sK14(X81,X82)),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X81),s('type.list.list'('type.clos_known.val_approx'),X82))))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK14(X81,X82)),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X81),s('type.list.list'('type.clos_known.val_approx'),X82))))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.bool.COND_3'(s(bool,sK14(X81,X82)),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X81),s('type.list.list'('type.clos_known.val_approx'),X82))))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK14(X81,X82)),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X81),s('type.list.list'('type.clos_known.val_approx'),X82))))),s('type.clos_known.val_approx','const.clos_known.Other_0')))) )),
  inference(superposition,[],[f1750,f410])).
fof(f5640,plain,(
  ( ! [X80,X78,X79] : (s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X78))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X79))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X78))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X79))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.bool.COND_3'(s(bool,sK13(X78,X79)),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X79))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X78))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X79))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.bool.COND_3'(s(bool,sK13(X78,X79)),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X79))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X78))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X79))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X78))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X79))))),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X80)))))) )),
  inference(forward_demodulation,[],[f5639,f348])).
fof(f5639,plain,(
  ( ! [X80,X78,X79] : (s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X78))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X79))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.bool.COND_3'(s(bool,sK13(X78,X79)),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X79))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X78))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X79))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.bool.COND_3'(s(bool,sK13(X78,X79)),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X79))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X78))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X79))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X78))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X79))))),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X80))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK13(X78,X79)),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X79))),s('type.clos_known.val_approx','const.clos_known.Other_0')))) )),
  inference(forward_demodulation,[],[f5638,f348])).
fof(f5638,plain,(
  ( ! [X80,X78,X79] : (s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X78))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X79))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.bool.COND_3'(s(bool,sK13(X78,X79)),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X79))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X78))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X79))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X78))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X79))))),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X80))))) | s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK13(X78,X79)),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X79))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.bool.COND_3'(s(bool,sK13(X78,X79)),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X79))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK13(X78,X79)),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X79))),s('type.clos_known.val_approx','const.clos_known.Other_0')))) )),
  inference(forward_demodulation,[],[f5637,f348])).
fof(f5637,plain,(
  ( ! [X80,X78,X79] : (s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X78))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X79))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X78))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X79))))),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X80))))) | s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK13(X78,X79)),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X79))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.bool.COND_3'(s(bool,sK13(X78,X79)),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X79))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK13(X78,X79)),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X79))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.bool.COND_3'(s(bool,sK13(X78,X79)),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X79))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK13(X78,X79)),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X79))),s('type.clos_known.val_approx','const.clos_known.Other_0')))) )),
  inference(forward_demodulation,[],[f5604,f348])).
fof(f5604,plain,(
  ( ! [X80,X78,X79] : (s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X78))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X79))))),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X80))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK13(X78,X79)),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X79))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) | s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK13(X78,X79)),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X79))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.bool.COND_3'(s(bool,sK13(X78,X79)),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X79))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK13(X78,X79)),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X79))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.bool.COND_3'(s(bool,sK13(X78,X79)),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X79))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK13(X78,X79)),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X79))),s('type.clos_known.val_approx','const.clos_known.Other_0')))) )),
  inference(superposition,[],[f1750,f348])).
fof(f5603,plain,(
  ( ! [X76,X77,X75] : (s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X76))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X75))))),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X77))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,'F_0'),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X75))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) | s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,'F_0'),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X75))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.bool.COND_3'(s(bool,'F_0'),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X75))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,'F_0'),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X75))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.bool.COND_3'(s(bool,'F_0'),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X75))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,'F_0'),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X75))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) | s(bool,'T_0') = s(bool,sK13(X76,X75))) )),
  inference(superposition,[],[f1750,f1672])).
fof(f5636,plain,(
  ( ! [X74,X72,X73] : (s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X72),s('type.clos_known.val_approx',X73))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X72),s('type.clos_known.val_approx',X73))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(happ(s(fun('type.clos_known.val_approx','type.clos_known.val_approx'),happ(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.clos_known.val_approx',X72))),s('type.clos_known.val_approx',X73)))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X72),s('type.clos_known.val_approx',X73))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(happ(s(fun('type.clos_known.val_approx','type.clos_known.val_approx'),happ(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.clos_known.val_approx',X72))),s('type.clos_known.val_approx',X73)))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X72),s('type.clos_known.val_approx',X73))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X72),s('type.clos_known.val_approx',X73))),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X74)))))) )),
  inference(forward_demodulation,[],[f5635,f319])).
fof(f5635,plain,(
  ( ! [X74,X72,X73] : (s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X72),s('type.clos_known.val_approx',X73))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(happ(s(fun('type.clos_known.val_approx','type.clos_known.val_approx'),happ(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.clos_known.val_approx',X72))),s('type.clos_known.val_approx',X73)))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X72),s('type.clos_known.val_approx',X73))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(happ(s(fun('type.clos_known.val_approx','type.clos_known.val_approx'),happ(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.clos_known.val_approx',X72))),s('type.clos_known.val_approx',X73)))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X72),s('type.clos_known.val_approx',X73))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X72),s('type.clos_known.val_approx',X73))),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X74))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',happ(s(fun('type.clos_known.val_approx','type.clos_known.val_approx'),happ(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.clos_known.val_approx',X72))),s('type.clos_known.val_approx',X73)))) )),
  inference(forward_demodulation,[],[f5634,f319])).
fof(f5634,plain,(
  ( ! [X74,X72,X73] : (s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X72),s('type.clos_known.val_approx',X73))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(happ(s(fun('type.clos_known.val_approx','type.clos_known.val_approx'),happ(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.clos_known.val_approx',X72))),s('type.clos_known.val_approx',X73)))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X72),s('type.clos_known.val_approx',X73))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X72),s('type.clos_known.val_approx',X73))),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X74))))) | s('type.clos_known.val_approx',happ(s(fun('type.clos_known.val_approx','type.clos_known.val_approx'),happ(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.clos_known.val_approx',X72))),s('type.clos_known.val_approx',X73))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(happ(s(fun('type.clos_known.val_approx','type.clos_known.val_approx'),happ(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.clos_known.val_approx',X72))),s('type.clos_known.val_approx',X73)))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',happ(s(fun('type.clos_known.val_approx','type.clos_known.val_approx'),happ(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.clos_known.val_approx',X72))),s('type.clos_known.val_approx',X73)))) )),
  inference(forward_demodulation,[],[f5633,f319])).
fof(f5633,plain,(
  ( ! [X74,X72,X73] : (s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X72),s('type.clos_known.val_approx',X73))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X72),s('type.clos_known.val_approx',X73))),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X74))))) | s('type.clos_known.val_approx',happ(s(fun('type.clos_known.val_approx','type.clos_known.val_approx'),happ(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.clos_known.val_approx',X72))),s('type.clos_known.val_approx',X73))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(happ(s(fun('type.clos_known.val_approx','type.clos_known.val_approx'),happ(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.clos_known.val_approx',X72))),s('type.clos_known.val_approx',X73)))))) | s('type.clos_known.val_approx',happ(s(fun('type.clos_known.val_approx','type.clos_known.val_approx'),happ(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.clos_known.val_approx',X72))),s('type.clos_known.val_approx',X73))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(happ(s(fun('type.clos_known.val_approx','type.clos_known.val_approx'),happ(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.clos_known.val_approx',X72))),s('type.clos_known.val_approx',X73)))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',happ(s(fun('type.clos_known.val_approx','type.clos_known.val_approx'),happ(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.clos_known.val_approx',X72))),s('type.clos_known.val_approx',X73)))) )),
  inference(forward_demodulation,[],[f5602,f319])).
fof(f5602,plain,(
  ( ! [X74,X72,X73] : (s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X72),s('type.clos_known.val_approx',X73))),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X74))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',happ(s(fun('type.clos_known.val_approx','type.clos_known.val_approx'),happ(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.clos_known.val_approx',X72))),s('type.clos_known.val_approx',X73))) | s('type.clos_known.val_approx',happ(s(fun('type.clos_known.val_approx','type.clos_known.val_approx'),happ(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.clos_known.val_approx',X72))),s('type.clos_known.val_approx',X73))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(happ(s(fun('type.clos_known.val_approx','type.clos_known.val_approx'),happ(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.clos_known.val_approx',X72))),s('type.clos_known.val_approx',X73)))))) | s('type.clos_known.val_approx',happ(s(fun('type.clos_known.val_approx','type.clos_known.val_approx'),happ(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.clos_known.val_approx',X72))),s('type.clos_known.val_approx',X73))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(happ(s(fun('type.clos_known.val_approx','type.clos_known.val_approx'),happ(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.clos_known.val_approx',X72))),s('type.clos_known.val_approx',X73)))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',happ(s(fun('type.clos_known.val_approx','type.clos_known.val_approx'),happ(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.clos_known.val_approx',X72))),s('type.clos_known.val_approx',X73)))) )),
  inference(superposition,[],[f1750,f319])).
fof(f5632,plain,(
  ( ! [X70,X71] : (s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X70) | s('type.clos_known.val_approx',X70) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X70)))))) | s('type.clos_known.val_approx',X70) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X70)))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X70) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X70),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X71)))))) )),
  inference(forward_demodulation,[],[f5631,f254])).
fof(f5631,plain,(
  ( ! [X70,X71] : (s('type.clos_known.val_approx',X70) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X70)))))) | s('type.clos_known.val_approx',X70) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X70)))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X70) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X70),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X71))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X70)))) )),
  inference(forward_demodulation,[],[f5630,f254])).
fof(f5630,plain,(
  ( ! [X70,X71] : (s('type.clos_known.val_approx',X70) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X70)))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X70) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X70),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X71))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X70))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X70)))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X70)))) )),
  inference(forward_demodulation,[],[f5629,f254])).
fof(f5629,plain,(
  ( ! [X70,X71] : (s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X70) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X70),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X71))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X70))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X70)))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X70))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X70)))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X70)))) )),
  inference(forward_demodulation,[],[f5601,f254])).
fof(f5601,plain,(
  ( ! [X70,X71] : (s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X70),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X71))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X70))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X70))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X70)))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X70))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X70)))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X70)))) )),
  inference(superposition,[],[f1750,f254])).
fof(f5599,plain,(
  ( ! [X66,X67,X65] : (s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,'F_0'),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X66))),s('type.clos_known.val_approx','const.clos_known.Other_0'))),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X67))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X65))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X66))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X65))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X66))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X65))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X66)))))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X65))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X66))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X65))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X66)))))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X65))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X66))))) | s(bool,'T_0') = s(bool,sK13(X65,X66))) )),
  inference(superposition,[],[f1750,f1672])).
fof(f5628,plain,(
  ( ! [X52,X51] : (s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X51))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X51))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X51))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X51))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X51))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X51))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X51))),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X52)))))) )),
  inference(forward_demodulation,[],[f5627,f260])).
fof(f5627,plain,(
  ( ! [X52,X51] : (s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X51))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X51))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X51))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X51))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X51))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X51))),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X52))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X51))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))) )),
  inference(forward_demodulation,[],[f5626,f260])).
fof(f5626,plain,(
  ( ! [X52,X51] : (s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X51))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X51))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X51))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X51))),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X52))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X51))),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X51))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X51))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))) )),
  inference(forward_demodulation,[],[f5625,f260])).
fof(f5625,plain,(
  ( ! [X52,X51] : (s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X51))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X51))),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X52))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X51))),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X51))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X51))),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X51))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X51))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))) )),
  inference(forward_demodulation,[],[f5594,f260])).
fof(f5594,plain,(
  ( ! [X52,X51] : (s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X51))),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X52))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X51))),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X51))),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X51))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X51))),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X51))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X51))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))) )),
  inference(superposition,[],[f1750,f260])).
fof(f5587,plain,(
  ( ! [X30,X28,X26,X29,X27] : (s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,'F_0'),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X28),s('type.num.num',X29))),s('type.clos_known.val_approx','const.clos_known.Other_0'))),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X30))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X26),s('type.num.num',X27))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X28),s('type.num.num',X29))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X26),s('type.num.num',X27))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X28),s('type.num.num',X29))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X26),s('type.num.num',X27))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X28),s('type.num.num',X29)))))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X26),s('type.num.num',X27))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X28),s('type.num.num',X29))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X26),s('type.num.num',X27))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X28),s('type.num.num',X29)))))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X26),s('type.num.num',X27))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X28),s('type.num.num',X29))))) | s(bool,'T_0') = s(bool,sK15(X26,X28,X27,X29))) )),
  inference(superposition,[],[f1750,f1696])).
fof(f5535,plain,(
  ( ! [X39,X38,X40] : (s('type.clos_known.val_approx','const.clos_known.Other_0') != s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X40),s('type.clos_known.val_approx','const.clos_known.Other_0'))) | s(bool,'T_0') = s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',X40),s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X38))),s('type.clos_known.val_approx',X39))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X39) | s('type.clos_known.val_approx',X39) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(X39)))) | s('type.clos_known.val_approx',X39) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(X39)))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X39)) )),
  inference(superposition,[],[f1440,f1749])).
fof(f5534,plain,(
  ( ! [X37,X35,X36] : (s('type.clos_known.val_approx',X37) != s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx',X37))) | s(bool,'T_0') = s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X35))),s('type.clos_known.val_approx',X36))),s('type.clos_known.val_approx',X37))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X36) | s('type.clos_known.val_approx',X36) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(X36)))) | s('type.clos_known.val_approx',X36) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(X36)))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X36)) )),
  inference(superposition,[],[f1440,f1749])).
fof(f5533,plain,(
  ( ! [X33,X34,X32] : (p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',X34),s('type.clos_known.val_approx','const.clos_known.Other_0')))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X32))),s('type.clos_known.val_approx',X33))) != s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X34),s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X32))),s('type.clos_known.val_approx',X33))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X33) | s('type.clos_known.val_approx',X33) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(X33)))) | s('type.clos_known.val_approx',X33) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(X33)))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X33)) )),
  inference(superposition,[],[f329,f1749])).
fof(f5532,plain,(
  ( ! [X30,X31,X29] : (p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx',X31)))) | s('type.clos_known.val_approx',X31) != s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X29))),s('type.clos_known.val_approx',X30))),s('type.clos_known.val_approx',X31))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X30) | s('type.clos_known.val_approx',X30) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(X30)))) | s('type.clos_known.val_approx',X30) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(X30)))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X30)) )),
  inference(superposition,[],[f329,f1749])).
fof(f5531,plain,(
  ( ! [X28,X26,X27] : (~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',X28),s('type.clos_known.val_approx','const.clos_known.Other_0')))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X26))),s('type.clos_known.val_approx',X27))) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X28),s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X26))),s('type.clos_known.val_approx',X27))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X27) | s('type.clos_known.val_approx',X27) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(X27)))) | s('type.clos_known.val_approx',X27) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(X27)))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X27)) )),
  inference(superposition,[],[f328,f1749])).
fof(f5530,plain,(
  ( ! [X24,X23,X25] : (~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx',X25)))) | s('type.clos_known.val_approx',X25) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X23))),s('type.clos_known.val_approx',X24))),s('type.clos_known.val_approx',X25))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X24) | s('type.clos_known.val_approx',X24) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(X24)))) | s('type.clos_known.val_approx',X24) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(X24)))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X24)) )),
  inference(superposition,[],[f328,f1749])).
fof(f5520,plain,(
  ( ! [X8,X9] : (s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,'F_0'),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X9))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X9))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X9))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.clos_known.Int_1'(s('type.integer.int',X9)))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X9))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.clos_known.Int_1'(s('type.integer.int',X9)))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X9))) | s(bool,'T_0') = s(bool,sK13(X8,X9))) )),
  inference(superposition,[],[f1749,f1672])).
fof(f5564,plain,(
  ( ! [X85,X83,X81,X84,X82] : (s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X81),s('type.num.num',X83))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X82),s('type.num.num',X84))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X81),s('type.num.num',X83))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X82),s('type.num.num',X84))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.bool.COND_3'(s(bool,sK15(X81,X82,X83,X84)),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X82),s('type.num.num',X84))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X81),s('type.num.num',X83))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X82),s('type.num.num',X84))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.bool.COND_3'(s(bool,sK15(X81,X82,X83,X84)),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X82),s('type.num.num',X84))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X81),s('type.num.num',X83))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X82),s('type.num.num',X84))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X85))),s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X81),s('type.num.num',X83))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X82),s('type.num.num',X84)))))))) )),
  inference(forward_demodulation,[],[f5563,f399])).
fof(f5563,plain,(
  ( ! [X85,X83,X81,X84,X82] : (s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X81),s('type.num.num',X83))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X82),s('type.num.num',X84))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.bool.COND_3'(s(bool,sK15(X81,X82,X83,X84)),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X82),s('type.num.num',X84))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X81),s('type.num.num',X83))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X82),s('type.num.num',X84))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.bool.COND_3'(s(bool,sK15(X81,X82,X83,X84)),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X82),s('type.num.num',X84))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X81),s('type.num.num',X83))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X82),s('type.num.num',X84))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X85))),s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X81),s('type.num.num',X83))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X82),s('type.num.num',X84))))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK15(X81,X82,X83,X84)),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X82),s('type.num.num',X84))),s('type.clos_known.val_approx','const.clos_known.Other_0')))) )),
  inference(forward_demodulation,[],[f5562,f399])).
fof(f5562,plain,(
  ( ! [X85,X83,X81,X84,X82] : (s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X81),s('type.num.num',X83))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X82),s('type.num.num',X84))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.bool.COND_3'(s(bool,sK15(X81,X82,X83,X84)),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X82),s('type.num.num',X84))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X81),s('type.num.num',X83))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X82),s('type.num.num',X84))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X85))),s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X81),s('type.num.num',X83))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X82),s('type.num.num',X84))))))) | s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK15(X81,X82,X83,X84)),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X82),s('type.num.num',X84))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.bool.COND_3'(s(bool,sK15(X81,X82,X83,X84)),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X82),s('type.num.num',X84))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK15(X81,X82,X83,X84)),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X82),s('type.num.num',X84))),s('type.clos_known.val_approx','const.clos_known.Other_0')))) )),
  inference(forward_demodulation,[],[f5561,f399])).
fof(f5561,plain,(
  ( ! [X85,X83,X81,X84,X82] : (s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X81),s('type.num.num',X83))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X82),s('type.num.num',X84))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X85))),s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X81),s('type.num.num',X83))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X82),s('type.num.num',X84))))))) | s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK15(X81,X82,X83,X84)),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X82),s('type.num.num',X84))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.bool.COND_3'(s(bool,sK15(X81,X82,X83,X84)),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X82),s('type.num.num',X84))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK15(X81,X82,X83,X84)),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X82),s('type.num.num',X84))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.bool.COND_3'(s(bool,sK15(X81,X82,X83,X84)),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X82),s('type.num.num',X84))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK15(X81,X82,X83,X84)),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X82),s('type.num.num',X84))),s('type.clos_known.val_approx','const.clos_known.Other_0')))) )),
  inference(forward_demodulation,[],[f5519,f399])).
fof(f5519,plain,(
  ( ! [X85,X83,X81,X84,X82] : (s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X85))),s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X81),s('type.num.num',X83))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X82),s('type.num.num',X84))))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK15(X81,X82,X83,X84)),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X82),s('type.num.num',X84))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) | s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK15(X81,X82,X83,X84)),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X82),s('type.num.num',X84))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.bool.COND_3'(s(bool,sK15(X81,X82,X83,X84)),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X82),s('type.num.num',X84))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK15(X81,X82,X83,X84)),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X82),s('type.num.num',X84))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.bool.COND_3'(s(bool,sK15(X81,X82,X83,X84)),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X82),s('type.num.num',X84))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK15(X81,X82,X83,X84)),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X82),s('type.num.num',X84))),s('type.clos_known.val_approx','const.clos_known.Other_0')))) )),
  inference(superposition,[],[f1749,f399])).
fof(f5560,plain,(
  ( ! [X80,X78,X79] : (s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X78))),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X79))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X78))),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X79))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.bool.COND_3'(s(bool,sK14(X78,X79)),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X78),s('type.list.list'('type.clos_known.val_approx'),X79))))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X78))),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X79))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.bool.COND_3'(s(bool,sK14(X78,X79)),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X78),s('type.list.list'('type.clos_known.val_approx'),X79))))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X78))),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X79))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X80))),s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X78))),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X79)))))))) )),
  inference(forward_demodulation,[],[f5559,f410])).
fof(f5559,plain,(
  ( ! [X80,X78,X79] : (s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X78))),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X79))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.bool.COND_3'(s(bool,sK14(X78,X79)),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X78),s('type.list.list'('type.clos_known.val_approx'),X79))))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X78))),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X79))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.bool.COND_3'(s(bool,sK14(X78,X79)),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X78),s('type.list.list'('type.clos_known.val_approx'),X79))))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X78))),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X79))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X80))),s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X78))),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X79))))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK14(X78,X79)),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X78),s('type.list.list'('type.clos_known.val_approx'),X79))))),s('type.clos_known.val_approx','const.clos_known.Other_0')))) )),
  inference(forward_demodulation,[],[f5558,f410])).
fof(f5558,plain,(
  ( ! [X80,X78,X79] : (s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X78))),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X79))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.bool.COND_3'(s(bool,sK14(X78,X79)),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X78),s('type.list.list'('type.clos_known.val_approx'),X79))))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X78))),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X79))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X80))),s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X78))),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X79))))))) | s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK14(X78,X79)),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X78),s('type.list.list'('type.clos_known.val_approx'),X79))))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.bool.COND_3'(s(bool,sK14(X78,X79)),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X78),s('type.list.list'('type.clos_known.val_approx'),X79))))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK14(X78,X79)),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X78),s('type.list.list'('type.clos_known.val_approx'),X79))))),s('type.clos_known.val_approx','const.clos_known.Other_0')))) )),
  inference(forward_demodulation,[],[f5557,f410])).
fof(f5557,plain,(
  ( ! [X80,X78,X79] : (s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X78))),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X79))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X80))),s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X78))),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X79))))))) | s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK14(X78,X79)),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X78),s('type.list.list'('type.clos_known.val_approx'),X79))))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.bool.COND_3'(s(bool,sK14(X78,X79)),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X78),s('type.list.list'('type.clos_known.val_approx'),X79))))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK14(X78,X79)),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X78),s('type.list.list'('type.clos_known.val_approx'),X79))))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.bool.COND_3'(s(bool,sK14(X78,X79)),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X78),s('type.list.list'('type.clos_known.val_approx'),X79))))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK14(X78,X79)),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X78),s('type.list.list'('type.clos_known.val_approx'),X79))))),s('type.clos_known.val_approx','const.clos_known.Other_0')))) )),
  inference(forward_demodulation,[],[f5518,f410])).
fof(f5518,plain,(
  ( ! [X80,X78,X79] : (s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X80))),s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X78))),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X79))))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK14(X78,X79)),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X78),s('type.list.list'('type.clos_known.val_approx'),X79))))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) | s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK14(X78,X79)),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X78),s('type.list.list'('type.clos_known.val_approx'),X79))))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.bool.COND_3'(s(bool,sK14(X78,X79)),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X78),s('type.list.list'('type.clos_known.val_approx'),X79))))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK14(X78,X79)),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X78),s('type.list.list'('type.clos_known.val_approx'),X79))))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.bool.COND_3'(s(bool,sK14(X78,X79)),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X78),s('type.list.list'('type.clos_known.val_approx'),X79))))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK14(X78,X79)),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X78),s('type.list.list'('type.clos_known.val_approx'),X79))))),s('type.clos_known.val_approx','const.clos_known.Other_0')))) )),
  inference(superposition,[],[f1749,f410])).
fof(f5556,plain,(
  ( ! [X76,X77,X75] : (s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X75))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X76))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X75))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X76))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.bool.COND_3'(s(bool,sK13(X75,X76)),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X76))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X75))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X76))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.bool.COND_3'(s(bool,sK13(X75,X76)),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X76))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X75))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X76))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X77))),s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X75))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X76)))))))) )),
  inference(forward_demodulation,[],[f5555,f348])).
fof(f5555,plain,(
  ( ! [X76,X77,X75] : (s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X75))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X76))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.bool.COND_3'(s(bool,sK13(X75,X76)),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X76))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X75))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X76))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.bool.COND_3'(s(bool,sK13(X75,X76)),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X76))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X75))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X76))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X77))),s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X75))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X76))))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK13(X75,X76)),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X76))),s('type.clos_known.val_approx','const.clos_known.Other_0')))) )),
  inference(forward_demodulation,[],[f5554,f348])).
fof(f5554,plain,(
  ( ! [X76,X77,X75] : (s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X75))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X76))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.bool.COND_3'(s(bool,sK13(X75,X76)),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X76))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X75))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X76))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X77))),s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X75))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X76))))))) | s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK13(X75,X76)),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X76))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.bool.COND_3'(s(bool,sK13(X75,X76)),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X76))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK13(X75,X76)),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X76))),s('type.clos_known.val_approx','const.clos_known.Other_0')))) )),
  inference(forward_demodulation,[],[f5553,f348])).
fof(f5553,plain,(
  ( ! [X76,X77,X75] : (s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X75))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X76))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X77))),s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X75))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X76))))))) | s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK13(X75,X76)),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X76))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.bool.COND_3'(s(bool,sK13(X75,X76)),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X76))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK13(X75,X76)),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X76))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.bool.COND_3'(s(bool,sK13(X75,X76)),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X76))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK13(X75,X76)),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X76))),s('type.clos_known.val_approx','const.clos_known.Other_0')))) )),
  inference(forward_demodulation,[],[f5517,f348])).
fof(f5517,plain,(
  ( ! [X76,X77,X75] : (s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X77))),s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X75))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X76))))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK13(X75,X76)),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X76))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) | s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK13(X75,X76)),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X76))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.bool.COND_3'(s(bool,sK13(X75,X76)),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X76))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK13(X75,X76)),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X76))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.bool.COND_3'(s(bool,sK13(X75,X76)),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X76))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK13(X75,X76)),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X76))),s('type.clos_known.val_approx','const.clos_known.Other_0')))) )),
  inference(superposition,[],[f1749,f348])).
fof(f5516,plain,(
  ( ! [X74,X72,X73] : (s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X74))),s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X73))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X72))))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,'F_0'),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X72))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) | s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,'F_0'),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X72))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.bool.COND_3'(s(bool,'F_0'),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X72))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,'F_0'),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X72))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.bool.COND_3'(s(bool,'F_0'),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X72))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,'F_0'),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X72))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) | s(bool,'T_0') = s(bool,sK13(X73,X72))) )),
  inference(superposition,[],[f1749,f1672])).
fof(f5552,plain,(
  ( ! [X70,X71,X69] : (s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X69),s('type.clos_known.val_approx',X70))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X69),s('type.clos_known.val_approx',X70))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(happ(s(fun('type.clos_known.val_approx','type.clos_known.val_approx'),happ(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.clos_known.val_approx',X69))),s('type.clos_known.val_approx',X70)))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X69),s('type.clos_known.val_approx',X70))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(happ(s(fun('type.clos_known.val_approx','type.clos_known.val_approx'),happ(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.clos_known.val_approx',X69))),s('type.clos_known.val_approx',X70)))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X69),s('type.clos_known.val_approx',X70))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X71))),s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X69),s('type.clos_known.val_approx',X70)))))) )),
  inference(forward_demodulation,[],[f5551,f319])).
fof(f5551,plain,(
  ( ! [X70,X71,X69] : (s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X69),s('type.clos_known.val_approx',X70))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(happ(s(fun('type.clos_known.val_approx','type.clos_known.val_approx'),happ(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.clos_known.val_approx',X69))),s('type.clos_known.val_approx',X70)))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X69),s('type.clos_known.val_approx',X70))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(happ(s(fun('type.clos_known.val_approx','type.clos_known.val_approx'),happ(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.clos_known.val_approx',X69))),s('type.clos_known.val_approx',X70)))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X69),s('type.clos_known.val_approx',X70))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X71))),s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X69),s('type.clos_known.val_approx',X70))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',happ(s(fun('type.clos_known.val_approx','type.clos_known.val_approx'),happ(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.clos_known.val_approx',X69))),s('type.clos_known.val_approx',X70)))) )),
  inference(forward_demodulation,[],[f5550,f319])).
fof(f5550,plain,(
  ( ! [X70,X71,X69] : (s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X69),s('type.clos_known.val_approx',X70))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(happ(s(fun('type.clos_known.val_approx','type.clos_known.val_approx'),happ(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.clos_known.val_approx',X69))),s('type.clos_known.val_approx',X70)))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X69),s('type.clos_known.val_approx',X70))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X71))),s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X69),s('type.clos_known.val_approx',X70))))) | s('type.clos_known.val_approx',happ(s(fun('type.clos_known.val_approx','type.clos_known.val_approx'),happ(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.clos_known.val_approx',X69))),s('type.clos_known.val_approx',X70))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(happ(s(fun('type.clos_known.val_approx','type.clos_known.val_approx'),happ(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.clos_known.val_approx',X69))),s('type.clos_known.val_approx',X70)))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',happ(s(fun('type.clos_known.val_approx','type.clos_known.val_approx'),happ(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.clos_known.val_approx',X69))),s('type.clos_known.val_approx',X70)))) )),
  inference(forward_demodulation,[],[f5549,f319])).
fof(f5549,plain,(
  ( ! [X70,X71,X69] : (s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X69),s('type.clos_known.val_approx',X70))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X71))),s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X69),s('type.clos_known.val_approx',X70))))) | s('type.clos_known.val_approx',happ(s(fun('type.clos_known.val_approx','type.clos_known.val_approx'),happ(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.clos_known.val_approx',X69))),s('type.clos_known.val_approx',X70))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(happ(s(fun('type.clos_known.val_approx','type.clos_known.val_approx'),happ(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.clos_known.val_approx',X69))),s('type.clos_known.val_approx',X70)))))) | s('type.clos_known.val_approx',happ(s(fun('type.clos_known.val_approx','type.clos_known.val_approx'),happ(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.clos_known.val_approx',X69))),s('type.clos_known.val_approx',X70))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(happ(s(fun('type.clos_known.val_approx','type.clos_known.val_approx'),happ(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.clos_known.val_approx',X69))),s('type.clos_known.val_approx',X70)))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',happ(s(fun('type.clos_known.val_approx','type.clos_known.val_approx'),happ(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.clos_known.val_approx',X69))),s('type.clos_known.val_approx',X70)))) )),
  inference(forward_demodulation,[],[f5515,f319])).
fof(f5515,plain,(
  ( ! [X70,X71,X69] : (s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X71))),s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X69),s('type.clos_known.val_approx',X70))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',happ(s(fun('type.clos_known.val_approx','type.clos_known.val_approx'),happ(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.clos_known.val_approx',X69))),s('type.clos_known.val_approx',X70))) | s('type.clos_known.val_approx',happ(s(fun('type.clos_known.val_approx','type.clos_known.val_approx'),happ(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.clos_known.val_approx',X69))),s('type.clos_known.val_approx',X70))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(happ(s(fun('type.clos_known.val_approx','type.clos_known.val_approx'),happ(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.clos_known.val_approx',X69))),s('type.clos_known.val_approx',X70)))))) | s('type.clos_known.val_approx',happ(s(fun('type.clos_known.val_approx','type.clos_known.val_approx'),happ(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.clos_known.val_approx',X69))),s('type.clos_known.val_approx',X70))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(happ(s(fun('type.clos_known.val_approx','type.clos_known.val_approx'),happ(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.clos_known.val_approx',X69))),s('type.clos_known.val_approx',X70)))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',happ(s(fun('type.clos_known.val_approx','type.clos_known.val_approx'),happ(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.clos_known.val_approx',X69))),s('type.clos_known.val_approx',X70)))) )),
  inference(superposition,[],[f1749,f319])).
fof(f5548,plain,(
  ( ! [X68,X67] : (s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X67) | s('type.clos_known.val_approx',X67) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X67)))))) | s('type.clos_known.val_approx',X67) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X67)))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X67) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X68))),s('type.clos_known.val_approx',X67)))) )),
  inference(forward_demodulation,[],[f5547,f254])).
fof(f5547,plain,(
  ( ! [X68,X67] : (s('type.clos_known.val_approx',X67) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X67)))))) | s('type.clos_known.val_approx',X67) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X67)))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X67) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X68))),s('type.clos_known.val_approx',X67))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X67)))) )),
  inference(forward_demodulation,[],[f5546,f254])).
fof(f5546,plain,(
  ( ! [X68,X67] : (s('type.clos_known.val_approx',X67) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X67)))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X67) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X68))),s('type.clos_known.val_approx',X67))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X67))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X67)))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X67)))) )),
  inference(forward_demodulation,[],[f5545,f254])).
fof(f5545,plain,(
  ( ! [X68,X67] : (s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X67) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X68))),s('type.clos_known.val_approx',X67))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X67))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X67)))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X67))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X67)))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X67)))) )),
  inference(forward_demodulation,[],[f5514,f254])).
fof(f5514,plain,(
  ( ! [X68,X67] : (s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X68))),s('type.clos_known.val_approx',X67))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X67))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X67))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X67)))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X67))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X67)))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X67)))) )),
  inference(superposition,[],[f1749,f254])).
fof(f5544,plain,(
  ( ! [X66,X65] : (s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X65))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X65))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X65))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X65))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X65))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X65))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X66))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X65)))))) )),
  inference(forward_demodulation,[],[f5543,f259])).
fof(f5543,plain,(
  ( ! [X66,X65] : (s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X65))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X65))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X65))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X65))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X65))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X66))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X65))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X65))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))) )),
  inference(forward_demodulation,[],[f5542,f259])).
fof(f5542,plain,(
  ( ! [X66,X65] : (s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X65))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X65))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X65))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X66))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X65))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X65))),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X65))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X65))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))) )),
  inference(forward_demodulation,[],[f5541,f259])).
fof(f5541,plain,(
  ( ! [X66,X65] : (s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X65))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X66))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X65))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X65))),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X65))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X65))),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X65))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X65))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))) )),
  inference(forward_demodulation,[],[f5513,f259])).
fof(f5513,plain,(
  ( ! [X66,X65] : (s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X66))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X65))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X65))),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X65))),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X65))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X65))),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X65))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X65))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))) )),
  inference(superposition,[],[f1749,f259])).
fof(f5512,plain,(
  ( ! [X64,X62,X63] : (s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X64))),s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,'F_0'),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X63))),s('type.clos_known.val_approx','const.clos_known.Other_0'))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X62))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X63))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X62))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X63))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X62))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X63)))))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X62))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X63))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X62))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X63)))))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X62))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X63))))) | s(bool,'T_0') = s(bool,sK13(X62,X63))) )),
  inference(superposition,[],[f1749,f1672])).
fof(f5500,plain,(
  ( ! [X26,X24,X23,X27,X25] : (s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X27))),s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,'F_0'),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X25),s('type.num.num',X26))),s('type.clos_known.val_approx','const.clos_known.Other_0'))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X23),s('type.num.num',X24))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X25),s('type.num.num',X26))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X23),s('type.num.num',X24))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X25),s('type.num.num',X26))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X23),s('type.num.num',X24))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X25),s('type.num.num',X26)))))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X23),s('type.num.num',X24))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X25),s('type.num.num',X26))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X23),s('type.num.num',X24))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X25),s('type.num.num',X26)))))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X23),s('type.num.num',X24))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X25),s('type.num.num',X26))))) | s(bool,'T_0') = s(bool,sK15(X23,X25,X24,X26))) )),
  inference(superposition,[],[f1749,f1696])).
fof(f5450,plain,(
  ( ! [X37,X35,X36] : (s('type.clos_known.val_approx','const.clos_known.Other_0') != s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X37),s('type.clos_known.val_approx','const.clos_known.Other_0'))) | s(bool,'T_0') = s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',X37),s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X35),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X36))))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X35) | s('type.clos_known.val_approx',X35) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(X35)))) | s('type.clos_known.val_approx',X35) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(X35)))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X35)) )),
  inference(superposition,[],[f1440,f1748])).
fof(f5449,plain,(
  ( ! [X33,X34,X32] : (s('type.clos_known.val_approx',X34) != s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx',X34))) | s(bool,'T_0') = s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X32),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X33))))),s('type.clos_known.val_approx',X34))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X32) | s('type.clos_known.val_approx',X32) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(X32)))) | s('type.clos_known.val_approx',X32) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(X32)))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X32)) )),
  inference(superposition,[],[f1440,f1748])).
fof(f5448,plain,(
  ( ! [X30,X31,X29] : (p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',X31),s('type.clos_known.val_approx','const.clos_known.Other_0')))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X29),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X30))))) != s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X31),s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X29),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X30))))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X29) | s('type.clos_known.val_approx',X29) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(X29)))) | s('type.clos_known.val_approx',X29) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(X29)))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X29)) )),
  inference(superposition,[],[f329,f1748])).
fof(f5447,plain,(
  ( ! [X28,X26,X27] : (p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx',X28)))) | s('type.clos_known.val_approx',X28) != s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X26),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X27))))),s('type.clos_known.val_approx',X28))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X26) | s('type.clos_known.val_approx',X26) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(X26)))) | s('type.clos_known.val_approx',X26) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(X26)))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X26)) )),
  inference(superposition,[],[f329,f1748])).
fof(f5446,plain,(
  ( ! [X24,X23,X25] : (~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',X25),s('type.clos_known.val_approx','const.clos_known.Other_0')))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X23),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X24))))) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X25),s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X23),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X24))))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X23) | s('type.clos_known.val_approx',X23) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(X23)))) | s('type.clos_known.val_approx',X23) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(X23)))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X23)) )),
  inference(superposition,[],[f328,f1748])).
fof(f5445,plain,(
  ( ! [X21,X22,X20] : (~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx',X22)))) | s('type.clos_known.val_approx',X22) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X20),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X21))))),s('type.clos_known.val_approx',X22))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X20) | s('type.clos_known.val_approx',X20) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(X20)))) | s('type.clos_known.val_approx',X20) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(X20)))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X20)) )),
  inference(superposition,[],[f328,f1748])).
fof(f5439,plain,(
  ( ! [X0,X1] : (s('type.clos_known.val_approx','const.clos_known.Other_0') != s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X1))) | s(bool,'T_0') = s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',X0),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X1))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X0) | s('type.clos_known.val_approx',X0) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(X0)))) | s('type.clos_known.val_approx',X0) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(X0)))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X0)) )),
  inference(superposition,[],[f1440,f1748])).
fof(f5437,plain,(
  ( ! [X10,X9] : (s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,'F_0'),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X10))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X9))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X9))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.clos_known.Int_1'(s('type.integer.int',X9)))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X9))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.clos_known.Int_1'(s('type.integer.int',X9)))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X9))) | s(bool,'T_0') = s(bool,sK13(X9,X10))) )),
  inference(superposition,[],[f1748,f1672])).
fof(f5478,plain,(
  ( ! [X80,X78,X81,X79,X82] : (s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X78),s('type.num.num',X80))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X79),s('type.num.num',X81))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X78),s('type.num.num',X80))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X79),s('type.num.num',X81))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.bool.COND_3'(s(bool,sK15(X78,X79,X80,X81)),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X79),s('type.num.num',X81))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X78),s('type.num.num',X80))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X79),s('type.num.num',X81))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.bool.COND_3'(s(bool,sK15(X78,X79,X80,X81)),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X79),s('type.num.num',X81))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X78),s('type.num.num',X80))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X79),s('type.num.num',X81))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X78),s('type.num.num',X80))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X79),s('type.num.num',X81))))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X82)))))) )),
  inference(forward_demodulation,[],[f5477,f399])).
fof(f5477,plain,(
  ( ! [X80,X78,X81,X79,X82] : (s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X78),s('type.num.num',X80))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X79),s('type.num.num',X81))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.bool.COND_3'(s(bool,sK15(X78,X79,X80,X81)),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X79),s('type.num.num',X81))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X78),s('type.num.num',X80))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X79),s('type.num.num',X81))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.bool.COND_3'(s(bool,sK15(X78,X79,X80,X81)),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X79),s('type.num.num',X81))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X78),s('type.num.num',X80))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X79),s('type.num.num',X81))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X78),s('type.num.num',X80))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X79),s('type.num.num',X81))))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X82))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK15(X78,X79,X80,X81)),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X79),s('type.num.num',X81))),s('type.clos_known.val_approx','const.clos_known.Other_0')))) )),
  inference(forward_demodulation,[],[f5476,f399])).
fof(f5476,plain,(
  ( ! [X80,X78,X81,X79,X82] : (s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X78),s('type.num.num',X80))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X79),s('type.num.num',X81))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.bool.COND_3'(s(bool,sK15(X78,X79,X80,X81)),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X79),s('type.num.num',X81))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X78),s('type.num.num',X80))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X79),s('type.num.num',X81))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X78),s('type.num.num',X80))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X79),s('type.num.num',X81))))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X82))))) | s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK15(X78,X79,X80,X81)),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X79),s('type.num.num',X81))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.bool.COND_3'(s(bool,sK15(X78,X79,X80,X81)),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X79),s('type.num.num',X81))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK15(X78,X79,X80,X81)),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X79),s('type.num.num',X81))),s('type.clos_known.val_approx','const.clos_known.Other_0')))) )),
  inference(forward_demodulation,[],[f5475,f399])).
fof(f5475,plain,(
  ( ! [X80,X78,X81,X79,X82] : (s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X78),s('type.num.num',X80))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X79),s('type.num.num',X81))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X78),s('type.num.num',X80))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X79),s('type.num.num',X81))))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X82))))) | s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK15(X78,X79,X80,X81)),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X79),s('type.num.num',X81))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.bool.COND_3'(s(bool,sK15(X78,X79,X80,X81)),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X79),s('type.num.num',X81))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK15(X78,X79,X80,X81)),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X79),s('type.num.num',X81))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.bool.COND_3'(s(bool,sK15(X78,X79,X80,X81)),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X79),s('type.num.num',X81))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK15(X78,X79,X80,X81)),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X79),s('type.num.num',X81))),s('type.clos_known.val_approx','const.clos_known.Other_0')))) )),
  inference(forward_demodulation,[],[f5436,f399])).
fof(f5436,plain,(
  ( ! [X80,X78,X81,X79,X82] : (s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X78),s('type.num.num',X80))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X79),s('type.num.num',X81))))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X82))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK15(X78,X79,X80,X81)),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X79),s('type.num.num',X81))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) | s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK15(X78,X79,X80,X81)),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X79),s('type.num.num',X81))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.bool.COND_3'(s(bool,sK15(X78,X79,X80,X81)),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X79),s('type.num.num',X81))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK15(X78,X79,X80,X81)),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X79),s('type.num.num',X81))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.bool.COND_3'(s(bool,sK15(X78,X79,X80,X81)),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X79),s('type.num.num',X81))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK15(X78,X79,X80,X81)),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X79),s('type.num.num',X81))),s('type.clos_known.val_approx','const.clos_known.Other_0')))) )),
  inference(superposition,[],[f1748,f399])).
fof(f5474,plain,(
  ( ! [X76,X77,X75] : (s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X75))),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X76))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X75))),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X76))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.bool.COND_3'(s(bool,sK14(X75,X76)),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X75),s('type.list.list'('type.clos_known.val_approx'),X76))))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X75))),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X76))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.bool.COND_3'(s(bool,sK14(X75,X76)),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X75),s('type.list.list'('type.clos_known.val_approx'),X76))))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X75))),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X76))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X75))),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X76))))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X77)))))) )),
  inference(forward_demodulation,[],[f5473,f410])).
fof(f5473,plain,(
  ( ! [X76,X77,X75] : (s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X75))),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X76))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.bool.COND_3'(s(bool,sK14(X75,X76)),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X75),s('type.list.list'('type.clos_known.val_approx'),X76))))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X75))),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X76))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.bool.COND_3'(s(bool,sK14(X75,X76)),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X75),s('type.list.list'('type.clos_known.val_approx'),X76))))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X75))),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X76))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X75))),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X76))))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X77))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK14(X75,X76)),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X75),s('type.list.list'('type.clos_known.val_approx'),X76))))),s('type.clos_known.val_approx','const.clos_known.Other_0')))) )),
  inference(forward_demodulation,[],[f5472,f410])).
fof(f5472,plain,(
  ( ! [X76,X77,X75] : (s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X75))),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X76))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.bool.COND_3'(s(bool,sK14(X75,X76)),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X75),s('type.list.list'('type.clos_known.val_approx'),X76))))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X75))),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X76))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X75))),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X76))))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X77))))) | s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK14(X75,X76)),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X75),s('type.list.list'('type.clos_known.val_approx'),X76))))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.bool.COND_3'(s(bool,sK14(X75,X76)),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X75),s('type.list.list'('type.clos_known.val_approx'),X76))))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK14(X75,X76)),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X75),s('type.list.list'('type.clos_known.val_approx'),X76))))),s('type.clos_known.val_approx','const.clos_known.Other_0')))) )),
  inference(forward_demodulation,[],[f5471,f410])).
fof(f5471,plain,(
  ( ! [X76,X77,X75] : (s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X75))),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X76))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X75))),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X76))))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X77))))) | s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK14(X75,X76)),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X75),s('type.list.list'('type.clos_known.val_approx'),X76))))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.bool.COND_3'(s(bool,sK14(X75,X76)),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X75),s('type.list.list'('type.clos_known.val_approx'),X76))))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK14(X75,X76)),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X75),s('type.list.list'('type.clos_known.val_approx'),X76))))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.bool.COND_3'(s(bool,sK14(X75,X76)),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X75),s('type.list.list'('type.clos_known.val_approx'),X76))))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK14(X75,X76)),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X75),s('type.list.list'('type.clos_known.val_approx'),X76))))),s('type.clos_known.val_approx','const.clos_known.Other_0')))) )),
  inference(forward_demodulation,[],[f5435,f410])).
fof(f5435,plain,(
  ( ! [X76,X77,X75] : (s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X75))),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X76))))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X77))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK14(X75,X76)),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X75),s('type.list.list'('type.clos_known.val_approx'),X76))))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) | s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK14(X75,X76)),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X75),s('type.list.list'('type.clos_known.val_approx'),X76))))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.bool.COND_3'(s(bool,sK14(X75,X76)),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X75),s('type.list.list'('type.clos_known.val_approx'),X76))))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK14(X75,X76)),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X75),s('type.list.list'('type.clos_known.val_approx'),X76))))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.bool.COND_3'(s(bool,sK14(X75,X76)),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X75),s('type.list.list'('type.clos_known.val_approx'),X76))))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK14(X75,X76)),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X75),s('type.list.list'('type.clos_known.val_approx'),X76))))),s('type.clos_known.val_approx','const.clos_known.Other_0')))) )),
  inference(superposition,[],[f1748,f410])).
fof(f5470,plain,(
  ( ! [X74,X72,X73] : (s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X72))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X73))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X72))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X73))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.bool.COND_3'(s(bool,sK13(X72,X73)),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X73))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X72))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X73))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.bool.COND_3'(s(bool,sK13(X72,X73)),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X73))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X72))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X73))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X72))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X73))))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X74)))))) )),
  inference(forward_demodulation,[],[f5469,f348])).
fof(f5469,plain,(
  ( ! [X74,X72,X73] : (s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X72))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X73))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.bool.COND_3'(s(bool,sK13(X72,X73)),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X73))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X72))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X73))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.bool.COND_3'(s(bool,sK13(X72,X73)),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X73))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X72))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X73))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X72))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X73))))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X74))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK13(X72,X73)),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X73))),s('type.clos_known.val_approx','const.clos_known.Other_0')))) )),
  inference(forward_demodulation,[],[f5468,f348])).
fof(f5468,plain,(
  ( ! [X74,X72,X73] : (s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X72))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X73))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.bool.COND_3'(s(bool,sK13(X72,X73)),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X73))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X72))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X73))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X72))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X73))))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X74))))) | s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK13(X72,X73)),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X73))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.bool.COND_3'(s(bool,sK13(X72,X73)),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X73))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK13(X72,X73)),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X73))),s('type.clos_known.val_approx','const.clos_known.Other_0')))) )),
  inference(forward_demodulation,[],[f5467,f348])).
fof(f5467,plain,(
  ( ! [X74,X72,X73] : (s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X72))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X73))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X72))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X73))))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X74))))) | s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK13(X72,X73)),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X73))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.bool.COND_3'(s(bool,sK13(X72,X73)),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X73))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK13(X72,X73)),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X73))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.bool.COND_3'(s(bool,sK13(X72,X73)),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X73))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK13(X72,X73)),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X73))),s('type.clos_known.val_approx','const.clos_known.Other_0')))) )),
  inference(forward_demodulation,[],[f5434,f348])).
fof(f5434,plain,(
  ( ! [X74,X72,X73] : (s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X72))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X73))))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X74))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK13(X72,X73)),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X73))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) | s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK13(X72,X73)),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X73))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.bool.COND_3'(s(bool,sK13(X72,X73)),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X73))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK13(X72,X73)),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X73))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.bool.COND_3'(s(bool,sK13(X72,X73)),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X73))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK13(X72,X73)),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X73))),s('type.clos_known.val_approx','const.clos_known.Other_0')))) )),
  inference(superposition,[],[f1748,f348])).
fof(f5433,plain,(
  ( ! [X70,X71,X69] : (s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X70))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X69))))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X71))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,'F_0'),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X69))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) | s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,'F_0'),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X69))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.bool.COND_3'(s(bool,'F_0'),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X69))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,'F_0'),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X69))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.bool.COND_3'(s(bool,'F_0'),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X69))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,'F_0'),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X69))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) | s(bool,'T_0') = s(bool,sK13(X70,X69))) )),
  inference(superposition,[],[f1748,f1672])).
fof(f5466,plain,(
  ( ! [X68,X66,X67] : (s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X66),s('type.clos_known.val_approx',X67))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X66),s('type.clos_known.val_approx',X67))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(happ(s(fun('type.clos_known.val_approx','type.clos_known.val_approx'),happ(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.clos_known.val_approx',X66))),s('type.clos_known.val_approx',X67)))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X66),s('type.clos_known.val_approx',X67))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(happ(s(fun('type.clos_known.val_approx','type.clos_known.val_approx'),happ(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.clos_known.val_approx',X66))),s('type.clos_known.val_approx',X67)))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X66),s('type.clos_known.val_approx',X67))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X66),s('type.clos_known.val_approx',X67))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X68)))))) )),
  inference(forward_demodulation,[],[f5465,f319])).
fof(f5465,plain,(
  ( ! [X68,X66,X67] : (s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X66),s('type.clos_known.val_approx',X67))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(happ(s(fun('type.clos_known.val_approx','type.clos_known.val_approx'),happ(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.clos_known.val_approx',X66))),s('type.clos_known.val_approx',X67)))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X66),s('type.clos_known.val_approx',X67))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(happ(s(fun('type.clos_known.val_approx','type.clos_known.val_approx'),happ(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.clos_known.val_approx',X66))),s('type.clos_known.val_approx',X67)))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X66),s('type.clos_known.val_approx',X67))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X66),s('type.clos_known.val_approx',X67))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X68))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',happ(s(fun('type.clos_known.val_approx','type.clos_known.val_approx'),happ(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.clos_known.val_approx',X66))),s('type.clos_known.val_approx',X67)))) )),
  inference(forward_demodulation,[],[f5464,f319])).
fof(f5464,plain,(
  ( ! [X68,X66,X67] : (s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X66),s('type.clos_known.val_approx',X67))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(happ(s(fun('type.clos_known.val_approx','type.clos_known.val_approx'),happ(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.clos_known.val_approx',X66))),s('type.clos_known.val_approx',X67)))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X66),s('type.clos_known.val_approx',X67))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X66),s('type.clos_known.val_approx',X67))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X68))))) | s('type.clos_known.val_approx',happ(s(fun('type.clos_known.val_approx','type.clos_known.val_approx'),happ(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.clos_known.val_approx',X66))),s('type.clos_known.val_approx',X67))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(happ(s(fun('type.clos_known.val_approx','type.clos_known.val_approx'),happ(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.clos_known.val_approx',X66))),s('type.clos_known.val_approx',X67)))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',happ(s(fun('type.clos_known.val_approx','type.clos_known.val_approx'),happ(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.clos_known.val_approx',X66))),s('type.clos_known.val_approx',X67)))) )),
  inference(forward_demodulation,[],[f5463,f319])).
fof(f5463,plain,(
  ( ! [X68,X66,X67] : (s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X66),s('type.clos_known.val_approx',X67))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X66),s('type.clos_known.val_approx',X67))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X68))))) | s('type.clos_known.val_approx',happ(s(fun('type.clos_known.val_approx','type.clos_known.val_approx'),happ(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.clos_known.val_approx',X66))),s('type.clos_known.val_approx',X67))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(happ(s(fun('type.clos_known.val_approx','type.clos_known.val_approx'),happ(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.clos_known.val_approx',X66))),s('type.clos_known.val_approx',X67)))))) | s('type.clos_known.val_approx',happ(s(fun('type.clos_known.val_approx','type.clos_known.val_approx'),happ(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.clos_known.val_approx',X66))),s('type.clos_known.val_approx',X67))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(happ(s(fun('type.clos_known.val_approx','type.clos_known.val_approx'),happ(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.clos_known.val_approx',X66))),s('type.clos_known.val_approx',X67)))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',happ(s(fun('type.clos_known.val_approx','type.clos_known.val_approx'),happ(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.clos_known.val_approx',X66))),s('type.clos_known.val_approx',X67)))) )),
  inference(forward_demodulation,[],[f5432,f319])).
fof(f5432,plain,(
  ( ! [X68,X66,X67] : (s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X66),s('type.clos_known.val_approx',X67))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X68))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',happ(s(fun('type.clos_known.val_approx','type.clos_known.val_approx'),happ(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.clos_known.val_approx',X66))),s('type.clos_known.val_approx',X67))) | s('type.clos_known.val_approx',happ(s(fun('type.clos_known.val_approx','type.clos_known.val_approx'),happ(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.clos_known.val_approx',X66))),s('type.clos_known.val_approx',X67))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(happ(s(fun('type.clos_known.val_approx','type.clos_known.val_approx'),happ(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.clos_known.val_approx',X66))),s('type.clos_known.val_approx',X67)))))) | s('type.clos_known.val_approx',happ(s(fun('type.clos_known.val_approx','type.clos_known.val_approx'),happ(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.clos_known.val_approx',X66))),s('type.clos_known.val_approx',X67))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(happ(s(fun('type.clos_known.val_approx','type.clos_known.val_approx'),happ(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.clos_known.val_approx',X66))),s('type.clos_known.val_approx',X67)))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',happ(s(fun('type.clos_known.val_approx','type.clos_known.val_approx'),happ(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.clos_known.val_approx',X66))),s('type.clos_known.val_approx',X67)))) )),
  inference(superposition,[],[f1748,f319])).
fof(f5462,plain,(
  ( ! [X64,X65] : (s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X64) | s('type.clos_known.val_approx',X64) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X64)))))) | s('type.clos_known.val_approx',X64) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X64)))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X64) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X64),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X65)))))) )),
  inference(forward_demodulation,[],[f5461,f254])).
fof(f5461,plain,(
  ( ! [X64,X65] : (s('type.clos_known.val_approx',X64) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X64)))))) | s('type.clos_known.val_approx',X64) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X64)))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X64) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X64),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X65))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X64)))) )),
  inference(forward_demodulation,[],[f5460,f254])).
fof(f5460,plain,(
  ( ! [X64,X65] : (s('type.clos_known.val_approx',X64) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X64)))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X64) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X64),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X65))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X64))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X64)))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X64)))) )),
  inference(forward_demodulation,[],[f5459,f254])).
fof(f5459,plain,(
  ( ! [X64,X65] : (s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X64) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X64),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X65))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X64))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X64)))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X64))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X64)))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X64)))) )),
  inference(forward_demodulation,[],[f5431,f254])).
fof(f5431,plain,(
  ( ! [X64,X65] : (s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X64),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X65))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X64))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X64))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X64)))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X64))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X64)))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X64)))) )),
  inference(superposition,[],[f1748,f254])).
fof(f5458,plain,(
  ( ! [X62,X63] : (s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X62))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X62))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X62))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X62))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X62))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X62))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X62))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X63)))))) )),
  inference(forward_demodulation,[],[f5457,f259])).
fof(f5457,plain,(
  ( ! [X62,X63] : (s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X62))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X62))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X62))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X62))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X62))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X62))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X63))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X62))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))) )),
  inference(forward_demodulation,[],[f5456,f259])).
fof(f5456,plain,(
  ( ! [X62,X63] : (s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X62))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X62))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X62))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X62))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X63))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X62))),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X62))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X62))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))) )),
  inference(forward_demodulation,[],[f5455,f259])).
fof(f5455,plain,(
  ( ! [X62,X63] : (s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X62))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X62))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X63))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X62))),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X62))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X62))),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X62))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X62))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))) )),
  inference(forward_demodulation,[],[f5430,f259])).
fof(f5430,plain,(
  ( ! [X62,X63] : (s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X62))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X63))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X62))),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X62))),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X62))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X62))),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X62))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X62))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))) )),
  inference(superposition,[],[f1748,f259])).
fof(f5429,plain,(
  ( ! [X61,X59,X60] : (s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,'F_0'),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X60))),s('type.clos_known.val_approx','const.clos_known.Other_0'))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X61))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X59))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X60))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X59))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X60))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X59))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X60)))))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X59))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X60))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X59))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X60)))))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X59))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X60))))) | s(bool,'T_0') = s(bool,sK13(X59,X60))) )),
  inference(superposition,[],[f1748,f1672])).
fof(f5418,plain,(
  ( ! [X26,X24,X23,X27,X25] : (s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,'F_0'),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X25),s('type.num.num',X26))),s('type.clos_known.val_approx','const.clos_known.Other_0'))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X27))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X23),s('type.num.num',X24))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X25),s('type.num.num',X26))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X23),s('type.num.num',X24))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X25),s('type.num.num',X26))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X23),s('type.num.num',X24))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X25),s('type.num.num',X26)))))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X23),s('type.num.num',X24))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X25),s('type.num.num',X26))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X23),s('type.num.num',X24))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X25),s('type.num.num',X26)))))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X23),s('type.num.num',X24))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X25),s('type.num.num',X26))))) | s(bool,'T_0') = s(bool,sK15(X23,X25,X24,X26))) )),
  inference(superposition,[],[f1748,f1696])).
fof(f5398,plain,(
  ( ! [X59,X57,X58,X56] : (s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,'F_0'),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X58),s('type.num.num',X59))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,'F_0'),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X58),s('type.num.num',X59))),s('type.clos_known.val_approx','const.clos_known.Other_0'))),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X56),s('type.num.num',X57))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X58),s('type.num.num',X59))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X56),s('type.num.num',X57))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X58),s('type.num.num',X59))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X56),s('type.num.num',X57))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X58),s('type.num.num',X59)))))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X56),s('type.num.num',X57))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X58),s('type.num.num',X59))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X56),s('type.num.num',X57))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X58),s('type.num.num',X59)))))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X56),s('type.num.num',X57))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X58),s('type.num.num',X59))))) | s(bool,'T_0') = s(bool,sK15(X56,X58,X57,X59))) )),
  inference(superposition,[],[f1747,f1696])).
fof(f5397,plain,(
  ( ! [X54,X52,X55,X53] : (s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,'F_0'),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X54),s('type.num.num',X55))),s('type.clos_known.val_approx','const.clos_known.Other_0'))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X52),s('type.num.num',X53))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X54),s('type.num.num',X55))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X52),s('type.num.num',X53))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X54),s('type.num.num',X55))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X52),s('type.num.num',X53))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X54),s('type.num.num',X55)))))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X52),s('type.num.num',X53))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X54),s('type.num.num',X55))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X52),s('type.num.num',X53))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X54),s('type.num.num',X55)))))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X52),s('type.num.num',X53))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X54),s('type.num.num',X55))))) | s(bool,'T_0') = s(bool,sK15(X52,X54,X53,X55))) )),
  inference(superposition,[],[f1746,f1696])).
fof(f5396,plain,(
  ( ! [X50,X48,X51,X49] : (s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,'F_0'),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X50),s('type.num.num',X51))),s('type.clos_known.val_approx','const.clos_known.Other_0'))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X48),s('type.num.num',X49))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X50),s('type.num.num',X51))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X48),s('type.num.num',X49))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X50),s('type.num.num',X51))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X48),s('type.num.num',X49))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X50),s('type.num.num',X51)))))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X48),s('type.num.num',X49))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X50),s('type.num.num',X51))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X48),s('type.num.num',X49))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X50),s('type.num.num',X51)))))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X48),s('type.num.num',X49))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X50),s('type.num.num',X51))))) | s(bool,'T_0') = s(bool,sK15(X48,X50,X49,X51))) )),
  inference(superposition,[],[f1745,f1696])).
fof(f5395,plain,(
  ( ! [X47,X45,X43,X46,X44] : (s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,'F_0'),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X45),s('type.num.num',X46))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) != s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X47),s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,'F_0'),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X45),s('type.num.num',X46))),s('type.clos_known.val_approx','const.clos_known.Other_0'))))) | s(bool,'T_0') = s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',X47),s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X43),s('type.num.num',X44))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X45),s('type.num.num',X46))))))) | s(bool,'T_0') = s(bool,sK15(X43,X45,X44,X46))) )),
  inference(superposition,[],[f1440,f1696])).
fof(f5394,plain,(
  ( ! [X39,X41,X38,X42,X40] : (s('type.clos_known.val_approx',X42) != s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,'F_0'),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X40),s('type.num.num',X41))),s('type.clos_known.val_approx','const.clos_known.Other_0'))),s('type.clos_known.val_approx',X42))) | s(bool,'T_0') = s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X38),s('type.num.num',X39))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X40),s('type.num.num',X41))))),s('type.clos_known.val_approx',X42))) | s(bool,'T_0') = s(bool,sK15(X38,X40,X39,X41))) )),
  inference(superposition,[],[f1440,f1696])).
fof(f5393,plain,(
  ( ! [X37,X35,X33,X36,X34] : (p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',X37),s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,'F_0'),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X35),s('type.num.num',X36))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X33),s('type.num.num',X34))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X35),s('type.num.num',X36))))) != s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X37),s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X33),s('type.num.num',X34))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X35),s('type.num.num',X36))))))) | s(bool,'T_0') = s(bool,sK15(X33,X35,X34,X36))) )),
  inference(superposition,[],[f329,f1696])).
fof(f5392,plain,(
  ( ! [X30,X28,X31,X29,X32] : (p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,'F_0'),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X30),s('type.num.num',X31))),s('type.clos_known.val_approx','const.clos_known.Other_0'))),s('type.clos_known.val_approx',X32)))) | s('type.clos_known.val_approx',X32) != s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X28),s('type.num.num',X29))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X30),s('type.num.num',X31))))),s('type.clos_known.val_approx',X32))) | s(bool,'T_0') = s(bool,sK15(X28,X30,X29,X31))) )),
  inference(superposition,[],[f329,f1696])).
fof(f5391,plain,(
  ( ! [X26,X24,X23,X27,X25] : (~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',X27),s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,'F_0'),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X25),s('type.num.num',X26))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X23),s('type.num.num',X24))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X25),s('type.num.num',X26))))) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X27),s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X23),s('type.num.num',X24))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X25),s('type.num.num',X26))))))) | s(bool,'T_0') = s(bool,sK15(X23,X25,X24,X26))) )),
  inference(superposition,[],[f328,f1696])).
fof(f5390,plain,(
  ( ! [X21,X19,X22,X20,X18] : (~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,'F_0'),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X20),s('type.num.num',X21))),s('type.clos_known.val_approx','const.clos_known.Other_0'))),s('type.clos_known.val_approx',X22)))) | s('type.clos_known.val_approx',X22) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X18),s('type.num.num',X19))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X20),s('type.num.num',X21))))),s('type.clos_known.val_approx',X22))) | s(bool,'T_0') = s(bool,sK15(X18,X20,X19,X21))) )),
  inference(superposition,[],[f328,f1696])).
fof(f5386,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X2),s('type.num.num',X3))) != s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,'F_0'),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X2),s('type.num.num',X3))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) | s(bool,'T_0') = s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X2),s('type.num.num',X3))))) | s(bool,'T_0') = s(bool,sK15(X0,X2,X1,X3))) )),
  inference(superposition,[],[f1440,f1696])).
fof(f5385,plain,(
  ( ! [X2,X0,X1] : (s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,'F_0'),s('type.clos_known.val_approx',X0),s('type.clos_known.val_approx','const.clos_known.Other_0'))) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X1),s('type.num.num',X2))),s('type.clos_known.val_approx',X0))) | s(bool,'T_0') = s(bool,sK15(X1,sK8(X0),X2,sK9(X0))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X0) | s('type.clos_known.val_approx',X0) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(X0)))) | s('type.clos_known.val_approx',X0) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(X0)))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X0)) )),
  inference(superposition,[],[f1696,f262])).
fof(f5384,plain,(
  ( ! [X2,X0,X1] : (s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X0),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X1),s('type.num.num',X2))))) = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,'F_0'),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X1),s('type.num.num',X2))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) | s(bool,'T_0') = s(bool,sK15(sK8(X0),X1,sK9(X0),X2)) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X0) | s('type.clos_known.val_approx',X0) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(X0)))) | s('type.clos_known.val_approx',X0) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(X0)))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X0)) )),
  inference(superposition,[],[f1696,f262])).
fof(f5353,plain,(
  ( ! [X21,X20] : (s('type.clos_known.val_approx',X20) != s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X21),s('type.clos_known.val_approx',X20))) | s(bool,'T_0') = s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',X21),s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X20),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X20) | s('type.clos_known.val_approx',X20) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(X20)))) | s('type.clos_known.val_approx',X20) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(X20)))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X20)) )),
  inference(superposition,[],[f1440,f1747])).
fof(f5352,plain,(
  ( ! [X19,X18] : (s('type.clos_known.val_approx',X19) != s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X18),s('type.clos_known.val_approx',X19))) | s(bool,'T_0') = s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X18),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))),s('type.clos_known.val_approx',X19))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X18) | s('type.clos_known.val_approx',X18) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(X18)))) | s('type.clos_known.val_approx',X18) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(X18)))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X18)) )),
  inference(superposition,[],[f1440,f1747])).
fof(f5351,plain,(
  ( ! [X17,X16] : (p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',X17),s('type.clos_known.val_approx',X16)))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X16),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) != s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X17),s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X16),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X16) | s('type.clos_known.val_approx',X16) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(X16)))) | s('type.clos_known.val_approx',X16) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(X16)))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X16)) )),
  inference(superposition,[],[f329,f1747])).
fof(f5350,plain,(
  ( ! [X14,X15] : (p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',X14),s('type.clos_known.val_approx',X15)))) | s('type.clos_known.val_approx',X15) != s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X14),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))),s('type.clos_known.val_approx',X15))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X14) | s('type.clos_known.val_approx',X14) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(X14)))) | s('type.clos_known.val_approx',X14) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(X14)))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X14)) )),
  inference(superposition,[],[f329,f1747])).
fof(f5349,plain,(
  ( ! [X12,X13] : (~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',X13),s('type.clos_known.val_approx',X12)))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X12),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X13),s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X12),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X12) | s('type.clos_known.val_approx',X12) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(X12)))) | s('type.clos_known.val_approx',X12) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(X12)))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X12)) )),
  inference(superposition,[],[f328,f1747])).
fof(f5348,plain,(
  ( ! [X10,X11] : (~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',X10),s('type.clos_known.val_approx',X11)))) | s('type.clos_known.val_approx',X11) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X10),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))),s('type.clos_known.val_approx',X11))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X10) | s('type.clos_known.val_approx',X10) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(X10)))) | s('type.clos_known.val_approx',X10) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(X10)))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X10)) )),
  inference(superposition,[],[f328,f1747])).
fof(f5376,plain,(
  ( ! [X45,X43,X46,X44] : (s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X43),s('type.num.num',X45))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X44),s('type.num.num',X46))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X43),s('type.num.num',X45))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X44),s('type.num.num',X46))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.bool.COND_3'(s(bool,sK15(X43,X44,X45,X46)),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X44),s('type.num.num',X46))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X43),s('type.num.num',X45))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X44),s('type.num.num',X46))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.bool.COND_3'(s(bool,sK15(X43,X44,X45,X46)),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X44),s('type.num.num',X46))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X43),s('type.num.num',X45))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X44),s('type.num.num',X46))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X43),s('type.num.num',X45))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X44),s('type.num.num',X46))))) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X43),s('type.num.num',X45))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X44),s('type.num.num',X46))))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))) )),
  inference(forward_demodulation,[],[f5375,f399])).
fof(f5375,plain,(
  ( ! [X45,X43,X46,X44] : (s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X43),s('type.num.num',X45))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X44),s('type.num.num',X46))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.bool.COND_3'(s(bool,sK15(X43,X44,X45,X46)),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X44),s('type.num.num',X46))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X43),s('type.num.num',X45))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X44),s('type.num.num',X46))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.bool.COND_3'(s(bool,sK15(X43,X44,X45,X46)),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X44),s('type.num.num',X46))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X43),s('type.num.num',X45))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X44),s('type.num.num',X46))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X43),s('type.num.num',X45))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X44),s('type.num.num',X46))))) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X43),s('type.num.num',X45))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X44),s('type.num.num',X46))))),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK15(X43,X44,X45,X46)),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X44),s('type.num.num',X46))),s('type.clos_known.val_approx','const.clos_known.Other_0')))) )),
  inference(forward_demodulation,[],[f5374,f399])).
fof(f5374,plain,(
  ( ! [X45,X43,X46,X44] : (s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X43),s('type.num.num',X45))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X44),s('type.num.num',X46))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.bool.COND_3'(s(bool,sK15(X43,X44,X45,X46)),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X44),s('type.num.num',X46))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X43),s('type.num.num',X45))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X44),s('type.num.num',X46))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X43),s('type.num.num',X45))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X44),s('type.num.num',X46))))) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X43),s('type.num.num',X45))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X44),s('type.num.num',X46))))),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) | s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK15(X43,X44,X45,X46)),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X44),s('type.num.num',X46))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.bool.COND_3'(s(bool,sK15(X43,X44,X45,X46)),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X44),s('type.num.num',X46))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK15(X43,X44,X45,X46)),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X44),s('type.num.num',X46))),s('type.clos_known.val_approx','const.clos_known.Other_0')))) )),
  inference(forward_demodulation,[],[f5373,f399])).
fof(f5373,plain,(
  ( ! [X45,X43,X46,X44] : (s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X43),s('type.num.num',X45))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X44),s('type.num.num',X46))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X43),s('type.num.num',X45))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X44),s('type.num.num',X46))))) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X43),s('type.num.num',X45))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X44),s('type.num.num',X46))))),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) | s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK15(X43,X44,X45,X46)),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X44),s('type.num.num',X46))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.bool.COND_3'(s(bool,sK15(X43,X44,X45,X46)),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X44),s('type.num.num',X46))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK15(X43,X44,X45,X46)),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X44),s('type.num.num',X46))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.bool.COND_3'(s(bool,sK15(X43,X44,X45,X46)),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X44),s('type.num.num',X46))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK15(X43,X44,X45,X46)),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X44),s('type.num.num',X46))),s('type.clos_known.val_approx','const.clos_known.Other_0')))) )),
  inference(forward_demodulation,[],[f5343,f399])).
fof(f5343,plain,(
  ( ! [X45,X43,X46,X44] : (s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X43),s('type.num.num',X45))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X44),s('type.num.num',X46))))) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X43),s('type.num.num',X45))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X44),s('type.num.num',X46))))),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK15(X43,X44,X45,X46)),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X44),s('type.num.num',X46))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) | s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK15(X43,X44,X45,X46)),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X44),s('type.num.num',X46))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.bool.COND_3'(s(bool,sK15(X43,X44,X45,X46)),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X44),s('type.num.num',X46))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK15(X43,X44,X45,X46)),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X44),s('type.num.num',X46))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.bool.COND_3'(s(bool,sK15(X43,X44,X45,X46)),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X44),s('type.num.num',X46))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK15(X43,X44,X45,X46)),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X44),s('type.num.num',X46))),s('type.clos_known.val_approx','const.clos_known.Other_0')))) )),
  inference(superposition,[],[f1747,f399])).
fof(f5372,plain,(
  ( ! [X41,X42] : (s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X41))),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X42))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X41))),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X42))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.bool.COND_3'(s(bool,sK14(X41,X42)),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X41),s('type.list.list'('type.clos_known.val_approx'),X42))))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X41))),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X42))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.bool.COND_3'(s(bool,sK14(X41,X42)),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X41),s('type.list.list'('type.clos_known.val_approx'),X42))))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X41))),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X42))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X41))),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X42))))) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X41))),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X42))))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))) )),
  inference(forward_demodulation,[],[f5371,f410])).
fof(f5371,plain,(
  ( ! [X41,X42] : (s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X41))),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X42))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.bool.COND_3'(s(bool,sK14(X41,X42)),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X41),s('type.list.list'('type.clos_known.val_approx'),X42))))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X41))),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X42))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.bool.COND_3'(s(bool,sK14(X41,X42)),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X41),s('type.list.list'('type.clos_known.val_approx'),X42))))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X41))),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X42))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X41))),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X42))))) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X41))),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X42))))),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK14(X41,X42)),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X41),s('type.list.list'('type.clos_known.val_approx'),X42))))),s('type.clos_known.val_approx','const.clos_known.Other_0')))) )),
  inference(forward_demodulation,[],[f5370,f410])).
fof(f5370,plain,(
  ( ! [X41,X42] : (s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X41))),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X42))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.bool.COND_3'(s(bool,sK14(X41,X42)),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X41),s('type.list.list'('type.clos_known.val_approx'),X42))))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X41))),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X42))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X41))),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X42))))) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X41))),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X42))))),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) | s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK14(X41,X42)),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X41),s('type.list.list'('type.clos_known.val_approx'),X42))))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.bool.COND_3'(s(bool,sK14(X41,X42)),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X41),s('type.list.list'('type.clos_known.val_approx'),X42))))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK14(X41,X42)),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X41),s('type.list.list'('type.clos_known.val_approx'),X42))))),s('type.clos_known.val_approx','const.clos_known.Other_0')))) )),
  inference(forward_demodulation,[],[f5369,f410])).
fof(f5369,plain,(
  ( ! [X41,X42] : (s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X41))),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X42))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X41))),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X42))))) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X41))),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X42))))),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) | s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK14(X41,X42)),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X41),s('type.list.list'('type.clos_known.val_approx'),X42))))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.bool.COND_3'(s(bool,sK14(X41,X42)),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X41),s('type.list.list'('type.clos_known.val_approx'),X42))))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK14(X41,X42)),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X41),s('type.list.list'('type.clos_known.val_approx'),X42))))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.bool.COND_3'(s(bool,sK14(X41,X42)),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X41),s('type.list.list'('type.clos_known.val_approx'),X42))))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK14(X41,X42)),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X41),s('type.list.list'('type.clos_known.val_approx'),X42))))),s('type.clos_known.val_approx','const.clos_known.Other_0')))) )),
  inference(forward_demodulation,[],[f5342,f410])).
fof(f5342,plain,(
  ( ! [X41,X42] : (s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X41))),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X42))))) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X41))),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X42))))),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK14(X41,X42)),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X41),s('type.list.list'('type.clos_known.val_approx'),X42))))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) | s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK14(X41,X42)),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X41),s('type.list.list'('type.clos_known.val_approx'),X42))))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.bool.COND_3'(s(bool,sK14(X41,X42)),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X41),s('type.list.list'('type.clos_known.val_approx'),X42))))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK14(X41,X42)),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X41),s('type.list.list'('type.clos_known.val_approx'),X42))))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.bool.COND_3'(s(bool,sK14(X41,X42)),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X41),s('type.list.list'('type.clos_known.val_approx'),X42))))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK14(X41,X42)),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X41),s('type.list.list'('type.clos_known.val_approx'),X42))))),s('type.clos_known.val_approx','const.clos_known.Other_0')))) )),
  inference(superposition,[],[f1747,f410])).
fof(f5368,plain,(
  ( ! [X39,X40] : (s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X39))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X40))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X39))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X40))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.bool.COND_3'(s(bool,sK13(X39,X40)),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X40))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X39))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X40))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.bool.COND_3'(s(bool,sK13(X39,X40)),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X40))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X39))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X40))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X39))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X40))))) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X39))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X40))))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))) )),
  inference(forward_demodulation,[],[f5367,f348])).
fof(f5367,plain,(
  ( ! [X39,X40] : (s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X39))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X40))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.bool.COND_3'(s(bool,sK13(X39,X40)),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X40))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X39))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X40))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.bool.COND_3'(s(bool,sK13(X39,X40)),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X40))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X39))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X40))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X39))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X40))))) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X39))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X40))))),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK13(X39,X40)),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X40))),s('type.clos_known.val_approx','const.clos_known.Other_0')))) )),
  inference(forward_demodulation,[],[f5366,f348])).
fof(f5366,plain,(
  ( ! [X39,X40] : (s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X39))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X40))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.bool.COND_3'(s(bool,sK13(X39,X40)),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X40))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X39))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X40))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X39))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X40))))) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X39))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X40))))),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) | s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK13(X39,X40)),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X40))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.bool.COND_3'(s(bool,sK13(X39,X40)),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X40))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK13(X39,X40)),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X40))),s('type.clos_known.val_approx','const.clos_known.Other_0')))) )),
  inference(forward_demodulation,[],[f5365,f348])).
fof(f5365,plain,(
  ( ! [X39,X40] : (s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X39))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X40))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X39))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X40))))) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X39))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X40))))),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) | s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK13(X39,X40)),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X40))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.bool.COND_3'(s(bool,sK13(X39,X40)),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X40))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK13(X39,X40)),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X40))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.bool.COND_3'(s(bool,sK13(X39,X40)),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X40))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK13(X39,X40)),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X40))),s('type.clos_known.val_approx','const.clos_known.Other_0')))) )),
  inference(forward_demodulation,[],[f5341,f348])).
fof(f5341,plain,(
  ( ! [X39,X40] : (s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X39))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X40))))) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X39))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X40))))),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK13(X39,X40)),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X40))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) | s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK13(X39,X40)),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X40))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.bool.COND_3'(s(bool,sK13(X39,X40)),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X40))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK13(X39,X40)),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X40))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.bool.COND_3'(s(bool,sK13(X39,X40)),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X40))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK13(X39,X40)),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X40))),s('type.clos_known.val_approx','const.clos_known.Other_0')))) )),
  inference(superposition,[],[f1747,f348])).
fof(f5340,plain,(
  ( ! [X37,X38] : (s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X38))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X37))))) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X38))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X37))))),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,'F_0'),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X37))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) | s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,'F_0'),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X37))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.bool.COND_3'(s(bool,'F_0'),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X37))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,'F_0'),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X37))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.bool.COND_3'(s(bool,'F_0'),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X37))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,'F_0'),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X37))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) | s(bool,'T_0') = s(bool,sK13(X38,X37))) )),
  inference(superposition,[],[f1747,f1672])).
fof(f5364,plain,(
  ( ! [X35,X36] : (s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X35),s('type.clos_known.val_approx',X36))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X35),s('type.clos_known.val_approx',X36))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(happ(s(fun('type.clos_known.val_approx','type.clos_known.val_approx'),happ(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.clos_known.val_approx',X35))),s('type.clos_known.val_approx',X36)))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X35),s('type.clos_known.val_approx',X36))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(happ(s(fun('type.clos_known.val_approx','type.clos_known.val_approx'),happ(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.clos_known.val_approx',X35))),s('type.clos_known.val_approx',X36)))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X35),s('type.clos_known.val_approx',X36))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X35),s('type.clos_known.val_approx',X36))) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X35),s('type.clos_known.val_approx',X36))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))) )),
  inference(forward_demodulation,[],[f5363,f319])).
fof(f5363,plain,(
  ( ! [X35,X36] : (s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X35),s('type.clos_known.val_approx',X36))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(happ(s(fun('type.clos_known.val_approx','type.clos_known.val_approx'),happ(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.clos_known.val_approx',X35))),s('type.clos_known.val_approx',X36)))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X35),s('type.clos_known.val_approx',X36))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(happ(s(fun('type.clos_known.val_approx','type.clos_known.val_approx'),happ(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.clos_known.val_approx',X35))),s('type.clos_known.val_approx',X36)))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X35),s('type.clos_known.val_approx',X36))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X35),s('type.clos_known.val_approx',X36))) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X35),s('type.clos_known.val_approx',X36))),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',happ(s(fun('type.clos_known.val_approx','type.clos_known.val_approx'),happ(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.clos_known.val_approx',X35))),s('type.clos_known.val_approx',X36)))) )),
  inference(forward_demodulation,[],[f5362,f319])).
fof(f5362,plain,(
  ( ! [X35,X36] : (s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X35),s('type.clos_known.val_approx',X36))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(happ(s(fun('type.clos_known.val_approx','type.clos_known.val_approx'),happ(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.clos_known.val_approx',X35))),s('type.clos_known.val_approx',X36)))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X35),s('type.clos_known.val_approx',X36))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X35),s('type.clos_known.val_approx',X36))) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X35),s('type.clos_known.val_approx',X36))),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) | s('type.clos_known.val_approx',happ(s(fun('type.clos_known.val_approx','type.clos_known.val_approx'),happ(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.clos_known.val_approx',X35))),s('type.clos_known.val_approx',X36))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(happ(s(fun('type.clos_known.val_approx','type.clos_known.val_approx'),happ(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.clos_known.val_approx',X35))),s('type.clos_known.val_approx',X36)))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',happ(s(fun('type.clos_known.val_approx','type.clos_known.val_approx'),happ(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.clos_known.val_approx',X35))),s('type.clos_known.val_approx',X36)))) )),
  inference(forward_demodulation,[],[f5361,f319])).
fof(f5361,plain,(
  ( ! [X35,X36] : (s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X35),s('type.clos_known.val_approx',X36))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X35),s('type.clos_known.val_approx',X36))) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X35),s('type.clos_known.val_approx',X36))),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) | s('type.clos_known.val_approx',happ(s(fun('type.clos_known.val_approx','type.clos_known.val_approx'),happ(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.clos_known.val_approx',X35))),s('type.clos_known.val_approx',X36))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(happ(s(fun('type.clos_known.val_approx','type.clos_known.val_approx'),happ(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.clos_known.val_approx',X35))),s('type.clos_known.val_approx',X36)))))) | s('type.clos_known.val_approx',happ(s(fun('type.clos_known.val_approx','type.clos_known.val_approx'),happ(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.clos_known.val_approx',X35))),s('type.clos_known.val_approx',X36))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(happ(s(fun('type.clos_known.val_approx','type.clos_known.val_approx'),happ(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.clos_known.val_approx',X35))),s('type.clos_known.val_approx',X36)))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',happ(s(fun('type.clos_known.val_approx','type.clos_known.val_approx'),happ(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.clos_known.val_approx',X35))),s('type.clos_known.val_approx',X36)))) )),
  inference(forward_demodulation,[],[f5339,f319])).
fof(f5339,plain,(
  ( ! [X35,X36] : (s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X35),s('type.clos_known.val_approx',X36))) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X35),s('type.clos_known.val_approx',X36))),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',happ(s(fun('type.clos_known.val_approx','type.clos_known.val_approx'),happ(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.clos_known.val_approx',X35))),s('type.clos_known.val_approx',X36))) | s('type.clos_known.val_approx',happ(s(fun('type.clos_known.val_approx','type.clos_known.val_approx'),happ(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.clos_known.val_approx',X35))),s('type.clos_known.val_approx',X36))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(happ(s(fun('type.clos_known.val_approx','type.clos_known.val_approx'),happ(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.clos_known.val_approx',X35))),s('type.clos_known.val_approx',X36)))))) | s('type.clos_known.val_approx',happ(s(fun('type.clos_known.val_approx','type.clos_known.val_approx'),happ(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.clos_known.val_approx',X35))),s('type.clos_known.val_approx',X36))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(happ(s(fun('type.clos_known.val_approx','type.clos_known.val_approx'),happ(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.clos_known.val_approx',X35))),s('type.clos_known.val_approx',X36)))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',happ(s(fun('type.clos_known.val_approx','type.clos_known.val_approx'),happ(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.clos_known.val_approx',X35))),s('type.clos_known.val_approx',X36)))) )),
  inference(superposition,[],[f1747,f319])).
fof(f5360,plain,(
  ( ! [X34] : (s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X34) | s('type.clos_known.val_approx',X34) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X34)))))) | s('type.clos_known.val_approx',X34) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X34)))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X34) | s('type.clos_known.val_approx',X34) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X34),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))) )),
  inference(forward_demodulation,[],[f5359,f254])).
fof(f5359,plain,(
  ( ! [X34] : (s('type.clos_known.val_approx',X34) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X34)))))) | s('type.clos_known.val_approx',X34) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X34)))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X34) | s('type.clos_known.val_approx',X34) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X34),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X34)))) )),
  inference(forward_demodulation,[],[f5358,f254])).
fof(f5358,plain,(
  ( ! [X34] : (s('type.clos_known.val_approx',X34) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X34)))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X34) | s('type.clos_known.val_approx',X34) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X34),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X34))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X34)))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X34)))) )),
  inference(forward_demodulation,[],[f5357,f254])).
fof(f5357,plain,(
  ( ! [X34] : (s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X34) | s('type.clos_known.val_approx',X34) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X34),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X34))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X34)))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X34))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X34)))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X34)))) )),
  inference(forward_demodulation,[],[f5338,f254])).
fof(f5338,plain,(
  ( ! [X34] : (s('type.clos_known.val_approx',X34) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X34),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X34))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X34))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X34)))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X34))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X34)))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X34)))) )),
  inference(superposition,[],[f1747,f254])).
fof(f5336,plain,(
  ( ! [X31,X32] : (s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,'F_0'),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X32))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,'F_0'),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X32))),s('type.clos_known.val_approx','const.clos_known.Other_0'))),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X31))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X32))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X31))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X32))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X31))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X32)))))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X31))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X32))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X31))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X32)))))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X31))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X32))))) | s(bool,'T_0') = s(bool,sK13(X31,X32))) )),
  inference(superposition,[],[f1747,f1672])).
fof(f5284,plain,(
  ( ! [X21,X20] : (s('type.clos_known.val_approx','const.clos_known.Other_0') != s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X21),s('type.clos_known.val_approx','const.clos_known.Other_0'))) | s(bool,'T_0') = s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',X21),s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx',X20))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X20) | s('type.clos_known.val_approx',X20) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(X20)))) | s('type.clos_known.val_approx',X20) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(X20)))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X20)) )),
  inference(superposition,[],[f1440,f1746])).
fof(f5283,plain,(
  ( ! [X19,X18] : (s('type.clos_known.val_approx',X19) != s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx',X19))) | s(bool,'T_0') = s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx',X18))),s('type.clos_known.val_approx',X19))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X18) | s('type.clos_known.val_approx',X18) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(X18)))) | s('type.clos_known.val_approx',X18) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(X18)))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X18)) )),
  inference(superposition,[],[f1440,f1746])).
fof(f5282,plain,(
  ( ! [X17,X16] : (p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',X17),s('type.clos_known.val_approx','const.clos_known.Other_0')))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx',X16))) != s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X17),s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx',X16))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X16) | s('type.clos_known.val_approx',X16) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(X16)))) | s('type.clos_known.val_approx',X16) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(X16)))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X16)) )),
  inference(superposition,[],[f329,f1746])).
fof(f5281,plain,(
  ( ! [X14,X15] : (p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx',X15)))) | s('type.clos_known.val_approx',X15) != s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx',X14))),s('type.clos_known.val_approx',X15))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X14) | s('type.clos_known.val_approx',X14) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(X14)))) | s('type.clos_known.val_approx',X14) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(X14)))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X14)) )),
  inference(superposition,[],[f329,f1746])).
fof(f5280,plain,(
  ( ! [X12,X13] : (~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',X13),s('type.clos_known.val_approx','const.clos_known.Other_0')))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx',X12))) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X13),s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx',X12))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X12) | s('type.clos_known.val_approx',X12) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(X12)))) | s('type.clos_known.val_approx',X12) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(X12)))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X12)) )),
  inference(superposition,[],[f328,f1746])).
fof(f5279,plain,(
  ( ! [X10,X11] : (~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx',X11)))) | s('type.clos_known.val_approx',X11) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx',X10))),s('type.clos_known.val_approx',X11))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X10) | s('type.clos_known.val_approx',X10) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(X10)))) | s('type.clos_known.val_approx',X10) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(X10)))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X10)) )),
  inference(superposition,[],[f328,f1746])).
fof(f5306,plain,(
  ( ! [X45,X43,X44,X42] : (s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X42),s('type.num.num',X44))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X43),s('type.num.num',X45))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X42),s('type.num.num',X44))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X43),s('type.num.num',X45))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.bool.COND_3'(s(bool,sK15(X42,X43,X44,X45)),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X43),s('type.num.num',X45))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X42),s('type.num.num',X44))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X43),s('type.num.num',X45))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.bool.COND_3'(s(bool,sK15(X42,X43,X44,X45)),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X43),s('type.num.num',X45))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X42),s('type.num.num',X44))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X43),s('type.num.num',X45))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X42),s('type.num.num',X44))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X43),s('type.num.num',X45)))))))) )),
  inference(forward_demodulation,[],[f5305,f399])).
fof(f5305,plain,(
  ( ! [X45,X43,X44,X42] : (s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X42),s('type.num.num',X44))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X43),s('type.num.num',X45))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.bool.COND_3'(s(bool,sK15(X42,X43,X44,X45)),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X43),s('type.num.num',X45))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X42),s('type.num.num',X44))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X43),s('type.num.num',X45))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.bool.COND_3'(s(bool,sK15(X42,X43,X44,X45)),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X43),s('type.num.num',X45))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X42),s('type.num.num',X44))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X43),s('type.num.num',X45))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X42),s('type.num.num',X44))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X43),s('type.num.num',X45))))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK15(X42,X43,X44,X45)),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X43),s('type.num.num',X45))),s('type.clos_known.val_approx','const.clos_known.Other_0')))) )),
  inference(forward_demodulation,[],[f5304,f399])).
fof(f5304,plain,(
  ( ! [X45,X43,X44,X42] : (s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X42),s('type.num.num',X44))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X43),s('type.num.num',X45))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.bool.COND_3'(s(bool,sK15(X42,X43,X44,X45)),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X43),s('type.num.num',X45))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X42),s('type.num.num',X44))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X43),s('type.num.num',X45))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X42),s('type.num.num',X44))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X43),s('type.num.num',X45))))))) | s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK15(X42,X43,X44,X45)),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X43),s('type.num.num',X45))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.bool.COND_3'(s(bool,sK15(X42,X43,X44,X45)),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X43),s('type.num.num',X45))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK15(X42,X43,X44,X45)),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X43),s('type.num.num',X45))),s('type.clos_known.val_approx','const.clos_known.Other_0')))) )),
  inference(forward_demodulation,[],[f5303,f399])).
fof(f5303,plain,(
  ( ! [X45,X43,X44,X42] : (s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X42),s('type.num.num',X44))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X43),s('type.num.num',X45))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X42),s('type.num.num',X44))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X43),s('type.num.num',X45))))))) | s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK15(X42,X43,X44,X45)),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X43),s('type.num.num',X45))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.bool.COND_3'(s(bool,sK15(X42,X43,X44,X45)),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X43),s('type.num.num',X45))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK15(X42,X43,X44,X45)),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X43),s('type.num.num',X45))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.bool.COND_3'(s(bool,sK15(X42,X43,X44,X45)),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X43),s('type.num.num',X45))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK15(X42,X43,X44,X45)),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X43),s('type.num.num',X45))),s('type.clos_known.val_approx','const.clos_known.Other_0')))) )),
  inference(forward_demodulation,[],[f5274,f399])).
fof(f5274,plain,(
  ( ! [X45,X43,X44,X42] : (s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X42),s('type.num.num',X44))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X43),s('type.num.num',X45))))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK15(X42,X43,X44,X45)),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X43),s('type.num.num',X45))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) | s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK15(X42,X43,X44,X45)),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X43),s('type.num.num',X45))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.bool.COND_3'(s(bool,sK15(X42,X43,X44,X45)),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X43),s('type.num.num',X45))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK15(X42,X43,X44,X45)),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X43),s('type.num.num',X45))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.bool.COND_3'(s(bool,sK15(X42,X43,X44,X45)),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X43),s('type.num.num',X45))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK15(X42,X43,X44,X45)),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X43),s('type.num.num',X45))),s('type.clos_known.val_approx','const.clos_known.Other_0')))) )),
  inference(superposition,[],[f1746,f399])).
fof(f5302,plain,(
  ( ! [X41,X40] : (s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X40))),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X41))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X40))),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X41))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.bool.COND_3'(s(bool,sK14(X40,X41)),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X40),s('type.list.list'('type.clos_known.val_approx'),X41))))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X40))),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X41))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.bool.COND_3'(s(bool,sK14(X40,X41)),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X40),s('type.list.list'('type.clos_known.val_approx'),X41))))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X40))),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X41))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X40))),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X41)))))))) )),
  inference(forward_demodulation,[],[f5301,f410])).
fof(f5301,plain,(
  ( ! [X41,X40] : (s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X40))),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X41))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.bool.COND_3'(s(bool,sK14(X40,X41)),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X40),s('type.list.list'('type.clos_known.val_approx'),X41))))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X40))),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X41))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.bool.COND_3'(s(bool,sK14(X40,X41)),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X40),s('type.list.list'('type.clos_known.val_approx'),X41))))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X40))),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X41))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X40))),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X41))))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK14(X40,X41)),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X40),s('type.list.list'('type.clos_known.val_approx'),X41))))),s('type.clos_known.val_approx','const.clos_known.Other_0')))) )),
  inference(forward_demodulation,[],[f5300,f410])).
fof(f5300,plain,(
  ( ! [X41,X40] : (s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X40))),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X41))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.bool.COND_3'(s(bool,sK14(X40,X41)),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X40),s('type.list.list'('type.clos_known.val_approx'),X41))))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X40))),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X41))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X40))),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X41))))))) | s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK14(X40,X41)),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X40),s('type.list.list'('type.clos_known.val_approx'),X41))))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.bool.COND_3'(s(bool,sK14(X40,X41)),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X40),s('type.list.list'('type.clos_known.val_approx'),X41))))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK14(X40,X41)),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X40),s('type.list.list'('type.clos_known.val_approx'),X41))))),s('type.clos_known.val_approx','const.clos_known.Other_0')))) )),
  inference(forward_demodulation,[],[f5299,f410])).
fof(f5299,plain,(
  ( ! [X41,X40] : (s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X40))),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X41))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X40))),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X41))))))) | s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK14(X40,X41)),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X40),s('type.list.list'('type.clos_known.val_approx'),X41))))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.bool.COND_3'(s(bool,sK14(X40,X41)),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X40),s('type.list.list'('type.clos_known.val_approx'),X41))))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK14(X40,X41)),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X40),s('type.list.list'('type.clos_known.val_approx'),X41))))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.bool.COND_3'(s(bool,sK14(X40,X41)),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X40),s('type.list.list'('type.clos_known.val_approx'),X41))))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK14(X40,X41)),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X40),s('type.list.list'('type.clos_known.val_approx'),X41))))),s('type.clos_known.val_approx','const.clos_known.Other_0')))) )),
  inference(forward_demodulation,[],[f5273,f410])).
fof(f5273,plain,(
  ( ! [X41,X40] : (s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X40))),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X41))))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK14(X40,X41)),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X40),s('type.list.list'('type.clos_known.val_approx'),X41))))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) | s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK14(X40,X41)),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X40),s('type.list.list'('type.clos_known.val_approx'),X41))))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.bool.COND_3'(s(bool,sK14(X40,X41)),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X40),s('type.list.list'('type.clos_known.val_approx'),X41))))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK14(X40,X41)),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X40),s('type.list.list'('type.clos_known.val_approx'),X41))))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.bool.COND_3'(s(bool,sK14(X40,X41)),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X40),s('type.list.list'('type.clos_known.val_approx'),X41))))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK14(X40,X41)),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X40),s('type.list.list'('type.clos_known.val_approx'),X41))))),s('type.clos_known.val_approx','const.clos_known.Other_0')))) )),
  inference(superposition,[],[f1746,f410])).
fof(f5298,plain,(
  ( ! [X39,X38] : (s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X38))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X39))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X38))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X39))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.bool.COND_3'(s(bool,sK13(X38,X39)),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X39))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X38))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X39))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.bool.COND_3'(s(bool,sK13(X38,X39)),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X39))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X38))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X39))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X38))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X39)))))))) )),
  inference(forward_demodulation,[],[f5297,f348])).
fof(f5297,plain,(
  ( ! [X39,X38] : (s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X38))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X39))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.bool.COND_3'(s(bool,sK13(X38,X39)),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X39))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X38))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X39))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.bool.COND_3'(s(bool,sK13(X38,X39)),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X39))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X38))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X39))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X38))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X39))))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK13(X38,X39)),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X39))),s('type.clos_known.val_approx','const.clos_known.Other_0')))) )),
  inference(forward_demodulation,[],[f5296,f348])).
fof(f5296,plain,(
  ( ! [X39,X38] : (s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X38))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X39))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.bool.COND_3'(s(bool,sK13(X38,X39)),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X39))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X38))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X39))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X38))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X39))))))) | s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK13(X38,X39)),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X39))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.bool.COND_3'(s(bool,sK13(X38,X39)),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X39))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK13(X38,X39)),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X39))),s('type.clos_known.val_approx','const.clos_known.Other_0')))) )),
  inference(forward_demodulation,[],[f5295,f348])).
fof(f5295,plain,(
  ( ! [X39,X38] : (s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X38))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X39))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X38))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X39))))))) | s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK13(X38,X39)),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X39))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.bool.COND_3'(s(bool,sK13(X38,X39)),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X39))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK13(X38,X39)),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X39))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.bool.COND_3'(s(bool,sK13(X38,X39)),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X39))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK13(X38,X39)),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X39))),s('type.clos_known.val_approx','const.clos_known.Other_0')))) )),
  inference(forward_demodulation,[],[f5272,f348])).
fof(f5272,plain,(
  ( ! [X39,X38] : (s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X38))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X39))))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK13(X38,X39)),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X39))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) | s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK13(X38,X39)),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X39))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.bool.COND_3'(s(bool,sK13(X38,X39)),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X39))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK13(X38,X39)),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X39))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.bool.COND_3'(s(bool,sK13(X38,X39)),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X39))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK13(X38,X39)),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X39))),s('type.clos_known.val_approx','const.clos_known.Other_0')))) )),
  inference(superposition,[],[f1746,f348])).
fof(f5271,plain,(
  ( ! [X37,X36] : (s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X37))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X36))))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,'F_0'),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X36))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) | s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,'F_0'),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X36))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.bool.COND_3'(s(bool,'F_0'),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X36))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,'F_0'),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X36))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.bool.COND_3'(s(bool,'F_0'),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X36))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,'F_0'),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X36))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) | s(bool,'T_0') = s(bool,sK13(X37,X36))) )),
  inference(superposition,[],[f1746,f1672])).
fof(f5294,plain,(
  ( ! [X35,X34] : (s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X34),s('type.clos_known.val_approx',X35))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X34),s('type.clos_known.val_approx',X35))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(happ(s(fun('type.clos_known.val_approx','type.clos_known.val_approx'),happ(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.clos_known.val_approx',X34))),s('type.clos_known.val_approx',X35)))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X34),s('type.clos_known.val_approx',X35))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(happ(s(fun('type.clos_known.val_approx','type.clos_known.val_approx'),happ(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.clos_known.val_approx',X34))),s('type.clos_known.val_approx',X35)))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X34),s('type.clos_known.val_approx',X35))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X34),s('type.clos_known.val_approx',X35)))))) )),
  inference(forward_demodulation,[],[f5293,f319])).
fof(f5293,plain,(
  ( ! [X35,X34] : (s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X34),s('type.clos_known.val_approx',X35))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(happ(s(fun('type.clos_known.val_approx','type.clos_known.val_approx'),happ(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.clos_known.val_approx',X34))),s('type.clos_known.val_approx',X35)))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X34),s('type.clos_known.val_approx',X35))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(happ(s(fun('type.clos_known.val_approx','type.clos_known.val_approx'),happ(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.clos_known.val_approx',X34))),s('type.clos_known.val_approx',X35)))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X34),s('type.clos_known.val_approx',X35))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X34),s('type.clos_known.val_approx',X35))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',happ(s(fun('type.clos_known.val_approx','type.clos_known.val_approx'),happ(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.clos_known.val_approx',X34))),s('type.clos_known.val_approx',X35)))) )),
  inference(forward_demodulation,[],[f5292,f319])).
fof(f5292,plain,(
  ( ! [X35,X34] : (s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X34),s('type.clos_known.val_approx',X35))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(happ(s(fun('type.clos_known.val_approx','type.clos_known.val_approx'),happ(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.clos_known.val_approx',X34))),s('type.clos_known.val_approx',X35)))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X34),s('type.clos_known.val_approx',X35))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X34),s('type.clos_known.val_approx',X35))))) | s('type.clos_known.val_approx',happ(s(fun('type.clos_known.val_approx','type.clos_known.val_approx'),happ(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.clos_known.val_approx',X34))),s('type.clos_known.val_approx',X35))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(happ(s(fun('type.clos_known.val_approx','type.clos_known.val_approx'),happ(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.clos_known.val_approx',X34))),s('type.clos_known.val_approx',X35)))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',happ(s(fun('type.clos_known.val_approx','type.clos_known.val_approx'),happ(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.clos_known.val_approx',X34))),s('type.clos_known.val_approx',X35)))) )),
  inference(forward_demodulation,[],[f5291,f319])).
fof(f5291,plain,(
  ( ! [X35,X34] : (s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X34),s('type.clos_known.val_approx',X35))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X34),s('type.clos_known.val_approx',X35))))) | s('type.clos_known.val_approx',happ(s(fun('type.clos_known.val_approx','type.clos_known.val_approx'),happ(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.clos_known.val_approx',X34))),s('type.clos_known.val_approx',X35))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(happ(s(fun('type.clos_known.val_approx','type.clos_known.val_approx'),happ(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.clos_known.val_approx',X34))),s('type.clos_known.val_approx',X35)))))) | s('type.clos_known.val_approx',happ(s(fun('type.clos_known.val_approx','type.clos_known.val_approx'),happ(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.clos_known.val_approx',X34))),s('type.clos_known.val_approx',X35))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(happ(s(fun('type.clos_known.val_approx','type.clos_known.val_approx'),happ(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.clos_known.val_approx',X34))),s('type.clos_known.val_approx',X35)))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',happ(s(fun('type.clos_known.val_approx','type.clos_known.val_approx'),happ(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.clos_known.val_approx',X34))),s('type.clos_known.val_approx',X35)))) )),
  inference(forward_demodulation,[],[f5270,f319])).
fof(f5270,plain,(
  ( ! [X35,X34] : (s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X34),s('type.clos_known.val_approx',X35))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',happ(s(fun('type.clos_known.val_approx','type.clos_known.val_approx'),happ(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.clos_known.val_approx',X34))),s('type.clos_known.val_approx',X35))) | s('type.clos_known.val_approx',happ(s(fun('type.clos_known.val_approx','type.clos_known.val_approx'),happ(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.clos_known.val_approx',X34))),s('type.clos_known.val_approx',X35))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(happ(s(fun('type.clos_known.val_approx','type.clos_known.val_approx'),happ(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.clos_known.val_approx',X34))),s('type.clos_known.val_approx',X35)))))) | s('type.clos_known.val_approx',happ(s(fun('type.clos_known.val_approx','type.clos_known.val_approx'),happ(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.clos_known.val_approx',X34))),s('type.clos_known.val_approx',X35))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(happ(s(fun('type.clos_known.val_approx','type.clos_known.val_approx'),happ(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.clos_known.val_approx',X34))),s('type.clos_known.val_approx',X35)))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',happ(s(fun('type.clos_known.val_approx','type.clos_known.val_approx'),happ(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.clos_known.val_approx',X34))),s('type.clos_known.val_approx',X35)))) )),
  inference(superposition,[],[f1746,f319])).
fof(f5290,plain,(
  ( ! [X33] : (s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X33) | s('type.clos_known.val_approx',X33) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X33)))))) | s('type.clos_known.val_approx',X33) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X33)))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X33) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx',X33)))) )),
  inference(forward_demodulation,[],[f5289,f254])).
fof(f5289,plain,(
  ( ! [X33] : (s('type.clos_known.val_approx',X33) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X33)))))) | s('type.clos_known.val_approx',X33) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X33)))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X33) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx',X33))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X33)))) )),
  inference(forward_demodulation,[],[f5288,f254])).
fof(f5288,plain,(
  ( ! [X33] : (s('type.clos_known.val_approx',X33) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X33)))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X33) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx',X33))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X33))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X33)))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X33)))) )),
  inference(forward_demodulation,[],[f5287,f254])).
fof(f5287,plain,(
  ( ! [X33] : (s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X33) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx',X33))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X33))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X33)))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X33))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X33)))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X33)))) )),
  inference(forward_demodulation,[],[f5269,f254])).
fof(f5269,plain,(
  ( ! [X33] : (s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx',X33))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X33))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X33))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X33)))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X33))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X33)))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X33)))) )),
  inference(superposition,[],[f1746,f254])).
fof(f5267,plain,(
  ( ! [X30,X31] : (s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,'F_0'),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X31))),s('type.clos_known.val_approx','const.clos_known.Other_0'))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X30))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X31))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X30))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X31))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X30))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X31)))))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X30))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X31))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X30))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X31)))))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X30))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X31))))) | s(bool,'T_0') = s(bool,sK13(X30,X31))) )),
  inference(superposition,[],[f1746,f1672])).
fof(f4994,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') != s('type.clos_known.val_approx',sK7) | $spl43),
  inference(cnf_transformation,[],[f4994_D])).
fof(f4994_D,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') != s('type.clos_known.val_approx',sK7) <=> ~$spl43),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl43])])).
fof(f415,plain,(
  ( ! [X0,X1] : (sP3(X0,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',sK7),s('type.clos_known.val_approx','const.clos_known.Other_0')),X1)) )),
  inference(unit_resulting_resolution,[],[f244,f365])).
fof(f420,plain,(
  ( ! [X0,X1] : (sP2(X0,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',sK7),s('type.clos_known.val_approx','const.clos_known.Other_0')),X1)) )),
  inference(unit_resulting_resolution,[],[f244,f369])).
fof(f427,plain,(
  ( ! [X0,X1] : (sP5(X0,X1,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',sK7),s('type.clos_known.val_approx','const.clos_known.Other_0')))) )),
  inference(unit_resulting_resolution,[],[f244,f387])).
fof(f479,plain,(
  ( ! [X0] : (sP6('T_0',X0,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',sK7),s('type.clos_known.val_approx','const.clos_known.Other_0')))) )),
  inference(unit_resulting_resolution,[],[f427,f245,f400])).
fof(f509,plain,(
  ( ! [X0,X1] : (sP6(sK13(X0,X0),X1,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',sK7),s('type.clos_known.val_approx','const.clos_known.Other_0')))) )),
  inference(unit_resulting_resolution,[],[f427,f487,f400])).
fof(f580,plain,(
  sP4('F_0','const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',sK7),s('type.clos_known.val_approx','const.clos_known.Other_0')),'T_0')),
  inference(unit_resulting_resolution,[],[f408,f432,f375])).
fof(f582,plain,(
  sP4('F_0','T_0','const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',sK7),s('type.clos_known.val_approx','const.clos_known.Other_0')))),
  inference(unit_resulting_resolution,[],[f408,f432,f375])).
fof(f591,plain,(
  sP4('T_0','F_0','const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',sK7),s('type.clos_known.val_approx','const.clos_known.Other_0')))),
  inference(unit_resulting_resolution,[],[f245,f439,f376])).
fof(f992,plain,(
  ( ! [X0] : (sP4(sK13(X0,X0),'F_0','const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',sK7),s('type.clos_known.val_approx','const.clos_known.Other_0')))) )),
  inference(unit_resulting_resolution,[],[f495,f494,f415,f408,f361])).
fof(f999,plain,(
  ( ! [X0] : (sP4('const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',sK7),s('type.clos_known.val_approx','const.clos_known.Other_0')),'F_0',sK13(X0,X0))) )),
  inference(unit_resulting_resolution,[],[f497,f421,f417,f408,f361])).
fof(f1033,plain,(
  ( ! [X0] : (sP4('F_0','const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',sK7),s('type.clos_known.val_approx','const.clos_known.Other_0')),sK13(X0,X0))) )),
  inference(unit_resulting_resolution,[],[f497,f422,f416,f408,f362])).
fof(f1056,plain,(
  ( ! [X0] : (sP4('F_0',sK13(X0,X0),'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',sK7),s('type.clos_known.val_approx','const.clos_known.Other_0')))) )),
  inference(unit_resulting_resolution,[],[f496,f420,f415,f408,f362])).
fof(f1149,plain,(
  ( ! [X0] : (sP4(sK14(X0,X0),'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',sK7),s('type.clos_known.val_approx','const.clos_known.Other_0')),'F_0')) )),
  inference(unit_resulting_resolution,[],[f439,f1090,f376])).
fof(f1151,plain,(
  ( ! [X0] : (sP4(sK14(X0,X0),'F_0','const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',sK7),s('type.clos_known.val_approx','const.clos_known.Other_0')))) )),
  inference(unit_resulting_resolution,[],[f439,f1090,f376])).
fof(f1180,plain,(
  ( ! [X0] : (sP6('const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',sK7),s('type.clos_known.val_approx','const.clos_known.Other_0')),'F_0',sK14(X0,X0))) )),
  inference(unit_resulting_resolution,[],[f408,f430,f1090,f385])).
fof(f1214,plain,(
  ( ! [X0,X1] : (sP6(sK14(X0,X0),X1,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',sK7),s('type.clos_known.val_approx','const.clos_known.Other_0')))) )),
  inference(unit_resulting_resolution,[],[f427,f1090,f400])).
fof(f1611,plain,(
  ( ! [X0] : (sP4('F_0',sK14(X0,X0),'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',sK7),s('type.clos_known.val_approx','const.clos_known.Other_0')))) )),
  inference(unit_resulting_resolution,[],[f1128,f420,f408,f1147,f362])).
fof(f1628,plain,(
  ( ! [X0] : (sP4('F_0','const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',sK7),s('type.clos_known.val_approx','const.clos_known.Other_0')),sK14(X0,X0))) )),
  inference(unit_resulting_resolution,[],[f416,f422,f408,f1148,f362])).
fof(f1630,plain,(
  ( ! [X0] : (sP4('const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',sK7),s('type.clos_known.val_approx','const.clos_known.Other_0')),'F_0',sK14(X0,X0))) )),
  inference(unit_resulting_resolution,[],[f417,f421,f408,f1148,f361])).
fof(f1840,plain,(
  ( ! [X0] : (sP4('const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X0)),'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',sK7),s('type.clos_known.val_approx','const.clos_known.Other_0')),'F_0')) )),
  inference(unit_resulting_resolution,[],[f439,f1372,f376])).
fof(f1842,plain,(
  ( ! [X0] : (sP4('const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X0)),'F_0','const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',sK7),s('type.clos_known.val_approx','const.clos_known.Other_0')))) )),
  inference(unit_resulting_resolution,[],[f439,f1372,f376])).
fof(f1844,plain,(
  ( ! [X0] : (~sP4('const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X0)),'T_0','const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',sK7),s('type.clos_known.val_approx','const.clos_known.Other_0')))) )),
  inference(unit_resulting_resolution,[],[f432,f1372,f377])).
fof(f1879,plain,(
  ( ! [X0] : (sP6('const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',sK7),s('type.clos_known.val_approx','const.clos_known.Other_0')),'F_0','const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X0)))) )),
  inference(unit_resulting_resolution,[],[f408,f430,f1372,f385])).
fof(f1917,plain,(
  ( ! [X0,X1] : (sP6('const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X0)),X1,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',sK7),s('type.clos_known.val_approx','const.clos_known.Other_0')))) )),
  inference(unit_resulting_resolution,[],[f427,f1372,f400])).
fof(f2120,plain,(
  sP4('const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx','const.clos_known.Other_0')),'F_0','const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',sK7),s('type.clos_known.val_approx','const.clos_known.Other_0')))),
  inference(unit_resulting_resolution,[],[f439,f1373,f376])).
fof(f2122,plain,(
  ~sP4('const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx','const.clos_known.Other_0')),'T_0','const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',sK7),s('type.clos_known.val_approx','const.clos_known.Other_0')))),
  inference(unit_resulting_resolution,[],[f432,f1373,f377])).
fof(f2196,plain,(
  ( ! [X0] : (sP6('const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx','const.clos_known.Other_0')),X0,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',sK7),s('type.clos_known.val_approx','const.clos_known.Other_0')))) )),
  inference(unit_resulting_resolution,[],[f427,f1373,f400])).
fof(f2353,plain,(
  ( ! [X0] : (sP4('const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X0))),s('type.clos_known.val_approx','const.clos_known.Other_0')),'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',sK7),s('type.clos_known.val_approx','const.clos_known.Other_0')),'F_0')) )),
  inference(unit_resulting_resolution,[],[f439,f1376,f376])).
fof(f2355,plain,(
  ( ! [X0] : (sP4('const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X0))),s('type.clos_known.val_approx','const.clos_known.Other_0')),'F_0','const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',sK7),s('type.clos_known.val_approx','const.clos_known.Other_0')))) )),
  inference(unit_resulting_resolution,[],[f439,f1376,f376])).
fof(f2357,plain,(
  ( ! [X0] : (~sP4('const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X0))),s('type.clos_known.val_approx','const.clos_known.Other_0')),'T_0','const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',sK7),s('type.clos_known.val_approx','const.clos_known.Other_0')))) )),
  inference(unit_resulting_resolution,[],[f432,f1376,f377])).
fof(f2359,plain,(
  ( ! [X0] : (~sP4('const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X0))),s('type.clos_known.val_approx','const.clos_known.Other_0')),'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',sK7),s('type.clos_known.val_approx','const.clos_known.Other_0')),'T_0')) )),
  inference(unit_resulting_resolution,[],[f432,f1376,f377])).
fof(f2393,plain,(
  ( ! [X0] : (sP6('const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',sK7),s('type.clos_known.val_approx','const.clos_known.Other_0')),'F_0','const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X0))),s('type.clos_known.val_approx','const.clos_known.Other_0')))) )),
  inference(unit_resulting_resolution,[],[f408,f430,f1376,f385])).
fof(f2431,plain,(
  ( ! [X0,X1] : (sP6('const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X0))),s('type.clos_known.val_approx','const.clos_known.Other_0')),X1,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',sK7),s('type.clos_known.val_approx','const.clos_known.Other_0')))) )),
  inference(unit_resulting_resolution,[],[f427,f1376,f400])).
fof(f2587,plain,(
  ( ! [X0] : (sP4('const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X0))),s('type.clos_known.val_approx','const.clos_known.Other_0')),'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',sK7),s('type.clos_known.val_approx','const.clos_known.Other_0')),'F_0')) )),
  inference(unit_resulting_resolution,[],[f439,f1375,f376])).
fof(f2589,plain,(
  ( ! [X0] : (sP4('const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X0))),s('type.clos_known.val_approx','const.clos_known.Other_0')),'F_0','const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',sK7),s('type.clos_known.val_approx','const.clos_known.Other_0')))) )),
  inference(unit_resulting_resolution,[],[f439,f1375,f376])).
fof(f2591,plain,(
  ( ! [X0] : (~sP4('const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X0))),s('type.clos_known.val_approx','const.clos_known.Other_0')),'T_0','const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',sK7),s('type.clos_known.val_approx','const.clos_known.Other_0')))) )),
  inference(unit_resulting_resolution,[],[f432,f1375,f377])).
fof(f2593,plain,(
  ( ! [X0] : (~sP4('const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X0))),s('type.clos_known.val_approx','const.clos_known.Other_0')),'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',sK7),s('type.clos_known.val_approx','const.clos_known.Other_0')),'T_0')) )),
  inference(unit_resulting_resolution,[],[f432,f1375,f377])).
fof(f2627,plain,(
  ( ! [X0] : (sP6('const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',sK7),s('type.clos_known.val_approx','const.clos_known.Other_0')),'F_0','const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X0))),s('type.clos_known.val_approx','const.clos_known.Other_0')))) )),
  inference(unit_resulting_resolution,[],[f408,f430,f1375,f385])).
fof(f2665,plain,(
  ( ! [X0,X1] : (sP6('const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X0))),s('type.clos_known.val_approx','const.clos_known.Other_0')),X1,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',sK7),s('type.clos_known.val_approx','const.clos_known.Other_0')))) )),
  inference(unit_resulting_resolution,[],[f427,f1375,f400])).
fof(f2830,plain,(
  ( ! [X0,X1] : (sP4('const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.clos_known.val_approx','const.clos_known.Other_0')),'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',sK7),s('type.clos_known.val_approx','const.clos_known.Other_0')),'F_0')) )),
  inference(unit_resulting_resolution,[],[f439,f1374,f376])).
fof(f2832,plain,(
  ( ! [X0,X1] : (sP4('const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.clos_known.val_approx','const.clos_known.Other_0')),'F_0','const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',sK7),s('type.clos_known.val_approx','const.clos_known.Other_0')))) )),
  inference(unit_resulting_resolution,[],[f439,f1374,f376])).
fof(f2834,plain,(
  ( ! [X0,X1] : (~sP4('const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.clos_known.val_approx','const.clos_known.Other_0')),'T_0','const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',sK7),s('type.clos_known.val_approx','const.clos_known.Other_0')))) )),
  inference(unit_resulting_resolution,[],[f432,f1374,f377])).
fof(f2836,plain,(
  ( ! [X0,X1] : (~sP4('const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.clos_known.val_approx','const.clos_known.Other_0')),'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',sK7),s('type.clos_known.val_approx','const.clos_known.Other_0')),'T_0')) )),
  inference(unit_resulting_resolution,[],[f432,f1374,f377])).
fof(f2870,plain,(
  ( ! [X0,X1] : (sP6('const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',sK7),s('type.clos_known.val_approx','const.clos_known.Other_0')),'F_0','const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.clos_known.val_approx','const.clos_known.Other_0')))) )),
  inference(unit_resulting_resolution,[],[f408,f430,f1374,f385])).
fof(f2908,plain,(
  ( ! [X2,X0,X1] : (sP6('const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.clos_known.val_approx','const.clos_known.Other_0')),X2,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',sK7),s('type.clos_known.val_approx','const.clos_known.Other_0')))) )),
  inference(unit_resulting_resolution,[],[f427,f1374,f400])).
fof(f3004,plain,(
  ( ! [X4] : (s(bool,X4) = s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',sK7),s('type.clos_known.val_approx','const.clos_known.Other_0'))) | s(bool,'T_0') = s(bool,X4)) )),
  inference(subsumption_resolution,[],[f3001,f408])).
fof(f3001,plain,(
  ( ! [X4] : (p(s(bool,'F_0')) | s(bool,X4) = s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',sK7),s('type.clos_known.val_approx','const.clos_known.Other_0'))) | s(bool,'T_0') = s(bool,X4)) )),
  inference(superposition,[],[f565,f439])).
fof(f4494,plain,(
  ( ! [X0,X1] : (sP4(sK15(X0,X0,X1,X1),'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',sK7),s('type.clos_known.val_approx','const.clos_known.Other_0')),'F_0')) )),
  inference(unit_resulting_resolution,[],[f439,f2746,f376])).
fof(f4496,plain,(
  ( ! [X0,X1] : (sP4(sK15(X0,X0,X1,X1),'F_0','const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',sK7),s('type.clos_known.val_approx','const.clos_known.Other_0')))) )),
  inference(unit_resulting_resolution,[],[f439,f2746,f376])).
fof(f4497,plain,(
  ( ! [X0,X1] : (~sP4(sK15(X0,X0,X1,X1),'T_0','const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',sK7),s('type.clos_known.val_approx','const.clos_known.Other_0')))) )),
  inference(unit_resulting_resolution,[],[f432,f2746,f377])).
fof(f4535,plain,(
  ( ! [X0,X1] : (sP6('const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',sK7),s('type.clos_known.val_approx','const.clos_known.Other_0')),'F_0',sK15(X0,X0,X1,X1))) )),
  inference(unit_resulting_resolution,[],[f408,f430,f2746,f385])).
fof(f4573,plain,(
  ( ! [X2,X0,X1] : (sP6(sK15(X0,X0,X1,X1),X2,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',sK7),s('type.clos_known.val_approx','const.clos_known.Other_0')))) )),
  inference(unit_resulting_resolution,[],[f427,f2746,f400])).
fof(f4964,plain,(
  ( ! [X21,X20] : (s('type.clos_known.val_approx','const.clos_known.Other_0') != s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X21),s('type.clos_known.val_approx','const.clos_known.Other_0'))) | s(bool,'T_0') = s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',X21),s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X20),s('type.clos_known.val_approx','const.clos_known.Other_0'))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X20) | s('type.clos_known.val_approx',X20) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(X20)))) | s('type.clos_known.val_approx',X20) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(X20)))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X20)) )),
  inference(superposition,[],[f1440,f1745])).
fof(f4963,plain,(
  ( ! [X19,X18] : (s('type.clos_known.val_approx',X19) != s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx',X19))) | s(bool,'T_0') = s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X18),s('type.clos_known.val_approx','const.clos_known.Other_0'))),s('type.clos_known.val_approx',X19))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X18) | s('type.clos_known.val_approx',X18) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(X18)))) | s('type.clos_known.val_approx',X18) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(X18)))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X18)) )),
  inference(superposition,[],[f1440,f1745])).
fof(f4962,plain,(
  ( ! [X17,X16] : (p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',X17),s('type.clos_known.val_approx','const.clos_known.Other_0')))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X16),s('type.clos_known.val_approx','const.clos_known.Other_0'))) != s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X17),s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X16),s('type.clos_known.val_approx','const.clos_known.Other_0'))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X16) | s('type.clos_known.val_approx',X16) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(X16)))) | s('type.clos_known.val_approx',X16) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(X16)))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X16)) )),
  inference(superposition,[],[f329,f1745])).
fof(f4961,plain,(
  ( ! [X14,X15] : (p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx',X15)))) | s('type.clos_known.val_approx',X15) != s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X14),s('type.clos_known.val_approx','const.clos_known.Other_0'))),s('type.clos_known.val_approx',X15))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X14) | s('type.clos_known.val_approx',X14) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(X14)))) | s('type.clos_known.val_approx',X14) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(X14)))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X14)) )),
  inference(superposition,[],[f329,f1745])).
fof(f4960,plain,(
  ( ! [X12,X13] : (~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',X13),s('type.clos_known.val_approx','const.clos_known.Other_0')))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X12),s('type.clos_known.val_approx','const.clos_known.Other_0'))) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X13),s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X12),s('type.clos_known.val_approx','const.clos_known.Other_0'))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X12) | s('type.clos_known.val_approx',X12) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(X12)))) | s('type.clos_known.val_approx',X12) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(X12)))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X12)) )),
  inference(superposition,[],[f328,f1745])).
fof(f4959,plain,(
  ( ! [X10,X11] : (~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx',X11)))) | s('type.clos_known.val_approx',X11) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X10),s('type.clos_known.val_approx','const.clos_known.Other_0'))),s('type.clos_known.val_approx',X11))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X10) | s('type.clos_known.val_approx',X10) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(X10)))) | s('type.clos_known.val_approx',X10) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(X10)))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X10)) )),
  inference(superposition,[],[f328,f1745])).
fof(f4972,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',X0),s('type.clos_known.val_approx','const.clos_known.Other_0'))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X0) | s('type.clos_known.val_approx',X0) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(X0)))) | s('type.clos_known.val_approx',X0) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(X0)))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X0)) )),
  inference(trivial_inequality_removal,[],[f4954])).
fof(f4954,plain,(
  ( ! [X0] : (s('type.clos_known.val_approx','const.clos_known.Other_0') != s('type.clos_known.val_approx','const.clos_known.Other_0') | s(bool,'T_0') = s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',X0),s('type.clos_known.val_approx','const.clos_known.Other_0'))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X0) | s('type.clos_known.val_approx',X0) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(X0)))) | s('type.clos_known.val_approx',X0) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(X0)))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X0)) )),
  inference(superposition,[],[f1440,f1745])).
fof(f4993,plain,(
  ( ! [X43,X41,X44,X42] : (s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X41),s('type.num.num',X43))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X42),s('type.num.num',X44))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X41),s('type.num.num',X43))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X42),s('type.num.num',X44))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.bool.COND_3'(s(bool,sK15(X41,X42,X43,X44)),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X42),s('type.num.num',X44))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X41),s('type.num.num',X43))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X42),s('type.num.num',X44))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.bool.COND_3'(s(bool,sK15(X41,X42,X43,X44)),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X42),s('type.num.num',X44))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X41),s('type.num.num',X43))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X42),s('type.num.num',X44))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X41),s('type.num.num',X43))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X42),s('type.num.num',X44))))),s('type.clos_known.val_approx','const.clos_known.Other_0')))) )),
  inference(forward_demodulation,[],[f4992,f399])).
fof(f4992,plain,(
  ( ! [X43,X41,X44,X42] : (s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X41),s('type.num.num',X43))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X42),s('type.num.num',X44))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.bool.COND_3'(s(bool,sK15(X41,X42,X43,X44)),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X42),s('type.num.num',X44))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X41),s('type.num.num',X43))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X42),s('type.num.num',X44))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.bool.COND_3'(s(bool,sK15(X41,X42,X43,X44)),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X42),s('type.num.num',X44))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X41),s('type.num.num',X43))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X42),s('type.num.num',X44))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X41),s('type.num.num',X43))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X42),s('type.num.num',X44))))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK15(X41,X42,X43,X44)),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X42),s('type.num.num',X44))),s('type.clos_known.val_approx','const.clos_known.Other_0')))) )),
  inference(forward_demodulation,[],[f4991,f399])).
fof(f4991,plain,(
  ( ! [X43,X41,X44,X42] : (s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X41),s('type.num.num',X43))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X42),s('type.num.num',X44))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.bool.COND_3'(s(bool,sK15(X41,X42,X43,X44)),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X42),s('type.num.num',X44))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X41),s('type.num.num',X43))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X42),s('type.num.num',X44))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X41),s('type.num.num',X43))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X42),s('type.num.num',X44))))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) | s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK15(X41,X42,X43,X44)),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X42),s('type.num.num',X44))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.bool.COND_3'(s(bool,sK15(X41,X42,X43,X44)),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X42),s('type.num.num',X44))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK15(X41,X42,X43,X44)),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X42),s('type.num.num',X44))),s('type.clos_known.val_approx','const.clos_known.Other_0')))) )),
  inference(forward_demodulation,[],[f4990,f399])).
fof(f4990,plain,(
  ( ! [X43,X41,X44,X42] : (s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X41),s('type.num.num',X43))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X42),s('type.num.num',X44))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X41),s('type.num.num',X43))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X42),s('type.num.num',X44))))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) | s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK15(X41,X42,X43,X44)),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X42),s('type.num.num',X44))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.bool.COND_3'(s(bool,sK15(X41,X42,X43,X44)),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X42),s('type.num.num',X44))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK15(X41,X42,X43,X44)),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X42),s('type.num.num',X44))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.bool.COND_3'(s(bool,sK15(X41,X42,X43,X44)),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X42),s('type.num.num',X44))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK15(X41,X42,X43,X44)),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X42),s('type.num.num',X44))),s('type.clos_known.val_approx','const.clos_known.Other_0')))) )),
  inference(forward_demodulation,[],[f4953,f399])).
fof(f4953,plain,(
  ( ! [X43,X41,X44,X42] : (s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X41),s('type.num.num',X43))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X42),s('type.num.num',X44))))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK15(X41,X42,X43,X44)),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X42),s('type.num.num',X44))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) | s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK15(X41,X42,X43,X44)),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X42),s('type.num.num',X44))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.bool.COND_3'(s(bool,sK15(X41,X42,X43,X44)),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X42),s('type.num.num',X44))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK15(X41,X42,X43,X44)),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X42),s('type.num.num',X44))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.bool.COND_3'(s(bool,sK15(X41,X42,X43,X44)),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X42),s('type.num.num',X44))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK15(X41,X42,X43,X44)),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X42),s('type.num.num',X44))),s('type.clos_known.val_approx','const.clos_known.Other_0')))) )),
  inference(superposition,[],[f1745,f399])).
fof(f4989,plain,(
  ( ! [X39,X40] : (s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X39))),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X40))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X39))),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X40))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.bool.COND_3'(s(bool,sK14(X39,X40)),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X39),s('type.list.list'('type.clos_known.val_approx'),X40))))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X39))),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X40))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.bool.COND_3'(s(bool,sK14(X39,X40)),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X39),s('type.list.list'('type.clos_known.val_approx'),X40))))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X39))),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X40))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X39))),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X40))))),s('type.clos_known.val_approx','const.clos_known.Other_0')))) )),
  inference(forward_demodulation,[],[f4988,f410])).
fof(f4988,plain,(
  ( ! [X39,X40] : (s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X39))),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X40))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.bool.COND_3'(s(bool,sK14(X39,X40)),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X39),s('type.list.list'('type.clos_known.val_approx'),X40))))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X39))),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X40))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.bool.COND_3'(s(bool,sK14(X39,X40)),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X39),s('type.list.list'('type.clos_known.val_approx'),X40))))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X39))),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X40))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X39))),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X40))))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK14(X39,X40)),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X39),s('type.list.list'('type.clos_known.val_approx'),X40))))),s('type.clos_known.val_approx','const.clos_known.Other_0')))) )),
  inference(forward_demodulation,[],[f4987,f410])).
fof(f4987,plain,(
  ( ! [X39,X40] : (s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X39))),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X40))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.bool.COND_3'(s(bool,sK14(X39,X40)),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X39),s('type.list.list'('type.clos_known.val_approx'),X40))))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X39))),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X40))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X39))),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X40))))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) | s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK14(X39,X40)),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X39),s('type.list.list'('type.clos_known.val_approx'),X40))))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.bool.COND_3'(s(bool,sK14(X39,X40)),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X39),s('type.list.list'('type.clos_known.val_approx'),X40))))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK14(X39,X40)),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X39),s('type.list.list'('type.clos_known.val_approx'),X40))))),s('type.clos_known.val_approx','const.clos_known.Other_0')))) )),
  inference(forward_demodulation,[],[f4986,f410])).
fof(f4986,plain,(
  ( ! [X39,X40] : (s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X39))),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X40))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X39))),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X40))))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) | s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK14(X39,X40)),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X39),s('type.list.list'('type.clos_known.val_approx'),X40))))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.bool.COND_3'(s(bool,sK14(X39,X40)),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X39),s('type.list.list'('type.clos_known.val_approx'),X40))))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK14(X39,X40)),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X39),s('type.list.list'('type.clos_known.val_approx'),X40))))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.bool.COND_3'(s(bool,sK14(X39,X40)),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X39),s('type.list.list'('type.clos_known.val_approx'),X40))))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK14(X39,X40)),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X39),s('type.list.list'('type.clos_known.val_approx'),X40))))),s('type.clos_known.val_approx','const.clos_known.Other_0')))) )),
  inference(forward_demodulation,[],[f4952,f410])).
fof(f4952,plain,(
  ( ! [X39,X40] : (s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X39))),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X40))))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK14(X39,X40)),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X39),s('type.list.list'('type.clos_known.val_approx'),X40))))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) | s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK14(X39,X40)),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X39),s('type.list.list'('type.clos_known.val_approx'),X40))))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.bool.COND_3'(s(bool,sK14(X39,X40)),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X39),s('type.list.list'('type.clos_known.val_approx'),X40))))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK14(X39,X40)),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X39),s('type.list.list'('type.clos_known.val_approx'),X40))))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.bool.COND_3'(s(bool,sK14(X39,X40)),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X39),s('type.list.list'('type.clos_known.val_approx'),X40))))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK14(X39,X40)),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X39),s('type.list.list'('type.clos_known.val_approx'),X40))))),s('type.clos_known.val_approx','const.clos_known.Other_0')))) )),
  inference(superposition,[],[f1745,f410])).
fof(f4985,plain,(
  ( ! [X37,X38] : (s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X37))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X38))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X37))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X38))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.bool.COND_3'(s(bool,sK13(X37,X38)),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X38))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X37))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X38))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.bool.COND_3'(s(bool,sK13(X37,X38)),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X38))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X37))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X38))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X37))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X38))))),s('type.clos_known.val_approx','const.clos_known.Other_0')))) )),
  inference(forward_demodulation,[],[f4984,f348])).
fof(f4984,plain,(
  ( ! [X37,X38] : (s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X37))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X38))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.bool.COND_3'(s(bool,sK13(X37,X38)),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X38))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X37))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X38))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.bool.COND_3'(s(bool,sK13(X37,X38)),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X38))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X37))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X38))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X37))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X38))))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK13(X37,X38)),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X38))),s('type.clos_known.val_approx','const.clos_known.Other_0')))) )),
  inference(forward_demodulation,[],[f4983,f348])).
fof(f4983,plain,(
  ( ! [X37,X38] : (s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X37))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X38))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.bool.COND_3'(s(bool,sK13(X37,X38)),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X38))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X37))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X38))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X37))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X38))))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) | s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK13(X37,X38)),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X38))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.bool.COND_3'(s(bool,sK13(X37,X38)),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X38))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK13(X37,X38)),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X38))),s('type.clos_known.val_approx','const.clos_known.Other_0')))) )),
  inference(forward_demodulation,[],[f4982,f348])).
fof(f4982,plain,(
  ( ! [X37,X38] : (s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X37))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X38))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X37))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X38))))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) | s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK13(X37,X38)),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X38))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.bool.COND_3'(s(bool,sK13(X37,X38)),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X38))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK13(X37,X38)),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X38))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.bool.COND_3'(s(bool,sK13(X37,X38)),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X38))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK13(X37,X38)),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X38))),s('type.clos_known.val_approx','const.clos_known.Other_0')))) )),
  inference(forward_demodulation,[],[f4951,f348])).
fof(f4951,plain,(
  ( ! [X37,X38] : (s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X37))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X38))))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK13(X37,X38)),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X38))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) | s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK13(X37,X38)),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X38))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.bool.COND_3'(s(bool,sK13(X37,X38)),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X38))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK13(X37,X38)),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X38))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.bool.COND_3'(s(bool,sK13(X37,X38)),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X38))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK13(X37,X38)),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X38))),s('type.clos_known.val_approx','const.clos_known.Other_0')))) )),
  inference(superposition,[],[f1745,f348])).
fof(f4950,plain,(
  ( ! [X35,X36] : (s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X36))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X35))))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,'F_0'),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X35))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) | s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,'F_0'),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X35))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.bool.COND_3'(s(bool,'F_0'),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X35))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,'F_0'),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X35))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.bool.COND_3'(s(bool,'F_0'),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X35))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,'F_0'),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X35))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) | s(bool,'T_0') = s(bool,sK13(X36,X35))) )),
  inference(superposition,[],[f1745,f1672])).
fof(f4981,plain,(
  ( ! [X33,X34] : (s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X33),s('type.clos_known.val_approx',X34))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X33),s('type.clos_known.val_approx',X34))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(happ(s(fun('type.clos_known.val_approx','type.clos_known.val_approx'),happ(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.clos_known.val_approx',X33))),s('type.clos_known.val_approx',X34)))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X33),s('type.clos_known.val_approx',X34))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(happ(s(fun('type.clos_known.val_approx','type.clos_known.val_approx'),happ(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.clos_known.val_approx',X33))),s('type.clos_known.val_approx',X34)))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X33),s('type.clos_known.val_approx',X34))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X33),s('type.clos_known.val_approx',X34))),s('type.clos_known.val_approx','const.clos_known.Other_0')))) )),
  inference(forward_demodulation,[],[f4980,f319])).
fof(f4980,plain,(
  ( ! [X33,X34] : (s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X33),s('type.clos_known.val_approx',X34))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(happ(s(fun('type.clos_known.val_approx','type.clos_known.val_approx'),happ(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.clos_known.val_approx',X33))),s('type.clos_known.val_approx',X34)))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X33),s('type.clos_known.val_approx',X34))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(happ(s(fun('type.clos_known.val_approx','type.clos_known.val_approx'),happ(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.clos_known.val_approx',X33))),s('type.clos_known.val_approx',X34)))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X33),s('type.clos_known.val_approx',X34))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X33),s('type.clos_known.val_approx',X34))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',happ(s(fun('type.clos_known.val_approx','type.clos_known.val_approx'),happ(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.clos_known.val_approx',X33))),s('type.clos_known.val_approx',X34)))) )),
  inference(forward_demodulation,[],[f4979,f319])).
fof(f4979,plain,(
  ( ! [X33,X34] : (s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X33),s('type.clos_known.val_approx',X34))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(happ(s(fun('type.clos_known.val_approx','type.clos_known.val_approx'),happ(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.clos_known.val_approx',X33))),s('type.clos_known.val_approx',X34)))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X33),s('type.clos_known.val_approx',X34))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X33),s('type.clos_known.val_approx',X34))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) | s('type.clos_known.val_approx',happ(s(fun('type.clos_known.val_approx','type.clos_known.val_approx'),happ(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.clos_known.val_approx',X33))),s('type.clos_known.val_approx',X34))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(happ(s(fun('type.clos_known.val_approx','type.clos_known.val_approx'),happ(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.clos_known.val_approx',X33))),s('type.clos_known.val_approx',X34)))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',happ(s(fun('type.clos_known.val_approx','type.clos_known.val_approx'),happ(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.clos_known.val_approx',X33))),s('type.clos_known.val_approx',X34)))) )),
  inference(forward_demodulation,[],[f4978,f319])).
fof(f4978,plain,(
  ( ! [X33,X34] : (s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X33),s('type.clos_known.val_approx',X34))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X33),s('type.clos_known.val_approx',X34))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) | s('type.clos_known.val_approx',happ(s(fun('type.clos_known.val_approx','type.clos_known.val_approx'),happ(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.clos_known.val_approx',X33))),s('type.clos_known.val_approx',X34))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(happ(s(fun('type.clos_known.val_approx','type.clos_known.val_approx'),happ(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.clos_known.val_approx',X33))),s('type.clos_known.val_approx',X34)))))) | s('type.clos_known.val_approx',happ(s(fun('type.clos_known.val_approx','type.clos_known.val_approx'),happ(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.clos_known.val_approx',X33))),s('type.clos_known.val_approx',X34))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(happ(s(fun('type.clos_known.val_approx','type.clos_known.val_approx'),happ(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.clos_known.val_approx',X33))),s('type.clos_known.val_approx',X34)))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',happ(s(fun('type.clos_known.val_approx','type.clos_known.val_approx'),happ(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.clos_known.val_approx',X33))),s('type.clos_known.val_approx',X34)))) )),
  inference(forward_demodulation,[],[f4949,f319])).
fof(f4949,plain,(
  ( ! [X33,X34] : (s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X33),s('type.clos_known.val_approx',X34))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',happ(s(fun('type.clos_known.val_approx','type.clos_known.val_approx'),happ(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.clos_known.val_approx',X33))),s('type.clos_known.val_approx',X34))) | s('type.clos_known.val_approx',happ(s(fun('type.clos_known.val_approx','type.clos_known.val_approx'),happ(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.clos_known.val_approx',X33))),s('type.clos_known.val_approx',X34))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(happ(s(fun('type.clos_known.val_approx','type.clos_known.val_approx'),happ(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.clos_known.val_approx',X33))),s('type.clos_known.val_approx',X34)))))) | s('type.clos_known.val_approx',happ(s(fun('type.clos_known.val_approx','type.clos_known.val_approx'),happ(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.clos_known.val_approx',X33))),s('type.clos_known.val_approx',X34))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(happ(s(fun('type.clos_known.val_approx','type.clos_known.val_approx'),happ(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.clos_known.val_approx',X33))),s('type.clos_known.val_approx',X34)))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',happ(s(fun('type.clos_known.val_approx','type.clos_known.val_approx'),happ(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.clos_known.val_approx',X33))),s('type.clos_known.val_approx',X34)))) )),
  inference(superposition,[],[f1745,f319])).
fof(f4977,plain,(
  ( ! [X32] : (s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X32) | s('type.clos_known.val_approx',X32) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X32)))))) | s('type.clos_known.val_approx',X32) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X32)))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X32) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X32),s('type.clos_known.val_approx','const.clos_known.Other_0')))) )),
  inference(forward_demodulation,[],[f4976,f254])).
fof(f4976,plain,(
  ( ! [X32] : (s('type.clos_known.val_approx',X32) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X32)))))) | s('type.clos_known.val_approx',X32) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X32)))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X32) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X32),s('type.clos_known.val_approx','const.clos_known.Other_0'))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X32)))) )),
  inference(forward_demodulation,[],[f4975,f254])).
fof(f4975,plain,(
  ( ! [X32] : (s('type.clos_known.val_approx',X32) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X32)))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X32) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X32),s('type.clos_known.val_approx','const.clos_known.Other_0'))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X32))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X32)))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X32)))) )),
  inference(forward_demodulation,[],[f4974,f254])).
fof(f4974,plain,(
  ( ! [X32] : (s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X32) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X32),s('type.clos_known.val_approx','const.clos_known.Other_0'))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X32))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X32)))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X32))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X32)))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X32)))) )),
  inference(forward_demodulation,[],[f4948,f254])).
fof(f4948,plain,(
  ( ! [X32] : (s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X32),s('type.clos_known.val_approx','const.clos_known.Other_0'))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X32))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X32))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X32)))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X32))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X32)))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X32)))) )),
  inference(superposition,[],[f1745,f254])).
fof(f4946,plain,(
  ( ! [X30,X29] : (s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,'F_0'),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X30))),s('type.clos_known.val_approx','const.clos_known.Other_0'))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X29))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X30))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X29))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X30))))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X29))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X30)))))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X29))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X30))))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X29))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X30)))))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X29))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X30))))) | s(bool,'T_0') = s(bool,sK13(X29,X30))) )),
  inference(superposition,[],[f1745,f1672])).
fof(f4911,plain,(
  ( ! [X26,X27,X25] : (s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,'F_0'),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X26))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) != s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X27),s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,'F_0'),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X26))),s('type.clos_known.val_approx','const.clos_known.Other_0'))))) | s(bool,'T_0') = s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',X27),s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X25))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X26))))))) | s(bool,'T_0') = s(bool,sK13(X25,X26))) )),
  inference(superposition,[],[f1440,f1672])).
fof(f4910,plain,(
  ( ! [X24,X23,X22] : (s('type.clos_known.val_approx',X24) != s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,'F_0'),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X23))),s('type.clos_known.val_approx','const.clos_known.Other_0'))),s('type.clos_known.val_approx',X24))) | s(bool,'T_0') = s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X22))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X23))))),s('type.clos_known.val_approx',X24))) | s(bool,'T_0') = s(bool,sK13(X22,X23))) )),
  inference(superposition,[],[f1440,f1672])).
fof(f4909,plain,(
  ( ! [X21,X19,X20] : (p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',X21),s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,'F_0'),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X20))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X19))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X20))))) != s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X21),s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X19))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X20))))))) | s(bool,'T_0') = s(bool,sK13(X19,X20))) )),
  inference(superposition,[],[f329,f1672])).
fof(f4908,plain,(
  ( ! [X17,X18,X16] : (p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,'F_0'),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X17))),s('type.clos_known.val_approx','const.clos_known.Other_0'))),s('type.clos_known.val_approx',X18)))) | s('type.clos_known.val_approx',X18) != s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X16))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X17))))),s('type.clos_known.val_approx',X18))) | s(bool,'T_0') = s(bool,sK13(X16,X17))) )),
  inference(superposition,[],[f329,f1672])).
fof(f4907,plain,(
  ( ! [X14,X15,X13] : (~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',X15),s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,'F_0'),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X14))),s('type.clos_known.val_approx','const.clos_known.Other_0')))))) | s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X13))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X14))))) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X15),s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X13))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X14))))))) | s(bool,'T_0') = s(bool,sK13(X13,X14))) )),
  inference(superposition,[],[f328,f1672])).
fof(f4906,plain,(
  ( ! [X12,X10,X11] : (~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,'F_0'),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X11))),s('type.clos_known.val_approx','const.clos_known.Other_0'))),s('type.clos_known.val_approx',X12)))) | s('type.clos_known.val_approx',X12) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X10))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X11))))),s('type.clos_known.val_approx',X12))) | s(bool,'T_0') = s(bool,sK13(X10,X11))) )),
  inference(superposition,[],[f328,f1672])).
fof(f4902,plain,(
  ( ! [X0,X1] : (s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X1))) != s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,'F_0'),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X1))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) | s(bool,'T_0') = s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X0))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X1))))) | s(bool,'T_0') = s(bool,sK13(X0,X1))) )),
  inference(superposition,[],[f1440,f1672])).
fof(f4895,plain,(
  ( ! [X24,X23,X25] : (s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X24))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X23))))) != s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X25),s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X24))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X23))))))) | s(bool,'T_0') = s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',X25),s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,'F_0'),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X23))),s('type.clos_known.val_approx','const.clos_known.Other_0'))))) | s(bool,'T_0') = s(bool,sK13(X24,X23))) )),
  inference(superposition,[],[f1440,f1672])).
fof(f4894,plain,(
  ( ! [X21,X22,X20] : (s('type.clos_known.val_approx',X22) != s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X21))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X20))))),s('type.clos_known.val_approx',X22))) | s(bool,'T_0') = s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,'F_0'),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X20))),s('type.clos_known.val_approx','const.clos_known.Other_0'))),s('type.clos_known.val_approx',X22))) | s(bool,'T_0') = s(bool,sK13(X21,X20))) )),
  inference(superposition,[],[f1440,f1672])).
fof(f4893,plain,(
  ( ! [X19,X17,X18] : (p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',X19),s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X18))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X17)))))))) | s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,'F_0'),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X17))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) != s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X19),s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,'F_0'),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X17))),s('type.clos_known.val_approx','const.clos_known.Other_0'))))) | s(bool,'T_0') = s(bool,sK13(X18,X17))) )),
  inference(superposition,[],[f329,f1672])).
fof(f4892,plain,(
  ( ! [X14,X15,X16] : (p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X15))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X14))))),s('type.clos_known.val_approx',X16)))) | s('type.clos_known.val_approx',X16) != s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,'F_0'),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X14))),s('type.clos_known.val_approx','const.clos_known.Other_0'))),s('type.clos_known.val_approx',X16))) | s(bool,'T_0') = s(bool,sK13(X15,X14))) )),
  inference(superposition,[],[f329,f1672])).
fof(f4891,plain,(
  ( ! [X12,X13,X11] : (~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',X13),s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X12))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X11)))))))) | s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,'F_0'),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X11))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X13),s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,'F_0'),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X11))),s('type.clos_known.val_approx','const.clos_known.Other_0'))))) | s(bool,'T_0') = s(bool,sK13(X12,X11))) )),
  inference(superposition,[],[f328,f1672])).
fof(f4890,plain,(
  ( ! [X10,X8,X9] : (~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X9))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X8))))),s('type.clos_known.val_approx',X10)))) | s('type.clos_known.val_approx',X10) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,'F_0'),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X8))),s('type.clos_known.val_approx','const.clos_known.Other_0'))),s('type.clos_known.val_approx',X10))) | s(bool,'T_0') = s(bool,sK13(X9,X8))) )),
  inference(superposition,[],[f328,f1672])).
fof(f4886,plain,(
  ( ! [X2,X0,X1] : (s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X1))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X0))))) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X2))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X0))))) | s(bool,'T_0') = s(bool,sK13(X2,X0)) | s(bool,'T_0') = s(bool,sK13(X1,X0))) )),
  inference(superposition,[],[f1672,f1672])).
fof(f4869,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,g(s(X0,sK12(X1,X2,bool,X0)))) | s(fun(X0,bool),X1) = s(fun(X0,bool),X2) | s(bool,'T_0') = s(bool,f(s(X0,sK12(X1,X2,bool,X0))))) )),
  inference(condensation,[],[f4868])).
fof(f4868,plain,(
  ( ! [X10,X8,X11,X9] : (s(fun(X8,bool),X9) = s(fun(X8,bool),X10) | s(bool,'T_0') = s(bool,g(s(X8,sK12(X9,X10,bool,X8)))) | s(bool,'T_0') = s(bool,f(s(X8,sK12(X9,X10,bool,X8)))) | s(bool,'T_0') = s(bool,X11)) )),
  inference(subsumption_resolution,[],[f4861,f261])).
fof(f4861,plain,(
  ( ! [X10,X8,X11,X9] : (s(bool,'F_0') != s(bool,X11) | s(fun(X8,bool),X9) = s(fun(X8,bool),X10) | s(bool,'T_0') = s(bool,g(s(X8,sK12(X9,X10,bool,X8)))) | s(bool,'T_0') = s(bool,f(s(X8,sK12(X9,X10,bool,X8)))) | s(bool,'T_0') = s(bool,X11)) )),
  inference(superposition,[],[f1634,f518])).
fof(f4773,plain,(
  ( ! [X27] : (s('type.clos_known.val_approx','const.clos_known.Impossible_0') != s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X27))) | s(bool,'T_0') = s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X27))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))) )),
  inference(superposition,[],[f1440,f259])).
fof(f4772,plain,(
  ( ! [X26,X25] : (s('type.clos_known.val_approx','const.clos_known.Other_0') != s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X26))) | s(bool,'T_0') = s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X25))),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X26)))))) )),
  inference(superposition,[],[f1440,f317])).
fof(f4771,plain,(
  ( ! [X24,X23,X22] : (s('type.clos_known.val_approx','const.clos_known.Other_0') != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X23),s('type.num.num',X24))) | s(bool,'T_0') = s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X22))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X23),s('type.num.num',X24)))))) )),
  inference(superposition,[],[f1440,f353])).
fof(f4769,plain,(
  ( ! [X20] : (s('type.clos_known.val_approx','const.clos_known.Impossible_0') != s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X20))) | s(bool,'T_0') = s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X20))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))) )),
  inference(superposition,[],[f1440,f260])).
fof(f4768,plain,(
  ( ! [X19,X18] : (s('type.clos_known.val_approx','const.clos_known.Other_0') != s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X19))) | s(bool,'T_0') = s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X18))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X19)))))) )),
  inference(superposition,[],[f1440,f316])).
fof(f4767,plain,(
  ( ! [X17,X15,X16] : (s('type.clos_known.val_approx','const.clos_known.Other_0') != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X16),s('type.num.num',X17))) | s(bool,'T_0') = s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X15))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X16),s('type.num.num',X17)))))) )),
  inference(superposition,[],[f1440,f355])).
fof(f4765,plain,(
  ( ! [X12,X13] : (s('type.clos_known.val_approx','const.clos_known.Impossible_0') != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X12),s('type.num.num',X13))) | s(bool,'T_0') = s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X12),s('type.num.num',X13))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))) )),
  inference(superposition,[],[f1440,f318])).
fof(f4764,plain,(
  ( ! [X10,X11,X9] : (s('type.clos_known.val_approx','const.clos_known.Other_0') != s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X11))) | s(bool,'T_0') = s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X9),s('type.num.num',X10))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X11)))))) )),
  inference(superposition,[],[f1440,f352])).
fof(f4763,plain,(
  ( ! [X6,X8,X7] : (s('type.clos_known.val_approx','const.clos_known.Other_0') != s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X8))) | s(bool,'T_0') = s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X6),s('type.num.num',X7))),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X8)))))) )),
  inference(superposition,[],[f1440,f354])).
fof(f4760,plain,(
  ( ! [X3] : (s('type.clos_known.val_approx','const.clos_known.Other_0') != s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X3))) | s(bool,'T_0') = s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X3)))))) )),
  inference(superposition,[],[f1440,f255])).
fof(f4759,plain,(
  ( ! [X2] : (s('type.clos_known.val_approx','const.clos_known.Other_0') != s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X2))) | s(bool,'T_0') = s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X2)))))) )),
  inference(superposition,[],[f1440,f257])).
fof(f4758,plain,(
  ( ! [X0,X1] : (s('type.clos_known.val_approx','const.clos_known.Other_0') != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X0),s('type.num.num',X1))) | s(bool,'T_0') = s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X0),s('type.num.num',X1)))))) )),
  inference(superposition,[],[f1440,f315])).
fof(f4734,plain,(
  ( ! [X0,X1] : (s('type.clos_known.val_approx',X0) != s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X1),s('type.clos_known.val_approx',X0))) | s(bool,'T_0') = s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',X1),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8(X0)),s('type.num.num',sK9(X0)))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X0) | s('type.clos_known.val_approx',X0) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(X0)))) | s('type.clos_known.val_approx',X0) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(X0)))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X0)) )),
  inference(superposition,[],[f1440,f262])).
fof(f4711,plain,(
  ( ! [X0,X1] : (s('type.clos_known.val_approx',X1) != s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X0),s('type.clos_known.val_approx',X1))) | s(bool,'T_0') = s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8(X0)),s('type.num.num',sK9(X0)))),s('type.clos_known.val_approx',X1))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X0) | s('type.clos_known.val_approx',X0) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(X0)))) | s('type.clos_known.val_approx',X0) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(X0)))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X0)) )),
  inference(superposition,[],[f1440,f262])).
fof(f4426,plain,(
  ( ! [X0,X1] : (s(bool,'T_0') = s(bool,sK15(X0,X0,X1,X1))) )),
  inference(unit_resulting_resolution,[],[f245,f2746,f323])).
fof(f4427,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,sK15(X0,X0,X1,X1)) = s(bool,sK15(X2,X2,X3,X3))) )),
  inference(unit_resulting_resolution,[],[f2746,f2746,f323])).
fof(f4428,plain,(
  ( ! [X2,X0,X1] : (sP0(X0,sK15(X1,X1,X2,X2))) )),
  inference(unit_resulting_resolution,[],[f2746,f331])).
fof(f4429,plain,(
  ( ! [X2,X0,X1] : (sP0(sK15(X0,X0,X1,X1),X2)) )),
  inference(unit_resulting_resolution,[],[f2746,f332])).
fof(f4432,plain,(
  ( ! [X0,X1] : (~sP4('T_0',sK15(X0,X0,X1,X1),'F_0')) )),
  inference(unit_resulting_resolution,[],[f245,f408,f2746,f359])).
fof(f4433,plain,(
  ( ! [X2,X0,X3,X1] : (~sP4(sK15(X0,X0,X1,X1),sK15(X2,X2,X3,X3),'F_0')) )),
  inference(unit_resulting_resolution,[],[f2746,f408,f2746,f359])).
fof(f4435,plain,(
  ( ! [X0,X1] : (sP4('T_0','T_0',sK15(X0,X0,X1,X1))) )),
  inference(unit_resulting_resolution,[],[f423,f418,f413,f2746,f360])).
fof(f4437,plain,(
  ( ! [X2,X0,X1] : (sP4(sK13(X0,X0),'T_0',sK15(X1,X1,X2,X2))) )),
  inference(unit_resulting_resolution,[],[f495,f494,f413,f2746,f360])).
fof(f4439,plain,(
  ( ! [X2,X0,X1] : (sP4(sK14(X0,X0),'T_0',sK15(X1,X1,X2,X2))) )),
  inference(unit_resulting_resolution,[],[f1146,f1145,f413,f2746,f360])).
fof(f4441,plain,(
  ( ! [X2,X0,X1] : (sP4('T_0',sK13(X0,X0),sK15(X1,X1,X2,X2))) )),
  inference(unit_resulting_resolution,[],[f423,f418,f493,f2746,f360])).
fof(f4443,plain,(
  ( ! [X2,X0,X3,X1] : (sP4(sK13(X0,X0),sK13(X1,X1),sK15(X2,X2,X3,X3))) )),
  inference(unit_resulting_resolution,[],[f495,f494,f493,f2746,f360])).
fof(f4445,plain,(
  ( ! [X2,X0,X3,X1] : (sP4(sK14(X0,X0),sK13(X1,X1),sK15(X2,X2,X3,X3))) )),
  inference(unit_resulting_resolution,[],[f1146,f1145,f493,f2746,f360])).
fof(f4447,plain,(
  ( ! [X2,X0,X1] : (sP4('T_0',sK14(X0,X0),sK15(X1,X1,X2,X2))) )),
  inference(unit_resulting_resolution,[],[f423,f418,f1128,f2746,f360])).
fof(f4449,plain,(
  ( ! [X2,X0,X3,X1] : (sP4(sK13(X0,X0),sK14(X1,X1),sK15(X2,X2,X3,X3))) )),
  inference(unit_resulting_resolution,[],[f495,f494,f1128,f2746,f360])).
fof(f4451,plain,(
  ( ! [X2,X0,X3,X1] : (sP4(sK14(X0,X0),sK14(X1,X1),sK15(X2,X2,X3,X3))) )),
  inference(unit_resulting_resolution,[],[f1146,f1145,f1128,f2746,f360])).
fof(f4452,plain,(
  ( ! [X0,X1] : (~sP3(sK15(X0,X0,X1,X1),'T_0','F_0')) )),
  inference(unit_resulting_resolution,[],[f245,f408,f2746,f363])).
fof(f4461,plain,(
  ( ! [X0,X1] : (~sP3('T_0',sK15(X0,X0,X1,X1),'F_0')) )),
  inference(unit_resulting_resolution,[],[f245,f408,f2746,f363])).
fof(f4462,plain,(
  ( ! [X2,X0,X3,X1] : (~sP3(sK15(X0,X0,X1,X1),sK15(X2,X2,X3,X3),'F_0')) )),
  inference(unit_resulting_resolution,[],[f2746,f408,f2746,f363])).
fof(f4470,plain,(
  ( ! [X2,X0,X3,X1] : (sP3(X0,X1,sK15(X2,X2,X3,X3))) )),
  inference(unit_resulting_resolution,[],[f2746,f364])).
fof(f4471,plain,(
  ( ! [X0,X1] : (~sP2(sK15(X0,X0,X1,X1),'T_0','F_0')) )),
  inference(unit_resulting_resolution,[],[f245,f408,f2746,f367])).
fof(f4480,plain,(
  ( ! [X0,X1] : (~sP2('T_0',sK15(X0,X0,X1,X1),'F_0')) )),
  inference(unit_resulting_resolution,[],[f245,f408,f2746,f367])).
fof(f4481,plain,(
  ( ! [X2,X0,X3,X1] : (~sP2(sK15(X0,X0,X1,X1),sK15(X2,X2,X3,X3),'F_0')) )),
  inference(unit_resulting_resolution,[],[f2746,f408,f2746,f367])).
fof(f4489,plain,(
  ( ! [X2,X0,X3,X1] : (sP2(X0,X1,sK15(X2,X2,X3,X3))) )),
  inference(unit_resulting_resolution,[],[f2746,f368])).
fof(f4490,plain,(
  ( ! [X2,X0,X3,X1] : (sP1(X0,X1,sK15(X2,X2,X3,X3))) )),
  inference(unit_resulting_resolution,[],[f2746,f372])).
fof(f4491,plain,(
  ( ! [X2,X0,X3,X1] : (sP1(X0,sK15(X1,X1,X2,X2),X3)) )),
  inference(unit_resulting_resolution,[],[f2746,f373])).
fof(f4492,plain,(
  ( ! [X2,X0,X3,X1] : (sP1(sK15(X0,X0,X1,X1),X2,X3)) )),
  inference(unit_resulting_resolution,[],[f2746,f374])).
fof(f4493,plain,(
  ( ! [X2,X0,X1] : (sP4(sK15(X0,X0,X1,X1),sK13(X2,X2),'T_0')) )),
  inference(unit_resulting_resolution,[],[f489,f2746,f376])).
fof(f4495,plain,(
  ( ! [X2,X0,X1] : (sP4(sK15(X0,X0,X1,X1),'T_0',sK13(X2,X2))) )),
  inference(unit_resulting_resolution,[],[f489,f2746,f376])).
fof(f4498,plain,(
  ( ! [X0,X1] : (~sP4(sK15(X0,X0,X1,X1),'T_0','F_0')) )),
  inference(unit_resulting_resolution,[],[f431,f2746,f377])).
fof(f4500,plain,(
  ( ! [X0,X1] : (~sP4(sK15(X0,X0,X1,X1),'F_0','T_0')) )),
  inference(unit_resulting_resolution,[],[f431,f2746,f377])).
fof(f4501,plain,(
  ( ! [X2,X0,X1] : (~sP6('F_0',sK15(X0,X0,X1,X1),X2)) )),
  inference(unit_resulting_resolution,[],[f408,f2746,f380])).
fof(f4536,plain,(
  ( ! [X0,X1] : (~sP5(sK15(X0,X0,X1,X1),'F_0','T_0')) )),
  inference(unit_resulting_resolution,[],[f408,f245,f2746,f386])).
fof(f4545,plain,(
  ( ! [X0,X1] : (~sP5('T_0','F_0',sK15(X0,X0,X1,X1))) )),
  inference(unit_resulting_resolution,[],[f408,f245,f2746,f386])).
fof(f4546,plain,(
  ( ! [X2,X0,X3,X1] : (~sP5(sK15(X0,X0,X1,X1),'F_0',sK15(X2,X2,X3,X3))) )),
  inference(unit_resulting_resolution,[],[f408,f2746,f2746,f386])).
fof(f4554,plain,(
  ( ! [X2,X0,X3,X1] : (sP5(X0,sK15(X1,X1,X2,X2),X3)) )),
  inference(unit_resulting_resolution,[],[f2746,f388])).
fof(f4555,plain,(
  ( ! [X0,X1] : (sP6('F_0','F_0',sK15(X0,X0,X1,X1))) )),
  inference(unit_resulting_resolution,[],[f408,f408,f2746,f390])).
fof(f4560,plain,(
  ( ! [X2,X0,X1] : (sP6('T_0',sK15(X0,X0,X1,X1),X2)) )),
  inference(unit_resulting_resolution,[],[f245,f2746,f392])).
fof(f4564,plain,(
  ( ! [X4,X2,X0,X3,X1] : (sP6(sK15(X0,X0,X1,X1),sK15(X2,X2,X3,X3),X4)) )),
  inference(unit_resulting_resolution,[],[f2746,f2746,f392])).
fof(f4565,plain,(
  ( ! [X0,X1] : (~sP6('T_0','F_0',sK15(X0,X0,X1,X1))) )),
  inference(unit_resulting_resolution,[],[f245,f408,f2746,f393])).
fof(f4570,plain,(
  ( ! [X0,X1] : (~sP6(sK15(X0,X0,X1,X1),'F_0','T_0')) )),
  inference(unit_resulting_resolution,[],[f245,f408,f2746,f393])).
fof(f4571,plain,(
  ( ! [X2,X0,X3,X1] : (~sP6(sK15(X0,X0,X1,X1),'F_0',sK15(X2,X2,X3,X3))) )),
  inference(unit_resulting_resolution,[],[f2746,f408,f2746,f393])).
fof(f4572,plain,(
  ( ! [X2,X0,X1] : (sP6(sK15(X0,X0,X1,X1),X2,'F_0')) )),
  inference(unit_resulting_resolution,[],[f426,f2746,f400])).
fof(f4574,plain,(
  ( ! [X2,X0,X1] : (sP6(sK15(X0,X0,X1,X1),'T_0',X2)) )),
  inference(unit_resulting_resolution,[],[f428,f2746,f400])).
fof(f4575,plain,(
  ( ! [X2,X0,X3,X1] : (sP6(sK15(X0,X0,X1,X1),sK13(X2,X2),X3)) )),
  inference(unit_resulting_resolution,[],[f501,f2746,f400])).
fof(f4576,plain,(
  ( ! [X2,X0,X3,X1] : (sP6(sK15(X0,X0,X1,X1),sK14(X2,X2),X3)) )),
  inference(unit_resulting_resolution,[],[f1197,f2746,f400])).
fof(f4577,plain,(
  ( ! [X2,X0,X1] : (~sP4(sK15(X0,X0,X1,X1),sK13(X2,X2),'F_0')) )),
  inference(unit_resulting_resolution,[],[f408,f2746,f749])).
fof(f4578,plain,(
  ( ! [X2,X0,X1] : (~sP3(sK15(X0,X0,X1,X1),sK13(X2,X2),'F_0')) )),
  inference(unit_resulting_resolution,[],[f408,f2746,f750])).
fof(f4582,plain,(
  ( ! [X2,X0,X1] : (~sP2(sK15(X0,X0,X1,X1),sK13(X2,X2),'F_0')) )),
  inference(unit_resulting_resolution,[],[f408,f2746,f751])).
fof(f4586,plain,(
  ( ! [X2,X0,X3,X1] : (sP6(sK13(X0,X0),sK15(X1,X1,X2,X2),X3)) )),
  inference(unit_resulting_resolution,[],[f2746,f753])).
fof(f4587,plain,(
  ( ! [X2,X0,X1] : (~sP5(sK15(X0,X0,X1,X1),'F_0',sK13(X2,X2))) )),
  inference(unit_resulting_resolution,[],[f408,f2746,f793])).
fof(f4591,plain,(
  ( ! [X2,X0,X1] : (~sP6(sK13(X0,X0),'F_0',sK15(X1,X1,X2,X2))) )),
  inference(unit_resulting_resolution,[],[f408,f2746,f832])).
fof(f4362,plain,(
  ( ! [X0,X1] : (~sP4('F_0',sK14(X0,X0),sK14(X1,X1))) )),
  inference(unit_resulting_resolution,[],[f1142,f357])).
fof(f4356,plain,(
  ( ! [X0,X1] : (~sP4(sK14(X0,X0),'F_0',sK14(X1,X1))) )),
  inference(unit_resulting_resolution,[],[f1125,f358])).
fof(f273,plain,(
  ( ! [X0] : (~p(s(bool,X0)) | s(bool,'F_0') != s(bool,X0)) )),
  inference(cnf_transformation,[],[f182])).
fof(f1633,plain,(
  ( ! [X2,X0,X1] : (s(X2,f(s(bool,'F_0'))) != s(X2,g(s(bool,'F_0'))) | s(fun(bool,X2),X0) = s(fun(bool,X2),X1) | s(bool,'T_0') = s(bool,sK12(X0,X1,X2,bool))) )),
  inference(superposition,[],[f345,f261])).
fof(f1634,plain,(
  ( ! [X2,X0,X1] : (s(bool,'F_0') != s(bool,f(s(X0,sK12(X1,X2,bool,X0)))) | s(fun(X0,bool),X1) = s(fun(X0,bool),X2) | s(bool,'T_0') = s(bool,g(s(X0,sK12(X1,X2,bool,X0))))) )),
  inference(superposition,[],[f345,f261])).
fof(f1672,plain,(
  ( ! [X2,X1] : (s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,'F_0'),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X2))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X1))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X2))))) | s(bool,'T_0') = s(bool,sK13(X1,X2))) )),
  inference(superposition,[],[f348,f261])).
fof(f1696,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,'F_0'),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X1),s('type.num.num',X3))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X0),s('type.num.num',X2))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X1),s('type.num.num',X3))))) | s(bool,'T_0') = s(bool,sK15(X0,X1,X2,X3))) )),
  inference(superposition,[],[f399,f261])).
fof(f1725,plain,(
  ( ! [X0,X1] : (s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X0))),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X1))))) = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,'F_0'),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X0),s('type.list.list'('type.clos_known.val_approx'),X1))))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) | s(bool,'T_0') = s(bool,sK14(X0,X1))) )),
  inference(superposition,[],[f410,f261])).
fof(f3209,plain,(
  ( ! [X121,X118,X120,X119] : (s(bool,'T_0') != s(bool,f(s(X118,sK12(X119,X120,bool,X118)))) | s(fun(X118,bool),X119) = s(fun(X118,bool),X120) | s(bool,X121) = s(bool,g(s(X118,sK12(X119,X120,bool,X118)))) | s(bool,'T_0') = s(bool,X121)) )),
  inference(superposition,[],[f345,f518])).
fof(f3108,plain,(
  ( ! [X125,X123,X124,X122] : (s(bool,X125) != s(bool,f(s(X122,sK12(X123,X124,bool,X122)))) | s(fun(X122,bool),X123) = s(fun(X122,bool),X124) | s(bool,'T_0') = s(bool,X125) | s(bool,'T_0') = s(bool,g(s(X122,sK12(X123,X124,bool,X122))))) )),
  inference(superposition,[],[f345,f518])).
fof(f328,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',X0),s('type.clos_known.val_approx',X1)))) | s('type.clos_known.val_approx',X1) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X0),s('type.clos_known.val_approx',X1)))) )),
  inference(cnf_transformation,[],[f207])).
fof(f1440,plain,(
  ( ! [X0,X1] : (s('type.clos_known.val_approx',X1) != s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X0),s('type.clos_known.val_approx',X1))) | s(bool,'T_0') = s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',X0),s('type.clos_known.val_approx',X1)))) )),
  inference(subsumption_resolution,[],[f1408,f408])).
fof(f1408,plain,(
  ( ! [X0,X1] : (p(s(bool,'F_0')) | s('type.clos_known.val_approx',X1) != s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X0),s('type.clos_known.val_approx',X1))) | s(bool,'T_0') = s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',X0),s('type.clos_known.val_approx',X1)))) )),
  inference(superposition,[],[f329,f261])).
fof(f1756,plain,(
  ( ! [X19,X20] : (~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',X19),s('type.clos_known.val_approx',X20)))) | s('type.clos_known.val_approx',X20) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8(X19)),s('type.num.num',sK9(X19)))),s('type.clos_known.val_approx',X20))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X19) | s('type.clos_known.val_approx',X19) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(X19)))) | s('type.clos_known.val_approx',X19) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(X19)))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X19)) )),
  inference(superposition,[],[f328,f262])).
fof(f1757,plain,(
  ( ! [X21,X22] : (~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',X22),s('type.clos_known.val_approx',X21)))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8(X21)),s('type.num.num',sK9(X21)))) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X22),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8(X21)),s('type.num.num',sK9(X21)))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X21) | s('type.clos_known.val_approx',X21) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(X21)))) | s('type.clos_known.val_approx',X21) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(X21)))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X21)) )),
  inference(superposition,[],[f328,f262])).
fof(f1759,plain,(
  ( ! [X26,X25] : (s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8(X25)),s('type.num.num',sK9(X25)))) != s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X26),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8(X25)),s('type.num.num',sK9(X25)))))) | p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',X26),s('type.clos_known.val_approx',X25)))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X25) | s('type.clos_known.val_approx',X25) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(X25)))) | s('type.clos_known.val_approx',X25) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(X25)))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X25)) )),
  inference(superposition,[],[f329,f262])).
fof(f3449,plain,(
  ( ! [X80,X81,X82] : (s('type.clos_known.val_approx',X81) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X80),s('type.clos_known.val_approx',X81))) | s(bool,X82) = s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',X80),s('type.clos_known.val_approx',X81))) | s(bool,'T_0') = s(bool,X82)) )),
  inference(subsumption_resolution,[],[f3200,f245])).
fof(f3200,plain,(
  ( ! [X80,X81,X82] : (~p(s(bool,'T_0')) | s('type.clos_known.val_approx',X81) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X80),s('type.clos_known.val_approx',X81))) | s(bool,X82) = s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',X80),s('type.clos_known.val_approx',X81))) | s(bool,'T_0') = s(bool,X82)) )),
  inference(superposition,[],[f328,f518])).
fof(f2929,plain,(
  ( ! [X0] : (p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',X0),s('type.clos_known.val_approx','const.clos_known.Other_0')))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X0) | s('type.clos_known.val_approx',X0) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(X0)))) | s('type.clos_known.val_approx',X0) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(X0)))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X0)) )),
  inference(superposition,[],[f1374,f262])).
fof(f346,plain,(
  ( ! [X0,X1] : (~p(s(bool,sK13(X1,X0))) | s('type.integer.int',X0) = s('type.integer.int',X1)) )),
  inference(cnf_transformation,[],[f217])).
fof(f217,plain,(
  ! [X0,X1] : ((~p(s(bool,sK13(X1,X0))) | s('type.integer.int',X0) = s('type.integer.int',X1)) & (s('type.integer.int',X0) != s('type.integer.int',X1) | p(s(bool,sK13(X1,X0)))) & s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X1))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X0))))) = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK13(X1,X0)),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X0))),s('type.clos_known.val_approx','const.clos_known.Other_0'))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK13])],[f216])).
fof(f216,plain,(
  ! [X0,X1] : ? [X2] : ((~p(s(bool,X2)) | s('type.integer.int',X0) = s('type.integer.int',X1)) & (s('type.integer.int',X0) != s('type.integer.int',X1) | p(s(bool,X2))) & s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X1))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X0))))) = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,X2),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X0))),s('type.clos_known.val_approx','const.clos_known.Other_0'))))),
  inference(flattening,[],[f215])).
fof(f215,plain,(
  ! [X0,X1] : ? [X2] : (((~p(s(bool,X2)) | s('type.integer.int',X0) = s('type.integer.int',X1)) & (s('type.integer.int',X0) != s('type.integer.int',X1) | p(s(bool,X2)))) & s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X1))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X0))))) = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,X2),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X0))),s('type.clos_known.val_approx','const.clos_known.Other_0'))))),
  inference(nnf_transformation,[],[f128])).
fof(f128,plain,(
  ! [X0,X1] : ? [X2] : ((p(s(bool,X2)) <=> s('type.integer.int',X0) = s('type.integer.int',X1)) & s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X1))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X0))))) = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,X2),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X0))),s('type.clos_known.val_approx','const.clos_known.Other_0'))))),
  inference(rectify,[],[f36])).
fof(f36,axiom,(
  ! [X29,X16] : ? [X24] : ((p(s(bool,X24)) <=> s('type.integer.int',X16) = s('type.integer.int',X29)) & s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X16))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X29))))) = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,X24),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X29))),s('type.clos_known.val_approx','const.clos_known.Other_0'))))),
  file('thm.clos_knownProof.subapprox_Other|split|1','thm.clos_known.merge_def|split|7')).
fof(f347,plain,(
  ( ! [X0,X1] : (s('type.integer.int',X0) != s('type.integer.int',X1) | p(s(bool,sK13(X1,X0)))) )),
  inference(cnf_transformation,[],[f217])).
fof(f348,plain,(
  ( ! [X0,X1] : (s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X1))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X0))))) = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK13(X1,X0)),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X0))),s('type.clos_known.val_approx','const.clos_known.Other_0')))) )),
  inference(cnf_transformation,[],[f217])).
fof(f3099,plain,(
  ( ! [X87,X85,X86] : (s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X85))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X86))))) = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,X87),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X86))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) | s(bool,'T_0') = s(bool,X87) | s(bool,'T_0') = s(bool,sK13(X85,X86))) )),
  inference(superposition,[],[f348,f518])).
fof(f3201,plain,(
  ( ! [X85,X83,X84] : (s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,'T_0'),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X84))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X83))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X84))))) | s(bool,X85) = s(bool,sK13(X83,X84)) | s(bool,'T_0') = s(bool,X85)) )),
  inference(superposition,[],[f348,f518])).
fof(f349,plain,(
  ( ! [X0,X1] : (~p(s(bool,sK14(X1,X0))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.clos_known.val_approx'),X0))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.clos_known.val_approx'),X1)))) )),
  inference(cnf_transformation,[],[f220])).
fof(f410,plain,(
  ( ! [X0,X1] : (s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X1))),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X0))))) = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK14(X1,X0)),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X1),s('type.list.list'('type.clos_known.val_approx'),X0))))),s('type.clos_known.val_approx','const.clos_known.Other_0')))) )),
  inference(forward_demodulation,[],[f351,f319])).
fof(f351,plain,(
  ( ! [X0,X1] : (s('type.clos_known.val_approx',happ(s(fun('type.clos_known.val_approx','type.clos_known.val_approx'),happ(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X1))))),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X0))))) = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK14(X1,X0)),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X1),s('type.list.list'('type.clos_known.val_approx'),X0))))),s('type.clos_known.val_approx','const.clos_known.Other_0')))) )),
  inference(cnf_transformation,[],[f220])).
fof(f3102,plain,(
  ( ! [X94,X95,X93] : (s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X93))),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X94))))) = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,X95),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X93),s('type.list.list'('type.clos_known.val_approx'),X94))))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) | s(bool,'T_0') = s(bool,X95) | s(bool,'T_0') = s(bool,sK14(X93,X94))) )),
  inference(superposition,[],[f410,f518])).
fof(f3203,plain,(
  ( ! [X92,X90,X91] : (s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X90))),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X91))))) = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,'T_0'),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X90),s('type.list.list'('type.clos_known.val_approx'),X91))))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) | s(bool,X92) = s(bool,sK14(X90,X91)) | s(bool,'T_0') = s(bool,X92)) )),
  inference(superposition,[],[f410,f518])).
fof(f396,plain,(
  ( ! [X2,X0,X3,X1] : (~p(s(bool,sK15(X3,X2,X1,X0))) | s('type.num.num',X2) = s('type.num.num',X3)) )),
  inference(cnf_transformation,[],[f243])).
fof(f397,plain,(
  ( ! [X2,X0,X3,X1] : (~p(s(bool,sK15(X3,X2,X1,X0))) | s('type.num.num',X0) = s('type.num.num',X1)) )),
  inference(cnf_transformation,[],[f243])).
fof(f399,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X3),s('type.num.num',X1))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X2),s('type.num.num',X0))))) = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK15(X3,X2,X1,X0)),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X2),s('type.num.num',X0))),s('type.clos_known.val_approx','const.clos_known.Other_0')))) )),
  inference(cnf_transformation,[],[f243])).
fof(f3104,plain,(
  ( ! [X103,X101,X99,X102,X100] : (s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,X103),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X100),s('type.num.num',X102))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X99),s('type.num.num',X101))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X100),s('type.num.num',X102))))) | s(bool,'T_0') = s(bool,X103) | s(bool,'T_0') = s(bool,sK15(X99,X100,X101,X102))) )),
  inference(superposition,[],[f399,f518])).
fof(f3205,plain,(
  ( ! [X99,X97,X100,X98,X96] : (s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,'T_0'),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X97),s('type.num.num',X99))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X96),s('type.num.num',X98))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X97),s('type.num.num',X99))))) | s(bool,X100) = s(bool,sK15(X96,X97,X98,X99)) | s(bool,'T_0') = s(bool,X100)) )),
  inference(superposition,[],[f399,f518])).
fof(f1752,plain,(
  ( ! [X12,X13,X11] : (s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X12),s('type.num.num',X13))),s('type.clos_known.val_approx',X11))) = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK15(X12,sK8(X11),X13,sK9(X11))),s('type.clos_known.val_approx',X11),s('type.clos_known.val_approx','const.clos_known.Other_0'))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X11) | s('type.clos_known.val_approx',X11) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(X11)))) | s('type.clos_known.val_approx',X11) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(X11)))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X11)) )),
  inference(superposition,[],[f399,f262])).
fof(f3208,plain,(
  ( ! [X116,X114,X117,X115] : (s(X116,f(s(bool,'T_0'))) != s(X116,g(s(bool,'T_0'))) | s(fun(bool,X116),X114) = s(fun(bool,X116),X115) | s(bool,X117) = s(bool,sK12(X114,X115,X116,bool)) | s(bool,'T_0') = s(bool,X117)) )),
  inference(superposition,[],[f345,f518])).
fof(f3453,plain,(
  ( ! [X109,X107,X110,X108,X106] : (s('type.num.num',X106) = s('type.num.num',X107) | s(bool,X110) = s(bool,sK15(X106,X107,X108,X109)) | s(bool,'T_0') = s(bool,X110)) )),
  inference(subsumption_resolution,[],[f3207,f245])).
fof(f3207,plain,(
  ( ! [X109,X107,X110,X108,X106] : (~p(s(bool,'T_0')) | s('type.num.num',X106) = s('type.num.num',X107) | s(bool,X110) = s(bool,sK15(X106,X107,X108,X109)) | s(bool,'T_0') = s(bool,X110)) )),
  inference(superposition,[],[f396,f518])).
fof(f3452,plain,(
  ( ! [X103,X101,X105,X102,X104] : (s('type.num.num',X103) = s('type.num.num',X104) | s(bool,X105) = s(bool,sK15(X101,X102,X103,X104)) | s(bool,'T_0') = s(bool,X105)) )),
  inference(subsumption_resolution,[],[f3206,f245])).
fof(f3206,plain,(
  ( ! [X103,X101,X105,X102,X104] : (~p(s(bool,'T_0')) | s('type.num.num',X103) = s('type.num.num',X104) | s(bool,X105) = s(bool,sK15(X101,X102,X103,X104)) | s(bool,'T_0') = s(bool,X105)) )),
  inference(superposition,[],[f397,f518])).
fof(f3451,plain,(
  ( ! [X94,X95,X93] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.clos_known.val_approx'),X93))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.clos_known.val_approx'),X94))) | s(bool,X95) = s(bool,sK14(X93,X94)) | s(bool,'T_0') = s(bool,X95)) )),
  inference(subsumption_resolution,[],[f3204,f245])).
fof(f3204,plain,(
  ( ! [X94,X95,X93] : (~p(s(bool,'T_0')) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.clos_known.val_approx'),X93))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.clos_known.val_approx'),X94))) | s(bool,X95) = s(bool,sK14(X93,X94)) | s(bool,'T_0') = s(bool,X95)) )),
  inference(superposition,[],[f349,f518])).
fof(f3450,plain,(
  ( ! [X88,X87,X86] : (s('type.integer.int',X86) = s('type.integer.int',X87) | s(bool,X88) = s(bool,sK13(X86,X87)) | s(bool,'T_0') = s(bool,X88)) )),
  inference(subsumption_resolution,[],[f3202,f245])).
fof(f3202,plain,(
  ( ! [X88,X87,X86] : (~p(s(bool,'T_0')) | s('type.integer.int',X86) = s('type.integer.int',X87) | s(bool,X88) = s(bool,sK13(X86,X87)) | s(bool,'T_0') = s(bool,X88)) )),
  inference(superposition,[],[f346,f518])).
fof(f3448,plain,(
  ( ! [X66,X64,X67,X65] : (p(s(bool,X65)) | ~sP6(sK13(X66,X66),X65,X64) | s(bool,X64) = s(bool,X67) | s(bool,'T_0') = s(bool,X67)) )),
  inference(subsumption_resolution,[],[f3191,f245])).
fof(f3191,plain,(
  ( ! [X66,X64,X67,X65] : (~p(s(bool,'T_0')) | p(s(bool,X65)) | ~sP6(sK13(X66,X66),X65,X64) | s(bool,X64) = s(bool,X67) | s(bool,'T_0') = s(bool,X67)) )),
  inference(superposition,[],[f832,f518])).
fof(f3447,plain,(
  ( ! [X59,X57,X60,X58] : (~sP5(X57,X58,X59) | sP6(X57,X58,X59) | s(bool,X57) = s(bool,X60) | s(bool,'T_0') = s(bool,X60)) )),
  inference(subsumption_resolution,[],[f3189,f245])).
fof(f3189,plain,(
  ( ! [X59,X57,X60,X58] : (~p(s(bool,'T_0')) | ~sP5(X57,X58,X59) | sP6(X57,X58,X59) | s(bool,X57) = s(bool,X60) | s(bool,'T_0') = s(bool,X60)) )),
  inference(superposition,[],[f400,f518])).
fof(f3446,plain,(
  ( ! [X54,X56,X55,X53] : (~p(s(bool,X54)) | p(s(bool,X55)) | ~sP6(X53,X55,X54) | s(bool,X53) = s(bool,X56) | s(bool,'T_0') = s(bool,X56)) )),
  inference(subsumption_resolution,[],[f3188,f245])).
fof(f3188,plain,(
  ( ! [X54,X56,X55,X53] : (~p(s(bool,'T_0')) | ~p(s(bool,X54)) | p(s(bool,X55)) | ~sP6(X53,X55,X54) | s(bool,X53) = s(bool,X56) | s(bool,'T_0') = s(bool,X56)) )),
  inference(superposition,[],[f393,f518])).
fof(f3445,plain,(
  ( ! [X52,X50,X51,X49] : (~p(s(bool,X50)) | sP6(X49,X50,X51) | s(bool,X49) = s(bool,X52) | s(bool,'T_0') = s(bool,X52)) )),
  inference(subsumption_resolution,[],[f3187,f245])).
fof(f3187,plain,(
  ( ! [X52,X50,X51,X49] : (~p(s(bool,'T_0')) | ~p(s(bool,X50)) | sP6(X49,X50,X51) | s(bool,X49) = s(bool,X52) | s(bool,'T_0') = s(bool,X52)) )),
  inference(superposition,[],[f392,f518])).
fof(f3444,plain,(
  ( ! [X47,X45,X48,X46] : (p(s(bool,X46)) | sP6(X45,X47,X46) | s(bool,X45) = s(bool,X48) | s(bool,'T_0') = s(bool,X48)) )),
  inference(subsumption_resolution,[],[f3186,f245])).
fof(f3186,plain,(
  ( ! [X47,X45,X48,X46] : (~p(s(bool,'T_0')) | p(s(bool,X46)) | sP6(X45,X47,X46) | s(bool,X45) = s(bool,X48) | s(bool,'T_0') = s(bool,X48)) )),
  inference(superposition,[],[f391,f518])).
fof(f3443,plain,(
  ( ! [X43,X41,X44,X42] : (p(s(bool,X42)) | ~p(s(bool,X43)) | ~sP5(X43,X42,X41) | s(bool,X41) = s(bool,X44) | s(bool,'T_0') = s(bool,X44)) )),
  inference(subsumption_resolution,[],[f3185,f245])).
fof(f3185,plain,(
  ( ! [X43,X41,X44,X42] : (~p(s(bool,'T_0')) | p(s(bool,X42)) | ~p(s(bool,X43)) | ~sP5(X43,X42,X41) | s(bool,X41) = s(bool,X44) | s(bool,'T_0') = s(bool,X44)) )),
  inference(superposition,[],[f386,f518])).
fof(f3442,plain,(
  ( ! [X39,X37,X38,X40] : (~p(s(bool,X38)) | p(s(bool,X39)) | ~sP2(X38,X37,X39) | s(bool,X37) = s(bool,X40) | s(bool,'T_0') = s(bool,X40)) )),
  inference(subsumption_resolution,[],[f3184,f245])).
fof(f3184,plain,(
  ( ! [X39,X37,X38,X40] : (~p(s(bool,'T_0')) | ~p(s(bool,X38)) | p(s(bool,X39)) | ~sP2(X38,X37,X39) | s(bool,X37) = s(bool,X40) | s(bool,'T_0') = s(bool,X40)) )),
  inference(superposition,[],[f367,f518])).
fof(f3441,plain,(
  ( ! [X35,X33,X36,X34] : (~p(s(bool,X34)) | p(s(bool,X35)) | ~sP3(X34,X33,X35) | s(bool,X33) = s(bool,X36) | s(bool,'T_0') = s(bool,X36)) )),
  inference(subsumption_resolution,[],[f3183,f245])).
fof(f3183,plain,(
  ( ! [X35,X33,X36,X34] : (~p(s(bool,'T_0')) | ~p(s(bool,X34)) | p(s(bool,X35)) | ~sP3(X34,X33,X35) | s(bool,X33) = s(bool,X36) | s(bool,'T_0') = s(bool,X36)) )),
  inference(superposition,[],[f363,f518])).
fof(f3440,plain,(
  ( ! [X30,X31,X29,X32] : (sP4(X30,X31,X29) | ~sP3(X30,X29,X31) | ~sP2(X31,X29,X30) | ~sP1(X29,X31,X30) | s(bool,X29) = s(bool,X32) | s(bool,'T_0') = s(bool,X32)) )),
  inference(subsumption_resolution,[],[f3182,f245])).
fof(f3182,plain,(
  ( ! [X30,X31,X29,X32] : (~p(s(bool,'T_0')) | sP4(X30,X31,X29) | ~sP3(X30,X29,X31) | ~sP2(X31,X29,X30) | ~sP1(X29,X31,X30) | s(bool,X29) = s(bool,X32) | s(bool,'T_0') = s(bool,X32)) )),
  inference(superposition,[],[f360,f518])).
fof(f3439,plain,(
  ( ! [X28,X26,X27,X25] : (~p(s(bool,X26)) | p(s(bool,X27)) | ~sP4(X26,X25,X27) | s(bool,X25) = s(bool,X28) | s(bool,'T_0') = s(bool,X28)) )),
  inference(subsumption_resolution,[],[f3181,f245])).
fof(f3181,plain,(
  ( ! [X28,X26,X27,X25] : (~p(s(bool,'T_0')) | ~p(s(bool,X26)) | p(s(bool,X27)) | ~sP4(X26,X25,X27) | s(bool,X25) = s(bool,X28) | s(bool,'T_0') = s(bool,X28)) )),
  inference(superposition,[],[f359,f518])).
fof(f3438,plain,(
  ( ! [X24,X23,X22] : (sP0(X22,X23) | s(bool,X22) = s(bool,X24) | s(bool,'T_0') = s(bool,X24)) )),
  inference(subsumption_resolution,[],[f3180,f245])).
fof(f3180,plain,(
  ( ! [X24,X23,X22] : (~p(s(bool,'T_0')) | sP0(X22,X23) | s(bool,X22) = s(bool,X24) | s(bool,'T_0') = s(bool,X24)) )),
  inference(superposition,[],[f332,f518])).
fof(f3437,plain,(
  ( ! [X21,X19,X20] : (sP0(X20,X19) | s(bool,X19) = s(bool,X21) | s(bool,'T_0') = s(bool,X21)) )),
  inference(subsumption_resolution,[],[f3179,f245])).
fof(f3179,plain,(
  ( ! [X21,X19,X20] : (~p(s(bool,'T_0')) | sP0(X20,X19) | s(bool,X19) = s(bool,X21) | s(bool,'T_0') = s(bool,X21)) )),
  inference(superposition,[],[f331,f518])).
fof(f3436,plain,(
  ( ! [X17,X18,X16] : (~p(s(bool,X17)) | s(bool,X16) = s(bool,X17) | s(bool,X16) = s(bool,X18) | s(bool,'T_0') = s(bool,X18)) )),
  inference(subsumption_resolution,[],[f3178,f245])).
fof(f3178,plain,(
  ( ! [X17,X18,X16] : (~p(s(bool,'T_0')) | ~p(s(bool,X17)) | s(bool,X16) = s(bool,X17) | s(bool,X16) = s(bool,X18) | s(bool,'T_0') = s(bool,X18)) )),
  inference(superposition,[],[f323,f518])).
fof(f3435,plain,(
  ( ! [X6,X7] : (s(bool,'F_0') != s(bool,X6) | s(bool,X6) = s(bool,X7) | s(bool,'T_0') = s(bool,X7)) )),
  inference(subsumption_resolution,[],[f3174,f245])).
fof(f3174,plain,(
  ( ! [X6,X7] : (~p(s(bool,'T_0')) | s(bool,'F_0') != s(bool,X6) | s(bool,X6) = s(bool,X7) | s(bool,'T_0') = s(bool,X7)) )),
  inference(superposition,[],[f273,f518])).
fof(f3149,plain,(
  ( ! [X4,X2,X3] : (s(bool,X2) != s(bool,X3) | p(s(bool,X3)) | s(bool,X2) = s(bool,X4) | s(bool,'T_0') = s(bool,X4)) )),
  inference(superposition,[],[f269,f518])).
fof(f3107,plain,(
  ( ! [X121,X118,X120,X119] : (s(X120,f(s(bool,X121))) != s(X120,g(s(bool,X121))) | s(fun(bool,X120),X118) = s(fun(bool,X120),X119) | s(bool,'T_0') = s(bool,X121) | s(bool,'T_0') = s(bool,sK12(X118,X119,X120,bool))) )),
  inference(superposition,[],[f345,f518])).
fof(f3047,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,X0) = s(bool,X1) | s(bool,X1) = s(bool,X2) | s(bool,'T_0') = s(bool,X2) | s(bool,X0) = s(bool,X3) | s(bool,'T_0') = s(bool,X3)) )),
  inference(superposition,[],[f518,f518])).
fof(f2763,plain,(
  ( ! [X0,X1] : (s(bool,'T_0') = s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.clos_known.val_approx','const.clos_known.Other_0')))) )),
  inference(unit_resulting_resolution,[],[f245,f1374,f323])).
fof(f2764,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) = s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X2),s('type.num.num',X3))),s('type.clos_known.val_approx','const.clos_known.Other_0')))) )),
  inference(unit_resulting_resolution,[],[f1374,f1374,f323])).
fof(f2765,plain,(
  ( ! [X2,X0,X1] : (sP0(X0,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X1),s('type.num.num',X2))),s('type.clos_known.val_approx','const.clos_known.Other_0')))) )),
  inference(unit_resulting_resolution,[],[f1374,f331])).
fof(f2766,plain,(
  ( ! [X2,X0,X1] : (sP0('const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.clos_known.val_approx','const.clos_known.Other_0')),X2)) )),
  inference(unit_resulting_resolution,[],[f1374,f332])).
fof(f2769,plain,(
  ( ! [X0,X1] : (~sP4('T_0','const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.clos_known.val_approx','const.clos_known.Other_0')),'F_0')) )),
  inference(unit_resulting_resolution,[],[f245,f408,f1374,f359])).
fof(f2770,plain,(
  ( ! [X2,X0,X3,X1] : (~sP4('const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.clos_known.val_approx','const.clos_known.Other_0')),'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X2),s('type.num.num',X3))),s('type.clos_known.val_approx','const.clos_known.Other_0')),'F_0')) )),
  inference(unit_resulting_resolution,[],[f1374,f408,f1374,f359])).
fof(f2772,plain,(
  ( ! [X0,X1] : (sP4('T_0','T_0','const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.clos_known.val_approx','const.clos_known.Other_0')))) )),
  inference(unit_resulting_resolution,[],[f423,f418,f413,f1374,f360])).
fof(f2774,plain,(
  ( ! [X2,X0,X1] : (sP4(sK13(X0,X0),'T_0','const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X1),s('type.num.num',X2))),s('type.clos_known.val_approx','const.clos_known.Other_0')))) )),
  inference(unit_resulting_resolution,[],[f495,f494,f413,f1374,f360])).
fof(f2776,plain,(
  ( ! [X2,X0,X1] : (sP4(sK14(X0,X0),'T_0','const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X1),s('type.num.num',X2))),s('type.clos_known.val_approx','const.clos_known.Other_0')))) )),
  inference(unit_resulting_resolution,[],[f1146,f1145,f413,f1374,f360])).
fof(f2778,plain,(
  ( ! [X2,X0,X1] : (sP4('T_0',sK13(X0,X0),'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X1),s('type.num.num',X2))),s('type.clos_known.val_approx','const.clos_known.Other_0')))) )),
  inference(unit_resulting_resolution,[],[f423,f418,f493,f1374,f360])).
fof(f2780,plain,(
  ( ! [X2,X0,X3,X1] : (sP4(sK13(X0,X0),sK13(X1,X1),'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X2),s('type.num.num',X3))),s('type.clos_known.val_approx','const.clos_known.Other_0')))) )),
  inference(unit_resulting_resolution,[],[f495,f494,f493,f1374,f360])).
fof(f2782,plain,(
  ( ! [X2,X0,X3,X1] : (sP4(sK14(X0,X0),sK13(X1,X1),'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X2),s('type.num.num',X3))),s('type.clos_known.val_approx','const.clos_known.Other_0')))) )),
  inference(unit_resulting_resolution,[],[f1146,f1145,f493,f1374,f360])).
fof(f2784,plain,(
  ( ! [X2,X0,X1] : (sP4('T_0',sK14(X0,X0),'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X1),s('type.num.num',X2))),s('type.clos_known.val_approx','const.clos_known.Other_0')))) )),
  inference(unit_resulting_resolution,[],[f423,f418,f1128,f1374,f360])).
fof(f2786,plain,(
  ( ! [X2,X0,X3,X1] : (sP4(sK13(X0,X0),sK14(X1,X1),'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X2),s('type.num.num',X3))),s('type.clos_known.val_approx','const.clos_known.Other_0')))) )),
  inference(unit_resulting_resolution,[],[f495,f494,f1128,f1374,f360])).
fof(f2788,plain,(
  ( ! [X2,X0,X3,X1] : (sP4(sK14(X0,X0),sK14(X1,X1),'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X2),s('type.num.num',X3))),s('type.clos_known.val_approx','const.clos_known.Other_0')))) )),
  inference(unit_resulting_resolution,[],[f1146,f1145,f1128,f1374,f360])).
fof(f2789,plain,(
  ( ! [X0,X1] : (~sP3('const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.clos_known.val_approx','const.clos_known.Other_0')),'T_0','F_0')) )),
  inference(unit_resulting_resolution,[],[f245,f408,f1374,f363])).
fof(f2798,plain,(
  ( ! [X0,X1] : (~sP3('T_0','const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.clos_known.val_approx','const.clos_known.Other_0')),'F_0')) )),
  inference(unit_resulting_resolution,[],[f245,f408,f1374,f363])).
fof(f2799,plain,(
  ( ! [X2,X0,X3,X1] : (~sP3('const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.clos_known.val_approx','const.clos_known.Other_0')),'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X2),s('type.num.num',X3))),s('type.clos_known.val_approx','const.clos_known.Other_0')),'F_0')) )),
  inference(unit_resulting_resolution,[],[f1374,f408,f1374,f363])).
fof(f2807,plain,(
  ( ! [X2,X0,X3,X1] : (sP3(X0,X1,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X2),s('type.num.num',X3))),s('type.clos_known.val_approx','const.clos_known.Other_0')))) )),
  inference(unit_resulting_resolution,[],[f1374,f364])).
fof(f2808,plain,(
  ( ! [X0,X1] : (~sP2('const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.clos_known.val_approx','const.clos_known.Other_0')),'T_0','F_0')) )),
  inference(unit_resulting_resolution,[],[f245,f408,f1374,f367])).
fof(f2817,plain,(
  ( ! [X0,X1] : (~sP2('T_0','const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.clos_known.val_approx','const.clos_known.Other_0')),'F_0')) )),
  inference(unit_resulting_resolution,[],[f245,f408,f1374,f367])).
fof(f2818,plain,(
  ( ! [X2,X0,X3,X1] : (~sP2('const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.clos_known.val_approx','const.clos_known.Other_0')),'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X2),s('type.num.num',X3))),s('type.clos_known.val_approx','const.clos_known.Other_0')),'F_0')) )),
  inference(unit_resulting_resolution,[],[f1374,f408,f1374,f367])).
fof(f2826,plain,(
  ( ! [X2,X0,X3,X1] : (sP2(X0,X1,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X2),s('type.num.num',X3))),s('type.clos_known.val_approx','const.clos_known.Other_0')))) )),
  inference(unit_resulting_resolution,[],[f1374,f368])).
fof(f2827,plain,(
  ( ! [X2,X0,X3,X1] : (sP1(X0,X1,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X2),s('type.num.num',X3))),s('type.clos_known.val_approx','const.clos_known.Other_0')))) )),
  inference(unit_resulting_resolution,[],[f1374,f372])).
fof(f2828,plain,(
  ( ! [X2,X0,X3,X1] : (sP1(X0,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X1),s('type.num.num',X2))),s('type.clos_known.val_approx','const.clos_known.Other_0')),X3)) )),
  inference(unit_resulting_resolution,[],[f1374,f373])).
fof(f2829,plain,(
  ( ! [X2,X0,X3,X1] : (sP1('const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.clos_known.val_approx','const.clos_known.Other_0')),X2,X3)) )),
  inference(unit_resulting_resolution,[],[f1374,f374])).
fof(f2831,plain,(
  ( ! [X2,X0,X1] : (sP4('const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.clos_known.val_approx','const.clos_known.Other_0')),sK13(X2,X2),'T_0')) )),
  inference(unit_resulting_resolution,[],[f489,f1374,f376])).
fof(f2833,plain,(
  ( ! [X2,X0,X1] : (sP4('const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.clos_known.val_approx','const.clos_known.Other_0')),'T_0',sK13(X2,X2))) )),
  inference(unit_resulting_resolution,[],[f489,f1374,f376])).
fof(f2835,plain,(
  ( ! [X0,X1] : (~sP4('const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.clos_known.val_approx','const.clos_known.Other_0')),'T_0','F_0')) )),
  inference(unit_resulting_resolution,[],[f431,f1374,f377])).
fof(f2837,plain,(
  ( ! [X0,X1] : (~sP4('const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.clos_known.val_approx','const.clos_known.Other_0')),'F_0','T_0')) )),
  inference(unit_resulting_resolution,[],[f431,f1374,f377])).
fof(f2838,plain,(
  ( ! [X2,X0,X1] : (~sP6('F_0','const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.clos_known.val_approx','const.clos_known.Other_0')),X2)) )),
  inference(unit_resulting_resolution,[],[f408,f1374,f380])).
fof(f2871,plain,(
  ( ! [X0,X1] : (~sP5('const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.clos_known.val_approx','const.clos_known.Other_0')),'F_0','T_0')) )),
  inference(unit_resulting_resolution,[],[f408,f245,f1374,f386])).
fof(f2880,plain,(
  ( ! [X0,X1] : (~sP5('T_0','F_0','const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.clos_known.val_approx','const.clos_known.Other_0')))) )),
  inference(unit_resulting_resolution,[],[f408,f245,f1374,f386])).
fof(f2881,plain,(
  ( ! [X2,X0,X3,X1] : (~sP5('const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.clos_known.val_approx','const.clos_known.Other_0')),'F_0','const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X2),s('type.num.num',X3))),s('type.clos_known.val_approx','const.clos_known.Other_0')))) )),
  inference(unit_resulting_resolution,[],[f408,f1374,f1374,f386])).
fof(f2889,plain,(
  ( ! [X2,X0,X3,X1] : (sP5(X0,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X1),s('type.num.num',X2))),s('type.clos_known.val_approx','const.clos_known.Other_0')),X3)) )),
  inference(unit_resulting_resolution,[],[f1374,f388])).
fof(f2890,plain,(
  ( ! [X0,X1] : (sP6('F_0','F_0','const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.clos_known.val_approx','const.clos_known.Other_0')))) )),
  inference(unit_resulting_resolution,[],[f408,f408,f1374,f390])).
fof(f2895,plain,(
  ( ! [X2,X0,X1] : (sP6('T_0','const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.clos_known.val_approx','const.clos_known.Other_0')),X2)) )),
  inference(unit_resulting_resolution,[],[f245,f1374,f392])).
fof(f2899,plain,(
  ( ! [X4,X2,X0,X3,X1] : (sP6('const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.clos_known.val_approx','const.clos_known.Other_0')),'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X2),s('type.num.num',X3))),s('type.clos_known.val_approx','const.clos_known.Other_0')),X4)) )),
  inference(unit_resulting_resolution,[],[f1374,f1374,f392])).
fof(f2900,plain,(
  ( ! [X0,X1] : (~sP6('T_0','F_0','const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.clos_known.val_approx','const.clos_known.Other_0')))) )),
  inference(unit_resulting_resolution,[],[f245,f408,f1374,f393])).
fof(f2905,plain,(
  ( ! [X0,X1] : (~sP6('const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.clos_known.val_approx','const.clos_known.Other_0')),'F_0','T_0')) )),
  inference(unit_resulting_resolution,[],[f245,f408,f1374,f393])).
fof(f2906,plain,(
  ( ! [X2,X0,X3,X1] : (~sP6('const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.clos_known.val_approx','const.clos_known.Other_0')),'F_0','const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X2),s('type.num.num',X3))),s('type.clos_known.val_approx','const.clos_known.Other_0')))) )),
  inference(unit_resulting_resolution,[],[f1374,f408,f1374,f393])).
fof(f2907,plain,(
  ( ! [X2,X0,X1] : (sP6('const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.clos_known.val_approx','const.clos_known.Other_0')),X2,'F_0')) )),
  inference(unit_resulting_resolution,[],[f426,f1374,f400])).
fof(f2909,plain,(
  ( ! [X2,X0,X1] : (sP6('const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.clos_known.val_approx','const.clos_known.Other_0')),'T_0',X2)) )),
  inference(unit_resulting_resolution,[],[f428,f1374,f400])).
fof(f2910,plain,(
  ( ! [X2,X0,X3,X1] : (sP6('const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.clos_known.val_approx','const.clos_known.Other_0')),sK13(X2,X2),X3)) )),
  inference(unit_resulting_resolution,[],[f501,f1374,f400])).
fof(f2911,plain,(
  ( ! [X2,X0,X3,X1] : (sP6('const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.clos_known.val_approx','const.clos_known.Other_0')),sK14(X2,X2),X3)) )),
  inference(unit_resulting_resolution,[],[f1197,f1374,f400])).
fof(f2912,plain,(
  ( ! [X2,X0,X1] : (~sP4('const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.clos_known.val_approx','const.clos_known.Other_0')),sK13(X2,X2),'F_0')) )),
  inference(unit_resulting_resolution,[],[f408,f1374,f749])).
fof(f2913,plain,(
  ( ! [X2,X0,X1] : (~sP3('const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.clos_known.val_approx','const.clos_known.Other_0')),sK13(X2,X2),'F_0')) )),
  inference(unit_resulting_resolution,[],[f408,f1374,f750])).
fof(f2917,plain,(
  ( ! [X2,X0,X1] : (~sP2('const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.clos_known.val_approx','const.clos_known.Other_0')),sK13(X2,X2),'F_0')) )),
  inference(unit_resulting_resolution,[],[f408,f1374,f751])).
fof(f2921,plain,(
  ( ! [X2,X0,X3,X1] : (sP6(sK13(X0,X0),'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X1),s('type.num.num',X2))),s('type.clos_known.val_approx','const.clos_known.Other_0')),X3)) )),
  inference(unit_resulting_resolution,[],[f1374,f753])).
fof(f2922,plain,(
  ( ! [X2,X0,X1] : (~sP5('const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.clos_known.val_approx','const.clos_known.Other_0')),'F_0',sK13(X2,X2))) )),
  inference(unit_resulting_resolution,[],[f408,f1374,f793])).
fof(f2926,plain,(
  ( ! [X2,X0,X1] : (~sP6(sK13(X0,X0),'F_0','const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X1),s('type.num.num',X2))),s('type.clos_known.val_approx','const.clos_known.Other_0')))) )),
  inference(unit_resulting_resolution,[],[f408,f1374,f832])).
fof(f2520,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X0))),s('type.clos_known.val_approx','const.clos_known.Other_0')))) )),
  inference(unit_resulting_resolution,[],[f245,f1375,f323])).
fof(f2521,plain,(
  ( ! [X0,X1] : (s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X0))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) = s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X1))),s('type.clos_known.val_approx','const.clos_known.Other_0')))) )),
  inference(unit_resulting_resolution,[],[f1375,f1375,f323])).
fof(f2522,plain,(
  ( ! [X0,X1] : (sP0(X0,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X1))),s('type.clos_known.val_approx','const.clos_known.Other_0')))) )),
  inference(unit_resulting_resolution,[],[f1375,f331])).
fof(f2523,plain,(
  ( ! [X0,X1] : (sP0('const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X0))),s('type.clos_known.val_approx','const.clos_known.Other_0')),X1)) )),
  inference(unit_resulting_resolution,[],[f1375,f332])).
fof(f2526,plain,(
  ( ! [X0] : (~sP4('T_0','const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X0))),s('type.clos_known.val_approx','const.clos_known.Other_0')),'F_0')) )),
  inference(unit_resulting_resolution,[],[f245,f408,f1375,f359])).
fof(f2527,plain,(
  ( ! [X0,X1] : (~sP4('const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X0))),s('type.clos_known.val_approx','const.clos_known.Other_0')),'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X1))),s('type.clos_known.val_approx','const.clos_known.Other_0')),'F_0')) )),
  inference(unit_resulting_resolution,[],[f1375,f408,f1375,f359])).
fof(f2529,plain,(
  ( ! [X0] : (sP4('T_0','T_0','const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X0))),s('type.clos_known.val_approx','const.clos_known.Other_0')))) )),
  inference(unit_resulting_resolution,[],[f423,f418,f413,f1375,f360])).
fof(f2531,plain,(
  ( ! [X0,X1] : (sP4(sK13(X0,X0),'T_0','const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X1))),s('type.clos_known.val_approx','const.clos_known.Other_0')))) )),
  inference(unit_resulting_resolution,[],[f495,f494,f413,f1375,f360])).
fof(f2533,plain,(
  ( ! [X0,X1] : (sP4(sK14(X0,X0),'T_0','const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X1))),s('type.clos_known.val_approx','const.clos_known.Other_0')))) )),
  inference(unit_resulting_resolution,[],[f1146,f1145,f413,f1375,f360])).
fof(f2535,plain,(
  ( ! [X0,X1] : (sP4('T_0',sK13(X0,X0),'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X1))),s('type.clos_known.val_approx','const.clos_known.Other_0')))) )),
  inference(unit_resulting_resolution,[],[f423,f418,f493,f1375,f360])).
fof(f2537,plain,(
  ( ! [X2,X0,X1] : (sP4(sK13(X0,X0),sK13(X1,X1),'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X2))),s('type.clos_known.val_approx','const.clos_known.Other_0')))) )),
  inference(unit_resulting_resolution,[],[f495,f494,f493,f1375,f360])).
fof(f2539,plain,(
  ( ! [X2,X0,X1] : (sP4(sK14(X0,X0),sK13(X1,X1),'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X2))),s('type.clos_known.val_approx','const.clos_known.Other_0')))) )),
  inference(unit_resulting_resolution,[],[f1146,f1145,f493,f1375,f360])).
fof(f2541,plain,(
  ( ! [X0,X1] : (sP4('T_0',sK14(X0,X0),'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X1))),s('type.clos_known.val_approx','const.clos_known.Other_0')))) )),
  inference(unit_resulting_resolution,[],[f423,f418,f1128,f1375,f360])).
fof(f2543,plain,(
  ( ! [X2,X0,X1] : (sP4(sK13(X0,X0),sK14(X1,X1),'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X2))),s('type.clos_known.val_approx','const.clos_known.Other_0')))) )),
  inference(unit_resulting_resolution,[],[f495,f494,f1128,f1375,f360])).
fof(f2545,plain,(
  ( ! [X2,X0,X1] : (sP4(sK14(X0,X0),sK14(X1,X1),'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X2))),s('type.clos_known.val_approx','const.clos_known.Other_0')))) )),
  inference(unit_resulting_resolution,[],[f1146,f1145,f1128,f1375,f360])).
fof(f2546,plain,(
  ( ! [X0] : (~sP3('const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X0))),s('type.clos_known.val_approx','const.clos_known.Other_0')),'T_0','F_0')) )),
  inference(unit_resulting_resolution,[],[f245,f408,f1375,f363])).
fof(f2555,plain,(
  ( ! [X0] : (~sP3('T_0','const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X0))),s('type.clos_known.val_approx','const.clos_known.Other_0')),'F_0')) )),
  inference(unit_resulting_resolution,[],[f245,f408,f1375,f363])).
fof(f2556,plain,(
  ( ! [X0,X1] : (~sP3('const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X0))),s('type.clos_known.val_approx','const.clos_known.Other_0')),'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X1))),s('type.clos_known.val_approx','const.clos_known.Other_0')),'F_0')) )),
  inference(unit_resulting_resolution,[],[f1375,f408,f1375,f363])).
fof(f2564,plain,(
  ( ! [X2,X0,X1] : (sP3(X0,X1,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X2))),s('type.clos_known.val_approx','const.clos_known.Other_0')))) )),
  inference(unit_resulting_resolution,[],[f1375,f364])).
fof(f2565,plain,(
  ( ! [X0] : (~sP2('const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X0))),s('type.clos_known.val_approx','const.clos_known.Other_0')),'T_0','F_0')) )),
  inference(unit_resulting_resolution,[],[f245,f408,f1375,f367])).
fof(f2574,plain,(
  ( ! [X0] : (~sP2('T_0','const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X0))),s('type.clos_known.val_approx','const.clos_known.Other_0')),'F_0')) )),
  inference(unit_resulting_resolution,[],[f245,f408,f1375,f367])).
fof(f2575,plain,(
  ( ! [X0,X1] : (~sP2('const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X0))),s('type.clos_known.val_approx','const.clos_known.Other_0')),'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X1))),s('type.clos_known.val_approx','const.clos_known.Other_0')),'F_0')) )),
  inference(unit_resulting_resolution,[],[f1375,f408,f1375,f367])).
fof(f2583,plain,(
  ( ! [X2,X0,X1] : (sP2(X0,X1,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X2))),s('type.clos_known.val_approx','const.clos_known.Other_0')))) )),
  inference(unit_resulting_resolution,[],[f1375,f368])).
fof(f2584,plain,(
  ( ! [X2,X0,X1] : (sP1(X0,X1,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X2))),s('type.clos_known.val_approx','const.clos_known.Other_0')))) )),
  inference(unit_resulting_resolution,[],[f1375,f372])).
fof(f2585,plain,(
  ( ! [X2,X0,X1] : (sP1(X0,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X1))),s('type.clos_known.val_approx','const.clos_known.Other_0')),X2)) )),
  inference(unit_resulting_resolution,[],[f1375,f373])).
fof(f2586,plain,(
  ( ! [X2,X0,X1] : (sP1('const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X0))),s('type.clos_known.val_approx','const.clos_known.Other_0')),X1,X2)) )),
  inference(unit_resulting_resolution,[],[f1375,f374])).
fof(f2588,plain,(
  ( ! [X0,X1] : (sP4('const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X0))),s('type.clos_known.val_approx','const.clos_known.Other_0')),sK13(X1,X1),'T_0')) )),
  inference(unit_resulting_resolution,[],[f489,f1375,f376])).
fof(f2590,plain,(
  ( ! [X0,X1] : (sP4('const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X0))),s('type.clos_known.val_approx','const.clos_known.Other_0')),'T_0',sK13(X1,X1))) )),
  inference(unit_resulting_resolution,[],[f489,f1375,f376])).
fof(f2592,plain,(
  ( ! [X0] : (~sP4('const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X0))),s('type.clos_known.val_approx','const.clos_known.Other_0')),'T_0','F_0')) )),
  inference(unit_resulting_resolution,[],[f431,f1375,f377])).
fof(f2594,plain,(
  ( ! [X0] : (~sP4('const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X0))),s('type.clos_known.val_approx','const.clos_known.Other_0')),'F_0','T_0')) )),
  inference(unit_resulting_resolution,[],[f431,f1375,f377])).
fof(f2595,plain,(
  ( ! [X0,X1] : (~sP6('F_0','const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X0))),s('type.clos_known.val_approx','const.clos_known.Other_0')),X1)) )),
  inference(unit_resulting_resolution,[],[f408,f1375,f380])).
fof(f2628,plain,(
  ( ! [X0] : (~sP5('const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X0))),s('type.clos_known.val_approx','const.clos_known.Other_0')),'F_0','T_0')) )),
  inference(unit_resulting_resolution,[],[f408,f245,f1375,f386])).
fof(f2637,plain,(
  ( ! [X0] : (~sP5('T_0','F_0','const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X0))),s('type.clos_known.val_approx','const.clos_known.Other_0')))) )),
  inference(unit_resulting_resolution,[],[f408,f245,f1375,f386])).
fof(f2638,plain,(
  ( ! [X0,X1] : (~sP5('const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X0))),s('type.clos_known.val_approx','const.clos_known.Other_0')),'F_0','const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X1))),s('type.clos_known.val_approx','const.clos_known.Other_0')))) )),
  inference(unit_resulting_resolution,[],[f408,f1375,f1375,f386])).
fof(f2646,plain,(
  ( ! [X2,X0,X1] : (sP5(X0,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X1))),s('type.clos_known.val_approx','const.clos_known.Other_0')),X2)) )),
  inference(unit_resulting_resolution,[],[f1375,f388])).
fof(f2647,plain,(
  ( ! [X0] : (sP6('F_0','F_0','const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X0))),s('type.clos_known.val_approx','const.clos_known.Other_0')))) )),
  inference(unit_resulting_resolution,[],[f408,f408,f1375,f390])).
fof(f2652,plain,(
  ( ! [X0,X1] : (sP6('T_0','const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X0))),s('type.clos_known.val_approx','const.clos_known.Other_0')),X1)) )),
  inference(unit_resulting_resolution,[],[f245,f1375,f392])).
fof(f2656,plain,(
  ( ! [X2,X0,X1] : (sP6('const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X0))),s('type.clos_known.val_approx','const.clos_known.Other_0')),'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X1))),s('type.clos_known.val_approx','const.clos_known.Other_0')),X2)) )),
  inference(unit_resulting_resolution,[],[f1375,f1375,f392])).
fof(f2657,plain,(
  ( ! [X0] : (~sP6('T_0','F_0','const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X0))),s('type.clos_known.val_approx','const.clos_known.Other_0')))) )),
  inference(unit_resulting_resolution,[],[f245,f408,f1375,f393])).
fof(f2662,plain,(
  ( ! [X0] : (~sP6('const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X0))),s('type.clos_known.val_approx','const.clos_known.Other_0')),'F_0','T_0')) )),
  inference(unit_resulting_resolution,[],[f245,f408,f1375,f393])).
fof(f2663,plain,(
  ( ! [X0,X1] : (~sP6('const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X0))),s('type.clos_known.val_approx','const.clos_known.Other_0')),'F_0','const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X1))),s('type.clos_known.val_approx','const.clos_known.Other_0')))) )),
  inference(unit_resulting_resolution,[],[f1375,f408,f1375,f393])).
fof(f2664,plain,(
  ( ! [X0,X1] : (sP6('const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X0))),s('type.clos_known.val_approx','const.clos_known.Other_0')),X1,'F_0')) )),
  inference(unit_resulting_resolution,[],[f426,f1375,f400])).
fof(f2666,plain,(
  ( ! [X0,X1] : (sP6('const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X0))),s('type.clos_known.val_approx','const.clos_known.Other_0')),'T_0',X1)) )),
  inference(unit_resulting_resolution,[],[f428,f1375,f400])).
fof(f2667,plain,(
  ( ! [X2,X0,X1] : (sP6('const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X0))),s('type.clos_known.val_approx','const.clos_known.Other_0')),sK13(X1,X1),X2)) )),
  inference(unit_resulting_resolution,[],[f501,f1375,f400])).
fof(f2668,plain,(
  ( ! [X2,X0,X1] : (sP6('const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X0))),s('type.clos_known.val_approx','const.clos_known.Other_0')),sK14(X1,X1),X2)) )),
  inference(unit_resulting_resolution,[],[f1197,f1375,f400])).
fof(f2669,plain,(
  ( ! [X0,X1] : (~sP4('const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X0))),s('type.clos_known.val_approx','const.clos_known.Other_0')),sK13(X1,X1),'F_0')) )),
  inference(unit_resulting_resolution,[],[f408,f1375,f749])).
fof(f2670,plain,(
  ( ! [X0,X1] : (~sP3('const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X0))),s('type.clos_known.val_approx','const.clos_known.Other_0')),sK13(X1,X1),'F_0')) )),
  inference(unit_resulting_resolution,[],[f408,f1375,f750])).
fof(f2674,plain,(
  ( ! [X0,X1] : (~sP2('const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X0))),s('type.clos_known.val_approx','const.clos_known.Other_0')),sK13(X1,X1),'F_0')) )),
  inference(unit_resulting_resolution,[],[f408,f1375,f751])).
fof(f2678,plain,(
  ( ! [X2,X0,X1] : (sP6(sK13(X0,X0),'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X1))),s('type.clos_known.val_approx','const.clos_known.Other_0')),X2)) )),
  inference(unit_resulting_resolution,[],[f1375,f753])).
fof(f2679,plain,(
  ( ! [X0,X1] : (~sP5('const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X0))),s('type.clos_known.val_approx','const.clos_known.Other_0')),'F_0',sK13(X1,X1))) )),
  inference(unit_resulting_resolution,[],[f408,f1375,f793])).
fof(f2683,plain,(
  ( ! [X0,X1] : (~sP6(sK13(X0,X0),'F_0','const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X1))),s('type.clos_known.val_approx','const.clos_known.Other_0')))) )),
  inference(unit_resulting_resolution,[],[f408,f1375,f832])).
fof(f2286,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X0))),s('type.clos_known.val_approx','const.clos_known.Other_0')))) )),
  inference(unit_resulting_resolution,[],[f245,f1376,f323])).
fof(f2287,plain,(
  ( ! [X0,X1] : (s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X0))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) = s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X1))),s('type.clos_known.val_approx','const.clos_known.Other_0')))) )),
  inference(unit_resulting_resolution,[],[f1376,f1376,f323])).
fof(f2288,plain,(
  ( ! [X0,X1] : (sP0(X0,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X1))),s('type.clos_known.val_approx','const.clos_known.Other_0')))) )),
  inference(unit_resulting_resolution,[],[f1376,f331])).
fof(f2289,plain,(
  ( ! [X0,X1] : (sP0('const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X0))),s('type.clos_known.val_approx','const.clos_known.Other_0')),X1)) )),
  inference(unit_resulting_resolution,[],[f1376,f332])).
fof(f2292,plain,(
  ( ! [X0] : (~sP4('T_0','const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X0))),s('type.clos_known.val_approx','const.clos_known.Other_0')),'F_0')) )),
  inference(unit_resulting_resolution,[],[f245,f408,f1376,f359])).
fof(f2293,plain,(
  ( ! [X0,X1] : (~sP4('const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X0))),s('type.clos_known.val_approx','const.clos_known.Other_0')),'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X1))),s('type.clos_known.val_approx','const.clos_known.Other_0')),'F_0')) )),
  inference(unit_resulting_resolution,[],[f1376,f408,f1376,f359])).
fof(f2295,plain,(
  ( ! [X0] : (sP4('T_0','T_0','const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X0))),s('type.clos_known.val_approx','const.clos_known.Other_0')))) )),
  inference(unit_resulting_resolution,[],[f423,f418,f413,f1376,f360])).
fof(f2297,plain,(
  ( ! [X0,X1] : (sP4(sK13(X0,X0),'T_0','const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X1))),s('type.clos_known.val_approx','const.clos_known.Other_0')))) )),
  inference(unit_resulting_resolution,[],[f495,f494,f413,f1376,f360])).
fof(f2299,plain,(
  ( ! [X0,X1] : (sP4(sK14(X0,X0),'T_0','const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X1))),s('type.clos_known.val_approx','const.clos_known.Other_0')))) )),
  inference(unit_resulting_resolution,[],[f1146,f1145,f413,f1376,f360])).
fof(f2301,plain,(
  ( ! [X0,X1] : (sP4('T_0',sK13(X0,X0),'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X1))),s('type.clos_known.val_approx','const.clos_known.Other_0')))) )),
  inference(unit_resulting_resolution,[],[f423,f418,f493,f1376,f360])).
fof(f2303,plain,(
  ( ! [X2,X0,X1] : (sP4(sK13(X0,X0),sK13(X1,X1),'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X2))),s('type.clos_known.val_approx','const.clos_known.Other_0')))) )),
  inference(unit_resulting_resolution,[],[f495,f494,f493,f1376,f360])).
fof(f2305,plain,(
  ( ! [X2,X0,X1] : (sP4(sK14(X0,X0),sK13(X1,X1),'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X2))),s('type.clos_known.val_approx','const.clos_known.Other_0')))) )),
  inference(unit_resulting_resolution,[],[f1146,f1145,f493,f1376,f360])).
fof(f2307,plain,(
  ( ! [X0,X1] : (sP4('T_0',sK14(X0,X0),'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X1))),s('type.clos_known.val_approx','const.clos_known.Other_0')))) )),
  inference(unit_resulting_resolution,[],[f423,f418,f1128,f1376,f360])).
fof(f2309,plain,(
  ( ! [X2,X0,X1] : (sP4(sK13(X0,X0),sK14(X1,X1),'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X2))),s('type.clos_known.val_approx','const.clos_known.Other_0')))) )),
  inference(unit_resulting_resolution,[],[f495,f494,f1128,f1376,f360])).
fof(f2311,plain,(
  ( ! [X2,X0,X1] : (sP4(sK14(X0,X0),sK14(X1,X1),'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X2))),s('type.clos_known.val_approx','const.clos_known.Other_0')))) )),
  inference(unit_resulting_resolution,[],[f1146,f1145,f1128,f1376,f360])).
fof(f2312,plain,(
  ( ! [X0] : (~sP3('const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X0))),s('type.clos_known.val_approx','const.clos_known.Other_0')),'T_0','F_0')) )),
  inference(unit_resulting_resolution,[],[f245,f408,f1376,f363])).
fof(f2321,plain,(
  ( ! [X0] : (~sP3('T_0','const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X0))),s('type.clos_known.val_approx','const.clos_known.Other_0')),'F_0')) )),
  inference(unit_resulting_resolution,[],[f245,f408,f1376,f363])).
fof(f2322,plain,(
  ( ! [X0,X1] : (~sP3('const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X0))),s('type.clos_known.val_approx','const.clos_known.Other_0')),'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X1))),s('type.clos_known.val_approx','const.clos_known.Other_0')),'F_0')) )),
  inference(unit_resulting_resolution,[],[f1376,f408,f1376,f363])).
fof(f2330,plain,(
  ( ! [X2,X0,X1] : (sP3(X0,X1,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X2))),s('type.clos_known.val_approx','const.clos_known.Other_0')))) )),
  inference(unit_resulting_resolution,[],[f1376,f364])).
fof(f2331,plain,(
  ( ! [X0] : (~sP2('const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X0))),s('type.clos_known.val_approx','const.clos_known.Other_0')),'T_0','F_0')) )),
  inference(unit_resulting_resolution,[],[f245,f408,f1376,f367])).
fof(f2340,plain,(
  ( ! [X0] : (~sP2('T_0','const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X0))),s('type.clos_known.val_approx','const.clos_known.Other_0')),'F_0')) )),
  inference(unit_resulting_resolution,[],[f245,f408,f1376,f367])).
fof(f2341,plain,(
  ( ! [X0,X1] : (~sP2('const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X0))),s('type.clos_known.val_approx','const.clos_known.Other_0')),'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X1))),s('type.clos_known.val_approx','const.clos_known.Other_0')),'F_0')) )),
  inference(unit_resulting_resolution,[],[f1376,f408,f1376,f367])).
fof(f2349,plain,(
  ( ! [X2,X0,X1] : (sP2(X0,X1,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X2))),s('type.clos_known.val_approx','const.clos_known.Other_0')))) )),
  inference(unit_resulting_resolution,[],[f1376,f368])).
fof(f2350,plain,(
  ( ! [X2,X0,X1] : (sP1(X0,X1,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X2))),s('type.clos_known.val_approx','const.clos_known.Other_0')))) )),
  inference(unit_resulting_resolution,[],[f1376,f372])).
fof(f2351,plain,(
  ( ! [X2,X0,X1] : (sP1(X0,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X1))),s('type.clos_known.val_approx','const.clos_known.Other_0')),X2)) )),
  inference(unit_resulting_resolution,[],[f1376,f373])).
fof(f2352,plain,(
  ( ! [X2,X0,X1] : (sP1('const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X0))),s('type.clos_known.val_approx','const.clos_known.Other_0')),X1,X2)) )),
  inference(unit_resulting_resolution,[],[f1376,f374])).
fof(f2354,plain,(
  ( ! [X0,X1] : (sP4('const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X0))),s('type.clos_known.val_approx','const.clos_known.Other_0')),sK13(X1,X1),'T_0')) )),
  inference(unit_resulting_resolution,[],[f489,f1376,f376])).
fof(f2356,plain,(
  ( ! [X0,X1] : (sP4('const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X0))),s('type.clos_known.val_approx','const.clos_known.Other_0')),'T_0',sK13(X1,X1))) )),
  inference(unit_resulting_resolution,[],[f489,f1376,f376])).
fof(f2358,plain,(
  ( ! [X0] : (~sP4('const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X0))),s('type.clos_known.val_approx','const.clos_known.Other_0')),'T_0','F_0')) )),
  inference(unit_resulting_resolution,[],[f431,f1376,f377])).
fof(f2360,plain,(
  ( ! [X0] : (~sP4('const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X0))),s('type.clos_known.val_approx','const.clos_known.Other_0')),'F_0','T_0')) )),
  inference(unit_resulting_resolution,[],[f431,f1376,f377])).
fof(f2361,plain,(
  ( ! [X0,X1] : (~sP6('F_0','const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X0))),s('type.clos_known.val_approx','const.clos_known.Other_0')),X1)) )),
  inference(unit_resulting_resolution,[],[f408,f1376,f380])).
fof(f2394,plain,(
  ( ! [X0] : (~sP5('const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X0))),s('type.clos_known.val_approx','const.clos_known.Other_0')),'F_0','T_0')) )),
  inference(unit_resulting_resolution,[],[f408,f245,f1376,f386])).
fof(f2403,plain,(
  ( ! [X0] : (~sP5('T_0','F_0','const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X0))),s('type.clos_known.val_approx','const.clos_known.Other_0')))) )),
  inference(unit_resulting_resolution,[],[f408,f245,f1376,f386])).
fof(f2404,plain,(
  ( ! [X0,X1] : (~sP5('const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X0))),s('type.clos_known.val_approx','const.clos_known.Other_0')),'F_0','const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X1))),s('type.clos_known.val_approx','const.clos_known.Other_0')))) )),
  inference(unit_resulting_resolution,[],[f408,f1376,f1376,f386])).
fof(f2412,plain,(
  ( ! [X2,X0,X1] : (sP5(X0,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X1))),s('type.clos_known.val_approx','const.clos_known.Other_0')),X2)) )),
  inference(unit_resulting_resolution,[],[f1376,f388])).
fof(f2413,plain,(
  ( ! [X0] : (sP6('F_0','F_0','const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X0))),s('type.clos_known.val_approx','const.clos_known.Other_0')))) )),
  inference(unit_resulting_resolution,[],[f408,f408,f1376,f390])).
fof(f2418,plain,(
  ( ! [X0,X1] : (sP6('T_0','const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X0))),s('type.clos_known.val_approx','const.clos_known.Other_0')),X1)) )),
  inference(unit_resulting_resolution,[],[f245,f1376,f392])).
fof(f2422,plain,(
  ( ! [X2,X0,X1] : (sP6('const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X0))),s('type.clos_known.val_approx','const.clos_known.Other_0')),'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X1))),s('type.clos_known.val_approx','const.clos_known.Other_0')),X2)) )),
  inference(unit_resulting_resolution,[],[f1376,f1376,f392])).
fof(f2423,plain,(
  ( ! [X0] : (~sP6('T_0','F_0','const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X0))),s('type.clos_known.val_approx','const.clos_known.Other_0')))) )),
  inference(unit_resulting_resolution,[],[f245,f408,f1376,f393])).
fof(f2428,plain,(
  ( ! [X0] : (~sP6('const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X0))),s('type.clos_known.val_approx','const.clos_known.Other_0')),'F_0','T_0')) )),
  inference(unit_resulting_resolution,[],[f245,f408,f1376,f393])).
fof(f2429,plain,(
  ( ! [X0,X1] : (~sP6('const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X0))),s('type.clos_known.val_approx','const.clos_known.Other_0')),'F_0','const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X1))),s('type.clos_known.val_approx','const.clos_known.Other_0')))) )),
  inference(unit_resulting_resolution,[],[f1376,f408,f1376,f393])).
fof(f2430,plain,(
  ( ! [X0,X1] : (sP6('const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X0))),s('type.clos_known.val_approx','const.clos_known.Other_0')),X1,'F_0')) )),
  inference(unit_resulting_resolution,[],[f426,f1376,f400])).
fof(f2432,plain,(
  ( ! [X0,X1] : (sP6('const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X0))),s('type.clos_known.val_approx','const.clos_known.Other_0')),'T_0',X1)) )),
  inference(unit_resulting_resolution,[],[f428,f1376,f400])).
fof(f2433,plain,(
  ( ! [X2,X0,X1] : (sP6('const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X0))),s('type.clos_known.val_approx','const.clos_known.Other_0')),sK13(X1,X1),X2)) )),
  inference(unit_resulting_resolution,[],[f501,f1376,f400])).
fof(f2434,plain,(
  ( ! [X2,X0,X1] : (sP6('const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X0))),s('type.clos_known.val_approx','const.clos_known.Other_0')),sK14(X1,X1),X2)) )),
  inference(unit_resulting_resolution,[],[f1197,f1376,f400])).
fof(f2435,plain,(
  ( ! [X0,X1] : (~sP4('const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X0))),s('type.clos_known.val_approx','const.clos_known.Other_0')),sK13(X1,X1),'F_0')) )),
  inference(unit_resulting_resolution,[],[f408,f1376,f749])).
fof(f2436,plain,(
  ( ! [X0,X1] : (~sP3('const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X0))),s('type.clos_known.val_approx','const.clos_known.Other_0')),sK13(X1,X1),'F_0')) )),
  inference(unit_resulting_resolution,[],[f408,f1376,f750])).
fof(f2440,plain,(
  ( ! [X0,X1] : (~sP2('const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X0))),s('type.clos_known.val_approx','const.clos_known.Other_0')),sK13(X1,X1),'F_0')) )),
  inference(unit_resulting_resolution,[],[f408,f1376,f751])).
fof(f2444,plain,(
  ( ! [X2,X0,X1] : (sP6(sK13(X0,X0),'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X1))),s('type.clos_known.val_approx','const.clos_known.Other_0')),X2)) )),
  inference(unit_resulting_resolution,[],[f1376,f753])).
fof(f2445,plain,(
  ( ! [X0,X1] : (~sP5('const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X0))),s('type.clos_known.val_approx','const.clos_known.Other_0')),'F_0',sK13(X1,X1))) )),
  inference(unit_resulting_resolution,[],[f408,f1376,f793])).
fof(f2449,plain,(
  ( ! [X0,X1] : (~sP6(sK13(X0,X0),'F_0','const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X1))),s('type.clos_known.val_approx','const.clos_known.Other_0')))) )),
  inference(unit_resulting_resolution,[],[f408,f1376,f832])).
fof(f2054,plain,(
  ( ! [X0] : (sP0(X0,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx','const.clos_known.Other_0')))) )),
  inference(unit_resulting_resolution,[],[f1373,f331])).
fof(f2055,plain,(
  ( ! [X0] : (sP0('const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx','const.clos_known.Other_0')),X0)) )),
  inference(unit_resulting_resolution,[],[f1373,f332])).
fof(f2062,plain,(
  ( ! [X0] : (sP4(sK13(X0,X0),'T_0','const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx','const.clos_known.Other_0')))) )),
  inference(unit_resulting_resolution,[],[f495,f494,f413,f1373,f360])).
fof(f2066,plain,(
  ( ! [X0] : (sP4('T_0',sK13(X0,X0),'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx','const.clos_known.Other_0')))) )),
  inference(unit_resulting_resolution,[],[f423,f418,f493,f1373,f360])).
fof(f2068,plain,(
  ( ! [X0,X1] : (sP4(sK13(X0,X0),sK13(X1,X1),'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx','const.clos_known.Other_0')))) )),
  inference(unit_resulting_resolution,[],[f495,f494,f493,f1373,f360])).
fof(f2070,plain,(
  ( ! [X0,X1] : (sP4(sK14(X0,X0),sK13(X1,X1),'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx','const.clos_known.Other_0')))) )),
  inference(unit_resulting_resolution,[],[f1146,f1145,f493,f1373,f360])).
fof(f2072,plain,(
  ( ! [X0] : (sP4('T_0',sK14(X0,X0),'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx','const.clos_known.Other_0')))) )),
  inference(unit_resulting_resolution,[],[f423,f418,f1128,f1373,f360])).
fof(f2074,plain,(
  ( ! [X0,X1] : (sP4(sK13(X0,X0),sK14(X1,X1),'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx','const.clos_known.Other_0')))) )),
  inference(unit_resulting_resolution,[],[f495,f494,f1128,f1373,f360])).
fof(f2076,plain,(
  ( ! [X0,X1] : (sP4(sK14(X0,X0),sK14(X1,X1),'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx','const.clos_known.Other_0')))) )),
  inference(unit_resulting_resolution,[],[f1146,f1145,f1128,f1373,f360])).
fof(f2077,plain,(
  ~sP3('const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx','const.clos_known.Other_0')),'T_0','F_0')),
  inference(unit_resulting_resolution,[],[f245,f408,f1373,f363])).
fof(f2086,plain,(
  ~sP3('T_0','const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx','const.clos_known.Other_0')),'F_0')),
  inference(unit_resulting_resolution,[],[f245,f408,f1373,f363])).
fof(f2087,plain,(
  ~sP3('const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx','const.clos_known.Other_0')),'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx','const.clos_known.Other_0')),'F_0')),
  inference(unit_resulting_resolution,[],[f1373,f408,f1373,f363])).
fof(f2096,plain,(
  ~sP2('const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx','const.clos_known.Other_0')),'T_0','F_0')),
  inference(unit_resulting_resolution,[],[f245,f408,f1373,f367])).
fof(f2105,plain,(
  ~sP2('T_0','const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx','const.clos_known.Other_0')),'F_0')),
  inference(unit_resulting_resolution,[],[f245,f408,f1373,f367])).
fof(f2106,plain,(
  ~sP2('const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx','const.clos_known.Other_0')),'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx','const.clos_known.Other_0')),'F_0')),
  inference(unit_resulting_resolution,[],[f1373,f408,f1373,f367])).
fof(f2114,plain,(
  ( ! [X0,X1] : (sP2(X0,X1,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx','const.clos_known.Other_0')))) )),
  inference(unit_resulting_resolution,[],[f1373,f368])).
fof(f2115,plain,(
  ( ! [X0,X1] : (sP1(X0,X1,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx','const.clos_known.Other_0')))) )),
  inference(unit_resulting_resolution,[],[f1373,f372])).
fof(f2119,plain,(
  ( ! [X0] : (sP4('const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx','const.clos_known.Other_0')),sK13(X0,X0),'T_0')) )),
  inference(unit_resulting_resolution,[],[f489,f1373,f376])).
fof(f2121,plain,(
  ( ! [X0] : (sP4('const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx','const.clos_known.Other_0')),'T_0',sK13(X0,X0))) )),
  inference(unit_resulting_resolution,[],[f489,f1373,f376])).
fof(f2123,plain,(
  ~sP4('const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx','const.clos_known.Other_0')),'T_0','F_0')),
  inference(unit_resulting_resolution,[],[f431,f1373,f377])).
fof(f2126,plain,(
  ( ! [X0] : (~sP6('F_0','const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx','const.clos_known.Other_0')),X0)) )),
  inference(unit_resulting_resolution,[],[f408,f1373,f380])).
fof(f2159,plain,(
  ~sP5('const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx','const.clos_known.Other_0')),'F_0','T_0')),
  inference(unit_resulting_resolution,[],[f408,f245,f1373,f386])).
fof(f2168,plain,(
  ~sP5('T_0','F_0','const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx','const.clos_known.Other_0')))),
  inference(unit_resulting_resolution,[],[f408,f245,f1373,f386])).
fof(f2169,plain,(
  ~sP5('const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx','const.clos_known.Other_0')),'F_0','const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx','const.clos_known.Other_0')))),
  inference(unit_resulting_resolution,[],[f408,f1373,f1373,f386])).
fof(f2177,plain,(
  ( ! [X0,X1] : (sP5(X0,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx','const.clos_known.Other_0')),X1)) )),
  inference(unit_resulting_resolution,[],[f1373,f388])).
fof(f2178,plain,(
  sP6('F_0','F_0','const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx','const.clos_known.Other_0')))),
  inference(unit_resulting_resolution,[],[f408,f408,f1373,f390])).
fof(f2183,plain,(
  ( ! [X0] : (sP6('T_0','const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx','const.clos_known.Other_0')),X0)) )),
  inference(unit_resulting_resolution,[],[f245,f1373,f392])).
fof(f2187,plain,(
  ( ! [X0] : (sP6('const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx','const.clos_known.Other_0')),'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx','const.clos_known.Other_0')),X0)) )),
  inference(unit_resulting_resolution,[],[f1373,f1373,f392])).
fof(f2188,plain,(
  ~sP6('T_0','F_0','const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx','const.clos_known.Other_0')))),
  inference(unit_resulting_resolution,[],[f245,f408,f1373,f393])).
fof(f2195,plain,(
  ( ! [X0] : (sP6('const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx','const.clos_known.Other_0')),X0,'F_0')) )),
  inference(unit_resulting_resolution,[],[f426,f1373,f400])).
fof(f2197,plain,(
  ( ! [X0] : (sP6('const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx','const.clos_known.Other_0')),'T_0',X0)) )),
  inference(unit_resulting_resolution,[],[f428,f1373,f400])).
fof(f2198,plain,(
  ( ! [X0,X1] : (sP6('const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx','const.clos_known.Other_0')),sK13(X0,X0),X1)) )),
  inference(unit_resulting_resolution,[],[f501,f1373,f400])).
fof(f2199,plain,(
  ( ! [X0,X1] : (sP6('const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx','const.clos_known.Other_0')),sK14(X0,X0),X1)) )),
  inference(unit_resulting_resolution,[],[f1197,f1373,f400])).
fof(f2200,plain,(
  ( ! [X0] : (~sP4('const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx','const.clos_known.Other_0')),sK13(X0,X0),'F_0')) )),
  inference(unit_resulting_resolution,[],[f408,f1373,f749])).
fof(f2201,plain,(
  ( ! [X0] : (~sP3('const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx','const.clos_known.Other_0')),sK13(X0,X0),'F_0')) )),
  inference(unit_resulting_resolution,[],[f408,f1373,f750])).
fof(f2205,plain,(
  ( ! [X0] : (~sP2('const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx','const.clos_known.Other_0')),sK13(X0,X0),'F_0')) )),
  inference(unit_resulting_resolution,[],[f408,f1373,f751])).
fof(f2209,plain,(
  ( ! [X0,X1] : (sP6(sK13(X0,X0),'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx','const.clos_known.Other_0')),X1)) )),
  inference(unit_resulting_resolution,[],[f1373,f753])).
fof(f2210,plain,(
  ( ! [X0] : (~sP5('const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx','const.clos_known.Other_0')),'F_0',sK13(X0,X0))) )),
  inference(unit_resulting_resolution,[],[f408,f1373,f793])).
fof(f2214,plain,(
  ( ! [X0] : (~sP6(sK13(X0,X0),'F_0','const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx','const.clos_known.Other_0')))) )),
  inference(unit_resulting_resolution,[],[f408,f1373,f832])).
fof(f1773,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X0)))) )),
  inference(unit_resulting_resolution,[],[f245,f1372,f323])).
fof(f1774,plain,(
  ( ! [X0,X1] : (s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X0))) = s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X1)))) )),
  inference(unit_resulting_resolution,[],[f1372,f1372,f323])).
fof(f1775,plain,(
  ( ! [X0,X1] : (sP0(X0,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X1)))) )),
  inference(unit_resulting_resolution,[],[f1372,f331])).
fof(f1776,plain,(
  ( ! [X0,X1] : (sP0('const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X0)),X1)) )),
  inference(unit_resulting_resolution,[],[f1372,f332])).
fof(f1779,plain,(
  ( ! [X0] : (~sP4('T_0','const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X0)),'F_0')) )),
  inference(unit_resulting_resolution,[],[f245,f408,f1372,f359])).
fof(f1780,plain,(
  ( ! [X0,X1] : (~sP4('const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X0)),'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X1)),'F_0')) )),
  inference(unit_resulting_resolution,[],[f1372,f408,f1372,f359])).
fof(f1782,plain,(
  ( ! [X0] : (sP4('T_0','T_0','const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X0)))) )),
  inference(unit_resulting_resolution,[],[f423,f418,f413,f1372,f360])).
fof(f1784,plain,(
  ( ! [X0,X1] : (sP4(sK13(X0,X0),'T_0','const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X1)))) )),
  inference(unit_resulting_resolution,[],[f495,f494,f413,f1372,f360])).
fof(f1786,plain,(
  ( ! [X0,X1] : (sP4(sK14(X0,X0),'T_0','const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X1)))) )),
  inference(unit_resulting_resolution,[],[f1146,f1145,f413,f1372,f360])).
fof(f1788,plain,(
  ( ! [X0,X1] : (sP4('T_0',sK13(X0,X0),'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X1)))) )),
  inference(unit_resulting_resolution,[],[f423,f418,f493,f1372,f360])).
fof(f1790,plain,(
  ( ! [X2,X0,X1] : (sP4(sK13(X0,X0),sK13(X1,X1),'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X2)))) )),
  inference(unit_resulting_resolution,[],[f495,f494,f493,f1372,f360])).
fof(f1792,plain,(
  ( ! [X2,X0,X1] : (sP4(sK14(X0,X0),sK13(X1,X1),'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X2)))) )),
  inference(unit_resulting_resolution,[],[f1146,f1145,f493,f1372,f360])).
fof(f1794,plain,(
  ( ! [X0,X1] : (sP4('T_0',sK14(X0,X0),'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X1)))) )),
  inference(unit_resulting_resolution,[],[f423,f418,f1128,f1372,f360])).
fof(f1796,plain,(
  ( ! [X2,X0,X1] : (sP4(sK13(X0,X0),sK14(X1,X1),'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X2)))) )),
  inference(unit_resulting_resolution,[],[f495,f494,f1128,f1372,f360])).
fof(f1798,plain,(
  ( ! [X2,X0,X1] : (sP4(sK14(X0,X0),sK14(X1,X1),'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X2)))) )),
  inference(unit_resulting_resolution,[],[f1146,f1145,f1128,f1372,f360])).
fof(f1799,plain,(
  ( ! [X0] : (~sP3('const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X0)),'T_0','F_0')) )),
  inference(unit_resulting_resolution,[],[f245,f408,f1372,f363])).
fof(f1808,plain,(
  ( ! [X0] : (~sP3('T_0','const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X0)),'F_0')) )),
  inference(unit_resulting_resolution,[],[f245,f408,f1372,f363])).
fof(f1809,plain,(
  ( ! [X0,X1] : (~sP3('const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X0)),'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X1)),'F_0')) )),
  inference(unit_resulting_resolution,[],[f1372,f408,f1372,f363])).
fof(f1817,plain,(
  ( ! [X2,X0,X1] : (sP3(X0,X1,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X2)))) )),
  inference(unit_resulting_resolution,[],[f1372,f364])).
fof(f1818,plain,(
  ( ! [X0] : (~sP2('const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X0)),'T_0','F_0')) )),
  inference(unit_resulting_resolution,[],[f245,f408,f1372,f367])).
fof(f1827,plain,(
  ( ! [X0] : (~sP2('T_0','const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X0)),'F_0')) )),
  inference(unit_resulting_resolution,[],[f245,f408,f1372,f367])).
fof(f1828,plain,(
  ( ! [X0,X1] : (~sP2('const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X0)),'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X1)),'F_0')) )),
  inference(unit_resulting_resolution,[],[f1372,f408,f1372,f367])).
fof(f1836,plain,(
  ( ! [X2,X0,X1] : (sP2(X0,X1,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X2)))) )),
  inference(unit_resulting_resolution,[],[f1372,f368])).
fof(f1837,plain,(
  ( ! [X2,X0,X1] : (sP1(X0,X1,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X2)))) )),
  inference(unit_resulting_resolution,[],[f1372,f372])).
fof(f1838,plain,(
  ( ! [X2,X0,X1] : (sP1(X0,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X1)),X2)) )),
  inference(unit_resulting_resolution,[],[f1372,f373])).
fof(f1839,plain,(
  ( ! [X2,X0,X1] : (sP1('const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X0)),X1,X2)) )),
  inference(unit_resulting_resolution,[],[f1372,f374])).
fof(f1841,plain,(
  ( ! [X0,X1] : (sP4('const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X0)),sK13(X1,X1),'T_0')) )),
  inference(unit_resulting_resolution,[],[f489,f1372,f376])).
fof(f1843,plain,(
  ( ! [X0,X1] : (sP4('const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X0)),'T_0',sK13(X1,X1))) )),
  inference(unit_resulting_resolution,[],[f489,f1372,f376])).
fof(f1845,plain,(
  ( ! [X0] : (~sP4('const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X0)),'T_0','F_0')) )),
  inference(unit_resulting_resolution,[],[f431,f1372,f377])).
fof(f1847,plain,(
  ( ! [X0] : (~sP4('const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X0)),'F_0','T_0')) )),
  inference(unit_resulting_resolution,[],[f431,f1372,f377])).
fof(f1848,plain,(
  ( ! [X0,X1] : (~sP6('F_0','const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X0)),X1)) )),
  inference(unit_resulting_resolution,[],[f408,f1372,f380])).
fof(f1880,plain,(
  ( ! [X0] : (~sP5('const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X0)),'F_0','T_0')) )),
  inference(unit_resulting_resolution,[],[f408,f245,f1372,f386])).
fof(f1889,plain,(
  ( ! [X0] : (~sP5('T_0','F_0','const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X0)))) )),
  inference(unit_resulting_resolution,[],[f408,f245,f1372,f386])).
fof(f1890,plain,(
  ( ! [X0,X1] : (~sP5('const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X0)),'F_0','const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X1)))) )),
  inference(unit_resulting_resolution,[],[f408,f1372,f1372,f386])).
fof(f1898,plain,(
  ( ! [X2,X0,X1] : (sP5(X0,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X1)),X2)) )),
  inference(unit_resulting_resolution,[],[f1372,f388])).
fof(f1899,plain,(
  ( ! [X0] : (sP6('F_0','F_0','const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X0)))) )),
  inference(unit_resulting_resolution,[],[f408,f408,f1372,f390])).
fof(f1904,plain,(
  ( ! [X0,X1] : (sP6('T_0','const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X0)),X1)) )),
  inference(unit_resulting_resolution,[],[f245,f1372,f392])).
fof(f1908,plain,(
  ( ! [X2,X0,X1] : (sP6('const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X0)),'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X1)),X2)) )),
  inference(unit_resulting_resolution,[],[f1372,f1372,f392])).
fof(f1909,plain,(
  ( ! [X0] : (~sP6('T_0','F_0','const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X0)))) )),
  inference(unit_resulting_resolution,[],[f245,f408,f1372,f393])).
fof(f1914,plain,(
  ( ! [X0] : (~sP6('const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X0)),'F_0','T_0')) )),
  inference(unit_resulting_resolution,[],[f245,f408,f1372,f393])).
fof(f1915,plain,(
  ( ! [X0,X1] : (~sP6('const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X0)),'F_0','const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X1)))) )),
  inference(unit_resulting_resolution,[],[f1372,f408,f1372,f393])).
fof(f1916,plain,(
  ( ! [X0,X1] : (sP6('const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X0)),X1,'F_0')) )),
  inference(unit_resulting_resolution,[],[f426,f1372,f400])).
fof(f1918,plain,(
  ( ! [X0,X1] : (sP6('const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X0)),'T_0',X1)) )),
  inference(unit_resulting_resolution,[],[f428,f1372,f400])).
fof(f1919,plain,(
  ( ! [X2,X0,X1] : (sP6('const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X0)),sK13(X1,X1),X2)) )),
  inference(unit_resulting_resolution,[],[f501,f1372,f400])).
fof(f1920,plain,(
  ( ! [X2,X0,X1] : (sP6('const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X0)),sK14(X1,X1),X2)) )),
  inference(unit_resulting_resolution,[],[f1197,f1372,f400])).
fof(f1921,plain,(
  ( ! [X0,X1] : (~sP4('const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X0)),sK13(X1,X1),'F_0')) )),
  inference(unit_resulting_resolution,[],[f408,f1372,f749])).
fof(f1922,plain,(
  ( ! [X0,X1] : (~sP3('const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X0)),sK13(X1,X1),'F_0')) )),
  inference(unit_resulting_resolution,[],[f408,f1372,f750])).
fof(f1926,plain,(
  ( ! [X0,X1] : (~sP2('const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X0)),sK13(X1,X1),'F_0')) )),
  inference(unit_resulting_resolution,[],[f408,f1372,f751])).
fof(f1930,plain,(
  ( ! [X2,X0,X1] : (sP6(sK13(X0,X0),'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X1)),X2)) )),
  inference(unit_resulting_resolution,[],[f1372,f753])).
fof(f1931,plain,(
  ( ! [X0,X1] : (~sP5('const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X0)),'F_0',sK13(X1,X1))) )),
  inference(unit_resulting_resolution,[],[f408,f1372,f793])).
fof(f1935,plain,(
  ( ! [X0,X1] : (~sP6(sK13(X0,X0),'F_0','const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X1)))) )),
  inference(unit_resulting_resolution,[],[f408,f1372,f832])).
fof(f1751,plain,(
  ( ! [X10,X9] : (s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X10))),s('type.clos_known.val_approx',X9))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X9) | s('type.clos_known.val_approx',X9) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(X9)))) | s('type.clos_known.val_approx',X9) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(X9)))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X9)) )),
  inference(superposition,[],[f355,f262])).
fof(f1750,plain,(
  ( ! [X8,X7] : (s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X7),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X8))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X7) | s('type.clos_known.val_approx',X7) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(X7)))) | s('type.clos_known.val_approx',X7) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(X7)))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X7)) )),
  inference(superposition,[],[f354,f262])).
fof(f1749,plain,(
  ( ! [X6,X5] : (s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X6))),s('type.clos_known.val_approx',X5))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X5) | s('type.clos_known.val_approx',X5) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(X5)))) | s('type.clos_known.val_approx',X5) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(X5)))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X5)) )),
  inference(superposition,[],[f353,f262])).
fof(f1748,plain,(
  ( ! [X4,X3] : (s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X3),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X4))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X3) | s('type.clos_known.val_approx',X3) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(X3)))) | s('type.clos_known.val_approx',X3) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(X3)))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X3)) )),
  inference(superposition,[],[f352,f262])).
fof(f1747,plain,(
  ( ! [X2] : (s('type.clos_known.val_approx',X2) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X2),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X2) | s('type.clos_known.val_approx',X2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(X2)))) | s('type.clos_known.val_approx',X2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(X2)))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X2)) )),
  inference(superposition,[],[f318,f262])).
fof(f1746,plain,(
  ( ! [X1] : (s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx',X1))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X1) | s('type.clos_known.val_approx',X1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(X1)))) | s('type.clos_known.val_approx',X1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(X1)))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X1)) )),
  inference(superposition,[],[f315,f262])).
fof(f1745,plain,(
  ( ! [X0] : (s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X0),s('type.clos_known.val_approx','const.clos_known.Other_0'))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X0) | s('type.clos_known.val_approx',X0) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(X0)))) | s('type.clos_known.val_approx',X0) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(X0)))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X0)) )),
  inference(superposition,[],[f314,f262])).
fof(f1671,plain,(
  ( ! [X0] : (s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,'T_0'),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X0))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X0))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X0)))))) )),
  inference(superposition,[],[f348,f489])).
fof(f1629,plain,(
  ( ! [X0] : (sP4('F_0','F_0',sK14(X0,X0))) )),
  inference(unit_resulting_resolution,[],[f416,f421,f408,f1148,f361])).
fof(f1608,plain,(
  ( ! [X0] : (sP4('F_0',sK14(X0,X0),'F_0')) )),
  inference(unit_resulting_resolution,[],[f1128,f419,f408,f1147,f362])).
fof(f1540,plain,(
  ( ! [X0] : (sP4(sK14(X0,X0),'F_0','F_0')) )),
  inference(unit_resulting_resolution,[],[f414,f419,f408,f1146,f361])).
fof(f1515,plain,(
  ( ! [X0] : (sP4(sK14(X0,X0),'T_0','T_0')) )),
  inference(unit_resulting_resolution,[],[f245,f425,f413,f1145,f360])).
fof(f1518,plain,(
  ( ! [X0,X1] : (sP4(sK14(X0,X0),sK14(X1,X1),'T_0')) )),
  inference(unit_resulting_resolution,[],[f245,f425,f1128,f1145,f360])).
fof(f1499,plain,(
  ( ! [X0] : (~sP4('F_0','T_0',sK14(X0,X0))) )),
  inference(unit_resulting_resolution,[],[f1139,f357])).
fof(f1494,plain,(
  ( ! [X0] : (~sP4('F_0',sK14(X0,X0),'T_0')) )),
  inference(unit_resulting_resolution,[],[f1131,f357])).
fof(f1471,plain,(
  ( ! [X0] : (sP4('T_0',sK14(X0,X0),'T_0')) )),
  inference(unit_resulting_resolution,[],[f423,f418,f245,f1128,f360])).
fof(f1473,plain,(
  ( ! [X0,X1] : (sP4(sK13(X0,X0),sK14(X1,X1),'T_0')) )),
  inference(unit_resulting_resolution,[],[f495,f494,f245,f1128,f360])).
fof(f1464,plain,(
  ( ! [X0] : (~sP4('T_0','F_0',sK14(X0,X0))) )),
  inference(unit_resulting_resolution,[],[f1122,f358])).
fof(f1374,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.clos_known.val_approx','const.clos_known.Other_0'))))) )),
  inference(unit_resulting_resolution,[],[f314,f329])).
fof(f1375,plain,(
  ( ! [X0] : (p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X0))),s('type.clos_known.val_approx','const.clos_known.Other_0'))))) )),
  inference(unit_resulting_resolution,[],[f258,f329])).
fof(f1376,plain,(
  ( ! [X0] : (p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X0))),s('type.clos_known.val_approx','const.clos_known.Other_0'))))) )),
  inference(unit_resulting_resolution,[],[f256,f329])).
fof(f1096,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,sK14(X0,X0))) )),
  inference(unit_resulting_resolution,[],[f245,f1090,f323])).
fof(f1097,plain,(
  ( ! [X0,X1] : (s(bool,sK14(X0,X0)) = s(bool,sK14(X1,X1))) )),
  inference(unit_resulting_resolution,[],[f1090,f1090,f323])).
fof(f1098,plain,(
  ( ! [X0,X1] : (sP0(X0,sK14(X1,X1))) )),
  inference(unit_resulting_resolution,[],[f1090,f331])).
fof(f1099,plain,(
  ( ! [X0,X1] : (sP0(sK14(X0,X0),X1)) )),
  inference(unit_resulting_resolution,[],[f1090,f332])).
fof(f1102,plain,(
  ( ! [X0] : (~sP4('T_0',sK14(X0,X0),'F_0')) )),
  inference(unit_resulting_resolution,[],[f408,f245,f1090,f359])).
fof(f1103,plain,(
  ( ! [X0,X1] : (~sP4(sK14(X0,X0),sK14(X1,X1),'F_0')) )),
  inference(unit_resulting_resolution,[],[f408,f1090,f1090,f359])).
fof(f1105,plain,(
  ( ! [X0] : (sP4('T_0','T_0',sK14(X0,X0))) )),
  inference(unit_resulting_resolution,[],[f423,f418,f413,f1090,f360])).
fof(f1107,plain,(
  ( ! [X0,X1] : (sP4(sK13(X0,X0),'T_0',sK14(X1,X1))) )),
  inference(unit_resulting_resolution,[],[f495,f494,f413,f1090,f360])).
fof(f1109,plain,(
  ( ! [X0,X1] : (sP4('T_0',sK13(X0,X0),sK14(X1,X1))) )),
  inference(unit_resulting_resolution,[],[f423,f418,f493,f1090,f360])).
fof(f1111,plain,(
  ( ! [X2,X0,X1] : (sP4(sK13(X0,X0),sK13(X1,X1),sK14(X2,X2))) )),
  inference(unit_resulting_resolution,[],[f495,f494,f493,f1090,f360])).
fof(f1114,plain,(
  ( ! [X0] : (~sP3(sK14(X0,X0),'T_0','F_0')) )),
  inference(unit_resulting_resolution,[],[f408,f245,f1090,f363])).
fof(f1122,plain,(
  ( ! [X0] : (~sP3('T_0',sK14(X0,X0),'F_0')) )),
  inference(unit_resulting_resolution,[],[f408,f245,f1090,f363])).
fof(f1125,plain,(
  ( ! [X0,X1] : (~sP3(sK14(X0,X0),sK14(X1,X1),'F_0')) )),
  inference(unit_resulting_resolution,[],[f408,f1090,f1090,f363])).
fof(f1128,plain,(
  ( ! [X2,X0,X1] : (sP3(X0,X1,sK14(X2,X2))) )),
  inference(unit_resulting_resolution,[],[f1090,f364])).
fof(f1131,plain,(
  ( ! [X0] : (~sP2(sK14(X0,X0),'T_0','F_0')) )),
  inference(unit_resulting_resolution,[],[f408,f245,f1090,f367])).
fof(f1139,plain,(
  ( ! [X0] : (~sP2('T_0',sK14(X0,X0),'F_0')) )),
  inference(unit_resulting_resolution,[],[f408,f245,f1090,f367])).
fof(f1142,plain,(
  ( ! [X0,X1] : (~sP2(sK14(X0,X0),sK14(X1,X1),'F_0')) )),
  inference(unit_resulting_resolution,[],[f408,f1090,f1090,f367])).
fof(f1147,plain,(
  ( ! [X2,X0,X1] : (sP1(X0,sK14(X1,X1),X2)) )),
  inference(unit_resulting_resolution,[],[f1090,f373])).
fof(f1148,plain,(
  ( ! [X2,X0,X1] : (sP1(sK14(X0,X0),X1,X2)) )),
  inference(unit_resulting_resolution,[],[f1090,f374])).
fof(f1150,plain,(
  ( ! [X0,X1] : (sP4(sK14(X0,X0),sK13(X1,X1),'T_0')) )),
  inference(unit_resulting_resolution,[],[f489,f1090,f376])).
fof(f1152,plain,(
  ( ! [X0,X1] : (sP4(sK14(X0,X0),'T_0',sK13(X1,X1))) )),
  inference(unit_resulting_resolution,[],[f489,f1090,f376])).
fof(f1154,plain,(
  ( ! [X0] : (~sP4(sK14(X0,X0),'T_0','F_0')) )),
  inference(unit_resulting_resolution,[],[f431,f1090,f377])).
fof(f1156,plain,(
  ( ! [X0] : (~sP4(sK14(X0,X0),'F_0','T_0')) )),
  inference(unit_resulting_resolution,[],[f431,f1090,f377])).
fof(f1161,plain,(
  ( ! [X0,X1] : (~sP6('F_0',sK14(X0,X0),X1)) )),
  inference(unit_resulting_resolution,[],[f408,f1090,f380])).
fof(f1185,plain,(
  ( ! [X0] : (~sP5(sK14(X0,X0),'F_0','T_0')) )),
  inference(unit_resulting_resolution,[],[f245,f408,f1090,f386])).
fof(f1193,plain,(
  ( ! [X0] : (~sP5('T_0','F_0',sK14(X0,X0))) )),
  inference(unit_resulting_resolution,[],[f245,f408,f1090,f386])).
fof(f1194,plain,(
  ( ! [X0,X1] : (~sP5(sK14(X0,X0),'F_0',sK14(X1,X1))) )),
  inference(unit_resulting_resolution,[],[f1090,f408,f1090,f386])).
fof(f1197,plain,(
  ( ! [X2,X0,X1] : (sP5(X0,sK14(X1,X1),X2)) )),
  inference(unit_resulting_resolution,[],[f1090,f388])).
fof(f1200,plain,(
  ( ! [X0] : (sP6('F_0','F_0',sK14(X0,X0))) )),
  inference(unit_resulting_resolution,[],[f408,f408,f1090,f390])).
fof(f1203,plain,(
  ( ! [X0,X1] : (sP6('T_0',sK14(X0,X0),X1)) )),
  inference(unit_resulting_resolution,[],[f245,f1090,f392])).
fof(f1206,plain,(
  ( ! [X2,X0,X1] : (sP6(sK14(X0,X0),sK14(X1,X1),X2)) )),
  inference(unit_resulting_resolution,[],[f1090,f1090,f392])).
fof(f1207,plain,(
  ( ! [X0] : (~sP6('T_0','F_0',sK14(X0,X0))) )),
  inference(unit_resulting_resolution,[],[f408,f245,f1090,f393])).
fof(f1211,plain,(
  ( ! [X0] : (~sP6(sK14(X0,X0),'F_0','T_0')) )),
  inference(unit_resulting_resolution,[],[f408,f245,f1090,f393])).
fof(f1212,plain,(
  ( ! [X0,X1] : (~sP6(sK14(X0,X0),'F_0',sK14(X1,X1))) )),
  inference(unit_resulting_resolution,[],[f408,f1090,f1090,f393])).
fof(f1213,plain,(
  ( ! [X0,X1] : (sP6(sK14(X0,X0),X1,'F_0')) )),
  inference(unit_resulting_resolution,[],[f426,f1090,f400])).
fof(f1215,plain,(
  ( ! [X0,X1] : (sP6(sK14(X0,X0),'T_0',X1)) )),
  inference(unit_resulting_resolution,[],[f428,f1090,f400])).
fof(f1216,plain,(
  ( ! [X2,X0,X1] : (sP6(sK14(X0,X0),sK13(X1,X1),X2)) )),
  inference(unit_resulting_resolution,[],[f501,f1090,f400])).
fof(f1217,plain,(
  ( ! [X0,X1] : (~sP4(sK14(X0,X0),sK13(X1,X1),'F_0')) )),
  inference(unit_resulting_resolution,[],[f408,f1090,f749])).
fof(f1218,plain,(
  ( ! [X0,X1] : (~sP3(sK14(X0,X0),sK13(X1,X1),'F_0')) )),
  inference(unit_resulting_resolution,[],[f408,f1090,f750])).
fof(f1221,plain,(
  ( ! [X0,X1] : (~sP2(sK14(X0,X0),sK13(X1,X1),'F_0')) )),
  inference(unit_resulting_resolution,[],[f408,f1090,f751])).
fof(f1224,plain,(
  ( ! [X2,X0,X1] : (sP6(sK13(X0,X0),sK14(X1,X1),X2)) )),
  inference(unit_resulting_resolution,[],[f1090,f753])).
fof(f1225,plain,(
  ( ! [X0,X1] : (~sP5(sK14(X0,X0),'F_0',sK13(X1,X1))) )),
  inference(unit_resulting_resolution,[],[f408,f1090,f793])).
fof(f1228,plain,(
  ( ! [X0,X1] : (~sP6(sK13(X0,X0),'F_0',sK14(X1,X1))) )),
  inference(unit_resulting_resolution,[],[f408,f1090,f832])).
fof(f1052,plain,(
  ( ! [X0] : (sP4('F_0',sK13(X0,X0),'F_0')) )),
  inference(unit_resulting_resolution,[],[f496,f419,f414,f408,f362])).
fof(f984,plain,(
  sP4('T_0','F_0','F_0')),
  inference(unit_resulting_resolution,[],[f423,f418,f414,f408,f361])).
fof(f985,plain,(
  ( ! [X0] : (sP4(sK13(X0,X0),'F_0','F_0')) )),
  inference(unit_resulting_resolution,[],[f495,f494,f414,f408,f361])).
fof(f995,plain,(
  ( ! [X0] : (sP4('F_0','F_0',sK13(X0,X0))) )),
  inference(unit_resulting_resolution,[],[f497,f421,f416,f408,f361])).
fof(f952,plain,(
  ( ! [X10,X8,X9] : (sP4(X9,X10,sK13(X8,X8)) | ~sP3(X9,sK13(X8,X8),X10) | ~sP2(X10,sK13(X8,X8),X9)) )),
  inference(subsumption_resolution,[],[f951,f497])).
fof(f951,plain,(
  ( ! [X10,X8,X9] : (sP4(X9,X10,sK13(X8,X8)) | ~sP3(X9,sK13(X8,X8),X10) | ~sP2(X10,sK13(X8,X8),X9) | ~sP1(sK13(X8,X8),X10,X9)) )),
  inference(subsumption_resolution,[],[f949,f245])).
fof(f949,plain,(
  ( ! [X10,X8,X9] : (~p(s(bool,'T_0')) | sP4(X9,X10,sK13(X8,X8)) | ~sP3(X9,sK13(X8,X8),X10) | ~sP2(X10,sK13(X8,X8),X9) | ~sP1(sK13(X8,X8),X10,X9)) )),
  inference(superposition,[],[f360,f489])).
fof(f925,plain,(
  sP4('T_0','T_0','T_0')),
  inference(unit_resulting_resolution,[],[f425,f418,f413,f245,f360])).
fof(f928,plain,(
  ( ! [X0] : (sP4(sK13(X0,X0),'T_0','T_0')) )),
  inference(unit_resulting_resolution,[],[f495,f494,f413,f245,f360])).
fof(f934,plain,(
  ( ! [X0,X1] : (sP4(sK13(X0,X0),sK13(X1,X1),'T_0')) )),
  inference(unit_resulting_resolution,[],[f495,f494,f493,f245,f360])).
fof(f945,plain,(
  ( ! [X0] : (~sP2(sK13(X0,X0),'T_0','F_0')) )),
  inference(unit_resulting_resolution,[],[f496,f493,f720,f245,f360])).
fof(f915,plain,(
  ( ! [X0,X1] : (~sP6(sK13(X0,X0),'F_0',sK13(X1,X1))) )),
  inference(unit_resulting_resolution,[],[f408,f902])).
fof(f906,plain,(
  ( ! [X0] : (~sP5(sK13(X0,X0),'F_0','T_0')) )),
  inference(unit_resulting_resolution,[],[f245,f408,f893,f385])).
fof(f902,plain,(
  ( ! [X10,X8,X9] : (~sP6(sK13(X10,X10),X9,sK13(X8,X8)) | p(s(bool,X9))) )),
  inference(subsumption_resolution,[],[f899,f245])).
fof(f899,plain,(
  ( ! [X10,X8,X9] : (~p(s(bool,'T_0')) | p(s(bool,X9)) | ~sP6(sK13(X10,X10),X9,sK13(X8,X8))) )),
  inference(superposition,[],[f832,f489])).
fof(f893,plain,(
  ( ! [X0] : (~sP6(sK13(X0,X0),'F_0','T_0')) )),
  inference(unit_resulting_resolution,[],[f408,f245,f832])).
fof(f883,plain,(
  ( ! [X0] : (~sP6('T_0','F_0',sK13(X0,X0))) )),
  inference(unit_resulting_resolution,[],[f872,f381])).
fof(f872,plain,(
  ( ! [X0] : (~sP5('T_0','F_0',sK13(X0,X0))) )),
  inference(unit_resulting_resolution,[],[f408,f245,f793])).
fof(f859,plain,(
  ( ! [X0] : (~sP2('T_0',sK13(X0,X0),'F_0')) )),
  inference(unit_resulting_resolution,[],[f245,f408,f751])).
fof(f854,plain,(
  ( ! [X0] : (~sP4('T_0','F_0',sK13(X0,X0))) )),
  inference(unit_resulting_resolution,[],[f844,f358])).
fof(f844,plain,(
  ( ! [X0] : (~sP3('T_0',sK13(X0,X0),'F_0')) )),
  inference(unit_resulting_resolution,[],[f245,f408,f750])).
fof(f839,plain,(
  ( ! [X0] : (~sP4('T_0',sK13(X0,X0),'F_0')) )),
  inference(unit_resulting_resolution,[],[f245,f408,f749])).
fof(f832,plain,(
  ( ! [X10,X8,X9] : (~p(s(bool,X9)) | p(s(bool,X10)) | ~sP6(sK13(X8,X8),X10,X9)) )),
  inference(subsumption_resolution,[],[f828,f245])).
fof(f828,plain,(
  ( ! [X10,X8,X9] : (~p(s(bool,'T_0')) | ~p(s(bool,X9)) | p(s(bool,X10)) | ~sP6(sK13(X8,X8),X10,X9)) )),
  inference(superposition,[],[f393,f489])).
fof(f797,plain,(
  ~sP6('T_0','F_0','T_0')),
  inference(unit_resulting_resolution,[],[f785,f381])).
fof(f793,plain,(
  ( ! [X10,X8,X9] : (~sP5(X10,X9,sK13(X8,X8)) | ~p(s(bool,X10)) | p(s(bool,X9))) )),
  inference(subsumption_resolution,[],[f789,f245])).
fof(f789,plain,(
  ( ! [X10,X8,X9] : (~p(s(bool,'T_0')) | p(s(bool,X9)) | ~p(s(bool,X10)) | ~sP5(X10,X9,sK13(X8,X8))) )),
  inference(superposition,[],[f386,f489])).
fof(f785,plain,(
  ~sP5('T_0','F_0','T_0')),
  inference(unit_resulting_resolution,[],[f245,f408,f245,f386])).
fof(f771,plain,(
  sP6('F_0','F_0','T_0')),
  inference(unit_resulting_resolution,[],[f429,f245,f408,f385])).
fof(f754,plain,(
  ( ! [X33,X31,X32] : (sP6(sK13(X31,X31),X32,X33) | ~sP5(sK13(X31,X31),X32,X33)) )),
  inference(subsumption_resolution,[],[f741,f245])).
fof(f741,plain,(
  ( ! [X33,X31,X32] : (~p(s(bool,'T_0')) | ~sP5(sK13(X31,X31),X32,X33) | sP6(sK13(X31,X31),X32,X33)) )),
  inference(superposition,[],[f400,f489])).
fof(f753,plain,(
  ( ! [X30,X28,X29] : (sP6(sK13(X28,X28),X29,X30) | ~p(s(bool,X29))) )),
  inference(subsumption_resolution,[],[f740,f245])).
fof(f740,plain,(
  ( ! [X30,X28,X29] : (~p(s(bool,'T_0')) | ~p(s(bool,X29)) | sP6(sK13(X28,X28),X29,X30)) )),
  inference(superposition,[],[f392,f489])).
fof(f752,plain,(
  ( ! [X26,X27,X25] : (sP6(sK13(X25,X25),X27,X26) | p(s(bool,X26))) )),
  inference(subsumption_resolution,[],[f739,f245])).
fof(f739,plain,(
  ( ! [X26,X27,X25] : (~p(s(bool,'T_0')) | p(s(bool,X26)) | sP6(sK13(X25,X25),X27,X26)) )),
  inference(superposition,[],[f391,f489])).
fof(f751,plain,(
  ( ! [X24,X23,X22] : (~sP2(X23,sK13(X22,X22),X24) | p(s(bool,X24)) | ~p(s(bool,X23))) )),
  inference(subsumption_resolution,[],[f738,f245])).
fof(f738,plain,(
  ( ! [X24,X23,X22] : (~p(s(bool,'T_0')) | ~p(s(bool,X23)) | p(s(bool,X24)) | ~sP2(X23,sK13(X22,X22),X24)) )),
  inference(superposition,[],[f367,f489])).
fof(f750,plain,(
  ( ! [X21,X19,X20] : (~sP3(X20,sK13(X19,X19),X21) | p(s(bool,X21)) | ~p(s(bool,X20))) )),
  inference(subsumption_resolution,[],[f737,f245])).
fof(f737,plain,(
  ( ! [X21,X19,X20] : (~p(s(bool,'T_0')) | ~p(s(bool,X20)) | p(s(bool,X21)) | ~sP3(X20,sK13(X19,X19),X21)) )),
  inference(superposition,[],[f363,f489])).
fof(f749,plain,(
  ( ! [X17,X18,X16] : (~sP4(X17,sK13(X16,X16),X18) | p(s(bool,X18)) | ~p(s(bool,X17))) )),
  inference(subsumption_resolution,[],[f736,f245])).
fof(f736,plain,(
  ( ! [X17,X18,X16] : (~p(s(bool,'T_0')) | ~p(s(bool,X17)) | p(s(bool,X18)) | ~sP4(X17,sK13(X16,X16),X18)) )),
  inference(superposition,[],[f359,f489])).
fof(f720,plain,(
  ( ! [X0] : (~sP4('F_0',sK13(X0,X0),'T_0')) )),
  inference(unit_resulting_resolution,[],[f408,f489,f378])).
fof(f721,plain,(
  ( ! [X0] : (sP4('T_0',sK13(X0,X0),'T_0')) )),
  inference(unit_resulting_resolution,[],[f245,f489,f376])).
fof(f722,plain,(
  ( ! [X0] : (~sP4('F_0','T_0',sK13(X0,X0))) )),
  inference(unit_resulting_resolution,[],[f408,f489,f378])).
fof(f723,plain,(
  ( ! [X0] : (sP4('T_0','T_0',sK13(X0,X0))) )),
  inference(unit_resulting_resolution,[],[f245,f489,f376])).
fof(f713,plain,(
  ~sP4('F_0','F_0','F_0')),
  inference(unit_resulting_resolution,[],[f704,f356])).
fof(f704,plain,(
  ~sP1('F_0','F_0','F_0')),
  inference(unit_resulting_resolution,[],[f408,f408,f408,f371])).
fof(f698,plain,(
  ~sP4('F_0','T_0','T_0')),
  inference(unit_resulting_resolution,[],[f688,f357])).
fof(f688,plain,(
  ~sP2('T_0','T_0','F_0')),
  inference(unit_resulting_resolution,[],[f408,f245,f245,f367])).
fof(f668,plain,(
  ~sP3('T_0','T_0','F_0')),
  inference(unit_resulting_resolution,[],[f408,f245,f245,f363])).
fof(f601,plain,(
  ~sP4('T_0','F_0','T_0')),
  inference(unit_resulting_resolution,[],[f245,f431,f377])).
fof(f605,plain,(
  ~sP4('T_0','T_0','F_0')),
  inference(unit_resulting_resolution,[],[f245,f431,f377])).
fof(f581,plain,(
  sP4('F_0','F_0','T_0')),
  inference(unit_resulting_resolution,[],[f408,f431,f375])).
fof(f583,plain,(
  sP4('F_0','T_0','F_0')),
  inference(unit_resulting_resolution,[],[f408,f431,f375])).
fof(f565,plain,(
  ( ! [X4,X3] : (p(s(bool,X4)) | s(bool,X3) = s(bool,X4) | s(bool,'T_0') = s(bool,X3)) )),
  inference(subsumption_resolution,[],[f559,f408])).
fof(f559,plain,(
  ( ! [X4,X3] : (p(s(bool,'F_0')) | p(s(bool,X4)) | s(bool,X3) = s(bool,X4) | s(bool,'T_0') = s(bool,X3)) )),
  inference(superposition,[],[f320,f261])).
fof(f518,plain,(
  ( ! [X0,X1] : (s(bool,X0) = s(bool,X1) | s(bool,'T_0') = s(bool,X1) | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f261,f261])).
fof(f489,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,sK13(X0,X0))) )),
  inference(unit_resulting_resolution,[],[f487,f270])).
fof(f490,plain,(
  ( ! [X0] : (s(bool,'F_0') != s(bool,sK13(X0,X0))) )),
  inference(unit_resulting_resolution,[],[f487,f273])).
fof(f491,plain,(
  ( ! [X0,X1] : (sP0(X0,sK13(X1,X1))) )),
  inference(unit_resulting_resolution,[],[f487,f331])).
fof(f492,plain,(
  ( ! [X0,X1] : (sP0(sK13(X0,X0),X1)) )),
  inference(unit_resulting_resolution,[],[f487,f332])).
fof(f493,plain,(
  ( ! [X2,X0,X1] : (sP3(X0,X1,sK13(X2,X2))) )),
  inference(unit_resulting_resolution,[],[f487,f364])).
fof(f494,plain,(
  ( ! [X2,X0,X1] : (sP2(X0,X1,sK13(X2,X2))) )),
  inference(unit_resulting_resolution,[],[f487,f368])).
fof(f495,plain,(
  ( ! [X2,X0,X1] : (sP1(X0,X1,sK13(X2,X2))) )),
  inference(unit_resulting_resolution,[],[f487,f372])).
fof(f496,plain,(
  ( ! [X2,X0,X1] : (sP1(X0,sK13(X1,X1),X2)) )),
  inference(unit_resulting_resolution,[],[f487,f373])).
fof(f497,plain,(
  ( ! [X2,X0,X1] : (sP1(sK13(X0,X0),X1,X2)) )),
  inference(unit_resulting_resolution,[],[f487,f374])).
fof(f500,plain,(
  ( ! [X0,X1] : (~sP6('F_0',sK13(X0,X0),X1)) )),
  inference(unit_resulting_resolution,[],[f408,f487,f380])).
fof(f501,plain,(
  ( ! [X2,X0,X1] : (sP5(X0,sK13(X1,X1),X2)) )),
  inference(unit_resulting_resolution,[],[f487,f388])).
fof(f504,plain,(
  ( ! [X0,X1] : (sP6('T_0',sK13(X0,X0),X1)) )),
  inference(unit_resulting_resolution,[],[f245,f487,f392])).
fof(f507,plain,(
  ( ! [X2,X0,X1] : (sP6(sK13(X0,X0),sK13(X1,X1),X2)) )),
  inference(unit_resulting_resolution,[],[f487,f487,f392])).
fof(f508,plain,(
  ( ! [X0,X1] : (sP6(sK13(X0,X0),X1,'F_0')) )),
  inference(unit_resulting_resolution,[],[f426,f487,f400])).
fof(f510,plain,(
  ( ! [X0,X1] : (sP6(sK13(X0,X0),'T_0',X1)) )),
  inference(unit_resulting_resolution,[],[f428,f487,f400])).
fof(f487,plain,(
  ( ! [X0] : (p(s(bool,sK13(X0,X0)))) )),
  inference(equality_resolution,[],[f347])).
fof(f464,plain,(
  ( ! [X0] : (sP6('T_0','T_0',X0)) )),
  inference(unit_resulting_resolution,[],[f245,f245,f392])).
fof(f460,plain,(
  ( ! [X0] : (sP6('T_0',X0,'F_0')) )),
  inference(unit_resulting_resolution,[],[f408,f245,f391])).
fof(f457,plain,(
  ( ! [X0] : (~sP6('F_0','T_0',X0)) )),
  inference(unit_resulting_resolution,[],[f245,f408,f380])).
fof(f454,plain,(
  ( ! [X0] : (~sP6('F_0',X0,'F_0')) )),
  inference(unit_resulting_resolution,[],[f408,f408,f379])).
fof(f453,plain,(
  ~sP0('F_0','F_0')),
  inference(unit_resulting_resolution,[],[f408,f408,f409])).
fof(f429,plain,(
  ( ! [X0,X1] : (sP5('F_0',X0,X1)) )),
  inference(unit_resulting_resolution,[],[f408,f389])).
fof(f428,plain,(
  ( ! [X0,X1] : (sP5(X0,'T_0',X1)) )),
  inference(unit_resulting_resolution,[],[f245,f388])).
fof(f426,plain,(
  ( ! [X0,X1] : (sP5(X0,X1,'F_0')) )),
  inference(unit_resulting_resolution,[],[f408,f387])).
fof(f423,plain,(
  ( ! [X0,X1] : (sP1(X0,X1,'T_0')) )),
  inference(unit_resulting_resolution,[],[f245,f372])).
fof(f419,plain,(
  ( ! [X0,X1] : (sP2(X0,'F_0',X1)) )),
  inference(unit_resulting_resolution,[],[f408,f369])).
fof(f412,plain,(
  ( ! [X0] : (sP0('T_0',X0)) )),
  inference(unit_resulting_resolution,[],[f245,f332])).
fof(f411,plain,(
  ( ! [X0] : (sP0(X0,'T_0')) )),
  inference(unit_resulting_resolution,[],[f245,f331])).
fof(f390,plain,(
  ( ! [X2,X0,X1] : (sP6(X2,X0,X1) | p(s(bool,X0)) | ~p(s(bool,X1)) | p(s(bool,X2))) )),
  inference(cnf_transformation,[],[f240])).
fof(f391,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,X2)) | p(s(bool,X1)) | sP6(X2,X0,X1)) )),
  inference(cnf_transformation,[],[f240])).
fof(f392,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,X2)) | ~p(s(bool,X0)) | sP6(X2,X0,X1)) )),
  inference(cnf_transformation,[],[f240])).
fof(f386,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,X2)) | p(s(bool,X1)) | ~p(s(bool,X0)) | ~sP5(X0,X1,X2)) )),
  inference(cnf_transformation,[],[f238])).
fof(f387,plain,(
  ( ! [X2,X0,X1] : (sP5(X0,X1,X2) | p(s(bool,X2))) )),
  inference(cnf_transformation,[],[f238])).
fof(f388,plain,(
  ( ! [X2,X0,X1] : (sP5(X0,X1,X2) | ~p(s(bool,X1))) )),
  inference(cnf_transformation,[],[f238])).
fof(f379,plain,(
  ( ! [X2,X0,X1] : (~sP6(X0,X1,X2) | p(s(bool,X0)) | p(s(bool,X2))) )),
  inference(cnf_transformation,[],[f235])).
fof(f380,plain,(
  ( ! [X2,X0,X1] : (~sP6(X0,X1,X2) | p(s(bool,X0)) | ~p(s(bool,X1))) )),
  inference(cnf_transformation,[],[f235])).
fof(f381,plain,(
  ( ! [X2,X0,X1] : (~sP6(X0,X1,X2) | sP5(X0,X1,X2)) )),
  inference(cnf_transformation,[],[f235])).
fof(f400,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,X0)) | ~sP5(X0,X1,X2) | sP6(X0,X1,X2)) )),
  inference(duplicate_literal_removal,[],[f382])).
fof(f382,plain,(
  ( ! [X2,X0,X1] : (sP6(X0,X1,X2) | ~sP5(X0,X1,X2) | ~p(s(bool,X0)) | ~p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f235])).
fof(f383,plain,(
  ( ! [X2,X0,X1] : (sP6(X0,X1,X2) | ~sP5(X0,X1,X2) | ~p(s(bool,X0)) | ~p(s(bool,X2))) )),
  inference(cnf_transformation,[],[f235])).
fof(f384,plain,(
  ( ! [X2,X0,X1] : (sP6(X0,X1,X2) | ~sP5(X0,X1,X2) | p(s(bool,X1)) | ~p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f235])).
fof(f375,plain,(
  ( ! [X2,X0,X1] : (sP4(X2,X1,X0) | s(bool,X0) = s(bool,X1) | p(s(bool,X2))) )),
  inference(cnf_transformation,[],[f232])).
fof(f371,plain,(
  ( ! [X2,X0,X1] : (~sP1(X0,X1,X2) | p(s(bool,X1)) | p(s(bool,X2)) | p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f231])).
fof(f367,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,X1)) | ~p(s(bool,X0)) | p(s(bool,X2)) | ~sP2(X0,X1,X2)) )),
  inference(cnf_transformation,[],[f229])).
fof(f369,plain,(
  ( ! [X2,X0,X1] : (sP2(X0,X1,X2) | p(s(bool,X1))) )),
  inference(cnf_transformation,[],[f229])).
fof(f363,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,X1)) | ~p(s(bool,X0)) | p(s(bool,X2)) | ~sP3(X0,X1,X2)) )),
  inference(cnf_transformation,[],[f226])).
fof(f356,plain,(
  ( ! [X2,X0,X1] : (~sP4(X0,X1,X2) | sP1(X2,X1,X0)) )),
  inference(cnf_transformation,[],[f223])).
fof(f357,plain,(
  ( ! [X2,X0,X1] : (~sP4(X0,X1,X2) | sP2(X1,X2,X0)) )),
  inference(cnf_transformation,[],[f223])).
fof(f358,plain,(
  ( ! [X2,X0,X1] : (~sP4(X0,X1,X2) | sP3(X0,X2,X1)) )),
  inference(cnf_transformation,[],[f223])).
fof(f355,plain,(
  ( ! [X2,X0,X1] : (s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X0))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X2),s('type.num.num',X1)))))) )),
  inference(cnf_transformation,[],[f133])).
fof(f133,plain,(
  ! [X0,X1,X2] : s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X0))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X2),s('type.num.num',X1)))))),
  inference(rectify,[],[f40])).
fof(f40,axiom,(
  ! [X34,X35,X36] : s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X34))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X36),s('type.num.num',X35)))))),
  file('thm.clos_knownProof.subapprox_Other|split|1','thm.clos_known.merge_def|split|11')).
fof(f354,plain,(
  ( ! [X2,X0,X1] : (s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X1),s('type.num.num',X0))),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X2)))))) )),
  inference(cnf_transformation,[],[f132])).
fof(f132,plain,(
  ! [X0,X1,X2] : s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X1),s('type.num.num',X0))),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X2)))))),
  inference(rectify,[],[f37])).
fof(f37,axiom,(
  ! [X30,X31,X32] : s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X31),s('type.num.num',X30))),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X32)))))),
  file('thm.clos_knownProof.subapprox_Other|split|1','thm.clos_known.merge_def|split|8')).
fof(f353,plain,(
  ( ! [X2,X0,X1] : (s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X2))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X1),s('type.num.num',X0)))))) )),
  inference(cnf_transformation,[],[f131])).
fof(f131,plain,(
  ! [X0,X1,X2] : s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X2))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X1),s('type.num.num',X0)))))),
  inference(rectify,[],[f43])).
fof(f43,axiom,(
  ! [X38,X39,X40] : s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X40))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X39),s('type.num.num',X38)))))),
  file('thm.clos_knownProof.subapprox_Other|split|1','thm.clos_known.merge_def|split|14')).
fof(f345,plain,(
  ( ! [X2,X0,X3,X1] : (s(X1,f(s(X0,sK12(X3,X2,X1,X0)))) != s(X1,g(s(X0,sK12(X3,X2,X1,X0)))) | s(fun(X0,X1),X2) = s(fun(X0,X1),X3)) )),
  inference(cnf_transformation,[],[f214])).
fof(f214,plain,(
  ! [X0,X1,X2,X3] : (s(X1,f(s(X0,sK12(X3,X2,X1,X0)))) != s(X1,g(s(X0,sK12(X3,X2,X1,X0)))) | s(fun(X0,X1),X2) = s(fun(X0,X1),X3))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK12])],[f164])).
fof(f164,plain,(
  ! [X0,X1,X2,X3] : (? [X4] : s(X1,f(s(X0,X4))) != s(X1,g(s(X0,X4))) | s(fun(X0,X1),X2) = s(fun(X0,X1),X3))),
  inference(ennf_transformation,[],[f127])).
fof(f127,plain,(
  ! [X0,X1,X2,X3] : (! [X4] : s(X1,f(s(X0,X4))) = s(X1,g(s(X0,X4))) => s(fun(X0,X1),X2) = s(fun(X0,X1),X3))),
  inference(flattening,[],[f126])).
fof(f126,plain,(
  ! [X0,X1] : ! [X2,X3] : (! [X4] : s(X1,f(s(X0,X4))) = s(X1,g(s(X0,X4))) => s(fun(X0,X1),X2) = s(fun(X0,X1),X3))),
  inference(rectify,[],[f4])).
fof(f4,axiom,(
  ! [X1,X2] : ! [X3,X4] : (! [X5] : s(X2,f(s(X1,X5))) = s(X2,g(s(X1,X5))) => s(fun(X1,X2),X3) = s(fun(X1,X2),X4))),
  file('thm.clos_knownProof.subapprox_Other|split|1',aHL_EXT)).
fof(f409,plain,(
  ( ! [X0,X1] : (~sP0(X0,X1) | p(s(bool,X1)) | p(s(bool,X0))) )),
  inference(subsumption_resolution,[],[f330,f408])).
fof(f330,plain,(
  ( ! [X0,X1] : (p(s(bool,'F_0')) | p(s(bool,X0)) | p(s(bool,X1)) | ~sP0(X0,X1)) )),
  inference(cnf_transformation,[],[f209])).
fof(f209,plain,(
  ! [X0,X1] : ((~sP0(X0,X1) | p(s(bool,X1)) | p(s(bool,X0)) | p(s(bool,'F_0'))) & ((~p(s(bool,X1)) & ~p(s(bool,X0)) & ~p(s(bool,'F_0'))) | sP0(X0,X1)))),
  inference(flattening,[],[f208])).
fof(f208,plain,(
  ! [X0,X1] : ((~sP0(X0,X1) | (p(s(bool,X1)) | p(s(bool,X0)) | p(s(bool,'F_0')))) & ((~p(s(bool,X1)) & ~p(s(bool,X0)) & ~p(s(bool,'F_0'))) | sP0(X0,X1)))),
  inference(nnf_transformation,[],[f166])).
fof(f166,plain,(
  ! [X0,X1] : (sP0(X0,X1) <=> (p(s(bool,X1)) | p(s(bool,X0)) | p(s(bool,'F_0'))))),
  introduced(predicate_definition_introduction,[new_symbols(naming,[sP0])])).
fof(f331,plain,(
  ( ! [X0,X1] : (~p(s(bool,X1)) | sP0(X0,X1)) )),
  inference(cnf_transformation,[],[f209])).
fof(f332,plain,(
  ( ! [X0,X1] : (~p(s(bool,X0)) | sP0(X0,X1)) )),
  inference(cnf_transformation,[],[f209])).
fof(f320,plain,(
  ( ! [X0,X1] : (p(s(bool,X1)) | p(s(bool,X0)) | s(bool,X0) = s(bool,X1)) )),
  inference(cnf_transformation,[],[f151])).
fof(f319,plain,(
  ( ! [X0,X1] : (s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X0),s('type.clos_known.val_approx',X1))) = s('type.clos_known.val_approx',happ(s(fun('type.clos_known.val_approx','type.clos_known.val_approx'),happ(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.clos_known.val_approx',X0))),s('type.clos_known.val_approx',X1)))) )),
  inference(cnf_transformation,[],[f112])).
fof(f112,plain,(
  ! [X0,X1] : s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X0),s('type.clos_known.val_approx',X1))) = s('type.clos_known.val_approx',happ(s(fun('type.clos_known.val_approx','type.clos_known.val_approx'),happ(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.clos_known.val_approx',X0))),s('type.clos_known.val_approx',X1)))),
  inference(rectify,[],[f63])).
fof(f63,axiom,(
  ! [X52,X53] : s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X52),s('type.clos_known.val_approx',X53))) = s('type.clos_known.val_approx',happ(s(fun('type.clos_known.val_approx','type.clos_known.val_approx'),happ(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.clos_known.val_approx',X52))),s('type.clos_known.val_approx',X53)))),
  file('thm.clos_knownProof.subapprox_Other|split|1','ARITY_0_2_const.clos_known.merge')).
fof(f318,plain,(
  ( ! [X0,X1] : (s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X1),s('type.num.num',X0))) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X1),s('type.num.num',X0))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))) )),
  inference(cnf_transformation,[],[f111])).
fof(f111,plain,(
  ! [X0,X1] : s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X1),s('type.num.num',X0))) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X1),s('type.num.num',X0))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))),
  inference(rectify,[],[f30])).
fof(f30,axiom,(
  ! [X18,X19] : s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X19),s('type.num.num',X18))) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X19),s('type.num.num',X18))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))),
  file('thm.clos_knownProof.subapprox_Other|split|1','thm.clos_known.merge_def|split|1')).
fof(f317,plain,(
  ( ! [X0,X1] : (s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X1))),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X0)))))) )),
  inference(cnf_transformation,[],[f110])).
fof(f110,plain,(
  ! [X0,X1] : s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X1))),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X0)))))),
  inference(rectify,[],[f44])).
fof(f44,axiom,(
  ! [X41,X40] : s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X40))),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X41)))))),
  file('thm.clos_knownProof.subapprox_Other|split|1','thm.clos_known.merge_def|split|15')).
fof(f316,plain,(
  ( ! [X0,X1] : (s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X0))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X1)))))) )),
  inference(cnf_transformation,[],[f109])).
fof(f109,plain,(
  ! [X0,X1] : s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X0))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X1)))))),
  inference(rectify,[],[f41])).
fof(f41,axiom,(
  ! [X34,X37] : s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X34))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X37)))))),
  file('thm.clos_knownProof.subapprox_Other|split|1','thm.clos_known.merge_def|split|12')).
fof(f315,plain,(
  ( ! [X0,X1] : (s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X1),s('type.num.num',X0)))))) )),
  inference(cnf_transformation,[],[f108])).
fof(f108,plain,(
  ! [X0,X1] : s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X1),s('type.num.num',X0)))))),
  inference(rectify,[],[f46])).
fof(f46,axiom,(
  ! [X42,X43] : s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X43),s('type.num.num',X42)))))),
  file('thm.clos_knownProof.subapprox_Other|split|1','thm.clos_known.merge_def|split|17')).
fof(f314,plain,(
  ( ! [X0,X1] : (s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X1),s('type.num.num',X0))),s('type.clos_known.val_approx','const.clos_known.Other_0')))) )),
  inference(cnf_transformation,[],[f107])).
fof(f107,plain,(
  ! [X0,X1] : s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X1),s('type.num.num',X0))),s('type.clos_known.val_approx','const.clos_known.Other_0')))),
  inference(rectify,[],[f39])).
fof(f39,axiom,(
  ! [X30,X31] : s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X31),s('type.num.num',X30))),s('type.clos_known.val_approx','const.clos_known.Other_0')))),
  file('thm.clos_knownProof.subapprox_Other|split|1','thm.clos_known.merge_def|split|10')).
fof(f270,plain,(
  ( ! [X0] : (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f180])).
fof(f261,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f3])).
fof(f3,axiom,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) | s(bool,'F_0') = s(bool,X0))),
  file('thm.clos_knownProof.subapprox_Other|split|1',aHL_BOOL_CASES)).
fof(f260,plain,(
  ( ! [X0] : (s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X0))) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X0))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))) )),
  inference(cnf_transformation,[],[f74])).
fof(f74,plain,(
  ! [X0] : s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X0))) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X0))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))),
  inference(rectify,[],[f31])).
fof(f31,axiom,(
  ! [X20] : s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X20))) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X20))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))),
  file('thm.clos_knownProof.subapprox_Other|split|1','thm.clos_known.merge_def|split|2')).
fof(f259,plain,(
  ( ! [X0] : (s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X0))) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X0))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))) )),
  inference(cnf_transformation,[],[f73])).
fof(f73,plain,(
  ! [X0] : s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X0))) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X0))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))),
  inference(rectify,[],[f32])).
fof(f32,axiom,(
  ! [X21] : s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X21))) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X21))),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))),
  file('thm.clos_knownProof.subapprox_Other|split|1','thm.clos_known.merge_def|split|3')).
fof(f258,plain,(
  ( ! [X0] : (s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X0))),s('type.clos_known.val_approx','const.clos_known.Other_0')))) )),
  inference(cnf_transformation,[],[f72])).
fof(f72,plain,(
  ! [X0] : s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X0))),s('type.clos_known.val_approx','const.clos_known.Other_0')))),
  inference(rectify,[],[f42])).
fof(f42,axiom,(
  ! [X34] : s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X34))),s('type.clos_known.val_approx','const.clos_known.Other_0')))),
  file('thm.clos_knownProof.subapprox_Other|split|1','thm.clos_known.merge_def|split|13')).
fof(f257,plain,(
  ( ! [X0] : (s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X0)))))) )),
  inference(cnf_transformation,[],[f71])).
fof(f71,plain,(
  ! [X0] : s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X0)))))),
  inference(rectify,[],[f47])).
fof(f47,axiom,(
  ! [X44] : s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X44)))))),
  file('thm.clos_knownProof.subapprox_Other|split|1','thm.clos_known.merge_def|split|18')).
fof(f256,plain,(
  ( ! [X0] : (s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X0))),s('type.clos_known.val_approx','const.clos_known.Other_0')))) )),
  inference(cnf_transformation,[],[f70])).
fof(f70,plain,(
  ! [X0] : s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X0))),s('type.clos_known.val_approx','const.clos_known.Other_0')))),
  inference(rectify,[],[f45])).
fof(f45,axiom,(
  ! [X40] : s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X40))),s('type.clos_known.val_approx','const.clos_known.Other_0')))),
  file('thm.clos_knownProof.subapprox_Other|split|1','thm.clos_known.merge_def|split|16')).
fof(f255,plain,(
  ( ! [X0] : (s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X0)))))) )),
  inference(cnf_transformation,[],[f69])).
fof(f69,plain,(
  ! [X0] : s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X0)))))),
  inference(rectify,[],[f48])).
fof(f48,axiom,(
  ! [X45] : s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X45)))))),
  file('thm.clos_knownProof.subapprox_Other|split|1','thm.clos_known.merge_def|split|19')).
fof(f247,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))),
  inference(cnf_transformation,[],[f33])).
fof(f33,axiom,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))),
  file('thm.clos_knownProof.subapprox_Other|split|1','thm.clos_known.merge_def|split|4')).
fof(f6561,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK7) | s('type.clos_known.val_approx',sK7) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.clos_known.Int_1'(s('type.integer.int',sK11(sK7))))))) | s('type.clos_known.val_approx',sK7) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.clos_known.Int_1'(s('type.integer.int',sK11(sK7))))))) | ($spl43 | $spl46)),
  inference(global_subsumption,[],[f244,f245,f247,f248,f254,f255,f256,f257,f258,f259,f260,f261,f262,f270,f269,f314,f315,f316,f317,f318,f319,f323,f320,f332,f331,f409,f345,f352,f353,f354,f355,f362,f361,f360,f359,f358,f357,f356,f366,f365,f364,f363,f370,f369,f368,f367,f374,f373,f372,f371,f378,f377,f376,f375,f385,f384,f383,f400,f381,f380,f379,f389,f388,f387,f386,f393,f392,f391,f390,f411,f412,f413,f414,f416,f418,f419,f421,f423,f424,f425,f426,f428,f429,f431,f453,f454,f457,f460,f464,f487,f510,f508,f507,f504,f501,f500,f497,f496,f495,f494,f493,f492,f491,f490,f489,f518,f565,f583,f581,f605,f601,f668,f688,f698,f704,f713,f723,f722,f721,f720,f749,f750,f751,f752,f753,f754,f771,f785,f793,f797,f832,f839,f844,f854,f859,f872,f883,f893,f902,f906,f915,f945,f934,f928,f925,f952,f995,f985,f984,f1052,f1090,f1228,f1225,f1224,f1221,f1218,f1217,f1216,f1215,f1213,f1212,f1211,f1207,f1206,f1203,f1200,f1197,f1194,f1193,f1185,f1161,f1156,f1154,f1152,f1150,f1148,f1147,f1146,f1145,f1142,f1139,f1131,f1128,f1125,f1122,f1114,f1111,f1109,f1107,f1105,f1103,f1102,f1099,f1098,f1097,f1096,f1376,f1375,f1374,f1373,f1372,f1464,f1473,f1471,f1494,f1499,f1518,f1515,f1540,f1608,f1629,f1671,f1745,f1746,f1747,f1748,f1749,f1750,f1751,f1935,f1931,f1930,f1926,f1922,f1921,f1920,f1919,f1918,f1916,f1915,f1914,f1909,f1908,f1904,f1899,f1898,f1890,f1889,f1880,f1848,f1847,f1845,f1843,f1841,f1839,f1838,f1837,f1836,f1828,f1827,f1818,f1817,f1809,f1808,f1799,f1798,f1796,f1794,f1792,f1790,f1788,f1786,f1784,f1782,f1780,f1779,f1776,f1775,f1774,f1773,f2214,f2210,f2209,f2205,f2201,f2200,f2199,f2198,f2197,f2195,f2194,f2193,f2188,f2187,f2183,f2178,f2177,f2169,f2168,f2159,f2126,f2125,f2123,f2121,f2119,f2117,f2116,f2115,f2114,f2106,f2105,f2096,f2095,f2087,f2086,f2077,f2076,f2074,f2072,f2070,f2068,f2066,f2064,f2062,f2060,f2059,f2058,f2055,f2054,f2052,f2449,f2445,f2444,f2440,f2436,f2435,f2434,f2433,f2432,f2430,f2429,f2428,f2423,f2422,f2418,f2413,f2412,f2404,f2403,f2394,f2361,f2360,f2358,f2356,f2354,f2352,f2351,f2350,f2349,f2341,f2340,f2331,f2330,f2322,f2321,f2312,f2311,f2309,f2307,f2305,f2303,f2301,f2299,f2297,f2295,f2293,f2292,f2289,f2288,f2287,f2286,f2683,f2679,f2678,f2674,f2670,f2669,f2668,f2667,f2666,f2664,f2663,f2662,f2657,f2656,f2652,f2647,f2646,f2638,f2637,f2628,f2595,f2594,f2592,f2590,f2588,f2586,f2585,f2584,f2583,f2575,f2574,f2565,f2564,f2556,f2555,f2546,f2545,f2543,f2541,f2539,f2537,f2535,f2533,f2531,f2529,f2527,f2526,f2523,f2522,f2521,f2520,f2926,f2922,f2921,f2917,f2913,f2912,f2911,f2910,f2909,f2907,f2906,f2905,f2900,f2899,f2895,f2890,f2889,f2881,f2880,f2871,f2838,f2837,f2835,f2833,f2831,f2829,f2828,f2827,f2826,f2818,f2817,f2808,f2807,f2799,f2798,f2789,f2788,f2786,f2784,f2782,f2780,f2778,f2776,f2774,f2772,f2770,f2769,f2766,f2765,f2764,f2763,f3047,f3107,f3149,f3404,f3409,f3412,f3415,f3418,f3421,f3424,f3427,f3430,f3433,f3435,f3436,f3437,f3438,f3439,f3440,f3441,f3442,f3443,f3444,f3445,f3446,f3447,f3448,f3450,f3451,f3452,f3453,f3208,f3459,f3462,f3464,f3466,f3468,f3470,f3472,f3474,f3476,f3478,f1752,f2746,f1292,f3205,f3104,f399,f398,f397,f396,f3203,f3102,f410,f350,f349,f3201,f3099,f348,f347,f346,f2929,f3449,f1759,f1758,f1757,f1756,f1440,f329,f328,f3108,f3209,f1725,f1696,f1672,f1634,f1633,f408,f274,f273,f4356,f4362,f4591,f4587,f4586,f4582,f4578,f4577,f4576,f4575,f4574,f4572,f4571,f4570,f4565,f4564,f4560,f4555,f4554,f4546,f4545,f4536,f4501,f4500,f4498,f4495,f4493,f4492,f4491,f4490,f4489,f4481,f4480,f4471,f4470,f4462,f4461,f4452,f4451,f4449,f4447,f4445,f4443,f4441,f4439,f4437,f4435,f4433,f4432,f4429,f4428,f4427,f4426,f4711,f4734,f4758,f4759,f4760,f4761,f4763,f4764,f4765,f4767,f4768,f4769,f4771,f4772,f4773,f4835,f4836,f4837,f4838,f4839,f4854,f4855,f4869,f4886,f4890,f4891,f4892,f4893,f4894,f4895,f4902,f4906,f4907,f4908,f4909,f4910,f4911,f4946,f4977,f4981,f4950,f4985,f4989,f4993,f4972,f4971,f4959,f4960,f4961,f4962,f4963,f4964,f4702,f4573,f4535,f4499,f4497,f4496,f4494,f4128,f4036,f3004,f2908,f2870,f2836,f2834,f2832,f2830,f2665,f2627,f2593,f2591,f2589,f2587,f2431,f2393,f2359,f2357,f2355,f2353,f2196,f2158,f2124,f2122,f2120,f2118,f1917,f1879,f1846,f1844,f1842,f1840,f1630,f1628,f1611,f1439,f1293,f1214,f1180,f1155,f1153,f1151,f1149,f1056,f1054,f1033,f999,f996,f992,f940,f938,f937,f772,f615,f614,f602,f598,f591,f590,f582,f580,f509,f479,f439,f432,f430,f427,f422,f420,f417,f415,f4994,f5267,f5290,f5294,f5271,f5298,f5302,f5306,f5279,f5280,f5281,f5282,f5283,f5284,f5336,f5360,f5364,f5340,f5368,f5372,f5376,f5348,f5349,f5350,f5351,f5352,f5353,f5384,f5385,f5386,f5390,f5391,f5392,f5393,f5394,f5395,f5396,f5397,f5398,f5418,f5429,f5458,f5462,f5466,f5433,f5470,f5474,f5478,f5437,f5439,f5445,f5446,f5447,f5448,f5449,f5450,f5500,f5512,f5544,f5548,f5552,f5516,f5556,f5560,f5564,f5520,f5530,f5531,f5532,f5533,f5534,f5535,f5587,f5628,f5599,f5632,f5636,f5603,f5640,f5644,f5648,f5608,f5613,f5614,f5615,f5616,f5617,f5618,f5671,f5716,f5684,f5720,f5724,f5688,f5728,f5732,f5736,f5700,f5701,f5702,f5703,f5704,f5705,f5782,f5783,f5784,f5785,f5786,f5787,f5788,f5789,f5790,f5791,f5792,f5793,f5794,f5799,f5803,f5811,f5876,f5880,f5824,f5884,f5888,f5892,f5828,f5829,f5896,f5900,f5904,f5833,f5905,f5906,f5907,f5837,f5908,f5845,f5926,f5934,f5858,f5862,f5863,f5947,f5957,f6003,f6004,f6005,f5961,f6006,f5969,f6024,f6032,f6033,f5982,f6041,f5986,f5987,f5992,f5995,f6059,f6061,f6064,f6068,f6076,f6121,f6126,f6089,f6131,f6135,f6139,f6093,f6094,f6143,f6147,f6151,f6098,f6102,f6103,f6104,f6105,f6106,f6107,f6108,f6109,f6110,f6111,f6112,f6113,f6114,f6115,f6116,f6117,f6165,f6166,f6167,f6168,f6169,f6176,f6180,f6185,f6189,f6193,f6194,f6198,f6199,f6203,f6211,f6265,f6269,f6224,f6273,f6277,f6281,f6228,f6229,f6285,f6289,f6293,f6233,f6294,f6304,f6350,f6351,f6352,f6308,f6353,f6355,f6316,f6371,f6379,f6380,f6329,f6388,f6333,f6334,f6338,f6342,f4999,f6483,f6485,f6486,f6487,f6488,f6489,f6490,f6491,f6492,f6493,f6494,f6530,f6539,f6540,f6545,f6546,f6552,f6553,f6555,f6560])).
fof(f6465,plain,(
  ( ! [X22] : (~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',X22),s('type.clos_known.val_approx',sK7)))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X22) | s('type.clos_known.val_approx',X22) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(X22)))) | s('type.clos_known.val_approx',X22) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(X22)))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X22)) ) | $spl54),
  inference(cnf_transformation,[],[f6465_D])).
fof(f6465_D,plain,(
  ( ! [X22] : (~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',X22),s('type.clos_known.val_approx',sK7)))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X22) | s('type.clos_known.val_approx',X22) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(X22)))) | s('type.clos_known.val_approx',X22) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(X22)))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X22)) ) <=> ~$spl54),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl54])])).
fof(f6555,plain,(
  ( ! [X25] : (s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK7) | ~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',X25),s('type.clos_known.val_approx',sK7)))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X25) | s('type.clos_known.val_approx',X25) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(X25)))) | s('type.clos_known.val_approx',X25) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(X25)))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X25)) ) | $spl46),
  inference(forward_demodulation,[],[f6554,f4999])).
fof(f6554,plain,(
  ( ! [X25] : (s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(sK7)))) | ~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',X25),s('type.clos_known.val_approx',sK7)))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X25) | s('type.clos_known.val_approx',X25) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(X25)))) | s('type.clos_known.val_approx',X25) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(X25)))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X25)) ) | $spl46),
  inference(forward_demodulation,[],[f6512,f352])).
fof(f6512,plain,(
  ( ! [X25] : (~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',X25),s('type.clos_known.val_approx',sK7)))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(sK7)))) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8(X25)),s('type.num.num',sK9(X25)))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(sK7)))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X25) | s('type.clos_known.val_approx',X25) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(X25)))) | s('type.clos_known.val_approx',X25) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(X25)))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X25)) ) | $spl46),
  inference(superposition,[],[f1756,f4999])).
fof(f6553,plain,(
  s('type.clos_known.val_approx',sK7) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.clos_known.Int_1'(s('type.integer.int',sK11(sK7))))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK7) | s('type.clos_known.val_approx',sK7) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.clos_known.Int_1'(s('type.integer.int',sK11(sK7))))))) | ($spl43 | $spl46)),
  inference(global_subsumption,[],[f244,f245,f247,f248,f254,f255,f256,f257,f258,f259,f260,f261,f262,f270,f269,f314,f315,f316,f317,f318,f319,f323,f320,f332,f331,f409,f345,f352,f353,f354,f355,f362,f361,f360,f359,f358,f357,f356,f366,f365,f364,f363,f370,f369,f368,f367,f374,f373,f372,f371,f378,f377,f376,f375,f385,f384,f383,f400,f381,f380,f379,f389,f388,f387,f386,f393,f392,f391,f390,f411,f412,f413,f414,f416,f418,f419,f421,f423,f424,f425,f426,f428,f429,f431,f453,f454,f457,f460,f464,f487,f510,f508,f507,f504,f501,f500,f497,f496,f495,f494,f493,f492,f491,f490,f489,f518,f565,f583,f581,f605,f601,f668,f688,f698,f704,f713,f723,f722,f721,f720,f749,f750,f751,f752,f753,f754,f771,f785,f793,f797,f832,f839,f844,f854,f859,f872,f883,f893,f902,f906,f915,f945,f934,f928,f925,f952,f995,f985,f984,f1052,f1090,f1228,f1225,f1224,f1221,f1218,f1217,f1216,f1215,f1213,f1212,f1211,f1207,f1206,f1203,f1200,f1197,f1194,f1193,f1185,f1161,f1156,f1154,f1152,f1150,f1148,f1147,f1146,f1145,f1142,f1139,f1131,f1128,f1125,f1122,f1114,f1111,f1109,f1107,f1105,f1103,f1102,f1099,f1098,f1097,f1096,f1376,f1375,f1374,f1373,f1372,f1464,f1473,f1471,f1494,f1499,f1518,f1515,f1540,f1608,f1629,f1671,f1745,f1746,f1747,f1748,f1749,f1750,f1751,f1935,f1931,f1930,f1926,f1922,f1921,f1920,f1919,f1918,f1916,f1915,f1914,f1909,f1908,f1904,f1899,f1898,f1890,f1889,f1880,f1848,f1847,f1845,f1843,f1841,f1839,f1838,f1837,f1836,f1828,f1827,f1818,f1817,f1809,f1808,f1799,f1798,f1796,f1794,f1792,f1790,f1788,f1786,f1784,f1782,f1780,f1779,f1776,f1775,f1774,f1773,f2214,f2210,f2209,f2205,f2201,f2200,f2199,f2198,f2197,f2195,f2194,f2193,f2188,f2187,f2183,f2178,f2177,f2169,f2168,f2159,f2126,f2125,f2123,f2121,f2119,f2117,f2116,f2115,f2114,f2106,f2105,f2096,f2095,f2087,f2086,f2077,f2076,f2074,f2072,f2070,f2068,f2066,f2064,f2062,f2060,f2059,f2058,f2055,f2054,f2052,f2449,f2445,f2444,f2440,f2436,f2435,f2434,f2433,f2432,f2430,f2429,f2428,f2423,f2422,f2418,f2413,f2412,f2404,f2403,f2394,f2361,f2360,f2358,f2356,f2354,f2352,f2351,f2350,f2349,f2341,f2340,f2331,f2330,f2322,f2321,f2312,f2311,f2309,f2307,f2305,f2303,f2301,f2299,f2297,f2295,f2293,f2292,f2289,f2288,f2287,f2286,f2683,f2679,f2678,f2674,f2670,f2669,f2668,f2667,f2666,f2664,f2663,f2662,f2657,f2656,f2652,f2647,f2646,f2638,f2637,f2628,f2595,f2594,f2592,f2590,f2588,f2586,f2585,f2584,f2583,f2575,f2574,f2565,f2564,f2556,f2555,f2546,f2545,f2543,f2541,f2539,f2537,f2535,f2533,f2531,f2529,f2527,f2526,f2523,f2522,f2521,f2520,f2926,f2922,f2921,f2917,f2913,f2912,f2911,f2910,f2909,f2907,f2906,f2905,f2900,f2899,f2895,f2890,f2889,f2881,f2880,f2871,f2838,f2837,f2835,f2833,f2831,f2829,f2828,f2827,f2826,f2818,f2817,f2808,f2807,f2799,f2798,f2789,f2788,f2786,f2784,f2782,f2780,f2778,f2776,f2774,f2772,f2770,f2769,f2766,f2765,f2764,f2763,f3047,f3107,f3149,f3404,f3409,f3412,f3415,f3418,f3421,f3424,f3427,f3430,f3433,f3435,f3436,f3437,f3438,f3439,f3440,f3441,f3442,f3443,f3444,f3445,f3446,f3447,f3448,f3450,f3451,f3452,f3453,f3208,f3459,f3462,f3464,f3466,f3468,f3470,f3472,f3474,f3476,f3478,f1752,f2746,f1292,f3205,f3104,f399,f398,f397,f396,f3203,f3102,f410,f350,f349,f3201,f3099,f348,f347,f346,f2929,f3449,f1759,f1758,f1757,f1756,f1440,f329,f328,f3108,f3209,f1725,f1696,f1672,f1634,f1633,f408,f274,f273,f4356,f4362,f4591,f4587,f4586,f4582,f4578,f4577,f4576,f4575,f4574,f4572,f4571,f4570,f4565,f4564,f4560,f4555,f4554,f4546,f4545,f4536,f4501,f4500,f4498,f4495,f4493,f4492,f4491,f4490,f4489,f4481,f4480,f4471,f4470,f4462,f4461,f4452,f4451,f4449,f4447,f4445,f4443,f4441,f4439,f4437,f4435,f4433,f4432,f4429,f4428,f4427,f4426,f4711,f4734,f4758,f4759,f4760,f4761,f4763,f4764,f4765,f4767,f4768,f4769,f4771,f4772,f4773,f4835,f4836,f4837,f4838,f4839,f4854,f4855,f4869,f4886,f4890,f4891,f4892,f4893,f4894,f4895,f4902,f4906,f4907,f4908,f4909,f4910,f4911,f4946,f4977,f4981,f4950,f4985,f4989,f4993,f4972,f4971,f4959,f4960,f4961,f4962,f4963,f4964,f4702,f4573,f4535,f4499,f4497,f4496,f4494,f4128,f4036,f3004,f2908,f2870,f2836,f2834,f2832,f2830,f2665,f2627,f2593,f2591,f2589,f2587,f2431,f2393,f2359,f2357,f2355,f2353,f2196,f2158,f2124,f2122,f2120,f2118,f1917,f1879,f1846,f1844,f1842,f1840,f1630,f1628,f1611,f1439,f1293,f1214,f1180,f1155,f1153,f1151,f1149,f1056,f1054,f1033,f999,f996,f992,f940,f938,f937,f772,f615,f614,f602,f598,f591,f590,f582,f580,f509,f479,f439,f432,f430,f427,f422,f420,f417,f415,f4994,f5267,f5290,f5294,f5271,f5298,f5302,f5306,f5279,f5280,f5281,f5282,f5283,f5284,f5336,f5360,f5364,f5340,f5368,f5372,f5376,f5348,f5349,f5350,f5351,f5352,f5353,f5384,f5385,f5386,f5390,f5391,f5392,f5393,f5394,f5395,f5396,f5397,f5398,f5418,f5429,f5458,f5462,f5466,f5433,f5470,f5474,f5478,f5437,f5439,f5445,f5446,f5447,f5448,f5449,f5450,f5500,f5512,f5544,f5548,f5552,f5516,f5556,f5560,f5564,f5520,f5530,f5531,f5532,f5533,f5534,f5535,f5587,f5628,f5599,f5632,f5636,f5603,f5640,f5644,f5648,f5608,f5613,f5614,f5615,f5616,f5617,f5618,f5671,f5716,f5684,f5720,f5724,f5688,f5728,f5732,f5736,f5700,f5701,f5702,f5703,f5704,f5705,f5782,f5783,f5784,f5785,f5786,f5787,f5788,f5789,f5790,f5791,f5792,f5793,f5794,f5799,f5803,f5811,f5876,f5880,f5824,f5884,f5888,f5892,f5828,f5829,f5896,f5900,f5904,f5833,f5905,f5906,f5907,f5837,f5908,f5845,f5926,f5934,f5858,f5862,f5863,f5947,f5957,f6003,f6004,f6005,f5961,f6006,f5969,f6024,f6032,f6033,f5982,f6041,f5986,f5987,f5992,f5995,f6059,f6061,f6064,f6068,f6076,f6121,f6126,f6089,f6131,f6135,f6139,f6093,f6094,f6143,f6147,f6151,f6098,f6102,f6103,f6104,f6105,f6106,f6107,f6108,f6109,f6110,f6111,f6112,f6113,f6114,f6115,f6116,f6117,f6165,f6166,f6167,f6168,f6169,f6176,f6180,f6185,f6189,f6193,f6194,f6198,f6199,f6203,f6211,f6265,f6269,f6224,f6273,f6277,f6281,f6228,f6229,f6285,f6289,f6293,f6233,f6294,f6304,f6350,f6351,f6352,f6308,f6353,f6355,f6316,f6371,f6379,f6380,f6329,f6388,f6333,f6334,f6338,f6342,f4999,f6483,f6485,f6486,f6487,f6488,f6489,f6490,f6491,f6492,f6493,f6494,f6530,f6539,f6540,f6545,f6546,f6552])).
fof(f6546,plain,(
  s('type.clos_known.val_approx',sK7) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.clos_known.Int_1'(s('type.integer.int',sK11(sK7))))))) | s('type.clos_known.val_approx',sK7) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.clos_known.Int_1'(s('type.integer.int',sK11(sK7))))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK7) | ($spl43 | $spl46)),
  inference(global_subsumption,[],[f244,f245,f247,f248,f254,f255,f256,f257,f258,f259,f260,f261,f262,f270,f269,f314,f315,f316,f317,f318,f319,f323,f320,f332,f331,f409,f345,f352,f353,f354,f355,f362,f361,f360,f359,f358,f357,f356,f366,f365,f364,f363,f370,f369,f368,f367,f374,f373,f372,f371,f378,f377,f376,f375,f385,f384,f383,f400,f381,f380,f379,f389,f388,f387,f386,f393,f392,f391,f390,f411,f412,f413,f414,f416,f418,f419,f421,f423,f424,f425,f426,f428,f429,f431,f453,f454,f457,f460,f464,f487,f510,f508,f507,f504,f501,f500,f497,f496,f495,f494,f493,f492,f491,f490,f489,f518,f565,f583,f581,f605,f601,f668,f688,f698,f704,f713,f723,f722,f721,f720,f749,f750,f751,f752,f753,f754,f771,f785,f793,f797,f832,f839,f844,f854,f859,f872,f883,f893,f902,f906,f915,f945,f934,f928,f925,f952,f995,f985,f984,f1052,f1090,f1228,f1225,f1224,f1221,f1218,f1217,f1216,f1215,f1213,f1212,f1211,f1207,f1206,f1203,f1200,f1197,f1194,f1193,f1185,f1161,f1156,f1154,f1152,f1150,f1148,f1147,f1146,f1145,f1142,f1139,f1131,f1128,f1125,f1122,f1114,f1111,f1109,f1107,f1105,f1103,f1102,f1099,f1098,f1097,f1096,f1376,f1375,f1374,f1373,f1372,f1464,f1473,f1471,f1494,f1499,f1518,f1515,f1540,f1608,f1629,f1671,f1745,f1746,f1747,f1748,f1749,f1750,f1751,f1935,f1931,f1930,f1926,f1922,f1921,f1920,f1919,f1918,f1916,f1915,f1914,f1909,f1908,f1904,f1899,f1898,f1890,f1889,f1880,f1848,f1847,f1845,f1843,f1841,f1839,f1838,f1837,f1836,f1828,f1827,f1818,f1817,f1809,f1808,f1799,f1798,f1796,f1794,f1792,f1790,f1788,f1786,f1784,f1782,f1780,f1779,f1776,f1775,f1774,f1773,f2214,f2210,f2209,f2205,f2201,f2200,f2199,f2198,f2197,f2195,f2194,f2193,f2188,f2187,f2183,f2178,f2177,f2169,f2168,f2159,f2126,f2125,f2123,f2121,f2119,f2117,f2116,f2115,f2114,f2106,f2105,f2096,f2095,f2087,f2086,f2077,f2076,f2074,f2072,f2070,f2068,f2066,f2064,f2062,f2060,f2059,f2058,f2055,f2054,f2052,f2449,f2445,f2444,f2440,f2436,f2435,f2434,f2433,f2432,f2430,f2429,f2428,f2423,f2422,f2418,f2413,f2412,f2404,f2403,f2394,f2361,f2360,f2358,f2356,f2354,f2352,f2351,f2350,f2349,f2341,f2340,f2331,f2330,f2322,f2321,f2312,f2311,f2309,f2307,f2305,f2303,f2301,f2299,f2297,f2295,f2293,f2292,f2289,f2288,f2287,f2286,f2683,f2679,f2678,f2674,f2670,f2669,f2668,f2667,f2666,f2664,f2663,f2662,f2657,f2656,f2652,f2647,f2646,f2638,f2637,f2628,f2595,f2594,f2592,f2590,f2588,f2586,f2585,f2584,f2583,f2575,f2574,f2565,f2564,f2556,f2555,f2546,f2545,f2543,f2541,f2539,f2537,f2535,f2533,f2531,f2529,f2527,f2526,f2523,f2522,f2521,f2520,f2926,f2922,f2921,f2917,f2913,f2912,f2911,f2910,f2909,f2907,f2906,f2905,f2900,f2899,f2895,f2890,f2889,f2881,f2880,f2871,f2838,f2837,f2835,f2833,f2831,f2829,f2828,f2827,f2826,f2818,f2817,f2808,f2807,f2799,f2798,f2789,f2788,f2786,f2784,f2782,f2780,f2778,f2776,f2774,f2772,f2770,f2769,f2766,f2765,f2764,f2763,f3047,f3107,f3149,f3404,f3409,f3412,f3415,f3418,f3421,f3424,f3427,f3430,f3433,f3435,f3436,f3437,f3438,f3439,f3440,f3441,f3442,f3443,f3444,f3445,f3446,f3447,f3448,f3450,f3451,f3452,f3453,f3208,f3459,f3462,f3464,f3466,f3468,f3470,f3472,f3474,f3476,f3478,f1752,f2746,f1292,f3205,f3104,f399,f398,f397,f396,f3203,f3102,f410,f350,f349,f3201,f3099,f348,f347,f346,f2929,f3449,f1759,f1758,f1757,f1756,f1440,f329,f328,f3108,f3209,f1725,f1696,f1672,f1634,f1633,f408,f274,f273,f4356,f4362,f4591,f4587,f4586,f4582,f4578,f4577,f4576,f4575,f4574,f4572,f4571,f4570,f4565,f4564,f4560,f4555,f4554,f4546,f4545,f4536,f4501,f4500,f4498,f4495,f4493,f4492,f4491,f4490,f4489,f4481,f4480,f4471,f4470,f4462,f4461,f4452,f4451,f4449,f4447,f4445,f4443,f4441,f4439,f4437,f4435,f4433,f4432,f4429,f4428,f4427,f4426,f4711,f4734,f4758,f4759,f4760,f4761,f4763,f4764,f4765,f4767,f4768,f4769,f4771,f4772,f4773,f4835,f4836,f4837,f4838,f4839,f4854,f4855,f4869,f4886,f4890,f4891,f4892,f4893,f4894,f4895,f4902,f4906,f4907,f4908,f4909,f4910,f4911,f4946,f4977,f4981,f4950,f4985,f4989,f4993,f4972,f4971,f4959,f4960,f4961,f4962,f4963,f4964,f4702,f4573,f4535,f4499,f4497,f4496,f4494,f4128,f4036,f3004,f2908,f2870,f2836,f2834,f2832,f2830,f2665,f2627,f2593,f2591,f2589,f2587,f2431,f2393,f2359,f2357,f2355,f2353,f2196,f2158,f2124,f2122,f2120,f2118,f1917,f1879,f1846,f1844,f1842,f1840,f1630,f1628,f1611,f1439,f1293,f1214,f1180,f1155,f1153,f1151,f1149,f1056,f1054,f1033,f999,f996,f992,f940,f938,f937,f772,f615,f614,f602,f598,f591,f590,f582,f580,f509,f479,f439,f432,f430,f427,f422,f420,f417,f415,f4994,f5267,f5290,f5294,f5271,f5298,f5302,f5306,f5279,f5280,f5281,f5282,f5283,f5284,f5336,f5360,f5364,f5340,f5368,f5372,f5376,f5348,f5349,f5350,f5351,f5352,f5353,f5384,f5385,f5386,f5390,f5391,f5392,f5393,f5394,f5395,f5396,f5397,f5398,f5418,f5429,f5458,f5462,f5466,f5433,f5470,f5474,f5478,f5437,f5439,f5445,f5446,f5447,f5448,f5449,f5450,f5500,f5512,f5544,f5548,f5552,f5516,f5556,f5560,f5564,f5520,f5530,f5531,f5532,f5533,f5534,f5535,f5587,f5628,f5599,f5632,f5636,f5603,f5640,f5644,f5648,f5608,f5613,f5614,f5615,f5616,f5617,f5618,f5671,f5716,f5684,f5720,f5724,f5688,f5728,f5732,f5736,f5700,f5701,f5702,f5703,f5704,f5705,f5782,f5783,f5784,f5785,f5786,f5787,f5788,f5789,f5790,f5791,f5792,f5793,f5794,f5799,f5803,f5811,f5876,f5880,f5824,f5884,f5888,f5892,f5828,f5829,f5896,f5900,f5904,f5833,f5905,f5906,f5907,f5837,f5908,f5845,f5926,f5934,f5858,f5862,f5863,f5947,f5957,f6003,f6004,f6005,f5961,f6006,f5969,f6024,f6032,f6033,f5982,f6041,f5986,f5987,f5992,f5995,f6059,f6061,f6064,f6068,f6076,f6121,f6126,f6089,f6131,f6135,f6139,f6093,f6094,f6143,f6147,f6151,f6098,f6102,f6103,f6104,f6105,f6106,f6107,f6108,f6109,f6110,f6111,f6112,f6113,f6114,f6115,f6116,f6117,f6165,f6166,f6167,f6168,f6169,f6176,f6180,f6185,f6189,f6193,f6194,f6198,f6199,f6203,f6211,f6265,f6269,f6224,f6273,f6277,f6281,f6228,f6229,f6285,f6289,f6293,f6233,f6294,f6304,f6350,f6351,f6352,f6308,f6353,f6355,f6316,f6371,f6379,f6380,f6329,f6388,f6333,f6334,f6338,f6342,f4999,f6483,f6485,f6486,f6487,f6488,f6489,f6490,f6491,f6492,f6493,f6494,f6530,f6539,f6540,f6545])).
fof(f6540,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK7) | s('type.clos_known.val_approx',sK7) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.clos_known.Int_1'(s('type.integer.int',sK11(sK7))))))) | s('type.clos_known.val_approx',sK7) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.clos_known.Int_1'(s('type.integer.int',sK11(sK7))))))) | ($spl43 | $spl46)),
  inference(global_subsumption,[],[f244,f245,f247,f248,f254,f255,f256,f257,f258,f259,f260,f261,f262,f270,f269,f314,f315,f316,f317,f318,f319,f323,f320,f332,f331,f409,f345,f352,f353,f354,f355,f362,f361,f360,f359,f358,f357,f356,f366,f365,f364,f363,f370,f369,f368,f367,f374,f373,f372,f371,f378,f377,f376,f375,f385,f384,f383,f400,f381,f380,f379,f389,f388,f387,f386,f393,f392,f391,f390,f411,f412,f413,f414,f416,f418,f419,f421,f423,f424,f425,f426,f428,f429,f431,f453,f454,f457,f460,f464,f487,f510,f508,f507,f504,f501,f500,f497,f496,f495,f494,f493,f492,f491,f490,f489,f518,f565,f583,f581,f605,f601,f668,f688,f698,f704,f713,f723,f722,f721,f720,f749,f750,f751,f752,f753,f754,f771,f785,f793,f797,f832,f839,f844,f854,f859,f872,f883,f893,f902,f906,f915,f945,f934,f928,f925,f952,f995,f985,f984,f1052,f1090,f1228,f1225,f1224,f1221,f1218,f1217,f1216,f1215,f1213,f1212,f1211,f1207,f1206,f1203,f1200,f1197,f1194,f1193,f1185,f1161,f1156,f1154,f1152,f1150,f1148,f1147,f1146,f1145,f1142,f1139,f1131,f1128,f1125,f1122,f1114,f1111,f1109,f1107,f1105,f1103,f1102,f1099,f1098,f1097,f1096,f1376,f1375,f1374,f1373,f1372,f1464,f1473,f1471,f1494,f1499,f1518,f1515,f1540,f1608,f1629,f1671,f1745,f1746,f1747,f1748,f1749,f1750,f1751,f1935,f1931,f1930,f1926,f1922,f1921,f1920,f1919,f1918,f1916,f1915,f1914,f1909,f1908,f1904,f1899,f1898,f1890,f1889,f1880,f1848,f1847,f1845,f1843,f1841,f1839,f1838,f1837,f1836,f1828,f1827,f1818,f1817,f1809,f1808,f1799,f1798,f1796,f1794,f1792,f1790,f1788,f1786,f1784,f1782,f1780,f1779,f1776,f1775,f1774,f1773,f2214,f2210,f2209,f2205,f2201,f2200,f2199,f2198,f2197,f2195,f2194,f2193,f2188,f2187,f2183,f2178,f2177,f2169,f2168,f2159,f2126,f2125,f2123,f2121,f2119,f2117,f2116,f2115,f2114,f2106,f2105,f2096,f2095,f2087,f2086,f2077,f2076,f2074,f2072,f2070,f2068,f2066,f2064,f2062,f2060,f2059,f2058,f2055,f2054,f2052,f2449,f2445,f2444,f2440,f2436,f2435,f2434,f2433,f2432,f2430,f2429,f2428,f2423,f2422,f2418,f2413,f2412,f2404,f2403,f2394,f2361,f2360,f2358,f2356,f2354,f2352,f2351,f2350,f2349,f2341,f2340,f2331,f2330,f2322,f2321,f2312,f2311,f2309,f2307,f2305,f2303,f2301,f2299,f2297,f2295,f2293,f2292,f2289,f2288,f2287,f2286,f2683,f2679,f2678,f2674,f2670,f2669,f2668,f2667,f2666,f2664,f2663,f2662,f2657,f2656,f2652,f2647,f2646,f2638,f2637,f2628,f2595,f2594,f2592,f2590,f2588,f2586,f2585,f2584,f2583,f2575,f2574,f2565,f2564,f2556,f2555,f2546,f2545,f2543,f2541,f2539,f2537,f2535,f2533,f2531,f2529,f2527,f2526,f2523,f2522,f2521,f2520,f2926,f2922,f2921,f2917,f2913,f2912,f2911,f2910,f2909,f2907,f2906,f2905,f2900,f2899,f2895,f2890,f2889,f2881,f2880,f2871,f2838,f2837,f2835,f2833,f2831,f2829,f2828,f2827,f2826,f2818,f2817,f2808,f2807,f2799,f2798,f2789,f2788,f2786,f2784,f2782,f2780,f2778,f2776,f2774,f2772,f2770,f2769,f2766,f2765,f2764,f2763,f3047,f3107,f3149,f3404,f3409,f3412,f3415,f3418,f3421,f3424,f3427,f3430,f3433,f3435,f3436,f3437,f3438,f3439,f3440,f3441,f3442,f3443,f3444,f3445,f3446,f3447,f3448,f3450,f3451,f3452,f3453,f3208,f3459,f3462,f3464,f3466,f3468,f3470,f3472,f3474,f3476,f3478,f1752,f2746,f1292,f3205,f3104,f399,f398,f397,f396,f3203,f3102,f410,f350,f349,f3201,f3099,f348,f347,f346,f2929,f3449,f1759,f1758,f1757,f1756,f1440,f329,f328,f3108,f3209,f1725,f1696,f1672,f1634,f1633,f408,f274,f273,f4356,f4362,f4591,f4587,f4586,f4582,f4578,f4577,f4576,f4575,f4574,f4572,f4571,f4570,f4565,f4564,f4560,f4555,f4554,f4546,f4545,f4536,f4501,f4500,f4498,f4495,f4493,f4492,f4491,f4490,f4489,f4481,f4480,f4471,f4470,f4462,f4461,f4452,f4451,f4449,f4447,f4445,f4443,f4441,f4439,f4437,f4435,f4433,f4432,f4429,f4428,f4427,f4426,f4711,f4734,f4758,f4759,f4760,f4761,f4763,f4764,f4765,f4767,f4768,f4769,f4771,f4772,f4773,f4835,f4836,f4837,f4838,f4839,f4854,f4855,f4869,f4886,f4890,f4891,f4892,f4893,f4894,f4895,f4902,f4906,f4907,f4908,f4909,f4910,f4911,f4946,f4977,f4981,f4950,f4985,f4989,f4993,f4972,f4971,f4959,f4960,f4961,f4962,f4963,f4964,f4702,f4573,f4535,f4499,f4497,f4496,f4494,f4128,f4036,f3004,f2908,f2870,f2836,f2834,f2832,f2830,f2665,f2627,f2593,f2591,f2589,f2587,f2431,f2393,f2359,f2357,f2355,f2353,f2196,f2158,f2124,f2122,f2120,f2118,f1917,f1879,f1846,f1844,f1842,f1840,f1630,f1628,f1611,f1439,f1293,f1214,f1180,f1155,f1153,f1151,f1149,f1056,f1054,f1033,f999,f996,f992,f940,f938,f937,f772,f615,f614,f602,f598,f591,f590,f582,f580,f509,f479,f439,f432,f430,f427,f422,f420,f417,f415,f4994,f5267,f5290,f5294,f5271,f5298,f5302,f5306,f5279,f5280,f5281,f5282,f5283,f5284,f5336,f5360,f5364,f5340,f5368,f5372,f5376,f5348,f5349,f5350,f5351,f5352,f5353,f5384,f5385,f5386,f5390,f5391,f5392,f5393,f5394,f5395,f5396,f5397,f5398,f5418,f5429,f5458,f5462,f5466,f5433,f5470,f5474,f5478,f5437,f5439,f5445,f5446,f5447,f5448,f5449,f5450,f5500,f5512,f5544,f5548,f5552,f5516,f5556,f5560,f5564,f5520,f5530,f5531,f5532,f5533,f5534,f5535,f5587,f5628,f5599,f5632,f5636,f5603,f5640,f5644,f5648,f5608,f5613,f5614,f5615,f5616,f5617,f5618,f5671,f5716,f5684,f5720,f5724,f5688,f5728,f5732,f5736,f5700,f5701,f5702,f5703,f5704,f5705,f5782,f5783,f5784,f5785,f5786,f5787,f5788,f5789,f5790,f5791,f5792,f5793,f5794,f5799,f5803,f5811,f5876,f5880,f5824,f5884,f5888,f5892,f5828,f5829,f5896,f5900,f5904,f5833,f5905,f5906,f5907,f5837,f5908,f5845,f5926,f5934,f5858,f5862,f5863,f5947,f5957,f6003,f6004,f6005,f5961,f6006,f5969,f6024,f6032,f6033,f5982,f6041,f5986,f5987,f5992,f5995,f6059,f6061,f6064,f6068,f6076,f6121,f6126,f6089,f6131,f6135,f6139,f6093,f6094,f6143,f6147,f6151,f6098,f6102,f6103,f6104,f6105,f6106,f6107,f6108,f6109,f6110,f6111,f6112,f6113,f6114,f6115,f6116,f6117,f6165,f6166,f6167,f6168,f6169,f6176,f6180,f6185,f6189,f6193,f6194,f6198,f6199,f6203,f6211,f6265,f6269,f6224,f6273,f6277,f6281,f6228,f6229,f6285,f6289,f6293,f6233,f6294,f6304,f6350,f6351,f6352,f6308,f6353,f6355,f6316,f6371,f6379,f6380,f6329,f6388,f6333,f6334,f6338,f6342,f4999,f6483,f6485,f6486,f6487,f6488,f6489,f6490,f6491,f6492,f6493,f6494,f6530,f6539])).
fof(f6530,plain,(
  s('type.clos_known.val_approx',sK7) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.clos_known.Int_1'(s('type.integer.int',sK11(sK7))))))) | s('type.clos_known.val_approx',sK7) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.clos_known.Int_1'(s('type.integer.int',sK11(sK7))))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK7) | ($spl43 | $spl46)),
  inference(subsumption_resolution,[],[f6529,f4994])).
fof(f6529,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK7) | s('type.clos_known.val_approx',sK7) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.clos_known.Int_1'(s('type.integer.int',sK11(sK7))))))) | s('type.clos_known.val_approx',sK7) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.clos_known.Int_1'(s('type.integer.int',sK11(sK7))))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK7) | $spl46),
  inference(forward_demodulation,[],[f6528,f4999])).
fof(f6528,plain,(
  s('type.clos_known.val_approx',sK7) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.clos_known.Int_1'(s('type.integer.int',sK11(sK7))))))) | s('type.clos_known.val_approx',sK7) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.clos_known.Int_1'(s('type.integer.int',sK11(sK7))))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK7) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(sK7)))) | $spl46),
  inference(forward_demodulation,[],[f6527,f4999])).
fof(f6527,plain,(
  s('type.clos_known.val_approx',sK7) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.clos_known.Int_1'(s('type.integer.int',sK11(sK7))))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK7) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(sK7)))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.clos_known.Int_1'(s('type.integer.int',sK11(sK7))))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(sK7)))) | $spl46),
  inference(forward_demodulation,[],[f6526,f4999])).
fof(f6526,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK7) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(sK7)))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.clos_known.Int_1'(s('type.integer.int',sK11(sK7))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(sK7)))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.clos_known.Int_1'(s('type.integer.int',sK11(sK7))))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(sK7)))) | $spl46),
  inference(forward_demodulation,[],[f6525,f4999])).
fof(f6525,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(sK7)))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(sK7)))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.clos_known.Int_1'(s('type.integer.int',sK11(sK7))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(sK7)))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.clos_known.Int_1'(s('type.integer.int',sK11(sK7))))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(sK7)))) | $spl46),
  inference(subsumption_resolution,[],[f6504,f1439])).
fof(f6504,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK7),s('type.clos_known.val_approx','const.clos_known.Other_0'))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(sK7)))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(sK7)))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.clos_known.Int_1'(s('type.integer.int',sK11(sK7))))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(sK7)))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.clos_known.Int_1'(s('type.integer.int',sK11(sK7))))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(sK7)))) | $spl46),
  inference(superposition,[],[f1745,f4999])).
fof(f6518,plain,(
  $false | $spl46),
  inference(subsumption_resolution,[],[f6484,f1439])).
fof(f6484,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK7),s('type.clos_known.val_approx','const.clos_known.Other_0'))) | $spl46),
  inference(superposition,[],[f256,f4999])).
fof(f6480,plain,(
  ( ! [X26] : (p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',X26),s('type.clos_known.val_approx',sK7)))) | s('type.clos_known.val_approx','const.clos_known.Other_0') != s('type.clos_known.val_approx',sK7) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X26) | s('type.clos_known.val_approx',X26) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(X26)))) | s('type.clos_known.val_approx',X26) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(X26)))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X26)) ) | $spl44),
  inference(forward_demodulation,[],[f6479,f4997])).
fof(f6479,plain,(
  ( ! [X26] : (s('type.clos_known.val_approx','const.clos_known.Other_0') != s('type.clos_known.val_approx',sK7) | p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',X26),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(sK7))))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X26) | s('type.clos_known.val_approx',X26) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(X26)))) | s('type.clos_known.val_approx',X26) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(X26)))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X26)) ) | $spl44),
  inference(forward_demodulation,[],[f6425,f6400])).
fof(f6400,plain,(
  ( ! [X2,X3] : (s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X2),s('type.num.num',X3))),s('type.clos_known.val_approx',sK7)))) ) | $spl44),
  inference(superposition,[],[f354,f4997])).
fof(f6425,plain,(
  ( ! [X26] : (s('type.clos_known.val_approx',sK7) != s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8(X26)),s('type.num.num',sK9(X26)))),s('type.clos_known.val_approx',sK7))) | p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',X26),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(sK7))))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X26) | s('type.clos_known.val_approx',X26) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(X26)))) | s('type.clos_known.val_approx',X26) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(X26)))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X26)) ) | $spl44),
  inference(superposition,[],[f1758,f4997])).
fof(f6441,plain,(
  s('type.clos_known.val_approx',sK7) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(sK7))))))) | $spl50),
  inference(cnf_transformation,[],[f6441_D])).
fof(f6441_D,plain,(
  s('type.clos_known.val_approx',sK7) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(sK7))))))) <=> ~$spl50),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl50])])).
fof(f6443,plain,(
  s('type.clos_known.val_approx',sK7) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(sK7))))))) | $spl52),
  inference(cnf_transformation,[],[f6443_D])).
fof(f6443_D,plain,(
  s('type.clos_known.val_approx',sK7) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(sK7))))))) <=> ~$spl52),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl52])])).
fof(f6478,plain,(
  s('type.clos_known.val_approx',sK7) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(sK7))))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK7) | s('type.clos_known.val_approx',sK7) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(sK7))))))) | ($spl43 | $spl44)),
  inference(global_subsumption,[],[f244,f245,f247,f248,f254,f255,f256,f257,f258,f259,f260,f261,f262,f270,f269,f314,f315,f316,f317,f318,f319,f323,f320,f332,f331,f409,f345,f352,f353,f354,f355,f362,f361,f360,f359,f358,f357,f356,f366,f365,f364,f363,f370,f369,f368,f367,f374,f373,f372,f371,f378,f377,f376,f375,f385,f384,f383,f400,f381,f380,f379,f389,f388,f387,f386,f393,f392,f391,f390,f411,f412,f413,f414,f416,f418,f419,f421,f423,f424,f425,f426,f428,f429,f431,f453,f454,f457,f460,f464,f487,f510,f508,f507,f504,f501,f500,f497,f496,f495,f494,f493,f492,f491,f490,f489,f518,f565,f583,f581,f605,f601,f668,f688,f698,f704,f713,f723,f722,f721,f720,f749,f750,f751,f752,f753,f754,f771,f785,f793,f797,f832,f839,f844,f854,f859,f872,f883,f893,f902,f906,f915,f945,f934,f928,f925,f952,f995,f985,f984,f1052,f1090,f1228,f1225,f1224,f1221,f1218,f1217,f1216,f1215,f1213,f1212,f1211,f1207,f1206,f1203,f1200,f1197,f1194,f1193,f1185,f1161,f1156,f1154,f1152,f1150,f1148,f1147,f1146,f1145,f1142,f1139,f1131,f1128,f1125,f1122,f1114,f1111,f1109,f1107,f1105,f1103,f1102,f1099,f1098,f1097,f1096,f1376,f1375,f1374,f1373,f1372,f1464,f1473,f1471,f1494,f1499,f1518,f1515,f1540,f1608,f1629,f1671,f1745,f1746,f1747,f1748,f1749,f1750,f1751,f1935,f1931,f1930,f1926,f1922,f1921,f1920,f1919,f1918,f1916,f1915,f1914,f1909,f1908,f1904,f1899,f1898,f1890,f1889,f1880,f1848,f1847,f1845,f1843,f1841,f1839,f1838,f1837,f1836,f1828,f1827,f1818,f1817,f1809,f1808,f1799,f1798,f1796,f1794,f1792,f1790,f1788,f1786,f1784,f1782,f1780,f1779,f1776,f1775,f1774,f1773,f2214,f2210,f2209,f2205,f2201,f2200,f2199,f2198,f2197,f2195,f2194,f2193,f2188,f2187,f2183,f2178,f2177,f2169,f2168,f2159,f2126,f2125,f2123,f2121,f2119,f2117,f2116,f2115,f2114,f2106,f2105,f2096,f2095,f2087,f2086,f2077,f2076,f2074,f2072,f2070,f2068,f2066,f2064,f2062,f2060,f2059,f2058,f2055,f2054,f2052,f2449,f2445,f2444,f2440,f2436,f2435,f2434,f2433,f2432,f2430,f2429,f2428,f2423,f2422,f2418,f2413,f2412,f2404,f2403,f2394,f2361,f2360,f2358,f2356,f2354,f2352,f2351,f2350,f2349,f2341,f2340,f2331,f2330,f2322,f2321,f2312,f2311,f2309,f2307,f2305,f2303,f2301,f2299,f2297,f2295,f2293,f2292,f2289,f2288,f2287,f2286,f2683,f2679,f2678,f2674,f2670,f2669,f2668,f2667,f2666,f2664,f2663,f2662,f2657,f2656,f2652,f2647,f2646,f2638,f2637,f2628,f2595,f2594,f2592,f2590,f2588,f2586,f2585,f2584,f2583,f2575,f2574,f2565,f2564,f2556,f2555,f2546,f2545,f2543,f2541,f2539,f2537,f2535,f2533,f2531,f2529,f2527,f2526,f2523,f2522,f2521,f2520,f2926,f2922,f2921,f2917,f2913,f2912,f2911,f2910,f2909,f2907,f2906,f2905,f2900,f2899,f2895,f2890,f2889,f2881,f2880,f2871,f2838,f2837,f2835,f2833,f2831,f2829,f2828,f2827,f2826,f2818,f2817,f2808,f2807,f2799,f2798,f2789,f2788,f2786,f2784,f2782,f2780,f2778,f2776,f2774,f2772,f2770,f2769,f2766,f2765,f2764,f2763,f3047,f3107,f3149,f3404,f3409,f3412,f3415,f3418,f3421,f3424,f3427,f3430,f3433,f3435,f3436,f3437,f3438,f3439,f3440,f3441,f3442,f3443,f3444,f3445,f3446,f3447,f3448,f3450,f3451,f3452,f3453,f3208,f3459,f3462,f3464,f3466,f3468,f3470,f3472,f3474,f3476,f3478,f1752,f2746,f1292,f3205,f3104,f399,f398,f397,f396,f3203,f3102,f410,f350,f349,f3201,f3099,f348,f347,f346,f2929,f3449,f1759,f1758,f1757,f1756,f1440,f329,f328,f3108,f3209,f1725,f1696,f1672,f1634,f1633,f408,f274,f273,f4356,f4362,f4591,f4587,f4586,f4582,f4578,f4577,f4576,f4575,f4574,f4572,f4571,f4570,f4565,f4564,f4560,f4555,f4554,f4546,f4545,f4536,f4501,f4500,f4498,f4495,f4493,f4492,f4491,f4490,f4489,f4481,f4480,f4471,f4470,f4462,f4461,f4452,f4451,f4449,f4447,f4445,f4443,f4441,f4439,f4437,f4435,f4433,f4432,f4429,f4428,f4427,f4426,f4711,f4734,f4758,f4759,f4760,f4761,f4763,f4764,f4765,f4767,f4768,f4769,f4771,f4772,f4773,f4835,f4836,f4837,f4838,f4839,f4854,f4855,f4869,f4886,f4890,f4891,f4892,f4893,f4894,f4895,f4902,f4906,f4907,f4908,f4909,f4910,f4911,f4946,f4977,f4981,f4950,f4985,f4989,f4993,f4972,f4971,f4959,f4960,f4961,f4962,f4963,f4964,f4702,f4573,f4535,f4499,f4497,f4496,f4494,f4128,f4036,f3004,f2908,f2870,f2836,f2834,f2832,f2830,f2665,f2627,f2593,f2591,f2589,f2587,f2431,f2393,f2359,f2357,f2355,f2353,f2196,f2158,f2124,f2122,f2120,f2118,f1917,f1879,f1846,f1844,f1842,f1840,f1630,f1628,f1611,f1439,f1293,f1214,f1180,f1155,f1153,f1151,f1149,f1056,f1054,f1033,f999,f996,f992,f940,f938,f937,f772,f615,f614,f602,f598,f591,f590,f582,f580,f509,f479,f439,f432,f430,f427,f422,f420,f417,f415,f4997,f4994,f5267,f5290,f5294,f5271,f5298,f5302,f5306,f5279,f5280,f5281,f5282,f5283,f5284,f5336,f5360,f5364,f5340,f5368,f5372,f5376,f5348,f5349,f5350,f5351,f5352,f5353,f5384,f5385,f5386,f5390,f5391,f5392,f5393,f5394,f5395,f5396,f5397,f5398,f5418,f5429,f5458,f5462,f5466,f5433,f5470,f5474,f5478,f5437,f5439,f5445,f5446,f5447,f5448,f5449,f5450,f5500,f5512,f5544,f5548,f5552,f5516,f5556,f5560,f5564,f5520,f5530,f5531,f5532,f5533,f5534,f5535,f5587,f5628,f5599,f5632,f5636,f5603,f5640,f5644,f5648,f5608,f5613,f5614,f5615,f5616,f5617,f5618,f5671,f5716,f5684,f5720,f5724,f5688,f5728,f5732,f5736,f5700,f5701,f5702,f5703,f5704,f5705,f5782,f5783,f5784,f5785,f5786,f5787,f5788,f5789,f5790,f5791,f5792,f5793,f5794,f5799,f5803,f5811,f5876,f5880,f5824,f5884,f5888,f5892,f5828,f5829,f5896,f5900,f5904,f5833,f5905,f5906,f5907,f5837,f5908,f5845,f5926,f5934,f5858,f5862,f5863,f5947,f5957,f6003,f6004,f6005,f5961,f6006,f5969,f6024,f6032,f6033,f5982,f6041,f5986,f5987,f5992,f5995,f6059,f6061,f6064,f6068,f6076,f6121,f6126,f6089,f6131,f6135,f6139,f6093,f6094,f6143,f6147,f6151,f6098,f6102,f6103,f6104,f6105,f6106,f6107,f6108,f6109,f6110,f6111,f6112,f6113,f6114,f6115,f6116,f6117,f6165,f6166,f6167,f6168,f6169,f6176,f6180,f6185,f6189,f6193,f6194,f6198,f6199,f6203,f6211,f6265,f6269,f6224,f6273,f6277,f6281,f6228,f6229,f6285,f6289,f6293,f6233,f6294,f6304,f6350,f6351,f6352,f6308,f6353,f6355,f6316,f6371,f6379,f6380,f6329,f6388,f6333,f6334,f6338,f6342,f6395,f6397,f6398,f6399,f6400,f6401,f6402,f6403,f6439,f6448,f6449,f6454,f6455,f6461,f6462,f6464,f6470,f6471,f6472,f6477])).
fof(f6477,plain,(
  ( ! [X25] : (s('type.clos_known.val_approx',sK7) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(sK7))))))) | s('type.clos_known.val_approx',sK7) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(sK7))))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK7) | ~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',X25),s('type.clos_known.val_approx',sK7)))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(sK7))))),s('type.num.num',sK9('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(sK7))))))) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X25),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(sK7))))),s('type.num.num',sK9('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(sK7)))))))))) ) | ($spl43 | $spl44)),
  inference(subsumption_resolution,[],[f6476,f4994])).
fof(f6476,plain,(
  ( ! [X25] : (s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK7) | s('type.clos_known.val_approx',sK7) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(sK7))))))) | s('type.clos_known.val_approx',sK7) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(sK7))))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK7) | ~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',X25),s('type.clos_known.val_approx',sK7)))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(sK7))))),s('type.num.num',sK9('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(sK7))))))) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X25),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(sK7))))),s('type.num.num',sK9('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(sK7)))))))))) ) | $spl44),
  inference(forward_demodulation,[],[f6475,f4997])).
fof(f6475,plain,(
  ( ! [X25] : (s('type.clos_known.val_approx',sK7) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(sK7))))))) | s('type.clos_known.val_approx',sK7) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(sK7))))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK7) | ~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',X25),s('type.clos_known.val_approx',sK7)))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(sK7))))),s('type.num.num',sK9('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(sK7))))))) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X25),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(sK7))))),s('type.num.num',sK9('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(sK7))))))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(sK7))))) ) | $spl44),
  inference(forward_demodulation,[],[f6474,f4997])).
fof(f6474,plain,(
  ( ! [X25] : (s('type.clos_known.val_approx',sK7) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(sK7))))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK7) | ~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',X25),s('type.clos_known.val_approx',sK7)))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(sK7))))),s('type.num.num',sK9('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(sK7))))))) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X25),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(sK7))))),s('type.num.num',sK9('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(sK7))))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(sK7)))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(sK7))))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(sK7))))) ) | $spl44),
  inference(forward_demodulation,[],[f6473,f4997])).
fof(f6473,plain,(
  ( ! [X25] : (s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK7) | ~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',X25),s('type.clos_known.val_approx',sK7)))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(sK7))))),s('type.num.num',sK9('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(sK7))))))) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X25),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(sK7))))),s('type.num.num',sK9('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(sK7))))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(sK7)))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(sK7))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(sK7)))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(sK7))))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(sK7))))) ) | $spl44),
  inference(forward_demodulation,[],[f6424,f4997])).
fof(f6424,plain,(
  ( ! [X25] : (~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',X25),s('type.clos_known.val_approx',sK7)))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(sK7))))),s('type.num.num',sK9('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(sK7))))))) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X25),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(sK7))))),s('type.num.num',sK9('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(sK7))))))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(sK7)))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(sK7)))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(sK7))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(sK7)))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(sK7))))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(sK7))))) ) | $spl44),
  inference(superposition,[],[f1757,f4997])).
fof(f6472,plain,(
  ( ! [X24] : (s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8(X24)),s('type.num.num',sK9(X24)))) | ~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',sK7),s('type.clos_known.val_approx',X24)))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X24) | s('type.clos_known.val_approx',X24) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(X24)))) | s('type.clos_known.val_approx',X24) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(X24)))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X24)) ) | $spl44),
  inference(forward_demodulation,[],[f6423,f355])).
fof(f6423,plain,(
  ( ! [X24] : (~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',sK7),s('type.clos_known.val_approx',X24)))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8(X24)),s('type.num.num',sK9(X24)))) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(sK7)))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8(X24)),s('type.num.num',sK9(X24)))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X24) | s('type.clos_known.val_approx',X24) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(X24)))) | s('type.clos_known.val_approx',X24) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(X24)))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X24)) ) | $spl44),
  inference(superposition,[],[f1757,f4997])).
fof(f6470,plain,(
  ( ! [X23] : (s('type.clos_known.val_approx',sK7) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(sK7))))))) | s('type.clos_known.val_approx',sK7) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(sK7))))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK7) | ~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',sK7),s('type.clos_known.val_approx',X23)))) | s('type.clos_known.val_approx',X23) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(sK7))))),s('type.num.num',sK9('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(sK7))))))),s('type.clos_known.val_approx',X23)))) ) | ($spl43 | $spl44)),
  inference(subsumption_resolution,[],[f6469,f4994])).
fof(f6469,plain,(
  ( ! [X23] : (s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK7) | s('type.clos_known.val_approx',sK7) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(sK7))))))) | s('type.clos_known.val_approx',sK7) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(sK7))))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK7) | ~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',sK7),s('type.clos_known.val_approx',X23)))) | s('type.clos_known.val_approx',X23) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(sK7))))),s('type.num.num',sK9('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(sK7))))))),s('type.clos_known.val_approx',X23)))) ) | $spl44),
  inference(forward_demodulation,[],[f6468,f4997])).
fof(f6468,plain,(
  ( ! [X23] : (s('type.clos_known.val_approx',sK7) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(sK7))))))) | s('type.clos_known.val_approx',sK7) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(sK7))))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK7) | ~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',sK7),s('type.clos_known.val_approx',X23)))) | s('type.clos_known.val_approx',X23) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(sK7))))),s('type.num.num',sK9('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(sK7))))))),s('type.clos_known.val_approx',X23))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(sK7))))) ) | $spl44),
  inference(forward_demodulation,[],[f6467,f4997])).
fof(f6467,plain,(
  ( ! [X23] : (s('type.clos_known.val_approx',sK7) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(sK7))))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK7) | ~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',sK7),s('type.clos_known.val_approx',X23)))) | s('type.clos_known.val_approx',X23) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(sK7))))),s('type.num.num',sK9('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(sK7))))))),s('type.clos_known.val_approx',X23))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(sK7)))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(sK7))))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(sK7))))) ) | $spl44),
  inference(forward_demodulation,[],[f6466,f4997])).
fof(f6466,plain,(
  ( ! [X23] : (s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK7) | ~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',sK7),s('type.clos_known.val_approx',X23)))) | s('type.clos_known.val_approx',X23) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(sK7))))),s('type.num.num',sK9('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(sK7))))))),s('type.clos_known.val_approx',X23))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(sK7)))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(sK7))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(sK7)))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(sK7))))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(sK7))))) ) | $spl44),
  inference(forward_demodulation,[],[f6422,f4997])).
fof(f6422,plain,(
  ( ! [X23] : (~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',sK7),s('type.clos_known.val_approx',X23)))) | s('type.clos_known.val_approx',X23) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(sK7))))),s('type.num.num',sK9('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(sK7))))))),s('type.clos_known.val_approx',X23))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(sK7)))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(sK7)))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(sK7))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(sK7)))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(sK7))))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(sK7))))) ) | $spl44),
  inference(superposition,[],[f1756,f4997])).
fof(f6461,plain,(
  ( ! [X21,X20] : (s('type.clos_known.val_approx',sK7) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(sK7))))))) | s('type.clos_known.val_approx',sK7) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(sK7))))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK7) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK15(X20,sK8('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(sK7)))),X21,sK9('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(sK7)))))),s('type.clos_known.val_approx',sK7),s('type.clos_known.val_approx','const.clos_known.Other_0')))) ) | ($spl43 | $spl44)),
  inference(subsumption_resolution,[],[f6460,f4994])).
fof(f6460,plain,(
  ( ! [X21,X20] : (s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK7) | s('type.clos_known.val_approx',sK7) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(sK7))))))) | s('type.clos_known.val_approx',sK7) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(sK7))))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK7) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK15(X20,sK8('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(sK7)))),X21,sK9('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(sK7)))))),s('type.clos_known.val_approx',sK7),s('type.clos_known.val_approx','const.clos_known.Other_0')))) ) | $spl44),
  inference(forward_demodulation,[],[f6459,f4997])).
fof(f6459,plain,(
  ( ! [X21,X20] : (s('type.clos_known.val_approx',sK7) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(sK7))))))) | s('type.clos_known.val_approx',sK7) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(sK7))))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK7) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK15(X20,sK8('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(sK7)))),X21,sK9('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(sK7)))))),s('type.clos_known.val_approx',sK7),s('type.clos_known.val_approx','const.clos_known.Other_0'))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(sK7))))) ) | $spl44),
  inference(forward_demodulation,[],[f6458,f4997])).
fof(f6458,plain,(
  ( ! [X21,X20] : (s('type.clos_known.val_approx',sK7) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(sK7))))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK7) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK15(X20,sK8('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(sK7)))),X21,sK9('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(sK7)))))),s('type.clos_known.val_approx',sK7),s('type.clos_known.val_approx','const.clos_known.Other_0'))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(sK7)))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(sK7))))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(sK7))))) ) | $spl44),
  inference(forward_demodulation,[],[f6457,f4997])).
fof(f6457,plain,(
  ( ! [X21,X20] : (s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK7) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK15(X20,sK8('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(sK7)))),X21,sK9('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(sK7)))))),s('type.clos_known.val_approx',sK7),s('type.clos_known.val_approx','const.clos_known.Other_0'))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(sK7)))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(sK7))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(sK7)))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(sK7))))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(sK7))))) ) | $spl44),
  inference(forward_demodulation,[],[f6456,f4997])).
fof(f6456,plain,(
  ( ! [X21,X20] : (s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK15(X20,sK8('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(sK7)))),X21,sK9('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(sK7)))))),s('type.clos_known.val_approx',sK7),s('type.clos_known.val_approx','const.clos_known.Other_0'))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(sK7)))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(sK7)))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(sK7))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(sK7)))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(sK7))))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(sK7))))) ) | $spl44),
  inference(forward_demodulation,[],[f6420,f6400])).
fof(f6420,plain,(
  ( ! [X21,X20] : (s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X20),s('type.num.num',X21))),s('type.clos_known.val_approx',sK7))) = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,sK15(X20,sK8('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(sK7)))),X21,sK9('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(sK7)))))),s('type.clos_known.val_approx',sK7),s('type.clos_known.val_approx','const.clos_known.Other_0'))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(sK7)))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(sK7)))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(sK7))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(sK7)))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(sK7))))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(sK7))))) ) | $spl44),
  inference(superposition,[],[f1752,f4997])).
fof(f6454,plain,(
  ( ! [X19] : (s('type.clos_known.val_approx',sK7) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(sK7))))))) | s('type.clos_known.val_approx',sK7) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(sK7))))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK7) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X19))),s('type.clos_known.val_approx',sK7)))) ) | ($spl43 | $spl44)),
  inference(subsumption_resolution,[],[f6453,f4994])).
fof(f6453,plain,(
  ( ! [X19] : (s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK7) | s('type.clos_known.val_approx',sK7) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(sK7))))))) | s('type.clos_known.val_approx',sK7) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(sK7))))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK7) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X19))),s('type.clos_known.val_approx',sK7)))) ) | $spl44),
  inference(forward_demodulation,[],[f6452,f4997])).
fof(f6452,plain,(
  ( ! [X19] : (s('type.clos_known.val_approx',sK7) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(sK7))))))) | s('type.clos_known.val_approx',sK7) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(sK7))))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK7) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X19))),s('type.clos_known.val_approx',sK7))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(sK7))))) ) | $spl44),
  inference(forward_demodulation,[],[f6451,f4997])).
fof(f6451,plain,(
  ( ! [X19] : (s('type.clos_known.val_approx',sK7) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(sK7))))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK7) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X19))),s('type.clos_known.val_approx',sK7))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(sK7)))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(sK7))))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(sK7))))) ) | $spl44),
  inference(forward_demodulation,[],[f6450,f4997])).
fof(f6450,plain,(
  ( ! [X19] : (s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK7) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X19))),s('type.clos_known.val_approx',sK7))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(sK7)))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(sK7))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(sK7)))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(sK7))))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(sK7))))) ) | $spl44),
  inference(forward_demodulation,[],[f6419,f4997])).
fof(f6419,plain,(
  ( ! [X19] : (s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X19))),s('type.clos_known.val_approx',sK7))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(sK7)))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(sK7)))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(sK7))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(sK7)))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(sK7))))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(sK7))))) ) | $spl44),
  inference(superposition,[],[f1751,f4997])).
fof(f6448,plain,(
  ( ! [X18] : (s('type.clos_known.val_approx',sK7) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(sK7))))))) | s('type.clos_known.val_approx',sK7) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(sK7))))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK7) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK7),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X18)))))) ) | ($spl43 | $spl44)),
  inference(subsumption_resolution,[],[f6447,f4994])).
fof(f6447,plain,(
  ( ! [X18] : (s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK7) | s('type.clos_known.val_approx',sK7) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(sK7))))))) | s('type.clos_known.val_approx',sK7) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(sK7))))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK7) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK7),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X18)))))) ) | $spl44),
  inference(forward_demodulation,[],[f6446,f4997])).
fof(f6446,plain,(
  ( ! [X18] : (s('type.clos_known.val_approx',sK7) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(sK7))))))) | s('type.clos_known.val_approx',sK7) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(sK7))))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK7) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK7),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X18))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(sK7))))) ) | $spl44),
  inference(forward_demodulation,[],[f6445,f4997])).
fof(f6445,plain,(
  ( ! [X18] : (s('type.clos_known.val_approx',sK7) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(sK7))))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK7) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK7),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X18))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(sK7)))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(sK7))))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(sK7))))) ) | $spl44),
  inference(forward_demodulation,[],[f6444,f4997])).
fof(f6444,plain,(
  ( ! [X18] : (s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK7) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK7),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X18))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(sK7)))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(sK7))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(sK7)))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(sK7))))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(sK7))))) ) | $spl44),
  inference(forward_demodulation,[],[f6418,f4997])).
fof(f6418,plain,(
  ( ! [X18] : (s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK7),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X18))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(sK7)))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(sK7)))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(sK7))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(sK7)))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(sK7))))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(sK7))))) ) | $spl44),
  inference(superposition,[],[f1750,f4997])).
fof(f6403,plain,(
  ( ! [X7] : (s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK7),s('type.clos_known.val_approx',X7))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X7) | s('type.clos_known.val_approx',X7) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(X7)))) | s('type.clos_known.val_approx',X7) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(X7)))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X7)) ) | $spl44),
  inference(superposition,[],[f1751,f4997])).
fof(f6402,plain,(
  ( ! [X6] : (s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X6),s('type.clos_known.val_approx',sK7))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X6) | s('type.clos_known.val_approx',X6) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(X6)))) | s('type.clos_known.val_approx',X6) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(X6)))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X6)) ) | $spl44),
  inference(superposition,[],[f1750,f4997])).
fof(f6401,plain,(
  ( ! [X4,X5] : (s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK7),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X4),s('type.num.num',X5)))))) ) | $spl44),
  inference(superposition,[],[f355,f4997])).
fof(f6399,plain,(
  ( ! [X1] : (s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X1))),s('type.clos_known.val_approx',sK7)))) ) | $spl44),
  inference(superposition,[],[f317,f4997])).
fof(f6398,plain,(
  ( ! [X0] : (s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK7),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X0)))))) ) | $spl44),
  inference(superposition,[],[f316,f4997])).
fof(f6397,plain,(
  s('type.clos_known.val_approx',sK7) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK7),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) | $spl44),
  inference(superposition,[],[f260,f4997])).
fof(f6395,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx',sK7))) | $spl44),
  inference(superposition,[],[f257,f4997])).
fof(f6471,plain,(
  s('type.clos_known.val_approx',sK7) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(sK7))))))) | s('type.clos_known.val_approx',sK7) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(sK7))))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK7) | ($spl43 | $spl44)),
  inference(global_subsumption,[],[f244,f245,f247,f248,f254,f255,f256,f257,f258,f259,f260,f261,f262,f270,f269,f314,f315,f316,f317,f318,f319,f323,f320,f332,f331,f409,f345,f352,f353,f354,f355,f362,f361,f360,f359,f358,f357,f356,f366,f365,f364,f363,f370,f369,f368,f367,f374,f373,f372,f371,f378,f377,f376,f375,f385,f384,f383,f400,f381,f380,f379,f389,f388,f387,f386,f393,f392,f391,f390,f411,f412,f413,f414,f416,f418,f419,f421,f423,f424,f425,f426,f428,f429,f431,f453,f454,f457,f460,f464,f487,f510,f508,f507,f504,f501,f500,f497,f496,f495,f494,f493,f492,f491,f490,f489,f518,f565,f583,f581,f605,f601,f668,f688,f698,f704,f713,f723,f722,f721,f720,f749,f750,f751,f752,f753,f754,f771,f785,f793,f797,f832,f839,f844,f854,f859,f872,f883,f893,f902,f906,f915,f945,f934,f928,f925,f952,f995,f985,f984,f1052,f1090,f1228,f1225,f1224,f1221,f1218,f1217,f1216,f1215,f1213,f1212,f1211,f1207,f1206,f1203,f1200,f1197,f1194,f1193,f1185,f1161,f1156,f1154,f1152,f1150,f1148,f1147,f1146,f1145,f1142,f1139,f1131,f1128,f1125,f1122,f1114,f1111,f1109,f1107,f1105,f1103,f1102,f1099,f1098,f1097,f1096,f1376,f1375,f1374,f1373,f1372,f1464,f1473,f1471,f1494,f1499,f1518,f1515,f1540,f1608,f1629,f1671,f1745,f1746,f1747,f1748,f1749,f1750,f1751,f1935,f1931,f1930,f1926,f1922,f1921,f1920,f1919,f1918,f1916,f1915,f1914,f1909,f1908,f1904,f1899,f1898,f1890,f1889,f1880,f1848,f1847,f1845,f1843,f1841,f1839,f1838,f1837,f1836,f1828,f1827,f1818,f1817,f1809,f1808,f1799,f1798,f1796,f1794,f1792,f1790,f1788,f1786,f1784,f1782,f1780,f1779,f1776,f1775,f1774,f1773,f2214,f2210,f2209,f2205,f2201,f2200,f2199,f2198,f2197,f2195,f2194,f2193,f2188,f2187,f2183,f2178,f2177,f2169,f2168,f2159,f2126,f2125,f2123,f2121,f2119,f2117,f2116,f2115,f2114,f2106,f2105,f2096,f2095,f2087,f2086,f2077,f2076,f2074,f2072,f2070,f2068,f2066,f2064,f2062,f2060,f2059,f2058,f2055,f2054,f2052,f2449,f2445,f2444,f2440,f2436,f2435,f2434,f2433,f2432,f2430,f2429,f2428,f2423,f2422,f2418,f2413,f2412,f2404,f2403,f2394,f2361,f2360,f2358,f2356,f2354,f2352,f2351,f2350,f2349,f2341,f2340,f2331,f2330,f2322,f2321,f2312,f2311,f2309,f2307,f2305,f2303,f2301,f2299,f2297,f2295,f2293,f2292,f2289,f2288,f2287,f2286,f2683,f2679,f2678,f2674,f2670,f2669,f2668,f2667,f2666,f2664,f2663,f2662,f2657,f2656,f2652,f2647,f2646,f2638,f2637,f2628,f2595,f2594,f2592,f2590,f2588,f2586,f2585,f2584,f2583,f2575,f2574,f2565,f2564,f2556,f2555,f2546,f2545,f2543,f2541,f2539,f2537,f2535,f2533,f2531,f2529,f2527,f2526,f2523,f2522,f2521,f2520,f2926,f2922,f2921,f2917,f2913,f2912,f2911,f2910,f2909,f2907,f2906,f2905,f2900,f2899,f2895,f2890,f2889,f2881,f2880,f2871,f2838,f2837,f2835,f2833,f2831,f2829,f2828,f2827,f2826,f2818,f2817,f2808,f2807,f2799,f2798,f2789,f2788,f2786,f2784,f2782,f2780,f2778,f2776,f2774,f2772,f2770,f2769,f2766,f2765,f2764,f2763,f3047,f3107,f3149,f3404,f3409,f3412,f3415,f3418,f3421,f3424,f3427,f3430,f3433,f3435,f3436,f3437,f3438,f3439,f3440,f3441,f3442,f3443,f3444,f3445,f3446,f3447,f3448,f3450,f3451,f3452,f3453,f3208,f3459,f3462,f3464,f3466,f3468,f3470,f3472,f3474,f3476,f3478,f1752,f2746,f1292,f3205,f3104,f399,f398,f397,f396,f3203,f3102,f410,f350,f349,f3201,f3099,f348,f347,f346,f2929,f3449,f1759,f1758,f1757,f1756,f1440,f329,f328,f3108,f3209,f1725,f1696,f1672,f1634,f1633,f408,f274,f273,f4356,f4362,f4591,f4587,f4586,f4582,f4578,f4577,f4576,f4575,f4574,f4572,f4571,f4570,f4565,f4564,f4560,f4555,f4554,f4546,f4545,f4536,f4501,f4500,f4498,f4495,f4493,f4492,f4491,f4490,f4489,f4481,f4480,f4471,f4470,f4462,f4461,f4452,f4451,f4449,f4447,f4445,f4443,f4441,f4439,f4437,f4435,f4433,f4432,f4429,f4428,f4427,f4426,f4711,f4734,f4758,f4759,f4760,f4761,f4763,f4764,f4765,f4767,f4768,f4769,f4771,f4772,f4773,f4835,f4836,f4837,f4838,f4839,f4854,f4855,f4869,f4886,f4890,f4891,f4892,f4893,f4894,f4895,f4902,f4906,f4907,f4908,f4909,f4910,f4911,f4946,f4977,f4981,f4950,f4985,f4989,f4993,f4972,f4971,f4959,f4960,f4961,f4962,f4963,f4964,f4702,f4573,f4535,f4499,f4497,f4496,f4494,f4128,f4036,f3004,f2908,f2870,f2836,f2834,f2832,f2830,f2665,f2627,f2593,f2591,f2589,f2587,f2431,f2393,f2359,f2357,f2355,f2353,f2196,f2158,f2124,f2122,f2120,f2118,f1917,f1879,f1846,f1844,f1842,f1840,f1630,f1628,f1611,f1439,f1293,f1214,f1180,f1155,f1153,f1151,f1149,f1056,f1054,f1033,f999,f996,f992,f940,f938,f937,f772,f615,f614,f602,f598,f591,f590,f582,f580,f509,f479,f439,f432,f430,f427,f422,f420,f417,f415,f4997,f4994,f5267,f5290,f5294,f5271,f5298,f5302,f5306,f5279,f5280,f5281,f5282,f5283,f5284,f5336,f5360,f5364,f5340,f5368,f5372,f5376,f5348,f5349,f5350,f5351,f5352,f5353,f5384,f5385,f5386,f5390,f5391,f5392,f5393,f5394,f5395,f5396,f5397,f5398,f5418,f5429,f5458,f5462,f5466,f5433,f5470,f5474,f5478,f5437,f5439,f5445,f5446,f5447,f5448,f5449,f5450,f5500,f5512,f5544,f5548,f5552,f5516,f5556,f5560,f5564,f5520,f5530,f5531,f5532,f5533,f5534,f5535,f5587,f5628,f5599,f5632,f5636,f5603,f5640,f5644,f5648,f5608,f5613,f5614,f5615,f5616,f5617,f5618,f5671,f5716,f5684,f5720,f5724,f5688,f5728,f5732,f5736,f5700,f5701,f5702,f5703,f5704,f5705,f5782,f5783,f5784,f5785,f5786,f5787,f5788,f5789,f5790,f5791,f5792,f5793,f5794,f5799,f5803,f5811,f5876,f5880,f5824,f5884,f5888,f5892,f5828,f5829,f5896,f5900,f5904,f5833,f5905,f5906,f5907,f5837,f5908,f5845,f5926,f5934,f5858,f5862,f5863,f5947,f5957,f6003,f6004,f6005,f5961,f6006,f5969,f6024,f6032,f6033,f5982,f6041,f5986,f5987,f5992,f5995,f6059,f6061,f6064,f6068,f6076,f6121,f6126,f6089,f6131,f6135,f6139,f6093,f6094,f6143,f6147,f6151,f6098,f6102,f6103,f6104,f6105,f6106,f6107,f6108,f6109,f6110,f6111,f6112,f6113,f6114,f6115,f6116,f6117,f6165,f6166,f6167,f6168,f6169,f6176,f6180,f6185,f6189,f6193,f6194,f6198,f6199,f6203,f6211,f6265,f6269,f6224,f6273,f6277,f6281,f6228,f6229,f6285,f6289,f6293,f6233,f6294,f6304,f6350,f6351,f6352,f6308,f6353,f6355,f6316,f6371,f6379,f6380,f6329,f6388,f6333,f6334,f6338,f6342,f6395,f6397,f6398,f6399,f6400,f6401,f6402,f6403,f6439,f6448,f6449,f6454,f6455,f6461,f6462,f6464,f6470])).
fof(f6464,plain,(
  ( ! [X22] : (s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK7) | ~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',X22),s('type.clos_known.val_approx',sK7)))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X22) | s('type.clos_known.val_approx',X22) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(X22)))) | s('type.clos_known.val_approx',X22) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(X22)))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X22)) ) | $spl44),
  inference(forward_demodulation,[],[f6463,f4997])).
fof(f6463,plain,(
  ( ! [X22] : (s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(sK7)))) | ~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',X22),s('type.clos_known.val_approx',sK7)))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X22) | s('type.clos_known.val_approx',X22) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(X22)))) | s('type.clos_known.val_approx',X22) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(X22)))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X22)) ) | $spl44),
  inference(forward_demodulation,[],[f6421,f354])).
fof(f6421,plain,(
  ( ! [X22] : (~p(s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',X22),s('type.clos_known.val_approx',sK7)))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(sK7)))) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8(X22)),s('type.num.num',sK9(X22)))),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(sK7)))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X22) | s('type.clos_known.val_approx',X22) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(X22)))) | s('type.clos_known.val_approx',X22) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(X22)))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X22)) ) | $spl44),
  inference(superposition,[],[f1756,f4997])).
fof(f6462,plain,(
  s('type.clos_known.val_approx',sK7) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(sK7))))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK7) | s('type.clos_known.val_approx',sK7) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(sK7))))))) | ($spl43 | $spl44)),
  inference(global_subsumption,[],[f244,f245,f247,f248,f254,f255,f256,f257,f258,f259,f260,f261,f262,f270,f269,f314,f315,f316,f317,f318,f319,f323,f320,f332,f331,f409,f345,f352,f353,f354,f355,f362,f361,f360,f359,f358,f357,f356,f366,f365,f364,f363,f370,f369,f368,f367,f374,f373,f372,f371,f378,f377,f376,f375,f385,f384,f383,f400,f381,f380,f379,f389,f388,f387,f386,f393,f392,f391,f390,f411,f412,f413,f414,f416,f418,f419,f421,f423,f424,f425,f426,f428,f429,f431,f453,f454,f457,f460,f464,f487,f510,f508,f507,f504,f501,f500,f497,f496,f495,f494,f493,f492,f491,f490,f489,f518,f565,f583,f581,f605,f601,f668,f688,f698,f704,f713,f723,f722,f721,f720,f749,f750,f751,f752,f753,f754,f771,f785,f793,f797,f832,f839,f844,f854,f859,f872,f883,f893,f902,f906,f915,f945,f934,f928,f925,f952,f995,f985,f984,f1052,f1090,f1228,f1225,f1224,f1221,f1218,f1217,f1216,f1215,f1213,f1212,f1211,f1207,f1206,f1203,f1200,f1197,f1194,f1193,f1185,f1161,f1156,f1154,f1152,f1150,f1148,f1147,f1146,f1145,f1142,f1139,f1131,f1128,f1125,f1122,f1114,f1111,f1109,f1107,f1105,f1103,f1102,f1099,f1098,f1097,f1096,f1376,f1375,f1374,f1373,f1372,f1464,f1473,f1471,f1494,f1499,f1518,f1515,f1540,f1608,f1629,f1671,f1745,f1746,f1747,f1748,f1749,f1750,f1751,f1935,f1931,f1930,f1926,f1922,f1921,f1920,f1919,f1918,f1916,f1915,f1914,f1909,f1908,f1904,f1899,f1898,f1890,f1889,f1880,f1848,f1847,f1845,f1843,f1841,f1839,f1838,f1837,f1836,f1828,f1827,f1818,f1817,f1809,f1808,f1799,f1798,f1796,f1794,f1792,f1790,f1788,f1786,f1784,f1782,f1780,f1779,f1776,f1775,f1774,f1773,f2214,f2210,f2209,f2205,f2201,f2200,f2199,f2198,f2197,f2195,f2194,f2193,f2188,f2187,f2183,f2178,f2177,f2169,f2168,f2159,f2126,f2125,f2123,f2121,f2119,f2117,f2116,f2115,f2114,f2106,f2105,f2096,f2095,f2087,f2086,f2077,f2076,f2074,f2072,f2070,f2068,f2066,f2064,f2062,f2060,f2059,f2058,f2055,f2054,f2052,f2449,f2445,f2444,f2440,f2436,f2435,f2434,f2433,f2432,f2430,f2429,f2428,f2423,f2422,f2418,f2413,f2412,f2404,f2403,f2394,f2361,f2360,f2358,f2356,f2354,f2352,f2351,f2350,f2349,f2341,f2340,f2331,f2330,f2322,f2321,f2312,f2311,f2309,f2307,f2305,f2303,f2301,f2299,f2297,f2295,f2293,f2292,f2289,f2288,f2287,f2286,f2683,f2679,f2678,f2674,f2670,f2669,f2668,f2667,f2666,f2664,f2663,f2662,f2657,f2656,f2652,f2647,f2646,f2638,f2637,f2628,f2595,f2594,f2592,f2590,f2588,f2586,f2585,f2584,f2583,f2575,f2574,f2565,f2564,f2556,f2555,f2546,f2545,f2543,f2541,f2539,f2537,f2535,f2533,f2531,f2529,f2527,f2526,f2523,f2522,f2521,f2520,f2926,f2922,f2921,f2917,f2913,f2912,f2911,f2910,f2909,f2907,f2906,f2905,f2900,f2899,f2895,f2890,f2889,f2881,f2880,f2871,f2838,f2837,f2835,f2833,f2831,f2829,f2828,f2827,f2826,f2818,f2817,f2808,f2807,f2799,f2798,f2789,f2788,f2786,f2784,f2782,f2780,f2778,f2776,f2774,f2772,f2770,f2769,f2766,f2765,f2764,f2763,f3047,f3107,f3149,f3404,f3409,f3412,f3415,f3418,f3421,f3424,f3427,f3430,f3433,f3435,f3436,f3437,f3438,f3439,f3440,f3441,f3442,f3443,f3444,f3445,f3446,f3447,f3448,f3450,f3451,f3452,f3453,f3208,f3459,f3462,f3464,f3466,f3468,f3470,f3472,f3474,f3476,f3478,f1752,f2746,f1292,f3205,f3104,f399,f398,f397,f396,f3203,f3102,f410,f350,f349,f3201,f3099,f348,f347,f346,f2929,f3449,f1759,f1758,f1757,f1756,f1440,f329,f328,f3108,f3209,f1725,f1696,f1672,f1634,f1633,f408,f274,f273,f4356,f4362,f4591,f4587,f4586,f4582,f4578,f4577,f4576,f4575,f4574,f4572,f4571,f4570,f4565,f4564,f4560,f4555,f4554,f4546,f4545,f4536,f4501,f4500,f4498,f4495,f4493,f4492,f4491,f4490,f4489,f4481,f4480,f4471,f4470,f4462,f4461,f4452,f4451,f4449,f4447,f4445,f4443,f4441,f4439,f4437,f4435,f4433,f4432,f4429,f4428,f4427,f4426,f4711,f4734,f4758,f4759,f4760,f4761,f4763,f4764,f4765,f4767,f4768,f4769,f4771,f4772,f4773,f4835,f4836,f4837,f4838,f4839,f4854,f4855,f4869,f4886,f4890,f4891,f4892,f4893,f4894,f4895,f4902,f4906,f4907,f4908,f4909,f4910,f4911,f4946,f4977,f4981,f4950,f4985,f4989,f4993,f4972,f4971,f4959,f4960,f4961,f4962,f4963,f4964,f4702,f4573,f4535,f4499,f4497,f4496,f4494,f4128,f4036,f3004,f2908,f2870,f2836,f2834,f2832,f2830,f2665,f2627,f2593,f2591,f2589,f2587,f2431,f2393,f2359,f2357,f2355,f2353,f2196,f2158,f2124,f2122,f2120,f2118,f1917,f1879,f1846,f1844,f1842,f1840,f1630,f1628,f1611,f1439,f1293,f1214,f1180,f1155,f1153,f1151,f1149,f1056,f1054,f1033,f999,f996,f992,f940,f938,f937,f772,f615,f614,f602,f598,f591,f590,f582,f580,f509,f479,f439,f432,f430,f427,f422,f420,f417,f415,f4997,f4994,f5267,f5290,f5294,f5271,f5298,f5302,f5306,f5279,f5280,f5281,f5282,f5283,f5284,f5336,f5360,f5364,f5340,f5368,f5372,f5376,f5348,f5349,f5350,f5351,f5352,f5353,f5384,f5385,f5386,f5390,f5391,f5392,f5393,f5394,f5395,f5396,f5397,f5398,f5418,f5429,f5458,f5462,f5466,f5433,f5470,f5474,f5478,f5437,f5439,f5445,f5446,f5447,f5448,f5449,f5450,f5500,f5512,f5544,f5548,f5552,f5516,f5556,f5560,f5564,f5520,f5530,f5531,f5532,f5533,f5534,f5535,f5587,f5628,f5599,f5632,f5636,f5603,f5640,f5644,f5648,f5608,f5613,f5614,f5615,f5616,f5617,f5618,f5671,f5716,f5684,f5720,f5724,f5688,f5728,f5732,f5736,f5700,f5701,f5702,f5703,f5704,f5705,f5782,f5783,f5784,f5785,f5786,f5787,f5788,f5789,f5790,f5791,f5792,f5793,f5794,f5799,f5803,f5811,f5876,f5880,f5824,f5884,f5888,f5892,f5828,f5829,f5896,f5900,f5904,f5833,f5905,f5906,f5907,f5837,f5908,f5845,f5926,f5934,f5858,f5862,f5863,f5947,f5957,f6003,f6004,f6005,f5961,f6006,f5969,f6024,f6032,f6033,f5982,f6041,f5986,f5987,f5992,f5995,f6059,f6061,f6064,f6068,f6076,f6121,f6126,f6089,f6131,f6135,f6139,f6093,f6094,f6143,f6147,f6151,f6098,f6102,f6103,f6104,f6105,f6106,f6107,f6108,f6109,f6110,f6111,f6112,f6113,f6114,f6115,f6116,f6117,f6165,f6166,f6167,f6168,f6169,f6176,f6180,f6185,f6189,f6193,f6194,f6198,f6199,f6203,f6211,f6265,f6269,f6224,f6273,f6277,f6281,f6228,f6229,f6285,f6289,f6293,f6233,f6294,f6304,f6350,f6351,f6352,f6308,f6353,f6355,f6316,f6371,f6379,f6380,f6329,f6388,f6333,f6334,f6338,f6342,f6395,f6397,f6398,f6399,f6400,f6401,f6402,f6403,f6439,f6448,f6449,f6454,f6455,f6461])).
fof(f6455,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK7) | s('type.clos_known.val_approx',sK7) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(sK7))))))) | s('type.clos_known.val_approx',sK7) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(sK7))))))) | ($spl43 | $spl44)),
  inference(global_subsumption,[],[f244,f245,f247,f248,f254,f255,f256,f257,f258,f259,f260,f261,f262,f270,f269,f314,f315,f316,f317,f318,f319,f323,f320,f332,f331,f409,f345,f352,f353,f354,f355,f362,f361,f360,f359,f358,f357,f356,f366,f365,f364,f363,f370,f369,f368,f367,f374,f373,f372,f371,f378,f377,f376,f375,f385,f384,f383,f400,f381,f380,f379,f389,f388,f387,f386,f393,f392,f391,f390,f411,f412,f413,f414,f416,f418,f419,f421,f423,f424,f425,f426,f428,f429,f431,f453,f454,f457,f460,f464,f487,f510,f508,f507,f504,f501,f500,f497,f496,f495,f494,f493,f492,f491,f490,f489,f518,f565,f583,f581,f605,f601,f668,f688,f698,f704,f713,f723,f722,f721,f720,f749,f750,f751,f752,f753,f754,f771,f785,f793,f797,f832,f839,f844,f854,f859,f872,f883,f893,f902,f906,f915,f945,f934,f928,f925,f952,f995,f985,f984,f1052,f1090,f1228,f1225,f1224,f1221,f1218,f1217,f1216,f1215,f1213,f1212,f1211,f1207,f1206,f1203,f1200,f1197,f1194,f1193,f1185,f1161,f1156,f1154,f1152,f1150,f1148,f1147,f1146,f1145,f1142,f1139,f1131,f1128,f1125,f1122,f1114,f1111,f1109,f1107,f1105,f1103,f1102,f1099,f1098,f1097,f1096,f1376,f1375,f1374,f1373,f1372,f1464,f1473,f1471,f1494,f1499,f1518,f1515,f1540,f1608,f1629,f1671,f1745,f1746,f1747,f1748,f1749,f1750,f1751,f1935,f1931,f1930,f1926,f1922,f1921,f1920,f1919,f1918,f1916,f1915,f1914,f1909,f1908,f1904,f1899,f1898,f1890,f1889,f1880,f1848,f1847,f1845,f1843,f1841,f1839,f1838,f1837,f1836,f1828,f1827,f1818,f1817,f1809,f1808,f1799,f1798,f1796,f1794,f1792,f1790,f1788,f1786,f1784,f1782,f1780,f1779,f1776,f1775,f1774,f1773,f2214,f2210,f2209,f2205,f2201,f2200,f2199,f2198,f2197,f2195,f2194,f2193,f2188,f2187,f2183,f2178,f2177,f2169,f2168,f2159,f2126,f2125,f2123,f2121,f2119,f2117,f2116,f2115,f2114,f2106,f2105,f2096,f2095,f2087,f2086,f2077,f2076,f2074,f2072,f2070,f2068,f2066,f2064,f2062,f2060,f2059,f2058,f2055,f2054,f2052,f2449,f2445,f2444,f2440,f2436,f2435,f2434,f2433,f2432,f2430,f2429,f2428,f2423,f2422,f2418,f2413,f2412,f2404,f2403,f2394,f2361,f2360,f2358,f2356,f2354,f2352,f2351,f2350,f2349,f2341,f2340,f2331,f2330,f2322,f2321,f2312,f2311,f2309,f2307,f2305,f2303,f2301,f2299,f2297,f2295,f2293,f2292,f2289,f2288,f2287,f2286,f2683,f2679,f2678,f2674,f2670,f2669,f2668,f2667,f2666,f2664,f2663,f2662,f2657,f2656,f2652,f2647,f2646,f2638,f2637,f2628,f2595,f2594,f2592,f2590,f2588,f2586,f2585,f2584,f2583,f2575,f2574,f2565,f2564,f2556,f2555,f2546,f2545,f2543,f2541,f2539,f2537,f2535,f2533,f2531,f2529,f2527,f2526,f2523,f2522,f2521,f2520,f2926,f2922,f2921,f2917,f2913,f2912,f2911,f2910,f2909,f2907,f2906,f2905,f2900,f2899,f2895,f2890,f2889,f2881,f2880,f2871,f2838,f2837,f2835,f2833,f2831,f2829,f2828,f2827,f2826,f2818,f2817,f2808,f2807,f2799,f2798,f2789,f2788,f2786,f2784,f2782,f2780,f2778,f2776,f2774,f2772,f2770,f2769,f2766,f2765,f2764,f2763,f3047,f3107,f3149,f3404,f3409,f3412,f3415,f3418,f3421,f3424,f3427,f3430,f3433,f3435,f3436,f3437,f3438,f3439,f3440,f3441,f3442,f3443,f3444,f3445,f3446,f3447,f3448,f3450,f3451,f3452,f3453,f3208,f3459,f3462,f3464,f3466,f3468,f3470,f3472,f3474,f3476,f3478,f1752,f2746,f1292,f3205,f3104,f399,f398,f397,f396,f3203,f3102,f410,f350,f349,f3201,f3099,f348,f347,f346,f2929,f3449,f1759,f1758,f1757,f1756,f1440,f329,f328,f3108,f3209,f1725,f1696,f1672,f1634,f1633,f408,f274,f273,f4356,f4362,f4591,f4587,f4586,f4582,f4578,f4577,f4576,f4575,f4574,f4572,f4571,f4570,f4565,f4564,f4560,f4555,f4554,f4546,f4545,f4536,f4501,f4500,f4498,f4495,f4493,f4492,f4491,f4490,f4489,f4481,f4480,f4471,f4470,f4462,f4461,f4452,f4451,f4449,f4447,f4445,f4443,f4441,f4439,f4437,f4435,f4433,f4432,f4429,f4428,f4427,f4426,f4711,f4734,f4758,f4759,f4760,f4761,f4763,f4764,f4765,f4767,f4768,f4769,f4771,f4772,f4773,f4835,f4836,f4837,f4838,f4839,f4854,f4855,f4869,f4886,f4890,f4891,f4892,f4893,f4894,f4895,f4902,f4906,f4907,f4908,f4909,f4910,f4911,f4946,f4977,f4981,f4950,f4985,f4989,f4993,f4972,f4971,f4959,f4960,f4961,f4962,f4963,f4964,f4702,f4573,f4535,f4499,f4497,f4496,f4494,f4128,f4036,f3004,f2908,f2870,f2836,f2834,f2832,f2830,f2665,f2627,f2593,f2591,f2589,f2587,f2431,f2393,f2359,f2357,f2355,f2353,f2196,f2158,f2124,f2122,f2120,f2118,f1917,f1879,f1846,f1844,f1842,f1840,f1630,f1628,f1611,f1439,f1293,f1214,f1180,f1155,f1153,f1151,f1149,f1056,f1054,f1033,f999,f996,f992,f940,f938,f937,f772,f615,f614,f602,f598,f591,f590,f582,f580,f509,f479,f439,f432,f430,f427,f422,f420,f417,f415,f4997,f4994,f5267,f5290,f5294,f5271,f5298,f5302,f5306,f5279,f5280,f5281,f5282,f5283,f5284,f5336,f5360,f5364,f5340,f5368,f5372,f5376,f5348,f5349,f5350,f5351,f5352,f5353,f5384,f5385,f5386,f5390,f5391,f5392,f5393,f5394,f5395,f5396,f5397,f5398,f5418,f5429,f5458,f5462,f5466,f5433,f5470,f5474,f5478,f5437,f5439,f5445,f5446,f5447,f5448,f5449,f5450,f5500,f5512,f5544,f5548,f5552,f5516,f5556,f5560,f5564,f5520,f5530,f5531,f5532,f5533,f5534,f5535,f5587,f5628,f5599,f5632,f5636,f5603,f5640,f5644,f5648,f5608,f5613,f5614,f5615,f5616,f5617,f5618,f5671,f5716,f5684,f5720,f5724,f5688,f5728,f5732,f5736,f5700,f5701,f5702,f5703,f5704,f5705,f5782,f5783,f5784,f5785,f5786,f5787,f5788,f5789,f5790,f5791,f5792,f5793,f5794,f5799,f5803,f5811,f5876,f5880,f5824,f5884,f5888,f5892,f5828,f5829,f5896,f5900,f5904,f5833,f5905,f5906,f5907,f5837,f5908,f5845,f5926,f5934,f5858,f5862,f5863,f5947,f5957,f6003,f6004,f6005,f5961,f6006,f5969,f6024,f6032,f6033,f5982,f6041,f5986,f5987,f5992,f5995,f6059,f6061,f6064,f6068,f6076,f6121,f6126,f6089,f6131,f6135,f6139,f6093,f6094,f6143,f6147,f6151,f6098,f6102,f6103,f6104,f6105,f6106,f6107,f6108,f6109,f6110,f6111,f6112,f6113,f6114,f6115,f6116,f6117,f6165,f6166,f6167,f6168,f6169,f6176,f6180,f6185,f6189,f6193,f6194,f6198,f6199,f6203,f6211,f6265,f6269,f6224,f6273,f6277,f6281,f6228,f6229,f6285,f6289,f6293,f6233,f6294,f6304,f6350,f6351,f6352,f6308,f6353,f6355,f6316,f6371,f6379,f6380,f6329,f6388,f6333,f6334,f6338,f6342,f6395,f6397,f6398,f6399,f6400,f6401,f6402,f6403,f6439,f6448,f6449,f6454])).
fof(f6449,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK7) | s('type.clos_known.val_approx',sK7) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(sK7))))))) | s('type.clos_known.val_approx',sK7) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(sK7))))))) | ($spl43 | $spl44)),
  inference(global_subsumption,[],[f244,f245,f247,f248,f254,f255,f256,f257,f258,f259,f260,f261,f262,f270,f269,f314,f315,f316,f317,f318,f319,f323,f320,f332,f331,f409,f345,f352,f353,f354,f355,f362,f361,f360,f359,f358,f357,f356,f366,f365,f364,f363,f370,f369,f368,f367,f374,f373,f372,f371,f378,f377,f376,f375,f385,f384,f383,f400,f381,f380,f379,f389,f388,f387,f386,f393,f392,f391,f390,f411,f412,f413,f414,f416,f418,f419,f421,f423,f424,f425,f426,f428,f429,f431,f453,f454,f457,f460,f464,f487,f510,f508,f507,f504,f501,f500,f497,f496,f495,f494,f493,f492,f491,f490,f489,f518,f565,f583,f581,f605,f601,f668,f688,f698,f704,f713,f723,f722,f721,f720,f749,f750,f751,f752,f753,f754,f771,f785,f793,f797,f832,f839,f844,f854,f859,f872,f883,f893,f902,f906,f915,f945,f934,f928,f925,f952,f995,f985,f984,f1052,f1090,f1228,f1225,f1224,f1221,f1218,f1217,f1216,f1215,f1213,f1212,f1211,f1207,f1206,f1203,f1200,f1197,f1194,f1193,f1185,f1161,f1156,f1154,f1152,f1150,f1148,f1147,f1146,f1145,f1142,f1139,f1131,f1128,f1125,f1122,f1114,f1111,f1109,f1107,f1105,f1103,f1102,f1099,f1098,f1097,f1096,f1376,f1375,f1374,f1373,f1372,f1464,f1473,f1471,f1494,f1499,f1518,f1515,f1540,f1608,f1629,f1671,f1745,f1746,f1747,f1748,f1749,f1750,f1751,f1935,f1931,f1930,f1926,f1922,f1921,f1920,f1919,f1918,f1916,f1915,f1914,f1909,f1908,f1904,f1899,f1898,f1890,f1889,f1880,f1848,f1847,f1845,f1843,f1841,f1839,f1838,f1837,f1836,f1828,f1827,f1818,f1817,f1809,f1808,f1799,f1798,f1796,f1794,f1792,f1790,f1788,f1786,f1784,f1782,f1780,f1779,f1776,f1775,f1774,f1773,f2214,f2210,f2209,f2205,f2201,f2200,f2199,f2198,f2197,f2195,f2194,f2193,f2188,f2187,f2183,f2178,f2177,f2169,f2168,f2159,f2126,f2125,f2123,f2121,f2119,f2117,f2116,f2115,f2114,f2106,f2105,f2096,f2095,f2087,f2086,f2077,f2076,f2074,f2072,f2070,f2068,f2066,f2064,f2062,f2060,f2059,f2058,f2055,f2054,f2052,f2449,f2445,f2444,f2440,f2436,f2435,f2434,f2433,f2432,f2430,f2429,f2428,f2423,f2422,f2418,f2413,f2412,f2404,f2403,f2394,f2361,f2360,f2358,f2356,f2354,f2352,f2351,f2350,f2349,f2341,f2340,f2331,f2330,f2322,f2321,f2312,f2311,f2309,f2307,f2305,f2303,f2301,f2299,f2297,f2295,f2293,f2292,f2289,f2288,f2287,f2286,f2683,f2679,f2678,f2674,f2670,f2669,f2668,f2667,f2666,f2664,f2663,f2662,f2657,f2656,f2652,f2647,f2646,f2638,f2637,f2628,f2595,f2594,f2592,f2590,f2588,f2586,f2585,f2584,f2583,f2575,f2574,f2565,f2564,f2556,f2555,f2546,f2545,f2543,f2541,f2539,f2537,f2535,f2533,f2531,f2529,f2527,f2526,f2523,f2522,f2521,f2520,f2926,f2922,f2921,f2917,f2913,f2912,f2911,f2910,f2909,f2907,f2906,f2905,f2900,f2899,f2895,f2890,f2889,f2881,f2880,f2871,f2838,f2837,f2835,f2833,f2831,f2829,f2828,f2827,f2826,f2818,f2817,f2808,f2807,f2799,f2798,f2789,f2788,f2786,f2784,f2782,f2780,f2778,f2776,f2774,f2772,f2770,f2769,f2766,f2765,f2764,f2763,f3047,f3107,f3149,f3404,f3409,f3412,f3415,f3418,f3421,f3424,f3427,f3430,f3433,f3435,f3436,f3437,f3438,f3439,f3440,f3441,f3442,f3443,f3444,f3445,f3446,f3447,f3448,f3450,f3451,f3452,f3453,f3208,f3459,f3462,f3464,f3466,f3468,f3470,f3472,f3474,f3476,f3478,f1752,f2746,f1292,f3205,f3104,f399,f398,f397,f396,f3203,f3102,f410,f350,f349,f3201,f3099,f348,f347,f346,f2929,f3449,f1759,f1758,f1757,f1756,f1440,f329,f328,f3108,f3209,f1725,f1696,f1672,f1634,f1633,f408,f274,f273,f4356,f4362,f4591,f4587,f4586,f4582,f4578,f4577,f4576,f4575,f4574,f4572,f4571,f4570,f4565,f4564,f4560,f4555,f4554,f4546,f4545,f4536,f4501,f4500,f4498,f4495,f4493,f4492,f4491,f4490,f4489,f4481,f4480,f4471,f4470,f4462,f4461,f4452,f4451,f4449,f4447,f4445,f4443,f4441,f4439,f4437,f4435,f4433,f4432,f4429,f4428,f4427,f4426,f4711,f4734,f4758,f4759,f4760,f4761,f4763,f4764,f4765,f4767,f4768,f4769,f4771,f4772,f4773,f4835,f4836,f4837,f4838,f4839,f4854,f4855,f4869,f4886,f4890,f4891,f4892,f4893,f4894,f4895,f4902,f4906,f4907,f4908,f4909,f4910,f4911,f4946,f4977,f4981,f4950,f4985,f4989,f4993,f4972,f4971,f4959,f4960,f4961,f4962,f4963,f4964,f4702,f4573,f4535,f4499,f4497,f4496,f4494,f4128,f4036,f3004,f2908,f2870,f2836,f2834,f2832,f2830,f2665,f2627,f2593,f2591,f2589,f2587,f2431,f2393,f2359,f2357,f2355,f2353,f2196,f2158,f2124,f2122,f2120,f2118,f1917,f1879,f1846,f1844,f1842,f1840,f1630,f1628,f1611,f1439,f1293,f1214,f1180,f1155,f1153,f1151,f1149,f1056,f1054,f1033,f999,f996,f992,f940,f938,f937,f772,f615,f614,f602,f598,f591,f590,f582,f580,f509,f479,f439,f432,f430,f427,f422,f420,f417,f415,f4997,f4994,f5267,f5290,f5294,f5271,f5298,f5302,f5306,f5279,f5280,f5281,f5282,f5283,f5284,f5336,f5360,f5364,f5340,f5368,f5372,f5376,f5348,f5349,f5350,f5351,f5352,f5353,f5384,f5385,f5386,f5390,f5391,f5392,f5393,f5394,f5395,f5396,f5397,f5398,f5418,f5429,f5458,f5462,f5466,f5433,f5470,f5474,f5478,f5437,f5439,f5445,f5446,f5447,f5448,f5449,f5450,f5500,f5512,f5544,f5548,f5552,f5516,f5556,f5560,f5564,f5520,f5530,f5531,f5532,f5533,f5534,f5535,f5587,f5628,f5599,f5632,f5636,f5603,f5640,f5644,f5648,f5608,f5613,f5614,f5615,f5616,f5617,f5618,f5671,f5716,f5684,f5720,f5724,f5688,f5728,f5732,f5736,f5700,f5701,f5702,f5703,f5704,f5705,f5782,f5783,f5784,f5785,f5786,f5787,f5788,f5789,f5790,f5791,f5792,f5793,f5794,f5799,f5803,f5811,f5876,f5880,f5824,f5884,f5888,f5892,f5828,f5829,f5896,f5900,f5904,f5833,f5905,f5906,f5907,f5837,f5908,f5845,f5926,f5934,f5858,f5862,f5863,f5947,f5957,f6003,f6004,f6005,f5961,f6006,f5969,f6024,f6032,f6033,f5982,f6041,f5986,f5987,f5992,f5995,f6059,f6061,f6064,f6068,f6076,f6121,f6126,f6089,f6131,f6135,f6139,f6093,f6094,f6143,f6147,f6151,f6098,f6102,f6103,f6104,f6105,f6106,f6107,f6108,f6109,f6110,f6111,f6112,f6113,f6114,f6115,f6116,f6117,f6165,f6166,f6167,f6168,f6169,f6176,f6180,f6185,f6189,f6193,f6194,f6198,f6199,f6203,f6211,f6265,f6269,f6224,f6273,f6277,f6281,f6228,f6229,f6285,f6289,f6293,f6233,f6294,f6304,f6350,f6351,f6352,f6308,f6353,f6355,f6316,f6371,f6379,f6380,f6329,f6388,f6333,f6334,f6338,f6342,f6395,f6397,f6398,f6399,f6400,f6401,f6402,f6403,f6439,f6448])).
fof(f6439,plain,(
  s('type.clos_known.val_approx',sK7) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(sK7))))))) | s('type.clos_known.val_approx',sK7) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(sK7))))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK7) | ($spl43 | $spl44)),
  inference(subsumption_resolution,[],[f6438,f4994])).
fof(f6438,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK7) | s('type.clos_known.val_approx',sK7) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(sK7))))))) | s('type.clos_known.val_approx',sK7) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(sK7))))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK7) | $spl44),
  inference(forward_demodulation,[],[f6437,f4997])).
fof(f6437,plain,(
  s('type.clos_known.val_approx',sK7) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(sK7))))))) | s('type.clos_known.val_approx',sK7) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(sK7))))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK7) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(sK7)))) | $spl44),
  inference(forward_demodulation,[],[f6436,f4997])).
fof(f6436,plain,(
  s('type.clos_known.val_approx',sK7) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(sK7))))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK7) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(sK7)))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(sK7))))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(sK7)))) | $spl44),
  inference(forward_demodulation,[],[f6435,f4997])).
fof(f6435,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK7) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(sK7)))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(sK7))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(sK7)))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(sK7))))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(sK7)))) | $spl44),
  inference(forward_demodulation,[],[f6434,f4997])).
fof(f6434,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(sK7)))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(sK7)))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(sK7))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(sK7)))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(sK7))))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(sK7)))) | $spl44),
  inference(subsumption_resolution,[],[f6413,f1439])).
fof(f6413,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK7),s('type.clos_known.val_approx','const.clos_known.Other_0'))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(sK7)))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(sK7)))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(sK7))))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(sK7)))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(sK7))))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(sK7)))) | $spl44),
  inference(superposition,[],[f1745,f4997])).
fof(f6427,plain,(
  $false | $spl44),
  inference(subsumption_resolution,[],[f6396,f1439])).
fof(f6396,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',sK7),s('type.clos_known.val_approx','const.clos_known.Other_0'))) | $spl44),
  inference(superposition,[],[f258,f4997])).
fof(f5098,plain,(
  $false | $spl42),
  inference(subsumption_resolution,[],[f5080,f1817])).
fof(f5080,plain,(
  ( ! [X0,X1] : (~sP3(sK15(X0,X0,X1,X1),'T_0','const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx','const.clos_known.Other_0')))) ) | $spl42),
  inference(backward_demodulation,[],[f4995,f4702])).
fof(f5097,plain,(
  $false | $spl42),
  inference(subsumption_resolution,[],[f5073,f1817])).
fof(f5073,plain,(
  ~sP3('const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx','const.clos_known.Other_0')),'T_0','const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx','const.clos_known.Other_0'))) | $spl42),
  inference(backward_demodulation,[],[f4995,f4128])).
fof(f5096,plain,(
  $false | $spl42),
  inference(subsumption_resolution,[],[f5072,f1817])).
fof(f5072,plain,(
  ( ! [X0] : (~sP3('const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X0)),'T_0','const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx','const.clos_known.Other_0')))) ) | $spl42),
  inference(backward_demodulation,[],[f4995,f4036])).
fof(f5095,plain,(
  $false | $spl42),
  inference(subsumption_resolution,[],[f5045,f1915])).
fof(f5045,plain,(
  ( ! [X0] : (sP6('const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx','const.clos_known.Other_0')),'F_0','const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X0)))) ) | $spl42),
  inference(backward_demodulation,[],[f4995,f1879])).
fof(f5094,plain,(
  $false | $spl42),
  inference(subsumption_resolution,[],[f5041,f1780])).
fof(f5041,plain,(
  ( ! [X0] : (sP4('const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',X0)),'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx','const.clos_known.Other_0')),'F_0')) ) | $spl42),
  inference(backward_demodulation,[],[f4995,f1840])).
fof(f5093,plain,(
  $false | $spl42),
  inference(subsumption_resolution,[],[f5037,f254])).
fof(f5037,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') != s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx','const.clos_known.Other_0'))) | $spl42),
  inference(backward_demodulation,[],[f4995,f1439])).
fof(f5092,plain,(
  $false | $spl42),
  inference(subsumption_resolution,[],[f5036,f1817])).
fof(f5036,plain,(
  ( ! [X0] : (~sP3(sK14(X0,X0),'T_0','const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx','const.clos_known.Other_0')))) ) | $spl42),
  inference(backward_demodulation,[],[f4995,f1293])).
fof(f5091,plain,(
  $false | $spl42),
  inference(subsumption_resolution,[],[f5032,f1786])).
fof(f5032,plain,(
  ( ! [X0] : (~sP4(sK14(X0,X0),'T_0','const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx','const.clos_known.Other_0')))) ) | $spl42),
  inference(backward_demodulation,[],[f4995,f1153])).
fof(f5090,plain,(
  $false | $spl42),
  inference(subsumption_resolution,[],[f5028,f1838])).
fof(f5028,plain,(
  ~sP1('F_0','const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx','const.clos_known.Other_0')),'F_0') | $spl42),
  inference(backward_demodulation,[],[f4995,f1054])).
fof(f5089,plain,(
  $false | $spl42),
  inference(subsumption_resolution,[],[f5025,f1839])).
fof(f5025,plain,(
  ~sP1('const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx','const.clos_known.Other_0')),'F_0','F_0') | $spl42),
  inference(backward_demodulation,[],[f4995,f996])).
fof(f5088,plain,(
  $false | $spl42),
  inference(subsumption_resolution,[],[f5023,f1817])).
fof(f5023,plain,(
  ~sP3('T_0','T_0','const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx','const.clos_known.Other_0'))) | $spl42),
  inference(backward_demodulation,[],[f4995,f940])).
fof(f5087,plain,(
  $false | $spl42),
  inference(subsumption_resolution,[],[f5021,f1847])).
fof(f5021,plain,(
  sP4('const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx','const.clos_known.Other_0')),'F_0','T_0') | $spl42),
  inference(backward_demodulation,[],[f4995,f937])).
fof(f5086,plain,(
  $false | $spl42),
  inference(subsumption_resolution,[],[f5020,f1914])).
fof(f5020,plain,(
  sP6('const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx','const.clos_known.Other_0')),'F_0','T_0') | $spl42),
  inference(backward_demodulation,[],[f4995,f772])).
fof(f5085,plain,(
  $false | $spl42),
  inference(subsumption_resolution,[],[f5017,f1782])).
fof(f5017,plain,(
  ~sP4('T_0','T_0','const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx','const.clos_known.Other_0'))) | $spl42),
  inference(backward_demodulation,[],[f4995,f602])).
fof(f5084,plain,(
  $false | $spl42),
  inference(subsumption_resolution,[],[f5014,f1779])).
fof(f5014,plain,(
  sP4('T_0','const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx','const.clos_known.Other_0')),'F_0') | $spl42),
  inference(backward_demodulation,[],[f4995,f590])).
fof(f5083,plain,(
  $false | $spl42),
  inference(subsumption_resolution,[],[f5082,f431])).
fof(f5082,plain,(
  s(bool,'T_0') = s(bool,'F_0') | $spl42),
  inference(forward_demodulation,[],[f5009,f1773])).
fof(f5009,plain,(
  s(bool,'F_0') = s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx','const.clos_known.Other_0'))) | $spl42),
  inference(backward_demodulation,[],[f4995,f439])).
fof(f5081,plain,(
  $false | $spl42),
  inference(subsumption_resolution,[],[f5008,f1773])).
fof(f5008,plain,(
  s(bool,'T_0') != s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx','const.clos_known.Other_0'))) | $spl42),
  inference(backward_demodulation,[],[f4995,f432])).
fof(f4995,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK7) | $spl42),
  inference(cnf_transformation,[],[f4995_D])).
fof(f4995_D,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK7) <=> ~$spl42),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl42])])).
fof(f4997,plain,(
  s('type.clos_known.val_approx',sK7) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(sK7)))) | $spl44),
  inference(cnf_transformation,[],[f4997_D])).
fof(f4997_D,plain,(
  s('type.clos_known.val_approx',sK7) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(sK7)))) <=> ~$spl44),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl44])])).
fof(f4999,plain,(
  s('type.clos_known.val_approx',sK7) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(sK7)))) | $spl46),
  inference(cnf_transformation,[],[f4999_D])).
fof(f4999_D,plain,(
  s('type.clos_known.val_approx',sK7) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(sK7)))) <=> ~$spl46),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl46])])).
fof(f4971,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK7) | s('type.clos_known.val_approx',sK7) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(sK7)))) | s('type.clos_known.val_approx',sK7) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(sK7)))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK7)),
  inference(trivial_inequality_removal,[],[f4955])).
fof(f4955,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') != s('type.clos_known.val_approx','const.clos_known.Other_0') | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK7) | s('type.clos_known.val_approx',sK7) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(sK7)))) | s('type.clos_known.val_approx',sK7) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(sK7)))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK7)),
  inference(superposition,[],[f1439,f1745])).
fof(f4865,plain,(
  ( ! [X2,X0,X1] : (s(fun(bool,bool),X0) = s(fun(bool,bool),X1) | s(bool,'T_0') = s(bool,X2) | s(bool,X2) = s(bool,sK12(X0,X1,bool,bool)) | s(bool,'T_0') = s(bool,g(s(bool,sK12(X0,X1,bool,bool))))) ) | $spl38),
  inference(cnf_transformation,[],[f4865_D])).
fof(f4865_D,plain,(
  ( ! [X2,X0,X1] : (s(fun(bool,bool),X0) = s(fun(bool,bool),X1) | s(bool,'T_0') = s(bool,X2) | s(bool,X2) = s(bool,sK12(X0,X1,bool,bool)) | s(bool,'T_0') = s(bool,g(s(bool,sK12(X0,X1,bool,bool))))) ) <=> ~$spl38),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl38])])).
fof(f4867,plain,(
  s(bool,'F_0') != s(bool,f(s(bool,'T_0'))) | $spl41),
  inference(cnf_transformation,[],[f4867_D])).
fof(f4867_D,plain,(
  s(bool,'F_0') != s(bool,f(s(bool,'T_0'))) <=> ~$spl41),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl41])])).
fof(f4855,plain,(
  ( ! [X4,X5,X3] : (s(bool,'F_0') != s(bool,f(s(bool,'T_0'))) | s(fun(bool,bool),X3) = s(fun(bool,bool),X4) | s(bool,'T_0') = s(bool,g(s(bool,sK12(X3,X4,bool,bool)))) | s(bool,X5) = s(bool,sK12(X3,X4,bool,bool)) | s(bool,'T_0') = s(bool,X5)) )),
  inference(superposition,[],[f1634,f518])).
fof(f4854,plain,(
  ( ! [X2,X0,X1] : (s(bool,'F_0') != s(bool,f(s(bool,'T_0'))) | s(fun(bool,bool),X0) = s(fun(bool,bool),X1) | s(bool,'T_0') = s(bool,g(s(bool,sK12(X0,X1,bool,bool)))) | s(bool,X2) = s(bool,sK12(X0,X1,bool,bool)) | s(bool,'T_0') = s(bool,X2)) )),
  inference(superposition,[],[f1634,f518])).
fof(f4845,plain,(
  s(bool,'T_0') = s(bool,g(s(bool,'F_0'))) | $spl32),
  inference(cnf_transformation,[],[f4845_D])).
fof(f4845_D,plain,(
  s(bool,'T_0') = s(bool,g(s(bool,'F_0'))) <=> ~$spl32),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl32])])).
fof(f4841,plain,(
  ( ! [X0,X1] : (s(fun(bool,bool),X0) = s(fun(bool,bool),X1) | s(bool,'T_0') = s(bool,sK12(X0,X1,bool,bool))) ) | $spl28),
  inference(cnf_transformation,[],[f4841_D])).
fof(f4841_D,plain,(
  ( ! [X0,X1] : (s(fun(bool,bool),X0) = s(fun(bool,bool),X1) | s(bool,'T_0') = s(bool,sK12(X0,X1,bool,bool))) ) <=> ~$spl28),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl28])])).
fof(f4848,plain,(
  s(bool,'F_0') != s(bool,f(s(bool,'F_0'))) | $spl37),
  inference(cnf_transformation,[],[f4848_D])).
fof(f4848_D,plain,(
  s(bool,'F_0') != s(bool,f(s(bool,'F_0'))) <=> ~$spl37),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl37])])).
fof(f4839,plain,(
  ( ! [X12,X13] : (s(bool,'F_0') != s(bool,f(s(bool,'F_0'))) | s(fun(bool,bool),X12) = s(fun(bool,bool),X13) | s(bool,'T_0') = s(bool,sK12(X12,X13,bool,bool)) | s(bool,'T_0') = s(bool,g(s(bool,'F_0')))) )),
  inference(superposition,[],[f1633,f261])).
fof(f4846,plain,(
  ( ! [X6] : (s(bool,X6) != s(bool,f(s(bool,'F_0'))) | s(bool,'T_0') = s(bool,X6)) ) | $spl34),
  inference(cnf_transformation,[],[f4846_D])).
fof(f4846_D,plain,(
  ( ! [X6] : (s(bool,X6) != s(bool,f(s(bool,'F_0'))) | s(bool,'T_0') = s(bool,X6)) ) <=> ~$spl34),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl34])])).
fof(f4838,plain,(
  ( ! [X10,X11,X9] : (s(bool,X9) != s(bool,f(s(bool,'F_0'))) | s(fun(bool,bool),X10) = s(fun(bool,bool),X11) | s(bool,'T_0') = s(bool,sK12(X10,X11,bool,bool)) | s(bool,'T_0') = s(bool,X9) | s(bool,'T_0') = s(bool,g(s(bool,'F_0')))) )),
  inference(superposition,[],[f1633,f518])).
fof(f4837,plain,(
  ( ! [X6,X8,X7] : (s(bool,X6) != s(bool,f(s(bool,'F_0'))) | s(fun(bool,bool),X7) = s(fun(bool,bool),X8) | s(bool,'T_0') = s(bool,sK12(X7,X8,bool,bool)) | s(bool,'T_0') = s(bool,g(s(bool,'F_0'))) | s(bool,'T_0') = s(bool,X6)) )),
  inference(superposition,[],[f1633,f518])).
fof(f4840,plain,(
  ( ! [X2] : (s(bool,X2) = s(bool,g(s(bool,'F_0'))) | s(bool,'T_0') = s(bool,X2)) ) | $spl26),
  inference(cnf_transformation,[],[f4840_D])).
fof(f4840_D,plain,(
  ( ! [X2] : (s(bool,X2) = s(bool,g(s(bool,'F_0'))) | s(bool,'T_0') = s(bool,X2)) ) <=> ~$spl26),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl26])])).
fof(f4843,plain,(
  s(bool,'T_0') != s(bool,f(s(bool,'F_0'))) | $spl31),
  inference(cnf_transformation,[],[f4843_D])).
fof(f4843_D,plain,(
  s(bool,'T_0') != s(bool,f(s(bool,'F_0'))) <=> ~$spl31),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl31])])).
fof(f4836,plain,(
  ( ! [X4,X5,X3] : (s(bool,'T_0') != s(bool,f(s(bool,'F_0'))) | s(fun(bool,bool),X3) = s(fun(bool,bool),X4) | s(bool,'T_0') = s(bool,sK12(X3,X4,bool,bool)) | s(bool,X5) = s(bool,g(s(bool,'F_0'))) | s(bool,'T_0') = s(bool,X5)) )),
  inference(superposition,[],[f1633,f518])).
fof(f4835,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') != s(bool,f(s(bool,'F_0'))) | s(fun(bool,bool),X0) = s(fun(bool,bool),X1) | s(bool,'T_0') = s(bool,sK12(X0,X1,bool,bool)) | s(bool,X2) = s(bool,g(s(bool,'F_0'))) | s(bool,'T_0') = s(bool,X2)) )),
  inference(superposition,[],[f1633,f518])).
fof(f4825,plain,(
  s(bool,'T_0') = s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) | $spl22),
  inference(cnf_transformation,[],[f4825_D])).
fof(f4825_D,plain,(
  s(bool,'T_0') = s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) <=> ~$spl22),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl22])])).
fof(f4827,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') != s('type.clos_known.val_approx','const.clos_known.Impossible_0') | $spl25),
  inference(cnf_transformation,[],[f4827_D])).
fof(f4827_D,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') != s('type.clos_known.val_approx','const.clos_known.Impossible_0') <=> ~$spl25),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl25])])).
fof(f4761,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') != s('type.clos_known.val_approx','const.clos_known.Impossible_0') | s(bool,'T_0') = s(bool,'const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))),
  inference(superposition,[],[f1440,f247])).
fof(f3540,plain,(
  $false | $spl2),
  inference(global_subsumption,[],[f244,f245,f247,f248,f408,f254,f255,f256,f257,f258,f259,f260,f261,f262,f270,f269,f274,f273,f314,f315,f316,f317,f318,f319,f323,f320,f329,f328,f332,f331,f409,f345,f348,f347,f346,f410,f350,f349,f352,f353,f354,f355,f362,f361,f360,f359,f358,f357,f356,f366,f365,f364,f363,f370,f369,f368,f367,f374,f373,f372,f371,f378,f377,f376,f375,f385,f384,f383,f400,f381,f380,f379,f389,f388,f387,f386,f393,f392,f391,f390,f399,f398,f397,f396,f411,f412,f413,f415,f414,f417,f416,f418,f420,f419,f422,f421,f423,f424,f425,f427,f426,f428,f430,f429,f432,f431,f439,f453,f454,f457,f460,f464,f479,f487,f510,f509,f508,f507,f504,f501,f500,f497,f496,f495,f494,f493,f492,f491,f490,f489,f518,f565,f583,f582,f581,f580,f591,f590,f605,f602,f601,f598,f615,f614,f668,f688,f698,f704,f713,f723,f722,f721,f720,f749,f750,f751,f752,f753,f754,f772,f771,f785,f793,f797,f832,f839,f844,f854,f859,f872,f883,f893,f902,f906,f915,f945,f940,f938,f937,f934,f928,f925,f952,f999,f996,f995,f992,f985,f984,f1056,f1054,f1052,f1033,f1090,f1228,f1225,f1224,f1221,f1218,f1217,f1216,f1215,f1214,f1213,f1212,f1211,f1207,f1206,f1203,f1200,f1197,f1194,f1193,f1185,f1180,f1161,f1156,f1155,f1154,f1153,f1152,f1151,f1150,f1149,f1148,f1147,f1146,f1145,f1142,f1139,f1131,f1128,f1125,f1122,f1114,f1111,f1109,f1107,f1105,f1103,f1102,f1099,f1098,f1097,f1096,f1292,f1293,f1376,f1375,f1374,f1373,f1372,f1439,f1440,f1464,f1473,f1471,f1494,f1499,f1518,f1515,f1540,f1611,f1608,f1630,f1629,f1628,f1633,f1634,f1671,f1672,f1696,f1725,f1745,f1746,f1747,f1748,f1749,f1750,f1751,f1752,f1756,f1757,f1758,f1759,f1935,f1931,f1930,f1926,f1922,f1921,f1920,f1919,f1918,f1917,f1916,f1915,f1914,f1909,f1908,f1904,f1899,f1898,f1890,f1889,f1880,f1879,f1848,f1847,f1846,f1845,f1844,f1843,f1842,f1841,f1840,f1839,f1838,f1837,f1836,f1828,f1827,f1818,f1817,f1809,f1808,f1799,f1798,f1796,f1794,f1792,f1790,f1788,f1786,f1784,f1782,f1780,f1779,f1776,f1775,f1774,f1773,f2214,f2210,f2209,f2205,f2201,f2200,f2199,f2198,f2197,f2196,f2195,f2194,f2193,f2188,f2187,f2183,f2178,f2177,f2169,f2168,f2159,f2158,f2126,f2125,f2124,f2123,f2122,f2121,f2120,f2119,f2118,f2117,f2116,f2115,f2114,f2106,f2105,f2096,f2095,f2087,f2086,f2077,f2076,f2074,f2072,f2070,f2068,f2066,f2064,f2062,f2060,f2059,f2058,f2055,f2054,f2052,f2449,f2445,f2444,f2440,f2436,f2435,f2434,f2433,f2432,f2431,f2430,f2429,f2428,f2423,f2422,f2418,f2413,f2412,f2404,f2403,f2394,f2393,f2361,f2360,f2359,f2358,f2357,f2356,f2355,f2354,f2353,f2352,f2351,f2350,f2349,f2341,f2340,f2331,f2330,f2322,f2321,f2312,f2311,f2309,f2307,f2305,f2303,f2301,f2299,f2297,f2295,f2293,f2292,f2289,f2288,f2287,f2286,f2683,f2679,f2678,f2674,f2670,f2669,f2668,f2667,f2666,f2665,f2664,f2663,f2662,f2657,f2656,f2652,f2647,f2646,f2638,f2637,f2628,f2627,f2595,f2594,f2593,f2592,f2591,f2590,f2589,f2588,f2587,f2586,f2585,f2584,f2583,f2575,f2574,f2565,f2564,f2556,f2555,f2546,f2545,f2543,f2541,f2539,f2537,f2535,f2533,f2531,f2529,f2527,f2526,f2523,f2522,f2521,f2520,f2746,f2926,f2922,f2921,f2917,f2913,f2912,f2911,f2910,f2909,f2908,f2907,f2906,f2905,f2900,f2899,f2895,f2890,f2889,f2881,f2880,f2871,f2870,f2838,f2837,f2836,f2835,f2834,f2833,f2832,f2831,f2830,f2829,f2828,f2827,f2826,f2818,f2817,f2808,f2807,f2799,f2798,f2789,f2788,f2786,f2784,f2782,f2780,f2778,f2776,f2774,f2772,f2770,f2769,f2766,f2765,f2764,f2763,f2929,f3004,f3047,f3099,f3102,f3104,f3107,f3108,f3149,f3404,f3409,f3412,f3415,f3418,f3421,f3424,f3427,f3430,f3433,f3435,f3436,f3437,f3438,f3439,f3440,f3441,f3442,f3443,f3444,f3445,f3446,f3447,f3448,f3449,f3201,f3450,f3203,f3451,f3205,f3452,f3453,f3208,f3209,f3459,f3462,f3464,f3466,f3468,f3470,f3472,f3474,f3476,f3478,f3406,f3520,f3523,f3525,f3527,f3529,f3500,f3532,f3504,f3535,f3537,f3509,f3513])).
fof(f3513,plain,(
  ( ! [X12,X13,X11] : (s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,'T_0'),s('type.clos_known.val_approx',X11),s('type.clos_known.val_approx','const.clos_known.Other_0'))) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X12),s('type.num.num',X13))),s('type.clos_known.val_approx',X11))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X11) | s('type.clos_known.val_approx',X11) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(X11)))) | s('type.clos_known.val_approx',X11) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(X11)))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X11)) ) | $spl2),
  inference(backward_demodulation,[],[f3406,f1752])).
fof(f3509,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,'T_0'),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X2),s('type.num.num',X0))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X3),s('type.num.num',X1))),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X2),s('type.num.num',X0)))))) ) | $spl2),
  inference(backward_demodulation,[],[f3406,f399])).
fof(f3537,plain,(
  ( ! [X0,X1] : (s('type.num.num',X0) = s('type.num.num',X1)) ) | $spl2),
  inference(subsumption_resolution,[],[f3507,f245])).
fof(f3507,plain,(
  ( ! [X0,X1] : (~p(s(bool,'T_0')) | s('type.num.num',X0) = s('type.num.num',X1)) ) | $spl2),
  inference(backward_demodulation,[],[f3406,f397])).
fof(f3535,plain,(
  ( ! [X2,X3] : (s('type.num.num',X2) = s('type.num.num',X3)) ) | $spl2),
  inference(subsumption_resolution,[],[f3506,f245])).
fof(f3506,plain,(
  ( ! [X2,X3] : (~p(s(bool,'T_0')) | s('type.num.num',X2) = s('type.num.num',X3)) ) | $spl2),
  inference(backward_demodulation,[],[f3406,f396])).
fof(f3504,plain,(
  ( ! [X0,X1] : (s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X1))),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X0))))) = s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,'T_0'),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP2_3'(s(fun('type.clos_known.val_approx',fun('type.clos_known.val_approx','type.clos_known.val_approx')),'const.clos_known.merge_0'),s('type.list.list'('type.clos_known.val_approx'),X1),s('type.list.list'('type.clos_known.val_approx'),X0))))),s('type.clos_known.val_approx','const.clos_known.Other_0')))) ) | $spl2),
  inference(backward_demodulation,[],[f3406,f410])).
fof(f3532,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.clos_known.val_approx'),X0))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.clos_known.val_approx'),X1)))) ) | $spl2),
  inference(subsumption_resolution,[],[f3502,f245])).
fof(f3502,plain,(
  ( ! [X0,X1] : (~p(s(bool,'T_0')) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.clos_known.val_approx'),X0))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.clos_known.val_approx'),X1)))) ) | $spl2),
  inference(backward_demodulation,[],[f3406,f349])).
fof(f3500,plain,(
  ( ! [X0,X1] : (s('type.clos_known.val_approx','const.bool.COND_3'(s(bool,'T_0'),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X0))),s('type.clos_known.val_approx','const.clos_known.Other_0'))) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X1))),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X0)))))) ) | $spl2),
  inference(backward_demodulation,[],[f3406,f348])).
fof(f3529,plain,(
  ( ! [X0,X1] : (s('type.integer.int',X0) = s('type.integer.int',X1)) ) | $spl2),
  inference(subsumption_resolution,[],[f3498,f245])).
fof(f3498,plain,(
  ( ! [X0,X1] : (~p(s(bool,'T_0')) | s('type.integer.int',X0) = s('type.integer.int',X1)) ) | $spl2),
  inference(backward_demodulation,[],[f3406,f346])).
fof(f3527,plain,(
  ( ! [X21,X22] : (s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8(X21)),s('type.num.num',sK9(X21)))) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X22),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8(X21)),s('type.num.num',sK9(X21)))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X21) | s('type.clos_known.val_approx',X21) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(X21)))) | s('type.clos_known.val_approx',X21) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(X21)))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X21)) ) | $spl2),
  inference(subsumption_resolution,[],[f3493,f245])).
fof(f3493,plain,(
  ( ! [X21,X22] : (~p(s(bool,'T_0')) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8(X21)),s('type.num.num',sK9(X21)))) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X22),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8(X21)),s('type.num.num',sK9(X21)))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X21) | s('type.clos_known.val_approx',X21) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(X21)))) | s('type.clos_known.val_approx',X21) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(X21)))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X21)) ) | $spl2),
  inference(backward_demodulation,[],[f3406,f1757])).
fof(f3525,plain,(
  ( ! [X19,X20] : (s('type.clos_known.val_approx',X20) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8(X19)),s('type.num.num',sK9(X19)))),s('type.clos_known.val_approx',X20))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X19) | s('type.clos_known.val_approx',X19) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(X19)))) | s('type.clos_known.val_approx',X19) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(X19)))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X19)) ) | $spl2),
  inference(subsumption_resolution,[],[f3492,f245])).
fof(f3492,plain,(
  ( ! [X19,X20] : (~p(s(bool,'T_0')) | s('type.clos_known.val_approx',X20) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK8(X19)),s('type.num.num',sK9(X19)))),s('type.clos_known.val_approx',X20))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X19) | s('type.clos_known.val_approx',X19) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK11(X19)))) | s('type.clos_known.val_approx',X19) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK10(X19)))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X19)) ) | $spl2),
  inference(backward_demodulation,[],[f3406,f1756])).
fof(f3523,plain,(
  ( ! [X0,X1] : (s('type.clos_known.val_approx',X1) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X0),s('type.clos_known.val_approx',X1)))) ) | $spl2),
  inference(subsumption_resolution,[],[f3490,f245])).
fof(f3490,plain,(
  ( ! [X0,X1] : (~p(s(bool,'T_0')) | s('type.clos_known.val_approx',X1) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',X0),s('type.clos_known.val_approx',X1)))) ) | $spl2),
  inference(backward_demodulation,[],[f3406,f328])).
fof(f3520,plain,(
  ( ! [X0] : (~p(s(bool,X0))) ) | $spl2),
  inference(subsumption_resolution,[],[f3479,f3406])).
fof(f3479,plain,(
  ( ! [X0] : (s(bool,'T_0') != s(bool,X0) | ~p(s(bool,X0))) ) | $spl2),
  inference(backward_demodulation,[],[f3406,f273])).
fof(f3539,plain,(
  $false | $spl2),
  inference(global_subsumption,[],[f244,f245,f247,f248,f408,f254,f255,f256,f257,f258,f259,f260,f261,f262,f270,f269,f274,f273,f314,f315,f316,f317,f318,f319,f323,f320,f329,f328,f332,f331,f409,f345,f348,f347,f346,f410,f350,f349,f352,f353,f354,f355,f362,f361,f360,f359,f358,f357,f356,f366,f365,f364,f363,f370,f369,f368,f367,f374,f373,f372,f371,f378,f377,f376,f375,f385,f384,f383,f400,f381,f380,f379,f389,f388,f387,f386,f393,f392,f391,f390,f399,f398,f397,f396,f411,f412,f413,f415,f414,f417,f416,f418,f420,f419,f422,f421,f423,f424,f425,f427,f426,f428,f430,f429,f432,f431,f439,f453,f454,f457,f460,f464,f479,f487,f510,f509,f508,f507,f504,f501,f500,f497,f496,f495,f494,f493,f492,f491,f490,f489,f518,f565,f583,f582,f581,f580,f591,f590,f605,f602,f601,f598,f615,f614,f668,f688,f698,f704,f713,f723,f722,f721,f720,f749,f750,f751,f752,f753,f754,f772,f771,f785,f793,f797,f832,f839,f844,f854,f859,f872,f883,f893,f902,f906,f915,f945,f940,f938,f937,f934,f928,f925,f952,f999,f996,f995,f992,f985,f984,f1056,f1054,f1052,f1033,f1090,f1228,f1225,f1224,f1221,f1218,f1217,f1216,f1215,f1214,f1213,f1212,f1211,f1207,f1206,f1203,f1200,f1197,f1194,f1193,f1185,f1180,f1161,f1156,f1155,f1154,f1153,f1152,f1151,f1150,f1149,f1148,f1147,f1146,f1145,f1142,f1139,f1131,f1128,f1125,f1122,f1114,f1111,f1109,f1107,f1105,f1103,f1102,f1099,f1098,f1097,f1096,f1292,f1293,f1376,f1375,f1374,f1373,f1372,f1439,f1440,f1464,f1473,f1471,f1494,f1499,f1518,f1515,f1540,f1611,f1608,f1630,f1629,f1628,f1633,f1634,f1671,f1672,f1696,f1725,f1745,f1746,f1747,f1748,f1749,f1750,f1751,f1752,f1756,f1757,f1758,f1759,f1935,f1931,f1930,f1926,f1922,f1921,f1920,f1919,f1918,f1917,f1916,f1915,f1914,f1909,f1908,f1904,f1899,f1898,f1890,f1889,f1880,f1879,f1848,f1847,f1846,f1845,f1844,f1843,f1842,f1841,f1840,f1839,f1838,f1837,f1836,f1828,f1827,f1818,f1817,f1809,f1808,f1799,f1798,f1796,f1794,f1792,f1790,f1788,f1786,f1784,f1782,f1780,f1779,f1776,f1775,f1774,f1773,f2214,f2210,f2209,f2205,f2201,f2200,f2199,f2198,f2197,f2196,f2195,f2194,f2193,f2188,f2187,f2183,f2178,f2177,f2169,f2168,f2159,f2158,f2126,f2125,f2124,f2123,f2122,f2121,f2120,f2119,f2118,f2117,f2116,f2115,f2114,f2106,f2105,f2096,f2095,f2087,f2086,f2077,f2076,f2074,f2072,f2070,f2068,f2066,f2064,f2062,f2060,f2059,f2058,f2055,f2054,f2052,f2449,f2445,f2444,f2440,f2436,f2435,f2434,f2433,f2432,f2431,f2430,f2429,f2428,f2423,f2422,f2418,f2413,f2412,f2404,f2403,f2394,f2393,f2361,f2360,f2359,f2358,f2357,f2356,f2355,f2354,f2353,f2352,f2351,f2350,f2349,f2341,f2340,f2331,f2330,f2322,f2321,f2312,f2311,f2309,f2307,f2305,f2303,f2301,f2299,f2297,f2295,f2293,f2292,f2289,f2288,f2287,f2286,f2683,f2679,f2678,f2674,f2670,f2669,f2668,f2667,f2666,f2665,f2664,f2663,f2662,f2657,f2656,f2652,f2647,f2646,f2638,f2637,f2628,f2627,f2595,f2594,f2593,f2592,f2591,f2590,f2589,f2588,f2587,f2586,f2585,f2584,f2583,f2575,f2574,f2565,f2564,f2556,f2555,f2546,f2545,f2543,f2541,f2539,f2537,f2535,f2533,f2531,f2529,f2527,f2526,f2523,f2522,f2521,f2520,f2746,f2926,f2922,f2921,f2917,f2913,f2912,f2911,f2910,f2909,f2908,f2907,f2906,f2905,f2900,f2899,f2895,f2890,f2889,f2881,f2880,f2871,f2870,f2838,f2837,f2836,f2835,f2834,f2833,f2832,f2831,f2830,f2829,f2828,f2827,f2826,f2818,f2817,f2808,f2807,f2799,f2798,f2789,f2788,f2786,f2784,f2782,f2780,f2778,f2776,f2774,f2772,f2770,f2769,f2766,f2765,f2764,f2763,f2929,f3004,f3047,f3099,f3102,f3104,f3107,f3108,f3149,f3404,f3409,f3412,f3415,f3418,f3421,f3424,f3427,f3430,f3433,f3435,f3436,f3437,f3438,f3439,f3440,f3441,f3442,f3443,f3444,f3445,f3446,f3447,f3448,f3449,f3201,f3450,f3203,f3451,f3205,f3452,f3453,f3208,f3209,f3459,f3462,f3464,f3466,f3468,f3470,f3472,f3474,f3476,f3478,f3406,f3520,f3523,f3525,f3527,f3529,f3500,f3532,f3504,f3535,f3537,f3509])).
fof(f3538,plain,(
  $false | $spl2),
  inference(global_subsumption,[],[f244,f245,f247,f248,f408,f254,f255,f256,f257,f258,f259,f260,f261,f262,f270,f269,f274,f273,f314,f315,f316,f317,f318,f319,f323,f320,f329,f328,f332,f331,f409,f345,f348,f347,f346,f410,f350,f349,f352,f353,f354,f355,f362,f361,f360,f359,f358,f357,f356,f366,f365,f364,f363,f370,f369,f368,f367,f374,f373,f372,f371,f378,f377,f376,f375,f385,f384,f383,f400,f381,f380,f379,f389,f388,f387,f386,f393,f392,f391,f390,f399,f398,f397,f396,f411,f412,f413,f415,f414,f417,f416,f418,f420,f419,f422,f421,f423,f424,f425,f427,f426,f428,f430,f429,f432,f431,f439,f453,f454,f457,f460,f464,f479,f487,f510,f509,f508,f507,f504,f501,f500,f497,f496,f495,f494,f493,f492,f491,f490,f489,f518,f565,f583,f582,f581,f580,f591,f590,f605,f602,f601,f598,f615,f614,f668,f688,f698,f704,f713,f723,f722,f721,f720,f749,f750,f751,f752,f753,f754,f772,f771,f785,f793,f797,f832,f839,f844,f854,f859,f872,f883,f893,f902,f906,f915,f945,f940,f938,f937,f934,f928,f925,f952,f999,f996,f995,f992,f985,f984,f1056,f1054,f1052,f1033,f1090,f1228,f1225,f1224,f1221,f1218,f1217,f1216,f1215,f1214,f1213,f1212,f1211,f1207,f1206,f1203,f1200,f1197,f1194,f1193,f1185,f1180,f1161,f1156,f1155,f1154,f1153,f1152,f1151,f1150,f1149,f1148,f1147,f1146,f1145,f1142,f1139,f1131,f1128,f1125,f1122,f1114,f1111,f1109,f1107,f1105,f1103,f1102,f1099,f1098,f1097,f1096,f1292,f1293,f1376,f1375,f1374,f1373,f1372,f1439,f1440,f1464,f1473,f1471,f1494,f1499,f1518,f1515,f1540,f1611,f1608,f1630,f1629,f1628,f1633,f1634,f1671,f1672,f1696,f1725,f1745,f1746,f1747,f1748,f1749,f1750,f1751,f1752,f1756,f1757,f1758,f1759,f1935,f1931,f1930,f1926,f1922,f1921,f1920,f1919,f1918,f1917,f1916,f1915,f1914,f1909,f1908,f1904,f1899,f1898,f1890,f1889,f1880,f1879,f1848,f1847,f1846,f1845,f1844,f1843,f1842,f1841,f1840,f1839,f1838,f1837,f1836,f1828,f1827,f1818,f1817,f1809,f1808,f1799,f1798,f1796,f1794,f1792,f1790,f1788,f1786,f1784,f1782,f1780,f1779,f1776,f1775,f1774,f1773,f2214,f2210,f2209,f2205,f2201,f2200,f2199,f2198,f2197,f2196,f2195,f2194,f2193,f2188,f2187,f2183,f2178,f2177,f2169,f2168,f2159,f2158,f2126,f2125,f2124,f2123,f2122,f2121,f2120,f2119,f2118,f2117,f2116,f2115,f2114,f2106,f2105,f2096,f2095,f2087,f2086,f2077,f2076,f2074,f2072,f2070,f2068,f2066,f2064,f2062,f2060,f2059,f2058,f2055,f2054,f2052,f2449,f2445,f2444,f2440,f2436,f2435,f2434,f2433,f2432,f2431,f2430,f2429,f2428,f2423,f2422,f2418,f2413,f2412,f2404,f2403,f2394,f2393,f2361,f2360,f2359,f2358,f2357,f2356,f2355,f2354,f2353,f2352,f2351,f2350,f2349,f2341,f2340,f2331,f2330,f2322,f2321,f2312,f2311,f2309,f2307,f2305,f2303,f2301,f2299,f2297,f2295,f2293,f2292,f2289,f2288,f2287,f2286,f2683,f2679,f2678,f2674,f2670,f2669,f2668,f2667,f2666,f2665,f2664,f2663,f2662,f2657,f2656,f2652,f2647,f2646,f2638,f2637,f2628,f2627,f2595,f2594,f2593,f2592,f2591,f2590,f2589,f2588,f2587,f2586,f2585,f2584,f2583,f2575,f2574,f2565,f2564,f2556,f2555,f2546,f2545,f2543,f2541,f2539,f2537,f2535,f2533,f2531,f2529,f2527,f2526,f2523,f2522,f2521,f2520,f2746,f2926,f2922,f2921,f2917,f2913,f2912,f2911,f2910,f2909,f2908,f2907,f2906,f2905,f2900,f2899,f2895,f2890,f2889,f2881,f2880,f2871,f2870,f2838,f2837,f2836,f2835,f2834,f2833,f2832,f2831,f2830,f2829,f2828,f2827,f2826,f2818,f2817,f2808,f2807,f2799,f2798,f2789,f2788,f2786,f2784,f2782,f2780,f2778,f2776,f2774,f2772,f2770,f2769,f2766,f2765,f2764,f2763,f2929,f3004,f3047,f3099,f3102,f3104,f3107,f3108,f3149,f3404,f3409,f3412,f3415,f3418,f3421,f3424,f3427,f3430,f3433,f3435,f3436,f3437,f3438,f3439,f3440,f3441,f3442,f3443,f3444,f3445,f3446,f3447,f3448,f3449,f3201,f3450,f3203,f3451,f3205,f3452,f3453,f3208,f3209,f3459,f3462,f3464,f3466,f3468,f3470,f3472,f3474,f3476,f3478,f3406,f3520,f3523,f3525,f3527,f3529,f3500,f3532,f3504,f3535,f3537])).
fof(f3536,plain,(
  $false | $spl2),
  inference(global_subsumption,[],[f244,f245,f247,f248,f408,f254,f255,f256,f257,f258,f259,f260,f261,f262,f270,f269,f274,f273,f314,f315,f316,f317,f318,f319,f323,f320,f329,f328,f332,f331,f409,f345,f348,f347,f346,f410,f350,f349,f352,f353,f354,f355,f362,f361,f360,f359,f358,f357,f356,f366,f365,f364,f363,f370,f369,f368,f367,f374,f373,f372,f371,f378,f377,f376,f375,f385,f384,f383,f400,f381,f380,f379,f389,f388,f387,f386,f393,f392,f391,f390,f399,f398,f397,f396,f411,f412,f413,f415,f414,f417,f416,f418,f420,f419,f422,f421,f423,f424,f425,f427,f426,f428,f430,f429,f432,f431,f439,f453,f454,f457,f460,f464,f479,f487,f510,f509,f508,f507,f504,f501,f500,f497,f496,f495,f494,f493,f492,f491,f490,f489,f518,f565,f583,f582,f581,f580,f591,f590,f605,f602,f601,f598,f615,f614,f668,f688,f698,f704,f713,f723,f722,f721,f720,f749,f750,f751,f752,f753,f754,f772,f771,f785,f793,f797,f832,f839,f844,f854,f859,f872,f883,f893,f902,f906,f915,f945,f940,f938,f937,f934,f928,f925,f952,f999,f996,f995,f992,f985,f984,f1056,f1054,f1052,f1033,f1090,f1228,f1225,f1224,f1221,f1218,f1217,f1216,f1215,f1214,f1213,f1212,f1211,f1207,f1206,f1203,f1200,f1197,f1194,f1193,f1185,f1180,f1161,f1156,f1155,f1154,f1153,f1152,f1151,f1150,f1149,f1148,f1147,f1146,f1145,f1142,f1139,f1131,f1128,f1125,f1122,f1114,f1111,f1109,f1107,f1105,f1103,f1102,f1099,f1098,f1097,f1096,f1292,f1293,f1376,f1375,f1374,f1373,f1372,f1439,f1440,f1464,f1473,f1471,f1494,f1499,f1518,f1515,f1540,f1611,f1608,f1630,f1629,f1628,f1633,f1634,f1671,f1672,f1696,f1725,f1745,f1746,f1747,f1748,f1749,f1750,f1751,f1752,f1756,f1757,f1758,f1759,f1935,f1931,f1930,f1926,f1922,f1921,f1920,f1919,f1918,f1917,f1916,f1915,f1914,f1909,f1908,f1904,f1899,f1898,f1890,f1889,f1880,f1879,f1848,f1847,f1846,f1845,f1844,f1843,f1842,f1841,f1840,f1839,f1838,f1837,f1836,f1828,f1827,f1818,f1817,f1809,f1808,f1799,f1798,f1796,f1794,f1792,f1790,f1788,f1786,f1784,f1782,f1780,f1779,f1776,f1775,f1774,f1773,f2214,f2210,f2209,f2205,f2201,f2200,f2199,f2198,f2197,f2196,f2195,f2194,f2193,f2188,f2187,f2183,f2178,f2177,f2169,f2168,f2159,f2158,f2126,f2125,f2124,f2123,f2122,f2121,f2120,f2119,f2118,f2117,f2116,f2115,f2114,f2106,f2105,f2096,f2095,f2087,f2086,f2077,f2076,f2074,f2072,f2070,f2068,f2066,f2064,f2062,f2060,f2059,f2058,f2055,f2054,f2052,f2449,f2445,f2444,f2440,f2436,f2435,f2434,f2433,f2432,f2431,f2430,f2429,f2428,f2423,f2422,f2418,f2413,f2412,f2404,f2403,f2394,f2393,f2361,f2360,f2359,f2358,f2357,f2356,f2355,f2354,f2353,f2352,f2351,f2350,f2349,f2341,f2340,f2331,f2330,f2322,f2321,f2312,f2311,f2309,f2307,f2305,f2303,f2301,f2299,f2297,f2295,f2293,f2292,f2289,f2288,f2287,f2286,f2683,f2679,f2678,f2674,f2670,f2669,f2668,f2667,f2666,f2665,f2664,f2663,f2662,f2657,f2656,f2652,f2647,f2646,f2638,f2637,f2628,f2627,f2595,f2594,f2593,f2592,f2591,f2590,f2589,f2588,f2587,f2586,f2585,f2584,f2583,f2575,f2574,f2565,f2564,f2556,f2555,f2546,f2545,f2543,f2541,f2539,f2537,f2535,f2533,f2531,f2529,f2527,f2526,f2523,f2522,f2521,f2520,f2746,f2926,f2922,f2921,f2917,f2913,f2912,f2911,f2910,f2909,f2908,f2907,f2906,f2905,f2900,f2899,f2895,f2890,f2889,f2881,f2880,f2871,f2870,f2838,f2837,f2836,f2835,f2834,f2833,f2832,f2831,f2830,f2829,f2828,f2827,f2826,f2818,f2817,f2808,f2807,f2799,f2798,f2789,f2788,f2786,f2784,f2782,f2780,f2778,f2776,f2774,f2772,f2770,f2769,f2766,f2765,f2764,f2763,f2929,f3004,f3047,f3099,f3102,f3104,f3107,f3108,f3149,f3404,f3409,f3412,f3415,f3418,f3421,f3424,f3427,f3430,f3433,f3435,f3436,f3437,f3438,f3439,f3440,f3441,f3442,f3443,f3444,f3445,f3446,f3447,f3448,f3449,f3201,f3450,f3203,f3451,f3205,f3452,f3453,f3208,f3209,f3459,f3462,f3464,f3466,f3468,f3470,f3472,f3474,f3476,f3478,f3406,f3520,f3523,f3525,f3527,f3529,f3500,f3532,f3504,f3535])).
fof(f3534,plain,(
  $false | $spl2),
  inference(global_subsumption,[],[f244,f245,f247,f248,f408,f254,f255,f256,f257,f258,f259,f260,f261,f262,f270,f269,f274,f273,f314,f315,f316,f317,f318,f319,f323,f320,f329,f328,f332,f331,f409,f345,f348,f347,f346,f410,f350,f349,f352,f353,f354,f355,f362,f361,f360,f359,f358,f357,f356,f366,f365,f364,f363,f370,f369,f368,f367,f374,f373,f372,f371,f378,f377,f376,f375,f385,f384,f383,f400,f381,f380,f379,f389,f388,f387,f386,f393,f392,f391,f390,f399,f398,f397,f396,f411,f412,f413,f415,f414,f417,f416,f418,f420,f419,f422,f421,f423,f424,f425,f427,f426,f428,f430,f429,f432,f431,f439,f453,f454,f457,f460,f464,f479,f487,f510,f509,f508,f507,f504,f501,f500,f497,f496,f495,f494,f493,f492,f491,f490,f489,f518,f565,f583,f582,f581,f580,f591,f590,f605,f602,f601,f598,f615,f614,f668,f688,f698,f704,f713,f723,f722,f721,f720,f749,f750,f751,f752,f753,f754,f772,f771,f785,f793,f797,f832,f839,f844,f854,f859,f872,f883,f893,f902,f906,f915,f945,f940,f938,f937,f934,f928,f925,f952,f999,f996,f995,f992,f985,f984,f1056,f1054,f1052,f1033,f1090,f1228,f1225,f1224,f1221,f1218,f1217,f1216,f1215,f1214,f1213,f1212,f1211,f1207,f1206,f1203,f1200,f1197,f1194,f1193,f1185,f1180,f1161,f1156,f1155,f1154,f1153,f1152,f1151,f1150,f1149,f1148,f1147,f1146,f1145,f1142,f1139,f1131,f1128,f1125,f1122,f1114,f1111,f1109,f1107,f1105,f1103,f1102,f1099,f1098,f1097,f1096,f1292,f1293,f1376,f1375,f1374,f1373,f1372,f1439,f1440,f1464,f1473,f1471,f1494,f1499,f1518,f1515,f1540,f1611,f1608,f1630,f1629,f1628,f1633,f1634,f1671,f1672,f1696,f1725,f1745,f1746,f1747,f1748,f1749,f1750,f1751,f1752,f1756,f1757,f1758,f1759,f1935,f1931,f1930,f1926,f1922,f1921,f1920,f1919,f1918,f1917,f1916,f1915,f1914,f1909,f1908,f1904,f1899,f1898,f1890,f1889,f1880,f1879,f1848,f1847,f1846,f1845,f1844,f1843,f1842,f1841,f1840,f1839,f1838,f1837,f1836,f1828,f1827,f1818,f1817,f1809,f1808,f1799,f1798,f1796,f1794,f1792,f1790,f1788,f1786,f1784,f1782,f1780,f1779,f1776,f1775,f1774,f1773,f2214,f2210,f2209,f2205,f2201,f2200,f2199,f2198,f2197,f2196,f2195,f2194,f2193,f2188,f2187,f2183,f2178,f2177,f2169,f2168,f2159,f2158,f2126,f2125,f2124,f2123,f2122,f2121,f2120,f2119,f2118,f2117,f2116,f2115,f2114,f2106,f2105,f2096,f2095,f2087,f2086,f2077,f2076,f2074,f2072,f2070,f2068,f2066,f2064,f2062,f2060,f2059,f2058,f2055,f2054,f2052,f2449,f2445,f2444,f2440,f2436,f2435,f2434,f2433,f2432,f2431,f2430,f2429,f2428,f2423,f2422,f2418,f2413,f2412,f2404,f2403,f2394,f2393,f2361,f2360,f2359,f2358,f2357,f2356,f2355,f2354,f2353,f2352,f2351,f2350,f2349,f2341,f2340,f2331,f2330,f2322,f2321,f2312,f2311,f2309,f2307,f2305,f2303,f2301,f2299,f2297,f2295,f2293,f2292,f2289,f2288,f2287,f2286,f2683,f2679,f2678,f2674,f2670,f2669,f2668,f2667,f2666,f2665,f2664,f2663,f2662,f2657,f2656,f2652,f2647,f2646,f2638,f2637,f2628,f2627,f2595,f2594,f2593,f2592,f2591,f2590,f2589,f2588,f2587,f2586,f2585,f2584,f2583,f2575,f2574,f2565,f2564,f2556,f2555,f2546,f2545,f2543,f2541,f2539,f2537,f2535,f2533,f2531,f2529,f2527,f2526,f2523,f2522,f2521,f2520,f2746,f2926,f2922,f2921,f2917,f2913,f2912,f2911,f2910,f2909,f2908,f2907,f2906,f2905,f2900,f2899,f2895,f2890,f2889,f2881,f2880,f2871,f2870,f2838,f2837,f2836,f2835,f2834,f2833,f2832,f2831,f2830,f2829,f2828,f2827,f2826,f2818,f2817,f2808,f2807,f2799,f2798,f2789,f2788,f2786,f2784,f2782,f2780,f2778,f2776,f2774,f2772,f2770,f2769,f2766,f2765,f2764,f2763,f2929,f3004,f3047,f3099,f3102,f3104,f3107,f3108,f3149,f3404,f3409,f3412,f3415,f3418,f3421,f3424,f3427,f3430,f3433,f3435,f3436,f3437,f3438,f3439,f3440,f3441,f3442,f3443,f3444,f3445,f3446,f3447,f3448,f3449,f3201,f3450,f3203,f3451,f3205,f3452,f3453,f3208,f3209,f3459,f3462,f3464,f3466,f3468,f3470,f3472,f3474,f3476,f3478,f3406,f3520,f3523,f3525,f3527,f3529,f3500,f3532,f3504])).
fof(f3533,plain,(
  $false | $spl2),
  inference(global_subsumption,[],[f244,f245,f247,f248,f408,f254,f255,f256,f257,f258,f259,f260,f261,f262,f270,f269,f274,f273,f314,f315,f316,f317,f318,f319,f323,f320,f329,f328,f332,f331,f409,f345,f348,f347,f346,f410,f350,f349,f352,f353,f354,f355,f362,f361,f360,f359,f358,f357,f356,f366,f365,f364,f363,f370,f369,f368,f367,f374,f373,f372,f371,f378,f377,f376,f375,f385,f384,f383,f400,f381,f380,f379,f389,f388,f387,f386,f393,f392,f391,f390,f399,f398,f397,f396,f411,f412,f413,f415,f414,f417,f416,f418,f420,f419,f422,f421,f423,f424,f425,f427,f426,f428,f430,f429,f432,f431,f439,f453,f454,f457,f460,f464,f479,f487,f510,f509,f508,f507,f504,f501,f500,f497,f496,f495,f494,f493,f492,f491,f490,f489,f518,f565,f583,f582,f581,f580,f591,f590,f605,f602,f601,f598,f615,f614,f668,f688,f698,f704,f713,f723,f722,f721,f720,f749,f750,f751,f752,f753,f754,f772,f771,f785,f793,f797,f832,f839,f844,f854,f859,f872,f883,f893,f902,f906,f915,f945,f940,f938,f937,f934,f928,f925,f952,f999,f996,f995,f992,f985,f984,f1056,f1054,f1052,f1033,f1090,f1228,f1225,f1224,f1221,f1218,f1217,f1216,f1215,f1214,f1213,f1212,f1211,f1207,f1206,f1203,f1200,f1197,f1194,f1193,f1185,f1180,f1161,f1156,f1155,f1154,f1153,f1152,f1151,f1150,f1149,f1148,f1147,f1146,f1145,f1142,f1139,f1131,f1128,f1125,f1122,f1114,f1111,f1109,f1107,f1105,f1103,f1102,f1099,f1098,f1097,f1096,f1292,f1293,f1376,f1375,f1374,f1373,f1372,f1439,f1440,f1464,f1473,f1471,f1494,f1499,f1518,f1515,f1540,f1611,f1608,f1630,f1629,f1628,f1633,f1634,f1671,f1672,f1696,f1725,f1745,f1746,f1747,f1748,f1749,f1750,f1751,f1752,f1756,f1757,f1758,f1759,f1935,f1931,f1930,f1926,f1922,f1921,f1920,f1919,f1918,f1917,f1916,f1915,f1914,f1909,f1908,f1904,f1899,f1898,f1890,f1889,f1880,f1879,f1848,f1847,f1846,f1845,f1844,f1843,f1842,f1841,f1840,f1839,f1838,f1837,f1836,f1828,f1827,f1818,f1817,f1809,f1808,f1799,f1798,f1796,f1794,f1792,f1790,f1788,f1786,f1784,f1782,f1780,f1779,f1776,f1775,f1774,f1773,f2214,f2210,f2209,f2205,f2201,f2200,f2199,f2198,f2197,f2196,f2195,f2194,f2193,f2188,f2187,f2183,f2178,f2177,f2169,f2168,f2159,f2158,f2126,f2125,f2124,f2123,f2122,f2121,f2120,f2119,f2118,f2117,f2116,f2115,f2114,f2106,f2105,f2096,f2095,f2087,f2086,f2077,f2076,f2074,f2072,f2070,f2068,f2066,f2064,f2062,f2060,f2059,f2058,f2055,f2054,f2052,f2449,f2445,f2444,f2440,f2436,f2435,f2434,f2433,f2432,f2431,f2430,f2429,f2428,f2423,f2422,f2418,f2413,f2412,f2404,f2403,f2394,f2393,f2361,f2360,f2359,f2358,f2357,f2356,f2355,f2354,f2353,f2352,f2351,f2350,f2349,f2341,f2340,f2331,f2330,f2322,f2321,f2312,f2311,f2309,f2307,f2305,f2303,f2301,f2299,f2297,f2295,f2293,f2292,f2289,f2288,f2287,f2286,f2683,f2679,f2678,f2674,f2670,f2669,f2668,f2667,f2666,f2665,f2664,f2663,f2662,f2657,f2656,f2652,f2647,f2646,f2638,f2637,f2628,f2627,f2595,f2594,f2593,f2592,f2591,f2590,f2589,f2588,f2587,f2586,f2585,f2584,f2583,f2575,f2574,f2565,f2564,f2556,f2555,f2546,f2545,f2543,f2541,f2539,f2537,f2535,f2533,f2531,f2529,f2527,f2526,f2523,f2522,f2521,f2520,f2746,f2926,f2922,f2921,f2917,f2913,f2912,f2911,f2910,f2909,f2908,f2907,f2906,f2905,f2900,f2899,f2895,f2890,f2889,f2881,f2880,f2871,f2870,f2838,f2837,f2836,f2835,f2834,f2833,f2832,f2831,f2830,f2829,f2828,f2827,f2826,f2818,f2817,f2808,f2807,f2799,f2798,f2789,f2788,f2786,f2784,f2782,f2780,f2778,f2776,f2774,f2772,f2770,f2769,f2766,f2765,f2764,f2763,f2929,f3004,f3047,f3099,f3102,f3104,f3107,f3108,f3149,f3404,f3409,f3412,f3415,f3418,f3421,f3424,f3427,f3430,f3433,f3435,f3436,f3437,f3438,f3439,f3440,f3441,f3442,f3443,f3444,f3445,f3446,f3447,f3448,f3449,f3201,f3450,f3203,f3451,f3205,f3452,f3453,f3208,f3209,f3459,f3462,f3464,f3466,f3468,f3470,f3472,f3474,f3476,f3478,f3406,f3520,f3523,f3525,f3527,f3529,f3500,f3532])).
fof(f3531,plain,(
  $false | $spl2),
  inference(global_subsumption,[],[f244,f245,f247,f248,f408,f254,f255,f256,f257,f258,f259,f260,f261,f262,f270,f269,f274,f273,f314,f315,f316,f317,f318,f319,f323,f320,f329,f328,f332,f331,f409,f345,f348,f347,f346,f410,f350,f349,f352,f353,f354,f355,f362,f361,f360,f359,f358,f357,f356,f366,f365,f364,f363,f370,f369,f368,f367,f374,f373,f372,f371,f378,f377,f376,f375,f385,f384,f383,f400,f381,f380,f379,f389,f388,f387,f386,f393,f392,f391,f390,f399,f398,f397,f396,f411,f412,f413,f415,f414,f417,f416,f418,f420,f419,f422,f421,f423,f424,f425,f427,f426,f428,f430,f429,f432,f431,f439,f453,f454,f457,f460,f464,f479,f487,f510,f509,f508,f507,f504,f501,f500,f497,f496,f495,f494,f493,f492,f491,f490,f489,f518,f565,f583,f582,f581,f580,f591,f590,f605,f602,f601,f598,f615,f614,f668,f688,f698,f704,f713,f723,f722,f721,f720,f749,f750,f751,f752,f753,f754,f772,f771,f785,f793,f797,f832,f839,f844,f854,f859,f872,f883,f893,f902,f906,f915,f945,f940,f938,f937,f934,f928,f925,f952,f999,f996,f995,f992,f985,f984,f1056,f1054,f1052,f1033,f1090,f1228,f1225,f1224,f1221,f1218,f1217,f1216,f1215,f1214,f1213,f1212,f1211,f1207,f1206,f1203,f1200,f1197,f1194,f1193,f1185,f1180,f1161,f1156,f1155,f1154,f1153,f1152,f1151,f1150,f1149,f1148,f1147,f1146,f1145,f1142,f1139,f1131,f1128,f1125,f1122,f1114,f1111,f1109,f1107,f1105,f1103,f1102,f1099,f1098,f1097,f1096,f1292,f1293,f1376,f1375,f1374,f1373,f1372,f1439,f1440,f1464,f1473,f1471,f1494,f1499,f1518,f1515,f1540,f1611,f1608,f1630,f1629,f1628,f1633,f1634,f1671,f1672,f1696,f1725,f1745,f1746,f1747,f1748,f1749,f1750,f1751,f1752,f1756,f1757,f1758,f1759,f1935,f1931,f1930,f1926,f1922,f1921,f1920,f1919,f1918,f1917,f1916,f1915,f1914,f1909,f1908,f1904,f1899,f1898,f1890,f1889,f1880,f1879,f1848,f1847,f1846,f1845,f1844,f1843,f1842,f1841,f1840,f1839,f1838,f1837,f1836,f1828,f1827,f1818,f1817,f1809,f1808,f1799,f1798,f1796,f1794,f1792,f1790,f1788,f1786,f1784,f1782,f1780,f1779,f1776,f1775,f1774,f1773,f2214,f2210,f2209,f2205,f2201,f2200,f2199,f2198,f2197,f2196,f2195,f2194,f2193,f2188,f2187,f2183,f2178,f2177,f2169,f2168,f2159,f2158,f2126,f2125,f2124,f2123,f2122,f2121,f2120,f2119,f2118,f2117,f2116,f2115,f2114,f2106,f2105,f2096,f2095,f2087,f2086,f2077,f2076,f2074,f2072,f2070,f2068,f2066,f2064,f2062,f2060,f2059,f2058,f2055,f2054,f2052,f2449,f2445,f2444,f2440,f2436,f2435,f2434,f2433,f2432,f2431,f2430,f2429,f2428,f2423,f2422,f2418,f2413,f2412,f2404,f2403,f2394,f2393,f2361,f2360,f2359,f2358,f2357,f2356,f2355,f2354,f2353,f2352,f2351,f2350,f2349,f2341,f2340,f2331,f2330,f2322,f2321,f2312,f2311,f2309,f2307,f2305,f2303,f2301,f2299,f2297,f2295,f2293,f2292,f2289,f2288,f2287,f2286,f2683,f2679,f2678,f2674,f2670,f2669,f2668,f2667,f2666,f2665,f2664,f2663,f2662,f2657,f2656,f2652,f2647,f2646,f2638,f2637,f2628,f2627,f2595,f2594,f2593,f2592,f2591,f2590,f2589,f2588,f2587,f2586,f2585,f2584,f2583,f2575,f2574,f2565,f2564,f2556,f2555,f2546,f2545,f2543,f2541,f2539,f2537,f2535,f2533,f2531,f2529,f2527,f2526,f2523,f2522,f2521,f2520,f2746,f2926,f2922,f2921,f2917,f2913,f2912,f2911,f2910,f2909,f2908,f2907,f2906,f2905,f2900,f2899,f2895,f2890,f2889,f2881,f2880,f2871,f2870,f2838,f2837,f2836,f2835,f2834,f2833,f2832,f2831,f2830,f2829,f2828,f2827,f2826,f2818,f2817,f2808,f2807,f2799,f2798,f2789,f2788,f2786,f2784,f2782,f2780,f2778,f2776,f2774,f2772,f2770,f2769,f2766,f2765,f2764,f2763,f2929,f3004,f3047,f3099,f3102,f3104,f3107,f3108,f3149,f3404,f3409,f3412,f3415,f3418,f3421,f3424,f3427,f3430,f3433,f3435,f3436,f3437,f3438,f3439,f3440,f3441,f3442,f3443,f3444,f3445,f3446,f3447,f3448,f3449,f3201,f3450,f3203,f3451,f3205,f3452,f3453,f3208,f3209,f3459,f3462,f3464,f3466,f3468,f3470,f3472,f3474,f3476,f3478,f3406,f3520,f3523,f3525,f3527,f3529,f3500])).
fof(f3530,plain,(
  $false | $spl2),
  inference(global_subsumption,[],[f244,f245,f247,f248,f408,f254,f255,f256,f257,f258,f259,f260,f261,f262,f270,f269,f274,f273,f314,f315,f316,f317,f318,f319,f323,f320,f329,f328,f332,f331,f409,f345,f348,f347,f346,f410,f350,f349,f352,f353,f354,f355,f362,f361,f360,f359,f358,f357,f356,f366,f365,f364,f363,f370,f369,f368,f367,f374,f373,f372,f371,f378,f377,f376,f375,f385,f384,f383,f400,f381,f380,f379,f389,f388,f387,f386,f393,f392,f391,f390,f399,f398,f397,f396,f411,f412,f413,f415,f414,f417,f416,f418,f420,f419,f422,f421,f423,f424,f425,f427,f426,f428,f430,f429,f432,f431,f439,f453,f454,f457,f460,f464,f479,f487,f510,f509,f508,f507,f504,f501,f500,f497,f496,f495,f494,f493,f492,f491,f490,f489,f518,f565,f583,f582,f581,f580,f591,f590,f605,f602,f601,f598,f615,f614,f668,f688,f698,f704,f713,f723,f722,f721,f720,f749,f750,f751,f752,f753,f754,f772,f771,f785,f793,f797,f832,f839,f844,f854,f859,f872,f883,f893,f902,f906,f915,f945,f940,f938,f937,f934,f928,f925,f952,f999,f996,f995,f992,f985,f984,f1056,f1054,f1052,f1033,f1090,f1228,f1225,f1224,f1221,f1218,f1217,f1216,f1215,f1214,f1213,f1212,f1211,f1207,f1206,f1203,f1200,f1197,f1194,f1193,f1185,f1180,f1161,f1156,f1155,f1154,f1153,f1152,f1151,f1150,f1149,f1148,f1147,f1146,f1145,f1142,f1139,f1131,f1128,f1125,f1122,f1114,f1111,f1109,f1107,f1105,f1103,f1102,f1099,f1098,f1097,f1096,f1292,f1293,f1376,f1375,f1374,f1373,f1372,f1439,f1440,f1464,f1473,f1471,f1494,f1499,f1518,f1515,f1540,f1611,f1608,f1630,f1629,f1628,f1633,f1634,f1671,f1672,f1696,f1725,f1745,f1746,f1747,f1748,f1749,f1750,f1751,f1752,f1756,f1757,f1758,f1759,f1935,f1931,f1930,f1926,f1922,f1921,f1920,f1919,f1918,f1917,f1916,f1915,f1914,f1909,f1908,f1904,f1899,f1898,f1890,f1889,f1880,f1879,f1848,f1847,f1846,f1845,f1844,f1843,f1842,f1841,f1840,f1839,f1838,f1837,f1836,f1828,f1827,f1818,f1817,f1809,f1808,f1799,f1798,f1796,f1794,f1792,f1790,f1788,f1786,f1784,f1782,f1780,f1779,f1776,f1775,f1774,f1773,f2214,f2210,f2209,f2205,f2201,f2200,f2199,f2198,f2197,f2196,f2195,f2194,f2193,f2188,f2187,f2183,f2178,f2177,f2169,f2168,f2159,f2158,f2126,f2125,f2124,f2123,f2122,f2121,f2120,f2119,f2118,f2117,f2116,f2115,f2114,f2106,f2105,f2096,f2095,f2087,f2086,f2077,f2076,f2074,f2072,f2070,f2068,f2066,f2064,f2062,f2060,f2059,f2058,f2055,f2054,f2052,f2449,f2445,f2444,f2440,f2436,f2435,f2434,f2433,f2432,f2431,f2430,f2429,f2428,f2423,f2422,f2418,f2413,f2412,f2404,f2403,f2394,f2393,f2361,f2360,f2359,f2358,f2357,f2356,f2355,f2354,f2353,f2352,f2351,f2350,f2349,f2341,f2340,f2331,f2330,f2322,f2321,f2312,f2311,f2309,f2307,f2305,f2303,f2301,f2299,f2297,f2295,f2293,f2292,f2289,f2288,f2287,f2286,f2683,f2679,f2678,f2674,f2670,f2669,f2668,f2667,f2666,f2665,f2664,f2663,f2662,f2657,f2656,f2652,f2647,f2646,f2638,f2637,f2628,f2627,f2595,f2594,f2593,f2592,f2591,f2590,f2589,f2588,f2587,f2586,f2585,f2584,f2583,f2575,f2574,f2565,f2564,f2556,f2555,f2546,f2545,f2543,f2541,f2539,f2537,f2535,f2533,f2531,f2529,f2527,f2526,f2523,f2522,f2521,f2520,f2746,f2926,f2922,f2921,f2917,f2913,f2912,f2911,f2910,f2909,f2908,f2907,f2906,f2905,f2900,f2899,f2895,f2890,f2889,f2881,f2880,f2871,f2870,f2838,f2837,f2836,f2835,f2834,f2833,f2832,f2831,f2830,f2829,f2828,f2827,f2826,f2818,f2817,f2808,f2807,f2799,f2798,f2789,f2788,f2786,f2784,f2782,f2780,f2778,f2776,f2774,f2772,f2770,f2769,f2766,f2765,f2764,f2763,f2929,f3004,f3047,f3099,f3102,f3104,f3107,f3108,f3149,f3404,f3409,f3412,f3415,f3418,f3421,f3424,f3427,f3430,f3433,f3435,f3436,f3437,f3438,f3439,f3440,f3441,f3442,f3443,f3444,f3445,f3446,f3447,f3448,f3449,f3201,f3450,f3203,f3451,f3205,f3452,f3453,f3208,f3209,f3459,f3462,f3464,f3466,f3468,f3470,f3472,f3474,f3476,f3478,f3406,f3520,f3523,f3525,f3527,f3529])).
fof(f3528,plain,(
  $false | $spl2),
  inference(global_subsumption,[],[f244,f245,f247,f248,f408,f254,f255,f256,f257,f258,f259,f260,f261,f262,f270,f269,f274,f273,f314,f315,f316,f317,f318,f319,f323,f320,f329,f328,f332,f331,f409,f345,f348,f347,f346,f410,f350,f349,f352,f353,f354,f355,f362,f361,f360,f359,f358,f357,f356,f366,f365,f364,f363,f370,f369,f368,f367,f374,f373,f372,f371,f378,f377,f376,f375,f385,f384,f383,f400,f381,f380,f379,f389,f388,f387,f386,f393,f392,f391,f390,f399,f398,f397,f396,f411,f412,f413,f415,f414,f417,f416,f418,f420,f419,f422,f421,f423,f424,f425,f427,f426,f428,f430,f429,f432,f431,f439,f453,f454,f457,f460,f464,f479,f487,f510,f509,f508,f507,f504,f501,f500,f497,f496,f495,f494,f493,f492,f491,f490,f489,f518,f565,f583,f582,f581,f580,f591,f590,f605,f602,f601,f598,f615,f614,f668,f688,f698,f704,f713,f723,f722,f721,f720,f749,f750,f751,f752,f753,f754,f772,f771,f785,f793,f797,f832,f839,f844,f854,f859,f872,f883,f893,f902,f906,f915,f945,f940,f938,f937,f934,f928,f925,f952,f999,f996,f995,f992,f985,f984,f1056,f1054,f1052,f1033,f1090,f1228,f1225,f1224,f1221,f1218,f1217,f1216,f1215,f1214,f1213,f1212,f1211,f1207,f1206,f1203,f1200,f1197,f1194,f1193,f1185,f1180,f1161,f1156,f1155,f1154,f1153,f1152,f1151,f1150,f1149,f1148,f1147,f1146,f1145,f1142,f1139,f1131,f1128,f1125,f1122,f1114,f1111,f1109,f1107,f1105,f1103,f1102,f1099,f1098,f1097,f1096,f1292,f1293,f1376,f1375,f1374,f1373,f1372,f1439,f1440,f1464,f1473,f1471,f1494,f1499,f1518,f1515,f1540,f1611,f1608,f1630,f1629,f1628,f1633,f1634,f1671,f1672,f1696,f1725,f1745,f1746,f1747,f1748,f1749,f1750,f1751,f1752,f1756,f1757,f1758,f1759,f1935,f1931,f1930,f1926,f1922,f1921,f1920,f1919,f1918,f1917,f1916,f1915,f1914,f1909,f1908,f1904,f1899,f1898,f1890,f1889,f1880,f1879,f1848,f1847,f1846,f1845,f1844,f1843,f1842,f1841,f1840,f1839,f1838,f1837,f1836,f1828,f1827,f1818,f1817,f1809,f1808,f1799,f1798,f1796,f1794,f1792,f1790,f1788,f1786,f1784,f1782,f1780,f1779,f1776,f1775,f1774,f1773,f2214,f2210,f2209,f2205,f2201,f2200,f2199,f2198,f2197,f2196,f2195,f2194,f2193,f2188,f2187,f2183,f2178,f2177,f2169,f2168,f2159,f2158,f2126,f2125,f2124,f2123,f2122,f2121,f2120,f2119,f2118,f2117,f2116,f2115,f2114,f2106,f2105,f2096,f2095,f2087,f2086,f2077,f2076,f2074,f2072,f2070,f2068,f2066,f2064,f2062,f2060,f2059,f2058,f2055,f2054,f2052,f2449,f2445,f2444,f2440,f2436,f2435,f2434,f2433,f2432,f2431,f2430,f2429,f2428,f2423,f2422,f2418,f2413,f2412,f2404,f2403,f2394,f2393,f2361,f2360,f2359,f2358,f2357,f2356,f2355,f2354,f2353,f2352,f2351,f2350,f2349,f2341,f2340,f2331,f2330,f2322,f2321,f2312,f2311,f2309,f2307,f2305,f2303,f2301,f2299,f2297,f2295,f2293,f2292,f2289,f2288,f2287,f2286,f2683,f2679,f2678,f2674,f2670,f2669,f2668,f2667,f2666,f2665,f2664,f2663,f2662,f2657,f2656,f2652,f2647,f2646,f2638,f2637,f2628,f2627,f2595,f2594,f2593,f2592,f2591,f2590,f2589,f2588,f2587,f2586,f2585,f2584,f2583,f2575,f2574,f2565,f2564,f2556,f2555,f2546,f2545,f2543,f2541,f2539,f2537,f2535,f2533,f2531,f2529,f2527,f2526,f2523,f2522,f2521,f2520,f2746,f2926,f2922,f2921,f2917,f2913,f2912,f2911,f2910,f2909,f2908,f2907,f2906,f2905,f2900,f2899,f2895,f2890,f2889,f2881,f2880,f2871,f2870,f2838,f2837,f2836,f2835,f2834,f2833,f2832,f2831,f2830,f2829,f2828,f2827,f2826,f2818,f2817,f2808,f2807,f2799,f2798,f2789,f2788,f2786,f2784,f2782,f2780,f2778,f2776,f2774,f2772,f2770,f2769,f2766,f2765,f2764,f2763,f2929,f3004,f3047,f3099,f3102,f3104,f3107,f3108,f3149,f3404,f3409,f3412,f3415,f3418,f3421,f3424,f3427,f3430,f3433,f3435,f3436,f3437,f3438,f3439,f3440,f3441,f3442,f3443,f3444,f3445,f3446,f3447,f3448,f3449,f3201,f3450,f3203,f3451,f3205,f3452,f3453,f3208,f3209,f3459,f3462,f3464,f3466,f3468,f3470,f3472,f3474,f3476,f3478,f3406,f3520,f3523,f3525,f3527])).
fof(f3526,plain,(
  $false | $spl2),
  inference(global_subsumption,[],[f244,f245,f247,f248,f408,f254,f255,f256,f257,f258,f259,f260,f261,f262,f270,f269,f274,f273,f314,f315,f316,f317,f318,f319,f323,f320,f329,f328,f332,f331,f409,f345,f348,f347,f346,f410,f350,f349,f352,f353,f354,f355,f362,f361,f360,f359,f358,f357,f356,f366,f365,f364,f363,f370,f369,f368,f367,f374,f373,f372,f371,f378,f377,f376,f375,f385,f384,f383,f400,f381,f380,f379,f389,f388,f387,f386,f393,f392,f391,f390,f399,f398,f397,f396,f411,f412,f413,f415,f414,f417,f416,f418,f420,f419,f422,f421,f423,f424,f425,f427,f426,f428,f430,f429,f432,f431,f439,f453,f454,f457,f460,f464,f479,f487,f510,f509,f508,f507,f504,f501,f500,f497,f496,f495,f494,f493,f492,f491,f490,f489,f518,f565,f583,f582,f581,f580,f591,f590,f605,f602,f601,f598,f615,f614,f668,f688,f698,f704,f713,f723,f722,f721,f720,f749,f750,f751,f752,f753,f754,f772,f771,f785,f793,f797,f832,f839,f844,f854,f859,f872,f883,f893,f902,f906,f915,f945,f940,f938,f937,f934,f928,f925,f952,f999,f996,f995,f992,f985,f984,f1056,f1054,f1052,f1033,f1090,f1228,f1225,f1224,f1221,f1218,f1217,f1216,f1215,f1214,f1213,f1212,f1211,f1207,f1206,f1203,f1200,f1197,f1194,f1193,f1185,f1180,f1161,f1156,f1155,f1154,f1153,f1152,f1151,f1150,f1149,f1148,f1147,f1146,f1145,f1142,f1139,f1131,f1128,f1125,f1122,f1114,f1111,f1109,f1107,f1105,f1103,f1102,f1099,f1098,f1097,f1096,f1292,f1293,f1376,f1375,f1374,f1373,f1372,f1439,f1440,f1464,f1473,f1471,f1494,f1499,f1518,f1515,f1540,f1611,f1608,f1630,f1629,f1628,f1633,f1634,f1671,f1672,f1696,f1725,f1745,f1746,f1747,f1748,f1749,f1750,f1751,f1752,f1756,f1757,f1758,f1759,f1935,f1931,f1930,f1926,f1922,f1921,f1920,f1919,f1918,f1917,f1916,f1915,f1914,f1909,f1908,f1904,f1899,f1898,f1890,f1889,f1880,f1879,f1848,f1847,f1846,f1845,f1844,f1843,f1842,f1841,f1840,f1839,f1838,f1837,f1836,f1828,f1827,f1818,f1817,f1809,f1808,f1799,f1798,f1796,f1794,f1792,f1790,f1788,f1786,f1784,f1782,f1780,f1779,f1776,f1775,f1774,f1773,f2214,f2210,f2209,f2205,f2201,f2200,f2199,f2198,f2197,f2196,f2195,f2194,f2193,f2188,f2187,f2183,f2178,f2177,f2169,f2168,f2159,f2158,f2126,f2125,f2124,f2123,f2122,f2121,f2120,f2119,f2118,f2117,f2116,f2115,f2114,f2106,f2105,f2096,f2095,f2087,f2086,f2077,f2076,f2074,f2072,f2070,f2068,f2066,f2064,f2062,f2060,f2059,f2058,f2055,f2054,f2052,f2449,f2445,f2444,f2440,f2436,f2435,f2434,f2433,f2432,f2431,f2430,f2429,f2428,f2423,f2422,f2418,f2413,f2412,f2404,f2403,f2394,f2393,f2361,f2360,f2359,f2358,f2357,f2356,f2355,f2354,f2353,f2352,f2351,f2350,f2349,f2341,f2340,f2331,f2330,f2322,f2321,f2312,f2311,f2309,f2307,f2305,f2303,f2301,f2299,f2297,f2295,f2293,f2292,f2289,f2288,f2287,f2286,f2683,f2679,f2678,f2674,f2670,f2669,f2668,f2667,f2666,f2665,f2664,f2663,f2662,f2657,f2656,f2652,f2647,f2646,f2638,f2637,f2628,f2627,f2595,f2594,f2593,f2592,f2591,f2590,f2589,f2588,f2587,f2586,f2585,f2584,f2583,f2575,f2574,f2565,f2564,f2556,f2555,f2546,f2545,f2543,f2541,f2539,f2537,f2535,f2533,f2531,f2529,f2527,f2526,f2523,f2522,f2521,f2520,f2746,f2926,f2922,f2921,f2917,f2913,f2912,f2911,f2910,f2909,f2908,f2907,f2906,f2905,f2900,f2899,f2895,f2890,f2889,f2881,f2880,f2871,f2870,f2838,f2837,f2836,f2835,f2834,f2833,f2832,f2831,f2830,f2829,f2828,f2827,f2826,f2818,f2817,f2808,f2807,f2799,f2798,f2789,f2788,f2786,f2784,f2782,f2780,f2778,f2776,f2774,f2772,f2770,f2769,f2766,f2765,f2764,f2763,f2929,f3004,f3047,f3099,f3102,f3104,f3107,f3108,f3149,f3404,f3409,f3412,f3415,f3418,f3421,f3424,f3427,f3430,f3433,f3435,f3436,f3437,f3438,f3439,f3440,f3441,f3442,f3443,f3444,f3445,f3446,f3447,f3448,f3449,f3201,f3450,f3203,f3451,f3205,f3452,f3453,f3208,f3209,f3459,f3462,f3464,f3466,f3468,f3470,f3472,f3474,f3476,f3478,f3406,f3520,f3523,f3525])).
fof(f3524,plain,(
  $false | $spl2),
  inference(global_subsumption,[],[f244,f245,f247,f248,f408,f254,f255,f256,f257,f258,f259,f260,f261,f262,f270,f269,f274,f273,f314,f315,f316,f317,f318,f319,f323,f320,f329,f328,f332,f331,f409,f345,f348,f347,f346,f410,f350,f349,f352,f353,f354,f355,f362,f361,f360,f359,f358,f357,f356,f366,f365,f364,f363,f370,f369,f368,f367,f374,f373,f372,f371,f378,f377,f376,f375,f385,f384,f383,f400,f381,f380,f379,f389,f388,f387,f386,f393,f392,f391,f390,f399,f398,f397,f396,f411,f412,f413,f415,f414,f417,f416,f418,f420,f419,f422,f421,f423,f424,f425,f427,f426,f428,f430,f429,f432,f431,f439,f453,f454,f457,f460,f464,f479,f487,f510,f509,f508,f507,f504,f501,f500,f497,f496,f495,f494,f493,f492,f491,f490,f489,f518,f565,f583,f582,f581,f580,f591,f590,f605,f602,f601,f598,f615,f614,f668,f688,f698,f704,f713,f723,f722,f721,f720,f749,f750,f751,f752,f753,f754,f772,f771,f785,f793,f797,f832,f839,f844,f854,f859,f872,f883,f893,f902,f906,f915,f945,f940,f938,f937,f934,f928,f925,f952,f999,f996,f995,f992,f985,f984,f1056,f1054,f1052,f1033,f1090,f1228,f1225,f1224,f1221,f1218,f1217,f1216,f1215,f1214,f1213,f1212,f1211,f1207,f1206,f1203,f1200,f1197,f1194,f1193,f1185,f1180,f1161,f1156,f1155,f1154,f1153,f1152,f1151,f1150,f1149,f1148,f1147,f1146,f1145,f1142,f1139,f1131,f1128,f1125,f1122,f1114,f1111,f1109,f1107,f1105,f1103,f1102,f1099,f1098,f1097,f1096,f1292,f1293,f1376,f1375,f1374,f1373,f1372,f1439,f1440,f1464,f1473,f1471,f1494,f1499,f1518,f1515,f1540,f1611,f1608,f1630,f1629,f1628,f1633,f1634,f1671,f1672,f1696,f1725,f1745,f1746,f1747,f1748,f1749,f1750,f1751,f1752,f1756,f1757,f1758,f1759,f1935,f1931,f1930,f1926,f1922,f1921,f1920,f1919,f1918,f1917,f1916,f1915,f1914,f1909,f1908,f1904,f1899,f1898,f1890,f1889,f1880,f1879,f1848,f1847,f1846,f1845,f1844,f1843,f1842,f1841,f1840,f1839,f1838,f1837,f1836,f1828,f1827,f1818,f1817,f1809,f1808,f1799,f1798,f1796,f1794,f1792,f1790,f1788,f1786,f1784,f1782,f1780,f1779,f1776,f1775,f1774,f1773,f2214,f2210,f2209,f2205,f2201,f2200,f2199,f2198,f2197,f2196,f2195,f2194,f2193,f2188,f2187,f2183,f2178,f2177,f2169,f2168,f2159,f2158,f2126,f2125,f2124,f2123,f2122,f2121,f2120,f2119,f2118,f2117,f2116,f2115,f2114,f2106,f2105,f2096,f2095,f2087,f2086,f2077,f2076,f2074,f2072,f2070,f2068,f2066,f2064,f2062,f2060,f2059,f2058,f2055,f2054,f2052,f2449,f2445,f2444,f2440,f2436,f2435,f2434,f2433,f2432,f2431,f2430,f2429,f2428,f2423,f2422,f2418,f2413,f2412,f2404,f2403,f2394,f2393,f2361,f2360,f2359,f2358,f2357,f2356,f2355,f2354,f2353,f2352,f2351,f2350,f2349,f2341,f2340,f2331,f2330,f2322,f2321,f2312,f2311,f2309,f2307,f2305,f2303,f2301,f2299,f2297,f2295,f2293,f2292,f2289,f2288,f2287,f2286,f2683,f2679,f2678,f2674,f2670,f2669,f2668,f2667,f2666,f2665,f2664,f2663,f2662,f2657,f2656,f2652,f2647,f2646,f2638,f2637,f2628,f2627,f2595,f2594,f2593,f2592,f2591,f2590,f2589,f2588,f2587,f2586,f2585,f2584,f2583,f2575,f2574,f2565,f2564,f2556,f2555,f2546,f2545,f2543,f2541,f2539,f2537,f2535,f2533,f2531,f2529,f2527,f2526,f2523,f2522,f2521,f2520,f2746,f2926,f2922,f2921,f2917,f2913,f2912,f2911,f2910,f2909,f2908,f2907,f2906,f2905,f2900,f2899,f2895,f2890,f2889,f2881,f2880,f2871,f2870,f2838,f2837,f2836,f2835,f2834,f2833,f2832,f2831,f2830,f2829,f2828,f2827,f2826,f2818,f2817,f2808,f2807,f2799,f2798,f2789,f2788,f2786,f2784,f2782,f2780,f2778,f2776,f2774,f2772,f2770,f2769,f2766,f2765,f2764,f2763,f2929,f3004,f3047,f3099,f3102,f3104,f3107,f3108,f3149,f3404,f3409,f3412,f3415,f3418,f3421,f3424,f3427,f3430,f3433,f3435,f3436,f3437,f3438,f3439,f3440,f3441,f3442,f3443,f3444,f3445,f3446,f3447,f3448,f3449,f3201,f3450,f3203,f3451,f3205,f3452,f3453,f3208,f3209,f3459,f3462,f3464,f3466,f3468,f3470,f3472,f3474,f3476,f3478,f3406,f3520,f3523])).
fof(f3522,plain,(
  $false | $spl2),
  inference(subsumption_resolution,[],[f3481,f245])).
fof(f3481,plain,(
  ~p(s(bool,'T_0')) | $spl2),
  inference(backward_demodulation,[],[f3406,f408])).
fof(f3521,plain,(
  $false | $spl2),
  inference(global_subsumption,[],[f244,f245,f247,f248,f408,f254,f255,f256,f257,f258,f259,f260,f261,f262,f270,f269,f274,f273,f314,f315,f316,f317,f318,f319,f323,f320,f329,f328,f332,f331,f409,f345,f348,f347,f346,f410,f350,f349,f352,f353,f354,f355,f362,f361,f360,f359,f358,f357,f356,f366,f365,f364,f363,f370,f369,f368,f367,f374,f373,f372,f371,f378,f377,f376,f375,f385,f384,f383,f400,f381,f380,f379,f389,f388,f387,f386,f393,f392,f391,f390,f399,f398,f397,f396,f411,f412,f413,f415,f414,f417,f416,f418,f420,f419,f422,f421,f423,f424,f425,f427,f426,f428,f430,f429,f432,f431,f439,f453,f454,f457,f460,f464,f479,f487,f510,f509,f508,f507,f504,f501,f500,f497,f496,f495,f494,f493,f492,f491,f490,f489,f518,f565,f583,f582,f581,f580,f591,f590,f605,f602,f601,f598,f615,f614,f668,f688,f698,f704,f713,f723,f722,f721,f720,f749,f750,f751,f752,f753,f754,f772,f771,f785,f793,f797,f832,f839,f844,f854,f859,f872,f883,f893,f902,f906,f915,f945,f940,f938,f937,f934,f928,f925,f952,f999,f996,f995,f992,f985,f984,f1056,f1054,f1052,f1033,f1090,f1228,f1225,f1224,f1221,f1218,f1217,f1216,f1215,f1214,f1213,f1212,f1211,f1207,f1206,f1203,f1200,f1197,f1194,f1193,f1185,f1180,f1161,f1156,f1155,f1154,f1153,f1152,f1151,f1150,f1149,f1148,f1147,f1146,f1145,f1142,f1139,f1131,f1128,f1125,f1122,f1114,f1111,f1109,f1107,f1105,f1103,f1102,f1099,f1098,f1097,f1096,f1292,f1293,f1376,f1375,f1374,f1373,f1372,f1439,f1440,f1464,f1473,f1471,f1494,f1499,f1518,f1515,f1540,f1611,f1608,f1630,f1629,f1628,f1633,f1634,f1671,f1672,f1696,f1725,f1745,f1746,f1747,f1748,f1749,f1750,f1751,f1752,f1756,f1757,f1758,f1759,f1935,f1931,f1930,f1926,f1922,f1921,f1920,f1919,f1918,f1917,f1916,f1915,f1914,f1909,f1908,f1904,f1899,f1898,f1890,f1889,f1880,f1879,f1848,f1847,f1846,f1845,f1844,f1843,f1842,f1841,f1840,f1839,f1838,f1837,f1836,f1828,f1827,f1818,f1817,f1809,f1808,f1799,f1798,f1796,f1794,f1792,f1790,f1788,f1786,f1784,f1782,f1780,f1779,f1776,f1775,f1774,f1773,f2214,f2210,f2209,f2205,f2201,f2200,f2199,f2198,f2197,f2196,f2195,f2194,f2193,f2188,f2187,f2183,f2178,f2177,f2169,f2168,f2159,f2158,f2126,f2125,f2124,f2123,f2122,f2121,f2120,f2119,f2118,f2117,f2116,f2115,f2114,f2106,f2105,f2096,f2095,f2087,f2086,f2077,f2076,f2074,f2072,f2070,f2068,f2066,f2064,f2062,f2060,f2059,f2058,f2055,f2054,f2052,f2449,f2445,f2444,f2440,f2436,f2435,f2434,f2433,f2432,f2431,f2430,f2429,f2428,f2423,f2422,f2418,f2413,f2412,f2404,f2403,f2394,f2393,f2361,f2360,f2359,f2358,f2357,f2356,f2355,f2354,f2353,f2352,f2351,f2350,f2349,f2341,f2340,f2331,f2330,f2322,f2321,f2312,f2311,f2309,f2307,f2305,f2303,f2301,f2299,f2297,f2295,f2293,f2292,f2289,f2288,f2287,f2286,f2683,f2679,f2678,f2674,f2670,f2669,f2668,f2667,f2666,f2665,f2664,f2663,f2662,f2657,f2656,f2652,f2647,f2646,f2638,f2637,f2628,f2627,f2595,f2594,f2593,f2592,f2591,f2590,f2589,f2588,f2587,f2586,f2585,f2584,f2583,f2575,f2574,f2565,f2564,f2556,f2555,f2546,f2545,f2543,f2541,f2539,f2537,f2535,f2533,f2531,f2529,f2527,f2526,f2523,f2522,f2521,f2520,f2746,f2926,f2922,f2921,f2917,f2913,f2912,f2911,f2910,f2909,f2908,f2907,f2906,f2905,f2900,f2899,f2895,f2890,f2889,f2881,f2880,f2871,f2870,f2838,f2837,f2836,f2835,f2834,f2833,f2832,f2831,f2830,f2829,f2828,f2827,f2826,f2818,f2817,f2808,f2807,f2799,f2798,f2789,f2788,f2786,f2784,f2782,f2780,f2778,f2776,f2774,f2772,f2770,f2769,f2766,f2765,f2764,f2763,f2929,f3004,f3047,f3099,f3102,f3104,f3107,f3108,f3149,f3404,f3409,f3412,f3415,f3418,f3421,f3424,f3427,f3430,f3433,f3435,f3436,f3437,f3438,f3439,f3440,f3441,f3442,f3443,f3444,f3445,f3446,f3447,f3448,f3449,f3201,f3450,f3203,f3451,f3205,f3452,f3453,f3208,f3209,f3459,f3462,f3464,f3466,f3468,f3470,f3472,f3474,f3476,f3478,f3406,f3520])).
fof(f3434,plain,(
  ( ! [X2,X1] : (p(s(bool,X1)) | ~sP6(sK13(X2,X2),X1,'T_0')) ) | $spl20),
  inference(cnf_transformation,[],[f3434_D])).
fof(f3434_D,plain,(
  ( ! [X2,X1] : (p(s(bool,X1)) | ~sP6(sK13(X2,X2),X1,'T_0')) ) <=> ~$spl20),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl20])])).
fof(f3406,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,X0)) ) | $spl2),
  inference(cnf_transformation,[],[f3406_D])).
fof(f3406_D,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,X0)) ) <=> ~$spl2),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl2])])).
fof(f3478,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | p(s(bool,X1)) | ~sP6(sK13(X2,X2),X1,'T_0')) )),
  inference(condensation,[],[f3477])).
fof(f3477,plain,(
  ( ! [X70,X72,X71,X69] : (p(s(bool,X70)) | ~sP6(sK13(X71,X71),X70,'T_0') | s(bool,X69) = s(bool,X72) | s(bool,'T_0') = s(bool,X72)) )),
  inference(subsumption_resolution,[],[f3231,f565])).
fof(f3231,plain,(
  ( ! [X70,X72,X71,X69] : (~p(s(bool,X69)) | p(s(bool,X70)) | ~sP6(sK13(X71,X71),X70,'T_0') | s(bool,X69) = s(bool,X72) | s(bool,'T_0') = s(bool,X72)) )),
  inference(superposition,[],[f832,f518])).
fof(f3431,plain,(
  ( ! [X2,X1] : (~sP5('T_0',X1,X2) | sP6('T_0',X1,X2)) ) | $spl18),
  inference(cnf_transformation,[],[f3431_D])).
fof(f3431_D,plain,(
  ( ! [X2,X1] : (~sP5('T_0',X1,X2) | sP6('T_0',X1,X2)) ) <=> ~$spl18),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl18])])).
fof(f3476,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | ~sP5('T_0',X1,X2) | sP6('T_0',X1,X2)) )),
  inference(condensation,[],[f3475])).
fof(f3475,plain,(
  ( ! [X64,X62,X65,X63] : (~sP5('T_0',X63,X64) | sP6('T_0',X63,X64) | s(bool,X62) = s(bool,X65) | s(bool,'T_0') = s(bool,X65)) )),
  inference(subsumption_resolution,[],[f3229,f565])).
fof(f3229,plain,(
  ( ! [X64,X62,X65,X63] : (~p(s(bool,X62)) | ~sP5('T_0',X63,X64) | sP6('T_0',X63,X64) | s(bool,X62) = s(bool,X65) | s(bool,'T_0') = s(bool,X65)) )),
  inference(superposition,[],[f400,f518])).
fof(f3428,plain,(
  ( ! [X2,X1] : (~p(s(bool,X1)) | p(s(bool,X2)) | ~sP6('T_0',X2,X1)) ) | $spl16),
  inference(cnf_transformation,[],[f3428_D])).
fof(f3428_D,plain,(
  ( ! [X2,X1] : (~p(s(bool,X1)) | p(s(bool,X2)) | ~sP6('T_0',X2,X1)) ) <=> ~$spl16),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl16])])).
fof(f3474,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,X1)) | p(s(bool,X2)) | ~sP6('T_0',X2,X1)) )),
  inference(condensation,[],[f3473])).
fof(f3473,plain,(
  ( ! [X61,X59,X60,X58] : (~p(s(bool,X59)) | p(s(bool,X60)) | ~sP6('T_0',X60,X59) | s(bool,X58) = s(bool,X61) | s(bool,'T_0') = s(bool,X61)) )),
  inference(subsumption_resolution,[],[f3228,f565])).
fof(f3228,plain,(
  ( ! [X61,X59,X60,X58] : (~p(s(bool,X58)) | ~p(s(bool,X59)) | p(s(bool,X60)) | ~sP6('T_0',X60,X59) | s(bool,X58) = s(bool,X61) | s(bool,'T_0') = s(bool,X61)) )),
  inference(superposition,[],[f393,f518])).
fof(f3425,plain,(
  ( ! [X2,X1] : (sP6('T_0',X1,X2) | ~p(s(bool,X1))) ) | $spl14),
  inference(cnf_transformation,[],[f3425_D])).
fof(f3425_D,plain,(
  ( ! [X2,X1] : (sP6('T_0',X1,X2) | ~p(s(bool,X1))) ) <=> ~$spl14),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl14])])).
fof(f3472,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,X1)) | sP6('T_0',X1,X2)) )),
  inference(condensation,[],[f3471])).
fof(f3471,plain,(
  ( ! [X57,X54,X56,X55] : (~p(s(bool,X55)) | sP6('T_0',X55,X56) | s(bool,X54) = s(bool,X57) | s(bool,'T_0') = s(bool,X57)) )),
  inference(subsumption_resolution,[],[f3227,f565])).
fof(f3227,plain,(
  ( ! [X57,X54,X56,X55] : (~p(s(bool,X54)) | ~p(s(bool,X55)) | sP6('T_0',X55,X56) | s(bool,X54) = s(bool,X57) | s(bool,'T_0') = s(bool,X57)) )),
  inference(superposition,[],[f392,f518])).
fof(f3422,plain,(
  ( ! [X2,X1] : (sP6('T_0',X2,X1) | p(s(bool,X1))) ) | $spl12),
  inference(cnf_transformation,[],[f3422_D])).
fof(f3422_D,plain,(
  ( ! [X2,X1] : (sP6('T_0',X2,X1) | p(s(bool,X1))) ) <=> ~$spl12),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl12])])).
fof(f3470,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | p(s(bool,X1)) | sP6('T_0',X2,X1)) )),
  inference(condensation,[],[f3469])).
fof(f3469,plain,(
  ( ! [X52,X50,X53,X51] : (p(s(bool,X51)) | sP6('T_0',X52,X51) | s(bool,X50) = s(bool,X53) | s(bool,'T_0') = s(bool,X53)) )),
  inference(subsumption_resolution,[],[f3226,f565])).
fof(f3226,plain,(
  ( ! [X52,X50,X53,X51] : (~p(s(bool,X50)) | p(s(bool,X51)) | sP6('T_0',X52,X51) | s(bool,X50) = s(bool,X53) | s(bool,'T_0') = s(bool,X53)) )),
  inference(superposition,[],[f391,f518])).
fof(f3419,plain,(
  ( ! [X2,X1] : (p(s(bool,X1)) | ~p(s(bool,X2)) | ~sP5(X2,X1,'T_0')) ) | $spl10),
  inference(cnf_transformation,[],[f3419_D])).
fof(f3419_D,plain,(
  ( ! [X2,X1] : (p(s(bool,X1)) | ~p(s(bool,X2)) | ~sP5(X2,X1,'T_0')) ) <=> ~$spl10),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl10])])).
fof(f3468,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | p(s(bool,X1)) | ~p(s(bool,X2)) | ~sP5(X2,X1,'T_0')) )),
  inference(condensation,[],[f3467])).
fof(f3467,plain,(
  ( ! [X47,X48,X46,X49] : (p(s(bool,X47)) | ~p(s(bool,X48)) | ~sP5(X48,X47,'T_0') | s(bool,X46) = s(bool,X49) | s(bool,'T_0') = s(bool,X49)) )),
  inference(subsumption_resolution,[],[f3225,f565])).
fof(f3225,plain,(
  ( ! [X47,X48,X46,X49] : (~p(s(bool,X46)) | p(s(bool,X47)) | ~p(s(bool,X48)) | ~sP5(X48,X47,'T_0') | s(bool,X46) = s(bool,X49) | s(bool,'T_0') = s(bool,X49)) )),
  inference(superposition,[],[f386,f518])).
fof(f3416,plain,(
  ( ! [X2,X1] : (~p(s(bool,X1)) | ~sP2(X1,'T_0',X2) | p(s(bool,X2))) ) | $spl8),
  inference(cnf_transformation,[],[f3416_D])).
fof(f3416_D,plain,(
  ( ! [X2,X1] : (~p(s(bool,X1)) | ~sP2(X1,'T_0',X2) | p(s(bool,X2))) ) <=> ~$spl8),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl8])])).
fof(f3466,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,X1)) | p(s(bool,X2)) | ~sP2(X1,'T_0',X2)) )),
  inference(condensation,[],[f3465])).
fof(f3465,plain,(
  ( ! [X45,X43,X44,X42] : (~p(s(bool,X43)) | p(s(bool,X44)) | ~sP2(X43,'T_0',X44) | s(bool,X42) = s(bool,X45) | s(bool,'T_0') = s(bool,X45)) )),
  inference(subsumption_resolution,[],[f3224,f565])).
fof(f3224,plain,(
  ( ! [X45,X43,X44,X42] : (~p(s(bool,X42)) | ~p(s(bool,X43)) | p(s(bool,X44)) | ~sP2(X43,'T_0',X44) | s(bool,X42) = s(bool,X45) | s(bool,'T_0') = s(bool,X45)) )),
  inference(superposition,[],[f367,f518])).
fof(f3413,plain,(
  ( ! [X2,X1] : (~p(s(bool,X1)) | ~sP3(X1,'T_0',X2) | p(s(bool,X2))) ) | $spl6),
  inference(cnf_transformation,[],[f3413_D])).
fof(f3413_D,plain,(
  ( ! [X2,X1] : (~p(s(bool,X1)) | ~sP3(X1,'T_0',X2) | p(s(bool,X2))) ) <=> ~$spl6),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl6])])).
fof(f3464,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,X1)) | p(s(bool,X2)) | ~sP3(X1,'T_0',X2)) )),
  inference(condensation,[],[f3463])).
fof(f3463,plain,(
  ( ! [X39,X41,X38,X40] : (~p(s(bool,X39)) | p(s(bool,X40)) | ~sP3(X39,'T_0',X40) | s(bool,X38) = s(bool,X41) | s(bool,'T_0') = s(bool,X41)) )),
  inference(subsumption_resolution,[],[f3223,f565])).
fof(f3223,plain,(
  ( ! [X39,X41,X38,X40] : (~p(s(bool,X38)) | ~p(s(bool,X39)) | p(s(bool,X40)) | ~sP3(X39,'T_0',X40) | s(bool,X38) = s(bool,X41) | s(bool,'T_0') = s(bool,X41)) )),
  inference(superposition,[],[f363,f518])).
fof(f3410,plain,(
  ( ! [X2,X1] : (sP4(X1,X2,'T_0') | ~sP2(X2,'T_0',X1) | ~sP3(X1,'T_0',X2)) ) | $spl4),
  inference(cnf_transformation,[],[f3410_D])).
fof(f3410_D,plain,(
  ( ! [X2,X1] : (sP4(X1,X2,'T_0') | ~sP2(X2,'T_0',X1) | ~sP3(X1,'T_0',X2)) ) <=> ~$spl4),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl4])])).
fof(f3462,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | sP4(X1,X2,'T_0') | ~sP3(X1,'T_0',X2) | ~sP2(X2,'T_0',X1)) )),
  inference(subsumption_resolution,[],[f3461,f425])).
fof(f3461,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | sP4(X1,X2,'T_0') | ~sP3(X1,'T_0',X2) | ~sP2(X2,'T_0',X1) | ~sP1('T_0',X2,X1)) )),
  inference(condensation,[],[f3460])).
fof(f3460,plain,(
  ( ! [X37,X35,X36,X34] : (sP4(X35,X36,'T_0') | ~sP3(X35,'T_0',X36) | ~sP2(X36,'T_0',X35) | ~sP1('T_0',X36,X35) | s(bool,X34) = s(bool,X37) | s(bool,'T_0') = s(bool,X37)) )),
  inference(subsumption_resolution,[],[f3222,f565])).
fof(f3222,plain,(
  ( ! [X37,X35,X36,X34] : (~p(s(bool,X34)) | sP4(X35,X36,'T_0') | ~sP3(X35,'T_0',X36) | ~sP2(X36,'T_0',X35) | ~sP1('T_0',X36,X35) | s(bool,X34) = s(bool,X37) | s(bool,'T_0') = s(bool,X37)) )),
  inference(superposition,[],[f360,f518])).
fof(f3405,plain,(
  ( ! [X2,X1] : (~p(s(bool,X1)) | ~sP4(X1,'T_0',X2) | p(s(bool,X2))) ) | $spl0),
  inference(cnf_transformation,[],[f3405_D])).
fof(f3405_D,plain,(
  ( ! [X2,X1] : (~p(s(bool,X1)) | ~sP4(X1,'T_0',X2) | p(s(bool,X2))) ) <=> ~$spl0),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl0])])).
fof(f3459,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,X1)) | p(s(bool,X2)) | ~sP4(X1,'T_0',X2)) )),
  inference(condensation,[],[f3458])).
fof(f3458,plain,(
  ( ! [X30,X33,X31,X32] : (~p(s(bool,X31)) | p(s(bool,X32)) | ~sP4(X31,'T_0',X32) | s(bool,X30) = s(bool,X33) | s(bool,'T_0') = s(bool,X33)) )),
  inference(subsumption_resolution,[],[f3221,f565])).
fof(f3221,plain,(
  ( ! [X30,X33,X31,X32] : (~p(s(bool,X30)) | ~p(s(bool,X31)) | p(s(bool,X32)) | ~sP4(X31,'T_0',X32) | s(bool,X30) = s(bool,X33) | s(bool,'T_0') = s(bool,X33)) )),
  inference(superposition,[],[f359,f518])).
fof(f3433,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | p(s(bool,X1)) | ~sP6(sK13(X2,X2),X1,'T_0')) )),
  inference(condensation,[],[f3432])).
fof(f3432,plain,(
  ( ! [X70,X72,X71,X69] : (p(s(bool,X70)) | ~sP6(sK13(X71,X71),X70,'T_0') | s(bool,X69) = s(bool,X72) | s(bool,'T_0') = s(bool,X72)) )),
  inference(subsumption_resolution,[],[f3170,f565])).
fof(f3170,plain,(
  ( ! [X70,X72,X71,X69] : (~p(s(bool,X69)) | p(s(bool,X70)) | ~sP6(sK13(X71,X71),X70,'T_0') | s(bool,X69) = s(bool,X72) | s(bool,'T_0') = s(bool,X72)) )),
  inference(superposition,[],[f832,f518])).
fof(f3430,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | ~sP5('T_0',X1,X2) | sP6('T_0',X1,X2)) )),
  inference(condensation,[],[f3429])).
fof(f3429,plain,(
  ( ! [X64,X62,X65,X63] : (~sP5('T_0',X63,X64) | sP6('T_0',X63,X64) | s(bool,X62) = s(bool,X65) | s(bool,'T_0') = s(bool,X65)) )),
  inference(subsumption_resolution,[],[f3168,f565])).
fof(f3168,plain,(
  ( ! [X64,X62,X65,X63] : (~p(s(bool,X62)) | ~sP5('T_0',X63,X64) | sP6('T_0',X63,X64) | s(bool,X62) = s(bool,X65) | s(bool,'T_0') = s(bool,X65)) )),
  inference(superposition,[],[f400,f518])).
fof(f3427,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,X1)) | p(s(bool,X2)) | ~sP6('T_0',X2,X1)) )),
  inference(condensation,[],[f3426])).
fof(f3426,plain,(
  ( ! [X61,X59,X60,X58] : (~p(s(bool,X59)) | p(s(bool,X60)) | ~sP6('T_0',X60,X59) | s(bool,X58) = s(bool,X61) | s(bool,'T_0') = s(bool,X61)) )),
  inference(subsumption_resolution,[],[f3167,f565])).
fof(f3167,plain,(
  ( ! [X61,X59,X60,X58] : (~p(s(bool,X58)) | ~p(s(bool,X59)) | p(s(bool,X60)) | ~sP6('T_0',X60,X59) | s(bool,X58) = s(bool,X61) | s(bool,'T_0') = s(bool,X61)) )),
  inference(superposition,[],[f393,f518])).
fof(f3424,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,X1)) | sP6('T_0',X1,X2)) )),
  inference(condensation,[],[f3423])).
fof(f3423,plain,(
  ( ! [X57,X54,X56,X55] : (~p(s(bool,X55)) | sP6('T_0',X55,X56) | s(bool,X54) = s(bool,X57) | s(bool,'T_0') = s(bool,X57)) )),
  inference(subsumption_resolution,[],[f3166,f565])).
fof(f3166,plain,(
  ( ! [X57,X54,X56,X55] : (~p(s(bool,X54)) | ~p(s(bool,X55)) | sP6('T_0',X55,X56) | s(bool,X54) = s(bool,X57) | s(bool,'T_0') = s(bool,X57)) )),
  inference(superposition,[],[f392,f518])).
fof(f3421,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | p(s(bool,X1)) | sP6('T_0',X2,X1)) )),
  inference(condensation,[],[f3420])).
fof(f3420,plain,(
  ( ! [X52,X50,X53,X51] : (p(s(bool,X51)) | sP6('T_0',X52,X51) | s(bool,X50) = s(bool,X53) | s(bool,'T_0') = s(bool,X53)) )),
  inference(subsumption_resolution,[],[f3165,f565])).
fof(f3165,plain,(
  ( ! [X52,X50,X53,X51] : (~p(s(bool,X50)) | p(s(bool,X51)) | sP6('T_0',X52,X51) | s(bool,X50) = s(bool,X53) | s(bool,'T_0') = s(bool,X53)) )),
  inference(superposition,[],[f391,f518])).
fof(f3418,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | p(s(bool,X1)) | ~p(s(bool,X2)) | ~sP5(X2,X1,'T_0')) )),
  inference(condensation,[],[f3417])).
fof(f3417,plain,(
  ( ! [X47,X48,X46,X49] : (p(s(bool,X47)) | ~p(s(bool,X48)) | ~sP5(X48,X47,'T_0') | s(bool,X46) = s(bool,X49) | s(bool,'T_0') = s(bool,X49)) )),
  inference(subsumption_resolution,[],[f3164,f565])).
fof(f3164,plain,(
  ( ! [X47,X48,X46,X49] : (~p(s(bool,X46)) | p(s(bool,X47)) | ~p(s(bool,X48)) | ~sP5(X48,X47,'T_0') | s(bool,X46) = s(bool,X49) | s(bool,'T_0') = s(bool,X49)) )),
  inference(superposition,[],[f386,f518])).
fof(f3415,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,X1)) | p(s(bool,X2)) | ~sP2(X1,'T_0',X2)) )),
  inference(condensation,[],[f3414])).
fof(f3414,plain,(
  ( ! [X45,X43,X44,X42] : (~p(s(bool,X43)) | p(s(bool,X44)) | ~sP2(X43,'T_0',X44) | s(bool,X42) = s(bool,X45) | s(bool,'T_0') = s(bool,X45)) )),
  inference(subsumption_resolution,[],[f3163,f565])).
fof(f3163,plain,(
  ( ! [X45,X43,X44,X42] : (~p(s(bool,X42)) | ~p(s(bool,X43)) | p(s(bool,X44)) | ~sP2(X43,'T_0',X44) | s(bool,X42) = s(bool,X45) | s(bool,'T_0') = s(bool,X45)) )),
  inference(superposition,[],[f367,f518])).
fof(f3412,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,X1)) | p(s(bool,X2)) | ~sP3(X1,'T_0',X2)) )),
  inference(condensation,[],[f3411])).
fof(f3411,plain,(
  ( ! [X39,X41,X38,X40] : (~p(s(bool,X39)) | p(s(bool,X40)) | ~sP3(X39,'T_0',X40) | s(bool,X38) = s(bool,X41) | s(bool,'T_0') = s(bool,X41)) )),
  inference(subsumption_resolution,[],[f3162,f565])).
fof(f3162,plain,(
  ( ! [X39,X41,X38,X40] : (~p(s(bool,X38)) | ~p(s(bool,X39)) | p(s(bool,X40)) | ~sP3(X39,'T_0',X40) | s(bool,X38) = s(bool,X41) | s(bool,'T_0') = s(bool,X41)) )),
  inference(superposition,[],[f363,f518])).
fof(f3409,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | sP4(X1,X2,'T_0') | ~sP3(X1,'T_0',X2) | ~sP2(X2,'T_0',X1)) )),
  inference(subsumption_resolution,[],[f3408,f425])).
fof(f3408,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | sP4(X1,X2,'T_0') | ~sP3(X1,'T_0',X2) | ~sP2(X2,'T_0',X1) | ~sP1('T_0',X2,X1)) )),
  inference(condensation,[],[f3407])).
fof(f3407,plain,(
  ( ! [X37,X35,X36,X34] : (sP4(X35,X36,'T_0') | ~sP3(X35,'T_0',X36) | ~sP2(X36,'T_0',X35) | ~sP1('T_0',X36,X35) | s(bool,X34) = s(bool,X37) | s(bool,'T_0') = s(bool,X37)) )),
  inference(subsumption_resolution,[],[f3161,f565])).
fof(f3161,plain,(
  ( ! [X37,X35,X36,X34] : (~p(s(bool,X34)) | sP4(X35,X36,'T_0') | ~sP3(X35,'T_0',X36) | ~sP2(X36,'T_0',X35) | ~sP1('T_0',X36,X35) | s(bool,X34) = s(bool,X37) | s(bool,'T_0') = s(bool,X37)) )),
  inference(superposition,[],[f360,f518])).
fof(f3404,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,X1)) | p(s(bool,X2)) | ~sP4(X1,'T_0',X2)) )),
  inference(condensation,[],[f3403])).
fof(f3403,plain,(
  ( ! [X30,X33,X31,X32] : (~p(s(bool,X31)) | p(s(bool,X32)) | ~sP4(X31,'T_0',X32) | s(bool,X30) = s(bool,X33) | s(bool,'T_0') = s(bool,X33)) )),
  inference(subsumption_resolution,[],[f3160,f565])).
fof(f3160,plain,(
  ( ! [X30,X33,X31,X32] : (~p(s(bool,X30)) | ~p(s(bool,X31)) | p(s(bool,X32)) | ~sP4(X31,'T_0',X32) | s(bool,X30) = s(bool,X33) | s(bool,'T_0') = s(bool,X33)) )),
  inference(superposition,[],[f359,f518])).
% SZS output end Proof for thm.clos_knownProof
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 346
% Passive clauses: 1228
% Generated clauses: 6492
% Final active clauses: 222
% Final passive clauses: 704
% Input formulas: 62
% Initial clauses: 156
% 
% Duplicate literals: 63
% Trivial inequalities: 26
% Fw subsumption resolutions: 193
% Fw demodulations: 1348
% Bw demodulations: 211
% Condensations: 78
% Global subsumptions: 22
% 
% Simple tautologies: 73
% Equational tautologies: 53
% Forward subsumptions: 3319
% Bw demodulations to eq. taut.: 4
% 
% Unit resulting resolution: 2481
% Factoring: 1
% Forward superposition: 1064
% Backward superposition: 647
% Self superposition: 34
% Equality factoring: 26
% Equality resolution: 9
% 
% Split clauses: 45
% Split components: 109
% SAT solver clauses: 1392
% SAT solver unit clauses: 676
% SAT solver binary clauses: 246
% 
% Sat splits: 45
% Sat splitting refutations: 50
% 
% Memory used [KB]: 7419
% Time elapsed: 0.275 s
% ------------------------------
% ------------------------------
% Success in time 1.61 s
