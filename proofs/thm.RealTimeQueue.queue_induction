Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 149 next slice time: 5
dis+11_7_3 on thm.RealTimeQueue
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.RealTimeQueue
% SZS output start Proof for thm.RealTimeQueue
fof(f1666,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f1658,f197,f135,f196,f201])).
fof(f201,plain,(
  $false | ($spl1 | $spl2)),
  inference(resolution,[],[f197,f196])).
fof(f196,plain,(
  ~p(s(bool,'F_0')) | $spl1),
  inference(cnf_transformation,[],[f196_D])).
fof(f196_D,plain,(
  ~p(s(bool,'F_0')) <=> ~$spl1),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1])])).
fof(f135,plain,(
  ~p(s(bool,'F_0'))),
  inference(cnf_transformation,[],[f41])).
fof(f41,plain,(
  ~p(s(bool,'F_0'))),
  inference(flattening,[],[f2])).
fof(f2,axiom,(
  ~p(s(bool,'F_0'))),
  file('thm.RealTimeQueue.queue_induction',aHL_FALSITY)).
fof(f197,plain,(
  ( ! [X0] : (p(s(bool,X0))) ) | $spl2),
  inference(cnf_transformation,[],[f197_D])).
fof(f197_D,plain,(
  ( ! [X0] : (p(s(bool,X0))) ) <=> ~$spl2),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl2])])).
fof(f1658,plain,(
  ( ! [X0] : (p(s(bool,X0))) ) | $spl1),
  inference(subsumption_resolution,[],[f1646,f137])).
fof(f137,plain,(
  ( ! [X0] : (p(s(bool,X0)) | s(bool,'T_0') != s(bool,X0)) )),
  inference(cnf_transformation,[],[f108])).
fof(f108,plain,(
  ! [X0] : ((s(bool,'T_0') != s(bool,X0) | p(s(bool,X0))) & (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f42])).
fof(f42,plain,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) <=> p(s(bool,X0)))),
  inference(rectify,[],[f29])).
fof(f29,axiom,(
  ! [X14] : (s(bool,'T_0') = s(bool,X14) <=> p(s(bool,X14)))),
  file('thm.RealTimeQueue.queue_induction','thm.bool.EQ_CLAUSES|split|1')).
fof(f1646,plain,(
  ( ! [X0] : (p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)) ) | $spl1),
  inference(superposition,[],[f1628,f384])).
fof(f384,plain,(
  ( ! [X4] : (s(bool,X4) = s(bool,happ(s(fun('type.RealTimeQueue.queue'(sK0),bool),sK1),s('type.RealTimeQueue.queue'(sK0),sK2))) | s(bool,'T_0') = s(bool,X4)) ) | $spl1),
  inference(subsumption_resolution,[],[f378,f196])).
fof(f378,plain,(
  ( ! [X4] : (p(s(bool,'F_0')) | s(bool,X4) = s(bool,happ(s(fun('type.RealTimeQueue.queue'(sK0),bool),sK1),s('type.RealTimeQueue.queue'(sK0),sK2))) | s(bool,'T_0') = s(bool,X4)) )),
  inference(superposition,[],[f233,f208])).
fof(f208,plain,(
  s(bool,'F_0') = s(bool,happ(s(fun('type.RealTimeQueue.queue'(sK0),bool),sK1),s('type.RealTimeQueue.queue'(sK0),sK2)))),
  inference(resolution,[],[f133,f142])).
fof(f142,plain,(
  ( ! [X0] : (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f110])).
fof(f110,plain,(
  ! [X0] : ((s(bool,'F_0') != s(bool,X0) | ~p(s(bool,X0))) & (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f45])).
fof(f45,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(flattening,[],[f44])).
fof(f44,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(rectify,[],[f27])).
fof(f27,axiom,(
  ! [X14] : (s(bool,'F_0') = s(bool,X14) <=> ~p(s(bool,X14)))),
  file('thm.RealTimeQueue.queue_induction','thm.bool.EQ_CLAUSES|split|2')).
fof(f133,plain,(
  ~p(s(bool,happ(s(fun('type.RealTimeQueue.queue'(sK0),bool),sK1),s('type.RealTimeQueue.queue'(sK0),sK2))))),
  inference(cnf_transformation,[],[f107])).
fof(f107,plain,(
  ! [X3,X4,X5] : p(s(bool,happ(s(fun('type.RealTimeQueue.queue'(sK0),bool),sK1),s('type.RealTimeQueue.queue'(sK0),'const.RealTimeQueue.QUEUE_3'(s('type.list.list'(sK0),X3),s('type.list.list'(sK0),X4),s('type.list.list'(sK0),X5)))))) & ~p(s(bool,happ(s(fun('type.RealTimeQueue.queue'(sK0),bool),sK1),s('type.RealTimeQueue.queue'(sK0),sK2))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1,sK2])],[f106])).
fof(f106,plain,(
  ? [X0,X1] : (! [X3,X4,X5] : p(s(bool,happ(s(fun('type.RealTimeQueue.queue'(X0),bool),X1),s('type.RealTimeQueue.queue'(X0),'const.RealTimeQueue.QUEUE_3'(s('type.list.list'(X0),X3),s('type.list.list'(X0),X4),s('type.list.list'(X0),X5)))))) & ? [X2] : ~p(s(bool,happ(s(fun('type.RealTimeQueue.queue'(X0),bool),X1),s('type.RealTimeQueue.queue'(X0),X2)))))),
  inference(rectify,[],[f99])).
fof(f99,plain,(
  ? [X0,X1] : (! [X2,X3,X4] : p(s(bool,happ(s(fun('type.RealTimeQueue.queue'(X0),bool),X1),s('type.RealTimeQueue.queue'(X0),'const.RealTimeQueue.QUEUE_3'(s('type.list.list'(X0),X2),s('type.list.list'(X0),X3),s('type.list.list'(X0),X4)))))) & ? [X5] : ~p(s(bool,happ(s(fun('type.RealTimeQueue.queue'(X0),bool),X1),s('type.RealTimeQueue.queue'(X0),X5)))))),
  inference(ennf_transformation,[],[f40])).
fof(f40,plain,(
  ~! [X0,X1] : (! [X2,X3,X4] : p(s(bool,happ(s(fun('type.RealTimeQueue.queue'(X0),bool),X1),s('type.RealTimeQueue.queue'(X0),'const.RealTimeQueue.QUEUE_3'(s('type.list.list'(X0),X2),s('type.list.list'(X0),X3),s('type.list.list'(X0),X4)))))) => ! [X5] : p(s(bool,happ(s(fun('type.RealTimeQueue.queue'(X0),bool),X1),s('type.RealTimeQueue.queue'(X0),X5)))))),
  inference(flattening,[],[f39])).
fof(f39,plain,(
  ~! [X0] : ! [X1] : (! [X2,X3,X4] : p(s(bool,happ(s(fun('type.RealTimeQueue.queue'(X0),bool),X1),s('type.RealTimeQueue.queue'(X0),'const.RealTimeQueue.QUEUE_3'(s('type.list.list'(X0),X2),s('type.list.list'(X0),X3),s('type.list.list'(X0),X4)))))) => ! [X5] : p(s(bool,happ(s(fun('type.RealTimeQueue.queue'(X0),bool),X1),s('type.RealTimeQueue.queue'(X0),X5)))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : ! [X7] : (! [X8,X9,X10] : p(s(bool,happ(s(fun('type.RealTimeQueue.queue'(X6),bool),X7),s('type.RealTimeQueue.queue'(X6),'const.RealTimeQueue.QUEUE_3'(s('type.list.list'(X6),X8),s('type.list.list'(X6),X9),s('type.list.list'(X6),X10)))))) => ! [X11] : p(s(bool,happ(s(fun('type.RealTimeQueue.queue'(X6),bool),X7),s('type.RealTimeQueue.queue'(X6),X11)))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : ! [X7] : (! [X8,X9,X10] : p(s(bool,happ(s(fun('type.RealTimeQueue.queue'(X6),bool),X7),s('type.RealTimeQueue.queue'(X6),'const.RealTimeQueue.QUEUE_3'(s('type.list.list'(X6),X8),s('type.list.list'(X6),X9),s('type.list.list'(X6),X10)))))) => ! [X11] : p(s(bool,happ(s(fun('type.RealTimeQueue.queue'(X6),bool),X7),s('type.RealTimeQueue.queue'(X6),X11)))))),
  file('thm.RealTimeQueue.queue_induction','thm.RealTimeQueue.queue_induction')).
fof(f233,plain,(
  ( ! [X2,X1] : (p(s(bool,X1)) | s(bool,X1) = s(bool,X2) | s(bool,'T_0') = s(bool,X2)) )),
  inference(resolution,[],[f176,f138])).
fof(f138,plain,(
  ( ! [X0] : (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f108])).
fof(f176,plain,(
  ( ! [X0,X1] : (p(s(bool,X1)) | p(s(bool,X0)) | s(bool,X0) = s(bool,X1)) )),
  inference(cnf_transformation,[],[f102])).
fof(f102,plain,(
  ! [X0,X1] : ((p(s(bool,X0)) & ~p(s(bool,X1))) | (p(s(bool,X1)) & ~p(s(bool,X0))) | s(bool,X0) = s(bool,X1))),
  inference(flattening,[],[f101])).
fof(f101,plain,(
  ! [X0,X1] : ((p(s(bool,X0)) & ~p(s(bool,X1))) | ((p(s(bool,X1)) & ~p(s(bool,X0))) | s(bool,X0) = s(bool,X1)))),
  inference(ennf_transformation,[],[f74])).
fof(f74,plain,(
  ! [X0,X1] : ((p(s(bool,X0)) => p(s(bool,X1))) => ((p(s(bool,X1)) => p(s(bool,X0))) => s(bool,X0) = s(bool,X1)))),
  inference(rectify,[],[f7])).
fof(f7,axiom,(
  ! [X12,X13] : ((p(s(bool,X12)) => p(s(bool,X13))) => ((p(s(bool,X13)) => p(s(bool,X12))) => s(bool,X12) = s(bool,X13)))),
  file('thm.RealTimeQueue.queue_induction','thm.bool.IMP_ANTISYM_AX')).
fof(f1628,plain,(
  ( ! [X0] : (p(s(bool,happ(s(fun('type.RealTimeQueue.queue'(sK0),bool),sK1),s('type.RealTimeQueue.queue'(sK0),X0))))) )),
  inference(superposition,[],[f132,f162])).
fof(f162,plain,(
  ( ! [X0,X1] : (s('type.RealTimeQueue.queue'(X0),X1) = s('type.RealTimeQueue.queue'(X0),'const.RealTimeQueue.QUEUE_3'(s('type.list.list'(X0),sK3(X1,X0)),s('type.list.list'(X0),sK4(X1,X0)),s('type.list.list'(X0),sK5(X1,X0))))) )),
  inference(cnf_transformation,[],[f123])).
fof(f123,plain,(
  ! [X0,X1] : s('type.RealTimeQueue.queue'(X0),X1) = s('type.RealTimeQueue.queue'(X0),'const.RealTimeQueue.QUEUE_3'(s('type.list.list'(X0),sK3(X1,X0)),s('type.list.list'(X0),sK4(X1,X0)),s('type.list.list'(X0),sK5(X1,X0))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK3,sK4,sK5])],[f56])).
fof(f56,plain,(
  ! [X0,X1] : ? [X2,X3,X4] : s('type.RealTimeQueue.queue'(X0),X1) = s('type.RealTimeQueue.queue'(X0),'const.RealTimeQueue.QUEUE_3'(s('type.list.list'(X0),X2),s('type.list.list'(X0),X3),s('type.list.list'(X0),X4)))),
  inference(flattening,[],[f55])).
fof(f55,plain,(
  ! [X0] : ! [X1] : ? [X2,X3,X4] : s('type.RealTimeQueue.queue'(X0),X1) = s('type.RealTimeQueue.queue'(X0),'const.RealTimeQueue.QUEUE_3'(s('type.list.list'(X0),X2),s('type.list.list'(X0),X3),s('type.list.list'(X0),X4)))),
  inference(rectify,[],[f24])).
fof(f24,axiom,(
  ! [X6] : ! [X41] : ? [X8,X9,X10] : s('type.RealTimeQueue.queue'(X6),X41) = s('type.RealTimeQueue.queue'(X6),'const.RealTimeQueue.QUEUE_3'(s('type.list.list'(X6),X8),s('type.list.list'(X6),X9),s('type.list.list'(X6),X10)))),
  file('thm.RealTimeQueue.queue_induction','thm.RealTimeQueue.queue_nchotomy')).
fof(f132,plain,(
  ( ! [X4,X5,X3] : (p(s(bool,happ(s(fun('type.RealTimeQueue.queue'(sK0),bool),sK1),s('type.RealTimeQueue.queue'(sK0),'const.RealTimeQueue.QUEUE_3'(s('type.list.list'(sK0),X3),s('type.list.list'(sK0),X4),s('type.list.list'(sK0),X5))))))) )),
  inference(cnf_transformation,[],[f107])).
% SZS output end Proof for thm.RealTimeQueue
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 35
% Passive clauses: 371
% Generated clauses: 1485
% Final active clauses: 33
% Final passive clauses: 312
% Input formulas: 37
% Initial clauses: 61
% 
% Duplicate literals: 111
% Trivial inequalities: 27
% Fw subsumption resolutions: 141
% Fw demodulations: 76
% Bw demodulations: 1
% 
% Simple tautologies: 77
% Equational tautologies: 30
% Forward subsumptions: 643
% 
% Binary resolution: 61
% Factoring: 1
% Forward superposition: 314
% Backward superposition: 574
% Self superposition: 52
% Equality factoring: 52
% Equality resolution: 5
% 
% Split clauses: 19
% Split components: 38
% SAT solver clauses: 34
% SAT solver unit clauses: 6
% SAT solver binary clauses: 26
% SAT solver learnt clauses: 1
% 
% Sat splits: 19
% Sat splitting refutations: 2
% 
% TWLsolver clauses: 30
% TWLsolver calls for satisfiability: 13
% 
% Memory used [KB]: 1407
% Time elapsed: 0.040 s
% ------------------------------
% ------------------------------
% Success in time 0.061 s
