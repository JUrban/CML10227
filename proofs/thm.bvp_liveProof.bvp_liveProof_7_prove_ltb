Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 149 next slice time: 5
dis+11_7_3 on thm.bvp_liveProof
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.bvp_liveProof
% SZS output start Proof for thm.bvp_liveProof
fof(f5593,plain,(
  $false),
  inference(subsumption_resolution,[],[f5592,f75])).
fof(f75,plain,(
  s('type.semanticPrimitives.error_result'('type.bvlSem.v'),sK4) != s('type.semanticPrimitives.error_result'('type.bvlSem.v'),'const.semanticPrimitives.Rabort_1'(s('type.semanticPrimitives.abort','const.semanticPrimitives.Rtype_error_0')))),
  inference(cnf_transformation,[],[f65])).
fof(f65,plain,(
  p(s(bool,'const.bvp_live.is_pure_1'(s('type.closLang.op',sK3)))) & s('type.semanticPrimitives.result'('type.pair.prod'('type.bvlSem.v','type.bvpSem.state'(sK0)),'type.bvlSem.v'),'const.semanticPrimitives.Rerr_1'(s('type.semanticPrimitives.error_result'('type.bvlSem.v'),sK4))) = s('type.semanticPrimitives.result'('type.pair.prod'('type.bvlSem.v','type.bvpSem.state'(sK0)),'type.bvlSem.v'),'const.bvpSem.do_app_3'(s('type.closLang.op',sK3),s('type.list.list'('type.bvlSem.v'),sK1),s('type.bvpSem.state'(sK0),sK2))) & s('type.semanticPrimitives.error_result'('type.bvlSem.v'),sK4) != s('type.semanticPrimitives.error_result'('type.bvlSem.v'),'const.semanticPrimitives.Rabort_1'(s('type.semanticPrimitives.abort','const.semanticPrimitives.Rtype_error_0')))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1,sK2,sK3,sK4])],[f55])).
fof(f55,plain,(
  ? [X0,X1,X2,X3,X4] : (p(s(bool,'const.bvp_live.is_pure_1'(s('type.closLang.op',X3)))) & s('type.semanticPrimitives.result'('type.pair.prod'('type.bvlSem.v','type.bvpSem.state'(X0)),'type.bvlSem.v'),'const.semanticPrimitives.Rerr_1'(s('type.semanticPrimitives.error_result'('type.bvlSem.v'),X4))) = s('type.semanticPrimitives.result'('type.pair.prod'('type.bvlSem.v','type.bvpSem.state'(X0)),'type.bvlSem.v'),'const.bvpSem.do_app_3'(s('type.closLang.op',X3),s('type.list.list'('type.bvlSem.v'),X1),s('type.bvpSem.state'(X0),X2))) & s('type.semanticPrimitives.error_result'('type.bvlSem.v'),X4) != s('type.semanticPrimitives.error_result'('type.bvlSem.v'),'const.semanticPrimitives.Rabort_1'(s('type.semanticPrimitives.abort','const.semanticPrimitives.Rtype_error_0'))))),
  inference(flattening,[],[f54])).
fof(f54,plain,(
  ? [X0,X1,X2,X3,X4] : ((p(s(bool,'const.bvp_live.is_pure_1'(s('type.closLang.op',X3)))) & s('type.semanticPrimitives.result'('type.pair.prod'('type.bvlSem.v','type.bvpSem.state'(X0)),'type.bvlSem.v'),'const.semanticPrimitives.Rerr_1'(s('type.semanticPrimitives.error_result'('type.bvlSem.v'),X4))) = s('type.semanticPrimitives.result'('type.pair.prod'('type.bvlSem.v','type.bvpSem.state'(X0)),'type.bvlSem.v'),'const.bvpSem.do_app_3'(s('type.closLang.op',X3),s('type.list.list'('type.bvlSem.v'),X1),s('type.bvpSem.state'(X0),X2)))) & s('type.semanticPrimitives.error_result'('type.bvlSem.v'),X4) != s('type.semanticPrimitives.error_result'('type.bvlSem.v'),'const.semanticPrimitives.Rabort_1'(s('type.semanticPrimitives.abort','const.semanticPrimitives.Rtype_error_0'))))),
  inference(ennf_transformation,[],[f24])).
fof(f24,plain,(
  ~! [X0,X1,X2,X3,X4] : ((p(s(bool,'const.bvp_live.is_pure_1'(s('type.closLang.op',X3)))) & s('type.semanticPrimitives.result'('type.pair.prod'('type.bvlSem.v','type.bvpSem.state'(X0)),'type.bvlSem.v'),'const.semanticPrimitives.Rerr_1'(s('type.semanticPrimitives.error_result'('type.bvlSem.v'),X4))) = s('type.semanticPrimitives.result'('type.pair.prod'('type.bvlSem.v','type.bvpSem.state'(X0)),'type.bvlSem.v'),'const.bvpSem.do_app_3'(s('type.closLang.op',X3),s('type.list.list'('type.bvlSem.v'),X1),s('type.bvpSem.state'(X0),X2)))) => s('type.semanticPrimitives.error_result'('type.bvlSem.v'),X4) = s('type.semanticPrimitives.error_result'('type.bvlSem.v'),'const.semanticPrimitives.Rabort_1'(s('type.semanticPrimitives.abort','const.semanticPrimitives.Rtype_error_0'))))),
  inference(flattening,[],[f23])).
fof(f23,plain,(
  ~! [X0] : ! [X1,X2,X3,X4] : ((p(s(bool,'const.bvp_live.is_pure_1'(s('type.closLang.op',X3)))) & s('type.semanticPrimitives.result'('type.pair.prod'('type.bvlSem.v','type.bvpSem.state'(X0)),'type.bvlSem.v'),'const.semanticPrimitives.Rerr_1'(s('type.semanticPrimitives.error_result'('type.bvlSem.v'),X4))) = s('type.semanticPrimitives.result'('type.pair.prod'('type.bvlSem.v','type.bvpSem.state'(X0)),'type.bvlSem.v'),'const.bvpSem.do_app_3'(s('type.closLang.op',X3),s('type.list.list'('type.bvlSem.v'),X1),s('type.bvpSem.state'(X0),X2)))) => s('type.semanticPrimitives.error_result'('type.bvlSem.v'),X4) = s('type.semanticPrimitives.error_result'('type.bvlSem.v'),'const.semanticPrimitives.Rabort_1'(s('type.semanticPrimitives.abort','const.semanticPrimitives.Rtype_error_0'))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : ! [X7,X8,X9,X10] : ((p(s(bool,'const.bvp_live.is_pure_1'(s('type.closLang.op',X9)))) & s('type.semanticPrimitives.result'('type.pair.prod'('type.bvlSem.v','type.bvpSem.state'(X6)),'type.bvlSem.v'),'const.semanticPrimitives.Rerr_1'(s('type.semanticPrimitives.error_result'('type.bvlSem.v'),X10))) = s('type.semanticPrimitives.result'('type.pair.prod'('type.bvlSem.v','type.bvpSem.state'(X6)),'type.bvlSem.v'),'const.bvpSem.do_app_3'(s('type.closLang.op',X9),s('type.list.list'('type.bvlSem.v'),X7),s('type.bvpSem.state'(X6),X8)))) => s('type.semanticPrimitives.error_result'('type.bvlSem.v'),X10) = s('type.semanticPrimitives.error_result'('type.bvlSem.v'),'const.semanticPrimitives.Rabort_1'(s('type.semanticPrimitives.abort','const.semanticPrimitives.Rtype_error_0'))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : ! [X7,X8,X9,X10] : ((p(s(bool,'const.bvp_live.is_pure_1'(s('type.closLang.op',X9)))) & s('type.semanticPrimitives.result'('type.pair.prod'('type.bvlSem.v','type.bvpSem.state'(X6)),'type.bvlSem.v'),'const.semanticPrimitives.Rerr_1'(s('type.semanticPrimitives.error_result'('type.bvlSem.v'),X10))) = s('type.semanticPrimitives.result'('type.pair.prod'('type.bvlSem.v','type.bvpSem.state'(X6)),'type.bvlSem.v'),'const.bvpSem.do_app_3'(s('type.closLang.op',X9),s('type.list.list'('type.bvlSem.v'),X7),s('type.bvpSem.state'(X6),X8)))) => s('type.semanticPrimitives.error_result'('type.bvlSem.v'),X10) = s('type.semanticPrimitives.error_result'('type.bvlSem.v'),'const.semanticPrimitives.Rabort_1'(s('type.semanticPrimitives.abort','const.semanticPrimitives.Rtype_error_0'))))),
  file('thm.bvp_liveProof.bvp_liveProof_7_prove_ltb','thm.bvp_liveProof.bvp_liveProof_7_prove_ltb')).
fof(f5592,plain,(
  s('type.semanticPrimitives.error_result'('type.bvlSem.v'),sK4) = s('type.semanticPrimitives.error_result'('type.bvlSem.v'),'const.semanticPrimitives.Rabort_1'(s('type.semanticPrimitives.abort','const.semanticPrimitives.Rtype_error_0')))),
  inference(equality_resolution,[],[f1622])).
fof(f1622,plain,(
  ( ! [X0] : (s('type.semanticPrimitives.result'('type.pair.prod'('type.bvlSem.v','type.bvpSem.state'(sK0)),'type.bvlSem.v'),'const.semanticPrimitives.Rerr_1'(s('type.semanticPrimitives.error_result'('type.bvlSem.v'),sK4))) != s('type.semanticPrimitives.result'('type.pair.prod'('type.bvlSem.v','type.bvpSem.state'(sK0)),'type.bvlSem.v'),'const.semanticPrimitives.Rerr_1'(s('type.semanticPrimitives.error_result'('type.bvlSem.v'),X0))) | s('type.semanticPrimitives.error_result'('type.bvlSem.v'),X0) = s('type.semanticPrimitives.error_result'('type.bvlSem.v'),'const.semanticPrimitives.Rabort_1'(s('type.semanticPrimitives.abort','const.semanticPrimitives.Rtype_error_0')))) )),
  inference(superposition,[],[f86,f74])).
fof(f74,plain,(
  s('type.semanticPrimitives.result'('type.pair.prod'('type.bvlSem.v','type.bvpSem.state'(sK0)),'type.bvlSem.v'),'const.semanticPrimitives.Rerr_1'(s('type.semanticPrimitives.error_result'('type.bvlSem.v'),sK4))) = s('type.semanticPrimitives.result'('type.pair.prod'('type.bvlSem.v','type.bvpSem.state'(sK0)),'type.bvlSem.v'),'const.bvpSem.do_app_3'(s('type.closLang.op',sK3),s('type.list.list'('type.bvlSem.v'),sK1),s('type.bvpSem.state'(sK0),sK2)))),
  inference(cnf_transformation,[],[f65])).
fof(f86,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s('type.semanticPrimitives.result'('type.pair.prod'('type.bvlSem.v','type.bvpSem.state'(X0)),'type.bvlSem.v'),'const.semanticPrimitives.Rerr_1'(s('type.semanticPrimitives.error_result'('type.bvlSem.v'),X4))) != s('type.semanticPrimitives.result'('type.pair.prod'('type.bvlSem.v','type.bvpSem.state'(X0)),'type.bvlSem.v'),'const.bvpSem.do_app_3'(s('type.closLang.op',X3),s('type.list.list'('type.bvlSem.v'),X1),s('type.bvpSem.state'(X0),X2))) | s('type.semanticPrimitives.error_result'('type.bvlSem.v'),X4) = s('type.semanticPrimitives.error_result'('type.bvlSem.v'),'const.semanticPrimitives.Rabort_1'(s('type.semanticPrimitives.abort','const.semanticPrimitives.Rtype_error_0')))) )),
  inference(cnf_transformation,[],[f57])).
fof(f57,plain,(
  ! [X0,X1,X2,X3,X4] : (s('type.semanticPrimitives.result'('type.pair.prod'('type.bvlSem.v','type.bvpSem.state'(X0)),'type.bvlSem.v'),'const.semanticPrimitives.Rerr_1'(s('type.semanticPrimitives.error_result'('type.bvlSem.v'),X4))) != s('type.semanticPrimitives.result'('type.pair.prod'('type.bvlSem.v','type.bvpSem.state'(X0)),'type.bvlSem.v'),'const.bvpSem.do_app_3'(s('type.closLang.op',X3),s('type.list.list'('type.bvlSem.v'),X1),s('type.bvpSem.state'(X0),X2))) | s('type.semanticPrimitives.error_result'('type.bvlSem.v'),X4) = s('type.semanticPrimitives.error_result'('type.bvlSem.v'),'const.semanticPrimitives.Rabort_1'(s('type.semanticPrimitives.abort','const.semanticPrimitives.Rtype_error_0'))))),
  inference(ennf_transformation,[],[f34])).
fof(f34,plain,(
  ! [X0,X1,X2,X3,X4] : (s('type.semanticPrimitives.result'('type.pair.prod'('type.bvlSem.v','type.bvpSem.state'(X0)),'type.bvlSem.v'),'const.semanticPrimitives.Rerr_1'(s('type.semanticPrimitives.error_result'('type.bvlSem.v'),X4))) = s('type.semanticPrimitives.result'('type.pair.prod'('type.bvlSem.v','type.bvpSem.state'(X0)),'type.bvlSem.v'),'const.bvpSem.do_app_3'(s('type.closLang.op',X3),s('type.list.list'('type.bvlSem.v'),X1),s('type.bvpSem.state'(X0),X2))) => s('type.semanticPrimitives.error_result'('type.bvlSem.v'),X4) = s('type.semanticPrimitives.error_result'('type.bvlSem.v'),'const.semanticPrimitives.Rabort_1'(s('type.semanticPrimitives.abort','const.semanticPrimitives.Rtype_error_0'))))),
  inference(flattening,[],[f33])).
fof(f33,plain,(
  ! [X0] : ! [X1,X2,X3,X4] : (s('type.semanticPrimitives.result'('type.pair.prod'('type.bvlSem.v','type.bvpSem.state'(X0)),'type.bvlSem.v'),'const.semanticPrimitives.Rerr_1'(s('type.semanticPrimitives.error_result'('type.bvlSem.v'),X4))) = s('type.semanticPrimitives.result'('type.pair.prod'('type.bvlSem.v','type.bvpSem.state'(X0)),'type.bvlSem.v'),'const.bvpSem.do_app_3'(s('type.closLang.op',X3),s('type.list.list'('type.bvlSem.v'),X1),s('type.bvpSem.state'(X0),X2))) => s('type.semanticPrimitives.error_result'('type.bvlSem.v'),X4) = s('type.semanticPrimitives.error_result'('type.bvlSem.v'),'const.semanticPrimitives.Rabort_1'(s('type.semanticPrimitives.abort','const.semanticPrimitives.Rtype_error_0'))))),
  inference(rectify,[],[f7])).
fof(f7,axiom,(
  ! [X6] : ! [X11,X8,X9,X10] : (s('type.semanticPrimitives.result'('type.pair.prod'('type.bvlSem.v','type.bvpSem.state'(X6)),'type.bvlSem.v'),'const.semanticPrimitives.Rerr_1'(s('type.semanticPrimitives.error_result'('type.bvlSem.v'),X10))) = s('type.semanticPrimitives.result'('type.pair.prod'('type.bvlSem.v','type.bvpSem.state'(X6)),'type.bvlSem.v'),'const.bvpSem.do_app_3'(s('type.closLang.op',X9),s('type.list.list'('type.bvlSem.v'),X11),s('type.bvpSem.state'(X6),X8))) => s('type.semanticPrimitives.error_result'('type.bvlSem.v'),X10) = s('type.semanticPrimitives.error_result'('type.bvlSem.v'),'const.semanticPrimitives.Rabort_1'(s('type.semanticPrimitives.abort','const.semanticPrimitives.Rtype_error_0'))))),
  file('thm.bvp_liveProof.bvp_liveProof_7_prove_ltb','thm.bvpProps.do_app_err')).
% SZS output end Proof for thm.bvp_liveProof
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 81
% Passive clauses: 1008
% Generated clauses: 5360
% Final active clauses: 69
% Final passive clauses: 881
% Input formulas: 21
% Initial clauses: 40
% 
% Duplicate literals: 275
% Trivial inequalities: 134
% Fw subsumption resolutions: 688
% Fw demodulations: 418
% Bw demodulations: 5
% 
% Simple tautologies: 185
% Equational tautologies: 37
% Forward subsumptions: 2386
% 
% Binary resolution: 130
% Factoring: 1
% Forward superposition: 1880
% Backward superposition: 1493
% Self superposition: 136
% Equality factoring: 76
% Equality resolution: 20
% 
% Split clauses: 172
% Split components: 360
% SAT solver clauses: 269
% SAT solver unit clauses: 4
% SAT solver binary clauses: 30
% 
% Sat splits: 172
% Sat splitting refutations: 7
% 
% TWLsolver clauses: 269
% TWLsolver calls for satisfiability: 53
% 
% Memory used [KB]: 4861
% Time elapsed: 0.220 s
% ------------------------------
% ------------------------------
% Success in time 0.22 s
