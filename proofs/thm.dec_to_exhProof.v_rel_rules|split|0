Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 149 next slice time: 5
dis+11_7_3 on thm.dec_to_exhProof
% (61553)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 103
% Passive clauses: 1999
% Generated clauses: 13083
% Final active clauses: 88
% Final passive clauses: 1704
% Input formulas: 21
% Initial clauses: 209
% 
% Duplicate literals: 651
% Trivial inequalities: 118
% Fw subsumption resolutions: 2197
% Fw demodulations: 718
% Bw demodulations: 11
% 
% Simple tautologies: 222
% Equational tautologies: 107
% Forward subsumptions: 5021
% 
% Binary resolution: 146
% Factoring: 2
% Forward superposition: 3620
% Backward superposition: 4642
% Self superposition: 385
% Equality factoring: 296
% Equality resolution: 16
% 
% Split clauses: 390
% Split components: 780
% SAT solver clauses: 1212
% SAT solver unit clauses: 7
% SAT solver binary clauses: 176
% 
% Sat splits: 390
% Sat splitting refutations: 4
% 
% TWLsolver clauses: 1212
% TWLsolver calls for satisfiability: 161
% 
% Memory used [KB]: 6780
% Time elapsed: 0.600 s
% ------------------------------
% ------------------------------
% remaining time: 143 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.dec_to_exhProof
% (61633)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 109
% Passive clauses: 379
% Generated clauses: 8645
% Final active clauses: 91
% Final passive clauses: 158
% Input formulas: 21
% Initial clauses: 209
% 
% Duplicate literals: 650
% Trivial inequalities: 85
% Fw subsumption resolutions: 970
% Fw demodulations: 373
% Bw demodulations: 115
% Condensations: 1808
% Global subsumptions: 4
% 
% Simple tautologies: 151
% Equational tautologies: 60
% Forward subsumptions: 3556
% 
% Binary resolution: 71
% Factoring: 1
% Forward superposition: 2005
% Backward superposition: 2381
% Self superposition: 253
% Equality factoring: 192
% Equality resolution: 22
% 
% Split clauses: 68
% Split components: 136
% SAT solver clauses: 748
% SAT solver unit clauses: 212
% SAT solver binary clauses: 80
% SAT solver learnt clauses: 8
% 
% Sat splits: 68
% Sat splitting refutations: 6
% 
% TWLsolver clauses: 732
% TWLsolver calls for satisfiability: 3618
% 
% Memory used [KB]: 7675
% Time elapsed: 0.700 s
% ------------------------------
% ------------------------------
% remaining time: 136 next slice time: 103
lrs+11_2_br=off:cond=on:fde=none:gs=on:gsaa=full_model:lwlo=on:nwc=2:sas=minisat:stl=30:ssfp=100000:ssfq=1.4:smm=sco:ssnc=none:sp=occurrence:urr=on_98 on thm.dec_to_exhProof
% (61685)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 172
% Passive clauses: 1655
% Generated clauses: 34031
% Final active clauses: 96
% Final passive clauses: 375
% Input formulas: 21
% Initial clauses: 209
% 
% Duplicate literals: 3849
% Trivial inequalities: 275
% Fw subsumption resolutions: 2970
% Fw demodulations: 730
% Bw demodulations: 805
% Condensations: 7436
% Global subsumptions: 16
% 
% Simple tautologies: 461
% Equational tautologies: 405
% Forward subsumptions: 14034
% 
% Unit resulting resolution: 620
% Factoring: 2
% Forward superposition: 7064
% Backward superposition: 8186
% Self superposition: 665
% Equality factoring: 564
% Equality resolution: 39
% 
% Split clauses: 74
% Split components: 148
% SAT solver clauses: 1845
% SAT solver unit clauses: 34
% SAT solver binary clauses: 400
% 
% Sat splits: 74
% Sat splitting refutations: 24
% 
% Memory used [KB]: 18421
% Time elapsed: 10.400 s
% ------------------------------
% ------------------------------
% remaining time: 32 next slice time: 32
dis+11_5_fde=none:nwc=1:sas=minisat:sd=1:ss=axioms:st=5.0:sos=all:sdd=large:sser=off:sfr=on:ssfp=100000:ssfq=2.0:ssnc=none_37 on thm.dec_to_exhProof
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.dec_to_exhProof
% SZS output start Proof for thm.dec_to_exhProof
fof(f9376,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f640,f645,f1391,f1394,f1392,f1476,f1481,f1478,f1482,f1519,f186,f182,f1536,f2193,f2538,f2542,f2575,f2548,f2552,f2581,f2554,f2574,f2558,f2582,f2576,f2902,f3343,f3349,f3345,f3352,f3357,f3353,f3359,f3344,f3364,f3360,f3350,f3452,f3454,f3464,f3463,f3558,f3563,f3565,f3786,f3919,f4032,f2903,f4497,f4505,f5054,f5058,f5060,f5066,f4498,f5070,f5059,f5071,f5061,f5144,f5146,f5145,f5178,f5180,f5179,f5341,f5343,f5342,f5375,f5377,f5376,f5416,f5418,f5417,f5498,f5500,f5499,f5570,f5572,f5571,f5640,f5642,f5641,f5738,f5740,f5739,f5836,f5838,f5837,f5873,f5875,f5874,f5912,f5914,f5913,f5946,f5948,f5947,f6040,f6042,f6041,f6086,f6088,f6087,f6121,f6123,f6122,f6213,f6215,f6214,f6251,f6253,f6252,f6394,f6396,f6408,f6409,f6414,f6416,f6395,f6547,f6549,f6548,f6695,f6697,f6707,f6708,f6713,f6415,f6714,f6696,f6847,f6849,f6848,f6938,f6940,f6939,f7074,f7076,f7075,f7136,f7138,f7230,f7232,f7231,f7323,f7325,f7324,f7330,f7332,f7331,f7429,f7431,f7430,f7436,f7438,f7437,f7529,f7531,f7530,f7620,f7622,f7621,f7711,f7713,f7712,f7763,f7765,f7764,f7852,f7854,f7853,f7901,f7903,f7902,f7944,f7946,f7945,f8030,f8032,f8031,f8076,f8078,f8077,f8122,f8124,f8123,f8196,f8198,f8197,f8292,f8293,f7137,f8296,f8297,f8342,f8344,f8343,f8506,f8508,f8507,f8517,f8519,f8518,f8670,f8672,f8671,f8727,f8729,f8728,f8734,f8736,f1477,f8737,f8735,f8885,f8887,f8886,f8889,f8890,f644,f9041,f9043,f9042,f9197,f9199,f9198,f9349,f9351,f9350,f3453,f9366,f9367])).
fof(f9367,plain,(
  $false | $spl18),
  inference(resolution,[],[f2575,f371])).
fof(f371,plain,(
  ~sP6(sK58('const.exhSem.Litv_1'(s('type.ast.lit',sK22)),'const.conSem.Litv_1'(s('type.ast.lit',sK22)),sK21),sK59('const.exhSem.Litv_1'(s('type.ast.lit',sK22)),'const.conSem.Litv_1'(s('type.ast.lit',sK22)),sK21),sK60('const.exhSem.Litv_1'(s('type.ast.lit',sK22)),'const.conSem.Litv_1'(s('type.ast.lit',sK22)),sK21))),
  inference(resolution,[],[f166,f249])).
fof(f249,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,'const.dec_to_exhProof.v_rel_3'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X0),s('type.conSem.v',X1),s('type.exhSem.v',X2)))) | ~sP6(sK58(X2,X1,X0),sK59(X2,X1,X0),sK60(X2,X1,X0))) )),
  inference(cnf_transformation,[],[f110])).
fof(f110,plain,(
  ! [X0,X1,X2] : ((~p(s(bool,'const.dec_to_exhProof.v_rel_3'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X0),s('type.conSem.v',X1),s('type.exhSem.v',X2)))) | ! [X12,X13,X14] : (sP6(X12,X13,X14) | (sP4(X13,sK52(X14,X13,X12,X2,X1,X0),X12,sK54(X14,X13,X12,X2,X1,X0),sK53(X14,X13,X12,X2,X1,X0)) & ~p(s(bool,happ(s(fun('type.list.list'('type.exhSem.v'),bool),happ(s(fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool))),X13),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),sK52(X14,X13,X12,X2,X1,X0)))),s('type.list.list'('type.conSem.v'),sK53(X14,X13,X12,X2,X1,X0)))),s('type.list.list'('type.exhSem.v'),sK54(X14,X13,X12,X2,X1,X0)))))) | (sP5(X14,sK55(X14,X13,X12,X2,X1,X0),X12,sK57(X14,X13,X12,X2,X1,X0),sK56(X14,X13,X12,X2,X1,X0)) & ~p(s(bool,happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool),happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool))),X14),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),sK55(X14,X13,X12,X2,X1,X0)))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),sK56(X14,X13,X12,X2,X1,X0)))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK57(X14,X13,X12,X2,X1,X0)))))) | p(s(bool,happ(s(fun('type.exhSem.v',bool),happ(s(fun('type.conSem.v',fun('type.exhSem.v',bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.conSem.v',fun('type.exhSem.v',bool))),X12),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X0))),s('type.conSem.v',X1))),s('type.exhSem.v',X2)))))) & ((~sP6(sK58(X2,X1,X0),sK59(X2,X1,X0),sK60(X2,X1,X0)) & ! [X9,X10,X11] : (~sP4(sK59(X2,X1,X0),X9,sK58(X2,X1,X0),X11,X10) | p(s(bool,happ(s(fun('type.list.list'('type.exhSem.v'),bool),happ(s(fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool))),sK59(X2,X1,X0)),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X9))),s('type.list.list'('type.conSem.v'),X10))),s('type.list.list'('type.exhSem.v'),X11))))) & ! [X6,X7,X8] : (~sP5(sK60(X2,X1,X0),X6,sK58(X2,X1,X0),X8,X7) | p(s(bool,happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool),happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool))),sK60(X2,X1,X0)),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X6))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X7))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X8))))) & ~p(s(bool,happ(s(fun('type.exhSem.v',bool),happ(s(fun('type.conSem.v',fun('type.exhSem.v',bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.conSem.v',fun('type.exhSem.v',bool))),sK58(X2,X1,X0)),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X0))),s('type.conSem.v',X1))),s('type.exhSem.v',X2))))) | p(s(bool,'const.dec_to_exhProof.v_rel_3'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X0),s('type.conSem.v',X1),s('type.exhSem.v',X2))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK52,sK53,sK54,sK55,sK56,sK57,sK58,sK59,sK60])],[f109])).
fof(f109,plain,(
  ! [X0,X1,X2] : ((~p(s(bool,'const.dec_to_exhProof.v_rel_3'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X0),s('type.conSem.v',X1),s('type.exhSem.v',X2)))) | ! [X12,X13,X14] : (sP6(X12,X13,X14) | ? [X18,X19,X20] : (sP4(X13,X18,X12,X20,X19) & ~p(s(bool,happ(s(fun('type.list.list'('type.exhSem.v'),bool),happ(s(fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool))),X13),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X18))),s('type.list.list'('type.conSem.v'),X19))),s('type.list.list'('type.exhSem.v'),X20))))) | ? [X15,X16,X17] : (sP5(X14,X15,X12,X17,X16) & ~p(s(bool,happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool),happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool))),X14),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X15))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X16))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X17))))) | p(s(bool,happ(s(fun('type.exhSem.v',bool),happ(s(fun('type.conSem.v',fun('type.exhSem.v',bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.conSem.v',fun('type.exhSem.v',bool))),X12),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X0))),s('type.conSem.v',X1))),s('type.exhSem.v',X2)))))) & (? [X3,X4,X5] : (~sP6(X3,X4,X5) & ! [X9,X10,X11] : (~sP4(X4,X9,X3,X11,X10) | p(s(bool,happ(s(fun('type.list.list'('type.exhSem.v'),bool),happ(s(fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool))),X4),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X9))),s('type.list.list'('type.conSem.v'),X10))),s('type.list.list'('type.exhSem.v'),X11))))) & ! [X6,X7,X8] : (~sP5(X5,X6,X3,X8,X7) | p(s(bool,happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool),happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool))),X5),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X6))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X7))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X8))))) & ~p(s(bool,happ(s(fun('type.exhSem.v',bool),happ(s(fun('type.conSem.v',fun('type.exhSem.v',bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.conSem.v',fun('type.exhSem.v',bool))),X3),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X0))),s('type.conSem.v',X1))),s('type.exhSem.v',X2))))) | p(s(bool,'const.dec_to_exhProof.v_rel_3'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X0),s('type.conSem.v',X1),s('type.exhSem.v',X2))))))),
  inference(rectify,[],[f108])).
fof(f108,plain,(
  ! [X0,X1,X2] : ((~p(s(bool,'const.dec_to_exhProof.v_rel_3'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X0),s('type.conSem.v',X1),s('type.exhSem.v',X2)))) | ! [X3,X4,X5] : (sP6(X3,X4,X5) | ? [X14,X15,X16] : (sP4(X4,X14,X3,X16,X15) & ~p(s(bool,happ(s(fun('type.list.list'('type.exhSem.v'),bool),happ(s(fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool))),X4),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X14))),s('type.list.list'('type.conSem.v'),X15))),s('type.list.list'('type.exhSem.v'),X16))))) | ? [X6,X7,X8] : (sP5(X5,X6,X3,X8,X7) & ~p(s(bool,happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool),happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool))),X5),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X6))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X7))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X8))))) | p(s(bool,happ(s(fun('type.exhSem.v',bool),happ(s(fun('type.conSem.v',fun('type.exhSem.v',bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.conSem.v',fun('type.exhSem.v',bool))),X3),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X0))),s('type.conSem.v',X1))),s('type.exhSem.v',X2)))))) & (? [X3,X4,X5] : (~sP6(X3,X4,X5) & ! [X14,X15,X16] : (~sP4(X4,X14,X3,X16,X15) | p(s(bool,happ(s(fun('type.list.list'('type.exhSem.v'),bool),happ(s(fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool))),X4),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X14))),s('type.list.list'('type.conSem.v'),X15))),s('type.list.list'('type.exhSem.v'),X16))))) & ! [X6,X7,X8] : (~sP5(X5,X6,X3,X8,X7) | p(s(bool,happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool),happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool))),X5),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X6))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X7))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X8))))) & ~p(s(bool,happ(s(fun('type.exhSem.v',bool),happ(s(fun('type.conSem.v',fun('type.exhSem.v',bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.conSem.v',fun('type.exhSem.v',bool))),X3),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X0))),s('type.conSem.v',X1))),s('type.exhSem.v',X2))))) | p(s(bool,'const.dec_to_exhProof.v_rel_3'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X0),s('type.conSem.v',X1),s('type.exhSem.v',X2))))))),
  inference(nnf_transformation,[],[f54])).
fof(f54,plain,(
  ! [X0,X1,X2] : (p(s(bool,'const.dec_to_exhProof.v_rel_3'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X0),s('type.conSem.v',X1),s('type.exhSem.v',X2)))) <=> ! [X3,X4,X5] : (sP6(X3,X4,X5) | ? [X14,X15,X16] : (sP4(X4,X14,X3,X16,X15) & ~p(s(bool,happ(s(fun('type.list.list'('type.exhSem.v'),bool),happ(s(fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool))),X4),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X14))),s('type.list.list'('type.conSem.v'),X15))),s('type.list.list'('type.exhSem.v'),X16))))) | ? [X6,X7,X8] : (sP5(X5,X6,X3,X8,X7) & ~p(s(bool,happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool),happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool))),X5),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X6))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X7))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X8))))) | p(s(bool,happ(s(fun('type.exhSem.v',bool),happ(s(fun('type.conSem.v',fun('type.exhSem.v',bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.conSem.v',fun('type.exhSem.v',bool))),X3),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X0))),s('type.conSem.v',X1))),s('type.exhSem.v',X2))))))),
  inference(definition_folding,[],[f42,f53,f52,f51,f50,f49,f48,f47])).
fof(f47,plain,(
  ! [X5,X21,X23,X22] : (sP0(X5,X21,X23,X22) <=> ? [X32,X33,X34,X35,X36] : (s('type.conSem.v',X22) = s('type.conSem.v','const.conSem.Closure_3'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X32),s('type.list.list'('type.string.char'),X33),s('type.conLang.exp',X34))) & s('type.exhSem.v',X23) = s('type.exhSem.v','const.exhSem.Closure_3'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X35),s('type.list.list'('type.string.char'),X33),s('type.exhLang.exp','const.dec_to_exh.compile_exp_2'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X36),s('type.conLang.exp',X34))))) & p(s(bool,'const.finite_map.SUBMAP_2'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X36),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X21)))) & p(s(bool,happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool),happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool))),X5),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X21))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X32))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X35))))))),
  introduced(predicate_definition_introduction,[new_symbols(naming,[sP0])])).
fof(f48,plain,(
  ! [X5,X21,X23,X22] : (sP1(X5,X21,X23,X22) <=> ? [X27,X28,X29,X30,X31] : (s('type.conSem.v',X22) = s('type.conSem.v','const.conSem.Recclosure_3'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X28),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.conLang.exp'))),X30),s('type.list.list'('type.string.char'),X29))) & s('type.exhSem.v',X23) = s('type.exhSem.v','const.exhSem.Recclosure_3'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X27),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.exhLang.exp'))),'const.dec_to_exh.compile_funs_2'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X31),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.conLang.exp'))),X30))),s('type.list.list'('type.string.char'),X29))) & p(s(bool,'const.finite_map.SUBMAP_2'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X31),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X21)))) & p(s(bool,happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool),happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool))),X5),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X21))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X28))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X27))))))),
  introduced(predicate_definition_introduction,[new_symbols(naming,[sP1])])).
fof(f49,plain,(
  ! [X4,X21,X23,X22] : (sP2(X4,X21,X23,X22) <=> ? [X37,X38,X39] : (s('type.conSem.v',X22) = s('type.conSem.v','const.conSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')),X37),s('type.list.list'('type.conSem.v'),X38))) & s('type.exhSem.v',X23) = s('type.exhSem.v','const.exhSem.Conv_2'(s('type.num.num','const.dec_to_exhProof.get_tag_1'(s('type.option.option'('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')),X37))),s('type.list.list'('type.exhSem.v'),X39))) & p(s(bool,happ(s(fun('type.list.list'('type.exhSem.v'),bool),happ(s(fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool))),X4),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X21))),s('type.list.list'('type.conSem.v'),X38))),s('type.list.list'('type.exhSem.v'),X39))))))),
  introduced(predicate_definition_introduction,[new_symbols(naming,[sP2])])).
fof(f50,plain,(
  ! [X4,X21,X23,X22] : (sP3(X4,X21,X23,X22) <=> ? [X24,X25] : (s('type.conSem.v',X22) = s('type.conSem.v','const.conSem.Vectorv_1'(s('type.list.list'('type.conSem.v'),X24))) & s('type.exhSem.v',X23) = s('type.exhSem.v','const.exhSem.Vectorv_1'(s('type.list.list'('type.exhSem.v'),X25))) & p(s(bool,happ(s(fun('type.list.list'('type.exhSem.v'),bool),happ(s(fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool))),X4),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X21))),s('type.list.list'('type.conSem.v'),X24))),s('type.list.list'('type.exhSem.v'),X25))))))),
  introduced(predicate_definition_introduction,[new_symbols(naming,[sP3])])).
fof(f51,plain,(
  ! [X4,X14,X3,X16,X15] : (sP4(X4,X14,X3,X16,X15) <=> ((s('type.list.list'('type.conSem.v'),'const.list.NIL_0') = s('type.list.list'('type.conSem.v'),X15) & s('type.list.list'('type.exhSem.v'),'const.list.NIL_0') = s('type.list.list'('type.exhSem.v'),X16)) | ? [X17,X18,X19,X20] : (s('type.list.list'('type.conSem.v'),X15) = s('type.list.list'('type.conSem.v'),'const.list.CONS_2'(s('type.conSem.v',X17),s('type.list.list'('type.conSem.v'),X19))) & s('type.list.list'('type.exhSem.v'),X16) = s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',X18),s('type.list.list'('type.exhSem.v'),X20))) & p(s(bool,happ(s(fun('type.exhSem.v',bool),happ(s(fun('type.conSem.v',fun('type.exhSem.v',bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.conSem.v',fun('type.exhSem.v',bool))),X3),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X14))),s('type.conSem.v',X17))),s('type.exhSem.v',X18)))) & p(s(bool,happ(s(fun('type.list.list'('type.exhSem.v'),bool),happ(s(fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool))),X4),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X14))),s('type.list.list'('type.conSem.v'),X19))),s('type.list.list'('type.exhSem.v'),X20)))))))),
  introduced(predicate_definition_introduction,[new_symbols(naming,[sP4])])).
fof(f52,plain,(
  ! [X5,X6,X3,X8,X7] : (sP5(X5,X6,X3,X8,X7) <=> ((s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'const.list.NIL_0') = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X7) & s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.NIL_0') = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X8)) | ? [X9,X10,X11,X12,X13] : (s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X7) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v'),'const.pair.,_2'(s('type.list.list'('type.string.char'),X9),s('type.conSem.v',X10))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X12))) & s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X8) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'),'const.pair.,_2'(s('type.list.list'('type.string.char'),X9),s('type.exhSem.v',X11))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X13))) & p(s(bool,happ(s(fun('type.exhSem.v',bool),happ(s(fun('type.conSem.v',fun('type.exhSem.v',bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.conSem.v',fun('type.exhSem.v',bool))),X3),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X6))),s('type.conSem.v',X10))),s('type.exhSem.v',X11)))) & p(s(bool,happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool),happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool))),X5),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X6))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X12))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X13)))))))),
  introduced(predicate_definition_introduction,[new_symbols(naming,[sP5])])).
fof(f53,plain,(
  ! [X3,X4,X5] : (sP6(X3,X4,X5) <=> ? [X21,X22,X23] : ((? [X40] : (s('type.conSem.v',X22) = s('type.conSem.v','const.conSem.Litv_1'(s('type.ast.lit',X40))) & s('type.exhSem.v',X23) = s('type.exhSem.v','const.exhSem.Litv_1'(s('type.ast.lit',X40)))) | sP2(X4,X21,X23,X22) | sP0(X5,X21,X23,X22) | sP1(X5,X21,X23,X22) | ? [X26] : (s('type.conSem.v',X22) = s('type.conSem.v','const.conSem.Loc_1'(s('type.num.num',X26))) & s('type.exhSem.v',X23) = s('type.exhSem.v','const.exhSem.Loc_1'(s('type.num.num',X26)))) | sP3(X4,X21,X23,X22)) & ~p(s(bool,happ(s(fun('type.exhSem.v',bool),happ(s(fun('type.conSem.v',fun('type.exhSem.v',bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.conSem.v',fun('type.exhSem.v',bool))),X3),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X21))),s('type.conSem.v',X22))),s('type.exhSem.v',X23))))))),
  introduced(predicate_definition_introduction,[new_symbols(naming,[sP6])])).
fof(f42,plain,(
  ! [X0,X1,X2] : (p(s(bool,'const.dec_to_exhProof.v_rel_3'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X0),s('type.conSem.v',X1),s('type.exhSem.v',X2)))) <=> ! [X3,X4,X5] : (? [X21,X22,X23] : ((? [X40] : (s('type.conSem.v',X22) = s('type.conSem.v','const.conSem.Litv_1'(s('type.ast.lit',X40))) & s('type.exhSem.v',X23) = s('type.exhSem.v','const.exhSem.Litv_1'(s('type.ast.lit',X40)))) | ? [X37,X38,X39] : (s('type.conSem.v',X22) = s('type.conSem.v','const.conSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')),X37),s('type.list.list'('type.conSem.v'),X38))) & s('type.exhSem.v',X23) = s('type.exhSem.v','const.exhSem.Conv_2'(s('type.num.num','const.dec_to_exhProof.get_tag_1'(s('type.option.option'('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')),X37))),s('type.list.list'('type.exhSem.v'),X39))) & p(s(bool,happ(s(fun('type.list.list'('type.exhSem.v'),bool),happ(s(fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool))),X4),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X21))),s('type.list.list'('type.conSem.v'),X38))),s('type.list.list'('type.exhSem.v'),X39))))) | ? [X32,X33,X34,X35,X36] : (s('type.conSem.v',X22) = s('type.conSem.v','const.conSem.Closure_3'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X32),s('type.list.list'('type.string.char'),X33),s('type.conLang.exp',X34))) & s('type.exhSem.v',X23) = s('type.exhSem.v','const.exhSem.Closure_3'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X35),s('type.list.list'('type.string.char'),X33),s('type.exhLang.exp','const.dec_to_exh.compile_exp_2'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X36),s('type.conLang.exp',X34))))) & p(s(bool,'const.finite_map.SUBMAP_2'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X36),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X21)))) & p(s(bool,happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool),happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool))),X5),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X21))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X32))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X35))))) | ? [X27,X28,X29,X30,X31] : (s('type.conSem.v',X22) = s('type.conSem.v','const.conSem.Recclosure_3'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X28),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.conLang.exp'))),X30),s('type.list.list'('type.string.char'),X29))) & s('type.exhSem.v',X23) = s('type.exhSem.v','const.exhSem.Recclosure_3'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X27),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.exhLang.exp'))),'const.dec_to_exh.compile_funs_2'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X31),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.conLang.exp'))),X30))),s('type.list.list'('type.string.char'),X29))) & p(s(bool,'const.finite_map.SUBMAP_2'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X31),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X21)))) & p(s(bool,happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool),happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool))),X5),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X21))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X28))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X27))))) | ? [X26] : (s('type.conSem.v',X22) = s('type.conSem.v','const.conSem.Loc_1'(s('type.num.num',X26))) & s('type.exhSem.v',X23) = s('type.exhSem.v','const.exhSem.Loc_1'(s('type.num.num',X26)))) | ? [X24,X25] : (s('type.conSem.v',X22) = s('type.conSem.v','const.conSem.Vectorv_1'(s('type.list.list'('type.conSem.v'),X24))) & s('type.exhSem.v',X23) = s('type.exhSem.v','const.exhSem.Vectorv_1'(s('type.list.list'('type.exhSem.v'),X25))) & p(s(bool,happ(s(fun('type.list.list'('type.exhSem.v'),bool),happ(s(fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool))),X4),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X21))),s('type.list.list'('type.conSem.v'),X24))),s('type.list.list'('type.exhSem.v'),X25)))))) & ~p(s(bool,happ(s(fun('type.exhSem.v',bool),happ(s(fun('type.conSem.v',fun('type.exhSem.v',bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.conSem.v',fun('type.exhSem.v',bool))),X3),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X21))),s('type.conSem.v',X22))),s('type.exhSem.v',X23))))) | ? [X14,X15,X16] : (((s('type.list.list'('type.conSem.v'),'const.list.NIL_0') = s('type.list.list'('type.conSem.v'),X15) & s('type.list.list'('type.exhSem.v'),'const.list.NIL_0') = s('type.list.list'('type.exhSem.v'),X16)) | ? [X17,X18,X19,X20] : (s('type.list.list'('type.conSem.v'),X15) = s('type.list.list'('type.conSem.v'),'const.list.CONS_2'(s('type.conSem.v',X17),s('type.list.list'('type.conSem.v'),X19))) & s('type.list.list'('type.exhSem.v'),X16) = s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',X18),s('type.list.list'('type.exhSem.v'),X20))) & p(s(bool,happ(s(fun('type.exhSem.v',bool),happ(s(fun('type.conSem.v',fun('type.exhSem.v',bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.conSem.v',fun('type.exhSem.v',bool))),X3),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X14))),s('type.conSem.v',X17))),s('type.exhSem.v',X18)))) & p(s(bool,happ(s(fun('type.list.list'('type.exhSem.v'),bool),happ(s(fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool))),X4),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X14))),s('type.list.list'('type.conSem.v'),X19))),s('type.list.list'('type.exhSem.v'),X20)))))) & ~p(s(bool,happ(s(fun('type.list.list'('type.exhSem.v'),bool),happ(s(fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool))),X4),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X14))),s('type.list.list'('type.conSem.v'),X15))),s('type.list.list'('type.exhSem.v'),X16))))) | ? [X6,X7,X8] : (((s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'const.list.NIL_0') = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X7) & s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.NIL_0') = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X8)) | ? [X9,X10,X11,X12,X13] : (s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X7) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v'),'const.pair.,_2'(s('type.list.list'('type.string.char'),X9),s('type.conSem.v',X10))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X12))) & s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X8) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'),'const.pair.,_2'(s('type.list.list'('type.string.char'),X9),s('type.exhSem.v',X11))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X13))) & p(s(bool,happ(s(fun('type.exhSem.v',bool),happ(s(fun('type.conSem.v',fun('type.exhSem.v',bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.conSem.v',fun('type.exhSem.v',bool))),X3),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X6))),s('type.conSem.v',X10))),s('type.exhSem.v',X11)))) & p(s(bool,happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool),happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool))),X5),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X6))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X12))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X13)))))) & ~p(s(bool,happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool),happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool))),X5),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X6))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X7))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X8))))) | p(s(bool,happ(s(fun('type.exhSem.v',bool),happ(s(fun('type.conSem.v',fun('type.exhSem.v',bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.conSem.v',fun('type.exhSem.v',bool))),X3),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X0))),s('type.conSem.v',X1))),s('type.exhSem.v',X2))))))),
  inference(flattening,[],[f41])).
fof(f41,plain,(
  ! [X0,X1,X2] : (p(s(bool,'const.dec_to_exhProof.v_rel_3'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X0),s('type.conSem.v',X1),s('type.exhSem.v',X2)))) <=> ! [X3,X4,X5] : ((? [X21,X22,X23] : ((? [X40] : (s('type.conSem.v',X22) = s('type.conSem.v','const.conSem.Litv_1'(s('type.ast.lit',X40))) & s('type.exhSem.v',X23) = s('type.exhSem.v','const.exhSem.Litv_1'(s('type.ast.lit',X40)))) | ? [X37,X38,X39] : (s('type.conSem.v',X22) = s('type.conSem.v','const.conSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')),X37),s('type.list.list'('type.conSem.v'),X38))) & s('type.exhSem.v',X23) = s('type.exhSem.v','const.exhSem.Conv_2'(s('type.num.num','const.dec_to_exhProof.get_tag_1'(s('type.option.option'('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')),X37))),s('type.list.list'('type.exhSem.v'),X39))) & p(s(bool,happ(s(fun('type.list.list'('type.exhSem.v'),bool),happ(s(fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool))),X4),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X21))),s('type.list.list'('type.conSem.v'),X38))),s('type.list.list'('type.exhSem.v'),X39))))) | ? [X32,X33,X34,X35,X36] : (s('type.conSem.v',X22) = s('type.conSem.v','const.conSem.Closure_3'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X32),s('type.list.list'('type.string.char'),X33),s('type.conLang.exp',X34))) & s('type.exhSem.v',X23) = s('type.exhSem.v','const.exhSem.Closure_3'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X35),s('type.list.list'('type.string.char'),X33),s('type.exhLang.exp','const.dec_to_exh.compile_exp_2'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X36),s('type.conLang.exp',X34))))) & p(s(bool,'const.finite_map.SUBMAP_2'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X36),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X21)))) & p(s(bool,happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool),happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool))),X5),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X21))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X32))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X35))))) | ? [X27,X28,X29,X30,X31] : (s('type.conSem.v',X22) = s('type.conSem.v','const.conSem.Recclosure_3'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X28),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.conLang.exp'))),X30),s('type.list.list'('type.string.char'),X29))) & s('type.exhSem.v',X23) = s('type.exhSem.v','const.exhSem.Recclosure_3'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X27),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.exhLang.exp'))),'const.dec_to_exh.compile_funs_2'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X31),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.conLang.exp'))),X30))),s('type.list.list'('type.string.char'),X29))) & p(s(bool,'const.finite_map.SUBMAP_2'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X31),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X21)))) & p(s(bool,happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool),happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool))),X5),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X21))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X28))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X27))))) | ? [X26] : (s('type.conSem.v',X22) = s('type.conSem.v','const.conSem.Loc_1'(s('type.num.num',X26))) & s('type.exhSem.v',X23) = s('type.exhSem.v','const.exhSem.Loc_1'(s('type.num.num',X26)))) | ? [X24,X25] : (s('type.conSem.v',X22) = s('type.conSem.v','const.conSem.Vectorv_1'(s('type.list.list'('type.conSem.v'),X24))) & s('type.exhSem.v',X23) = s('type.exhSem.v','const.exhSem.Vectorv_1'(s('type.list.list'('type.exhSem.v'),X25))) & p(s(bool,happ(s(fun('type.list.list'('type.exhSem.v'),bool),happ(s(fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool))),X4),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X21))),s('type.list.list'('type.conSem.v'),X24))),s('type.list.list'('type.exhSem.v'),X25)))))) & ~p(s(bool,happ(s(fun('type.exhSem.v',bool),happ(s(fun('type.conSem.v',fun('type.exhSem.v',bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.conSem.v',fun('type.exhSem.v',bool))),X3),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X21))),s('type.conSem.v',X22))),s('type.exhSem.v',X23))))) | ? [X14,X15,X16] : (((s('type.list.list'('type.conSem.v'),'const.list.NIL_0') = s('type.list.list'('type.conSem.v'),X15) & s('type.list.list'('type.exhSem.v'),'const.list.NIL_0') = s('type.list.list'('type.exhSem.v'),X16)) | ? [X17,X18,X19,X20] : (s('type.list.list'('type.conSem.v'),X15) = s('type.list.list'('type.conSem.v'),'const.list.CONS_2'(s('type.conSem.v',X17),s('type.list.list'('type.conSem.v'),X19))) & s('type.list.list'('type.exhSem.v'),X16) = s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',X18),s('type.list.list'('type.exhSem.v'),X20))) & p(s(bool,happ(s(fun('type.exhSem.v',bool),happ(s(fun('type.conSem.v',fun('type.exhSem.v',bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.conSem.v',fun('type.exhSem.v',bool))),X3),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X14))),s('type.conSem.v',X17))),s('type.exhSem.v',X18)))) & p(s(bool,happ(s(fun('type.list.list'('type.exhSem.v'),bool),happ(s(fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool))),X4),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X14))),s('type.list.list'('type.conSem.v'),X19))),s('type.list.list'('type.exhSem.v'),X20)))))) & ~p(s(bool,happ(s(fun('type.list.list'('type.exhSem.v'),bool),happ(s(fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool))),X4),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X14))),s('type.list.list'('type.conSem.v'),X15))),s('type.list.list'('type.exhSem.v'),X16))))) | ? [X6,X7,X8] : (((s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'const.list.NIL_0') = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X7) & s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.NIL_0') = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X8)) | ? [X9,X10,X11,X12,X13] : (s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X7) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v'),'const.pair.,_2'(s('type.list.list'('type.string.char'),X9),s('type.conSem.v',X10))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X12))) & s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X8) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'),'const.pair.,_2'(s('type.list.list'('type.string.char'),X9),s('type.exhSem.v',X11))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X13))) & p(s(bool,happ(s(fun('type.exhSem.v',bool),happ(s(fun('type.conSem.v',fun('type.exhSem.v',bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.conSem.v',fun('type.exhSem.v',bool))),X3),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X6))),s('type.conSem.v',X10))),s('type.exhSem.v',X11)))) & p(s(bool,happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool),happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool))),X5),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X6))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X12))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X13)))))) & ~p(s(bool,happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool),happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool))),X5),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X6))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X7))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X8)))))) | p(s(bool,happ(s(fun('type.exhSem.v',bool),happ(s(fun('type.conSem.v',fun('type.exhSem.v',bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.conSem.v',fun('type.exhSem.v',bool))),X3),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X0))),s('type.conSem.v',X1))),s('type.exhSem.v',X2))))))),
  inference(ennf_transformation,[],[f34])).
fof(f34,plain,(
  ! [X0,X1,X2] : (p(s(bool,'const.dec_to_exhProof.v_rel_3'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X0),s('type.conSem.v',X1),s('type.exhSem.v',X2)))) <=> ! [X3,X4,X5] : ((! [X21,X22,X23] : ((? [X40] : (s('type.conSem.v',X22) = s('type.conSem.v','const.conSem.Litv_1'(s('type.ast.lit',X40))) & s('type.exhSem.v',X23) = s('type.exhSem.v','const.exhSem.Litv_1'(s('type.ast.lit',X40)))) | ? [X37,X38,X39] : (s('type.conSem.v',X22) = s('type.conSem.v','const.conSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')),X37),s('type.list.list'('type.conSem.v'),X38))) & s('type.exhSem.v',X23) = s('type.exhSem.v','const.exhSem.Conv_2'(s('type.num.num','const.dec_to_exhProof.get_tag_1'(s('type.option.option'('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')),X37))),s('type.list.list'('type.exhSem.v'),X39))) & p(s(bool,happ(s(fun('type.list.list'('type.exhSem.v'),bool),happ(s(fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool))),X4),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X21))),s('type.list.list'('type.conSem.v'),X38))),s('type.list.list'('type.exhSem.v'),X39))))) | ? [X32,X33,X34,X35,X36] : (s('type.conSem.v',X22) = s('type.conSem.v','const.conSem.Closure_3'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X32),s('type.list.list'('type.string.char'),X33),s('type.conLang.exp',X34))) & s('type.exhSem.v',X23) = s('type.exhSem.v','const.exhSem.Closure_3'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X35),s('type.list.list'('type.string.char'),X33),s('type.exhLang.exp','const.dec_to_exh.compile_exp_2'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X36),s('type.conLang.exp',X34))))) & p(s(bool,'const.finite_map.SUBMAP_2'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X36),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X21)))) & p(s(bool,happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool),happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool))),X5),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X21))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X32))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X35))))) | ? [X27,X28,X29,X30,X31] : (s('type.conSem.v',X22) = s('type.conSem.v','const.conSem.Recclosure_3'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X28),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.conLang.exp'))),X30),s('type.list.list'('type.string.char'),X29))) & s('type.exhSem.v',X23) = s('type.exhSem.v','const.exhSem.Recclosure_3'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X27),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.exhLang.exp'))),'const.dec_to_exh.compile_funs_2'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X31),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.conLang.exp'))),X30))),s('type.list.list'('type.string.char'),X29))) & p(s(bool,'const.finite_map.SUBMAP_2'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X31),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X21)))) & p(s(bool,happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool),happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool))),X5),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X21))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X28))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X27))))) | ? [X26] : (s('type.conSem.v',X22) = s('type.conSem.v','const.conSem.Loc_1'(s('type.num.num',X26))) & s('type.exhSem.v',X23) = s('type.exhSem.v','const.exhSem.Loc_1'(s('type.num.num',X26)))) | ? [X24,X25] : (s('type.conSem.v',X22) = s('type.conSem.v','const.conSem.Vectorv_1'(s('type.list.list'('type.conSem.v'),X24))) & s('type.exhSem.v',X23) = s('type.exhSem.v','const.exhSem.Vectorv_1'(s('type.list.list'('type.exhSem.v'),X25))) & p(s(bool,happ(s(fun('type.list.list'('type.exhSem.v'),bool),happ(s(fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool))),X4),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X21))),s('type.list.list'('type.conSem.v'),X24))),s('type.list.list'('type.exhSem.v'),X25)))))) => p(s(bool,happ(s(fun('type.exhSem.v',bool),happ(s(fun('type.conSem.v',fun('type.exhSem.v',bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.conSem.v',fun('type.exhSem.v',bool))),X3),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X21))),s('type.conSem.v',X22))),s('type.exhSem.v',X23))))) & ! [X14,X15,X16] : (((s('type.list.list'('type.conSem.v'),'const.list.NIL_0') = s('type.list.list'('type.conSem.v'),X15) & s('type.list.list'('type.exhSem.v'),'const.list.NIL_0') = s('type.list.list'('type.exhSem.v'),X16)) | ? [X17,X18,X19,X20] : (s('type.list.list'('type.conSem.v'),X15) = s('type.list.list'('type.conSem.v'),'const.list.CONS_2'(s('type.conSem.v',X17),s('type.list.list'('type.conSem.v'),X19))) & s('type.list.list'('type.exhSem.v'),X16) = s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',X18),s('type.list.list'('type.exhSem.v'),X20))) & p(s(bool,happ(s(fun('type.exhSem.v',bool),happ(s(fun('type.conSem.v',fun('type.exhSem.v',bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.conSem.v',fun('type.exhSem.v',bool))),X3),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X14))),s('type.conSem.v',X17))),s('type.exhSem.v',X18)))) & p(s(bool,happ(s(fun('type.list.list'('type.exhSem.v'),bool),happ(s(fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool))),X4),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X14))),s('type.list.list'('type.conSem.v'),X19))),s('type.list.list'('type.exhSem.v'),X20)))))) => p(s(bool,happ(s(fun('type.list.list'('type.exhSem.v'),bool),happ(s(fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool))),X4),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X14))),s('type.list.list'('type.conSem.v'),X15))),s('type.list.list'('type.exhSem.v'),X16))))) & ! [X6,X7,X8] : (((s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'const.list.NIL_0') = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X7) & s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.NIL_0') = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X8)) | ? [X9,X10,X11,X12,X13] : (s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X7) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v'),'const.pair.,_2'(s('type.list.list'('type.string.char'),X9),s('type.conSem.v',X10))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X12))) & s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X8) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'),'const.pair.,_2'(s('type.list.list'('type.string.char'),X9),s('type.exhSem.v',X11))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X13))) & p(s(bool,happ(s(fun('type.exhSem.v',bool),happ(s(fun('type.conSem.v',fun('type.exhSem.v',bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.conSem.v',fun('type.exhSem.v',bool))),X3),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X6))),s('type.conSem.v',X10))),s('type.exhSem.v',X11)))) & p(s(bool,happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool),happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool))),X5),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X6))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X12))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X13)))))) => p(s(bool,happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool),happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool))),X5),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X6))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X7))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X8)))))) => p(s(bool,happ(s(fun('type.exhSem.v',bool),happ(s(fun('type.conSem.v',fun('type.exhSem.v',bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.conSem.v',fun('type.exhSem.v',bool))),X3),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X0))),s('type.conSem.v',X1))),s('type.exhSem.v',X2))))))),
  inference(rectify,[],[f7])).
fof(f7,axiom,(
  ! [X5,X8,X9] : (p(s(bool,'const.dec_to_exhProof.v_rel_3'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X5),s('type.conSem.v',X8),s('type.exhSem.v',X9)))) <=> ! [X10,X11,X12] : ((! [X13,X14,X15] : ((? [X7] : (s('type.conSem.v',X14) = s('type.conSem.v','const.conSem.Litv_1'(s('type.ast.lit',X7))) & s('type.exhSem.v',X15) = s('type.exhSem.v','const.exhSem.Litv_1'(s('type.ast.lit',X7)))) | ? [X16,X17,X18] : (s('type.conSem.v',X14) = s('type.conSem.v','const.conSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')),X16),s('type.list.list'('type.conSem.v'),X17))) & s('type.exhSem.v',X15) = s('type.exhSem.v','const.exhSem.Conv_2'(s('type.num.num','const.dec_to_exhProof.get_tag_1'(s('type.option.option'('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')),X16))),s('type.list.list'('type.exhSem.v'),X18))) & p(s(bool,happ(s(fun('type.list.list'('type.exhSem.v'),bool),happ(s(fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool))),X11),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X13))),s('type.list.list'('type.conSem.v'),X17))),s('type.list.list'('type.exhSem.v'),X18))))) | ? [X19,X20,X21,X22,X23] : (s('type.conSem.v',X14) = s('type.conSem.v','const.conSem.Closure_3'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X19),s('type.list.list'('type.string.char'),X20),s('type.conLang.exp',X21))) & s('type.exhSem.v',X15) = s('type.exhSem.v','const.exhSem.Closure_3'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X22),s('type.list.list'('type.string.char'),X20),s('type.exhLang.exp','const.dec_to_exh.compile_exp_2'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X23),s('type.conLang.exp',X21))))) & p(s(bool,'const.finite_map.SUBMAP_2'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X23),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X13)))) & p(s(bool,happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool),happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool))),X12),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X13))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X19))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X22))))) | ? [X22,X19,X20,X24,X23] : (s('type.conSem.v',X14) = s('type.conSem.v','const.conSem.Recclosure_3'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X19),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.conLang.exp'))),X24),s('type.list.list'('type.string.char'),X20))) & s('type.exhSem.v',X15) = s('type.exhSem.v','const.exhSem.Recclosure_3'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X22),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.exhLang.exp'))),'const.dec_to_exh.compile_funs_2'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X23),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.conLang.exp'))),X24))),s('type.list.list'('type.string.char'),X20))) & p(s(bool,'const.finite_map.SUBMAP_2'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X23),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X13)))) & p(s(bool,happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool),happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool))),X12),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X13))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X19))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X22))))) | ? [X7] : (s('type.conSem.v',X14) = s('type.conSem.v','const.conSem.Loc_1'(s('type.num.num',X7))) & s('type.exhSem.v',X15) = s('type.exhSem.v','const.exhSem.Loc_1'(s('type.num.num',X7)))) | ? [X17,X18] : (s('type.conSem.v',X14) = s('type.conSem.v','const.conSem.Vectorv_1'(s('type.list.list'('type.conSem.v'),X17))) & s('type.exhSem.v',X15) = s('type.exhSem.v','const.exhSem.Vectorv_1'(s('type.list.list'('type.exhSem.v'),X18))) & p(s(bool,happ(s(fun('type.list.list'('type.exhSem.v'),bool),happ(s(fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool))),X11),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X13))),s('type.list.list'('type.conSem.v'),X17))),s('type.list.list'('type.exhSem.v'),X18)))))) => p(s(bool,happ(s(fun('type.exhSem.v',bool),happ(s(fun('type.conSem.v',fun('type.exhSem.v',bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.conSem.v',fun('type.exhSem.v',bool))),X10),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X13))),s('type.conSem.v',X14))),s('type.exhSem.v',X15))))) & ! [X25,X26,X27] : (((s('type.list.list'('type.conSem.v'),'const.list.NIL_0') = s('type.list.list'('type.conSem.v'),X26) & s('type.list.list'('type.exhSem.v'),'const.list.NIL_0') = s('type.list.list'('type.exhSem.v'),X27)) | ? [X28,X29,X17,X18] : (s('type.list.list'('type.conSem.v'),X26) = s('type.list.list'('type.conSem.v'),'const.list.CONS_2'(s('type.conSem.v',X28),s('type.list.list'('type.conSem.v'),X17))) & s('type.list.list'('type.exhSem.v'),X27) = s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',X29),s('type.list.list'('type.exhSem.v'),X18))) & p(s(bool,happ(s(fun('type.exhSem.v',bool),happ(s(fun('type.conSem.v',fun('type.exhSem.v',bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.conSem.v',fun('type.exhSem.v',bool))),X10),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X25))),s('type.conSem.v',X28))),s('type.exhSem.v',X29)))) & p(s(bool,happ(s(fun('type.list.list'('type.exhSem.v'),bool),happ(s(fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool))),X11),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X25))),s('type.list.list'('type.conSem.v'),X17))),s('type.list.list'('type.exhSem.v'),X18)))))) => p(s(bool,happ(s(fun('type.list.list'('type.exhSem.v'),bool),happ(s(fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool))),X11),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X25))),s('type.list.list'('type.conSem.v'),X26))),s('type.list.list'('type.exhSem.v'),X27))))) & ! [X30,X31,X32] : (((s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'const.list.NIL_0') = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X31) & s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.NIL_0') = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X32)) | ? [X20,X28,X29,X19,X22] : (s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X31) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v'),'const.pair.,_2'(s('type.list.list'('type.string.char'),X20),s('type.conSem.v',X28))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X19))) & s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X32) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'),'const.pair.,_2'(s('type.list.list'('type.string.char'),X20),s('type.exhSem.v',X29))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X22))) & p(s(bool,happ(s(fun('type.exhSem.v',bool),happ(s(fun('type.conSem.v',fun('type.exhSem.v',bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.conSem.v',fun('type.exhSem.v',bool))),X10),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X30))),s('type.conSem.v',X28))),s('type.exhSem.v',X29)))) & p(s(bool,happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool),happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool))),X12),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X30))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X19))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X22)))))) => p(s(bool,happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool),happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool))),X12),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X30))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X31))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X32)))))) => p(s(bool,happ(s(fun('type.exhSem.v',bool),happ(s(fun('type.conSem.v',fun('type.exhSem.v',bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.conSem.v',fun('type.exhSem.v',bool))),X10),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X5))),s('type.conSem.v',X8))),s('type.exhSem.v',X9))))))),
  file('thm.dec_to_exhProof.v_rel_rules|split|0','thm.dec_to_exhProof.v_rel2_def')).
fof(f166,plain,(
  ~p(s(bool,'const.dec_to_exhProof.v_rel_3'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),sK21),s('type.conSem.v','const.conSem.Litv_1'(s('type.ast.lit',sK22))),s('type.exhSem.v','const.exhSem.Litv_1'(s('type.ast.lit',sK22))))))),
  inference(cnf_transformation,[],[f71])).
fof(f71,plain,(
  ~p(s(bool,'const.dec_to_exhProof.v_rel_3'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),sK21),s('type.conSem.v','const.conSem.Litv_1'(s('type.ast.lit',sK22))),s('type.exhSem.v','const.exhSem.Litv_1'(s('type.ast.lit',sK22))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK21,sK22])],[f38])).
fof(f38,plain,(
  ? [X0,X1] : ~p(s(bool,'const.dec_to_exhProof.v_rel_3'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X0),s('type.conSem.v','const.conSem.Litv_1'(s('type.ast.lit',X1))),s('type.exhSem.v','const.exhSem.Litv_1'(s('type.ast.lit',X1))))))),
  inference(ennf_transformation,[],[f23])).
fof(f23,plain,(
  ~! [X0,X1] : p(s(bool,'const.dec_to_exhProof.v_rel_3'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X0),s('type.conSem.v','const.conSem.Litv_1'(s('type.ast.lit',X1))),s('type.exhSem.v','const.exhSem.Litv_1'(s('type.ast.lit',X1))))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6,X7] : p(s(bool,'const.dec_to_exhProof.v_rel_3'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X6),s('type.conSem.v','const.conSem.Litv_1'(s('type.ast.lit',X7))),s('type.exhSem.v','const.exhSem.Litv_1'(s('type.ast.lit',X7))))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6,X7] : p(s(bool,'const.dec_to_exhProof.v_rel_3'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X6),s('type.conSem.v','const.conSem.Litv_1'(s('type.ast.lit',X7))),s('type.exhSem.v','const.exhSem.Litv_1'(s('type.ast.lit',X7))))))),
  file('thm.dec_to_exhProof.v_rel_rules|split|0','thm.dec_to_exhProof.v_rel_rules|split|0')).
fof(f9366,plain,(
  $false | $spl16),
  inference(trivial_inequality_removal,[],[f9365])).
fof(f9365,plain,(
  s('type.conSem.v','const.conSem.Litv_1'(s('type.ast.lit',sK22))) != s('type.conSem.v','const.conSem.Litv_1'(s('type.ast.lit',sK22))) | $spl16),
  inference(equality_resolution,[],[f2574])).
fof(f3453,plain,(
  ( ! [X44] : (s(bool,'T_0') = s(bool,X44)) ) | $spl38),
  inference(cnf_transformation,[],[f3453_D])).
fof(f3453_D,plain,(
  ( ! [X44] : (s(bool,'T_0') = s(bool,X44)) ) <=> ~$spl38),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl38])])).
fof(f9350,plain,(
  ( ! [X61,X59,X57,X54,X60,X56,X55] : (sP13(X54,X59,X60) | s(bool,'T_0') = s(bool,happ(s(fun('type.exhSem.v',bool),happ(s(fun('type.conSem.v',fun('type.exhSem.v',bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.conSem.v',fun('type.exhSem.v',bool))),X54),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X55))),s('type.conSem.v',X56))),s('type.exhSem.v',X57))) | s('type.exhSem.v',X57) != s('type.exhSem.v','const.exhSem.Loc_1'(s('type.num.num',X61))) | s('type.conSem.v',X56) != s('type.conSem.v','const.conSem.Loc_1'(s('type.num.num',X61)))) ) | $spl154),
  inference(cnf_transformation,[],[f9350_D])).
fof(f9350_D,plain,(
  ( ! [X61,X59,X57,X54,X60,X56,X55] : (sP13(X54,X59,X60) | s(bool,'T_0') = s(bool,happ(s(fun('type.exhSem.v',bool),happ(s(fun('type.conSem.v',fun('type.exhSem.v',bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.conSem.v',fun('type.exhSem.v',bool))),X54),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X55))),s('type.conSem.v',X56))),s('type.exhSem.v',X57))) | s('type.exhSem.v',X57) != s('type.exhSem.v','const.exhSem.Loc_1'(s('type.num.num',X61))) | s('type.conSem.v',X56) != s('type.conSem.v','const.conSem.Loc_1'(s('type.num.num',X61)))) ) <=> ~$spl154),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl154])])).
fof(f9351,plain,(
  ( ! [X68,X66,X64,X62,X69,X67,X65,X63] : (sP13(X62,X67,X68) | s('type.exhSem.v',X65) != s('type.exhSem.v','const.exhSem.Loc_1'(s('type.num.num',X69))) | s('type.conSem.v',X64) != s('type.conSem.v','const.conSem.Loc_1'(s('type.num.num',X69))) | s(bool,'T_0') = s(bool,X66) | s(bool,'T_0') = s(bool,happ(s(fun('type.exhSem.v',bool),happ(s(fun('type.conSem.v',fun('type.exhSem.v',bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.conSem.v',fun('type.exhSem.v',bool))),X62),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X63))),s('type.conSem.v',X64))),s('type.exhSem.v',X65)))) ) | $spl2),
  inference(subsumption_resolution,[],[f9277,f645])).
fof(f9277,plain,(
  ( ! [X68,X66,X64,X62,X69,X67,X65,X63] : (p(s(bool,X66)) | sP13(X62,X67,X68) | s('type.exhSem.v',X65) != s('type.exhSem.v','const.exhSem.Loc_1'(s('type.num.num',X69))) | s('type.conSem.v',X64) != s('type.conSem.v','const.conSem.Loc_1'(s('type.num.num',X69))) | s(bool,'T_0') = s(bool,X66) | s(bool,'T_0') = s(bool,happ(s(fun('type.exhSem.v',bool),happ(s(fun('type.conSem.v',fun('type.exhSem.v',bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.conSem.v',fun('type.exhSem.v',bool))),X62),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X63))),s('type.conSem.v',X64))),s('type.exhSem.v',X65)))) ) | $spl2),
  inference(superposition,[],[f262,f758])).
fof(f758,plain,(
  ( ! [X0,X1] : (s(bool,X0) = s(bool,X1) | s(bool,'T_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X1)) ) | $spl2),
  inference(resolution,[],[f649,f645])).
fof(f649,plain,(
  ( ! [X4,X3] : (p(s(bool,X4)) | s(bool,X3) = s(bool,X4) | s(bool,'T_0') = s(bool,X3)) ) | $spl2),
  inference(resolution,[],[f645,f173])).
fof(f173,plain,(
  ( ! [X0,X1] : (s(bool,X0) = s(bool,X1) | p(s(bool,X1)) | p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f40])).
fof(f40,plain,(
  ! [X0,X1] : ((p(s(bool,X0)) & ~p(s(bool,X1))) | (p(s(bool,X1)) & ~p(s(bool,X0))) | s(bool,X0) = s(bool,X1))),
  inference(flattening,[],[f39])).
fof(f39,plain,(
  ! [X0,X1] : ((p(s(bool,X0)) & ~p(s(bool,X1))) | ((p(s(bool,X1)) & ~p(s(bool,X0))) | s(bool,X0) = s(bool,X1)))),
  inference(ennf_transformation,[],[f25])).
fof(f25,plain,(
  ! [X0,X1] : ((p(s(bool,X0)) => p(s(bool,X1))) => ((p(s(bool,X1)) => p(s(bool,X0))) => s(bool,X0) = s(bool,X1)))),
  inference(rectify,[],[f22])).
fof(f22,axiom,(
  ! [X56,X57] : ((p(s(bool,X56)) => p(s(bool,X57))) => ((p(s(bool,X57)) => p(s(bool,X56))) => s(bool,X56) = s(bool,X57)))),
  file('thm.dec_to_exhProof.v_rel_rules|split|0','thm.bool.IMP_ANTISYM_AX')).
fof(f262,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (sP13(X0,X1,X2) | p(s(bool,happ(s(fun('type.exhSem.v',bool),happ(s(fun('type.conSem.v',fun('type.exhSem.v',bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.conSem.v',fun('type.exhSem.v',bool))),X0),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X3))),s('type.conSem.v',X4))),s('type.exhSem.v',X5)))) | s('type.exhSem.v',X5) != s('type.exhSem.v','const.exhSem.Loc_1'(s('type.num.num',X6))) | s('type.conSem.v',X4) != s('type.conSem.v','const.conSem.Loc_1'(s('type.num.num',X6)))) )),
  inference(cnf_transformation,[],[f113])).
fof(f113,plain,(
  ! [X0,X1,X2] : ((~sP13(X0,X1,X2) | (((s('type.conSem.v',sK62(X2,X1,X0)) = s('type.conSem.v','const.conSem.Litv_1'(s('type.ast.lit',sK64(X2,X1,X0)))) & s('type.exhSem.v',sK63(X2,X1,X0)) = s('type.exhSem.v','const.exhSem.Litv_1'(s('type.ast.lit',sK64(X2,X1,X0))))) | sP9(X1,sK61(X2,X1,X0),sK63(X2,X1,X0),sK62(X2,X1,X0)) | sP7(X2,sK61(X2,X1,X0),sK63(X2,X1,X0),sK62(X2,X1,X0)) | sP8(X2,sK61(X2,X1,X0),sK63(X2,X1,X0),sK62(X2,X1,X0)) | (s('type.conSem.v',sK62(X2,X1,X0)) = s('type.conSem.v','const.conSem.Loc_1'(s('type.num.num',sK65(X2,X1,X0)))) & s('type.exhSem.v',sK63(X2,X1,X0)) = s('type.exhSem.v','const.exhSem.Loc_1'(s('type.num.num',sK65(X2,X1,X0))))) | sP10(X1,sK61(X2,X1,X0),sK63(X2,X1,X0),sK62(X2,X1,X0))) & ~p(s(bool,happ(s(fun('type.exhSem.v',bool),happ(s(fun('type.conSem.v',fun('type.exhSem.v',bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.conSem.v',fun('type.exhSem.v',bool))),X0),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),sK61(X2,X1,X0)))),s('type.conSem.v',sK62(X2,X1,X0)))),s('type.exhSem.v',sK63(X2,X1,X0))))))) & (! [X3,X4,X5] : ((! [X7] : (s('type.conSem.v',X4) != s('type.conSem.v','const.conSem.Litv_1'(s('type.ast.lit',X7))) | s('type.exhSem.v',X5) != s('type.exhSem.v','const.exhSem.Litv_1'(s('type.ast.lit',X7)))) & ~sP9(X1,X3,X5,X4) & ~sP7(X2,X3,X5,X4) & ~sP8(X2,X3,X5,X4) & ! [X6] : (s('type.conSem.v',X4) != s('type.conSem.v','const.conSem.Loc_1'(s('type.num.num',X6))) | s('type.exhSem.v',X5) != s('type.exhSem.v','const.exhSem.Loc_1'(s('type.num.num',X6)))) & ~sP10(X1,X3,X5,X4)) | p(s(bool,happ(s(fun('type.exhSem.v',bool),happ(s(fun('type.conSem.v',fun('type.exhSem.v',bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.conSem.v',fun('type.exhSem.v',bool))),X0),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X3))),s('type.conSem.v',X4))),s('type.exhSem.v',X5))))) | sP13(X0,X1,X2)))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK61,sK62,sK63,sK64,sK65])],[f112])).
fof(f112,plain,(
  ! [X0,X1,X2] : ((~sP13(X0,X1,X2) | ? [X8,X9,X10] : ((? [X12] : (s('type.conSem.v',X9) = s('type.conSem.v','const.conSem.Litv_1'(s('type.ast.lit',X12))) & s('type.exhSem.v',X10) = s('type.exhSem.v','const.exhSem.Litv_1'(s('type.ast.lit',X12)))) | sP9(X1,X8,X10,X9) | sP7(X2,X8,X10,X9) | sP8(X2,X8,X10,X9) | ? [X11] : (s('type.conSem.v',X9) = s('type.conSem.v','const.conSem.Loc_1'(s('type.num.num',X11))) & s('type.exhSem.v',X10) = s('type.exhSem.v','const.exhSem.Loc_1'(s('type.num.num',X11)))) | sP10(X1,X8,X10,X9)) & ~p(s(bool,happ(s(fun('type.exhSem.v',bool),happ(s(fun('type.conSem.v',fun('type.exhSem.v',bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.conSem.v',fun('type.exhSem.v',bool))),X0),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X8))),s('type.conSem.v',X9))),s('type.exhSem.v',X10)))))) & (! [X3,X4,X5] : ((! [X7] : (s('type.conSem.v',X4) != s('type.conSem.v','const.conSem.Litv_1'(s('type.ast.lit',X7))) | s('type.exhSem.v',X5) != s('type.exhSem.v','const.exhSem.Litv_1'(s('type.ast.lit',X7)))) & ~sP9(X1,X3,X5,X4) & ~sP7(X2,X3,X5,X4) & ~sP8(X2,X3,X5,X4) & ! [X6] : (s('type.conSem.v',X4) != s('type.conSem.v','const.conSem.Loc_1'(s('type.num.num',X6))) | s('type.exhSem.v',X5) != s('type.exhSem.v','const.exhSem.Loc_1'(s('type.num.num',X6)))) & ~sP10(X1,X3,X5,X4)) | p(s(bool,happ(s(fun('type.exhSem.v',bool),happ(s(fun('type.conSem.v',fun('type.exhSem.v',bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.conSem.v',fun('type.exhSem.v',bool))),X0),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X3))),s('type.conSem.v',X4))),s('type.exhSem.v',X5))))) | sP13(X0,X1,X2)))),
  inference(rectify,[],[f111])).
fof(f111,plain,(
  ! [X3,X4,X5] : ((~sP13(X3,X4,X5) | ? [X21,X22,X23] : ((? [X40] : (s('type.conSem.v',X22) = s('type.conSem.v','const.conSem.Litv_1'(s('type.ast.lit',X40))) & s('type.exhSem.v',X23) = s('type.exhSem.v','const.exhSem.Litv_1'(s('type.ast.lit',X40)))) | sP9(X4,X21,X23,X22) | sP7(X5,X21,X23,X22) | sP8(X5,X21,X23,X22) | ? [X26] : (s('type.conSem.v',X22) = s('type.conSem.v','const.conSem.Loc_1'(s('type.num.num',X26))) & s('type.exhSem.v',X23) = s('type.exhSem.v','const.exhSem.Loc_1'(s('type.num.num',X26)))) | sP10(X4,X21,X23,X22)) & ~p(s(bool,happ(s(fun('type.exhSem.v',bool),happ(s(fun('type.conSem.v',fun('type.exhSem.v',bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.conSem.v',fun('type.exhSem.v',bool))),X3),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X21))),s('type.conSem.v',X22))),s('type.exhSem.v',X23)))))) & (! [X21,X22,X23] : ((! [X40] : (s('type.conSem.v',X22) != s('type.conSem.v','const.conSem.Litv_1'(s('type.ast.lit',X40))) | s('type.exhSem.v',X23) != s('type.exhSem.v','const.exhSem.Litv_1'(s('type.ast.lit',X40)))) & ~sP9(X4,X21,X23,X22) & ~sP7(X5,X21,X23,X22) & ~sP8(X5,X21,X23,X22) & ! [X26] : (s('type.conSem.v',X22) != s('type.conSem.v','const.conSem.Loc_1'(s('type.num.num',X26))) | s('type.exhSem.v',X23) != s('type.exhSem.v','const.exhSem.Loc_1'(s('type.num.num',X26)))) & ~sP10(X4,X21,X23,X22)) | p(s(bool,happ(s(fun('type.exhSem.v',bool),happ(s(fun('type.conSem.v',fun('type.exhSem.v',bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.conSem.v',fun('type.exhSem.v',bool))),X3),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X21))),s('type.conSem.v',X22))),s('type.exhSem.v',X23))))) | sP13(X3,X4,X5)))),
  inference(nnf_transformation,[],[f61])).
fof(f61,plain,(
  ! [X3,X4,X5] : (sP13(X3,X4,X5) <=> ? [X21,X22,X23] : ((? [X40] : (s('type.conSem.v',X22) = s('type.conSem.v','const.conSem.Litv_1'(s('type.ast.lit',X40))) & s('type.exhSem.v',X23) = s('type.exhSem.v','const.exhSem.Litv_1'(s('type.ast.lit',X40)))) | sP9(X4,X21,X23,X22) | sP7(X5,X21,X23,X22) | sP8(X5,X21,X23,X22) | ? [X26] : (s('type.conSem.v',X22) = s('type.conSem.v','const.conSem.Loc_1'(s('type.num.num',X26))) & s('type.exhSem.v',X23) = s('type.exhSem.v','const.exhSem.Loc_1'(s('type.num.num',X26)))) | sP10(X4,X21,X23,X22)) & ~p(s(bool,happ(s(fun('type.exhSem.v',bool),happ(s(fun('type.conSem.v',fun('type.exhSem.v',bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.conSem.v',fun('type.exhSem.v',bool))),X3),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X21))),s('type.conSem.v',X22))),s('type.exhSem.v',X23))))))),
  introduced(predicate_definition_introduction,[new_symbols(naming,[sP13])])).
fof(f9349,plain,(
  ( ! [X61,X59,X57,X54,X60,X58,X56,X55] : (sP13(X54,X59,X60) | s('type.exhSem.v',X57) != s('type.exhSem.v','const.exhSem.Loc_1'(s('type.num.num',X61))) | s('type.conSem.v',X56) != s('type.conSem.v','const.conSem.Loc_1'(s('type.num.num',X61))) | s(bool,'T_0') = s(bool,happ(s(fun('type.exhSem.v',bool),happ(s(fun('type.conSem.v',fun('type.exhSem.v',bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.conSem.v',fun('type.exhSem.v',bool))),X54),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X55))),s('type.conSem.v',X56))),s('type.exhSem.v',X57))) | s(bool,'T_0') = s(bool,X58)) ) | $spl2),
  inference(subsumption_resolution,[],[f9276,f645])).
fof(f9276,plain,(
  ( ! [X61,X59,X57,X54,X60,X58,X56,X55] : (p(s(bool,X58)) | sP13(X54,X59,X60) | s('type.exhSem.v',X57) != s('type.exhSem.v','const.exhSem.Loc_1'(s('type.num.num',X61))) | s('type.conSem.v',X56) != s('type.conSem.v','const.conSem.Loc_1'(s('type.num.num',X61))) | s(bool,'T_0') = s(bool,happ(s(fun('type.exhSem.v',bool),happ(s(fun('type.conSem.v',fun('type.exhSem.v',bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.conSem.v',fun('type.exhSem.v',bool))),X54),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X55))),s('type.conSem.v',X56))),s('type.exhSem.v',X57))) | s(bool,'T_0') = s(bool,X58)) ) | $spl2),
  inference(superposition,[],[f262,f758])).
fof(f9198,plain,(
  ( ! [X61,X59,X57,X54,X60,X56,X55] : (sP13(X54,X59,X60) | s(bool,'T_0') = s(bool,happ(s(fun('type.exhSem.v',bool),happ(s(fun('type.conSem.v',fun('type.exhSem.v',bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.conSem.v',fun('type.exhSem.v',bool))),X54),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X55))),s('type.conSem.v',X56))),s('type.exhSem.v',X57))) | s('type.exhSem.v',X57) != s('type.exhSem.v','const.exhSem.Litv_1'(s('type.ast.lit',X61))) | s('type.conSem.v',X56) != s('type.conSem.v','const.conSem.Litv_1'(s('type.ast.lit',X61)))) ) | $spl152),
  inference(cnf_transformation,[],[f9198_D])).
fof(f9198_D,plain,(
  ( ! [X61,X59,X57,X54,X60,X56,X55] : (sP13(X54,X59,X60) | s(bool,'T_0') = s(bool,happ(s(fun('type.exhSem.v',bool),happ(s(fun('type.conSem.v',fun('type.exhSem.v',bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.conSem.v',fun('type.exhSem.v',bool))),X54),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X55))),s('type.conSem.v',X56))),s('type.exhSem.v',X57))) | s('type.exhSem.v',X57) != s('type.exhSem.v','const.exhSem.Litv_1'(s('type.ast.lit',X61))) | s('type.conSem.v',X56) != s('type.conSem.v','const.conSem.Litv_1'(s('type.ast.lit',X61)))) ) <=> ~$spl152),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl152])])).
fof(f9199,plain,(
  ( ! [X68,X66,X64,X62,X69,X67,X65,X63] : (sP13(X62,X67,X68) | s('type.exhSem.v',X65) != s('type.exhSem.v','const.exhSem.Litv_1'(s('type.ast.lit',X69))) | s('type.conSem.v',X64) != s('type.conSem.v','const.conSem.Litv_1'(s('type.ast.lit',X69))) | s(bool,'T_0') = s(bool,X66) | s(bool,'T_0') = s(bool,happ(s(fun('type.exhSem.v',bool),happ(s(fun('type.conSem.v',fun('type.exhSem.v',bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.conSem.v',fun('type.exhSem.v',bool))),X62),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X63))),s('type.conSem.v',X64))),s('type.exhSem.v',X65)))) ) | $spl2),
  inference(subsumption_resolution,[],[f9121,f645])).
fof(f9121,plain,(
  ( ! [X68,X66,X64,X62,X69,X67,X65,X63] : (p(s(bool,X66)) | sP13(X62,X67,X68) | s('type.exhSem.v',X65) != s('type.exhSem.v','const.exhSem.Litv_1'(s('type.ast.lit',X69))) | s('type.conSem.v',X64) != s('type.conSem.v','const.conSem.Litv_1'(s('type.ast.lit',X69))) | s(bool,'T_0') = s(bool,X66) | s(bool,'T_0') = s(bool,happ(s(fun('type.exhSem.v',bool),happ(s(fun('type.conSem.v',fun('type.exhSem.v',bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.conSem.v',fun('type.exhSem.v',bool))),X62),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X63))),s('type.conSem.v',X64))),s('type.exhSem.v',X65)))) ) | $spl2),
  inference(superposition,[],[f258,f758])).
fof(f258,plain,(
  ( ! [X4,X2,X0,X7,X5,X3,X1] : (sP13(X0,X1,X2) | p(s(bool,happ(s(fun('type.exhSem.v',bool),happ(s(fun('type.conSem.v',fun('type.exhSem.v',bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.conSem.v',fun('type.exhSem.v',bool))),X0),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X3))),s('type.conSem.v',X4))),s('type.exhSem.v',X5)))) | s('type.exhSem.v',X5) != s('type.exhSem.v','const.exhSem.Litv_1'(s('type.ast.lit',X7))) | s('type.conSem.v',X4) != s('type.conSem.v','const.conSem.Litv_1'(s('type.ast.lit',X7)))) )),
  inference(cnf_transformation,[],[f113])).
fof(f9197,plain,(
  ( ! [X61,X59,X57,X54,X60,X58,X56,X55] : (sP13(X54,X59,X60) | s('type.exhSem.v',X57) != s('type.exhSem.v','const.exhSem.Litv_1'(s('type.ast.lit',X61))) | s('type.conSem.v',X56) != s('type.conSem.v','const.conSem.Litv_1'(s('type.ast.lit',X61))) | s(bool,'T_0') = s(bool,happ(s(fun('type.exhSem.v',bool),happ(s(fun('type.conSem.v',fun('type.exhSem.v',bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.conSem.v',fun('type.exhSem.v',bool))),X54),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X55))),s('type.conSem.v',X56))),s('type.exhSem.v',X57))) | s(bool,'T_0') = s(bool,X58)) ) | $spl2),
  inference(subsumption_resolution,[],[f9120,f645])).
fof(f9120,plain,(
  ( ! [X61,X59,X57,X54,X60,X58,X56,X55] : (p(s(bool,X58)) | sP13(X54,X59,X60) | s('type.exhSem.v',X57) != s('type.exhSem.v','const.exhSem.Litv_1'(s('type.ast.lit',X61))) | s('type.conSem.v',X56) != s('type.conSem.v','const.conSem.Litv_1'(s('type.ast.lit',X61))) | s(bool,'T_0') = s(bool,happ(s(fun('type.exhSem.v',bool),happ(s(fun('type.conSem.v',fun('type.exhSem.v',bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.conSem.v',fun('type.exhSem.v',bool))),X54),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X55))),s('type.conSem.v',X56))),s('type.exhSem.v',X57))) | s(bool,'T_0') = s(bool,X58)) ) | $spl2),
  inference(superposition,[],[f258,f758])).
fof(f9042,plain,(
  ( ! [X61,X59,X57,X54,X60,X56,X55] : (sP6(X54,X59,X60) | s(bool,'T_0') = s(bool,happ(s(fun('type.exhSem.v',bool),happ(s(fun('type.conSem.v',fun('type.exhSem.v',bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.conSem.v',fun('type.exhSem.v',bool))),X54),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X55))),s('type.conSem.v',X56))),s('type.exhSem.v',X57))) | s('type.exhSem.v',X57) != s('type.exhSem.v','const.exhSem.Loc_1'(s('type.num.num',X61))) | s('type.conSem.v',X56) != s('type.conSem.v','const.conSem.Loc_1'(s('type.num.num',X61)))) ) | $spl150),
  inference(cnf_transformation,[],[f9042_D])).
fof(f9042_D,plain,(
  ( ! [X61,X59,X57,X54,X60,X56,X55] : (sP6(X54,X59,X60) | s(bool,'T_0') = s(bool,happ(s(fun('type.exhSem.v',bool),happ(s(fun('type.conSem.v',fun('type.exhSem.v',bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.conSem.v',fun('type.exhSem.v',bool))),X54),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X55))),s('type.conSem.v',X56))),s('type.exhSem.v',X57))) | s('type.exhSem.v',X57) != s('type.exhSem.v','const.exhSem.Loc_1'(s('type.num.num',X61))) | s('type.conSem.v',X56) != s('type.conSem.v','const.conSem.Loc_1'(s('type.num.num',X61)))) ) <=> ~$spl150),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl150])])).
fof(f9043,plain,(
  ( ! [X68,X66,X64,X62,X69,X67,X65,X63] : (sP6(X62,X67,X68) | s('type.exhSem.v',X65) != s('type.exhSem.v','const.exhSem.Loc_1'(s('type.num.num',X69))) | s('type.conSem.v',X64) != s('type.conSem.v','const.conSem.Loc_1'(s('type.num.num',X69))) | s(bool,'T_0') = s(bool,X66) | s(bool,'T_0') = s(bool,happ(s(fun('type.exhSem.v',bool),happ(s(fun('type.conSem.v',fun('type.exhSem.v',bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.conSem.v',fun('type.exhSem.v',bool))),X62),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X63))),s('type.conSem.v',X64))),s('type.exhSem.v',X65)))) ) | $spl2),
  inference(subsumption_resolution,[],[f8969,f645])).
fof(f8969,plain,(
  ( ! [X68,X66,X64,X62,X69,X67,X65,X63] : (p(s(bool,X66)) | sP6(X62,X67,X68) | s('type.exhSem.v',X65) != s('type.exhSem.v','const.exhSem.Loc_1'(s('type.num.num',X69))) | s('type.conSem.v',X64) != s('type.conSem.v','const.conSem.Loc_1'(s('type.num.num',X69))) | s(bool,'T_0') = s(bool,X66) | s(bool,'T_0') = s(bool,happ(s(fun('type.exhSem.v',bool),happ(s(fun('type.conSem.v',fun('type.exhSem.v',bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.conSem.v',fun('type.exhSem.v',bool))),X62),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X63))),s('type.conSem.v',X64))),s('type.exhSem.v',X65)))) ) | $spl2),
  inference(superposition,[],[f205,f758])).
fof(f205,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (sP6(X0,X1,X2) | p(s(bool,happ(s(fun('type.exhSem.v',bool),happ(s(fun('type.conSem.v',fun('type.exhSem.v',bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.conSem.v',fun('type.exhSem.v',bool))),X0),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X3))),s('type.conSem.v',X4))),s('type.exhSem.v',X5)))) | s('type.exhSem.v',X5) != s('type.exhSem.v','const.exhSem.Loc_1'(s('type.num.num',X6))) | s('type.conSem.v',X4) != s('type.conSem.v','const.conSem.Loc_1'(s('type.num.num',X6)))) )),
  inference(cnf_transformation,[],[f87])).
fof(f87,plain,(
  ! [X0,X1,X2] : ((~sP6(X0,X1,X2) | (((s('type.conSem.v',sK24(X2,X1,X0)) = s('type.conSem.v','const.conSem.Litv_1'(s('type.ast.lit',sK26(X2,X1,X0)))) & s('type.exhSem.v',sK25(X2,X1,X0)) = s('type.exhSem.v','const.exhSem.Litv_1'(s('type.ast.lit',sK26(X2,X1,X0))))) | sP2(X1,sK23(X2,X1,X0),sK25(X2,X1,X0),sK24(X2,X1,X0)) | sP0(X2,sK23(X2,X1,X0),sK25(X2,X1,X0),sK24(X2,X1,X0)) | sP1(X2,sK23(X2,X1,X0),sK25(X2,X1,X0),sK24(X2,X1,X0)) | (s('type.conSem.v',sK24(X2,X1,X0)) = s('type.conSem.v','const.conSem.Loc_1'(s('type.num.num',sK27(X2,X1,X0)))) & s('type.exhSem.v',sK25(X2,X1,X0)) = s('type.exhSem.v','const.exhSem.Loc_1'(s('type.num.num',sK27(X2,X1,X0))))) | sP3(X1,sK23(X2,X1,X0),sK25(X2,X1,X0),sK24(X2,X1,X0))) & ~p(s(bool,happ(s(fun('type.exhSem.v',bool),happ(s(fun('type.conSem.v',fun('type.exhSem.v',bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.conSem.v',fun('type.exhSem.v',bool))),X0),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),sK23(X2,X1,X0)))),s('type.conSem.v',sK24(X2,X1,X0)))),s('type.exhSem.v',sK25(X2,X1,X0))))))) & (! [X3,X4,X5] : ((! [X7] : (s('type.conSem.v',X4) != s('type.conSem.v','const.conSem.Litv_1'(s('type.ast.lit',X7))) | s('type.exhSem.v',X5) != s('type.exhSem.v','const.exhSem.Litv_1'(s('type.ast.lit',X7)))) & ~sP2(X1,X3,X5,X4) & ~sP0(X2,X3,X5,X4) & ~sP1(X2,X3,X5,X4) & ! [X6] : (s('type.conSem.v',X4) != s('type.conSem.v','const.conSem.Loc_1'(s('type.num.num',X6))) | s('type.exhSem.v',X5) != s('type.exhSem.v','const.exhSem.Loc_1'(s('type.num.num',X6)))) & ~sP3(X1,X3,X5,X4)) | p(s(bool,happ(s(fun('type.exhSem.v',bool),happ(s(fun('type.conSem.v',fun('type.exhSem.v',bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.conSem.v',fun('type.exhSem.v',bool))),X0),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X3))),s('type.conSem.v',X4))),s('type.exhSem.v',X5))))) | sP6(X0,X1,X2)))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK23,sK24,sK25,sK26,sK27])],[f86])).
fof(f86,plain,(
  ! [X0,X1,X2] : ((~sP6(X0,X1,X2) | ? [X8,X9,X10] : ((? [X12] : (s('type.conSem.v',X9) = s('type.conSem.v','const.conSem.Litv_1'(s('type.ast.lit',X12))) & s('type.exhSem.v',X10) = s('type.exhSem.v','const.exhSem.Litv_1'(s('type.ast.lit',X12)))) | sP2(X1,X8,X10,X9) | sP0(X2,X8,X10,X9) | sP1(X2,X8,X10,X9) | ? [X11] : (s('type.conSem.v',X9) = s('type.conSem.v','const.conSem.Loc_1'(s('type.num.num',X11))) & s('type.exhSem.v',X10) = s('type.exhSem.v','const.exhSem.Loc_1'(s('type.num.num',X11)))) | sP3(X1,X8,X10,X9)) & ~p(s(bool,happ(s(fun('type.exhSem.v',bool),happ(s(fun('type.conSem.v',fun('type.exhSem.v',bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.conSem.v',fun('type.exhSem.v',bool))),X0),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X8))),s('type.conSem.v',X9))),s('type.exhSem.v',X10)))))) & (! [X3,X4,X5] : ((! [X7] : (s('type.conSem.v',X4) != s('type.conSem.v','const.conSem.Litv_1'(s('type.ast.lit',X7))) | s('type.exhSem.v',X5) != s('type.exhSem.v','const.exhSem.Litv_1'(s('type.ast.lit',X7)))) & ~sP2(X1,X3,X5,X4) & ~sP0(X2,X3,X5,X4) & ~sP1(X2,X3,X5,X4) & ! [X6] : (s('type.conSem.v',X4) != s('type.conSem.v','const.conSem.Loc_1'(s('type.num.num',X6))) | s('type.exhSem.v',X5) != s('type.exhSem.v','const.exhSem.Loc_1'(s('type.num.num',X6)))) & ~sP3(X1,X3,X5,X4)) | p(s(bool,happ(s(fun('type.exhSem.v',bool),happ(s(fun('type.conSem.v',fun('type.exhSem.v',bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.conSem.v',fun('type.exhSem.v',bool))),X0),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X3))),s('type.conSem.v',X4))),s('type.exhSem.v',X5))))) | sP6(X0,X1,X2)))),
  inference(rectify,[],[f85])).
fof(f85,plain,(
  ! [X3,X4,X5] : ((~sP6(X3,X4,X5) | ? [X21,X22,X23] : ((? [X40] : (s('type.conSem.v',X22) = s('type.conSem.v','const.conSem.Litv_1'(s('type.ast.lit',X40))) & s('type.exhSem.v',X23) = s('type.exhSem.v','const.exhSem.Litv_1'(s('type.ast.lit',X40)))) | sP2(X4,X21,X23,X22) | sP0(X5,X21,X23,X22) | sP1(X5,X21,X23,X22) | ? [X26] : (s('type.conSem.v',X22) = s('type.conSem.v','const.conSem.Loc_1'(s('type.num.num',X26))) & s('type.exhSem.v',X23) = s('type.exhSem.v','const.exhSem.Loc_1'(s('type.num.num',X26)))) | sP3(X4,X21,X23,X22)) & ~p(s(bool,happ(s(fun('type.exhSem.v',bool),happ(s(fun('type.conSem.v',fun('type.exhSem.v',bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.conSem.v',fun('type.exhSem.v',bool))),X3),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X21))),s('type.conSem.v',X22))),s('type.exhSem.v',X23)))))) & (! [X21,X22,X23] : ((! [X40] : (s('type.conSem.v',X22) != s('type.conSem.v','const.conSem.Litv_1'(s('type.ast.lit',X40))) | s('type.exhSem.v',X23) != s('type.exhSem.v','const.exhSem.Litv_1'(s('type.ast.lit',X40)))) & ~sP2(X4,X21,X23,X22) & ~sP0(X5,X21,X23,X22) & ~sP1(X5,X21,X23,X22) & ! [X26] : (s('type.conSem.v',X22) != s('type.conSem.v','const.conSem.Loc_1'(s('type.num.num',X26))) | s('type.exhSem.v',X23) != s('type.exhSem.v','const.exhSem.Loc_1'(s('type.num.num',X26)))) & ~sP3(X4,X21,X23,X22)) | p(s(bool,happ(s(fun('type.exhSem.v',bool),happ(s(fun('type.conSem.v',fun('type.exhSem.v',bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.conSem.v',fun('type.exhSem.v',bool))),X3),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X21))),s('type.conSem.v',X22))),s('type.exhSem.v',X23))))) | sP6(X3,X4,X5)))),
  inference(nnf_transformation,[],[f53])).
fof(f9041,plain,(
  ( ! [X61,X59,X57,X54,X60,X58,X56,X55] : (sP6(X54,X59,X60) | s('type.exhSem.v',X57) != s('type.exhSem.v','const.exhSem.Loc_1'(s('type.num.num',X61))) | s('type.conSem.v',X56) != s('type.conSem.v','const.conSem.Loc_1'(s('type.num.num',X61))) | s(bool,'T_0') = s(bool,happ(s(fun('type.exhSem.v',bool),happ(s(fun('type.conSem.v',fun('type.exhSem.v',bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.conSem.v',fun('type.exhSem.v',bool))),X54),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X55))),s('type.conSem.v',X56))),s('type.exhSem.v',X57))) | s(bool,'T_0') = s(bool,X58)) ) | $spl2),
  inference(subsumption_resolution,[],[f8968,f645])).
fof(f8968,plain,(
  ( ! [X61,X59,X57,X54,X60,X58,X56,X55] : (p(s(bool,X58)) | sP6(X54,X59,X60) | s('type.exhSem.v',X57) != s('type.exhSem.v','const.exhSem.Loc_1'(s('type.num.num',X61))) | s('type.conSem.v',X56) != s('type.conSem.v','const.conSem.Loc_1'(s('type.num.num',X61))) | s(bool,'T_0') = s(bool,happ(s(fun('type.exhSem.v',bool),happ(s(fun('type.conSem.v',fun('type.exhSem.v',bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.conSem.v',fun('type.exhSem.v',bool))),X54),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X55))),s('type.conSem.v',X56))),s('type.exhSem.v',X57))) | s(bool,'T_0') = s(bool,X58)) ) | $spl2),
  inference(superposition,[],[f205,f758])).
fof(f644,plain,(
  ( ! [X19] : (s(bool,'F_0') = s(bool,X19)) ) | $spl0),
  inference(cnf_transformation,[],[f644_D])).
fof(f644_D,plain,(
  ( ! [X19] : (s(bool,'F_0') = s(bool,X19)) ) <=> ~$spl0),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl0])])).
fof(f8890,plain,(
  ( ! [X88,X85,X83,X89,X86,X84] : (s(bool,X88) = s(bool,X89) | s(bool,X88) != s(bool,sK137(X83,X84,X85,X85,X86)) | s(bool,'F_0') = s(bool,X89)) ) | $spl148),
  inference(cnf_transformation,[],[f8890_D])).
fof(f8890_D,plain,(
  ( ! [X88,X85,X83,X89,X86,X84] : (s(bool,X88) = s(bool,X89) | s(bool,X88) != s(bool,sK137(X83,X84,X85,X85,X86)) | s(bool,'F_0') = s(bool,X89)) ) <=> ~$spl148),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl148])])).
fof(f8889,plain,(
  ( ! [X88,X87,X85,X83,X89,X86,X84] : (s(bool,X88) = s(bool,X89) | s(bool,'F_0') = s(bool,X89) | s(bool,X88) != s(bool,sK137(X83,X84,X85,X85,X86)) | s(bool,'F_0') = s(bool,X87)) ) | ($spl2 | $spl7)),
  inference(subsumption_resolution,[],[f8871,f1538])).
fof(f1538,plain,(
  ( ! [X1] : (p(s(bool,X1)) | s(bool,'F_0') = s(bool,X1)) )),
  inference(resolution,[],[f193,f173])).
fof(f193,plain,(
  ~p(s(bool,'F_0'))),
  inference(cnf_transformation,[],[f33])).
fof(f33,plain,(
  ~p(s(bool,'F_0'))),
  inference(flattening,[],[f2])).
fof(f2,axiom,(
  ~p(s(bool,'F_0'))),
  file('thm.dec_to_exhProof.v_rel_rules|split|0',aHL_FALSITY)).
fof(f8871,plain,(
  ( ! [X88,X87,X85,X83,X89,X86,X84] : (~p(s(bool,X87)) | s(bool,X88) = s(bool,X89) | s(bool,'F_0') = s(bool,X89) | s(bool,X88) != s(bool,sK137(X83,X84,X85,X85,X86)) | s(bool,'F_0') = s(bool,X87)) ) | ($spl2 | $spl7)),
  inference(superposition,[],[f5235,f917])).
fof(f917,plain,(
  ( ! [X88,X87,X85,X86,X84] : (s(bool,X88) = s(bool,sK137(X84,X85,X86,X86,X87)) | s(bool,'F_0') = s(bool,X88)) ) | $spl2),
  inference(subsumption_resolution,[],[f901,f194])).
fof(f194,plain,(
  p(s(bool,'T_0'))),
  inference(cnf_transformation,[],[f21])).
fof(f21,axiom,(
  p(s(bool,'T_0'))),
  file('thm.dec_to_exhProof.v_rel_rules|split|0','thm.bool.TRUTH')).
fof(f901,plain,(
  ( ! [X88,X87,X85,X86,X84] : (~p(s(bool,'T_0')) | s(bool,X88) = s(bool,sK137(X84,X85,X86,X86,X87)) | s(bool,'F_0') = s(bool,X88)) ) | $spl2),
  inference(superposition,[],[f441,f876])).
fof(f876,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,sK137(X0,X1,X2,X2,X3))) ) | $spl2),
  inference(equality_resolution,[],[f745])).
fof(f745,plain,(
  ( ! [X478,X480,X477,X479,X481] : (s('type.ast.lit',X479) != s('type.ast.lit',X480) | s(bool,'T_0') = s(bool,sK137(X477,X478,X479,X480,X481))) ) | $spl2),
  inference(resolution,[],[f645,f368])).
fof(f368,plain,(
  ( ! [X4,X2,X0,X3,X1] : (p(s(bool,sK137(X4,X3,X2,X1,X0))) | s('type.ast.lit',X1) != s('type.ast.lit',X2)) )),
  inference(cnf_transformation,[],[f165])).
fof(f165,plain,(
  ! [X0,X1,X2,X3,X4] : ((~p(s(bool,sK137(X4,X3,X2,X1,X0))) | s('type.ast.lit',X1) = s('type.ast.lit',X2)) & (s('type.ast.lit',X1) != s('type.ast.lit',X2) | p(s(bool,sK137(X4,X3,X2,X1,X0)))) & s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v'))),'const.conSem.pmatch_5'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X3),s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),X0),s('type.conLang.pat','const.conLang.Plit_1'(s('type.ast.lit',X2))),s('type.conSem.v','const.conSem.Litv_1'(s('type.ast.lit',X1))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X4))) = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v'))),'const.bool.COND_3'(s(bool,sK137(X4,X3,X2,X1,X0)),s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X4))),s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v'))),'const.bool.COND_3'(s(bool,'const.semanticPrimitives.lit_same_type_2'(s('type.ast.lit',X2),s('type.ast.lit',X1))),s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v'))),'const.semanticPrimitives.No_match_0'),s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v'))),'const.semanticPrimitives.Match_type_error_0'))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK137])],[f164])).
fof(f164,plain,(
  ! [X0,X1,X2,X3,X4] : ? [X5] : ((~p(s(bool,X5)) | s('type.ast.lit',X1) = s('type.ast.lit',X2)) & (s('type.ast.lit',X1) != s('type.ast.lit',X2) | p(s(bool,X5))) & s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v'))),'const.conSem.pmatch_5'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X3),s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),X0),s('type.conLang.pat','const.conLang.Plit_1'(s('type.ast.lit',X2))),s('type.conSem.v','const.conSem.Litv_1'(s('type.ast.lit',X1))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X4))) = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v'))),'const.bool.COND_3'(s(bool,X5),s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X4))),s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v'))),'const.bool.COND_3'(s(bool,'const.semanticPrimitives.lit_same_type_2'(s('type.ast.lit',X2),s('type.ast.lit',X1))),s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v'))),'const.semanticPrimitives.No_match_0'),s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v'))),'const.semanticPrimitives.Match_type_error_0'))))))),
  inference(flattening,[],[f163])).
fof(f163,plain,(
  ! [X0,X1,X2,X3,X4] : ? [X5] : (((~p(s(bool,X5)) | s('type.ast.lit',X1) = s('type.ast.lit',X2)) & (s('type.ast.lit',X1) != s('type.ast.lit',X2) | p(s(bool,X5)))) & s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v'))),'const.conSem.pmatch_5'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X3),s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),X0),s('type.conLang.pat','const.conLang.Plit_1'(s('type.ast.lit',X2))),s('type.conSem.v','const.conSem.Litv_1'(s('type.ast.lit',X1))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X4))) = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v'))),'const.bool.COND_3'(s(bool,X5),s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X4))),s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v'))),'const.bool.COND_3'(s(bool,'const.semanticPrimitives.lit_same_type_2'(s('type.ast.lit',X2),s('type.ast.lit',X1))),s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v'))),'const.semanticPrimitives.No_match_0'),s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v'))),'const.semanticPrimitives.Match_type_error_0'))))))),
  inference(nnf_transformation,[],[f37])).
fof(f37,plain,(
  ! [X0,X1,X2,X3,X4] : ? [X5] : ((p(s(bool,X5)) <=> s('type.ast.lit',X1) = s('type.ast.lit',X2)) & s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v'))),'const.conSem.pmatch_5'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X3),s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),X0),s('type.conLang.pat','const.conLang.Plit_1'(s('type.ast.lit',X2))),s('type.conSem.v','const.conSem.Litv_1'(s('type.ast.lit',X1))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X4))) = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v'))),'const.bool.COND_3'(s(bool,X5),s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X4))),s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v'))),'const.bool.COND_3'(s(bool,'const.semanticPrimitives.lit_same_type_2'(s('type.ast.lit',X2),s('type.ast.lit',X1))),s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v'))),'const.semanticPrimitives.No_match_0'),s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v'))),'const.semanticPrimitives.Match_type_error_0'))))))),
  inference(rectify,[],[f10])).
fof(f10,axiom,(
  ! [X42,X43,X7,X6,X19] : ? [X44] : ((p(s(bool,X44)) <=> s('type.ast.lit',X7) = s('type.ast.lit',X43)) & s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v'))),'const.conSem.pmatch_5'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X6),s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),X42),s('type.conLang.pat','const.conLang.Plit_1'(s('type.ast.lit',X7))),s('type.conSem.v','const.conSem.Litv_1'(s('type.ast.lit',X43))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X19))) = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v'))),'const.bool.COND_3'(s(bool,X44),s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X19))),s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v'))),'const.bool.COND_3'(s(bool,'const.semanticPrimitives.lit_same_type_2'(s('type.ast.lit',X7),s('type.ast.lit',X43))),s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v'))),'const.semanticPrimitives.No_match_0'),s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v'))),'const.semanticPrimitives.Match_type_error_0'))))))),
  file('thm.dec_to_exhProof.v_rel_rules|split|0','thm.conSem.pmatch_def|split|1')).
fof(f441,plain,(
  ( ! [X2,X3] : (~p(s(bool,X3)) | s(bool,X2) = s(bool,X3) | s(bool,'F_0') = s(bool,X2)) )),
  inference(resolution,[],[f420,f176])).
fof(f176,plain,(
  ( ! [X0,X1] : (s(bool,X0) = s(bool,X1) | ~p(s(bool,X0)) | ~p(s(bool,X1))) )),
  inference(cnf_transformation,[],[f40])).
fof(f420,plain,(
  ( ! [X0] : (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)) )),
  inference(subsumption_resolution,[],[f419,f182])).
fof(f419,plain,(
  ( ! [X0] : (p(s(bool,'F_0')) | s(bool,'F_0') = s(bool,X0) | p(s(bool,X0))) )),
  inference(forward_demodulation,[],[f394,f389])).
fof(f389,plain,(
  s(bool,'F_0') = s(bool,'const.dec_to_exhProof.v_rel_3'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),sK21),s('type.conSem.v','const.conSem.Litv_1'(s('type.ast.lit',sK22))),s('type.exhSem.v','const.exhSem.Litv_1'(s('type.ast.lit',sK22)))))),
  inference(subsumption_resolution,[],[f381,f194])).
fof(f381,plain,(
  ~p(s(bool,'T_0')) | s(bool,'F_0') = s(bool,'const.dec_to_exhProof.v_rel_3'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),sK21),s('type.conSem.v','const.conSem.Litv_1'(s('type.ast.lit',sK22))),s('type.exhSem.v','const.exhSem.Litv_1'(s('type.ast.lit',sK22)))))),
  inference(superposition,[],[f166,f370])).
fof(f370,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f3])).
fof(f3,axiom,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) | s(bool,'F_0') = s(bool,X0))),
  file('thm.dec_to_exhProof.v_rel_rules|split|0',aHL_BOOL_CASES)).
fof(f394,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | p(s(bool,'const.dec_to_exhProof.v_rel_3'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),sK21),s('type.conSem.v','const.conSem.Litv_1'(s('type.ast.lit',sK22))),s('type.exhSem.v','const.exhSem.Litv_1'(s('type.ast.lit',sK22)))))) | p(s(bool,X0))) )),
  inference(superposition,[],[f389,f173])).
fof(f5235,plain,(
  ( ! [X19,X17,X18] : (~p(s(bool,X17)) | s(bool,X18) = s(bool,X19) | s(bool,'F_0') = s(bool,X19) | s(bool,X17) != s(bool,X18)) ) | $spl7),
  inference(subsumption_resolution,[],[f5189,f188])).
fof(f188,plain,(
  ( ! [X0] : (p(s(bool,'T_0')) | ~p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f82])).
fof(f82,plain,(
  ! [X0] : ((~p(s(bool,'T_0')) | ~p(s(bool,X0)) | p(s(bool,X0))) & (~p(s(bool,X0)) | (p(s(bool,'T_0')) & p(s(bool,X0)))))),
  inference(flattening,[],[f81])).
fof(f81,plain,(
  ! [X0] : (((~p(s(bool,'T_0')) | ~p(s(bool,X0))) | p(s(bool,X0))) & (~p(s(bool,X0)) | (p(s(bool,'T_0')) & p(s(bool,X0)))))),
  inference(nnf_transformation,[],[f31])).
fof(f31,plain,(
  ! [X0] : ((p(s(bool,'T_0')) & p(s(bool,X0))) <=> p(s(bool,X0)))),
  inference(rectify,[],[f18])).
fof(f18,axiom,(
  ! [X16] : ((p(s(bool,'T_0')) & p(s(bool,X16))) <=> p(s(bool,X16)))),
  file('thm.dec_to_exhProof.v_rel_rules|split|0','thm.bool.AND_CLAUSES|split|0')).
fof(f5189,plain,(
  ( ! [X19,X17,X18] : (s(bool,X17) != s(bool,X18) | s(bool,X18) = s(bool,X19) | s(bool,'F_0') = s(bool,X19) | ~p(s(bool,'T_0')) | ~p(s(bool,X17))) ) | $spl7),
  inference(superposition,[],[f4276,f176])).
fof(f4276,plain,(
  ( ! [X6,X5] : (s(bool,'T_0') != s(bool,X5) | s(bool,X5) = s(bool,X6) | s(bool,'F_0') = s(bool,X6)) ) | $spl7),
  inference(superposition,[],[f1394,f2345])).
fof(f2345,plain,(
  ( ! [X0,X1] : (s(bool,X0) = s(bool,X1) | s(bool,'F_0') = s(bool,X0) | s(bool,'F_0') = s(bool,X1)) )),
  inference(resolution,[],[f1561,f1538])).
fof(f1561,plain,(
  ( ! [X4,X3] : (~p(s(bool,X4)) | s(bool,X3) = s(bool,X4) | s(bool,'F_0') = s(bool,X3)) )),
  inference(resolution,[],[f1538,f176])).
fof(f8886,plain,(
  ( ! [X52,X51,X49] : (s(bool,X51) = s(bool,X52) | s(bool,'F_0') = s(bool,X49) | s(bool,X49) != s(bool,X51) | s(bool,'F_0') = s(bool,X52)) ) | $spl146),
  inference(cnf_transformation,[],[f8886_D])).
fof(f8886_D,plain,(
  ( ! [X52,X51,X49] : (s(bool,X51) = s(bool,X52) | s(bool,'F_0') = s(bool,X49) | s(bool,X49) != s(bool,X51) | s(bool,'F_0') = s(bool,X52)) ) <=> ~$spl146),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl146])])).
fof(f8887,plain,(
  ( ! [X54,X56,X55,X53] : (s(bool,X55) = s(bool,X56) | s(bool,'F_0') = s(bool,X56) | s(bool,X53) != s(bool,X55) | s(bool,'F_0') = s(bool,X54) | s(bool,'F_0') = s(bool,X53)) ) | $spl7),
  inference(subsumption_resolution,[],[f8863,f1538])).
fof(f8863,plain,(
  ( ! [X54,X56,X55,X53] : (~p(s(bool,X54)) | s(bool,X55) = s(bool,X56) | s(bool,'F_0') = s(bool,X56) | s(bool,X53) != s(bool,X55) | s(bool,'F_0') = s(bool,X54) | s(bool,'F_0') = s(bool,X53)) ) | $spl7),
  inference(superposition,[],[f5235,f2345])).
fof(f8885,plain,(
  ( ! [X52,X50,X51,X49] : (s(bool,X51) = s(bool,X52) | s(bool,'F_0') = s(bool,X52) | s(bool,X49) != s(bool,X51) | s(bool,'F_0') = s(bool,X49) | s(bool,'F_0') = s(bool,X50)) ) | $spl7),
  inference(subsumption_resolution,[],[f8862,f1538])).
fof(f8862,plain,(
  ( ! [X52,X50,X51,X49] : (~p(s(bool,X50)) | s(bool,X51) = s(bool,X52) | s(bool,'F_0') = s(bool,X52) | s(bool,X49) != s(bool,X51) | s(bool,'F_0') = s(bool,X49) | s(bool,'F_0') = s(bool,X50)) ) | $spl7),
  inference(superposition,[],[f5235,f2345])).
fof(f8735,plain,(
  ( ! [X74,X73] : (s(bool,'F_0') != s(bool,X73) | s(bool,'T_0') = s(bool,X74) | s(bool,X73) = s(bool,X74)) ) | $spl144),
  inference(cnf_transformation,[],[f8735_D])).
fof(f8735_D,plain,(
  ( ! [X74,X73] : (s(bool,'F_0') != s(bool,X73) | s(bool,'T_0') = s(bool,X74) | s(bool,X73) = s(bool,X74)) ) <=> ~$spl144),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl144])])).
fof(f8737,plain,(
  ( ! [X80,X81,X82] : (s(bool,'F_0') != s(bool,X81) | s(bool,X81) = s(bool,X82) | s(bool,'T_0') = s(bool,X82) | s(bool,'T_0') = s(bool,X80)) ) | ($spl2 | $spl7)),
  inference(subsumption_resolution,[],[f8716,f645])).
fof(f8716,plain,(
  ( ! [X80,X81,X82] : (p(s(bool,X80)) | s(bool,'F_0') != s(bool,X81) | s(bool,X81) = s(bool,X82) | s(bool,'T_0') = s(bool,X82) | s(bool,'T_0') = s(bool,X80)) ) | ($spl2 | $spl7)),
  inference(superposition,[],[f4789,f370])).
fof(f4789,plain,(
  ( ! [X14,X15,X16] : (p(s(bool,X15)) | s(bool,X14) != s(bool,X15) | s(bool,X14) = s(bool,X16) | s(bool,'T_0') = s(bool,X16)) ) | ($spl2 | $spl7)),
  inference(superposition,[],[f1556,f758])).
fof(f1556,plain,(
  ( ! [X1] : (s(bool,'T_0') != s(bool,X1) | p(s(bool,X1))) ) | $spl7),
  inference(subsumption_resolution,[],[f1550,f193])).
fof(f1550,plain,(
  ( ! [X1] : (s(bool,'T_0') != s(bool,X1) | p(s(bool,X1)) | p(s(bool,'F_0'))) ) | $spl7),
  inference(superposition,[],[f1394,f173])).
fof(f1477,plain,(
  ( ! [X14] : (p(s(bool,X14))) ) | $spl8),
  inference(cnf_transformation,[],[f1477_D])).
fof(f1477_D,plain,(
  ( ! [X14] : (p(s(bool,X14))) ) <=> ~$spl8),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl8])])).
fof(f8736,plain,(
  ( ! [X78,X76,X79,X77] : (p(s(bool,X76)) | s(bool,'F_0') != s(bool,X77) | s(bool,X77) = s(bool,X78) | s(bool,'T_0') = s(bool,X78) | s(bool,'F_0') = s(bool,X79)) ) | ($spl2 | $spl7)),
  inference(subsumption_resolution,[],[f8715,f1682])).
fof(f1682,plain,(
  ( ! [X0,X1] : (s(bool,X0) != s(bool,X1) | p(s(bool,X1)) | s(bool,'F_0') = s(bool,X0)) ) | $spl7),
  inference(superposition,[],[f1556,f370])).
fof(f8715,plain,(
  ( ! [X78,X76,X79,X77] : (p(s(bool,X76)) | s(bool,'F_0') != s(bool,X77) | s(bool,X77) = s(bool,X78) | s(bool,'T_0') = s(bool,X78) | s(bool,X76) = s(bool,X79) | s(bool,'F_0') = s(bool,X79)) ) | ($spl2 | $spl7)),
  inference(superposition,[],[f4789,f2345])).
fof(f8734,plain,(
  ( ! [X74,X72,X75,X73] : (p(s(bool,X72)) | s(bool,'F_0') != s(bool,X73) | s(bool,X73) = s(bool,X74) | s(bool,'T_0') = s(bool,X74) | s(bool,'F_0') = s(bool,X75)) ) | ($spl2 | $spl7)),
  inference(subsumption_resolution,[],[f8714,f1682])).
fof(f8714,plain,(
  ( ! [X74,X72,X75,X73] : (p(s(bool,X72)) | s(bool,'F_0') != s(bool,X73) | s(bool,X73) = s(bool,X74) | s(bool,'T_0') = s(bool,X74) | s(bool,X72) = s(bool,X75) | s(bool,'F_0') = s(bool,X75)) ) | ($spl2 | $spl7)),
  inference(superposition,[],[f4789,f2345])).
fof(f8728,plain,(
  ( ! [X28,X26,X29] : (s(bool,X26) != s(bool,X28) | s(bool,'T_0') = s(bool,X26) | s(bool,'T_0') = s(bool,X29) | s(bool,X28) = s(bool,X29)) ) | $spl142),
  inference(cnf_transformation,[],[f8728_D])).
fof(f8728_D,plain,(
  ( ! [X28,X26,X29] : (s(bool,X26) != s(bool,X28) | s(bool,'T_0') = s(bool,X26) | s(bool,'T_0') = s(bool,X29) | s(bool,X28) = s(bool,X29)) ) <=> ~$spl142),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl142])])).
fof(f8729,plain,(
  ( ! [X30,X33,X31,X32] : (s(bool,X30) != s(bool,X32) | s(bool,X32) = s(bool,X33) | s(bool,'T_0') = s(bool,X33) | s(bool,'T_0') = s(bool,X31) | s(bool,'T_0') = s(bool,X30)) ) | ($spl2 | $spl7)),
  inference(subsumption_resolution,[],[f8704,f645])).
fof(f8704,plain,(
  ( ! [X30,X33,X31,X32] : (p(s(bool,X31)) | s(bool,X30) != s(bool,X32) | s(bool,X32) = s(bool,X33) | s(bool,'T_0') = s(bool,X33) | s(bool,'T_0') = s(bool,X31) | s(bool,'T_0') = s(bool,X30)) ) | ($spl2 | $spl7)),
  inference(superposition,[],[f4789,f758])).
fof(f8727,plain,(
  ( ! [X28,X26,X29,X27] : (s(bool,X26) != s(bool,X28) | s(bool,X28) = s(bool,X29) | s(bool,'T_0') = s(bool,X29) | s(bool,'T_0') = s(bool,X26) | s(bool,'T_0') = s(bool,X27)) ) | ($spl2 | $spl7)),
  inference(subsumption_resolution,[],[f8703,f645])).
fof(f8703,plain,(
  ( ! [X28,X26,X29,X27] : (p(s(bool,X27)) | s(bool,X26) != s(bool,X28) | s(bool,X28) = s(bool,X29) | s(bool,'T_0') = s(bool,X29) | s(bool,'T_0') = s(bool,X26) | s(bool,'T_0') = s(bool,X27)) ) | ($spl2 | $spl7)),
  inference(superposition,[],[f4789,f758])).
fof(f8671,plain,(
  ( ! [X61,X59,X57,X54,X60,X56,X55] : (sP6(X54,X59,X60) | s(bool,'T_0') = s(bool,happ(s(fun('type.exhSem.v',bool),happ(s(fun('type.conSem.v',fun('type.exhSem.v',bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.conSem.v',fun('type.exhSem.v',bool))),X54),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X55))),s('type.conSem.v',X56))),s('type.exhSem.v',X57))) | s('type.exhSem.v',X57) != s('type.exhSem.v','const.exhSem.Litv_1'(s('type.ast.lit',X61))) | s('type.conSem.v',X56) != s('type.conSem.v','const.conSem.Litv_1'(s('type.ast.lit',X61)))) ) | $spl140),
  inference(cnf_transformation,[],[f8671_D])).
fof(f8671_D,plain,(
  ( ! [X61,X59,X57,X54,X60,X56,X55] : (sP6(X54,X59,X60) | s(bool,'T_0') = s(bool,happ(s(fun('type.exhSem.v',bool),happ(s(fun('type.conSem.v',fun('type.exhSem.v',bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.conSem.v',fun('type.exhSem.v',bool))),X54),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X55))),s('type.conSem.v',X56))),s('type.exhSem.v',X57))) | s('type.exhSem.v',X57) != s('type.exhSem.v','const.exhSem.Litv_1'(s('type.ast.lit',X61))) | s('type.conSem.v',X56) != s('type.conSem.v','const.conSem.Litv_1'(s('type.ast.lit',X61)))) ) <=> ~$spl140),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl140])])).
fof(f8672,plain,(
  ( ! [X68,X66,X64,X62,X69,X67,X65,X63] : (sP6(X62,X67,X68) | s('type.exhSem.v',X65) != s('type.exhSem.v','const.exhSem.Litv_1'(s('type.ast.lit',X69))) | s('type.conSem.v',X64) != s('type.conSem.v','const.conSem.Litv_1'(s('type.ast.lit',X69))) | s(bool,'T_0') = s(bool,X66) | s(bool,'T_0') = s(bool,happ(s(fun('type.exhSem.v',bool),happ(s(fun('type.conSem.v',fun('type.exhSem.v',bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.conSem.v',fun('type.exhSem.v',bool))),X62),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X63))),s('type.conSem.v',X64))),s('type.exhSem.v',X65)))) ) | $spl2),
  inference(subsumption_resolution,[],[f8594,f645])).
fof(f8594,plain,(
  ( ! [X68,X66,X64,X62,X69,X67,X65,X63] : (p(s(bool,X66)) | sP6(X62,X67,X68) | s('type.exhSem.v',X65) != s('type.exhSem.v','const.exhSem.Litv_1'(s('type.ast.lit',X69))) | s('type.conSem.v',X64) != s('type.conSem.v','const.conSem.Litv_1'(s('type.ast.lit',X69))) | s(bool,'T_0') = s(bool,X66) | s(bool,'T_0') = s(bool,happ(s(fun('type.exhSem.v',bool),happ(s(fun('type.conSem.v',fun('type.exhSem.v',bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.conSem.v',fun('type.exhSem.v',bool))),X62),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X63))),s('type.conSem.v',X64))),s('type.exhSem.v',X65)))) ) | $spl2),
  inference(superposition,[],[f201,f758])).
fof(f201,plain,(
  ( ! [X4,X2,X0,X7,X5,X3,X1] : (sP6(X0,X1,X2) | p(s(bool,happ(s(fun('type.exhSem.v',bool),happ(s(fun('type.conSem.v',fun('type.exhSem.v',bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.conSem.v',fun('type.exhSem.v',bool))),X0),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X3))),s('type.conSem.v',X4))),s('type.exhSem.v',X5)))) | s('type.exhSem.v',X5) != s('type.exhSem.v','const.exhSem.Litv_1'(s('type.ast.lit',X7))) | s('type.conSem.v',X4) != s('type.conSem.v','const.conSem.Litv_1'(s('type.ast.lit',X7)))) )),
  inference(cnf_transformation,[],[f87])).
fof(f8670,plain,(
  ( ! [X61,X59,X57,X54,X60,X58,X56,X55] : (sP6(X54,X59,X60) | s('type.exhSem.v',X57) != s('type.exhSem.v','const.exhSem.Litv_1'(s('type.ast.lit',X61))) | s('type.conSem.v',X56) != s('type.conSem.v','const.conSem.Litv_1'(s('type.ast.lit',X61))) | s(bool,'T_0') = s(bool,happ(s(fun('type.exhSem.v',bool),happ(s(fun('type.conSem.v',fun('type.exhSem.v',bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.conSem.v',fun('type.exhSem.v',bool))),X54),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X55))),s('type.conSem.v',X56))),s('type.exhSem.v',X57))) | s(bool,'T_0') = s(bool,X58)) ) | $spl2),
  inference(subsumption_resolution,[],[f8593,f645])).
fof(f8593,plain,(
  ( ! [X61,X59,X57,X54,X60,X58,X56,X55] : (p(s(bool,X58)) | sP6(X54,X59,X60) | s('type.exhSem.v',X57) != s('type.exhSem.v','const.exhSem.Litv_1'(s('type.ast.lit',X61))) | s('type.conSem.v',X56) != s('type.conSem.v','const.conSem.Litv_1'(s('type.ast.lit',X61))) | s(bool,'T_0') = s(bool,happ(s(fun('type.exhSem.v',bool),happ(s(fun('type.conSem.v',fun('type.exhSem.v',bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.conSem.v',fun('type.exhSem.v',bool))),X54),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X55))),s('type.conSem.v',X56))),s('type.exhSem.v',X57))) | s(bool,'T_0') = s(bool,X58)) ) | $spl2),
  inference(superposition,[],[f201,f758])).
fof(f8518,plain,(
  ( ! [X50,X51,X49] : (p(s(bool,'const.dec_to_exhProof.v_rel_3'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X51),s('type.conSem.v',X50),s('type.exhSem.v',X49)))) | s(bool,'F_0') = s(bool,happ(s(fun('type.exhSem.v',bool),happ(s(fun('type.conSem.v',fun('type.exhSem.v',bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.conSem.v',fun('type.exhSem.v',bool))),sK58(X49,X50,X51)),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X51))),s('type.conSem.v',X50))),s('type.exhSem.v',X49)))) ) | $spl138),
  inference(cnf_transformation,[],[f8518_D])).
fof(f8518_D,plain,(
  ( ! [X50,X51,X49] : (p(s(bool,'const.dec_to_exhProof.v_rel_3'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X51),s('type.conSem.v',X50),s('type.exhSem.v',X49)))) | s(bool,'F_0') = s(bool,happ(s(fun('type.exhSem.v',bool),happ(s(fun('type.conSem.v',fun('type.exhSem.v',bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.conSem.v',fun('type.exhSem.v',bool))),sK58(X49,X50,X51)),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X51))),s('type.conSem.v',X50))),s('type.exhSem.v',X49)))) ) <=> ~$spl138),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl138])])).
fof(f8519,plain,(
  ( ! [X54,X56,X55,X53] : (p(s(bool,'const.dec_to_exhProof.v_rel_3'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X55),s('type.conSem.v',X54),s('type.exhSem.v',X53)))) | s(bool,'F_0') = s(bool,X56) | s(bool,'F_0') = s(bool,happ(s(fun('type.exhSem.v',bool),happ(s(fun('type.conSem.v',fun('type.exhSem.v',bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.conSem.v',fun('type.exhSem.v',bool))),sK58(X53,X54,X55)),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X55))),s('type.conSem.v',X54))),s('type.exhSem.v',X53)))) )),
  inference(subsumption_resolution,[],[f8499,f1538])).
fof(f8499,plain,(
  ( ! [X54,X56,X55,X53] : (~p(s(bool,X56)) | p(s(bool,'const.dec_to_exhProof.v_rel_3'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X55),s('type.conSem.v',X54),s('type.exhSem.v',X53)))) | s(bool,'F_0') = s(bool,X56) | s(bool,'F_0') = s(bool,happ(s(fun('type.exhSem.v',bool),happ(s(fun('type.conSem.v',fun('type.exhSem.v',bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.conSem.v',fun('type.exhSem.v',bool))),sK58(X53,X54,X55)),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X55))),s('type.conSem.v',X54))),s('type.exhSem.v',X53)))) )),
  inference(superposition,[],[f252,f2345])).
fof(f252,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,'const.dec_to_exhProof.v_rel_3'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X0),s('type.conSem.v',X1),s('type.exhSem.v',X2)))) | ~p(s(bool,happ(s(fun('type.exhSem.v',bool),happ(s(fun('type.conSem.v',fun('type.exhSem.v',bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.conSem.v',fun('type.exhSem.v',bool))),sK58(X2,X1,X0)),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X0))),s('type.conSem.v',X1))),s('type.exhSem.v',X2))))) )),
  inference(cnf_transformation,[],[f110])).
fof(f8517,plain,(
  ( ! [X52,X50,X51,X49] : (p(s(bool,'const.dec_to_exhProof.v_rel_3'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X51),s('type.conSem.v',X50),s('type.exhSem.v',X49)))) | s(bool,'F_0') = s(bool,happ(s(fun('type.exhSem.v',bool),happ(s(fun('type.conSem.v',fun('type.exhSem.v',bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.conSem.v',fun('type.exhSem.v',bool))),sK58(X49,X50,X51)),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X51))),s('type.conSem.v',X50))),s('type.exhSem.v',X49))) | s(bool,'F_0') = s(bool,X52)) )),
  inference(subsumption_resolution,[],[f8498,f1538])).
fof(f8498,plain,(
  ( ! [X52,X50,X51,X49] : (~p(s(bool,X52)) | p(s(bool,'const.dec_to_exhProof.v_rel_3'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X51),s('type.conSem.v',X50),s('type.exhSem.v',X49)))) | s(bool,'F_0') = s(bool,happ(s(fun('type.exhSem.v',bool),happ(s(fun('type.conSem.v',fun('type.exhSem.v',bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.conSem.v',fun('type.exhSem.v',bool))),sK58(X49,X50,X51)),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X51))),s('type.conSem.v',X50))),s('type.exhSem.v',X49))) | s(bool,'F_0') = s(bool,X52)) )),
  inference(superposition,[],[f252,f2345])).
fof(f8507,plain,(
  ( ! [X28,X26,X27] : (~p(s(bool,happ(s(fun('type.exhSem.v',bool),happ(s(fun('type.conSem.v',fun('type.exhSem.v',bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.conSem.v',fun('type.exhSem.v',bool))),sK58(X28,X27,X26)),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X26))),s('type.conSem.v',X27))),s('type.exhSem.v',X28)))) | s(bool,'T_0') = s(bool,'const.dec_to_exhProof.v_rel_3'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X26),s('type.conSem.v',X27),s('type.exhSem.v',X28)))) ) | $spl136),
  inference(cnf_transformation,[],[f8507_D])).
fof(f8507_D,plain,(
  ( ! [X28,X26,X27] : (~p(s(bool,happ(s(fun('type.exhSem.v',bool),happ(s(fun('type.conSem.v',fun('type.exhSem.v',bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.conSem.v',fun('type.exhSem.v',bool))),sK58(X28,X27,X26)),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X26))),s('type.conSem.v',X27))),s('type.exhSem.v',X28)))) | s(bool,'T_0') = s(bool,'const.dec_to_exhProof.v_rel_3'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X26),s('type.conSem.v',X27),s('type.exhSem.v',X28)))) ) <=> ~$spl136),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl136])])).
fof(f8508,plain,(
  ( ! [X30,X33,X31,X32] : (~p(s(bool,happ(s(fun('type.exhSem.v',bool),happ(s(fun('type.conSem.v',fun('type.exhSem.v',bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.conSem.v',fun('type.exhSem.v',bool))),sK58(X32,X31,X30)),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X30))),s('type.conSem.v',X31))),s('type.exhSem.v',X32)))) | s(bool,'T_0') = s(bool,X33) | s(bool,'T_0') = s(bool,'const.dec_to_exhProof.v_rel_3'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X30),s('type.conSem.v',X31),s('type.exhSem.v',X32)))) ) | $spl2),
  inference(subsumption_resolution,[],[f8431,f645])).
fof(f8431,plain,(
  ( ! [X30,X33,X31,X32] : (p(s(bool,X33)) | ~p(s(bool,happ(s(fun('type.exhSem.v',bool),happ(s(fun('type.conSem.v',fun('type.exhSem.v',bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.conSem.v',fun('type.exhSem.v',bool))),sK58(X32,X31,X30)),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X30))),s('type.conSem.v',X31))),s('type.exhSem.v',X32)))) | s(bool,'T_0') = s(bool,X33) | s(bool,'T_0') = s(bool,'const.dec_to_exhProof.v_rel_3'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X30),s('type.conSem.v',X31),s('type.exhSem.v',X32)))) ) | $spl2),
  inference(superposition,[],[f252,f758])).
fof(f8506,plain,(
  ( ! [X28,X26,X29,X27] : (~p(s(bool,happ(s(fun('type.exhSem.v',bool),happ(s(fun('type.conSem.v',fun('type.exhSem.v',bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.conSem.v',fun('type.exhSem.v',bool))),sK58(X28,X27,X26)),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X26))),s('type.conSem.v',X27))),s('type.exhSem.v',X28)))) | s(bool,'T_0') = s(bool,'const.dec_to_exhProof.v_rel_3'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X26),s('type.conSem.v',X27),s('type.exhSem.v',X28))) | s(bool,'T_0') = s(bool,X29)) ) | $spl2),
  inference(subsumption_resolution,[],[f8430,f645])).
fof(f8430,plain,(
  ( ! [X28,X26,X29,X27] : (p(s(bool,X29)) | ~p(s(bool,happ(s(fun('type.exhSem.v',bool),happ(s(fun('type.conSem.v',fun('type.exhSem.v',bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.conSem.v',fun('type.exhSem.v',bool))),sK58(X28,X27,X26)),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X26))),s('type.conSem.v',X27))),s('type.exhSem.v',X28)))) | s(bool,'T_0') = s(bool,'const.dec_to_exhProof.v_rel_3'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X26),s('type.conSem.v',X27),s('type.exhSem.v',X28))) | s(bool,'T_0') = s(bool,X29)) ) | $spl2),
  inference(superposition,[],[f252,f758])).
fof(f8343,plain,(
  ( ! [X35,X33,X36,X34] : (~sP16(X33,X34,X36,X35) | s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.exhSem.v'),bool),happ(s(fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool))),X33),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X34))),s('type.list.list'('type.conSem.v'),sK116(X35,X36,X34,X33)))),s('type.list.list'('type.exhSem.v'),sK117(X35,X36,X34,X33))))) ) | $spl134),
  inference(cnf_transformation,[],[f8343_D])).
fof(f8343_D,plain,(
  ( ! [X35,X33,X36,X34] : (~sP16(X33,X34,X36,X35) | s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.exhSem.v'),bool),happ(s(fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool))),X33),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X34))),s('type.list.list'('type.conSem.v'),sK116(X35,X36,X34,X33)))),s('type.list.list'('type.exhSem.v'),sK117(X35,X36,X34,X33))))) ) <=> ~$spl134),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl134])])).
fof(f8344,plain,(
  ( ! [X39,X41,X38,X42,X40] : (~sP16(X38,X39,X41,X40) | s(bool,'T_0') = s(bool,X42) | s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.exhSem.v'),bool),happ(s(fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool))),X38),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X39))),s('type.list.list'('type.conSem.v'),sK116(X40,X41,X39,X38)))),s('type.list.list'('type.exhSem.v'),sK117(X40,X41,X39,X38))))) ) | $spl2),
  inference(subsumption_resolution,[],[f8332,f645])).
fof(f8332,plain,(
  ( ! [X39,X41,X38,X42,X40] : (p(s(bool,X42)) | ~sP16(X38,X39,X41,X40) | s(bool,'T_0') = s(bool,X42) | s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.exhSem.v'),bool),happ(s(fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool))),X38),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X39))),s('type.list.list'('type.conSem.v'),sK116(X40,X41,X39,X38)))),s('type.list.list'('type.exhSem.v'),sK117(X40,X41,X39,X38))))) ) | $spl2),
  inference(superposition,[],[f347,f758])).
fof(f347,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,happ(s(fun('type.list.list'('type.exhSem.v'),bool),happ(s(fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool))),X0),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X1))),s('type.list.list'('type.conSem.v'),sK116(X3,X2,X1,X0)))),s('type.list.list'('type.exhSem.v'),sK117(X3,X2,X1,X0))))) | ~sP16(X0,X1,X2,X3)) )),
  inference(cnf_transformation,[],[f153])).
fof(f153,plain,(
  ! [X0,X1,X2,X3] : ((~sP16(X0,X1,X2,X3) | (s('type.conSem.v',X3) = s('type.conSem.v','const.conSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')),sK115(X3,X2,X1,X0)),s('type.list.list'('type.conSem.v'),sK116(X3,X2,X1,X0)))) & s('type.exhSem.v',X2) = s('type.exhSem.v','const.exhSem.Conv_2'(s('type.num.num','const.dec_to_exhProof.get_tag_1'(s('type.option.option'('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')),sK115(X3,X2,X1,X0)))),s('type.list.list'('type.exhSem.v'),sK117(X3,X2,X1,X0)))) & p(s(bool,happ(s(fun('type.list.list'('type.exhSem.v'),bool),happ(s(fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool))),X0),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X1))),s('type.list.list'('type.conSem.v'),sK116(X3,X2,X1,X0)))),s('type.list.list'('type.exhSem.v'),sK117(X3,X2,X1,X0))))))) & (! [X4,X5,X6] : (s('type.conSem.v',X3) != s('type.conSem.v','const.conSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')),X4),s('type.list.list'('type.conSem.v'),X5))) | s('type.exhSem.v',X2) != s('type.exhSem.v','const.exhSem.Conv_2'(s('type.num.num','const.dec_to_exhProof.get_tag_1'(s('type.option.option'('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')),X4))),s('type.list.list'('type.exhSem.v'),X6))) | ~p(s(bool,happ(s(fun('type.list.list'('type.exhSem.v'),bool),happ(s(fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool))),X0),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X1))),s('type.list.list'('type.conSem.v'),X5))),s('type.list.list'('type.exhSem.v'),X6))))) | sP16(X0,X1,X2,X3)))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK115,sK116,sK117])],[f152])).
fof(f152,plain,(
  ! [X0,X1,X2,X3] : ((~sP16(X0,X1,X2,X3) | ? [X7,X8,X9] : (s('type.conSem.v',X3) = s('type.conSem.v','const.conSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')),X7),s('type.list.list'('type.conSem.v'),X8))) & s('type.exhSem.v',X2) = s('type.exhSem.v','const.exhSem.Conv_2'(s('type.num.num','const.dec_to_exhProof.get_tag_1'(s('type.option.option'('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')),X7))),s('type.list.list'('type.exhSem.v'),X9))) & p(s(bool,happ(s(fun('type.list.list'('type.exhSem.v'),bool),happ(s(fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool))),X0),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X1))),s('type.list.list'('type.conSem.v'),X8))),s('type.list.list'('type.exhSem.v'),X9)))))) & (! [X4,X5,X6] : (s('type.conSem.v',X3) != s('type.conSem.v','const.conSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')),X4),s('type.list.list'('type.conSem.v'),X5))) | s('type.exhSem.v',X2) != s('type.exhSem.v','const.exhSem.Conv_2'(s('type.num.num','const.dec_to_exhProof.get_tag_1'(s('type.option.option'('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')),X4))),s('type.list.list'('type.exhSem.v'),X6))) | ~p(s(bool,happ(s(fun('type.list.list'('type.exhSem.v'),bool),happ(s(fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool))),X0),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X1))),s('type.list.list'('type.conSem.v'),X5))),s('type.list.list'('type.exhSem.v'),X6))))) | sP16(X0,X1,X2,X3)))),
  inference(rectify,[],[f151])).
fof(f151,plain,(
  ! [X4,X21,X23,X22] : ((~sP16(X4,X21,X23,X22) | ? [X37,X38,X39] : (s('type.conSem.v',X22) = s('type.conSem.v','const.conSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')),X37),s('type.list.list'('type.conSem.v'),X38))) & s('type.exhSem.v',X23) = s('type.exhSem.v','const.exhSem.Conv_2'(s('type.num.num','const.dec_to_exhProof.get_tag_1'(s('type.option.option'('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')),X37))),s('type.list.list'('type.exhSem.v'),X39))) & p(s(bool,happ(s(fun('type.list.list'('type.exhSem.v'),bool),happ(s(fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool))),X4),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X21))),s('type.list.list'('type.conSem.v'),X38))),s('type.list.list'('type.exhSem.v'),X39)))))) & (! [X37,X38,X39] : (s('type.conSem.v',X22) != s('type.conSem.v','const.conSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')),X37),s('type.list.list'('type.conSem.v'),X38))) | s('type.exhSem.v',X23) != s('type.exhSem.v','const.exhSem.Conv_2'(s('type.num.num','const.dec_to_exhProof.get_tag_1'(s('type.option.option'('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')),X37))),s('type.list.list'('type.exhSem.v'),X39))) | ~p(s(bool,happ(s(fun('type.list.list'('type.exhSem.v'),bool),happ(s(fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool))),X4),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X21))),s('type.list.list'('type.conSem.v'),X38))),s('type.list.list'('type.exhSem.v'),X39))))) | sP16(X4,X21,X23,X22)))),
  inference(nnf_transformation,[],[f65])).
fof(f65,plain,(
  ! [X4,X21,X23,X22] : (sP16(X4,X21,X23,X22) <=> ? [X37,X38,X39] : (s('type.conSem.v',X22) = s('type.conSem.v','const.conSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')),X37),s('type.list.list'('type.conSem.v'),X38))) & s('type.exhSem.v',X23) = s('type.exhSem.v','const.exhSem.Conv_2'(s('type.num.num','const.dec_to_exhProof.get_tag_1'(s('type.option.option'('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')),X37))),s('type.list.list'('type.exhSem.v'),X39))) & p(s(bool,happ(s(fun('type.list.list'('type.exhSem.v'),bool),happ(s(fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool))),X4),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X21))),s('type.list.list'('type.conSem.v'),X38))),s('type.list.list'('type.exhSem.v'),X39))))))),
  introduced(predicate_definition_introduction,[new_symbols(naming,[sP16])])).
fof(f8342,plain,(
  ( ! [X37,X35,X33,X36,X34] : (~sP16(X33,X34,X36,X35) | s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.exhSem.v'),bool),happ(s(fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool))),X33),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X34))),s('type.list.list'('type.conSem.v'),sK116(X35,X36,X34,X33)))),s('type.list.list'('type.exhSem.v'),sK117(X35,X36,X34,X33)))) | s(bool,'T_0') = s(bool,X37)) ) | $spl2),
  inference(subsumption_resolution,[],[f8331,f645])).
fof(f8331,plain,(
  ( ! [X37,X35,X33,X36,X34] : (p(s(bool,X37)) | ~sP16(X33,X34,X36,X35) | s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.exhSem.v'),bool),happ(s(fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool))),X33),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X34))),s('type.list.list'('type.conSem.v'),sK116(X35,X36,X34,X33)))),s('type.list.list'('type.exhSem.v'),sK117(X35,X36,X34,X33)))) | s(bool,'T_0') = s(bool,X37)) ) | $spl2),
  inference(superposition,[],[f347,f758])).
fof(f8297,plain,(
  ( ! [X88,X85,X83,X89,X86,X84] : (s(bool,'T_0') = s(bool,X88) | s(bool,X88) = s(bool,X89) | s(bool,X89) = s(bool,sK137(X83,X84,X85,X85,X86))) ) | $spl132),
  inference(cnf_transformation,[],[f8297_D])).
fof(f8297_D,plain,(
  ( ! [X88,X85,X83,X89,X86,X84] : (s(bool,'T_0') = s(bool,X88) | s(bool,X88) = s(bool,X89) | s(bool,X89) = s(bool,sK137(X83,X84,X85,X85,X86))) ) <=> ~$spl132),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl132])])).
fof(f8296,plain,(
  ( ! [X88,X87,X85,X83,X89,X86,X84] : (s(bool,'T_0') = s(bool,X88) | s(bool,X89) = s(bool,sK137(X83,X84,X85,X85,X86)) | s(bool,X88) = s(bool,X89) | s(bool,'F_0') = s(bool,X87)) ) | $spl2),
  inference(subsumption_resolution,[],[f8278,f1538])).
fof(f8278,plain,(
  ( ! [X88,X87,X85,X83,X89,X86,X84] : (~p(s(bool,X87)) | s(bool,'T_0') = s(bool,X88) | s(bool,X89) = s(bool,sK137(X83,X84,X85,X85,X86)) | s(bool,X88) = s(bool,X89) | s(bool,'F_0') = s(bool,X87)) ) | $spl2),
  inference(superposition,[],[f762,f917])).
fof(f762,plain,(
  ( ! [X10,X11,X9] : (~p(s(bool,X11)) | s(bool,'T_0') = s(bool,X9) | s(bool,X10) = s(bool,X11) | s(bool,X9) = s(bool,X10)) ) | $spl2),
  inference(resolution,[],[f649,f176])).
fof(f7137,plain,(
  ( ! [X28,X26,X29] : (s(bool,'F_0') = s(bool,X28) | s(bool,'T_0') = s(bool,X26) | s(bool,X28) = s(bool,X29) | s(bool,X26) = s(bool,X29)) ) | $spl98),
  inference(cnf_transformation,[],[f7137_D])).
fof(f7137_D,plain,(
  ( ! [X28,X26,X29] : (s(bool,'F_0') = s(bool,X28) | s(bool,'T_0') = s(bool,X26) | s(bool,X28) = s(bool,X29) | s(bool,X26) = s(bool,X29)) ) <=> ~$spl98),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl98])])).
fof(f8293,plain,(
  ( ! [X54,X56,X55,X53] : (s(bool,'T_0') = s(bool,X55) | s(bool,X53) = s(bool,X56) | s(bool,X55) = s(bool,X56) | s(bool,'F_0') = s(bool,X54) | s(bool,'F_0') = s(bool,X53)) ) | $spl2),
  inference(subsumption_resolution,[],[f8270,f1538])).
fof(f8270,plain,(
  ( ! [X54,X56,X55,X53] : (~p(s(bool,X54)) | s(bool,'T_0') = s(bool,X55) | s(bool,X53) = s(bool,X56) | s(bool,X55) = s(bool,X56) | s(bool,'F_0') = s(bool,X54) | s(bool,'F_0') = s(bool,X53)) ) | $spl2),
  inference(superposition,[],[f762,f2345])).
fof(f8292,plain,(
  ( ! [X52,X50,X51,X49] : (s(bool,'T_0') = s(bool,X51) | s(bool,X49) = s(bool,X52) | s(bool,X51) = s(bool,X52) | s(bool,'F_0') = s(bool,X49) | s(bool,'F_0') = s(bool,X50)) ) | $spl2),
  inference(subsumption_resolution,[],[f8269,f1538])).
fof(f8269,plain,(
  ( ! [X52,X50,X51,X49] : (~p(s(bool,X50)) | s(bool,'T_0') = s(bool,X51) | s(bool,X49) = s(bool,X52) | s(bool,X51) = s(bool,X52) | s(bool,'F_0') = s(bool,X49) | s(bool,'F_0') = s(bool,X50)) ) | $spl2),
  inference(superposition,[],[f762,f2345])).
fof(f8197,plain,(
  ( ! [X35,X33,X36,X34] : (~sP17(X33,X34,X36,X35) | s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.exhSem.v'),bool),happ(s(fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool))),X33),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X34))),s('type.list.list'('type.conSem.v'),sK113(X35,X36,X34,X33)))),s('type.list.list'('type.exhSem.v'),sK114(X35,X36,X34,X33))))) ) | $spl130),
  inference(cnf_transformation,[],[f8197_D])).
fof(f8197_D,plain,(
  ( ! [X35,X33,X36,X34] : (~sP17(X33,X34,X36,X35) | s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.exhSem.v'),bool),happ(s(fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool))),X33),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X34))),s('type.list.list'('type.conSem.v'),sK113(X35,X36,X34,X33)))),s('type.list.list'('type.exhSem.v'),sK114(X35,X36,X34,X33))))) ) <=> ~$spl130),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl130])])).
fof(f8198,plain,(
  ( ! [X39,X41,X38,X42,X40] : (~sP17(X38,X39,X41,X40) | s(bool,'T_0') = s(bool,X42) | s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.exhSem.v'),bool),happ(s(fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool))),X38),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X39))),s('type.list.list'('type.conSem.v'),sK113(X40,X41,X39,X38)))),s('type.list.list'('type.exhSem.v'),sK114(X40,X41,X39,X38))))) ) | $spl2),
  inference(subsumption_resolution,[],[f8186,f645])).
fof(f8186,plain,(
  ( ! [X39,X41,X38,X42,X40] : (p(s(bool,X42)) | ~sP17(X38,X39,X41,X40) | s(bool,'T_0') = s(bool,X42) | s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.exhSem.v'),bool),happ(s(fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool))),X38),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X39))),s('type.list.list'('type.conSem.v'),sK113(X40,X41,X39,X38)))),s('type.list.list'('type.exhSem.v'),sK114(X40,X41,X39,X38))))) ) | $spl2),
  inference(superposition,[],[f343,f758])).
fof(f343,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,happ(s(fun('type.list.list'('type.exhSem.v'),bool),happ(s(fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool))),X0),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X1))),s('type.list.list'('type.conSem.v'),sK113(X3,X2,X1,X0)))),s('type.list.list'('type.exhSem.v'),sK114(X3,X2,X1,X0))))) | ~sP17(X0,X1,X2,X3)) )),
  inference(cnf_transformation,[],[f150])).
fof(f150,plain,(
  ! [X0,X1,X2,X3] : ((~sP17(X0,X1,X2,X3) | (s('type.conSem.v',X3) = s('type.conSem.v','const.conSem.Vectorv_1'(s('type.list.list'('type.conSem.v'),sK113(X3,X2,X1,X0)))) & s('type.exhSem.v',X2) = s('type.exhSem.v','const.exhSem.Vectorv_1'(s('type.list.list'('type.exhSem.v'),sK114(X3,X2,X1,X0)))) & p(s(bool,happ(s(fun('type.list.list'('type.exhSem.v'),bool),happ(s(fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool))),X0),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X1))),s('type.list.list'('type.conSem.v'),sK113(X3,X2,X1,X0)))),s('type.list.list'('type.exhSem.v'),sK114(X3,X2,X1,X0))))))) & (! [X4,X5] : (s('type.conSem.v',X3) != s('type.conSem.v','const.conSem.Vectorv_1'(s('type.list.list'('type.conSem.v'),X4))) | s('type.exhSem.v',X2) != s('type.exhSem.v','const.exhSem.Vectorv_1'(s('type.list.list'('type.exhSem.v'),X5))) | ~p(s(bool,happ(s(fun('type.list.list'('type.exhSem.v'),bool),happ(s(fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool))),X0),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X1))),s('type.list.list'('type.conSem.v'),X4))),s('type.list.list'('type.exhSem.v'),X5))))) | sP17(X0,X1,X2,X3)))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK113,sK114])],[f149])).
fof(f149,plain,(
  ! [X0,X1,X2,X3] : ((~sP17(X0,X1,X2,X3) | ? [X6,X7] : (s('type.conSem.v',X3) = s('type.conSem.v','const.conSem.Vectorv_1'(s('type.list.list'('type.conSem.v'),X6))) & s('type.exhSem.v',X2) = s('type.exhSem.v','const.exhSem.Vectorv_1'(s('type.list.list'('type.exhSem.v'),X7))) & p(s(bool,happ(s(fun('type.list.list'('type.exhSem.v'),bool),happ(s(fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool))),X0),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X1))),s('type.list.list'('type.conSem.v'),X6))),s('type.list.list'('type.exhSem.v'),X7)))))) & (! [X4,X5] : (s('type.conSem.v',X3) != s('type.conSem.v','const.conSem.Vectorv_1'(s('type.list.list'('type.conSem.v'),X4))) | s('type.exhSem.v',X2) != s('type.exhSem.v','const.exhSem.Vectorv_1'(s('type.list.list'('type.exhSem.v'),X5))) | ~p(s(bool,happ(s(fun('type.list.list'('type.exhSem.v'),bool),happ(s(fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool))),X0),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X1))),s('type.list.list'('type.conSem.v'),X4))),s('type.list.list'('type.exhSem.v'),X5))))) | sP17(X0,X1,X2,X3)))),
  inference(rectify,[],[f148])).
fof(f148,plain,(
  ! [X4,X21,X23,X22] : ((~sP17(X4,X21,X23,X22) | ? [X24,X25] : (s('type.conSem.v',X22) = s('type.conSem.v','const.conSem.Vectorv_1'(s('type.list.list'('type.conSem.v'),X24))) & s('type.exhSem.v',X23) = s('type.exhSem.v','const.exhSem.Vectorv_1'(s('type.list.list'('type.exhSem.v'),X25))) & p(s(bool,happ(s(fun('type.list.list'('type.exhSem.v'),bool),happ(s(fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool))),X4),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X21))),s('type.list.list'('type.conSem.v'),X24))),s('type.list.list'('type.exhSem.v'),X25)))))) & (! [X24,X25] : (s('type.conSem.v',X22) != s('type.conSem.v','const.conSem.Vectorv_1'(s('type.list.list'('type.conSem.v'),X24))) | s('type.exhSem.v',X23) != s('type.exhSem.v','const.exhSem.Vectorv_1'(s('type.list.list'('type.exhSem.v'),X25))) | ~p(s(bool,happ(s(fun('type.list.list'('type.exhSem.v'),bool),happ(s(fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool))),X4),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X21))),s('type.list.list'('type.conSem.v'),X24))),s('type.list.list'('type.exhSem.v'),X25))))) | sP17(X4,X21,X23,X22)))),
  inference(nnf_transformation,[],[f66])).
fof(f66,plain,(
  ! [X4,X21,X23,X22] : (sP17(X4,X21,X23,X22) <=> ? [X24,X25] : (s('type.conSem.v',X22) = s('type.conSem.v','const.conSem.Vectorv_1'(s('type.list.list'('type.conSem.v'),X24))) & s('type.exhSem.v',X23) = s('type.exhSem.v','const.exhSem.Vectorv_1'(s('type.list.list'('type.exhSem.v'),X25))) & p(s(bool,happ(s(fun('type.list.list'('type.exhSem.v'),bool),happ(s(fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool))),X4),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X21))),s('type.list.list'('type.conSem.v'),X24))),s('type.list.list'('type.exhSem.v'),X25))))))),
  introduced(predicate_definition_introduction,[new_symbols(naming,[sP17])])).
fof(f8196,plain,(
  ( ! [X37,X35,X33,X36,X34] : (~sP17(X33,X34,X36,X35) | s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.exhSem.v'),bool),happ(s(fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool))),X33),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X34))),s('type.list.list'('type.conSem.v'),sK113(X35,X36,X34,X33)))),s('type.list.list'('type.exhSem.v'),sK114(X35,X36,X34,X33)))) | s(bool,'T_0') = s(bool,X37)) ) | $spl2),
  inference(subsumption_resolution,[],[f8185,f645])).
fof(f8185,plain,(
  ( ! [X37,X35,X33,X36,X34] : (p(s(bool,X37)) | ~sP17(X33,X34,X36,X35) | s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.exhSem.v'),bool),happ(s(fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool))),X33),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X34))),s('type.list.list'('type.conSem.v'),sK113(X35,X36,X34,X33)))),s('type.list.list'('type.exhSem.v'),sK114(X35,X36,X34,X33)))) | s(bool,'T_0') = s(bool,X37)) ) | $spl2),
  inference(superposition,[],[f343,f758])).
fof(f8123,plain,(
  ( ! [X35,X33,X36,X34] : (~sP9(X33,X34,X36,X35) | s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.exhSem.v'),bool),happ(s(fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool))),X33),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X34))),s('type.list.list'('type.conSem.v'),sK78(X35,X36,X34,X33)))),s('type.list.list'('type.exhSem.v'),sK79(X35,X36,X34,X33))))) ) | $spl128),
  inference(cnf_transformation,[],[f8123_D])).
fof(f8123_D,plain,(
  ( ! [X35,X33,X36,X34] : (~sP9(X33,X34,X36,X35) | s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.exhSem.v'),bool),happ(s(fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool))),X33),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X34))),s('type.list.list'('type.conSem.v'),sK78(X35,X36,X34,X33)))),s('type.list.list'('type.exhSem.v'),sK79(X35,X36,X34,X33))))) ) <=> ~$spl128),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl128])])).
fof(f8124,plain,(
  ( ! [X39,X41,X38,X42,X40] : (~sP9(X38,X39,X41,X40) | s(bool,'T_0') = s(bool,X42) | s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.exhSem.v'),bool),happ(s(fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool))),X38),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X39))),s('type.list.list'('type.conSem.v'),sK78(X40,X41,X39,X38)))),s('type.list.list'('type.exhSem.v'),sK79(X40,X41,X39,X38))))) ) | $spl2),
  inference(subsumption_resolution,[],[f8112,f645])).
fof(f8112,plain,(
  ( ! [X39,X41,X38,X42,X40] : (p(s(bool,X42)) | ~sP9(X38,X39,X41,X40) | s(bool,'T_0') = s(bool,X42) | s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.exhSem.v'),bool),happ(s(fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool))),X38),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X39))),s('type.list.list'('type.conSem.v'),sK78(X40,X41,X39,X38)))),s('type.list.list'('type.exhSem.v'),sK79(X40,X41,X39,X38))))) ) | $spl2),
  inference(superposition,[],[f290,f758])).
fof(f290,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,happ(s(fun('type.list.list'('type.exhSem.v'),bool),happ(s(fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool))),X0),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X1))),s('type.list.list'('type.conSem.v'),sK78(X3,X2,X1,X0)))),s('type.list.list'('type.exhSem.v'),sK79(X3,X2,X1,X0))))) | ~sP9(X0,X1,X2,X3)) )),
  inference(cnf_transformation,[],[f127])).
fof(f127,plain,(
  ! [X0,X1,X2,X3] : ((~sP9(X0,X1,X2,X3) | (s('type.conSem.v',X3) = s('type.conSem.v','const.conSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')),sK77(X3,X2,X1,X0)),s('type.list.list'('type.conSem.v'),sK78(X3,X2,X1,X0)))) & s('type.exhSem.v',X2) = s('type.exhSem.v','const.exhSem.Conv_2'(s('type.num.num','const.dec_to_exhProof.get_tag_1'(s('type.option.option'('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')),sK77(X3,X2,X1,X0)))),s('type.list.list'('type.exhSem.v'),sK79(X3,X2,X1,X0)))) & p(s(bool,happ(s(fun('type.list.list'('type.exhSem.v'),bool),happ(s(fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool))),X0),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X1))),s('type.list.list'('type.conSem.v'),sK78(X3,X2,X1,X0)))),s('type.list.list'('type.exhSem.v'),sK79(X3,X2,X1,X0))))))) & (! [X4,X5,X6] : (s('type.conSem.v',X3) != s('type.conSem.v','const.conSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')),X4),s('type.list.list'('type.conSem.v'),X5))) | s('type.exhSem.v',X2) != s('type.exhSem.v','const.exhSem.Conv_2'(s('type.num.num','const.dec_to_exhProof.get_tag_1'(s('type.option.option'('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')),X4))),s('type.list.list'('type.exhSem.v'),X6))) | ~p(s(bool,happ(s(fun('type.list.list'('type.exhSem.v'),bool),happ(s(fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool))),X0),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X1))),s('type.list.list'('type.conSem.v'),X5))),s('type.list.list'('type.exhSem.v'),X6))))) | sP9(X0,X1,X2,X3)))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK77,sK78,sK79])],[f126])).
fof(f126,plain,(
  ! [X0,X1,X2,X3] : ((~sP9(X0,X1,X2,X3) | ? [X7,X8,X9] : (s('type.conSem.v',X3) = s('type.conSem.v','const.conSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')),X7),s('type.list.list'('type.conSem.v'),X8))) & s('type.exhSem.v',X2) = s('type.exhSem.v','const.exhSem.Conv_2'(s('type.num.num','const.dec_to_exhProof.get_tag_1'(s('type.option.option'('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')),X7))),s('type.list.list'('type.exhSem.v'),X9))) & p(s(bool,happ(s(fun('type.list.list'('type.exhSem.v'),bool),happ(s(fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool))),X0),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X1))),s('type.list.list'('type.conSem.v'),X8))),s('type.list.list'('type.exhSem.v'),X9)))))) & (! [X4,X5,X6] : (s('type.conSem.v',X3) != s('type.conSem.v','const.conSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')),X4),s('type.list.list'('type.conSem.v'),X5))) | s('type.exhSem.v',X2) != s('type.exhSem.v','const.exhSem.Conv_2'(s('type.num.num','const.dec_to_exhProof.get_tag_1'(s('type.option.option'('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')),X4))),s('type.list.list'('type.exhSem.v'),X6))) | ~p(s(bool,happ(s(fun('type.list.list'('type.exhSem.v'),bool),happ(s(fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool))),X0),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X1))),s('type.list.list'('type.conSem.v'),X5))),s('type.list.list'('type.exhSem.v'),X6))))) | sP9(X0,X1,X2,X3)))),
  inference(rectify,[],[f125])).
fof(f125,plain,(
  ! [X4,X21,X23,X22] : ((~sP9(X4,X21,X23,X22) | ? [X37,X38,X39] : (s('type.conSem.v',X22) = s('type.conSem.v','const.conSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')),X37),s('type.list.list'('type.conSem.v'),X38))) & s('type.exhSem.v',X23) = s('type.exhSem.v','const.exhSem.Conv_2'(s('type.num.num','const.dec_to_exhProof.get_tag_1'(s('type.option.option'('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')),X37))),s('type.list.list'('type.exhSem.v'),X39))) & p(s(bool,happ(s(fun('type.list.list'('type.exhSem.v'),bool),happ(s(fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool))),X4),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X21))),s('type.list.list'('type.conSem.v'),X38))),s('type.list.list'('type.exhSem.v'),X39)))))) & (! [X37,X38,X39] : (s('type.conSem.v',X22) != s('type.conSem.v','const.conSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')),X37),s('type.list.list'('type.conSem.v'),X38))) | s('type.exhSem.v',X23) != s('type.exhSem.v','const.exhSem.Conv_2'(s('type.num.num','const.dec_to_exhProof.get_tag_1'(s('type.option.option'('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')),X37))),s('type.list.list'('type.exhSem.v'),X39))) | ~p(s(bool,happ(s(fun('type.list.list'('type.exhSem.v'),bool),happ(s(fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool))),X4),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X21))),s('type.list.list'('type.conSem.v'),X38))),s('type.list.list'('type.exhSem.v'),X39))))) | sP9(X4,X21,X23,X22)))),
  inference(nnf_transformation,[],[f57])).
fof(f57,plain,(
  ! [X4,X21,X23,X22] : (sP9(X4,X21,X23,X22) <=> ? [X37,X38,X39] : (s('type.conSem.v',X22) = s('type.conSem.v','const.conSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')),X37),s('type.list.list'('type.conSem.v'),X38))) & s('type.exhSem.v',X23) = s('type.exhSem.v','const.exhSem.Conv_2'(s('type.num.num','const.dec_to_exhProof.get_tag_1'(s('type.option.option'('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')),X37))),s('type.list.list'('type.exhSem.v'),X39))) & p(s(bool,happ(s(fun('type.list.list'('type.exhSem.v'),bool),happ(s(fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool))),X4),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X21))),s('type.list.list'('type.conSem.v'),X38))),s('type.list.list'('type.exhSem.v'),X39))))))),
  introduced(predicate_definition_introduction,[new_symbols(naming,[sP9])])).
fof(f8122,plain,(
  ( ! [X37,X35,X33,X36,X34] : (~sP9(X33,X34,X36,X35) | s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.exhSem.v'),bool),happ(s(fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool))),X33),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X34))),s('type.list.list'('type.conSem.v'),sK78(X35,X36,X34,X33)))),s('type.list.list'('type.exhSem.v'),sK79(X35,X36,X34,X33)))) | s(bool,'T_0') = s(bool,X37)) ) | $spl2),
  inference(subsumption_resolution,[],[f8111,f645])).
fof(f8111,plain,(
  ( ! [X37,X35,X33,X36,X34] : (p(s(bool,X37)) | ~sP9(X33,X34,X36,X35) | s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.exhSem.v'),bool),happ(s(fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool))),X33),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X34))),s('type.list.list'('type.conSem.v'),sK78(X35,X36,X34,X33)))),s('type.list.list'('type.exhSem.v'),sK79(X35,X36,X34,X33)))) | s(bool,'T_0') = s(bool,X37)) ) | $spl2),
  inference(superposition,[],[f290,f758])).
fof(f8077,plain,(
  ( ! [X35,X33,X36,X34] : (~sP10(X33,X34,X36,X35) | s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.exhSem.v'),bool),happ(s(fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool))),X33),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X34))),s('type.list.list'('type.conSem.v'),sK75(X35,X36,X34,X33)))),s('type.list.list'('type.exhSem.v'),sK76(X35,X36,X34,X33))))) ) | $spl126),
  inference(cnf_transformation,[],[f8077_D])).
fof(f8077_D,plain,(
  ( ! [X35,X33,X36,X34] : (~sP10(X33,X34,X36,X35) | s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.exhSem.v'),bool),happ(s(fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool))),X33),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X34))),s('type.list.list'('type.conSem.v'),sK75(X35,X36,X34,X33)))),s('type.list.list'('type.exhSem.v'),sK76(X35,X36,X34,X33))))) ) <=> ~$spl126),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl126])])).
fof(f8078,plain,(
  ( ! [X39,X41,X38,X42,X40] : (~sP10(X38,X39,X41,X40) | s(bool,'T_0') = s(bool,X42) | s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.exhSem.v'),bool),happ(s(fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool))),X38),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X39))),s('type.list.list'('type.conSem.v'),sK75(X40,X41,X39,X38)))),s('type.list.list'('type.exhSem.v'),sK76(X40,X41,X39,X38))))) ) | $spl2),
  inference(subsumption_resolution,[],[f8066,f645])).
fof(f8066,plain,(
  ( ! [X39,X41,X38,X42,X40] : (p(s(bool,X42)) | ~sP10(X38,X39,X41,X40) | s(bool,'T_0') = s(bool,X42) | s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.exhSem.v'),bool),happ(s(fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool))),X38),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X39))),s('type.list.list'('type.conSem.v'),sK75(X40,X41,X39,X38)))),s('type.list.list'('type.exhSem.v'),sK76(X40,X41,X39,X38))))) ) | $spl2),
  inference(superposition,[],[f286,f758])).
fof(f286,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,happ(s(fun('type.list.list'('type.exhSem.v'),bool),happ(s(fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool))),X0),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X1))),s('type.list.list'('type.conSem.v'),sK75(X3,X2,X1,X0)))),s('type.list.list'('type.exhSem.v'),sK76(X3,X2,X1,X0))))) | ~sP10(X0,X1,X2,X3)) )),
  inference(cnf_transformation,[],[f124])).
fof(f124,plain,(
  ! [X0,X1,X2,X3] : ((~sP10(X0,X1,X2,X3) | (s('type.conSem.v',X3) = s('type.conSem.v','const.conSem.Vectorv_1'(s('type.list.list'('type.conSem.v'),sK75(X3,X2,X1,X0)))) & s('type.exhSem.v',X2) = s('type.exhSem.v','const.exhSem.Vectorv_1'(s('type.list.list'('type.exhSem.v'),sK76(X3,X2,X1,X0)))) & p(s(bool,happ(s(fun('type.list.list'('type.exhSem.v'),bool),happ(s(fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool))),X0),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X1))),s('type.list.list'('type.conSem.v'),sK75(X3,X2,X1,X0)))),s('type.list.list'('type.exhSem.v'),sK76(X3,X2,X1,X0))))))) & (! [X4,X5] : (s('type.conSem.v',X3) != s('type.conSem.v','const.conSem.Vectorv_1'(s('type.list.list'('type.conSem.v'),X4))) | s('type.exhSem.v',X2) != s('type.exhSem.v','const.exhSem.Vectorv_1'(s('type.list.list'('type.exhSem.v'),X5))) | ~p(s(bool,happ(s(fun('type.list.list'('type.exhSem.v'),bool),happ(s(fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool))),X0),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X1))),s('type.list.list'('type.conSem.v'),X4))),s('type.list.list'('type.exhSem.v'),X5))))) | sP10(X0,X1,X2,X3)))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK75,sK76])],[f123])).
fof(f123,plain,(
  ! [X0,X1,X2,X3] : ((~sP10(X0,X1,X2,X3) | ? [X6,X7] : (s('type.conSem.v',X3) = s('type.conSem.v','const.conSem.Vectorv_1'(s('type.list.list'('type.conSem.v'),X6))) & s('type.exhSem.v',X2) = s('type.exhSem.v','const.exhSem.Vectorv_1'(s('type.list.list'('type.exhSem.v'),X7))) & p(s(bool,happ(s(fun('type.list.list'('type.exhSem.v'),bool),happ(s(fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool))),X0),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X1))),s('type.list.list'('type.conSem.v'),X6))),s('type.list.list'('type.exhSem.v'),X7)))))) & (! [X4,X5] : (s('type.conSem.v',X3) != s('type.conSem.v','const.conSem.Vectorv_1'(s('type.list.list'('type.conSem.v'),X4))) | s('type.exhSem.v',X2) != s('type.exhSem.v','const.exhSem.Vectorv_1'(s('type.list.list'('type.exhSem.v'),X5))) | ~p(s(bool,happ(s(fun('type.list.list'('type.exhSem.v'),bool),happ(s(fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool))),X0),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X1))),s('type.list.list'('type.conSem.v'),X4))),s('type.list.list'('type.exhSem.v'),X5))))) | sP10(X0,X1,X2,X3)))),
  inference(rectify,[],[f122])).
fof(f122,plain,(
  ! [X4,X21,X23,X22] : ((~sP10(X4,X21,X23,X22) | ? [X24,X25] : (s('type.conSem.v',X22) = s('type.conSem.v','const.conSem.Vectorv_1'(s('type.list.list'('type.conSem.v'),X24))) & s('type.exhSem.v',X23) = s('type.exhSem.v','const.exhSem.Vectorv_1'(s('type.list.list'('type.exhSem.v'),X25))) & p(s(bool,happ(s(fun('type.list.list'('type.exhSem.v'),bool),happ(s(fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool))),X4),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X21))),s('type.list.list'('type.conSem.v'),X24))),s('type.list.list'('type.exhSem.v'),X25)))))) & (! [X24,X25] : (s('type.conSem.v',X22) != s('type.conSem.v','const.conSem.Vectorv_1'(s('type.list.list'('type.conSem.v'),X24))) | s('type.exhSem.v',X23) != s('type.exhSem.v','const.exhSem.Vectorv_1'(s('type.list.list'('type.exhSem.v'),X25))) | ~p(s(bool,happ(s(fun('type.list.list'('type.exhSem.v'),bool),happ(s(fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool))),X4),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X21))),s('type.list.list'('type.conSem.v'),X24))),s('type.list.list'('type.exhSem.v'),X25))))) | sP10(X4,X21,X23,X22)))),
  inference(nnf_transformation,[],[f58])).
fof(f58,plain,(
  ! [X4,X21,X23,X22] : (sP10(X4,X21,X23,X22) <=> ? [X24,X25] : (s('type.conSem.v',X22) = s('type.conSem.v','const.conSem.Vectorv_1'(s('type.list.list'('type.conSem.v'),X24))) & s('type.exhSem.v',X23) = s('type.exhSem.v','const.exhSem.Vectorv_1'(s('type.list.list'('type.exhSem.v'),X25))) & p(s(bool,happ(s(fun('type.list.list'('type.exhSem.v'),bool),happ(s(fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool))),X4),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X21))),s('type.list.list'('type.conSem.v'),X24))),s('type.list.list'('type.exhSem.v'),X25))))))),
  introduced(predicate_definition_introduction,[new_symbols(naming,[sP10])])).
fof(f8076,plain,(
  ( ! [X37,X35,X33,X36,X34] : (~sP10(X33,X34,X36,X35) | s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.exhSem.v'),bool),happ(s(fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool))),X33),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X34))),s('type.list.list'('type.conSem.v'),sK75(X35,X36,X34,X33)))),s('type.list.list'('type.exhSem.v'),sK76(X35,X36,X34,X33)))) | s(bool,'T_0') = s(bool,X37)) ) | $spl2),
  inference(subsumption_resolution,[],[f8065,f645])).
fof(f8065,plain,(
  ( ! [X37,X35,X33,X36,X34] : (p(s(bool,X37)) | ~sP10(X33,X34,X36,X35) | s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.exhSem.v'),bool),happ(s(fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool))),X33),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X34))),s('type.list.list'('type.conSem.v'),sK75(X35,X36,X34,X33)))),s('type.list.list'('type.exhSem.v'),sK76(X35,X36,X34,X33)))) | s(bool,'T_0') = s(bool,X37)) ) | $spl2),
  inference(superposition,[],[f286,f758])).
fof(f8031,plain,(
  ( ! [X35,X33,X36,X34] : (~sP2(X33,X34,X36,X35) | s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.exhSem.v'),bool),happ(s(fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool))),X33),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X34))),s('type.list.list'('type.conSem.v'),sK40(X35,X36,X34,X33)))),s('type.list.list'('type.exhSem.v'),sK41(X35,X36,X34,X33))))) ) | $spl124),
  inference(cnf_transformation,[],[f8031_D])).
fof(f8031_D,plain,(
  ( ! [X35,X33,X36,X34] : (~sP2(X33,X34,X36,X35) | s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.exhSem.v'),bool),happ(s(fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool))),X33),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X34))),s('type.list.list'('type.conSem.v'),sK40(X35,X36,X34,X33)))),s('type.list.list'('type.exhSem.v'),sK41(X35,X36,X34,X33))))) ) <=> ~$spl124),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl124])])).
fof(f8032,plain,(
  ( ! [X39,X41,X38,X42,X40] : (~sP2(X38,X39,X41,X40) | s(bool,'T_0') = s(bool,X42) | s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.exhSem.v'),bool),happ(s(fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool))),X38),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X39))),s('type.list.list'('type.conSem.v'),sK40(X40,X41,X39,X38)))),s('type.list.list'('type.exhSem.v'),sK41(X40,X41,X39,X38))))) ) | $spl2),
  inference(subsumption_resolution,[],[f8020,f645])).
fof(f8020,plain,(
  ( ! [X39,X41,X38,X42,X40] : (p(s(bool,X42)) | ~sP2(X38,X39,X41,X40) | s(bool,'T_0') = s(bool,X42) | s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.exhSem.v'),bool),happ(s(fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool))),X38),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X39))),s('type.list.list'('type.conSem.v'),sK40(X40,X41,X39,X38)))),s('type.list.list'('type.exhSem.v'),sK41(X40,X41,X39,X38))))) ) | $spl2),
  inference(superposition,[],[f233,f758])).
fof(f233,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,happ(s(fun('type.list.list'('type.exhSem.v'),bool),happ(s(fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool))),X0),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X1))),s('type.list.list'('type.conSem.v'),sK40(X3,X2,X1,X0)))),s('type.list.list'('type.exhSem.v'),sK41(X3,X2,X1,X0))))) | ~sP2(X0,X1,X2,X3)) )),
  inference(cnf_transformation,[],[f101])).
fof(f101,plain,(
  ! [X0,X1,X2,X3] : ((~sP2(X0,X1,X2,X3) | (s('type.conSem.v',X3) = s('type.conSem.v','const.conSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')),sK39(X3,X2,X1,X0)),s('type.list.list'('type.conSem.v'),sK40(X3,X2,X1,X0)))) & s('type.exhSem.v',X2) = s('type.exhSem.v','const.exhSem.Conv_2'(s('type.num.num','const.dec_to_exhProof.get_tag_1'(s('type.option.option'('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')),sK39(X3,X2,X1,X0)))),s('type.list.list'('type.exhSem.v'),sK41(X3,X2,X1,X0)))) & p(s(bool,happ(s(fun('type.list.list'('type.exhSem.v'),bool),happ(s(fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool))),X0),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X1))),s('type.list.list'('type.conSem.v'),sK40(X3,X2,X1,X0)))),s('type.list.list'('type.exhSem.v'),sK41(X3,X2,X1,X0))))))) & (! [X4,X5,X6] : (s('type.conSem.v',X3) != s('type.conSem.v','const.conSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')),X4),s('type.list.list'('type.conSem.v'),X5))) | s('type.exhSem.v',X2) != s('type.exhSem.v','const.exhSem.Conv_2'(s('type.num.num','const.dec_to_exhProof.get_tag_1'(s('type.option.option'('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')),X4))),s('type.list.list'('type.exhSem.v'),X6))) | ~p(s(bool,happ(s(fun('type.list.list'('type.exhSem.v'),bool),happ(s(fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool))),X0),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X1))),s('type.list.list'('type.conSem.v'),X5))),s('type.list.list'('type.exhSem.v'),X6))))) | sP2(X0,X1,X2,X3)))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK39,sK40,sK41])],[f100])).
fof(f100,plain,(
  ! [X0,X1,X2,X3] : ((~sP2(X0,X1,X2,X3) | ? [X7,X8,X9] : (s('type.conSem.v',X3) = s('type.conSem.v','const.conSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')),X7),s('type.list.list'('type.conSem.v'),X8))) & s('type.exhSem.v',X2) = s('type.exhSem.v','const.exhSem.Conv_2'(s('type.num.num','const.dec_to_exhProof.get_tag_1'(s('type.option.option'('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')),X7))),s('type.list.list'('type.exhSem.v'),X9))) & p(s(bool,happ(s(fun('type.list.list'('type.exhSem.v'),bool),happ(s(fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool))),X0),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X1))),s('type.list.list'('type.conSem.v'),X8))),s('type.list.list'('type.exhSem.v'),X9)))))) & (! [X4,X5,X6] : (s('type.conSem.v',X3) != s('type.conSem.v','const.conSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')),X4),s('type.list.list'('type.conSem.v'),X5))) | s('type.exhSem.v',X2) != s('type.exhSem.v','const.exhSem.Conv_2'(s('type.num.num','const.dec_to_exhProof.get_tag_1'(s('type.option.option'('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')),X4))),s('type.list.list'('type.exhSem.v'),X6))) | ~p(s(bool,happ(s(fun('type.list.list'('type.exhSem.v'),bool),happ(s(fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool))),X0),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X1))),s('type.list.list'('type.conSem.v'),X5))),s('type.list.list'('type.exhSem.v'),X6))))) | sP2(X0,X1,X2,X3)))),
  inference(rectify,[],[f99])).
fof(f99,plain,(
  ! [X4,X21,X23,X22] : ((~sP2(X4,X21,X23,X22) | ? [X37,X38,X39] : (s('type.conSem.v',X22) = s('type.conSem.v','const.conSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')),X37),s('type.list.list'('type.conSem.v'),X38))) & s('type.exhSem.v',X23) = s('type.exhSem.v','const.exhSem.Conv_2'(s('type.num.num','const.dec_to_exhProof.get_tag_1'(s('type.option.option'('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')),X37))),s('type.list.list'('type.exhSem.v'),X39))) & p(s(bool,happ(s(fun('type.list.list'('type.exhSem.v'),bool),happ(s(fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool))),X4),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X21))),s('type.list.list'('type.conSem.v'),X38))),s('type.list.list'('type.exhSem.v'),X39)))))) & (! [X37,X38,X39] : (s('type.conSem.v',X22) != s('type.conSem.v','const.conSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')),X37),s('type.list.list'('type.conSem.v'),X38))) | s('type.exhSem.v',X23) != s('type.exhSem.v','const.exhSem.Conv_2'(s('type.num.num','const.dec_to_exhProof.get_tag_1'(s('type.option.option'('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')),X37))),s('type.list.list'('type.exhSem.v'),X39))) | ~p(s(bool,happ(s(fun('type.list.list'('type.exhSem.v'),bool),happ(s(fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool))),X4),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X21))),s('type.list.list'('type.conSem.v'),X38))),s('type.list.list'('type.exhSem.v'),X39))))) | sP2(X4,X21,X23,X22)))),
  inference(nnf_transformation,[],[f49])).
fof(f8030,plain,(
  ( ! [X37,X35,X33,X36,X34] : (~sP2(X33,X34,X36,X35) | s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.exhSem.v'),bool),happ(s(fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool))),X33),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X34))),s('type.list.list'('type.conSem.v'),sK40(X35,X36,X34,X33)))),s('type.list.list'('type.exhSem.v'),sK41(X35,X36,X34,X33)))) | s(bool,'T_0') = s(bool,X37)) ) | $spl2),
  inference(subsumption_resolution,[],[f8019,f645])).
fof(f8019,plain,(
  ( ! [X37,X35,X33,X36,X34] : (p(s(bool,X37)) | ~sP2(X33,X34,X36,X35) | s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.exhSem.v'),bool),happ(s(fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool))),X33),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X34))),s('type.list.list'('type.conSem.v'),sK40(X35,X36,X34,X33)))),s('type.list.list'('type.exhSem.v'),sK41(X35,X36,X34,X33)))) | s(bool,'T_0') = s(bool,X37)) ) | $spl2),
  inference(superposition,[],[f233,f758])).
fof(f7945,plain,(
  ( ! [X35,X33,X36,X34] : (~sP3(X33,X34,X36,X35) | s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.exhSem.v'),bool),happ(s(fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool))),X33),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X34))),s('type.list.list'('type.conSem.v'),sK37(X35,X36,X34,X33)))),s('type.list.list'('type.exhSem.v'),sK38(X35,X36,X34,X33))))) ) | $spl122),
  inference(cnf_transformation,[],[f7945_D])).
fof(f7945_D,plain,(
  ( ! [X35,X33,X36,X34] : (~sP3(X33,X34,X36,X35) | s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.exhSem.v'),bool),happ(s(fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool))),X33),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X34))),s('type.list.list'('type.conSem.v'),sK37(X35,X36,X34,X33)))),s('type.list.list'('type.exhSem.v'),sK38(X35,X36,X34,X33))))) ) <=> ~$spl122),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl122])])).
fof(f7946,plain,(
  ( ! [X39,X41,X38,X42,X40] : (~sP3(X38,X39,X41,X40) | s(bool,'T_0') = s(bool,X42) | s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.exhSem.v'),bool),happ(s(fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool))),X38),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X39))),s('type.list.list'('type.conSem.v'),sK37(X40,X41,X39,X38)))),s('type.list.list'('type.exhSem.v'),sK38(X40,X41,X39,X38))))) ) | $spl2),
  inference(subsumption_resolution,[],[f7934,f645])).
fof(f7934,plain,(
  ( ! [X39,X41,X38,X42,X40] : (p(s(bool,X42)) | ~sP3(X38,X39,X41,X40) | s(bool,'T_0') = s(bool,X42) | s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.exhSem.v'),bool),happ(s(fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool))),X38),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X39))),s('type.list.list'('type.conSem.v'),sK37(X40,X41,X39,X38)))),s('type.list.list'('type.exhSem.v'),sK38(X40,X41,X39,X38))))) ) | $spl2),
  inference(superposition,[],[f229,f758])).
fof(f229,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,happ(s(fun('type.list.list'('type.exhSem.v'),bool),happ(s(fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool))),X0),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X1))),s('type.list.list'('type.conSem.v'),sK37(X3,X2,X1,X0)))),s('type.list.list'('type.exhSem.v'),sK38(X3,X2,X1,X0))))) | ~sP3(X0,X1,X2,X3)) )),
  inference(cnf_transformation,[],[f98])).
fof(f98,plain,(
  ! [X0,X1,X2,X3] : ((~sP3(X0,X1,X2,X3) | (s('type.conSem.v',X3) = s('type.conSem.v','const.conSem.Vectorv_1'(s('type.list.list'('type.conSem.v'),sK37(X3,X2,X1,X0)))) & s('type.exhSem.v',X2) = s('type.exhSem.v','const.exhSem.Vectorv_1'(s('type.list.list'('type.exhSem.v'),sK38(X3,X2,X1,X0)))) & p(s(bool,happ(s(fun('type.list.list'('type.exhSem.v'),bool),happ(s(fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool))),X0),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X1))),s('type.list.list'('type.conSem.v'),sK37(X3,X2,X1,X0)))),s('type.list.list'('type.exhSem.v'),sK38(X3,X2,X1,X0))))))) & (! [X4,X5] : (s('type.conSem.v',X3) != s('type.conSem.v','const.conSem.Vectorv_1'(s('type.list.list'('type.conSem.v'),X4))) | s('type.exhSem.v',X2) != s('type.exhSem.v','const.exhSem.Vectorv_1'(s('type.list.list'('type.exhSem.v'),X5))) | ~p(s(bool,happ(s(fun('type.list.list'('type.exhSem.v'),bool),happ(s(fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool))),X0),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X1))),s('type.list.list'('type.conSem.v'),X4))),s('type.list.list'('type.exhSem.v'),X5))))) | sP3(X0,X1,X2,X3)))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK37,sK38])],[f97])).
fof(f97,plain,(
  ! [X0,X1,X2,X3] : ((~sP3(X0,X1,X2,X3) | ? [X6,X7] : (s('type.conSem.v',X3) = s('type.conSem.v','const.conSem.Vectorv_1'(s('type.list.list'('type.conSem.v'),X6))) & s('type.exhSem.v',X2) = s('type.exhSem.v','const.exhSem.Vectorv_1'(s('type.list.list'('type.exhSem.v'),X7))) & p(s(bool,happ(s(fun('type.list.list'('type.exhSem.v'),bool),happ(s(fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool))),X0),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X1))),s('type.list.list'('type.conSem.v'),X6))),s('type.list.list'('type.exhSem.v'),X7)))))) & (! [X4,X5] : (s('type.conSem.v',X3) != s('type.conSem.v','const.conSem.Vectorv_1'(s('type.list.list'('type.conSem.v'),X4))) | s('type.exhSem.v',X2) != s('type.exhSem.v','const.exhSem.Vectorv_1'(s('type.list.list'('type.exhSem.v'),X5))) | ~p(s(bool,happ(s(fun('type.list.list'('type.exhSem.v'),bool),happ(s(fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool))),X0),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X1))),s('type.list.list'('type.conSem.v'),X4))),s('type.list.list'('type.exhSem.v'),X5))))) | sP3(X0,X1,X2,X3)))),
  inference(rectify,[],[f96])).
fof(f96,plain,(
  ! [X4,X21,X23,X22] : ((~sP3(X4,X21,X23,X22) | ? [X24,X25] : (s('type.conSem.v',X22) = s('type.conSem.v','const.conSem.Vectorv_1'(s('type.list.list'('type.conSem.v'),X24))) & s('type.exhSem.v',X23) = s('type.exhSem.v','const.exhSem.Vectorv_1'(s('type.list.list'('type.exhSem.v'),X25))) & p(s(bool,happ(s(fun('type.list.list'('type.exhSem.v'),bool),happ(s(fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool))),X4),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X21))),s('type.list.list'('type.conSem.v'),X24))),s('type.list.list'('type.exhSem.v'),X25)))))) & (! [X24,X25] : (s('type.conSem.v',X22) != s('type.conSem.v','const.conSem.Vectorv_1'(s('type.list.list'('type.conSem.v'),X24))) | s('type.exhSem.v',X23) != s('type.exhSem.v','const.exhSem.Vectorv_1'(s('type.list.list'('type.exhSem.v'),X25))) | ~p(s(bool,happ(s(fun('type.list.list'('type.exhSem.v'),bool),happ(s(fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool))),X4),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X21))),s('type.list.list'('type.conSem.v'),X24))),s('type.list.list'('type.exhSem.v'),X25))))) | sP3(X4,X21,X23,X22)))),
  inference(nnf_transformation,[],[f50])).
fof(f7944,plain,(
  ( ! [X37,X35,X33,X36,X34] : (~sP3(X33,X34,X36,X35) | s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.exhSem.v'),bool),happ(s(fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool))),X33),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X34))),s('type.list.list'('type.conSem.v'),sK37(X35,X36,X34,X33)))),s('type.list.list'('type.exhSem.v'),sK38(X35,X36,X34,X33)))) | s(bool,'T_0') = s(bool,X37)) ) | $spl2),
  inference(subsumption_resolution,[],[f7933,f645])).
fof(f7933,plain,(
  ( ! [X37,X35,X33,X36,X34] : (p(s(bool,X37)) | ~sP3(X33,X34,X36,X35) | s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.exhSem.v'),bool),happ(s(fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool))),X33),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X34))),s('type.list.list'('type.conSem.v'),sK37(X35,X36,X34,X33)))),s('type.list.list'('type.exhSem.v'),sK38(X35,X36,X34,X33)))) | s(bool,'T_0') = s(bool,X37)) ) | $spl2),
  inference(superposition,[],[f229,f758])).
fof(f7902,plain,(
  ( ! [X50,X51,X49] : (~sP20(X49,X51,X50) | s(bool,'F_0') = s(bool,happ(s(fun('type.exhSem.v',bool),happ(s(fun('type.conSem.v',fun('type.exhSem.v',bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.conSem.v',fun('type.exhSem.v',bool))),X49),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),sK99(X50,X51,X49)))),s('type.conSem.v',sK100(X50,X51,X49)))),s('type.exhSem.v',sK101(X50,X51,X49))))) ) | $spl120),
  inference(cnf_transformation,[],[f7902_D])).
fof(f7902_D,plain,(
  ( ! [X50,X51,X49] : (~sP20(X49,X51,X50) | s(bool,'F_0') = s(bool,happ(s(fun('type.exhSem.v',bool),happ(s(fun('type.conSem.v',fun('type.exhSem.v',bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.conSem.v',fun('type.exhSem.v',bool))),X49),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),sK99(X50,X51,X49)))),s('type.conSem.v',sK100(X50,X51,X49)))),s('type.exhSem.v',sK101(X50,X51,X49))))) ) <=> ~$spl120),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl120])])).
fof(f7903,plain,(
  ( ! [X54,X56,X55,X53] : (~sP20(X53,X55,X54) | s(bool,'F_0') = s(bool,X56) | s(bool,'F_0') = s(bool,happ(s(fun('type.exhSem.v',bool),happ(s(fun('type.conSem.v',fun('type.exhSem.v',bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.conSem.v',fun('type.exhSem.v',bool))),X53),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),sK99(X54,X55,X53)))),s('type.conSem.v',sK100(X54,X55,X53)))),s('type.exhSem.v',sK101(X54,X55,X53))))) )),
  inference(subsumption_resolution,[],[f7892,f1538])).
fof(f7892,plain,(
  ( ! [X54,X56,X55,X53] : (~p(s(bool,X56)) | ~sP20(X53,X55,X54) | s(bool,'F_0') = s(bool,X56) | s(bool,'F_0') = s(bool,happ(s(fun('type.exhSem.v',bool),happ(s(fun('type.conSem.v',fun('type.exhSem.v',bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.conSem.v',fun('type.exhSem.v',bool))),X53),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),sK99(X54,X55,X53)))),s('type.conSem.v',sK100(X54,X55,X53)))),s('type.exhSem.v',sK101(X54,X55,X53))))) )),
  inference(superposition,[],[f314,f2345])).
fof(f314,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,happ(s(fun('type.exhSem.v',bool),happ(s(fun('type.conSem.v',fun('type.exhSem.v',bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.conSem.v',fun('type.exhSem.v',bool))),X0),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),sK99(X2,X1,X0)))),s('type.conSem.v',sK100(X2,X1,X0)))),s('type.exhSem.v',sK101(X2,X1,X0))))) | ~sP20(X0,X1,X2)) )),
  inference(cnf_transformation,[],[f139])).
fof(f139,plain,(
  ! [X0,X1,X2] : ((~sP20(X0,X1,X2) | (((s('type.conSem.v',sK100(X2,X1,X0)) = s('type.conSem.v','const.conSem.Litv_1'(s('type.ast.lit',sK102(X2,X1,X0)))) & s('type.exhSem.v',sK101(X2,X1,X0)) = s('type.exhSem.v','const.exhSem.Litv_1'(s('type.ast.lit',sK102(X2,X1,X0))))) | sP16(X1,sK99(X2,X1,X0),sK101(X2,X1,X0),sK100(X2,X1,X0)) | sP14(X2,sK99(X2,X1,X0),sK101(X2,X1,X0),sK100(X2,X1,X0)) | sP15(X2,sK99(X2,X1,X0),sK101(X2,X1,X0),sK100(X2,X1,X0)) | (s('type.conSem.v',sK100(X2,X1,X0)) = s('type.conSem.v','const.conSem.Loc_1'(s('type.num.num',sK103(X2,X1,X0)))) & s('type.exhSem.v',sK101(X2,X1,X0)) = s('type.exhSem.v','const.exhSem.Loc_1'(s('type.num.num',sK103(X2,X1,X0))))) | sP17(X1,sK99(X2,X1,X0),sK101(X2,X1,X0),sK100(X2,X1,X0))) & ~p(s(bool,happ(s(fun('type.exhSem.v',bool),happ(s(fun('type.conSem.v',fun('type.exhSem.v',bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.conSem.v',fun('type.exhSem.v',bool))),X0),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),sK99(X2,X1,X0)))),s('type.conSem.v',sK100(X2,X1,X0)))),s('type.exhSem.v',sK101(X2,X1,X0))))))) & (! [X3,X4,X5] : ((! [X7] : (s('type.conSem.v',X4) != s('type.conSem.v','const.conSem.Litv_1'(s('type.ast.lit',X7))) | s('type.exhSem.v',X5) != s('type.exhSem.v','const.exhSem.Litv_1'(s('type.ast.lit',X7)))) & ~sP16(X1,X3,X5,X4) & ~sP14(X2,X3,X5,X4) & ~sP15(X2,X3,X5,X4) & ! [X6] : (s('type.conSem.v',X4) != s('type.conSem.v','const.conSem.Loc_1'(s('type.num.num',X6))) | s('type.exhSem.v',X5) != s('type.exhSem.v','const.exhSem.Loc_1'(s('type.num.num',X6)))) & ~sP17(X1,X3,X5,X4)) | p(s(bool,happ(s(fun('type.exhSem.v',bool),happ(s(fun('type.conSem.v',fun('type.exhSem.v',bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.conSem.v',fun('type.exhSem.v',bool))),X0),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X3))),s('type.conSem.v',X4))),s('type.exhSem.v',X5))))) | sP20(X0,X1,X2)))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK99,sK100,sK101,sK102,sK103])],[f138])).
fof(f138,plain,(
  ! [X0,X1,X2] : ((~sP20(X0,X1,X2) | ? [X8,X9,X10] : ((? [X12] : (s('type.conSem.v',X9) = s('type.conSem.v','const.conSem.Litv_1'(s('type.ast.lit',X12))) & s('type.exhSem.v',X10) = s('type.exhSem.v','const.exhSem.Litv_1'(s('type.ast.lit',X12)))) | sP16(X1,X8,X10,X9) | sP14(X2,X8,X10,X9) | sP15(X2,X8,X10,X9) | ? [X11] : (s('type.conSem.v',X9) = s('type.conSem.v','const.conSem.Loc_1'(s('type.num.num',X11))) & s('type.exhSem.v',X10) = s('type.exhSem.v','const.exhSem.Loc_1'(s('type.num.num',X11)))) | sP17(X1,X8,X10,X9)) & ~p(s(bool,happ(s(fun('type.exhSem.v',bool),happ(s(fun('type.conSem.v',fun('type.exhSem.v',bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.conSem.v',fun('type.exhSem.v',bool))),X0),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X8))),s('type.conSem.v',X9))),s('type.exhSem.v',X10)))))) & (! [X3,X4,X5] : ((! [X7] : (s('type.conSem.v',X4) != s('type.conSem.v','const.conSem.Litv_1'(s('type.ast.lit',X7))) | s('type.exhSem.v',X5) != s('type.exhSem.v','const.exhSem.Litv_1'(s('type.ast.lit',X7)))) & ~sP16(X1,X3,X5,X4) & ~sP14(X2,X3,X5,X4) & ~sP15(X2,X3,X5,X4) & ! [X6] : (s('type.conSem.v',X4) != s('type.conSem.v','const.conSem.Loc_1'(s('type.num.num',X6))) | s('type.exhSem.v',X5) != s('type.exhSem.v','const.exhSem.Loc_1'(s('type.num.num',X6)))) & ~sP17(X1,X3,X5,X4)) | p(s(bool,happ(s(fun('type.exhSem.v',bool),happ(s(fun('type.conSem.v',fun('type.exhSem.v',bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.conSem.v',fun('type.exhSem.v',bool))),X0),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X3))),s('type.conSem.v',X4))),s('type.exhSem.v',X5))))) | sP20(X0,X1,X2)))),
  inference(rectify,[],[f137])).
fof(f137,plain,(
  ! [X3,X4,X5] : ((~sP20(X3,X4,X5) | ? [X21,X22,X23] : ((? [X40] : (s('type.conSem.v',X22) = s('type.conSem.v','const.conSem.Litv_1'(s('type.ast.lit',X40))) & s('type.exhSem.v',X23) = s('type.exhSem.v','const.exhSem.Litv_1'(s('type.ast.lit',X40)))) | sP16(X4,X21,X23,X22) | sP14(X5,X21,X23,X22) | sP15(X5,X21,X23,X22) | ? [X26] : (s('type.conSem.v',X22) = s('type.conSem.v','const.conSem.Loc_1'(s('type.num.num',X26))) & s('type.exhSem.v',X23) = s('type.exhSem.v','const.exhSem.Loc_1'(s('type.num.num',X26)))) | sP17(X4,X21,X23,X22)) & ~p(s(bool,happ(s(fun('type.exhSem.v',bool),happ(s(fun('type.conSem.v',fun('type.exhSem.v',bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.conSem.v',fun('type.exhSem.v',bool))),X3),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X21))),s('type.conSem.v',X22))),s('type.exhSem.v',X23)))))) & (! [X21,X22,X23] : ((! [X40] : (s('type.conSem.v',X22) != s('type.conSem.v','const.conSem.Litv_1'(s('type.ast.lit',X40))) | s('type.exhSem.v',X23) != s('type.exhSem.v','const.exhSem.Litv_1'(s('type.ast.lit',X40)))) & ~sP16(X4,X21,X23,X22) & ~sP14(X5,X21,X23,X22) & ~sP15(X5,X21,X23,X22) & ! [X26] : (s('type.conSem.v',X22) != s('type.conSem.v','const.conSem.Loc_1'(s('type.num.num',X26))) | s('type.exhSem.v',X23) != s('type.exhSem.v','const.exhSem.Loc_1'(s('type.num.num',X26)))) & ~sP17(X4,X21,X23,X22)) | p(s(bool,happ(s(fun('type.exhSem.v',bool),happ(s(fun('type.conSem.v',fun('type.exhSem.v',bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.conSem.v',fun('type.exhSem.v',bool))),X3),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X21))),s('type.conSem.v',X22))),s('type.exhSem.v',X23))))) | sP20(X3,X4,X5)))),
  inference(nnf_transformation,[],[f69])).
fof(f69,plain,(
  ! [X3,X4,X5] : (sP20(X3,X4,X5) <=> ? [X21,X22,X23] : ((? [X40] : (s('type.conSem.v',X22) = s('type.conSem.v','const.conSem.Litv_1'(s('type.ast.lit',X40))) & s('type.exhSem.v',X23) = s('type.exhSem.v','const.exhSem.Litv_1'(s('type.ast.lit',X40)))) | sP16(X4,X21,X23,X22) | sP14(X5,X21,X23,X22) | sP15(X5,X21,X23,X22) | ? [X26] : (s('type.conSem.v',X22) = s('type.conSem.v','const.conSem.Loc_1'(s('type.num.num',X26))) & s('type.exhSem.v',X23) = s('type.exhSem.v','const.exhSem.Loc_1'(s('type.num.num',X26)))) | sP17(X4,X21,X23,X22)) & ~p(s(bool,happ(s(fun('type.exhSem.v',bool),happ(s(fun('type.conSem.v',fun('type.exhSem.v',bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.conSem.v',fun('type.exhSem.v',bool))),X3),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X21))),s('type.conSem.v',X22))),s('type.exhSem.v',X23))))))),
  introduced(predicate_definition_introduction,[new_symbols(naming,[sP20])])).
fof(f7901,plain,(
  ( ! [X52,X50,X51,X49] : (~sP20(X49,X51,X50) | s(bool,'F_0') = s(bool,happ(s(fun('type.exhSem.v',bool),happ(s(fun('type.conSem.v',fun('type.exhSem.v',bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.conSem.v',fun('type.exhSem.v',bool))),X49),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),sK99(X50,X51,X49)))),s('type.conSem.v',sK100(X50,X51,X49)))),s('type.exhSem.v',sK101(X50,X51,X49)))) | s(bool,'F_0') = s(bool,X52)) )),
  inference(subsumption_resolution,[],[f7891,f1538])).
fof(f7891,plain,(
  ( ! [X52,X50,X51,X49] : (~p(s(bool,X52)) | ~sP20(X49,X51,X50) | s(bool,'F_0') = s(bool,happ(s(fun('type.exhSem.v',bool),happ(s(fun('type.conSem.v',fun('type.exhSem.v',bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.conSem.v',fun('type.exhSem.v',bool))),X49),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),sK99(X50,X51,X49)))),s('type.conSem.v',sK100(X50,X51,X49)))),s('type.exhSem.v',sK101(X50,X51,X49)))) | s(bool,'F_0') = s(bool,X52)) )),
  inference(superposition,[],[f314,f2345])).
fof(f7853,plain,(
  ( ! [X50,X51,X49] : (~sP13(X49,X51,X50) | s(bool,'F_0') = s(bool,happ(s(fun('type.exhSem.v',bool),happ(s(fun('type.conSem.v',fun('type.exhSem.v',bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.conSem.v',fun('type.exhSem.v',bool))),X49),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),sK61(X50,X51,X49)))),s('type.conSem.v',sK62(X50,X51,X49)))),s('type.exhSem.v',sK63(X50,X51,X49))))) ) | $spl118),
  inference(cnf_transformation,[],[f7853_D])).
fof(f7853_D,plain,(
  ( ! [X50,X51,X49] : (~sP13(X49,X51,X50) | s(bool,'F_0') = s(bool,happ(s(fun('type.exhSem.v',bool),happ(s(fun('type.conSem.v',fun('type.exhSem.v',bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.conSem.v',fun('type.exhSem.v',bool))),X49),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),sK61(X50,X51,X49)))),s('type.conSem.v',sK62(X50,X51,X49)))),s('type.exhSem.v',sK63(X50,X51,X49))))) ) <=> ~$spl118),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl118])])).
fof(f7854,plain,(
  ( ! [X54,X56,X55,X53] : (~sP13(X53,X55,X54) | s(bool,'F_0') = s(bool,X56) | s(bool,'F_0') = s(bool,happ(s(fun('type.exhSem.v',bool),happ(s(fun('type.conSem.v',fun('type.exhSem.v',bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.conSem.v',fun('type.exhSem.v',bool))),X53),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),sK61(X54,X55,X53)))),s('type.conSem.v',sK62(X54,X55,X53)))),s('type.exhSem.v',sK63(X54,X55,X53))))) )),
  inference(subsumption_resolution,[],[f7843,f1538])).
fof(f7843,plain,(
  ( ! [X54,X56,X55,X53] : (~p(s(bool,X56)) | ~sP13(X53,X55,X54) | s(bool,'F_0') = s(bool,X56) | s(bool,'F_0') = s(bool,happ(s(fun('type.exhSem.v',bool),happ(s(fun('type.conSem.v',fun('type.exhSem.v',bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.conSem.v',fun('type.exhSem.v',bool))),X53),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),sK61(X54,X55,X53)))),s('type.conSem.v',sK62(X54,X55,X53)))),s('type.exhSem.v',sK63(X54,X55,X53))))) )),
  inference(superposition,[],[f257,f2345])).
fof(f257,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,happ(s(fun('type.exhSem.v',bool),happ(s(fun('type.conSem.v',fun('type.exhSem.v',bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.conSem.v',fun('type.exhSem.v',bool))),X0),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),sK61(X2,X1,X0)))),s('type.conSem.v',sK62(X2,X1,X0)))),s('type.exhSem.v',sK63(X2,X1,X0))))) | ~sP13(X0,X1,X2)) )),
  inference(cnf_transformation,[],[f113])).
fof(f7852,plain,(
  ( ! [X52,X50,X51,X49] : (~sP13(X49,X51,X50) | s(bool,'F_0') = s(bool,happ(s(fun('type.exhSem.v',bool),happ(s(fun('type.conSem.v',fun('type.exhSem.v',bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.conSem.v',fun('type.exhSem.v',bool))),X49),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),sK61(X50,X51,X49)))),s('type.conSem.v',sK62(X50,X51,X49)))),s('type.exhSem.v',sK63(X50,X51,X49)))) | s(bool,'F_0') = s(bool,X52)) )),
  inference(subsumption_resolution,[],[f7842,f1538])).
fof(f7842,plain,(
  ( ! [X52,X50,X51,X49] : (~p(s(bool,X52)) | ~sP13(X49,X51,X50) | s(bool,'F_0') = s(bool,happ(s(fun('type.exhSem.v',bool),happ(s(fun('type.conSem.v',fun('type.exhSem.v',bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.conSem.v',fun('type.exhSem.v',bool))),X49),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),sK61(X50,X51,X49)))),s('type.conSem.v',sK62(X50,X51,X49)))),s('type.exhSem.v',sK63(X50,X51,X49)))) | s(bool,'F_0') = s(bool,X52)) )),
  inference(superposition,[],[f257,f2345])).
fof(f7764,plain,(
  ( ! [X50,X51,X49] : (~sP6(X49,X51,X50) | s(bool,'F_0') = s(bool,happ(s(fun('type.exhSem.v',bool),happ(s(fun('type.conSem.v',fun('type.exhSem.v',bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.conSem.v',fun('type.exhSem.v',bool))),X49),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),sK23(X50,X51,X49)))),s('type.conSem.v',sK24(X50,X51,X49)))),s('type.exhSem.v',sK25(X50,X51,X49))))) ) | $spl116),
  inference(cnf_transformation,[],[f7764_D])).
fof(f7764_D,plain,(
  ( ! [X50,X51,X49] : (~sP6(X49,X51,X50) | s(bool,'F_0') = s(bool,happ(s(fun('type.exhSem.v',bool),happ(s(fun('type.conSem.v',fun('type.exhSem.v',bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.conSem.v',fun('type.exhSem.v',bool))),X49),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),sK23(X50,X51,X49)))),s('type.conSem.v',sK24(X50,X51,X49)))),s('type.exhSem.v',sK25(X50,X51,X49))))) ) <=> ~$spl116),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl116])])).
fof(f7765,plain,(
  ( ! [X54,X56,X55,X53] : (~sP6(X53,X55,X54) | s(bool,'F_0') = s(bool,X56) | s(bool,'F_0') = s(bool,happ(s(fun('type.exhSem.v',bool),happ(s(fun('type.conSem.v',fun('type.exhSem.v',bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.conSem.v',fun('type.exhSem.v',bool))),X53),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),sK23(X54,X55,X53)))),s('type.conSem.v',sK24(X54,X55,X53)))),s('type.exhSem.v',sK25(X54,X55,X53))))) )),
  inference(subsumption_resolution,[],[f7754,f1538])).
fof(f7754,plain,(
  ( ! [X54,X56,X55,X53] : (~p(s(bool,X56)) | ~sP6(X53,X55,X54) | s(bool,'F_0') = s(bool,X56) | s(bool,'F_0') = s(bool,happ(s(fun('type.exhSem.v',bool),happ(s(fun('type.conSem.v',fun('type.exhSem.v',bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.conSem.v',fun('type.exhSem.v',bool))),X53),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),sK23(X54,X55,X53)))),s('type.conSem.v',sK24(X54,X55,X53)))),s('type.exhSem.v',sK25(X54,X55,X53))))) )),
  inference(superposition,[],[f200,f2345])).
fof(f200,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,happ(s(fun('type.exhSem.v',bool),happ(s(fun('type.conSem.v',fun('type.exhSem.v',bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.conSem.v',fun('type.exhSem.v',bool))),X0),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),sK23(X2,X1,X0)))),s('type.conSem.v',sK24(X2,X1,X0)))),s('type.exhSem.v',sK25(X2,X1,X0))))) | ~sP6(X0,X1,X2)) )),
  inference(cnf_transformation,[],[f87])).
fof(f7763,plain,(
  ( ! [X52,X50,X51,X49] : (~sP6(X49,X51,X50) | s(bool,'F_0') = s(bool,happ(s(fun('type.exhSem.v',bool),happ(s(fun('type.conSem.v',fun('type.exhSem.v',bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.conSem.v',fun('type.exhSem.v',bool))),X49),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),sK23(X50,X51,X49)))),s('type.conSem.v',sK24(X50,X51,X49)))),s('type.exhSem.v',sK25(X50,X51,X49)))) | s(bool,'F_0') = s(bool,X52)) )),
  inference(subsumption_resolution,[],[f7753,f1538])).
fof(f7753,plain,(
  ( ! [X52,X50,X51,X49] : (~p(s(bool,X52)) | ~sP6(X49,X51,X50) | s(bool,'F_0') = s(bool,happ(s(fun('type.exhSem.v',bool),happ(s(fun('type.conSem.v',fun('type.exhSem.v',bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.conSem.v',fun('type.exhSem.v',bool))),X49),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),sK23(X50,X51,X49)))),s('type.conSem.v',sK24(X50,X51,X49)))),s('type.exhSem.v',sK25(X50,X51,X49)))) | s(bool,'F_0') = s(bool,X52)) )),
  inference(superposition,[],[f200,f2345])).
fof(f7712,plain,(
  ( ! [X47,X52,X50,X48,X53,X49] : (sP20(X47,X52,X53) | s(bool,'T_0') = s(bool,happ(s(fun('type.exhSem.v',bool),happ(s(fun('type.conSem.v',fun('type.exhSem.v',bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.conSem.v',fun('type.exhSem.v',bool))),X47),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X48))),s('type.conSem.v',X49))),s('type.exhSem.v',X50))) | ~sP17(X52,X48,X50,X49)) ) | $spl114),
  inference(cnf_transformation,[],[f7712_D])).
fof(f7712_D,plain,(
  ( ! [X47,X52,X50,X48,X53,X49] : (sP20(X47,X52,X53) | s(bool,'T_0') = s(bool,happ(s(fun('type.exhSem.v',bool),happ(s(fun('type.conSem.v',fun('type.exhSem.v',bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.conSem.v',fun('type.exhSem.v',bool))),X47),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X48))),s('type.conSem.v',X49))),s('type.exhSem.v',X50))) | ~sP17(X52,X48,X50,X49)) ) <=> ~$spl114),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl114])])).
fof(f7713,plain,(
  ( ! [X59,X57,X54,X60,X58,X56,X55] : (sP20(X54,X59,X60) | ~sP17(X59,X55,X57,X56) | s(bool,'T_0') = s(bool,X58) | s(bool,'T_0') = s(bool,happ(s(fun('type.exhSem.v',bool),happ(s(fun('type.conSem.v',fun('type.exhSem.v',bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.conSem.v',fun('type.exhSem.v',bool))),X54),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X55))),s('type.conSem.v',X56))),s('type.exhSem.v',X57)))) ) | $spl2),
  inference(subsumption_resolution,[],[f7697,f645])).
fof(f7697,plain,(
  ( ! [X59,X57,X54,X60,X58,X56,X55] : (p(s(bool,X58)) | sP20(X54,X59,X60) | ~sP17(X59,X55,X57,X56) | s(bool,'T_0') = s(bool,X58) | s(bool,'T_0') = s(bool,happ(s(fun('type.exhSem.v',bool),happ(s(fun('type.conSem.v',fun('type.exhSem.v',bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.conSem.v',fun('type.exhSem.v',bool))),X54),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X55))),s('type.conSem.v',X56))),s('type.exhSem.v',X57)))) ) | $spl2),
  inference(superposition,[],[f320,f758])).
fof(f320,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (sP20(X0,X1,X2) | p(s(bool,happ(s(fun('type.exhSem.v',bool),happ(s(fun('type.conSem.v',fun('type.exhSem.v',bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.conSem.v',fun('type.exhSem.v',bool))),X0),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X3))),s('type.conSem.v',X4))),s('type.exhSem.v',X5)))) | ~sP17(X1,X3,X5,X4)) )),
  inference(cnf_transformation,[],[f139])).
fof(f7711,plain,(
  ( ! [X47,X52,X50,X48,X53,X51,X49] : (sP20(X47,X52,X53) | ~sP17(X52,X48,X50,X49) | s(bool,'T_0') = s(bool,happ(s(fun('type.exhSem.v',bool),happ(s(fun('type.conSem.v',fun('type.exhSem.v',bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.conSem.v',fun('type.exhSem.v',bool))),X47),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X48))),s('type.conSem.v',X49))),s('type.exhSem.v',X50))) | s(bool,'T_0') = s(bool,X51)) ) | $spl2),
  inference(subsumption_resolution,[],[f7696,f645])).
fof(f7696,plain,(
  ( ! [X47,X52,X50,X48,X53,X51,X49] : (p(s(bool,X51)) | sP20(X47,X52,X53) | ~sP17(X52,X48,X50,X49) | s(bool,'T_0') = s(bool,happ(s(fun('type.exhSem.v',bool),happ(s(fun('type.conSem.v',fun('type.exhSem.v',bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.conSem.v',fun('type.exhSem.v',bool))),X47),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X48))),s('type.conSem.v',X49))),s('type.exhSem.v',X50))) | s(bool,'T_0') = s(bool,X51)) ) | $spl2),
  inference(superposition,[],[f320,f758])).
fof(f7621,plain,(
  ( ! [X47,X52,X50,X48,X53,X49] : (sP20(X47,X52,X53) | s(bool,'T_0') = s(bool,happ(s(fun('type.exhSem.v',bool),happ(s(fun('type.conSem.v',fun('type.exhSem.v',bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.conSem.v',fun('type.exhSem.v',bool))),X47),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X48))),s('type.conSem.v',X49))),s('type.exhSem.v',X50))) | ~sP15(X53,X48,X50,X49)) ) | $spl112),
  inference(cnf_transformation,[],[f7621_D])).
fof(f7621_D,plain,(
  ( ! [X47,X52,X50,X48,X53,X49] : (sP20(X47,X52,X53) | s(bool,'T_0') = s(bool,happ(s(fun('type.exhSem.v',bool),happ(s(fun('type.conSem.v',fun('type.exhSem.v',bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.conSem.v',fun('type.exhSem.v',bool))),X47),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X48))),s('type.conSem.v',X49))),s('type.exhSem.v',X50))) | ~sP15(X53,X48,X50,X49)) ) <=> ~$spl112),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl112])])).
fof(f7622,plain,(
  ( ! [X59,X57,X54,X60,X58,X56,X55] : (sP20(X54,X59,X60) | ~sP15(X60,X55,X57,X56) | s(bool,'T_0') = s(bool,X58) | s(bool,'T_0') = s(bool,happ(s(fun('type.exhSem.v',bool),happ(s(fun('type.conSem.v',fun('type.exhSem.v',bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.conSem.v',fun('type.exhSem.v',bool))),X54),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X55))),s('type.conSem.v',X56))),s('type.exhSem.v',X57)))) ) | $spl2),
  inference(subsumption_resolution,[],[f7606,f645])).
fof(f7606,plain,(
  ( ! [X59,X57,X54,X60,X58,X56,X55] : (p(s(bool,X58)) | sP20(X54,X59,X60) | ~sP15(X60,X55,X57,X56) | s(bool,'T_0') = s(bool,X58) | s(bool,'T_0') = s(bool,happ(s(fun('type.exhSem.v',bool),happ(s(fun('type.conSem.v',fun('type.exhSem.v',bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.conSem.v',fun('type.exhSem.v',bool))),X54),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X55))),s('type.conSem.v',X56))),s('type.exhSem.v',X57)))) ) | $spl2),
  inference(superposition,[],[f318,f758])).
fof(f318,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (sP20(X0,X1,X2) | p(s(bool,happ(s(fun('type.exhSem.v',bool),happ(s(fun('type.conSem.v',fun('type.exhSem.v',bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.conSem.v',fun('type.exhSem.v',bool))),X0),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X3))),s('type.conSem.v',X4))),s('type.exhSem.v',X5)))) | ~sP15(X2,X3,X5,X4)) )),
  inference(cnf_transformation,[],[f139])).
fof(f7620,plain,(
  ( ! [X47,X52,X50,X48,X53,X51,X49] : (sP20(X47,X52,X53) | ~sP15(X53,X48,X50,X49) | s(bool,'T_0') = s(bool,happ(s(fun('type.exhSem.v',bool),happ(s(fun('type.conSem.v',fun('type.exhSem.v',bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.conSem.v',fun('type.exhSem.v',bool))),X47),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X48))),s('type.conSem.v',X49))),s('type.exhSem.v',X50))) | s(bool,'T_0') = s(bool,X51)) ) | $spl2),
  inference(subsumption_resolution,[],[f7605,f645])).
fof(f7605,plain,(
  ( ! [X47,X52,X50,X48,X53,X51,X49] : (p(s(bool,X51)) | sP20(X47,X52,X53) | ~sP15(X53,X48,X50,X49) | s(bool,'T_0') = s(bool,happ(s(fun('type.exhSem.v',bool),happ(s(fun('type.conSem.v',fun('type.exhSem.v',bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.conSem.v',fun('type.exhSem.v',bool))),X47),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X48))),s('type.conSem.v',X49))),s('type.exhSem.v',X50))) | s(bool,'T_0') = s(bool,X51)) ) | $spl2),
  inference(superposition,[],[f318,f758])).
fof(f7530,plain,(
  ( ! [X47,X52,X50,X48,X53,X49] : (sP20(X47,X52,X53) | s(bool,'T_0') = s(bool,happ(s(fun('type.exhSem.v',bool),happ(s(fun('type.conSem.v',fun('type.exhSem.v',bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.conSem.v',fun('type.exhSem.v',bool))),X47),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X48))),s('type.conSem.v',X49))),s('type.exhSem.v',X50))) | ~sP14(X53,X48,X50,X49)) ) | $spl110),
  inference(cnf_transformation,[],[f7530_D])).
fof(f7530_D,plain,(
  ( ! [X47,X52,X50,X48,X53,X49] : (sP20(X47,X52,X53) | s(bool,'T_0') = s(bool,happ(s(fun('type.exhSem.v',bool),happ(s(fun('type.conSem.v',fun('type.exhSem.v',bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.conSem.v',fun('type.exhSem.v',bool))),X47),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X48))),s('type.conSem.v',X49))),s('type.exhSem.v',X50))) | ~sP14(X53,X48,X50,X49)) ) <=> ~$spl110),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl110])])).
fof(f7531,plain,(
  ( ! [X59,X57,X54,X60,X58,X56,X55] : (sP20(X54,X59,X60) | ~sP14(X60,X55,X57,X56) | s(bool,'T_0') = s(bool,X58) | s(bool,'T_0') = s(bool,happ(s(fun('type.exhSem.v',bool),happ(s(fun('type.conSem.v',fun('type.exhSem.v',bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.conSem.v',fun('type.exhSem.v',bool))),X54),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X55))),s('type.conSem.v',X56))),s('type.exhSem.v',X57)))) ) | $spl2),
  inference(subsumption_resolution,[],[f7519,f645])).
fof(f7519,plain,(
  ( ! [X59,X57,X54,X60,X58,X56,X55] : (p(s(bool,X58)) | sP20(X54,X59,X60) | ~sP14(X60,X55,X57,X56) | s(bool,'T_0') = s(bool,X58) | s(bool,'T_0') = s(bool,happ(s(fun('type.exhSem.v',bool),happ(s(fun('type.conSem.v',fun('type.exhSem.v',bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.conSem.v',fun('type.exhSem.v',bool))),X54),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X55))),s('type.conSem.v',X56))),s('type.exhSem.v',X57)))) ) | $spl2),
  inference(superposition,[],[f317,f758])).
fof(f317,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (sP20(X0,X1,X2) | p(s(bool,happ(s(fun('type.exhSem.v',bool),happ(s(fun('type.conSem.v',fun('type.exhSem.v',bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.conSem.v',fun('type.exhSem.v',bool))),X0),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X3))),s('type.conSem.v',X4))),s('type.exhSem.v',X5)))) | ~sP14(X2,X3,X5,X4)) )),
  inference(cnf_transformation,[],[f139])).
fof(f7529,plain,(
  ( ! [X47,X52,X50,X48,X53,X51,X49] : (sP20(X47,X52,X53) | ~sP14(X53,X48,X50,X49) | s(bool,'T_0') = s(bool,happ(s(fun('type.exhSem.v',bool),happ(s(fun('type.conSem.v',fun('type.exhSem.v',bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.conSem.v',fun('type.exhSem.v',bool))),X47),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X48))),s('type.conSem.v',X49))),s('type.exhSem.v',X50))) | s(bool,'T_0') = s(bool,X51)) ) | $spl2),
  inference(subsumption_resolution,[],[f7518,f645])).
fof(f7518,plain,(
  ( ! [X47,X52,X50,X48,X53,X51,X49] : (p(s(bool,X51)) | sP20(X47,X52,X53) | ~sP14(X53,X48,X50,X49) | s(bool,'T_0') = s(bool,happ(s(fun('type.exhSem.v',bool),happ(s(fun('type.conSem.v',fun('type.exhSem.v',bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.conSem.v',fun('type.exhSem.v',bool))),X47),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X48))),s('type.conSem.v',X49))),s('type.exhSem.v',X50))) | s(bool,'T_0') = s(bool,X51)) ) | $spl2),
  inference(superposition,[],[f317,f758])).
fof(f7437,plain,(
  ( ! [X70,X68,X76,X74,X72,X71,X77,X75,X73] : (p(s(bool,sK137(X70,X71,X72,X73,X74))) | s(bool,'T_0') = s(bool,X68) | s(bool,X68) = s(bool,sK137(X75,X76,X72,X73,X77))) ) | $spl108),
  inference(cnf_transformation,[],[f7437_D])).
fof(f7437_D,plain,(
  ( ! [X70,X68,X76,X74,X72,X71,X77,X75,X73] : (p(s(bool,sK137(X70,X71,X72,X73,X74))) | s(bool,'T_0') = s(bool,X68) | s(bool,X68) = s(bool,sK137(X75,X76,X72,X73,X77))) ) <=> ~$spl108),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl108])])).
fof(f7438,plain,(
  ( ! [X80,X78,X87,X85,X83,X81,X79,X86,X84,X82] : (p(s(bool,sK137(X80,X81,X82,X83,X84))) | s(bool,X78) = s(bool,sK137(X85,X86,X82,X83,X87)) | s(bool,'T_0') = s(bool,X79) | s(bool,'T_0') = s(bool,X78)) ) | $spl2),
  inference(subsumption_resolution,[],[f7402,f645])).
fof(f7402,plain,(
  ( ! [X80,X78,X87,X85,X83,X81,X79,X86,X84,X82] : (p(s(bool,X79)) | p(s(bool,sK137(X80,X81,X82,X83,X84))) | s(bool,X78) = s(bool,sK137(X85,X86,X82,X83,X87)) | s(bool,'T_0') = s(bool,X79) | s(bool,'T_0') = s(bool,X78)) ) | $spl2),
  inference(superposition,[],[f6955,f758])).
fof(f6955,plain,(
  ( ! [X59,X57,X54,X52,X58,X56,X55,X53,X51] : (p(s(bool,sK137(X51,X52,X53,X54,X55))) | p(s(bool,X59)) | s(bool,X59) = s(bool,sK137(X56,X57,X53,X54,X58))) )),
  inference(resolution,[],[f6948,f173])).
fof(f6948,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (~p(s(bool,sK137(X5,X6,X2,X3,X7))) | p(s(bool,sK137(X0,X1,X2,X3,X4)))) )),
  inference(equality_resolution,[],[f3690])).
fof(f3690,plain,(
  ( ! [X14,X12,X10,X17,X15,X13,X11,X9,X16] : (s('type.ast.lit',X10) != s('type.ast.lit',X11) | p(s(bool,sK137(X12,X13,X11,X9,X14))) | ~p(s(bool,sK137(X15,X16,X10,X9,X17)))) )),
  inference(superposition,[],[f368,f367])).
fof(f367,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s('type.ast.lit',X1) = s('type.ast.lit',X2) | ~p(s(bool,sK137(X4,X3,X2,X1,X0)))) )),
  inference(cnf_transformation,[],[f165])).
fof(f7436,plain,(
  ( ! [X70,X68,X76,X74,X72,X71,X69,X77,X75,X73] : (p(s(bool,sK137(X70,X71,X72,X73,X74))) | s(bool,X68) = s(bool,sK137(X75,X76,X72,X73,X77)) | s(bool,'T_0') = s(bool,X68) | s(bool,'T_0') = s(bool,X69)) ) | $spl2),
  inference(subsumption_resolution,[],[f7401,f645])).
fof(f7401,plain,(
  ( ! [X70,X68,X76,X74,X72,X71,X69,X77,X75,X73] : (p(s(bool,X69)) | p(s(bool,sK137(X70,X71,X72,X73,X74))) | s(bool,X68) = s(bool,sK137(X75,X76,X72,X73,X77)) | s(bool,'T_0') = s(bool,X68) | s(bool,'T_0') = s(bool,X69)) ) | $spl2),
  inference(superposition,[],[f6955,f758])).
fof(f7430,plain,(
  ( ! [X146,X144,X142,X151,X149,X145,X143,X150,X148] : (p(s(bool,X148)) | s(bool,'T_0') = s(bool,sK137(X142,X143,X144,X145,X146)) | s(bool,X148) = s(bool,sK137(X149,X150,X144,X145,X151))) ) | $spl106),
  inference(cnf_transformation,[],[f7430_D])).
fof(f7430_D,plain,(
  ( ! [X146,X144,X142,X151,X149,X145,X143,X150,X148] : (p(s(bool,X148)) | s(bool,'T_0') = s(bool,sK137(X142,X143,X144,X145,X146)) | s(bool,X148) = s(bool,sK137(X149,X150,X144,X145,X151))) ) <=> ~$spl106),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl106])])).
fof(f7431,plain,(
  ( ! [X158,X156,X154,X152,X161,X159,X157,X155,X153,X160] : (p(s(bool,X158)) | s(bool,X158) = s(bool,sK137(X159,X160,X154,X155,X161)) | s(bool,'T_0') = s(bool,X157) | s(bool,'T_0') = s(bool,sK137(X152,X153,X154,X155,X156))) ) | $spl2),
  inference(subsumption_resolution,[],[f7387,f645])).
fof(f7387,plain,(
  ( ! [X158,X156,X154,X152,X161,X159,X157,X155,X153,X160] : (p(s(bool,X157)) | p(s(bool,X158)) | s(bool,X158) = s(bool,sK137(X159,X160,X154,X155,X161)) | s(bool,'T_0') = s(bool,X157) | s(bool,'T_0') = s(bool,sK137(X152,X153,X154,X155,X156))) ) | $spl2),
  inference(superposition,[],[f6955,f758])).
fof(f7429,plain,(
  ( ! [X146,X144,X142,X151,X149,X147,X145,X143,X150,X148] : (p(s(bool,X148)) | s(bool,X148) = s(bool,sK137(X149,X150,X144,X145,X151)) | s(bool,'T_0') = s(bool,sK137(X142,X143,X144,X145,X146)) | s(bool,'T_0') = s(bool,X147)) ) | $spl2),
  inference(subsumption_resolution,[],[f7386,f645])).
fof(f7386,plain,(
  ( ! [X146,X144,X142,X151,X149,X147,X145,X143,X150,X148] : (p(s(bool,X147)) | p(s(bool,X148)) | s(bool,X148) = s(bool,sK137(X149,X150,X144,X145,X151)) | s(bool,'T_0') = s(bool,sK137(X142,X143,X144,X145,X146)) | s(bool,'T_0') = s(bool,X147)) ) | $spl2),
  inference(superposition,[],[f6955,f758])).
fof(f7331,plain,(
  ( ! [X70,X68,X76,X74,X72,X71,X77,X75,X73] : (p(s(bool,sK137(X70,X71,X72,X73,X74))) | s(bool,'T_0') = s(bool,X68) | s(bool,X68) = s(bool,sK137(X75,X76,X73,X72,X77))) ) | $spl104),
  inference(cnf_transformation,[],[f7331_D])).
fof(f7331_D,plain,(
  ( ! [X70,X68,X76,X74,X72,X71,X77,X75,X73] : (p(s(bool,sK137(X70,X71,X72,X73,X74))) | s(bool,'T_0') = s(bool,X68) | s(bool,X68) = s(bool,sK137(X75,X76,X73,X72,X77))) ) <=> ~$spl104),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl104])])).
fof(f7332,plain,(
  ( ! [X80,X78,X87,X85,X83,X81,X79,X86,X84,X82] : (p(s(bool,sK137(X80,X81,X82,X83,X84))) | s(bool,X78) = s(bool,sK137(X85,X86,X83,X82,X87)) | s(bool,'T_0') = s(bool,X79) | s(bool,'T_0') = s(bool,X78)) ) | $spl2),
  inference(subsumption_resolution,[],[f7296,f645])).
fof(f7296,plain,(
  ( ! [X80,X78,X87,X85,X83,X81,X79,X86,X84,X82] : (p(s(bool,X79)) | p(s(bool,sK137(X80,X81,X82,X83,X84))) | s(bool,X78) = s(bool,sK137(X85,X86,X83,X82,X87)) | s(bool,'T_0') = s(bool,X79) | s(bool,'T_0') = s(bool,X78)) ) | $spl2),
  inference(superposition,[],[f6055,f758])).
fof(f6055,plain,(
  ( ! [X39,X37,X35,X43,X41,X38,X36,X42,X40] : (p(s(bool,sK137(X35,X36,X37,X38,X39))) | p(s(bool,X43)) | s(bool,X43) = s(bool,sK137(X40,X41,X38,X37,X42))) )),
  inference(resolution,[],[f6050,f173])).
fof(f6050,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (~p(s(bool,sK137(X5,X6,X3,X2,X7))) | p(s(bool,sK137(X0,X1,X2,X3,X4)))) )),
  inference(equality_resolution,[],[f3689])).
fof(f3689,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1] : (s('type.ast.lit',X1) != s('type.ast.lit',X2) | p(s(bool,sK137(X3,X4,X2,X0,X5))) | ~p(s(bool,sK137(X6,X7,X0,X1,X8)))) )),
  inference(superposition,[],[f368,f367])).
fof(f7330,plain,(
  ( ! [X70,X68,X76,X74,X72,X71,X69,X77,X75,X73] : (p(s(bool,sK137(X70,X71,X72,X73,X74))) | s(bool,X68) = s(bool,sK137(X75,X76,X73,X72,X77)) | s(bool,'T_0') = s(bool,X68) | s(bool,'T_0') = s(bool,X69)) ) | $spl2),
  inference(subsumption_resolution,[],[f7295,f645])).
fof(f7295,plain,(
  ( ! [X70,X68,X76,X74,X72,X71,X69,X77,X75,X73] : (p(s(bool,X69)) | p(s(bool,sK137(X70,X71,X72,X73,X74))) | s(bool,X68) = s(bool,sK137(X75,X76,X73,X72,X77)) | s(bool,'T_0') = s(bool,X68) | s(bool,'T_0') = s(bool,X69)) ) | $spl2),
  inference(superposition,[],[f6055,f758])).
fof(f7324,plain,(
  ( ! [X146,X144,X142,X151,X149,X145,X143,X150,X148] : (p(s(bool,X148)) | s(bool,'T_0') = s(bool,sK137(X142,X143,X144,X145,X146)) | s(bool,X148) = s(bool,sK137(X149,X150,X145,X144,X151))) ) | $spl102),
  inference(cnf_transformation,[],[f7324_D])).
fof(f7324_D,plain,(
  ( ! [X146,X144,X142,X151,X149,X145,X143,X150,X148] : (p(s(bool,X148)) | s(bool,'T_0') = s(bool,sK137(X142,X143,X144,X145,X146)) | s(bool,X148) = s(bool,sK137(X149,X150,X145,X144,X151))) ) <=> ~$spl102),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl102])])).
fof(f7325,plain,(
  ( ! [X158,X156,X154,X152,X161,X159,X157,X155,X153,X160] : (p(s(bool,X158)) | s(bool,X158) = s(bool,sK137(X159,X160,X155,X154,X161)) | s(bool,'T_0') = s(bool,X157) | s(bool,'T_0') = s(bool,sK137(X152,X153,X154,X155,X156))) ) | $spl2),
  inference(subsumption_resolution,[],[f7281,f645])).
fof(f7281,plain,(
  ( ! [X158,X156,X154,X152,X161,X159,X157,X155,X153,X160] : (p(s(bool,X157)) | p(s(bool,X158)) | s(bool,X158) = s(bool,sK137(X159,X160,X155,X154,X161)) | s(bool,'T_0') = s(bool,X157) | s(bool,'T_0') = s(bool,sK137(X152,X153,X154,X155,X156))) ) | $spl2),
  inference(superposition,[],[f6055,f758])).
fof(f7323,plain,(
  ( ! [X146,X144,X142,X151,X149,X147,X145,X143,X150,X148] : (p(s(bool,X148)) | s(bool,X148) = s(bool,sK137(X149,X150,X145,X144,X151)) | s(bool,'T_0') = s(bool,sK137(X142,X143,X144,X145,X146)) | s(bool,'T_0') = s(bool,X147)) ) | $spl2),
  inference(subsumption_resolution,[],[f7280,f645])).
fof(f7280,plain,(
  ( ! [X146,X144,X142,X151,X149,X147,X145,X143,X150,X148] : (p(s(bool,X147)) | p(s(bool,X148)) | s(bool,X148) = s(bool,sK137(X149,X150,X145,X144,X151)) | s(bool,'T_0') = s(bool,sK137(X142,X143,X144,X145,X146)) | s(bool,'T_0') = s(bool,X147)) ) | $spl2),
  inference(superposition,[],[f6055,f758])).
fof(f7231,plain,(
  ( ! [X47,X52,X50,X48,X53,X49] : (sP20(X47,X52,X53) | s(bool,'T_0') = s(bool,happ(s(fun('type.exhSem.v',bool),happ(s(fun('type.conSem.v',fun('type.exhSem.v',bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.conSem.v',fun('type.exhSem.v',bool))),X47),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X48))),s('type.conSem.v',X49))),s('type.exhSem.v',X50))) | ~sP16(X52,X48,X50,X49)) ) | $spl100),
  inference(cnf_transformation,[],[f7231_D])).
fof(f7231_D,plain,(
  ( ! [X47,X52,X50,X48,X53,X49] : (sP20(X47,X52,X53) | s(bool,'T_0') = s(bool,happ(s(fun('type.exhSem.v',bool),happ(s(fun('type.conSem.v',fun('type.exhSem.v',bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.conSem.v',fun('type.exhSem.v',bool))),X47),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X48))),s('type.conSem.v',X49))),s('type.exhSem.v',X50))) | ~sP16(X52,X48,X50,X49)) ) <=> ~$spl100),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl100])])).
fof(f7232,plain,(
  ( ! [X59,X57,X54,X60,X58,X56,X55] : (sP20(X54,X59,X60) | ~sP16(X59,X55,X57,X56) | s(bool,'T_0') = s(bool,X58) | s(bool,'T_0') = s(bool,happ(s(fun('type.exhSem.v',bool),happ(s(fun('type.conSem.v',fun('type.exhSem.v',bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.conSem.v',fun('type.exhSem.v',bool))),X54),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X55))),s('type.conSem.v',X56))),s('type.exhSem.v',X57)))) ) | $spl2),
  inference(subsumption_resolution,[],[f7220,f645])).
fof(f7220,plain,(
  ( ! [X59,X57,X54,X60,X58,X56,X55] : (p(s(bool,X58)) | sP20(X54,X59,X60) | ~sP16(X59,X55,X57,X56) | s(bool,'T_0') = s(bool,X58) | s(bool,'T_0') = s(bool,happ(s(fun('type.exhSem.v',bool),happ(s(fun('type.conSem.v',fun('type.exhSem.v',bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.conSem.v',fun('type.exhSem.v',bool))),X54),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X55))),s('type.conSem.v',X56))),s('type.exhSem.v',X57)))) ) | $spl2),
  inference(superposition,[],[f316,f758])).
fof(f316,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (sP20(X0,X1,X2) | p(s(bool,happ(s(fun('type.exhSem.v',bool),happ(s(fun('type.conSem.v',fun('type.exhSem.v',bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.conSem.v',fun('type.exhSem.v',bool))),X0),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X3))),s('type.conSem.v',X4))),s('type.exhSem.v',X5)))) | ~sP16(X1,X3,X5,X4)) )),
  inference(cnf_transformation,[],[f139])).
fof(f7230,plain,(
  ( ! [X47,X52,X50,X48,X53,X51,X49] : (sP20(X47,X52,X53) | ~sP16(X52,X48,X50,X49) | s(bool,'T_0') = s(bool,happ(s(fun('type.exhSem.v',bool),happ(s(fun('type.conSem.v',fun('type.exhSem.v',bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.conSem.v',fun('type.exhSem.v',bool))),X47),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X48))),s('type.conSem.v',X49))),s('type.exhSem.v',X50))) | s(bool,'T_0') = s(bool,X51)) ) | $spl2),
  inference(subsumption_resolution,[],[f7219,f645])).
fof(f7219,plain,(
  ( ! [X47,X52,X50,X48,X53,X51,X49] : (p(s(bool,X51)) | sP20(X47,X52,X53) | ~sP16(X52,X48,X50,X49) | s(bool,'T_0') = s(bool,happ(s(fun('type.exhSem.v',bool),happ(s(fun('type.conSem.v',fun('type.exhSem.v',bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.conSem.v',fun('type.exhSem.v',bool))),X47),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X48))),s('type.conSem.v',X49))),s('type.exhSem.v',X50))) | s(bool,'T_0') = s(bool,X51)) ) | $spl2),
  inference(superposition,[],[f316,f758])).
fof(f7138,plain,(
  ( ! [X30,X33,X31,X32] : (s(bool,'F_0') = s(bool,X32) | s(bool,X30) = s(bool,X33) | s(bool,X32) = s(bool,X33) | s(bool,'T_0') = s(bool,X31) | s(bool,'T_0') = s(bool,X30)) ) | $spl2),
  inference(subsumption_resolution,[],[f7113,f645])).
fof(f7113,plain,(
  ( ! [X30,X33,X31,X32] : (p(s(bool,X31)) | s(bool,'F_0') = s(bool,X32) | s(bool,X30) = s(bool,X33) | s(bool,X32) = s(bool,X33) | s(bool,'T_0') = s(bool,X31) | s(bool,'T_0') = s(bool,X30)) ) | $spl2),
  inference(superposition,[],[f2347,f758])).
fof(f2347,plain,(
  ( ! [X6,X7,X5] : (p(s(bool,X7)) | s(bool,'F_0') = s(bool,X5) | s(bool,X6) = s(bool,X7) | s(bool,X5) = s(bool,X6)) )),
  inference(resolution,[],[f1561,f173])).
fof(f7136,plain,(
  ( ! [X28,X26,X29,X27] : (s(bool,'F_0') = s(bool,X28) | s(bool,X26) = s(bool,X29) | s(bool,X28) = s(bool,X29) | s(bool,'T_0') = s(bool,X26) | s(bool,'T_0') = s(bool,X27)) ) | $spl2),
  inference(subsumption_resolution,[],[f7112,f645])).
fof(f7112,plain,(
  ( ! [X28,X26,X29,X27] : (p(s(bool,X27)) | s(bool,'F_0') = s(bool,X28) | s(bool,X26) = s(bool,X29) | s(bool,X28) = s(bool,X29) | s(bool,'T_0') = s(bool,X26) | s(bool,'T_0') = s(bool,X27)) ) | $spl2),
  inference(superposition,[],[f2347,f758])).
fof(f7075,plain,(
  ( ! [X47,X52,X50,X48,X53,X49] : (sP13(X47,X52,X53) | s(bool,'T_0') = s(bool,happ(s(fun('type.exhSem.v',bool),happ(s(fun('type.conSem.v',fun('type.exhSem.v',bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.conSem.v',fun('type.exhSem.v',bool))),X47),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X48))),s('type.conSem.v',X49))),s('type.exhSem.v',X50))) | ~sP10(X52,X48,X50,X49)) ) | $spl96),
  inference(cnf_transformation,[],[f7075_D])).
fof(f7075_D,plain,(
  ( ! [X47,X52,X50,X48,X53,X49] : (sP13(X47,X52,X53) | s(bool,'T_0') = s(bool,happ(s(fun('type.exhSem.v',bool),happ(s(fun('type.conSem.v',fun('type.exhSem.v',bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.conSem.v',fun('type.exhSem.v',bool))),X47),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X48))),s('type.conSem.v',X49))),s('type.exhSem.v',X50))) | ~sP10(X52,X48,X50,X49)) ) <=> ~$spl96),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl96])])).
fof(f7076,plain,(
  ( ! [X59,X57,X54,X60,X58,X56,X55] : (sP13(X54,X59,X60) | ~sP10(X59,X55,X57,X56) | s(bool,'T_0') = s(bool,X58) | s(bool,'T_0') = s(bool,happ(s(fun('type.exhSem.v',bool),happ(s(fun('type.conSem.v',fun('type.exhSem.v',bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.conSem.v',fun('type.exhSem.v',bool))),X54),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X55))),s('type.conSem.v',X56))),s('type.exhSem.v',X57)))) ) | $spl2),
  inference(subsumption_resolution,[],[f7060,f645])).
fof(f7060,plain,(
  ( ! [X59,X57,X54,X60,X58,X56,X55] : (p(s(bool,X58)) | sP13(X54,X59,X60) | ~sP10(X59,X55,X57,X56) | s(bool,'T_0') = s(bool,X58) | s(bool,'T_0') = s(bool,happ(s(fun('type.exhSem.v',bool),happ(s(fun('type.conSem.v',fun('type.exhSem.v',bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.conSem.v',fun('type.exhSem.v',bool))),X54),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X55))),s('type.conSem.v',X56))),s('type.exhSem.v',X57)))) ) | $spl2),
  inference(superposition,[],[f263,f758])).
fof(f263,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (sP13(X0,X1,X2) | p(s(bool,happ(s(fun('type.exhSem.v',bool),happ(s(fun('type.conSem.v',fun('type.exhSem.v',bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.conSem.v',fun('type.exhSem.v',bool))),X0),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X3))),s('type.conSem.v',X4))),s('type.exhSem.v',X5)))) | ~sP10(X1,X3,X5,X4)) )),
  inference(cnf_transformation,[],[f113])).
fof(f7074,plain,(
  ( ! [X47,X52,X50,X48,X53,X51,X49] : (sP13(X47,X52,X53) | ~sP10(X52,X48,X50,X49) | s(bool,'T_0') = s(bool,happ(s(fun('type.exhSem.v',bool),happ(s(fun('type.conSem.v',fun('type.exhSem.v',bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.conSem.v',fun('type.exhSem.v',bool))),X47),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X48))),s('type.conSem.v',X49))),s('type.exhSem.v',X50))) | s(bool,'T_0') = s(bool,X51)) ) | $spl2),
  inference(subsumption_resolution,[],[f7059,f645])).
fof(f7059,plain,(
  ( ! [X47,X52,X50,X48,X53,X51,X49] : (p(s(bool,X51)) | sP13(X47,X52,X53) | ~sP10(X52,X48,X50,X49) | s(bool,'T_0') = s(bool,happ(s(fun('type.exhSem.v',bool),happ(s(fun('type.conSem.v',fun('type.exhSem.v',bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.conSem.v',fun('type.exhSem.v',bool))),X47),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X48))),s('type.conSem.v',X49))),s('type.exhSem.v',X50))) | s(bool,'T_0') = s(bool,X51)) ) | $spl2),
  inference(superposition,[],[f263,f758])).
fof(f6939,plain,(
  ( ! [X47,X52,X50,X48,X53,X49] : (sP13(X47,X52,X53) | s(bool,'T_0') = s(bool,happ(s(fun('type.exhSem.v',bool),happ(s(fun('type.conSem.v',fun('type.exhSem.v',bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.conSem.v',fun('type.exhSem.v',bool))),X47),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X48))),s('type.conSem.v',X49))),s('type.exhSem.v',X50))) | ~sP8(X53,X48,X50,X49)) ) | $spl94),
  inference(cnf_transformation,[],[f6939_D])).
fof(f6939_D,plain,(
  ( ! [X47,X52,X50,X48,X53,X49] : (sP13(X47,X52,X53) | s(bool,'T_0') = s(bool,happ(s(fun('type.exhSem.v',bool),happ(s(fun('type.conSem.v',fun('type.exhSem.v',bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.conSem.v',fun('type.exhSem.v',bool))),X47),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X48))),s('type.conSem.v',X49))),s('type.exhSem.v',X50))) | ~sP8(X53,X48,X50,X49)) ) <=> ~$spl94),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl94])])).
fof(f6940,plain,(
  ( ! [X59,X57,X54,X60,X58,X56,X55] : (sP13(X54,X59,X60) | ~sP8(X60,X55,X57,X56) | s(bool,'T_0') = s(bool,X58) | s(bool,'T_0') = s(bool,happ(s(fun('type.exhSem.v',bool),happ(s(fun('type.conSem.v',fun('type.exhSem.v',bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.conSem.v',fun('type.exhSem.v',bool))),X54),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X55))),s('type.conSem.v',X56))),s('type.exhSem.v',X57)))) ) | $spl2),
  inference(subsumption_resolution,[],[f6924,f645])).
fof(f6924,plain,(
  ( ! [X59,X57,X54,X60,X58,X56,X55] : (p(s(bool,X58)) | sP13(X54,X59,X60) | ~sP8(X60,X55,X57,X56) | s(bool,'T_0') = s(bool,X58) | s(bool,'T_0') = s(bool,happ(s(fun('type.exhSem.v',bool),happ(s(fun('type.conSem.v',fun('type.exhSem.v',bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.conSem.v',fun('type.exhSem.v',bool))),X54),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X55))),s('type.conSem.v',X56))),s('type.exhSem.v',X57)))) ) | $spl2),
  inference(superposition,[],[f261,f758])).
fof(f261,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (sP13(X0,X1,X2) | p(s(bool,happ(s(fun('type.exhSem.v',bool),happ(s(fun('type.conSem.v',fun('type.exhSem.v',bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.conSem.v',fun('type.exhSem.v',bool))),X0),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X3))),s('type.conSem.v',X4))),s('type.exhSem.v',X5)))) | ~sP8(X2,X3,X5,X4)) )),
  inference(cnf_transformation,[],[f113])).
fof(f6938,plain,(
  ( ! [X47,X52,X50,X48,X53,X51,X49] : (sP13(X47,X52,X53) | ~sP8(X53,X48,X50,X49) | s(bool,'T_0') = s(bool,happ(s(fun('type.exhSem.v',bool),happ(s(fun('type.conSem.v',fun('type.exhSem.v',bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.conSem.v',fun('type.exhSem.v',bool))),X47),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X48))),s('type.conSem.v',X49))),s('type.exhSem.v',X50))) | s(bool,'T_0') = s(bool,X51)) ) | $spl2),
  inference(subsumption_resolution,[],[f6923,f645])).
fof(f6923,plain,(
  ( ! [X47,X52,X50,X48,X53,X51,X49] : (p(s(bool,X51)) | sP13(X47,X52,X53) | ~sP8(X53,X48,X50,X49) | s(bool,'T_0') = s(bool,happ(s(fun('type.exhSem.v',bool),happ(s(fun('type.conSem.v',fun('type.exhSem.v',bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.conSem.v',fun('type.exhSem.v',bool))),X47),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X48))),s('type.conSem.v',X49))),s('type.exhSem.v',X50))) | s(bool,'T_0') = s(bool,X51)) ) | $spl2),
  inference(superposition,[],[f261,f758])).
fof(f6848,plain,(
  ( ! [X47,X52,X50,X48,X53,X49] : (sP13(X47,X52,X53) | s(bool,'T_0') = s(bool,happ(s(fun('type.exhSem.v',bool),happ(s(fun('type.conSem.v',fun('type.exhSem.v',bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.conSem.v',fun('type.exhSem.v',bool))),X47),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X48))),s('type.conSem.v',X49))),s('type.exhSem.v',X50))) | ~sP7(X53,X48,X50,X49)) ) | $spl92),
  inference(cnf_transformation,[],[f6848_D])).
fof(f6848_D,plain,(
  ( ! [X47,X52,X50,X48,X53,X49] : (sP13(X47,X52,X53) | s(bool,'T_0') = s(bool,happ(s(fun('type.exhSem.v',bool),happ(s(fun('type.conSem.v',fun('type.exhSem.v',bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.conSem.v',fun('type.exhSem.v',bool))),X47),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X48))),s('type.conSem.v',X49))),s('type.exhSem.v',X50))) | ~sP7(X53,X48,X50,X49)) ) <=> ~$spl92),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl92])])).
fof(f6849,plain,(
  ( ! [X59,X57,X54,X60,X58,X56,X55] : (sP13(X54,X59,X60) | ~sP7(X60,X55,X57,X56) | s(bool,'T_0') = s(bool,X58) | s(bool,'T_0') = s(bool,happ(s(fun('type.exhSem.v',bool),happ(s(fun('type.conSem.v',fun('type.exhSem.v',bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.conSem.v',fun('type.exhSem.v',bool))),X54),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X55))),s('type.conSem.v',X56))),s('type.exhSem.v',X57)))) ) | $spl2),
  inference(subsumption_resolution,[],[f6837,f645])).
fof(f6837,plain,(
  ( ! [X59,X57,X54,X60,X58,X56,X55] : (p(s(bool,X58)) | sP13(X54,X59,X60) | ~sP7(X60,X55,X57,X56) | s(bool,'T_0') = s(bool,X58) | s(bool,'T_0') = s(bool,happ(s(fun('type.exhSem.v',bool),happ(s(fun('type.conSem.v',fun('type.exhSem.v',bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.conSem.v',fun('type.exhSem.v',bool))),X54),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X55))),s('type.conSem.v',X56))),s('type.exhSem.v',X57)))) ) | $spl2),
  inference(superposition,[],[f260,f758])).
fof(f260,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (sP13(X0,X1,X2) | p(s(bool,happ(s(fun('type.exhSem.v',bool),happ(s(fun('type.conSem.v',fun('type.exhSem.v',bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.conSem.v',fun('type.exhSem.v',bool))),X0),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X3))),s('type.conSem.v',X4))),s('type.exhSem.v',X5)))) | ~sP7(X2,X3,X5,X4)) )),
  inference(cnf_transformation,[],[f113])).
fof(f6847,plain,(
  ( ! [X47,X52,X50,X48,X53,X51,X49] : (sP13(X47,X52,X53) | ~sP7(X53,X48,X50,X49) | s(bool,'T_0') = s(bool,happ(s(fun('type.exhSem.v',bool),happ(s(fun('type.conSem.v',fun('type.exhSem.v',bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.conSem.v',fun('type.exhSem.v',bool))),X47),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X48))),s('type.conSem.v',X49))),s('type.exhSem.v',X50))) | s(bool,'T_0') = s(bool,X51)) ) | $spl2),
  inference(subsumption_resolution,[],[f6836,f645])).
fof(f6836,plain,(
  ( ! [X47,X52,X50,X48,X53,X51,X49] : (p(s(bool,X51)) | sP13(X47,X52,X53) | ~sP7(X53,X48,X50,X49) | s(bool,'T_0') = s(bool,happ(s(fun('type.exhSem.v',bool),happ(s(fun('type.conSem.v',fun('type.exhSem.v',bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.conSem.v',fun('type.exhSem.v',bool))),X47),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X48))),s('type.conSem.v',X49))),s('type.exhSem.v',X50))) | s(bool,'T_0') = s(bool,X51)) ) | $spl2),
  inference(superposition,[],[f260,f758])).
fof(f6696,plain,(
  ( ! [X70,X78,X76,X74,X72,X71,X77,X73] : (~p(s(bool,sK137(X70,X71,X72,X73,X74))) | s(bool,'T_0') = s(bool,sK137(X76,X77,X72,X73,X78))) ) | $spl90),
  inference(cnf_transformation,[],[f6696_D])).
fof(f6696_D,plain,(
  ( ! [X70,X78,X76,X74,X72,X71,X77,X73] : (~p(s(bool,sK137(X70,X71,X72,X73,X74))) | s(bool,'T_0') = s(bool,sK137(X76,X77,X72,X73,X78))) ) <=> ~$spl90),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl90])])).
fof(f6714,plain,(
  ( ! [X389,X391,X385,X387,X388,X390,X384,X386,X392] : (~p(s(bool,sK137(X384,X385,X386,X387,X388))) | s(bool,'T_0') = s(bool,X389) | s(bool,'T_0') = s(bool,sK137(X390,X391,X386,X387,X392))) ) | ($spl2 | $spl7)),
  inference(subsumption_resolution,[],[f6625,f370])).
fof(f6625,plain,(
  ( ! [X389,X391,X385,X387,X388,X390,X384,X386,X392] : (s(bool,'F_0') != s(bool,X389) | ~p(s(bool,sK137(X384,X385,X386,X387,X388))) | s(bool,'T_0') = s(bool,X389) | s(bool,'T_0') = s(bool,sK137(X390,X391,X386,X387,X392))) ) | ($spl2 | $spl7)),
  inference(superposition,[],[f2342,f6228])).
fof(f6228,plain,(
  ( ! [X70,X68,X74,X72,X71,X69,X75,X73] : (s(bool,'F_0') = s(bool,sK137(X68,X69,X70,X71,X72)) | s(bool,'T_0') = s(bool,sK137(X73,X74,X70,X71,X75))) ) | $spl2),
  inference(resolution,[],[f6089,f645])).
fof(f6089,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (p(s(bool,sK137(X5,X6,X2,X3,X7))) | s(bool,'F_0') = s(bool,sK137(X0,X1,X2,X3,X4))) )),
  inference(resolution,[],[f6053,f6050])).
fof(f6053,plain,(
  ( ! [X24,X23,X21,X19,X25,X22,X20,X18] : (p(s(bool,sK137(X18,X19,X20,X21,X22))) | s(bool,'F_0') = s(bool,sK137(X23,X24,X21,X20,X25))) )),
  inference(resolution,[],[f6050,f1538])).
fof(f2342,plain,(
  ( ! [X19,X18] : (s(bool,X18) != s(bool,X19) | ~p(s(bool,X19)) | s(bool,'T_0') = s(bool,X18)) ) | $spl7),
  inference(subsumption_resolution,[],[f2329,f193])).
fof(f2329,plain,(
  ( ! [X19,X18] : (s(bool,X18) != s(bool,X19) | p(s(bool,'F_0')) | ~p(s(bool,X19)) | s(bool,'T_0') = s(bool,X18)) ) | $spl7),
  inference(superposition,[],[f1704,f370])).
fof(f1704,plain,(
  ( ! [X6,X7] : (s(bool,X6) != s(bool,X7) | p(s(bool,X7)) | ~p(s(bool,X6))) ) | $spl7),
  inference(subsumption_resolution,[],[f1685,f188])).
fof(f1685,plain,(
  ( ! [X6,X7] : (s(bool,X6) != s(bool,X7) | p(s(bool,X7)) | ~p(s(bool,'T_0')) | ~p(s(bool,X6))) ) | $spl7),
  inference(superposition,[],[f1556,f176])).
fof(f6415,plain,(
  ( ! [X335] : (s(bool,'F_0') != s(bool,X335)) ) | $spl86),
  inference(cnf_transformation,[],[f6415_D])).
fof(f6415_D,plain,(
  ( ! [X335] : (s(bool,'F_0') != s(bool,X335)) ) <=> ~$spl86),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl86])])).
fof(f6713,plain,(
  ( ! [X358,X364,X360,X362,X357,X359,X365,X361,X363] : (s(bool,'F_0') != s(bool,X362) | ~p(s(bool,sK137(X357,X358,X359,X360,X361))) | s(bool,'T_0') = s(bool,sK137(X363,X364,X359,X360,X365))) ) | ($spl2 | $spl7 | $spl10)),
  inference(subsumption_resolution,[],[f6622,f1478])).
fof(f6622,plain,(
  ( ! [X358,X364,X360,X362,X357,X359,X365,X361,X363] : (s(bool,'F_0') != s(bool,X362) | p(s(bool,X362)) | ~p(s(bool,sK137(X357,X358,X359,X360,X361))) | s(bool,'T_0') = s(bool,sK137(X363,X364,X359,X360,X365))) ) | ($spl2 | $spl7)),
  inference(superposition,[],[f1704,f6228])).
fof(f6708,plain,(
  ( ! [X191,X189,X187,X185,X192,X190,X188,X186,X193] : (s(bool,'F_0') = s(bool,X190) | ~p(s(bool,sK137(X185,X186,X187,X188,X189))) | s(bool,'T_0') = s(bool,sK137(X191,X192,X187,X188,X193))) ) | $spl2),
  inference(subsumption_resolution,[],[f6603,f1538])).
fof(f6603,plain,(
  ( ! [X191,X189,X187,X185,X192,X190,X188,X186,X193] : (s(bool,'F_0') = s(bool,X190) | ~p(s(bool,X190)) | ~p(s(bool,sK137(X185,X186,X187,X188,X189))) | s(bool,'T_0') = s(bool,sK137(X191,X192,X187,X188,X193))) ) | $spl2),
  inference(superposition,[],[f176,f6228])).
fof(f6707,plain,(
  ( ! [X177,X182,X180,X178,X176,X184,X183,X181,X179] : (s(bool,'F_0') = s(bool,X181) | ~p(s(bool,sK137(X176,X177,X178,X179,X180))) | s(bool,'T_0') = s(bool,sK137(X182,X183,X178,X179,X184))) ) | $spl2),
  inference(subsumption_resolution,[],[f6602,f1538])).
fof(f6602,plain,(
  ( ! [X177,X182,X180,X178,X176,X184,X183,X181,X179] : (s(bool,'F_0') = s(bool,X181) | ~p(s(bool,sK137(X176,X177,X178,X179,X180))) | ~p(s(bool,X181)) | s(bool,'T_0') = s(bool,sK137(X182,X183,X178,X179,X184))) ) | $spl2),
  inference(superposition,[],[f176,f6228])).
fof(f6697,plain,(
  ( ! [X80,X87,X85,X83,X81,X79,X86,X84,X82] : (s(bool,'F_0') = s(bool,X84) | s(bool,'T_0') = s(bool,sK137(X85,X86,X81,X82,X87)) | ~p(s(bool,sK137(X79,X80,X81,X82,X83)))) ) | $spl2),
  inference(subsumption_resolution,[],[f6560,f1538])).
fof(f6560,plain,(
  ( ! [X80,X87,X85,X83,X81,X79,X86,X84,X82] : (s(bool,'F_0') = s(bool,X84) | s(bool,'T_0') = s(bool,sK137(X85,X86,X81,X82,X87)) | ~p(s(bool,X84)) | ~p(s(bool,sK137(X79,X80,X81,X82,X83)))) ) | $spl2),
  inference(superposition,[],[f6228,f176])).
fof(f6695,plain,(
  ( ! [X70,X78,X76,X74,X72,X71,X77,X75,X73] : (s(bool,'F_0') = s(bool,X75) | s(bool,'T_0') = s(bool,sK137(X76,X77,X72,X73,X78)) | ~p(s(bool,sK137(X70,X71,X72,X73,X74)))) ) | $spl2),
  inference(subsumption_resolution,[],[f6559,f1538])).
fof(f6559,plain,(
  ( ! [X70,X78,X76,X74,X72,X71,X77,X75,X73] : (s(bool,'F_0') = s(bool,X75) | s(bool,'T_0') = s(bool,sK137(X76,X77,X72,X73,X78)) | ~p(s(bool,sK137(X70,X71,X72,X73,X74))) | ~p(s(bool,X75))) ) | $spl2),
  inference(superposition,[],[f6228,f176])).
fof(f6548,plain,(
  ( ! [X47,X52,X50,X48,X53,X49] : (sP13(X47,X52,X53) | s(bool,'T_0') = s(bool,happ(s(fun('type.exhSem.v',bool),happ(s(fun('type.conSem.v',fun('type.exhSem.v',bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.conSem.v',fun('type.exhSem.v',bool))),X47),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X48))),s('type.conSem.v',X49))),s('type.exhSem.v',X50))) | ~sP9(X52,X48,X50,X49)) ) | $spl88),
  inference(cnf_transformation,[],[f6548_D])).
fof(f6548_D,plain,(
  ( ! [X47,X52,X50,X48,X53,X49] : (sP13(X47,X52,X53) | s(bool,'T_0') = s(bool,happ(s(fun('type.exhSem.v',bool),happ(s(fun('type.conSem.v',fun('type.exhSem.v',bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.conSem.v',fun('type.exhSem.v',bool))),X47),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X48))),s('type.conSem.v',X49))),s('type.exhSem.v',X50))) | ~sP9(X52,X48,X50,X49)) ) <=> ~$spl88),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl88])])).
fof(f6549,plain,(
  ( ! [X59,X57,X54,X60,X58,X56,X55] : (sP13(X54,X59,X60) | ~sP9(X59,X55,X57,X56) | s(bool,'T_0') = s(bool,X58) | s(bool,'T_0') = s(bool,happ(s(fun('type.exhSem.v',bool),happ(s(fun('type.conSem.v',fun('type.exhSem.v',bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.conSem.v',fun('type.exhSem.v',bool))),X54),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X55))),s('type.conSem.v',X56))),s('type.exhSem.v',X57)))) ) | $spl2),
  inference(subsumption_resolution,[],[f6537,f645])).
fof(f6537,plain,(
  ( ! [X59,X57,X54,X60,X58,X56,X55] : (p(s(bool,X58)) | sP13(X54,X59,X60) | ~sP9(X59,X55,X57,X56) | s(bool,'T_0') = s(bool,X58) | s(bool,'T_0') = s(bool,happ(s(fun('type.exhSem.v',bool),happ(s(fun('type.conSem.v',fun('type.exhSem.v',bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.conSem.v',fun('type.exhSem.v',bool))),X54),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X55))),s('type.conSem.v',X56))),s('type.exhSem.v',X57)))) ) | $spl2),
  inference(superposition,[],[f259,f758])).
fof(f259,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (sP13(X0,X1,X2) | p(s(bool,happ(s(fun('type.exhSem.v',bool),happ(s(fun('type.conSem.v',fun('type.exhSem.v',bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.conSem.v',fun('type.exhSem.v',bool))),X0),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X3))),s('type.conSem.v',X4))),s('type.exhSem.v',X5)))) | ~sP9(X1,X3,X5,X4)) )),
  inference(cnf_transformation,[],[f113])).
fof(f6547,plain,(
  ( ! [X47,X52,X50,X48,X53,X51,X49] : (sP13(X47,X52,X53) | ~sP9(X52,X48,X50,X49) | s(bool,'T_0') = s(bool,happ(s(fun('type.exhSem.v',bool),happ(s(fun('type.conSem.v',fun('type.exhSem.v',bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.conSem.v',fun('type.exhSem.v',bool))),X47),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X48))),s('type.conSem.v',X49))),s('type.exhSem.v',X50))) | s(bool,'T_0') = s(bool,X51)) ) | $spl2),
  inference(subsumption_resolution,[],[f6536,f645])).
fof(f6536,plain,(
  ( ! [X47,X52,X50,X48,X53,X51,X49] : (p(s(bool,X51)) | sP13(X47,X52,X53) | ~sP9(X52,X48,X50,X49) | s(bool,'T_0') = s(bool,happ(s(fun('type.exhSem.v',bool),happ(s(fun('type.conSem.v',fun('type.exhSem.v',bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.conSem.v',fun('type.exhSem.v',bool))),X47),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X48))),s('type.conSem.v',X49))),s('type.exhSem.v',X50))) | s(bool,'T_0') = s(bool,X51)) ) | $spl2),
  inference(superposition,[],[f259,f758])).
fof(f6395,plain,(
  ( ! [X61,X57,X54,X62,X60,X58,X56,X55] : (~p(s(bool,sK137(X54,X55,X56,X57,X58))) | s(bool,'T_0') = s(bool,sK137(X60,X61,X57,X56,X62))) ) | $spl84),
  inference(cnf_transformation,[],[f6395_D])).
fof(f6395_D,plain,(
  ( ! [X61,X57,X54,X62,X60,X58,X56,X55] : (~p(s(bool,sK137(X54,X55,X56,X57,X58))) | s(bool,'T_0') = s(bool,sK137(X60,X61,X57,X56,X62))) ) <=> ~$spl84),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl84])])).
fof(f6416,plain,(
  ( ! [X358,X364,X360,X362,X357,X359,X365,X361,X363] : (~p(s(bool,sK137(X357,X358,X359,X360,X361))) | s(bool,'T_0') = s(bool,X362) | s(bool,'T_0') = s(bool,sK137(X363,X364,X360,X359,X365))) ) | $spl7),
  inference(subsumption_resolution,[],[f6325,f370])).
fof(f6325,plain,(
  ( ! [X358,X364,X360,X362,X357,X359,X365,X361,X363] : (s(bool,'F_0') != s(bool,X362) | ~p(s(bool,sK137(X357,X358,X359,X360,X361))) | s(bool,'T_0') = s(bool,X362) | s(bool,'T_0') = s(bool,sK137(X363,X364,X360,X359,X365))) ) | $spl7),
  inference(superposition,[],[f2342,f6120])).
fof(f6120,plain,(
  ( ! [X70,X68,X74,X72,X71,X69,X67,X73] : (s(bool,'F_0') = s(bool,sK137(X72,X73,X70,X69,X74)) | s(bool,'T_0') = s(bool,sK137(X67,X68,X69,X70,X71))) )),
  inference(subsumption_resolution,[],[f6108,f193])).
fof(f6108,plain,(
  ( ! [X70,X68,X74,X72,X71,X69,X67,X73] : (p(s(bool,'F_0')) | s(bool,'F_0') = s(bool,sK137(X72,X73,X70,X69,X74)) | s(bool,'T_0') = s(bool,sK137(X67,X68,X69,X70,X71))) )),
  inference(superposition,[],[f6053,f370])).
fof(f6414,plain,(
  ( ! [X333,X335,X331,X337,X332,X334,X330,X336,X338] : (s(bool,'F_0') != s(bool,X335) | ~p(s(bool,sK137(X330,X331,X332,X333,X334))) | s(bool,'T_0') = s(bool,sK137(X336,X337,X333,X332,X338))) ) | ($spl7 | $spl10)),
  inference(subsumption_resolution,[],[f6322,f1478])).
fof(f6322,plain,(
  ( ! [X333,X335,X331,X337,X332,X334,X330,X336,X338] : (s(bool,'F_0') != s(bool,X335) | p(s(bool,X335)) | ~p(s(bool,sK137(X330,X331,X332,X333,X334))) | s(bool,'T_0') = s(bool,sK137(X336,X337,X333,X332,X338))) ) | $spl7),
  inference(superposition,[],[f1704,f6120])).
fof(f6409,plain,(
  ( ! [X158,X165,X163,X161,X159,X166,X164,X162,X160] : (s(bool,'F_0') = s(bool,X163) | ~p(s(bool,sK137(X158,X159,X160,X161,X162))) | s(bool,'T_0') = s(bool,sK137(X164,X165,X161,X160,X166))) )),
  inference(subsumption_resolution,[],[f6303,f1538])).
fof(f6303,plain,(
  ( ! [X158,X165,X163,X161,X159,X166,X164,X162,X160] : (s(bool,'F_0') = s(bool,X163) | ~p(s(bool,X163)) | ~p(s(bool,sK137(X158,X159,X160,X161,X162))) | s(bool,'T_0') = s(bool,sK137(X164,X165,X161,X160,X166))) )),
  inference(superposition,[],[f176,f6120])).
fof(f6408,plain,(
  ( ! [X156,X154,X152,X151,X149,X157,X155,X153,X150] : (s(bool,'F_0') = s(bool,X154) | ~p(s(bool,sK137(X149,X150,X151,X152,X153))) | s(bool,'T_0') = s(bool,sK137(X155,X156,X152,X151,X157))) )),
  inference(subsumption_resolution,[],[f6302,f1538])).
fof(f6302,plain,(
  ( ! [X156,X154,X152,X151,X149,X157,X155,X153,X150] : (s(bool,'F_0') = s(bool,X154) | ~p(s(bool,sK137(X149,X150,X151,X152,X153))) | ~p(s(bool,X154)) | s(bool,'T_0') = s(bool,sK137(X155,X156,X152,X151,X157))) )),
  inference(superposition,[],[f176,f6120])).
fof(f6396,plain,(
  ( ! [X70,X68,X66,X64,X71,X69,X67,X65,X63] : (s(bool,'F_0') = s(bool,X68) | s(bool,'T_0') = s(bool,sK137(X69,X70,X66,X65,X71)) | ~p(s(bool,sK137(X63,X64,X65,X66,X67)))) )),
  inference(subsumption_resolution,[],[f6263,f1538])).
fof(f6263,plain,(
  ( ! [X70,X68,X66,X64,X71,X69,X67,X65,X63] : (s(bool,'F_0') = s(bool,X68) | s(bool,'T_0') = s(bool,sK137(X69,X70,X66,X65,X71)) | ~p(s(bool,X68)) | ~p(s(bool,sK137(X63,X64,X65,X66,X67)))) )),
  inference(superposition,[],[f6120,f176])).
fof(f6394,plain,(
  ( ! [X61,X59,X57,X54,X62,X60,X58,X56,X55] : (s(bool,'F_0') = s(bool,X59) | s(bool,'T_0') = s(bool,sK137(X60,X61,X57,X56,X62)) | ~p(s(bool,sK137(X54,X55,X56,X57,X58)))) )),
  inference(subsumption_resolution,[],[f6262,f1538])).
fof(f6262,plain,(
  ( ! [X61,X59,X57,X54,X62,X60,X58,X56,X55] : (s(bool,'F_0') = s(bool,X59) | s(bool,'T_0') = s(bool,sK137(X60,X61,X57,X56,X62)) | ~p(s(bool,sK137(X54,X55,X56,X57,X58))) | ~p(s(bool,X59))) )),
  inference(superposition,[],[f6120,f176])).
fof(f6252,plain,(
  ( ! [X92,X90,X88,X87,X85,X91,X86,X84] : (s(bool,'F_0') = s(bool,sK137(X90,X91,X86,X87,X92)) | s(bool,'T_0') = s(bool,sK137(X84,X85,X86,X87,X88))) ) | $spl82),
  inference(cnf_transformation,[],[f6252_D])).
fof(f6252_D,plain,(
  ( ! [X92,X90,X88,X87,X85,X91,X86,X84] : (s(bool,'F_0') = s(bool,sK137(X90,X91,X86,X87,X92)) | s(bool,'T_0') = s(bool,sK137(X84,X85,X86,X87,X88))) ) <=> ~$spl82),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl82])])).
fof(f6253,plain,(
  ( ! [X94,X101,X99,X97,X95,X93,X100,X98,X96] : (s(bool,'F_0') = s(bool,sK137(X99,X100,X95,X96,X101)) | s(bool,'T_0') = s(bool,X98) | s(bool,'T_0') = s(bool,sK137(X93,X94,X95,X96,X97))) ) | $spl2),
  inference(subsumption_resolution,[],[f6241,f645])).
fof(f6241,plain,(
  ( ! [X94,X101,X99,X97,X95,X93,X100,X98,X96] : (p(s(bool,X98)) | s(bool,'F_0') = s(bool,sK137(X99,X100,X95,X96,X101)) | s(bool,'T_0') = s(bool,X98) | s(bool,'T_0') = s(bool,sK137(X93,X94,X95,X96,X97))) ) | $spl2),
  inference(superposition,[],[f6089,f758])).
fof(f6251,plain,(
  ( ! [X92,X90,X88,X87,X85,X91,X89,X86,X84] : (s(bool,'F_0') = s(bool,sK137(X90,X91,X86,X87,X92)) | s(bool,'T_0') = s(bool,sK137(X84,X85,X86,X87,X88)) | s(bool,'T_0') = s(bool,X89)) ) | $spl2),
  inference(subsumption_resolution,[],[f6240,f645])).
fof(f6240,plain,(
  ( ! [X92,X90,X88,X87,X85,X91,X89,X86,X84] : (p(s(bool,X89)) | s(bool,'F_0') = s(bool,sK137(X90,X91,X86,X87,X92)) | s(bool,'T_0') = s(bool,sK137(X84,X85,X86,X87,X88)) | s(bool,'T_0') = s(bool,X89)) ) | $spl2),
  inference(superposition,[],[f6089,f758])).
fof(f6214,plain,(
  ( ! [X47,X52,X50,X48,X53,X49] : (sP6(X47,X52,X53) | s(bool,'T_0') = s(bool,happ(s(fun('type.exhSem.v',bool),happ(s(fun('type.conSem.v',fun('type.exhSem.v',bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.conSem.v',fun('type.exhSem.v',bool))),X47),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X48))),s('type.conSem.v',X49))),s('type.exhSem.v',X50))) | ~sP3(X52,X48,X50,X49)) ) | $spl80),
  inference(cnf_transformation,[],[f6214_D])).
fof(f6214_D,plain,(
  ( ! [X47,X52,X50,X48,X53,X49] : (sP6(X47,X52,X53) | s(bool,'T_0') = s(bool,happ(s(fun('type.exhSem.v',bool),happ(s(fun('type.conSem.v',fun('type.exhSem.v',bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.conSem.v',fun('type.exhSem.v',bool))),X47),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X48))),s('type.conSem.v',X49))),s('type.exhSem.v',X50))) | ~sP3(X52,X48,X50,X49)) ) <=> ~$spl80),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl80])])).
fof(f6215,plain,(
  ( ! [X59,X57,X54,X60,X58,X56,X55] : (sP6(X54,X59,X60) | ~sP3(X59,X55,X57,X56) | s(bool,'T_0') = s(bool,X58) | s(bool,'T_0') = s(bool,happ(s(fun('type.exhSem.v',bool),happ(s(fun('type.conSem.v',fun('type.exhSem.v',bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.conSem.v',fun('type.exhSem.v',bool))),X54),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X55))),s('type.conSem.v',X56))),s('type.exhSem.v',X57)))) ) | $spl2),
  inference(subsumption_resolution,[],[f6199,f645])).
fof(f6199,plain,(
  ( ! [X59,X57,X54,X60,X58,X56,X55] : (p(s(bool,X58)) | sP6(X54,X59,X60) | ~sP3(X59,X55,X57,X56) | s(bool,'T_0') = s(bool,X58) | s(bool,'T_0') = s(bool,happ(s(fun('type.exhSem.v',bool),happ(s(fun('type.conSem.v',fun('type.exhSem.v',bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.conSem.v',fun('type.exhSem.v',bool))),X54),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X55))),s('type.conSem.v',X56))),s('type.exhSem.v',X57)))) ) | $spl2),
  inference(superposition,[],[f206,f758])).
fof(f206,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (sP6(X0,X1,X2) | p(s(bool,happ(s(fun('type.exhSem.v',bool),happ(s(fun('type.conSem.v',fun('type.exhSem.v',bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.conSem.v',fun('type.exhSem.v',bool))),X0),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X3))),s('type.conSem.v',X4))),s('type.exhSem.v',X5)))) | ~sP3(X1,X3,X5,X4)) )),
  inference(cnf_transformation,[],[f87])).
fof(f6213,plain,(
  ( ! [X47,X52,X50,X48,X53,X51,X49] : (sP6(X47,X52,X53) | ~sP3(X52,X48,X50,X49) | s(bool,'T_0') = s(bool,happ(s(fun('type.exhSem.v',bool),happ(s(fun('type.conSem.v',fun('type.exhSem.v',bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.conSem.v',fun('type.exhSem.v',bool))),X47),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X48))),s('type.conSem.v',X49))),s('type.exhSem.v',X50))) | s(bool,'T_0') = s(bool,X51)) ) | $spl2),
  inference(subsumption_resolution,[],[f6198,f645])).
fof(f6198,plain,(
  ( ! [X47,X52,X50,X48,X53,X51,X49] : (p(s(bool,X51)) | sP6(X47,X52,X53) | ~sP3(X52,X48,X50,X49) | s(bool,'T_0') = s(bool,happ(s(fun('type.exhSem.v',bool),happ(s(fun('type.conSem.v',fun('type.exhSem.v',bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.conSem.v',fun('type.exhSem.v',bool))),X47),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X48))),s('type.conSem.v',X49))),s('type.exhSem.v',X50))) | s(bool,'T_0') = s(bool,X51)) ) | $spl2),
  inference(superposition,[],[f206,f758])).
fof(f6122,plain,(
  ( ! [X92,X90,X88,X87,X85,X91,X86,X84] : (s(bool,'F_0') = s(bool,sK137(X90,X91,X87,X86,X92)) | s(bool,'T_0') = s(bool,sK137(X84,X85,X86,X87,X88))) ) | $spl78),
  inference(cnf_transformation,[],[f6122_D])).
fof(f6122_D,plain,(
  ( ! [X92,X90,X88,X87,X85,X91,X86,X84] : (s(bool,'F_0') = s(bool,sK137(X90,X91,X87,X86,X92)) | s(bool,'T_0') = s(bool,sK137(X84,X85,X86,X87,X88))) ) <=> ~$spl78),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl78])])).
fof(f6123,plain,(
  ( ! [X94,X101,X99,X97,X95,X93,X100,X98,X96] : (s(bool,'F_0') = s(bool,sK137(X99,X100,X96,X95,X101)) | s(bool,'T_0') = s(bool,X98) | s(bool,'T_0') = s(bool,sK137(X93,X94,X95,X96,X97))) ) | $spl2),
  inference(subsumption_resolution,[],[f6111,f645])).
fof(f6111,plain,(
  ( ! [X94,X101,X99,X97,X95,X93,X100,X98,X96] : (p(s(bool,X98)) | s(bool,'F_0') = s(bool,sK137(X99,X100,X96,X95,X101)) | s(bool,'T_0') = s(bool,X98) | s(bool,'T_0') = s(bool,sK137(X93,X94,X95,X96,X97))) ) | $spl2),
  inference(superposition,[],[f6053,f758])).
fof(f6121,plain,(
  ( ! [X92,X90,X88,X87,X85,X91,X89,X86,X84] : (s(bool,'F_0') = s(bool,sK137(X90,X91,X87,X86,X92)) | s(bool,'T_0') = s(bool,sK137(X84,X85,X86,X87,X88)) | s(bool,'T_0') = s(bool,X89)) ) | $spl2),
  inference(subsumption_resolution,[],[f6110,f645])).
fof(f6110,plain,(
  ( ! [X92,X90,X88,X87,X85,X91,X89,X86,X84] : (p(s(bool,X89)) | s(bool,'F_0') = s(bool,sK137(X90,X91,X87,X86,X92)) | s(bool,'T_0') = s(bool,sK137(X84,X85,X86,X87,X88)) | s(bool,'T_0') = s(bool,X89)) ) | $spl2),
  inference(superposition,[],[f6053,f758])).
fof(f6087,plain,(
  ( ! [X134,X132,X140,X138,X136,X135,X133,X139] : (p(s(bool,sK137(X138,X139,X135,X134,X140))) | s(bool,'F_0') = s(bool,sK137(X132,X133,X134,X135,X136))) ) | $spl76),
  inference(cnf_transformation,[],[f6087_D])).
fof(f6087_D,plain,(
  ( ! [X134,X132,X140,X138,X136,X135,X133,X139] : (p(s(bool,sK137(X138,X139,X135,X134,X140))) | s(bool,'F_0') = s(bool,sK137(X132,X133,X134,X135,X136))) ) <=> ~$spl76),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl76])])).
fof(f6088,plain,(
  ( ! [X146,X144,X142,X149,X147,X145,X143,X141,X148] : (p(s(bool,sK137(X147,X148,X144,X143,X149))) | s(bool,'F_0') = s(bool,X146) | s(bool,'F_0') = s(bool,sK137(X141,X142,X143,X144,X145))) )),
  inference(subsumption_resolution,[],[f6073,f1538])).
fof(f6073,plain,(
  ( ! [X146,X144,X142,X149,X147,X145,X143,X141,X148] : (~p(s(bool,X146)) | p(s(bool,sK137(X147,X148,X144,X143,X149))) | s(bool,'F_0') = s(bool,X146) | s(bool,'F_0') = s(bool,sK137(X141,X142,X143,X144,X145))) )),
  inference(superposition,[],[f6050,f2345])).
fof(f6086,plain,(
  ( ! [X134,X132,X140,X138,X136,X135,X133,X139,X137] : (p(s(bool,sK137(X138,X139,X135,X134,X140))) | s(bool,'F_0') = s(bool,sK137(X132,X133,X134,X135,X136)) | s(bool,'F_0') = s(bool,X137)) )),
  inference(subsumption_resolution,[],[f6072,f1538])).
fof(f6072,plain,(
  ( ! [X134,X132,X140,X138,X136,X135,X133,X139,X137] : (~p(s(bool,X137)) | p(s(bool,sK137(X138,X139,X135,X134,X140))) | s(bool,'F_0') = s(bool,sK137(X132,X133,X134,X135,X136)) | s(bool,'F_0') = s(bool,X137)) )),
  inference(superposition,[],[f6050,f2345])).
fof(f6041,plain,(
  ( ! [X47,X52,X50,X48,X53,X49] : (sP6(X47,X52,X53) | s(bool,'T_0') = s(bool,happ(s(fun('type.exhSem.v',bool),happ(s(fun('type.conSem.v',fun('type.exhSem.v',bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.conSem.v',fun('type.exhSem.v',bool))),X47),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X48))),s('type.conSem.v',X49))),s('type.exhSem.v',X50))) | ~sP1(X53,X48,X50,X49)) ) | $spl74),
  inference(cnf_transformation,[],[f6041_D])).
fof(f6041_D,plain,(
  ( ! [X47,X52,X50,X48,X53,X49] : (sP6(X47,X52,X53) | s(bool,'T_0') = s(bool,happ(s(fun('type.exhSem.v',bool),happ(s(fun('type.conSem.v',fun('type.exhSem.v',bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.conSem.v',fun('type.exhSem.v',bool))),X47),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X48))),s('type.conSem.v',X49))),s('type.exhSem.v',X50))) | ~sP1(X53,X48,X50,X49)) ) <=> ~$spl74),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl74])])).
fof(f6042,plain,(
  ( ! [X59,X57,X54,X60,X58,X56,X55] : (sP6(X54,X59,X60) | ~sP1(X60,X55,X57,X56) | s(bool,'T_0') = s(bool,X58) | s(bool,'T_0') = s(bool,happ(s(fun('type.exhSem.v',bool),happ(s(fun('type.conSem.v',fun('type.exhSem.v',bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.conSem.v',fun('type.exhSem.v',bool))),X54),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X55))),s('type.conSem.v',X56))),s('type.exhSem.v',X57)))) ) | $spl2),
  inference(subsumption_resolution,[],[f6026,f645])).
fof(f6026,plain,(
  ( ! [X59,X57,X54,X60,X58,X56,X55] : (p(s(bool,X58)) | sP6(X54,X59,X60) | ~sP1(X60,X55,X57,X56) | s(bool,'T_0') = s(bool,X58) | s(bool,'T_0') = s(bool,happ(s(fun('type.exhSem.v',bool),happ(s(fun('type.conSem.v',fun('type.exhSem.v',bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.conSem.v',fun('type.exhSem.v',bool))),X54),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X55))),s('type.conSem.v',X56))),s('type.exhSem.v',X57)))) ) | $spl2),
  inference(superposition,[],[f204,f758])).
fof(f204,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (sP6(X0,X1,X2) | p(s(bool,happ(s(fun('type.exhSem.v',bool),happ(s(fun('type.conSem.v',fun('type.exhSem.v',bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.conSem.v',fun('type.exhSem.v',bool))),X0),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X3))),s('type.conSem.v',X4))),s('type.exhSem.v',X5)))) | ~sP1(X2,X3,X5,X4)) )),
  inference(cnf_transformation,[],[f87])).
fof(f6040,plain,(
  ( ! [X47,X52,X50,X48,X53,X51,X49] : (sP6(X47,X52,X53) | ~sP1(X53,X48,X50,X49) | s(bool,'T_0') = s(bool,happ(s(fun('type.exhSem.v',bool),happ(s(fun('type.conSem.v',fun('type.exhSem.v',bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.conSem.v',fun('type.exhSem.v',bool))),X47),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X48))),s('type.conSem.v',X49))),s('type.exhSem.v',X50))) | s(bool,'T_0') = s(bool,X51)) ) | $spl2),
  inference(subsumption_resolution,[],[f6025,f645])).
fof(f6025,plain,(
  ( ! [X47,X52,X50,X48,X53,X51,X49] : (p(s(bool,X51)) | sP6(X47,X52,X53) | ~sP1(X53,X48,X50,X49) | s(bool,'T_0') = s(bool,happ(s(fun('type.exhSem.v',bool),happ(s(fun('type.conSem.v',fun('type.exhSem.v',bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.conSem.v',fun('type.exhSem.v',bool))),X47),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X48))),s('type.conSem.v',X49))),s('type.exhSem.v',X50))) | s(bool,'T_0') = s(bool,X51)) ) | $spl2),
  inference(superposition,[],[f204,f758])).
fof(f5947,plain,(
  ( ! [X156,X154,X151,X149,X147,X155,X153,X150,X148] : (~p(s(bool,sK137(X153,X154,X149,X155,X156))) | s(bool,'F_0') = s(bool,sK137(X147,X148,X149,X150,X151)) | s('type.ast.lit',X150) = s('type.ast.lit',X155)) ) | $spl72),
  inference(cnf_transformation,[],[f5947_D])).
fof(f5947_D,plain,(
  ( ! [X156,X154,X151,X149,X147,X155,X153,X150,X148] : (~p(s(bool,sK137(X153,X154,X149,X155,X156))) | s(bool,'F_0') = s(bool,sK137(X147,X148,X149,X150,X151)) | s('type.ast.lit',X150) = s('type.ast.lit',X155)) ) <=> ~$spl72),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl72])])).
fof(f5948,plain,(
  ( ! [X158,X165,X163,X161,X159,X157,X166,X164,X162,X160] : (~p(s(bool,sK137(X163,X164,X159,X165,X166))) | s('type.ast.lit',X160) = s('type.ast.lit',X165) | s(bool,'F_0') = s(bool,X162) | s(bool,'F_0') = s(bool,sK137(X157,X158,X159,X160,X161))) )),
  inference(subsumption_resolution,[],[f5937,f1538])).
fof(f5937,plain,(
  ( ! [X158,X165,X163,X161,X159,X157,X166,X164,X162,X160] : (~p(s(bool,X162)) | ~p(s(bool,sK137(X163,X164,X159,X165,X166))) | s('type.ast.lit',X160) = s('type.ast.lit',X165) | s(bool,'F_0') = s(bool,X162) | s(bool,'F_0') = s(bool,sK137(X157,X158,X159,X160,X161))) )),
  inference(superposition,[],[f3614,f2345])).
fof(f3614,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1] : (~p(s(bool,sK137(X6,X7,X0,X1,X8))) | ~p(s(bool,sK137(X3,X4,X0,X2,X5))) | s('type.ast.lit',X1) = s('type.ast.lit',X2)) )),
  inference(superposition,[],[f367,f367])).
fof(f5946,plain,(
  ( ! [X156,X154,X152,X151,X149,X147,X155,X153,X150,X148] : (~p(s(bool,sK137(X153,X154,X149,X155,X156))) | s('type.ast.lit',X150) = s('type.ast.lit',X155) | s(bool,'F_0') = s(bool,sK137(X147,X148,X149,X150,X151)) | s(bool,'F_0') = s(bool,X152)) )),
  inference(subsumption_resolution,[],[f5936,f1538])).
fof(f5936,plain,(
  ( ! [X156,X154,X152,X151,X149,X147,X155,X153,X150,X148] : (~p(s(bool,X152)) | ~p(s(bool,sK137(X153,X154,X149,X155,X156))) | s('type.ast.lit',X150) = s('type.ast.lit',X155) | s(bool,'F_0') = s(bool,sK137(X147,X148,X149,X150,X151)) | s(bool,'F_0') = s(bool,X152)) )),
  inference(superposition,[],[f3614,f2345])).
fof(f5913,plain,(
  ( ! [X156,X154,X151,X149,X147,X155,X153,X150,X148] : (~p(s(bool,sK137(X153,X154,X155,X150,X156))) | s(bool,'F_0') = s(bool,sK137(X147,X148,X149,X150,X151)) | s('type.ast.lit',X149) = s('type.ast.lit',X155)) ) | $spl70),
  inference(cnf_transformation,[],[f5913_D])).
fof(f5913_D,plain,(
  ( ! [X156,X154,X151,X149,X147,X155,X153,X150,X148] : (~p(s(bool,sK137(X153,X154,X155,X150,X156))) | s(bool,'F_0') = s(bool,sK137(X147,X148,X149,X150,X151)) | s('type.ast.lit',X149) = s('type.ast.lit',X155)) ) <=> ~$spl70),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl70])])).
fof(f5914,plain,(
  ( ! [X158,X165,X163,X161,X159,X157,X166,X164,X162,X160] : (~p(s(bool,sK137(X163,X164,X165,X160,X166))) | s('type.ast.lit',X159) = s('type.ast.lit',X165) | s(bool,'F_0') = s(bool,X162) | s(bool,'F_0') = s(bool,sK137(X157,X158,X159,X160,X161))) )),
  inference(subsumption_resolution,[],[f5903,f1538])).
fof(f5903,plain,(
  ( ! [X158,X165,X163,X161,X159,X157,X166,X164,X162,X160] : (~p(s(bool,X162)) | ~p(s(bool,sK137(X163,X164,X165,X160,X166))) | s('type.ast.lit',X159) = s('type.ast.lit',X165) | s(bool,'F_0') = s(bool,X162) | s(bool,'F_0') = s(bool,sK137(X157,X158,X159,X160,X161))) )),
  inference(superposition,[],[f3613,f2345])).
fof(f3613,plain,(
  ( ! [X14,X12,X10,X17,X15,X13,X11,X9,X16] : (~p(s(bool,sK137(X15,X16,X10,X9,X17))) | ~p(s(bool,sK137(X12,X13,X11,X9,X14))) | s('type.ast.lit',X10) = s('type.ast.lit',X11)) )),
  inference(superposition,[],[f367,f367])).
fof(f5912,plain,(
  ( ! [X156,X154,X152,X151,X149,X147,X155,X153,X150,X148] : (~p(s(bool,sK137(X153,X154,X155,X150,X156))) | s('type.ast.lit',X149) = s('type.ast.lit',X155) | s(bool,'F_0') = s(bool,sK137(X147,X148,X149,X150,X151)) | s(bool,'F_0') = s(bool,X152)) )),
  inference(subsumption_resolution,[],[f5902,f1538])).
fof(f5902,plain,(
  ( ! [X156,X154,X152,X151,X149,X147,X155,X153,X150,X148] : (~p(s(bool,X152)) | ~p(s(bool,sK137(X153,X154,X155,X150,X156))) | s('type.ast.lit',X149) = s('type.ast.lit',X155) | s(bool,'F_0') = s(bool,sK137(X147,X148,X149,X150,X151)) | s(bool,'F_0') = s(bool,X152)) )),
  inference(superposition,[],[f3613,f2345])).
fof(f5874,plain,(
  ( ! [X156,X154,X151,X149,X147,X155,X153,X150,X148] : (~p(s(bool,sK137(X153,X154,X155,X149,X156))) | s(bool,'F_0') = s(bool,sK137(X147,X148,X149,X150,X151)) | s('type.ast.lit',X150) = s('type.ast.lit',X155)) ) | $spl68),
  inference(cnf_transformation,[],[f5874_D])).
fof(f5874_D,plain,(
  ( ! [X156,X154,X151,X149,X147,X155,X153,X150,X148] : (~p(s(bool,sK137(X153,X154,X155,X149,X156))) | s(bool,'F_0') = s(bool,sK137(X147,X148,X149,X150,X151)) | s('type.ast.lit',X150) = s('type.ast.lit',X155)) ) <=> ~$spl68),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl68])])).
fof(f5875,plain,(
  ( ! [X158,X165,X163,X161,X159,X157,X166,X164,X162,X160] : (~p(s(bool,sK137(X163,X164,X165,X159,X166))) | s('type.ast.lit',X160) = s('type.ast.lit',X165) | s(bool,'F_0') = s(bool,X162) | s(bool,'F_0') = s(bool,sK137(X157,X158,X159,X160,X161))) )),
  inference(subsumption_resolution,[],[f5864,f1538])).
fof(f5864,plain,(
  ( ! [X158,X165,X163,X161,X159,X157,X166,X164,X162,X160] : (~p(s(bool,X162)) | ~p(s(bool,sK137(X163,X164,X165,X159,X166))) | s('type.ast.lit',X160) = s('type.ast.lit',X165) | s(bool,'F_0') = s(bool,X162) | s(bool,'F_0') = s(bool,sK137(X157,X158,X159,X160,X161))) )),
  inference(superposition,[],[f3612,f2345])).
fof(f3612,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1] : (~p(s(bool,sK137(X6,X7,X0,X1,X8))) | ~p(s(bool,sK137(X3,X4,X2,X0,X5))) | s('type.ast.lit',X1) = s('type.ast.lit',X2)) )),
  inference(superposition,[],[f367,f367])).
fof(f5873,plain,(
  ( ! [X156,X154,X152,X151,X149,X147,X155,X153,X150,X148] : (~p(s(bool,sK137(X153,X154,X155,X149,X156))) | s('type.ast.lit',X150) = s('type.ast.lit',X155) | s(bool,'F_0') = s(bool,sK137(X147,X148,X149,X150,X151)) | s(bool,'F_0') = s(bool,X152)) )),
  inference(subsumption_resolution,[],[f5863,f1538])).
fof(f5863,plain,(
  ( ! [X156,X154,X152,X151,X149,X147,X155,X153,X150,X148] : (~p(s(bool,X152)) | ~p(s(bool,sK137(X153,X154,X155,X149,X156))) | s('type.ast.lit',X150) = s('type.ast.lit',X155) | s(bool,'F_0') = s(bool,sK137(X147,X148,X149,X150,X151)) | s(bool,'F_0') = s(bool,X152)) )),
  inference(superposition,[],[f3612,f2345])).
fof(f5837,plain,(
  ( ! [X47,X52,X50,X48,X53,X49] : (sP6(X47,X52,X53) | s(bool,'T_0') = s(bool,happ(s(fun('type.exhSem.v',bool),happ(s(fun('type.conSem.v',fun('type.exhSem.v',bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.conSem.v',fun('type.exhSem.v',bool))),X47),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X48))),s('type.conSem.v',X49))),s('type.exhSem.v',X50))) | ~sP0(X53,X48,X50,X49)) ) | $spl66),
  inference(cnf_transformation,[],[f5837_D])).
fof(f5837_D,plain,(
  ( ! [X47,X52,X50,X48,X53,X49] : (sP6(X47,X52,X53) | s(bool,'T_0') = s(bool,happ(s(fun('type.exhSem.v',bool),happ(s(fun('type.conSem.v',fun('type.exhSem.v',bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.conSem.v',fun('type.exhSem.v',bool))),X47),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X48))),s('type.conSem.v',X49))),s('type.exhSem.v',X50))) | ~sP0(X53,X48,X50,X49)) ) <=> ~$spl66),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl66])])).
fof(f5838,plain,(
  ( ! [X59,X57,X54,X60,X58,X56,X55] : (sP6(X54,X59,X60) | ~sP0(X60,X55,X57,X56) | s(bool,'T_0') = s(bool,X58) | s(bool,'T_0') = s(bool,happ(s(fun('type.exhSem.v',bool),happ(s(fun('type.conSem.v',fun('type.exhSem.v',bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.conSem.v',fun('type.exhSem.v',bool))),X54),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X55))),s('type.conSem.v',X56))),s('type.exhSem.v',X57)))) ) | $spl2),
  inference(subsumption_resolution,[],[f5826,f645])).
fof(f5826,plain,(
  ( ! [X59,X57,X54,X60,X58,X56,X55] : (p(s(bool,X58)) | sP6(X54,X59,X60) | ~sP0(X60,X55,X57,X56) | s(bool,'T_0') = s(bool,X58) | s(bool,'T_0') = s(bool,happ(s(fun('type.exhSem.v',bool),happ(s(fun('type.conSem.v',fun('type.exhSem.v',bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.conSem.v',fun('type.exhSem.v',bool))),X54),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X55))),s('type.conSem.v',X56))),s('type.exhSem.v',X57)))) ) | $spl2),
  inference(superposition,[],[f203,f758])).
fof(f203,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (sP6(X0,X1,X2) | p(s(bool,happ(s(fun('type.exhSem.v',bool),happ(s(fun('type.conSem.v',fun('type.exhSem.v',bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.conSem.v',fun('type.exhSem.v',bool))),X0),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X3))),s('type.conSem.v',X4))),s('type.exhSem.v',X5)))) | ~sP0(X2,X3,X5,X4)) )),
  inference(cnf_transformation,[],[f87])).
fof(f5836,plain,(
  ( ! [X47,X52,X50,X48,X53,X51,X49] : (sP6(X47,X52,X53) | ~sP0(X53,X48,X50,X49) | s(bool,'T_0') = s(bool,happ(s(fun('type.exhSem.v',bool),happ(s(fun('type.conSem.v',fun('type.exhSem.v',bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.conSem.v',fun('type.exhSem.v',bool))),X47),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X48))),s('type.conSem.v',X49))),s('type.exhSem.v',X50))) | s(bool,'T_0') = s(bool,X51)) ) | $spl2),
  inference(subsumption_resolution,[],[f5825,f645])).
fof(f5825,plain,(
  ( ! [X47,X52,X50,X48,X53,X51,X49] : (p(s(bool,X51)) | sP6(X47,X52,X53) | ~sP0(X53,X48,X50,X49) | s(bool,'T_0') = s(bool,happ(s(fun('type.exhSem.v',bool),happ(s(fun('type.conSem.v',fun('type.exhSem.v',bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.conSem.v',fun('type.exhSem.v',bool))),X47),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X48))),s('type.conSem.v',X49))),s('type.exhSem.v',X50))) | s(bool,'T_0') = s(bool,X51)) ) | $spl2),
  inference(superposition,[],[f203,f758])).
fof(f5739,plain,(
  ( ! [X47,X52,X50,X48,X53,X49] : (sP6(X47,X52,X53) | s(bool,'T_0') = s(bool,happ(s(fun('type.exhSem.v',bool),happ(s(fun('type.conSem.v',fun('type.exhSem.v',bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.conSem.v',fun('type.exhSem.v',bool))),X47),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X48))),s('type.conSem.v',X49))),s('type.exhSem.v',X50))) | ~sP2(X52,X48,X50,X49)) ) | $spl64),
  inference(cnf_transformation,[],[f5739_D])).
fof(f5739_D,plain,(
  ( ! [X47,X52,X50,X48,X53,X49] : (sP6(X47,X52,X53) | s(bool,'T_0') = s(bool,happ(s(fun('type.exhSem.v',bool),happ(s(fun('type.conSem.v',fun('type.exhSem.v',bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.conSem.v',fun('type.exhSem.v',bool))),X47),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X48))),s('type.conSem.v',X49))),s('type.exhSem.v',X50))) | ~sP2(X52,X48,X50,X49)) ) <=> ~$spl64),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl64])])).
fof(f5740,plain,(
  ( ! [X59,X57,X54,X60,X58,X56,X55] : (sP6(X54,X59,X60) | ~sP2(X59,X55,X57,X56) | s(bool,'T_0') = s(bool,X58) | s(bool,'T_0') = s(bool,happ(s(fun('type.exhSem.v',bool),happ(s(fun('type.conSem.v',fun('type.exhSem.v',bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.conSem.v',fun('type.exhSem.v',bool))),X54),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X55))),s('type.conSem.v',X56))),s('type.exhSem.v',X57)))) ) | $spl2),
  inference(subsumption_resolution,[],[f5728,f645])).
fof(f5728,plain,(
  ( ! [X59,X57,X54,X60,X58,X56,X55] : (p(s(bool,X58)) | sP6(X54,X59,X60) | ~sP2(X59,X55,X57,X56) | s(bool,'T_0') = s(bool,X58) | s(bool,'T_0') = s(bool,happ(s(fun('type.exhSem.v',bool),happ(s(fun('type.conSem.v',fun('type.exhSem.v',bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.conSem.v',fun('type.exhSem.v',bool))),X54),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X55))),s('type.conSem.v',X56))),s('type.exhSem.v',X57)))) ) | $spl2),
  inference(superposition,[],[f202,f758])).
fof(f202,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (sP6(X0,X1,X2) | p(s(bool,happ(s(fun('type.exhSem.v',bool),happ(s(fun('type.conSem.v',fun('type.exhSem.v',bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.conSem.v',fun('type.exhSem.v',bool))),X0),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X3))),s('type.conSem.v',X4))),s('type.exhSem.v',X5)))) | ~sP2(X1,X3,X5,X4)) )),
  inference(cnf_transformation,[],[f87])).
fof(f5738,plain,(
  ( ! [X47,X52,X50,X48,X53,X51,X49] : (sP6(X47,X52,X53) | ~sP2(X52,X48,X50,X49) | s(bool,'T_0') = s(bool,happ(s(fun('type.exhSem.v',bool),happ(s(fun('type.conSem.v',fun('type.exhSem.v',bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.conSem.v',fun('type.exhSem.v',bool))),X47),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X48))),s('type.conSem.v',X49))),s('type.exhSem.v',X50))) | s(bool,'T_0') = s(bool,X51)) ) | $spl2),
  inference(subsumption_resolution,[],[f5727,f645])).
fof(f5727,plain,(
  ( ! [X47,X52,X50,X48,X53,X51,X49] : (p(s(bool,X51)) | sP6(X47,X52,X53) | ~sP2(X52,X48,X50,X49) | s(bool,'T_0') = s(bool,happ(s(fun('type.exhSem.v',bool),happ(s(fun('type.conSem.v',fun('type.exhSem.v',bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.conSem.v',fun('type.exhSem.v',bool))),X47),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X48))),s('type.conSem.v',X49))),s('type.exhSem.v',X50))) | s(bool,'T_0') = s(bool,X51)) ) | $spl2),
  inference(superposition,[],[f202,f758])).
fof(f5641,plain,(
  ( ! [X28,X26,X27] : (~sP13(sK96(X28,X27,X26),sK97(X28,X27,X26),sK98(X28,X27,X26)) | s(bool,'T_0') = s(bool,'const.dec_to_exhProof.env_rel_3'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X26),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X27),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X28)))) ) | $spl62),
  inference(cnf_transformation,[],[f5641_D])).
fof(f5641_D,plain,(
  ( ! [X28,X26,X27] : (~sP13(sK96(X28,X27,X26),sK97(X28,X27,X26),sK98(X28,X27,X26)) | s(bool,'T_0') = s(bool,'const.dec_to_exhProof.env_rel_3'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X26),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X27),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X28)))) ) <=> ~$spl62),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl62])])).
fof(f5642,plain,(
  ( ! [X30,X33,X31,X32] : (~sP13(sK96(X32,X31,X30),sK97(X32,X31,X30),sK98(X32,X31,X30)) | s(bool,'T_0') = s(bool,X33) | s(bool,'T_0') = s(bool,'const.dec_to_exhProof.env_rel_3'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X30),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X31),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X32)))) ) | $spl2),
  inference(subsumption_resolution,[],[f5630,f645])).
fof(f5630,plain,(
  ( ! [X30,X33,X31,X32] : (p(s(bool,X33)) | ~sP13(sK96(X32,X31,X30),sK97(X32,X31,X30),sK98(X32,X31,X30)) | s(bool,'T_0') = s(bool,X33) | s(bool,'T_0') = s(bool,'const.dec_to_exhProof.env_rel_3'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X30),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X31),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X32)))) ) | $spl2),
  inference(superposition,[],[f306,f758])).
fof(f306,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,'const.dec_to_exhProof.env_rel_3'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X0),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X1),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X2)))) | ~sP13(sK96(X2,X1,X0),sK97(X2,X1,X0),sK98(X2,X1,X0))) )),
  inference(cnf_transformation,[],[f136])).
fof(f136,plain,(
  ! [X0,X1,X2] : ((~p(s(bool,'const.dec_to_exhProof.env_rel_3'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X0),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X1),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X2)))) | ! [X12,X13,X14] : (sP13(X12,X13,X14) | (sP11(X13,sK90(X14,X13,X12,X2,X1,X0),X12,sK92(X14,X13,X12,X2,X1,X0),sK91(X14,X13,X12,X2,X1,X0)) & ~p(s(bool,happ(s(fun('type.list.list'('type.exhSem.v'),bool),happ(s(fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool))),X13),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),sK90(X14,X13,X12,X2,X1,X0)))),s('type.list.list'('type.conSem.v'),sK91(X14,X13,X12,X2,X1,X0)))),s('type.list.list'('type.exhSem.v'),sK92(X14,X13,X12,X2,X1,X0)))))) | (sP12(X14,sK93(X14,X13,X12,X2,X1,X0),X12,sK95(X14,X13,X12,X2,X1,X0),sK94(X14,X13,X12,X2,X1,X0)) & ~p(s(bool,happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool),happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool))),X14),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),sK93(X14,X13,X12,X2,X1,X0)))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),sK94(X14,X13,X12,X2,X1,X0)))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK95(X14,X13,X12,X2,X1,X0)))))) | p(s(bool,happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool),happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool))),X14),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X0))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X1))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X2)))))) & ((~sP13(sK96(X2,X1,X0),sK97(X2,X1,X0),sK98(X2,X1,X0)) & ! [X9,X10,X11] : (~sP11(sK97(X2,X1,X0),X9,sK96(X2,X1,X0),X11,X10) | p(s(bool,happ(s(fun('type.list.list'('type.exhSem.v'),bool),happ(s(fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool))),sK97(X2,X1,X0)),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X9))),s('type.list.list'('type.conSem.v'),X10))),s('type.list.list'('type.exhSem.v'),X11))))) & ! [X6,X7,X8] : (~sP12(sK98(X2,X1,X0),X6,sK96(X2,X1,X0),X8,X7) | p(s(bool,happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool),happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool))),sK98(X2,X1,X0)),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X6))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X7))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X8))))) & ~p(s(bool,happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool),happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool))),sK98(X2,X1,X0)),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X0))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X1))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X2))))) | p(s(bool,'const.dec_to_exhProof.env_rel_3'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X0),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X1),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X2))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK90,sK91,sK92,sK93,sK94,sK95,sK96,sK97,sK98])],[f135])).
fof(f135,plain,(
  ! [X0,X1,X2] : ((~p(s(bool,'const.dec_to_exhProof.env_rel_3'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X0),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X1),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X2)))) | ! [X12,X13,X14] : (sP13(X12,X13,X14) | ? [X18,X19,X20] : (sP11(X13,X18,X12,X20,X19) & ~p(s(bool,happ(s(fun('type.list.list'('type.exhSem.v'),bool),happ(s(fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool))),X13),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X18))),s('type.list.list'('type.conSem.v'),X19))),s('type.list.list'('type.exhSem.v'),X20))))) | ? [X15,X16,X17] : (sP12(X14,X15,X12,X17,X16) & ~p(s(bool,happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool),happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool))),X14),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X15))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X16))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X17))))) | p(s(bool,happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool),happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool))),X14),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X0))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X1))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X2)))))) & (? [X3,X4,X5] : (~sP13(X3,X4,X5) & ! [X9,X10,X11] : (~sP11(X4,X9,X3,X11,X10) | p(s(bool,happ(s(fun('type.list.list'('type.exhSem.v'),bool),happ(s(fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool))),X4),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X9))),s('type.list.list'('type.conSem.v'),X10))),s('type.list.list'('type.exhSem.v'),X11))))) & ! [X6,X7,X8] : (~sP12(X5,X6,X3,X8,X7) | p(s(bool,happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool),happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool))),X5),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X6))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X7))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X8))))) & ~p(s(bool,happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool),happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool))),X5),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X0))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X1))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X2))))) | p(s(bool,'const.dec_to_exhProof.env_rel_3'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X0),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X1),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X2))))))),
  inference(rectify,[],[f134])).
fof(f134,plain,(
  ! [X0,X1,X2] : ((~p(s(bool,'const.dec_to_exhProof.env_rel_3'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X0),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X1),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X2)))) | ! [X3,X4,X5] : (sP13(X3,X4,X5) | ? [X14,X15,X16] : (sP11(X4,X14,X3,X16,X15) & ~p(s(bool,happ(s(fun('type.list.list'('type.exhSem.v'),bool),happ(s(fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool))),X4),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X14))),s('type.list.list'('type.conSem.v'),X15))),s('type.list.list'('type.exhSem.v'),X16))))) | ? [X6,X7,X8] : (sP12(X5,X6,X3,X8,X7) & ~p(s(bool,happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool),happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool))),X5),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X6))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X7))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X8))))) | p(s(bool,happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool),happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool))),X5),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X0))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X1))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X2)))))) & (? [X3,X4,X5] : (~sP13(X3,X4,X5) & ! [X14,X15,X16] : (~sP11(X4,X14,X3,X16,X15) | p(s(bool,happ(s(fun('type.list.list'('type.exhSem.v'),bool),happ(s(fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool))),X4),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X14))),s('type.list.list'('type.conSem.v'),X15))),s('type.list.list'('type.exhSem.v'),X16))))) & ! [X6,X7,X8] : (~sP12(X5,X6,X3,X8,X7) | p(s(bool,happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool),happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool))),X5),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X6))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X7))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X8))))) & ~p(s(bool,happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool),happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool))),X5),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X0))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X1))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X2))))) | p(s(bool,'const.dec_to_exhProof.env_rel_3'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X0),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X1),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X2))))))),
  inference(nnf_transformation,[],[f62])).
fof(f62,plain,(
  ! [X0,X1,X2] : (p(s(bool,'const.dec_to_exhProof.env_rel_3'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X0),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X1),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X2)))) <=> ! [X3,X4,X5] : (sP13(X3,X4,X5) | ? [X14,X15,X16] : (sP11(X4,X14,X3,X16,X15) & ~p(s(bool,happ(s(fun('type.list.list'('type.exhSem.v'),bool),happ(s(fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool))),X4),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X14))),s('type.list.list'('type.conSem.v'),X15))),s('type.list.list'('type.exhSem.v'),X16))))) | ? [X6,X7,X8] : (sP12(X5,X6,X3,X8,X7) & ~p(s(bool,happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool),happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool))),X5),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X6))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X7))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X8))))) | p(s(bool,happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool),happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool))),X5),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X0))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X1))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X2))))))),
  inference(definition_folding,[],[f44,f61,f60,f59,f58,f57,f56,f55])).
fof(f55,plain,(
  ! [X5,X21,X23,X22] : (sP7(X5,X21,X23,X22) <=> ? [X32,X33,X34,X35,X36] : (s('type.conSem.v',X22) = s('type.conSem.v','const.conSem.Closure_3'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X32),s('type.list.list'('type.string.char'),X33),s('type.conLang.exp',X34))) & s('type.exhSem.v',X23) = s('type.exhSem.v','const.exhSem.Closure_3'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X35),s('type.list.list'('type.string.char'),X33),s('type.exhLang.exp','const.dec_to_exh.compile_exp_2'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X36),s('type.conLang.exp',X34))))) & p(s(bool,'const.finite_map.SUBMAP_2'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X36),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X21)))) & p(s(bool,happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool),happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool))),X5),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X21))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X32))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X35))))))),
  introduced(predicate_definition_introduction,[new_symbols(naming,[sP7])])).
fof(f56,plain,(
  ! [X5,X21,X23,X22] : (sP8(X5,X21,X23,X22) <=> ? [X27,X28,X29,X30,X31] : (s('type.conSem.v',X22) = s('type.conSem.v','const.conSem.Recclosure_3'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X28),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.conLang.exp'))),X30),s('type.list.list'('type.string.char'),X29))) & s('type.exhSem.v',X23) = s('type.exhSem.v','const.exhSem.Recclosure_3'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X27),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.exhLang.exp'))),'const.dec_to_exh.compile_funs_2'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X31),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.conLang.exp'))),X30))),s('type.list.list'('type.string.char'),X29))) & p(s(bool,'const.finite_map.SUBMAP_2'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X31),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X21)))) & p(s(bool,happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool),happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool))),X5),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X21))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X28))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X27))))))),
  introduced(predicate_definition_introduction,[new_symbols(naming,[sP8])])).
fof(f59,plain,(
  ! [X4,X14,X3,X16,X15] : (sP11(X4,X14,X3,X16,X15) <=> ((s('type.list.list'('type.conSem.v'),'const.list.NIL_0') = s('type.list.list'('type.conSem.v'),X15) & s('type.list.list'('type.exhSem.v'),'const.list.NIL_0') = s('type.list.list'('type.exhSem.v'),X16)) | ? [X17,X18,X19,X20] : (s('type.list.list'('type.conSem.v'),X15) = s('type.list.list'('type.conSem.v'),'const.list.CONS_2'(s('type.conSem.v',X17),s('type.list.list'('type.conSem.v'),X19))) & s('type.list.list'('type.exhSem.v'),X16) = s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',X18),s('type.list.list'('type.exhSem.v'),X20))) & p(s(bool,happ(s(fun('type.exhSem.v',bool),happ(s(fun('type.conSem.v',fun('type.exhSem.v',bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.conSem.v',fun('type.exhSem.v',bool))),X3),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X14))),s('type.conSem.v',X17))),s('type.exhSem.v',X18)))) & p(s(bool,happ(s(fun('type.list.list'('type.exhSem.v'),bool),happ(s(fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool))),X4),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X14))),s('type.list.list'('type.conSem.v'),X19))),s('type.list.list'('type.exhSem.v'),X20)))))))),
  introduced(predicate_definition_introduction,[new_symbols(naming,[sP11])])).
fof(f60,plain,(
  ! [X5,X6,X3,X8,X7] : (sP12(X5,X6,X3,X8,X7) <=> ((s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'const.list.NIL_0') = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X7) & s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.NIL_0') = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X8)) | ? [X9,X10,X11,X12,X13] : (s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X7) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v'),'const.pair.,_2'(s('type.list.list'('type.string.char'),X9),s('type.conSem.v',X10))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X12))) & s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X8) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'),'const.pair.,_2'(s('type.list.list'('type.string.char'),X9),s('type.exhSem.v',X11))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X13))) & p(s(bool,happ(s(fun('type.exhSem.v',bool),happ(s(fun('type.conSem.v',fun('type.exhSem.v',bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.conSem.v',fun('type.exhSem.v',bool))),X3),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X6))),s('type.conSem.v',X10))),s('type.exhSem.v',X11)))) & p(s(bool,happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool),happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool))),X5),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X6))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X12))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X13)))))))),
  introduced(predicate_definition_introduction,[new_symbols(naming,[sP12])])).
fof(f44,plain,(
  ! [X0,X1,X2] : (p(s(bool,'const.dec_to_exhProof.env_rel_3'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X0),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X1),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X2)))) <=> ! [X3,X4,X5] : (? [X21,X22,X23] : ((? [X40] : (s('type.conSem.v',X22) = s('type.conSem.v','const.conSem.Litv_1'(s('type.ast.lit',X40))) & s('type.exhSem.v',X23) = s('type.exhSem.v','const.exhSem.Litv_1'(s('type.ast.lit',X40)))) | ? [X37,X38,X39] : (s('type.conSem.v',X22) = s('type.conSem.v','const.conSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')),X37),s('type.list.list'('type.conSem.v'),X38))) & s('type.exhSem.v',X23) = s('type.exhSem.v','const.exhSem.Conv_2'(s('type.num.num','const.dec_to_exhProof.get_tag_1'(s('type.option.option'('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')),X37))),s('type.list.list'('type.exhSem.v'),X39))) & p(s(bool,happ(s(fun('type.list.list'('type.exhSem.v'),bool),happ(s(fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool))),X4),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X21))),s('type.list.list'('type.conSem.v'),X38))),s('type.list.list'('type.exhSem.v'),X39))))) | ? [X32,X33,X34,X35,X36] : (s('type.conSem.v',X22) = s('type.conSem.v','const.conSem.Closure_3'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X32),s('type.list.list'('type.string.char'),X33),s('type.conLang.exp',X34))) & s('type.exhSem.v',X23) = s('type.exhSem.v','const.exhSem.Closure_3'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X35),s('type.list.list'('type.string.char'),X33),s('type.exhLang.exp','const.dec_to_exh.compile_exp_2'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X36),s('type.conLang.exp',X34))))) & p(s(bool,'const.finite_map.SUBMAP_2'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X36),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X21)))) & p(s(bool,happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool),happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool))),X5),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X21))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X32))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X35))))) | ? [X27,X28,X29,X30,X31] : (s('type.conSem.v',X22) = s('type.conSem.v','const.conSem.Recclosure_3'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X28),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.conLang.exp'))),X30),s('type.list.list'('type.string.char'),X29))) & s('type.exhSem.v',X23) = s('type.exhSem.v','const.exhSem.Recclosure_3'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X27),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.exhLang.exp'))),'const.dec_to_exh.compile_funs_2'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X31),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.conLang.exp'))),X30))),s('type.list.list'('type.string.char'),X29))) & p(s(bool,'const.finite_map.SUBMAP_2'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X31),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X21)))) & p(s(bool,happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool),happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool))),X5),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X21))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X28))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X27))))) | ? [X26] : (s('type.conSem.v',X22) = s('type.conSem.v','const.conSem.Loc_1'(s('type.num.num',X26))) & s('type.exhSem.v',X23) = s('type.exhSem.v','const.exhSem.Loc_1'(s('type.num.num',X26)))) | ? [X24,X25] : (s('type.conSem.v',X22) = s('type.conSem.v','const.conSem.Vectorv_1'(s('type.list.list'('type.conSem.v'),X24))) & s('type.exhSem.v',X23) = s('type.exhSem.v','const.exhSem.Vectorv_1'(s('type.list.list'('type.exhSem.v'),X25))) & p(s(bool,happ(s(fun('type.list.list'('type.exhSem.v'),bool),happ(s(fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool))),X4),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X21))),s('type.list.list'('type.conSem.v'),X24))),s('type.list.list'('type.exhSem.v'),X25)))))) & ~p(s(bool,happ(s(fun('type.exhSem.v',bool),happ(s(fun('type.conSem.v',fun('type.exhSem.v',bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.conSem.v',fun('type.exhSem.v',bool))),X3),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X21))),s('type.conSem.v',X22))),s('type.exhSem.v',X23))))) | ? [X14,X15,X16] : (((s('type.list.list'('type.conSem.v'),'const.list.NIL_0') = s('type.list.list'('type.conSem.v'),X15) & s('type.list.list'('type.exhSem.v'),'const.list.NIL_0') = s('type.list.list'('type.exhSem.v'),X16)) | ? [X17,X18,X19,X20] : (s('type.list.list'('type.conSem.v'),X15) = s('type.list.list'('type.conSem.v'),'const.list.CONS_2'(s('type.conSem.v',X17),s('type.list.list'('type.conSem.v'),X19))) & s('type.list.list'('type.exhSem.v'),X16) = s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',X18),s('type.list.list'('type.exhSem.v'),X20))) & p(s(bool,happ(s(fun('type.exhSem.v',bool),happ(s(fun('type.conSem.v',fun('type.exhSem.v',bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.conSem.v',fun('type.exhSem.v',bool))),X3),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X14))),s('type.conSem.v',X17))),s('type.exhSem.v',X18)))) & p(s(bool,happ(s(fun('type.list.list'('type.exhSem.v'),bool),happ(s(fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool))),X4),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X14))),s('type.list.list'('type.conSem.v'),X19))),s('type.list.list'('type.exhSem.v'),X20)))))) & ~p(s(bool,happ(s(fun('type.list.list'('type.exhSem.v'),bool),happ(s(fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool))),X4),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X14))),s('type.list.list'('type.conSem.v'),X15))),s('type.list.list'('type.exhSem.v'),X16))))) | ? [X6,X7,X8] : (((s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'const.list.NIL_0') = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X7) & s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.NIL_0') = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X8)) | ? [X9,X10,X11,X12,X13] : (s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X7) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v'),'const.pair.,_2'(s('type.list.list'('type.string.char'),X9),s('type.conSem.v',X10))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X12))) & s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X8) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'),'const.pair.,_2'(s('type.list.list'('type.string.char'),X9),s('type.exhSem.v',X11))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X13))) & p(s(bool,happ(s(fun('type.exhSem.v',bool),happ(s(fun('type.conSem.v',fun('type.exhSem.v',bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.conSem.v',fun('type.exhSem.v',bool))),X3),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X6))),s('type.conSem.v',X10))),s('type.exhSem.v',X11)))) & p(s(bool,happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool),happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool))),X5),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X6))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X12))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X13)))))) & ~p(s(bool,happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool),happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool))),X5),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X6))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X7))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X8))))) | p(s(bool,happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool),happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool))),X5),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X0))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X1))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X2))))))),
  inference(flattening,[],[f43])).
fof(f43,plain,(
  ! [X0,X1,X2] : (p(s(bool,'const.dec_to_exhProof.env_rel_3'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X0),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X1),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X2)))) <=> ! [X3,X4,X5] : ((? [X21,X22,X23] : ((? [X40] : (s('type.conSem.v',X22) = s('type.conSem.v','const.conSem.Litv_1'(s('type.ast.lit',X40))) & s('type.exhSem.v',X23) = s('type.exhSem.v','const.exhSem.Litv_1'(s('type.ast.lit',X40)))) | ? [X37,X38,X39] : (s('type.conSem.v',X22) = s('type.conSem.v','const.conSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')),X37),s('type.list.list'('type.conSem.v'),X38))) & s('type.exhSem.v',X23) = s('type.exhSem.v','const.exhSem.Conv_2'(s('type.num.num','const.dec_to_exhProof.get_tag_1'(s('type.option.option'('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')),X37))),s('type.list.list'('type.exhSem.v'),X39))) & p(s(bool,happ(s(fun('type.list.list'('type.exhSem.v'),bool),happ(s(fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool))),X4),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X21))),s('type.list.list'('type.conSem.v'),X38))),s('type.list.list'('type.exhSem.v'),X39))))) | ? [X32,X33,X34,X35,X36] : (s('type.conSem.v',X22) = s('type.conSem.v','const.conSem.Closure_3'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X32),s('type.list.list'('type.string.char'),X33),s('type.conLang.exp',X34))) & s('type.exhSem.v',X23) = s('type.exhSem.v','const.exhSem.Closure_3'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X35),s('type.list.list'('type.string.char'),X33),s('type.exhLang.exp','const.dec_to_exh.compile_exp_2'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X36),s('type.conLang.exp',X34))))) & p(s(bool,'const.finite_map.SUBMAP_2'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X36),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X21)))) & p(s(bool,happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool),happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool))),X5),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X21))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X32))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X35))))) | ? [X27,X28,X29,X30,X31] : (s('type.conSem.v',X22) = s('type.conSem.v','const.conSem.Recclosure_3'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X28),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.conLang.exp'))),X30),s('type.list.list'('type.string.char'),X29))) & s('type.exhSem.v',X23) = s('type.exhSem.v','const.exhSem.Recclosure_3'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X27),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.exhLang.exp'))),'const.dec_to_exh.compile_funs_2'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X31),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.conLang.exp'))),X30))),s('type.list.list'('type.string.char'),X29))) & p(s(bool,'const.finite_map.SUBMAP_2'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X31),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X21)))) & p(s(bool,happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool),happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool))),X5),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X21))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X28))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X27))))) | ? [X26] : (s('type.conSem.v',X22) = s('type.conSem.v','const.conSem.Loc_1'(s('type.num.num',X26))) & s('type.exhSem.v',X23) = s('type.exhSem.v','const.exhSem.Loc_1'(s('type.num.num',X26)))) | ? [X24,X25] : (s('type.conSem.v',X22) = s('type.conSem.v','const.conSem.Vectorv_1'(s('type.list.list'('type.conSem.v'),X24))) & s('type.exhSem.v',X23) = s('type.exhSem.v','const.exhSem.Vectorv_1'(s('type.list.list'('type.exhSem.v'),X25))) & p(s(bool,happ(s(fun('type.list.list'('type.exhSem.v'),bool),happ(s(fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool))),X4),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X21))),s('type.list.list'('type.conSem.v'),X24))),s('type.list.list'('type.exhSem.v'),X25)))))) & ~p(s(bool,happ(s(fun('type.exhSem.v',bool),happ(s(fun('type.conSem.v',fun('type.exhSem.v',bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.conSem.v',fun('type.exhSem.v',bool))),X3),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X21))),s('type.conSem.v',X22))),s('type.exhSem.v',X23))))) | ? [X14,X15,X16] : (((s('type.list.list'('type.conSem.v'),'const.list.NIL_0') = s('type.list.list'('type.conSem.v'),X15) & s('type.list.list'('type.exhSem.v'),'const.list.NIL_0') = s('type.list.list'('type.exhSem.v'),X16)) | ? [X17,X18,X19,X20] : (s('type.list.list'('type.conSem.v'),X15) = s('type.list.list'('type.conSem.v'),'const.list.CONS_2'(s('type.conSem.v',X17),s('type.list.list'('type.conSem.v'),X19))) & s('type.list.list'('type.exhSem.v'),X16) = s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',X18),s('type.list.list'('type.exhSem.v'),X20))) & p(s(bool,happ(s(fun('type.exhSem.v',bool),happ(s(fun('type.conSem.v',fun('type.exhSem.v',bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.conSem.v',fun('type.exhSem.v',bool))),X3),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X14))),s('type.conSem.v',X17))),s('type.exhSem.v',X18)))) & p(s(bool,happ(s(fun('type.list.list'('type.exhSem.v'),bool),happ(s(fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool))),X4),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X14))),s('type.list.list'('type.conSem.v'),X19))),s('type.list.list'('type.exhSem.v'),X20)))))) & ~p(s(bool,happ(s(fun('type.list.list'('type.exhSem.v'),bool),happ(s(fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool))),X4),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X14))),s('type.list.list'('type.conSem.v'),X15))),s('type.list.list'('type.exhSem.v'),X16))))) | ? [X6,X7,X8] : (((s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'const.list.NIL_0') = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X7) & s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.NIL_0') = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X8)) | ? [X9,X10,X11,X12,X13] : (s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X7) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v'),'const.pair.,_2'(s('type.list.list'('type.string.char'),X9),s('type.conSem.v',X10))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X12))) & s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X8) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'),'const.pair.,_2'(s('type.list.list'('type.string.char'),X9),s('type.exhSem.v',X11))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X13))) & p(s(bool,happ(s(fun('type.exhSem.v',bool),happ(s(fun('type.conSem.v',fun('type.exhSem.v',bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.conSem.v',fun('type.exhSem.v',bool))),X3),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X6))),s('type.conSem.v',X10))),s('type.exhSem.v',X11)))) & p(s(bool,happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool),happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool))),X5),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X6))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X12))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X13)))))) & ~p(s(bool,happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool),happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool))),X5),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X6))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X7))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X8)))))) | p(s(bool,happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool),happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool))),X5),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X0))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X1))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X2))))))),
  inference(ennf_transformation,[],[f35])).
fof(f35,plain,(
  ! [X0,X1,X2] : (p(s(bool,'const.dec_to_exhProof.env_rel_3'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X0),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X1),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X2)))) <=> ! [X3,X4,X5] : ((! [X21,X22,X23] : ((? [X40] : (s('type.conSem.v',X22) = s('type.conSem.v','const.conSem.Litv_1'(s('type.ast.lit',X40))) & s('type.exhSem.v',X23) = s('type.exhSem.v','const.exhSem.Litv_1'(s('type.ast.lit',X40)))) | ? [X37,X38,X39] : (s('type.conSem.v',X22) = s('type.conSem.v','const.conSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')),X37),s('type.list.list'('type.conSem.v'),X38))) & s('type.exhSem.v',X23) = s('type.exhSem.v','const.exhSem.Conv_2'(s('type.num.num','const.dec_to_exhProof.get_tag_1'(s('type.option.option'('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')),X37))),s('type.list.list'('type.exhSem.v'),X39))) & p(s(bool,happ(s(fun('type.list.list'('type.exhSem.v'),bool),happ(s(fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool))),X4),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X21))),s('type.list.list'('type.conSem.v'),X38))),s('type.list.list'('type.exhSem.v'),X39))))) | ? [X32,X33,X34,X35,X36] : (s('type.conSem.v',X22) = s('type.conSem.v','const.conSem.Closure_3'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X32),s('type.list.list'('type.string.char'),X33),s('type.conLang.exp',X34))) & s('type.exhSem.v',X23) = s('type.exhSem.v','const.exhSem.Closure_3'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X35),s('type.list.list'('type.string.char'),X33),s('type.exhLang.exp','const.dec_to_exh.compile_exp_2'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X36),s('type.conLang.exp',X34))))) & p(s(bool,'const.finite_map.SUBMAP_2'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X36),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X21)))) & p(s(bool,happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool),happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool))),X5),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X21))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X32))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X35))))) | ? [X27,X28,X29,X30,X31] : (s('type.conSem.v',X22) = s('type.conSem.v','const.conSem.Recclosure_3'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X28),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.conLang.exp'))),X30),s('type.list.list'('type.string.char'),X29))) & s('type.exhSem.v',X23) = s('type.exhSem.v','const.exhSem.Recclosure_3'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X27),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.exhLang.exp'))),'const.dec_to_exh.compile_funs_2'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X31),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.conLang.exp'))),X30))),s('type.list.list'('type.string.char'),X29))) & p(s(bool,'const.finite_map.SUBMAP_2'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X31),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X21)))) & p(s(bool,happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool),happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool))),X5),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X21))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X28))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X27))))) | ? [X26] : (s('type.conSem.v',X22) = s('type.conSem.v','const.conSem.Loc_1'(s('type.num.num',X26))) & s('type.exhSem.v',X23) = s('type.exhSem.v','const.exhSem.Loc_1'(s('type.num.num',X26)))) | ? [X24,X25] : (s('type.conSem.v',X22) = s('type.conSem.v','const.conSem.Vectorv_1'(s('type.list.list'('type.conSem.v'),X24))) & s('type.exhSem.v',X23) = s('type.exhSem.v','const.exhSem.Vectorv_1'(s('type.list.list'('type.exhSem.v'),X25))) & p(s(bool,happ(s(fun('type.list.list'('type.exhSem.v'),bool),happ(s(fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool))),X4),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X21))),s('type.list.list'('type.conSem.v'),X24))),s('type.list.list'('type.exhSem.v'),X25)))))) => p(s(bool,happ(s(fun('type.exhSem.v',bool),happ(s(fun('type.conSem.v',fun('type.exhSem.v',bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.conSem.v',fun('type.exhSem.v',bool))),X3),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X21))),s('type.conSem.v',X22))),s('type.exhSem.v',X23))))) & ! [X14,X15,X16] : (((s('type.list.list'('type.conSem.v'),'const.list.NIL_0') = s('type.list.list'('type.conSem.v'),X15) & s('type.list.list'('type.exhSem.v'),'const.list.NIL_0') = s('type.list.list'('type.exhSem.v'),X16)) | ? [X17,X18,X19,X20] : (s('type.list.list'('type.conSem.v'),X15) = s('type.list.list'('type.conSem.v'),'const.list.CONS_2'(s('type.conSem.v',X17),s('type.list.list'('type.conSem.v'),X19))) & s('type.list.list'('type.exhSem.v'),X16) = s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',X18),s('type.list.list'('type.exhSem.v'),X20))) & p(s(bool,happ(s(fun('type.exhSem.v',bool),happ(s(fun('type.conSem.v',fun('type.exhSem.v',bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.conSem.v',fun('type.exhSem.v',bool))),X3),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X14))),s('type.conSem.v',X17))),s('type.exhSem.v',X18)))) & p(s(bool,happ(s(fun('type.list.list'('type.exhSem.v'),bool),happ(s(fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool))),X4),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X14))),s('type.list.list'('type.conSem.v'),X19))),s('type.list.list'('type.exhSem.v'),X20)))))) => p(s(bool,happ(s(fun('type.list.list'('type.exhSem.v'),bool),happ(s(fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool))),X4),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X14))),s('type.list.list'('type.conSem.v'),X15))),s('type.list.list'('type.exhSem.v'),X16))))) & ! [X6,X7,X8] : (((s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'const.list.NIL_0') = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X7) & s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.NIL_0') = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X8)) | ? [X9,X10,X11,X12,X13] : (s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X7) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v'),'const.pair.,_2'(s('type.list.list'('type.string.char'),X9),s('type.conSem.v',X10))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X12))) & s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X8) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'),'const.pair.,_2'(s('type.list.list'('type.string.char'),X9),s('type.exhSem.v',X11))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X13))) & p(s(bool,happ(s(fun('type.exhSem.v',bool),happ(s(fun('type.conSem.v',fun('type.exhSem.v',bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.conSem.v',fun('type.exhSem.v',bool))),X3),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X6))),s('type.conSem.v',X10))),s('type.exhSem.v',X11)))) & p(s(bool,happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool),happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool))),X5),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X6))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X12))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X13)))))) => p(s(bool,happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool),happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool))),X5),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X6))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X7))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X8)))))) => p(s(bool,happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool),happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool))),X5),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X0))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X1))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X2))))))),
  inference(rectify,[],[f9])).
fof(f9,axiom,(
  ! [X5,X8,X9] : (p(s(bool,'const.dec_to_exhProof.env_rel_3'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X5),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X8),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X9)))) <=> ! [X10,X11,X12] : ((! [X33,X34,X35] : ((? [X7] : (s('type.conSem.v',X34) = s('type.conSem.v','const.conSem.Litv_1'(s('type.ast.lit',X7))) & s('type.exhSem.v',X35) = s('type.exhSem.v','const.exhSem.Litv_1'(s('type.ast.lit',X7)))) | ? [X16,X17,X18] : (s('type.conSem.v',X34) = s('type.conSem.v','const.conSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')),X16),s('type.list.list'('type.conSem.v'),X17))) & s('type.exhSem.v',X35) = s('type.exhSem.v','const.exhSem.Conv_2'(s('type.num.num','const.dec_to_exhProof.get_tag_1'(s('type.option.option'('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')),X16))),s('type.list.list'('type.exhSem.v'),X18))) & p(s(bool,happ(s(fun('type.list.list'('type.exhSem.v'),bool),happ(s(fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool))),X11),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X33))),s('type.list.list'('type.conSem.v'),X17))),s('type.list.list'('type.exhSem.v'),X18))))) | ? [X19,X20,X21,X22,X23] : (s('type.conSem.v',X34) = s('type.conSem.v','const.conSem.Closure_3'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X19),s('type.list.list'('type.string.char'),X20),s('type.conLang.exp',X21))) & s('type.exhSem.v',X35) = s('type.exhSem.v','const.exhSem.Closure_3'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X22),s('type.list.list'('type.string.char'),X20),s('type.exhLang.exp','const.dec_to_exh.compile_exp_2'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X23),s('type.conLang.exp',X21))))) & p(s(bool,'const.finite_map.SUBMAP_2'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X23),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X33)))) & p(s(bool,happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool),happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool))),X12),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X33))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X19))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X22))))) | ? [X22,X19,X20,X24,X23] : (s('type.conSem.v',X34) = s('type.conSem.v','const.conSem.Recclosure_3'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X19),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.conLang.exp'))),X24),s('type.list.list'('type.string.char'),X20))) & s('type.exhSem.v',X35) = s('type.exhSem.v','const.exhSem.Recclosure_3'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X22),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.exhLang.exp'))),'const.dec_to_exh.compile_funs_2'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X23),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.conLang.exp'))),X24))),s('type.list.list'('type.string.char'),X20))) & p(s(bool,'const.finite_map.SUBMAP_2'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X23),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X33)))) & p(s(bool,happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool),happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool))),X12),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X33))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X19))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X22))))) | ? [X7] : (s('type.conSem.v',X34) = s('type.conSem.v','const.conSem.Loc_1'(s('type.num.num',X7))) & s('type.exhSem.v',X35) = s('type.exhSem.v','const.exhSem.Loc_1'(s('type.num.num',X7)))) | ? [X17,X18] : (s('type.conSem.v',X34) = s('type.conSem.v','const.conSem.Vectorv_1'(s('type.list.list'('type.conSem.v'),X17))) & s('type.exhSem.v',X35) = s('type.exhSem.v','const.exhSem.Vectorv_1'(s('type.list.list'('type.exhSem.v'),X18))) & p(s(bool,happ(s(fun('type.list.list'('type.exhSem.v'),bool),happ(s(fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool))),X11),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X33))),s('type.list.list'('type.conSem.v'),X17))),s('type.list.list'('type.exhSem.v'),X18)))))) => p(s(bool,happ(s(fun('type.exhSem.v',bool),happ(s(fun('type.conSem.v',fun('type.exhSem.v',bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.conSem.v',fun('type.exhSem.v',bool))),X10),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X33))),s('type.conSem.v',X34))),s('type.exhSem.v',X35))))) & ! [X25,X26,X27] : (((s('type.list.list'('type.conSem.v'),'const.list.NIL_0') = s('type.list.list'('type.conSem.v'),X26) & s('type.list.list'('type.exhSem.v'),'const.list.NIL_0') = s('type.list.list'('type.exhSem.v'),X27)) | ? [X28,X29,X17,X18] : (s('type.list.list'('type.conSem.v'),X26) = s('type.list.list'('type.conSem.v'),'const.list.CONS_2'(s('type.conSem.v',X28),s('type.list.list'('type.conSem.v'),X17))) & s('type.list.list'('type.exhSem.v'),X27) = s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',X29),s('type.list.list'('type.exhSem.v'),X18))) & p(s(bool,happ(s(fun('type.exhSem.v',bool),happ(s(fun('type.conSem.v',fun('type.exhSem.v',bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.conSem.v',fun('type.exhSem.v',bool))),X10),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X25))),s('type.conSem.v',X28))),s('type.exhSem.v',X29)))) & p(s(bool,happ(s(fun('type.list.list'('type.exhSem.v'),bool),happ(s(fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool))),X11),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X25))),s('type.list.list'('type.conSem.v'),X17))),s('type.list.list'('type.exhSem.v'),X18)))))) => p(s(bool,happ(s(fun('type.list.list'('type.exhSem.v'),bool),happ(s(fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool))),X11),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X25))),s('type.list.list'('type.conSem.v'),X26))),s('type.list.list'('type.exhSem.v'),X27))))) & ! [X39,X40,X41] : (((s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'const.list.NIL_0') = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X40) & s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.NIL_0') = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X41)) | ? [X20,X28,X29,X19,X22] : (s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X40) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v'),'const.pair.,_2'(s('type.list.list'('type.string.char'),X20),s('type.conSem.v',X28))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X19))) & s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X41) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'),'const.pair.,_2'(s('type.list.list'('type.string.char'),X20),s('type.exhSem.v',X29))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X22))) & p(s(bool,happ(s(fun('type.exhSem.v',bool),happ(s(fun('type.conSem.v',fun('type.exhSem.v',bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.conSem.v',fun('type.exhSem.v',bool))),X10),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X39))),s('type.conSem.v',X28))),s('type.exhSem.v',X29)))) & p(s(bool,happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool),happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool))),X12),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X39))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X19))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X22)))))) => p(s(bool,happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool),happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool))),X12),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X39))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X40))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X41)))))) => p(s(bool,happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool),happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool))),X12),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X5))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X8))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X9))))))),
  file('thm.dec_to_exhProof.v_rel_rules|split|0','thm.dec_to_exhProof.v_rel|48|_def')).
fof(f5640,plain,(
  ( ! [X28,X26,X29,X27] : (~sP13(sK96(X28,X27,X26),sK97(X28,X27,X26),sK98(X28,X27,X26)) | s(bool,'T_0') = s(bool,'const.dec_to_exhProof.env_rel_3'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X26),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X27),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X28))) | s(bool,'T_0') = s(bool,X29)) ) | $spl2),
  inference(subsumption_resolution,[],[f5629,f645])).
fof(f5629,plain,(
  ( ! [X28,X26,X29,X27] : (p(s(bool,X29)) | ~sP13(sK96(X28,X27,X26),sK97(X28,X27,X26),sK98(X28,X27,X26)) | s(bool,'T_0') = s(bool,'const.dec_to_exhProof.env_rel_3'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X26),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X27),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X28))) | s(bool,'T_0') = s(bool,X29)) ) | $spl2),
  inference(superposition,[],[f306,f758])).
fof(f5571,plain,(
  ( ! [X28,X26,X27] : (~sP20(sK134(X28,X27,X26),sK135(X28,X27,X26),sK136(X28,X27,X26)) | s(bool,'T_0') = s(bool,'const.dec_to_exhProof.vs_rel_3'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X26),s('type.list.list'('type.conSem.v'),X27),s('type.list.list'('type.exhSem.v'),X28)))) ) | $spl60),
  inference(cnf_transformation,[],[f5571_D])).
fof(f5571_D,plain,(
  ( ! [X28,X26,X27] : (~sP20(sK134(X28,X27,X26),sK135(X28,X27,X26),sK136(X28,X27,X26)) | s(bool,'T_0') = s(bool,'const.dec_to_exhProof.vs_rel_3'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X26),s('type.list.list'('type.conSem.v'),X27),s('type.list.list'('type.exhSem.v'),X28)))) ) <=> ~$spl60),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl60])])).
fof(f5572,plain,(
  ( ! [X30,X33,X31,X32] : (~sP20(sK134(X32,X31,X30),sK135(X32,X31,X30),sK136(X32,X31,X30)) | s(bool,'T_0') = s(bool,X33) | s(bool,'T_0') = s(bool,'const.dec_to_exhProof.vs_rel_3'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X30),s('type.list.list'('type.conSem.v'),X31),s('type.list.list'('type.exhSem.v'),X32)))) ) | $spl2),
  inference(subsumption_resolution,[],[f5560,f645])).
fof(f5560,plain,(
  ( ! [X30,X33,X31,X32] : (p(s(bool,X33)) | ~sP20(sK134(X32,X31,X30),sK135(X32,X31,X30),sK136(X32,X31,X30)) | s(bool,'T_0') = s(bool,X33) | s(bool,'T_0') = s(bool,'const.dec_to_exhProof.vs_rel_3'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X30),s('type.list.list'('type.conSem.v'),X31),s('type.list.list'('type.exhSem.v'),X32)))) ) | $spl2),
  inference(superposition,[],[f363,f758])).
fof(f363,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,'const.dec_to_exhProof.vs_rel_3'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X0),s('type.list.list'('type.conSem.v'),X1),s('type.list.list'('type.exhSem.v'),X2)))) | ~sP20(sK134(X2,X1,X0),sK135(X2,X1,X0),sK136(X2,X1,X0))) )),
  inference(cnf_transformation,[],[f162])).
fof(f162,plain,(
  ! [X0,X1,X2] : ((~p(s(bool,'const.dec_to_exhProof.vs_rel_3'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X0),s('type.list.list'('type.conSem.v'),X1),s('type.list.list'('type.exhSem.v'),X2)))) | ! [X12,X13,X14] : (sP20(X12,X13,X14) | (sP18(X13,sK128(X14,X13,X12,X2,X1,X0),X12,sK130(X14,X13,X12,X2,X1,X0),sK129(X14,X13,X12,X2,X1,X0)) & ~p(s(bool,happ(s(fun('type.list.list'('type.exhSem.v'),bool),happ(s(fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool))),X13),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),sK128(X14,X13,X12,X2,X1,X0)))),s('type.list.list'('type.conSem.v'),sK129(X14,X13,X12,X2,X1,X0)))),s('type.list.list'('type.exhSem.v'),sK130(X14,X13,X12,X2,X1,X0)))))) | (sP19(X14,sK131(X14,X13,X12,X2,X1,X0),X12,sK133(X14,X13,X12,X2,X1,X0),sK132(X14,X13,X12,X2,X1,X0)) & ~p(s(bool,happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool),happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool))),X14),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),sK131(X14,X13,X12,X2,X1,X0)))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),sK132(X14,X13,X12,X2,X1,X0)))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK133(X14,X13,X12,X2,X1,X0)))))) | p(s(bool,happ(s(fun('type.list.list'('type.exhSem.v'),bool),happ(s(fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool))),X13),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X0))),s('type.list.list'('type.conSem.v'),X1))),s('type.list.list'('type.exhSem.v'),X2)))))) & ((~sP20(sK134(X2,X1,X0),sK135(X2,X1,X0),sK136(X2,X1,X0)) & ! [X9,X10,X11] : (~sP18(sK135(X2,X1,X0),X9,sK134(X2,X1,X0),X11,X10) | p(s(bool,happ(s(fun('type.list.list'('type.exhSem.v'),bool),happ(s(fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool))),sK135(X2,X1,X0)),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X9))),s('type.list.list'('type.conSem.v'),X10))),s('type.list.list'('type.exhSem.v'),X11))))) & ! [X6,X7,X8] : (~sP19(sK136(X2,X1,X0),X6,sK134(X2,X1,X0),X8,X7) | p(s(bool,happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool),happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool))),sK136(X2,X1,X0)),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X6))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X7))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X8))))) & ~p(s(bool,happ(s(fun('type.list.list'('type.exhSem.v'),bool),happ(s(fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool))),sK135(X2,X1,X0)),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X0))),s('type.list.list'('type.conSem.v'),X1))),s('type.list.list'('type.exhSem.v'),X2))))) | p(s(bool,'const.dec_to_exhProof.vs_rel_3'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X0),s('type.list.list'('type.conSem.v'),X1),s('type.list.list'('type.exhSem.v'),X2))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK128,sK129,sK130,sK131,sK132,sK133,sK134,sK135,sK136])],[f161])).
fof(f161,plain,(
  ! [X0,X1,X2] : ((~p(s(bool,'const.dec_to_exhProof.vs_rel_3'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X0),s('type.list.list'('type.conSem.v'),X1),s('type.list.list'('type.exhSem.v'),X2)))) | ! [X12,X13,X14] : (sP20(X12,X13,X14) | ? [X18,X19,X20] : (sP18(X13,X18,X12,X20,X19) & ~p(s(bool,happ(s(fun('type.list.list'('type.exhSem.v'),bool),happ(s(fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool))),X13),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X18))),s('type.list.list'('type.conSem.v'),X19))),s('type.list.list'('type.exhSem.v'),X20))))) | ? [X15,X16,X17] : (sP19(X14,X15,X12,X17,X16) & ~p(s(bool,happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool),happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool))),X14),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X15))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X16))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X17))))) | p(s(bool,happ(s(fun('type.list.list'('type.exhSem.v'),bool),happ(s(fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool))),X13),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X0))),s('type.list.list'('type.conSem.v'),X1))),s('type.list.list'('type.exhSem.v'),X2)))))) & (? [X3,X4,X5] : (~sP20(X3,X4,X5) & ! [X9,X10,X11] : (~sP18(X4,X9,X3,X11,X10) | p(s(bool,happ(s(fun('type.list.list'('type.exhSem.v'),bool),happ(s(fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool))),X4),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X9))),s('type.list.list'('type.conSem.v'),X10))),s('type.list.list'('type.exhSem.v'),X11))))) & ! [X6,X7,X8] : (~sP19(X5,X6,X3,X8,X7) | p(s(bool,happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool),happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool))),X5),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X6))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X7))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X8))))) & ~p(s(bool,happ(s(fun('type.list.list'('type.exhSem.v'),bool),happ(s(fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool))),X4),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X0))),s('type.list.list'('type.conSem.v'),X1))),s('type.list.list'('type.exhSem.v'),X2))))) | p(s(bool,'const.dec_to_exhProof.vs_rel_3'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X0),s('type.list.list'('type.conSem.v'),X1),s('type.list.list'('type.exhSem.v'),X2))))))),
  inference(rectify,[],[f160])).
fof(f160,plain,(
  ! [X0,X1,X2] : ((~p(s(bool,'const.dec_to_exhProof.vs_rel_3'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X0),s('type.list.list'('type.conSem.v'),X1),s('type.list.list'('type.exhSem.v'),X2)))) | ! [X3,X4,X5] : (sP20(X3,X4,X5) | ? [X14,X15,X16] : (sP18(X4,X14,X3,X16,X15) & ~p(s(bool,happ(s(fun('type.list.list'('type.exhSem.v'),bool),happ(s(fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool))),X4),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X14))),s('type.list.list'('type.conSem.v'),X15))),s('type.list.list'('type.exhSem.v'),X16))))) | ? [X6,X7,X8] : (sP19(X5,X6,X3,X8,X7) & ~p(s(bool,happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool),happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool))),X5),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X6))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X7))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X8))))) | p(s(bool,happ(s(fun('type.list.list'('type.exhSem.v'),bool),happ(s(fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool))),X4),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X0))),s('type.list.list'('type.conSem.v'),X1))),s('type.list.list'('type.exhSem.v'),X2)))))) & (? [X3,X4,X5] : (~sP20(X3,X4,X5) & ! [X14,X15,X16] : (~sP18(X4,X14,X3,X16,X15) | p(s(bool,happ(s(fun('type.list.list'('type.exhSem.v'),bool),happ(s(fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool))),X4),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X14))),s('type.list.list'('type.conSem.v'),X15))),s('type.list.list'('type.exhSem.v'),X16))))) & ! [X6,X7,X8] : (~sP19(X5,X6,X3,X8,X7) | p(s(bool,happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool),happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool))),X5),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X6))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X7))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X8))))) & ~p(s(bool,happ(s(fun('type.list.list'('type.exhSem.v'),bool),happ(s(fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool))),X4),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X0))),s('type.list.list'('type.conSem.v'),X1))),s('type.list.list'('type.exhSem.v'),X2))))) | p(s(bool,'const.dec_to_exhProof.vs_rel_3'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X0),s('type.list.list'('type.conSem.v'),X1),s('type.list.list'('type.exhSem.v'),X2))))))),
  inference(nnf_transformation,[],[f70])).
fof(f70,plain,(
  ! [X0,X1,X2] : (p(s(bool,'const.dec_to_exhProof.vs_rel_3'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X0),s('type.list.list'('type.conSem.v'),X1),s('type.list.list'('type.exhSem.v'),X2)))) <=> ! [X3,X4,X5] : (sP20(X3,X4,X5) | ? [X14,X15,X16] : (sP18(X4,X14,X3,X16,X15) & ~p(s(bool,happ(s(fun('type.list.list'('type.exhSem.v'),bool),happ(s(fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool))),X4),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X14))),s('type.list.list'('type.conSem.v'),X15))),s('type.list.list'('type.exhSem.v'),X16))))) | ? [X6,X7,X8] : (sP19(X5,X6,X3,X8,X7) & ~p(s(bool,happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool),happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool))),X5),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X6))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X7))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X8))))) | p(s(bool,happ(s(fun('type.list.list'('type.exhSem.v'),bool),happ(s(fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool))),X4),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X0))),s('type.list.list'('type.conSem.v'),X1))),s('type.list.list'('type.exhSem.v'),X2))))))),
  inference(definition_folding,[],[f46,f69,f68,f67,f66,f65,f64,f63])).
fof(f63,plain,(
  ! [X5,X21,X23,X22] : (sP14(X5,X21,X23,X22) <=> ? [X32,X33,X34,X35,X36] : (s('type.conSem.v',X22) = s('type.conSem.v','const.conSem.Closure_3'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X32),s('type.list.list'('type.string.char'),X33),s('type.conLang.exp',X34))) & s('type.exhSem.v',X23) = s('type.exhSem.v','const.exhSem.Closure_3'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X35),s('type.list.list'('type.string.char'),X33),s('type.exhLang.exp','const.dec_to_exh.compile_exp_2'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X36),s('type.conLang.exp',X34))))) & p(s(bool,'const.finite_map.SUBMAP_2'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X36),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X21)))) & p(s(bool,happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool),happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool))),X5),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X21))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X32))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X35))))))),
  introduced(predicate_definition_introduction,[new_symbols(naming,[sP14])])).
fof(f64,plain,(
  ! [X5,X21,X23,X22] : (sP15(X5,X21,X23,X22) <=> ? [X27,X28,X29,X30,X31] : (s('type.conSem.v',X22) = s('type.conSem.v','const.conSem.Recclosure_3'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X28),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.conLang.exp'))),X30),s('type.list.list'('type.string.char'),X29))) & s('type.exhSem.v',X23) = s('type.exhSem.v','const.exhSem.Recclosure_3'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X27),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.exhLang.exp'))),'const.dec_to_exh.compile_funs_2'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X31),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.conLang.exp'))),X30))),s('type.list.list'('type.string.char'),X29))) & p(s(bool,'const.finite_map.SUBMAP_2'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X31),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X21)))) & p(s(bool,happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool),happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool))),X5),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X21))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X28))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X27))))))),
  introduced(predicate_definition_introduction,[new_symbols(naming,[sP15])])).
fof(f67,plain,(
  ! [X4,X14,X3,X16,X15] : (sP18(X4,X14,X3,X16,X15) <=> ((s('type.list.list'('type.conSem.v'),'const.list.NIL_0') = s('type.list.list'('type.conSem.v'),X15) & s('type.list.list'('type.exhSem.v'),'const.list.NIL_0') = s('type.list.list'('type.exhSem.v'),X16)) | ? [X17,X18,X19,X20] : (s('type.list.list'('type.conSem.v'),X15) = s('type.list.list'('type.conSem.v'),'const.list.CONS_2'(s('type.conSem.v',X17),s('type.list.list'('type.conSem.v'),X19))) & s('type.list.list'('type.exhSem.v'),X16) = s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',X18),s('type.list.list'('type.exhSem.v'),X20))) & p(s(bool,happ(s(fun('type.exhSem.v',bool),happ(s(fun('type.conSem.v',fun('type.exhSem.v',bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.conSem.v',fun('type.exhSem.v',bool))),X3),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X14))),s('type.conSem.v',X17))),s('type.exhSem.v',X18)))) & p(s(bool,happ(s(fun('type.list.list'('type.exhSem.v'),bool),happ(s(fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool))),X4),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X14))),s('type.list.list'('type.conSem.v'),X19))),s('type.list.list'('type.exhSem.v'),X20)))))))),
  introduced(predicate_definition_introduction,[new_symbols(naming,[sP18])])).
fof(f68,plain,(
  ! [X5,X6,X3,X8,X7] : (sP19(X5,X6,X3,X8,X7) <=> ((s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'const.list.NIL_0') = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X7) & s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.NIL_0') = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X8)) | ? [X9,X10,X11,X12,X13] : (s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X7) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v'),'const.pair.,_2'(s('type.list.list'('type.string.char'),X9),s('type.conSem.v',X10))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X12))) & s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X8) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'),'const.pair.,_2'(s('type.list.list'('type.string.char'),X9),s('type.exhSem.v',X11))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X13))) & p(s(bool,happ(s(fun('type.exhSem.v',bool),happ(s(fun('type.conSem.v',fun('type.exhSem.v',bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.conSem.v',fun('type.exhSem.v',bool))),X3),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X6))),s('type.conSem.v',X10))),s('type.exhSem.v',X11)))) & p(s(bool,happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool),happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool))),X5),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X6))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X12))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X13)))))))),
  introduced(predicate_definition_introduction,[new_symbols(naming,[sP19])])).
fof(f46,plain,(
  ! [X0,X1,X2] : (p(s(bool,'const.dec_to_exhProof.vs_rel_3'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X0),s('type.list.list'('type.conSem.v'),X1),s('type.list.list'('type.exhSem.v'),X2)))) <=> ! [X3,X4,X5] : (? [X21,X22,X23] : ((? [X40] : (s('type.conSem.v',X22) = s('type.conSem.v','const.conSem.Litv_1'(s('type.ast.lit',X40))) & s('type.exhSem.v',X23) = s('type.exhSem.v','const.exhSem.Litv_1'(s('type.ast.lit',X40)))) | ? [X37,X38,X39] : (s('type.conSem.v',X22) = s('type.conSem.v','const.conSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')),X37),s('type.list.list'('type.conSem.v'),X38))) & s('type.exhSem.v',X23) = s('type.exhSem.v','const.exhSem.Conv_2'(s('type.num.num','const.dec_to_exhProof.get_tag_1'(s('type.option.option'('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')),X37))),s('type.list.list'('type.exhSem.v'),X39))) & p(s(bool,happ(s(fun('type.list.list'('type.exhSem.v'),bool),happ(s(fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool))),X4),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X21))),s('type.list.list'('type.conSem.v'),X38))),s('type.list.list'('type.exhSem.v'),X39))))) | ? [X32,X33,X34,X35,X36] : (s('type.conSem.v',X22) = s('type.conSem.v','const.conSem.Closure_3'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X32),s('type.list.list'('type.string.char'),X33),s('type.conLang.exp',X34))) & s('type.exhSem.v',X23) = s('type.exhSem.v','const.exhSem.Closure_3'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X35),s('type.list.list'('type.string.char'),X33),s('type.exhLang.exp','const.dec_to_exh.compile_exp_2'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X36),s('type.conLang.exp',X34))))) & p(s(bool,'const.finite_map.SUBMAP_2'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X36),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X21)))) & p(s(bool,happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool),happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool))),X5),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X21))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X32))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X35))))) | ? [X27,X28,X29,X30,X31] : (s('type.conSem.v',X22) = s('type.conSem.v','const.conSem.Recclosure_3'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X28),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.conLang.exp'))),X30),s('type.list.list'('type.string.char'),X29))) & s('type.exhSem.v',X23) = s('type.exhSem.v','const.exhSem.Recclosure_3'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X27),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.exhLang.exp'))),'const.dec_to_exh.compile_funs_2'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X31),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.conLang.exp'))),X30))),s('type.list.list'('type.string.char'),X29))) & p(s(bool,'const.finite_map.SUBMAP_2'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X31),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X21)))) & p(s(bool,happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool),happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool))),X5),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X21))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X28))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X27))))) | ? [X26] : (s('type.conSem.v',X22) = s('type.conSem.v','const.conSem.Loc_1'(s('type.num.num',X26))) & s('type.exhSem.v',X23) = s('type.exhSem.v','const.exhSem.Loc_1'(s('type.num.num',X26)))) | ? [X24,X25] : (s('type.conSem.v',X22) = s('type.conSem.v','const.conSem.Vectorv_1'(s('type.list.list'('type.conSem.v'),X24))) & s('type.exhSem.v',X23) = s('type.exhSem.v','const.exhSem.Vectorv_1'(s('type.list.list'('type.exhSem.v'),X25))) & p(s(bool,happ(s(fun('type.list.list'('type.exhSem.v'),bool),happ(s(fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool))),X4),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X21))),s('type.list.list'('type.conSem.v'),X24))),s('type.list.list'('type.exhSem.v'),X25)))))) & ~p(s(bool,happ(s(fun('type.exhSem.v',bool),happ(s(fun('type.conSem.v',fun('type.exhSem.v',bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.conSem.v',fun('type.exhSem.v',bool))),X3),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X21))),s('type.conSem.v',X22))),s('type.exhSem.v',X23))))) | ? [X14,X15,X16] : (((s('type.list.list'('type.conSem.v'),'const.list.NIL_0') = s('type.list.list'('type.conSem.v'),X15) & s('type.list.list'('type.exhSem.v'),'const.list.NIL_0') = s('type.list.list'('type.exhSem.v'),X16)) | ? [X17,X18,X19,X20] : (s('type.list.list'('type.conSem.v'),X15) = s('type.list.list'('type.conSem.v'),'const.list.CONS_2'(s('type.conSem.v',X17),s('type.list.list'('type.conSem.v'),X19))) & s('type.list.list'('type.exhSem.v'),X16) = s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',X18),s('type.list.list'('type.exhSem.v'),X20))) & p(s(bool,happ(s(fun('type.exhSem.v',bool),happ(s(fun('type.conSem.v',fun('type.exhSem.v',bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.conSem.v',fun('type.exhSem.v',bool))),X3),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X14))),s('type.conSem.v',X17))),s('type.exhSem.v',X18)))) & p(s(bool,happ(s(fun('type.list.list'('type.exhSem.v'),bool),happ(s(fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool))),X4),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X14))),s('type.list.list'('type.conSem.v'),X19))),s('type.list.list'('type.exhSem.v'),X20)))))) & ~p(s(bool,happ(s(fun('type.list.list'('type.exhSem.v'),bool),happ(s(fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool))),X4),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X14))),s('type.list.list'('type.conSem.v'),X15))),s('type.list.list'('type.exhSem.v'),X16))))) | ? [X6,X7,X8] : (((s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'const.list.NIL_0') = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X7) & s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.NIL_0') = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X8)) | ? [X9,X10,X11,X12,X13] : (s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X7) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v'),'const.pair.,_2'(s('type.list.list'('type.string.char'),X9),s('type.conSem.v',X10))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X12))) & s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X8) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'),'const.pair.,_2'(s('type.list.list'('type.string.char'),X9),s('type.exhSem.v',X11))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X13))) & p(s(bool,happ(s(fun('type.exhSem.v',bool),happ(s(fun('type.conSem.v',fun('type.exhSem.v',bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.conSem.v',fun('type.exhSem.v',bool))),X3),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X6))),s('type.conSem.v',X10))),s('type.exhSem.v',X11)))) & p(s(bool,happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool),happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool))),X5),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X6))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X12))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X13)))))) & ~p(s(bool,happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool),happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool))),X5),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X6))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X7))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X8))))) | p(s(bool,happ(s(fun('type.list.list'('type.exhSem.v'),bool),happ(s(fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool))),X4),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X0))),s('type.list.list'('type.conSem.v'),X1))),s('type.list.list'('type.exhSem.v'),X2))))))),
  inference(flattening,[],[f45])).
fof(f45,plain,(
  ! [X0,X1,X2] : (p(s(bool,'const.dec_to_exhProof.vs_rel_3'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X0),s('type.list.list'('type.conSem.v'),X1),s('type.list.list'('type.exhSem.v'),X2)))) <=> ! [X3,X4,X5] : ((? [X21,X22,X23] : ((? [X40] : (s('type.conSem.v',X22) = s('type.conSem.v','const.conSem.Litv_1'(s('type.ast.lit',X40))) & s('type.exhSem.v',X23) = s('type.exhSem.v','const.exhSem.Litv_1'(s('type.ast.lit',X40)))) | ? [X37,X38,X39] : (s('type.conSem.v',X22) = s('type.conSem.v','const.conSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')),X37),s('type.list.list'('type.conSem.v'),X38))) & s('type.exhSem.v',X23) = s('type.exhSem.v','const.exhSem.Conv_2'(s('type.num.num','const.dec_to_exhProof.get_tag_1'(s('type.option.option'('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')),X37))),s('type.list.list'('type.exhSem.v'),X39))) & p(s(bool,happ(s(fun('type.list.list'('type.exhSem.v'),bool),happ(s(fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool))),X4),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X21))),s('type.list.list'('type.conSem.v'),X38))),s('type.list.list'('type.exhSem.v'),X39))))) | ? [X32,X33,X34,X35,X36] : (s('type.conSem.v',X22) = s('type.conSem.v','const.conSem.Closure_3'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X32),s('type.list.list'('type.string.char'),X33),s('type.conLang.exp',X34))) & s('type.exhSem.v',X23) = s('type.exhSem.v','const.exhSem.Closure_3'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X35),s('type.list.list'('type.string.char'),X33),s('type.exhLang.exp','const.dec_to_exh.compile_exp_2'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X36),s('type.conLang.exp',X34))))) & p(s(bool,'const.finite_map.SUBMAP_2'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X36),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X21)))) & p(s(bool,happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool),happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool))),X5),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X21))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X32))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X35))))) | ? [X27,X28,X29,X30,X31] : (s('type.conSem.v',X22) = s('type.conSem.v','const.conSem.Recclosure_3'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X28),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.conLang.exp'))),X30),s('type.list.list'('type.string.char'),X29))) & s('type.exhSem.v',X23) = s('type.exhSem.v','const.exhSem.Recclosure_3'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X27),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.exhLang.exp'))),'const.dec_to_exh.compile_funs_2'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X31),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.conLang.exp'))),X30))),s('type.list.list'('type.string.char'),X29))) & p(s(bool,'const.finite_map.SUBMAP_2'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X31),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X21)))) & p(s(bool,happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool),happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool))),X5),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X21))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X28))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X27))))) | ? [X26] : (s('type.conSem.v',X22) = s('type.conSem.v','const.conSem.Loc_1'(s('type.num.num',X26))) & s('type.exhSem.v',X23) = s('type.exhSem.v','const.exhSem.Loc_1'(s('type.num.num',X26)))) | ? [X24,X25] : (s('type.conSem.v',X22) = s('type.conSem.v','const.conSem.Vectorv_1'(s('type.list.list'('type.conSem.v'),X24))) & s('type.exhSem.v',X23) = s('type.exhSem.v','const.exhSem.Vectorv_1'(s('type.list.list'('type.exhSem.v'),X25))) & p(s(bool,happ(s(fun('type.list.list'('type.exhSem.v'),bool),happ(s(fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool))),X4),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X21))),s('type.list.list'('type.conSem.v'),X24))),s('type.list.list'('type.exhSem.v'),X25)))))) & ~p(s(bool,happ(s(fun('type.exhSem.v',bool),happ(s(fun('type.conSem.v',fun('type.exhSem.v',bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.conSem.v',fun('type.exhSem.v',bool))),X3),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X21))),s('type.conSem.v',X22))),s('type.exhSem.v',X23))))) | ? [X14,X15,X16] : (((s('type.list.list'('type.conSem.v'),'const.list.NIL_0') = s('type.list.list'('type.conSem.v'),X15) & s('type.list.list'('type.exhSem.v'),'const.list.NIL_0') = s('type.list.list'('type.exhSem.v'),X16)) | ? [X17,X18,X19,X20] : (s('type.list.list'('type.conSem.v'),X15) = s('type.list.list'('type.conSem.v'),'const.list.CONS_2'(s('type.conSem.v',X17),s('type.list.list'('type.conSem.v'),X19))) & s('type.list.list'('type.exhSem.v'),X16) = s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',X18),s('type.list.list'('type.exhSem.v'),X20))) & p(s(bool,happ(s(fun('type.exhSem.v',bool),happ(s(fun('type.conSem.v',fun('type.exhSem.v',bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.conSem.v',fun('type.exhSem.v',bool))),X3),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X14))),s('type.conSem.v',X17))),s('type.exhSem.v',X18)))) & p(s(bool,happ(s(fun('type.list.list'('type.exhSem.v'),bool),happ(s(fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool))),X4),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X14))),s('type.list.list'('type.conSem.v'),X19))),s('type.list.list'('type.exhSem.v'),X20)))))) & ~p(s(bool,happ(s(fun('type.list.list'('type.exhSem.v'),bool),happ(s(fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool))),X4),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X14))),s('type.list.list'('type.conSem.v'),X15))),s('type.list.list'('type.exhSem.v'),X16))))) | ? [X6,X7,X8] : (((s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'const.list.NIL_0') = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X7) & s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.NIL_0') = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X8)) | ? [X9,X10,X11,X12,X13] : (s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X7) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v'),'const.pair.,_2'(s('type.list.list'('type.string.char'),X9),s('type.conSem.v',X10))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X12))) & s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X8) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'),'const.pair.,_2'(s('type.list.list'('type.string.char'),X9),s('type.exhSem.v',X11))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X13))) & p(s(bool,happ(s(fun('type.exhSem.v',bool),happ(s(fun('type.conSem.v',fun('type.exhSem.v',bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.conSem.v',fun('type.exhSem.v',bool))),X3),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X6))),s('type.conSem.v',X10))),s('type.exhSem.v',X11)))) & p(s(bool,happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool),happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool))),X5),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X6))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X12))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X13)))))) & ~p(s(bool,happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool),happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool))),X5),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X6))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X7))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X8)))))) | p(s(bool,happ(s(fun('type.list.list'('type.exhSem.v'),bool),happ(s(fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool))),X4),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X0))),s('type.list.list'('type.conSem.v'),X1))),s('type.list.list'('type.exhSem.v'),X2))))))),
  inference(ennf_transformation,[],[f36])).
fof(f36,plain,(
  ! [X0,X1,X2] : (p(s(bool,'const.dec_to_exhProof.vs_rel_3'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X0),s('type.list.list'('type.conSem.v'),X1),s('type.list.list'('type.exhSem.v'),X2)))) <=> ! [X3,X4,X5] : ((! [X21,X22,X23] : ((? [X40] : (s('type.conSem.v',X22) = s('type.conSem.v','const.conSem.Litv_1'(s('type.ast.lit',X40))) & s('type.exhSem.v',X23) = s('type.exhSem.v','const.exhSem.Litv_1'(s('type.ast.lit',X40)))) | ? [X37,X38,X39] : (s('type.conSem.v',X22) = s('type.conSem.v','const.conSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')),X37),s('type.list.list'('type.conSem.v'),X38))) & s('type.exhSem.v',X23) = s('type.exhSem.v','const.exhSem.Conv_2'(s('type.num.num','const.dec_to_exhProof.get_tag_1'(s('type.option.option'('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')),X37))),s('type.list.list'('type.exhSem.v'),X39))) & p(s(bool,happ(s(fun('type.list.list'('type.exhSem.v'),bool),happ(s(fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool))),X4),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X21))),s('type.list.list'('type.conSem.v'),X38))),s('type.list.list'('type.exhSem.v'),X39))))) | ? [X32,X33,X34,X35,X36] : (s('type.conSem.v',X22) = s('type.conSem.v','const.conSem.Closure_3'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X32),s('type.list.list'('type.string.char'),X33),s('type.conLang.exp',X34))) & s('type.exhSem.v',X23) = s('type.exhSem.v','const.exhSem.Closure_3'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X35),s('type.list.list'('type.string.char'),X33),s('type.exhLang.exp','const.dec_to_exh.compile_exp_2'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X36),s('type.conLang.exp',X34))))) & p(s(bool,'const.finite_map.SUBMAP_2'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X36),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X21)))) & p(s(bool,happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool),happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool))),X5),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X21))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X32))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X35))))) | ? [X27,X28,X29,X30,X31] : (s('type.conSem.v',X22) = s('type.conSem.v','const.conSem.Recclosure_3'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X28),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.conLang.exp'))),X30),s('type.list.list'('type.string.char'),X29))) & s('type.exhSem.v',X23) = s('type.exhSem.v','const.exhSem.Recclosure_3'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X27),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.exhLang.exp'))),'const.dec_to_exh.compile_funs_2'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X31),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.conLang.exp'))),X30))),s('type.list.list'('type.string.char'),X29))) & p(s(bool,'const.finite_map.SUBMAP_2'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X31),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X21)))) & p(s(bool,happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool),happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool))),X5),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X21))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X28))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X27))))) | ? [X26] : (s('type.conSem.v',X22) = s('type.conSem.v','const.conSem.Loc_1'(s('type.num.num',X26))) & s('type.exhSem.v',X23) = s('type.exhSem.v','const.exhSem.Loc_1'(s('type.num.num',X26)))) | ? [X24,X25] : (s('type.conSem.v',X22) = s('type.conSem.v','const.conSem.Vectorv_1'(s('type.list.list'('type.conSem.v'),X24))) & s('type.exhSem.v',X23) = s('type.exhSem.v','const.exhSem.Vectorv_1'(s('type.list.list'('type.exhSem.v'),X25))) & p(s(bool,happ(s(fun('type.list.list'('type.exhSem.v'),bool),happ(s(fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool))),X4),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X21))),s('type.list.list'('type.conSem.v'),X24))),s('type.list.list'('type.exhSem.v'),X25)))))) => p(s(bool,happ(s(fun('type.exhSem.v',bool),happ(s(fun('type.conSem.v',fun('type.exhSem.v',bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.conSem.v',fun('type.exhSem.v',bool))),X3),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X21))),s('type.conSem.v',X22))),s('type.exhSem.v',X23))))) & ! [X14,X15,X16] : (((s('type.list.list'('type.conSem.v'),'const.list.NIL_0') = s('type.list.list'('type.conSem.v'),X15) & s('type.list.list'('type.exhSem.v'),'const.list.NIL_0') = s('type.list.list'('type.exhSem.v'),X16)) | ? [X17,X18,X19,X20] : (s('type.list.list'('type.conSem.v'),X15) = s('type.list.list'('type.conSem.v'),'const.list.CONS_2'(s('type.conSem.v',X17),s('type.list.list'('type.conSem.v'),X19))) & s('type.list.list'('type.exhSem.v'),X16) = s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',X18),s('type.list.list'('type.exhSem.v'),X20))) & p(s(bool,happ(s(fun('type.exhSem.v',bool),happ(s(fun('type.conSem.v',fun('type.exhSem.v',bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.conSem.v',fun('type.exhSem.v',bool))),X3),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X14))),s('type.conSem.v',X17))),s('type.exhSem.v',X18)))) & p(s(bool,happ(s(fun('type.list.list'('type.exhSem.v'),bool),happ(s(fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool))),X4),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X14))),s('type.list.list'('type.conSem.v'),X19))),s('type.list.list'('type.exhSem.v'),X20)))))) => p(s(bool,happ(s(fun('type.list.list'('type.exhSem.v'),bool),happ(s(fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool))),X4),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X14))),s('type.list.list'('type.conSem.v'),X15))),s('type.list.list'('type.exhSem.v'),X16))))) & ! [X6,X7,X8] : (((s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'const.list.NIL_0') = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X7) & s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.NIL_0') = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X8)) | ? [X9,X10,X11,X12,X13] : (s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X7) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v'),'const.pair.,_2'(s('type.list.list'('type.string.char'),X9),s('type.conSem.v',X10))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X12))) & s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X8) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'),'const.pair.,_2'(s('type.list.list'('type.string.char'),X9),s('type.exhSem.v',X11))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X13))) & p(s(bool,happ(s(fun('type.exhSem.v',bool),happ(s(fun('type.conSem.v',fun('type.exhSem.v',bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.conSem.v',fun('type.exhSem.v',bool))),X3),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X6))),s('type.conSem.v',X10))),s('type.exhSem.v',X11)))) & p(s(bool,happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool),happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool))),X5),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X6))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X12))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X13)))))) => p(s(bool,happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool),happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool))),X5),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X6))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X7))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X8)))))) => p(s(bool,happ(s(fun('type.list.list'('type.exhSem.v'),bool),happ(s(fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool))),X4),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X0))),s('type.list.list'('type.conSem.v'),X1))),s('type.list.list'('type.exhSem.v'),X2))))))),
  inference(rectify,[],[f8])).
fof(f8,axiom,(
  ! [X5,X8,X9] : (p(s(bool,'const.dec_to_exhProof.vs_rel_3'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X5),s('type.list.list'('type.conSem.v'),X8),s('type.list.list'('type.exhSem.v'),X9)))) <=> ! [X10,X11,X12] : ((! [X33,X34,X35] : ((? [X7] : (s('type.conSem.v',X34) = s('type.conSem.v','const.conSem.Litv_1'(s('type.ast.lit',X7))) & s('type.exhSem.v',X35) = s('type.exhSem.v','const.exhSem.Litv_1'(s('type.ast.lit',X7)))) | ? [X16,X17,X18] : (s('type.conSem.v',X34) = s('type.conSem.v','const.conSem.Conv_2'(s('type.option.option'('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')),X16),s('type.list.list'('type.conSem.v'),X17))) & s('type.exhSem.v',X35) = s('type.exhSem.v','const.exhSem.Conv_2'(s('type.num.num','const.dec_to_exhProof.get_tag_1'(s('type.option.option'('type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')),X16))),s('type.list.list'('type.exhSem.v'),X18))) & p(s(bool,happ(s(fun('type.list.list'('type.exhSem.v'),bool),happ(s(fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool))),X11),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X33))),s('type.list.list'('type.conSem.v'),X17))),s('type.list.list'('type.exhSem.v'),X18))))) | ? [X19,X20,X21,X22,X23] : (s('type.conSem.v',X34) = s('type.conSem.v','const.conSem.Closure_3'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X19),s('type.list.list'('type.string.char'),X20),s('type.conLang.exp',X21))) & s('type.exhSem.v',X35) = s('type.exhSem.v','const.exhSem.Closure_3'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X22),s('type.list.list'('type.string.char'),X20),s('type.exhLang.exp','const.dec_to_exh.compile_exp_2'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X23),s('type.conLang.exp',X21))))) & p(s(bool,'const.finite_map.SUBMAP_2'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X23),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X33)))) & p(s(bool,happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool),happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool))),X12),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X33))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X19))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X22))))) | ? [X22,X19,X20,X24,X23] : (s('type.conSem.v',X34) = s('type.conSem.v','const.conSem.Recclosure_3'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X19),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.conLang.exp'))),X24),s('type.list.list'('type.string.char'),X20))) & s('type.exhSem.v',X35) = s('type.exhSem.v','const.exhSem.Recclosure_3'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X22),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.exhLang.exp'))),'const.dec_to_exh.compile_funs_2'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X23),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.conLang.exp'))),X24))),s('type.list.list'('type.string.char'),X20))) & p(s(bool,'const.finite_map.SUBMAP_2'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X23),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X33)))) & p(s(bool,happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool),happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool))),X12),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X33))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X19))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X22))))) | ? [X7] : (s('type.conSem.v',X34) = s('type.conSem.v','const.conSem.Loc_1'(s('type.num.num',X7))) & s('type.exhSem.v',X35) = s('type.exhSem.v','const.exhSem.Loc_1'(s('type.num.num',X7)))) | ? [X17,X18] : (s('type.conSem.v',X34) = s('type.conSem.v','const.conSem.Vectorv_1'(s('type.list.list'('type.conSem.v'),X17))) & s('type.exhSem.v',X35) = s('type.exhSem.v','const.exhSem.Vectorv_1'(s('type.list.list'('type.exhSem.v'),X18))) & p(s(bool,happ(s(fun('type.list.list'('type.exhSem.v'),bool),happ(s(fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool))),X11),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X33))),s('type.list.list'('type.conSem.v'),X17))),s('type.list.list'('type.exhSem.v'),X18)))))) => p(s(bool,happ(s(fun('type.exhSem.v',bool),happ(s(fun('type.conSem.v',fun('type.exhSem.v',bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.conSem.v',fun('type.exhSem.v',bool))),X10),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X33))),s('type.conSem.v',X34))),s('type.exhSem.v',X35))))) & ! [X36,X37,X38] : (((s('type.list.list'('type.conSem.v'),'const.list.NIL_0') = s('type.list.list'('type.conSem.v'),X37) & s('type.list.list'('type.exhSem.v'),'const.list.NIL_0') = s('type.list.list'('type.exhSem.v'),X38)) | ? [X28,X29,X17,X18] : (s('type.list.list'('type.conSem.v'),X37) = s('type.list.list'('type.conSem.v'),'const.list.CONS_2'(s('type.conSem.v',X28),s('type.list.list'('type.conSem.v'),X17))) & s('type.list.list'('type.exhSem.v'),X38) = s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',X29),s('type.list.list'('type.exhSem.v'),X18))) & p(s(bool,happ(s(fun('type.exhSem.v',bool),happ(s(fun('type.conSem.v',fun('type.exhSem.v',bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.conSem.v',fun('type.exhSem.v',bool))),X10),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X36))),s('type.conSem.v',X28))),s('type.exhSem.v',X29)))) & p(s(bool,happ(s(fun('type.list.list'('type.exhSem.v'),bool),happ(s(fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool))),X11),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X36))),s('type.list.list'('type.conSem.v'),X17))),s('type.list.list'('type.exhSem.v'),X18)))))) => p(s(bool,happ(s(fun('type.list.list'('type.exhSem.v'),bool),happ(s(fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool))),X11),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X36))),s('type.list.list'('type.conSem.v'),X37))),s('type.list.list'('type.exhSem.v'),X38))))) & ! [X30,X31,X32] : (((s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'const.list.NIL_0') = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X31) & s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.NIL_0') = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X32)) | ? [X20,X28,X29,X19,X22] : (s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X31) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v'),'const.pair.,_2'(s('type.list.list'('type.string.char'),X20),s('type.conSem.v',X28))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X19))) & s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X32) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'),'const.pair.,_2'(s('type.list.list'('type.string.char'),X20),s('type.exhSem.v',X29))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X22))) & p(s(bool,happ(s(fun('type.exhSem.v',bool),happ(s(fun('type.conSem.v',fun('type.exhSem.v',bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.conSem.v',fun('type.exhSem.v',bool))),X10),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X30))),s('type.conSem.v',X28))),s('type.exhSem.v',X29)))) & p(s(bool,happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool),happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool))),X12),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X30))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X19))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X22)))))) => p(s(bool,happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool),happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool))),X12),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X30))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X31))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X32)))))) => p(s(bool,happ(s(fun('type.list.list'('type.exhSem.v'),bool),happ(s(fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.conSem.v'),fun('type.list.list'('type.exhSem.v'),bool))),X11),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X5))),s('type.list.list'('type.conSem.v'),X8))),s('type.list.list'('type.exhSem.v'),X9))))))),
  file('thm.dec_to_exhProof.v_rel_rules|split|0','thm.dec_to_exhProof.v_rel|49|_def')).
fof(f5570,plain,(
  ( ! [X28,X26,X29,X27] : (~sP20(sK134(X28,X27,X26),sK135(X28,X27,X26),sK136(X28,X27,X26)) | s(bool,'T_0') = s(bool,'const.dec_to_exhProof.vs_rel_3'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X26),s('type.list.list'('type.conSem.v'),X27),s('type.list.list'('type.exhSem.v'),X28))) | s(bool,'T_0') = s(bool,X29)) ) | $spl2),
  inference(subsumption_resolution,[],[f5559,f645])).
fof(f5559,plain,(
  ( ! [X28,X26,X29,X27] : (p(s(bool,X29)) | ~sP20(sK134(X28,X27,X26),sK135(X28,X27,X26),sK136(X28,X27,X26)) | s(bool,'T_0') = s(bool,'const.dec_to_exhProof.vs_rel_3'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X26),s('type.list.list'('type.conSem.v'),X27),s('type.list.list'('type.exhSem.v'),X28))) | s(bool,'T_0') = s(bool,X29)) ) | $spl2),
  inference(superposition,[],[f363,f758])).
fof(f5499,plain,(
  ( ! [X28,X26,X27] : (~sP6(sK58(X28,X27,X26),sK59(X28,X27,X26),sK60(X28,X27,X26)) | s(bool,'T_0') = s(bool,'const.dec_to_exhProof.v_rel_3'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X26),s('type.conSem.v',X27),s('type.exhSem.v',X28)))) ) | $spl58),
  inference(cnf_transformation,[],[f5499_D])).
fof(f5499_D,plain,(
  ( ! [X28,X26,X27] : (~sP6(sK58(X28,X27,X26),sK59(X28,X27,X26),sK60(X28,X27,X26)) | s(bool,'T_0') = s(bool,'const.dec_to_exhProof.v_rel_3'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X26),s('type.conSem.v',X27),s('type.exhSem.v',X28)))) ) <=> ~$spl58),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl58])])).
fof(f5500,plain,(
  ( ! [X30,X33,X31,X32] : (~sP6(sK58(X32,X31,X30),sK59(X32,X31,X30),sK60(X32,X31,X30)) | s(bool,'T_0') = s(bool,X33) | s(bool,'T_0') = s(bool,'const.dec_to_exhProof.v_rel_3'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X30),s('type.conSem.v',X31),s('type.exhSem.v',X32)))) ) | $spl2),
  inference(subsumption_resolution,[],[f5488,f645])).
fof(f5488,plain,(
  ( ! [X30,X33,X31,X32] : (p(s(bool,X33)) | ~sP6(sK58(X32,X31,X30),sK59(X32,X31,X30),sK60(X32,X31,X30)) | s(bool,'T_0') = s(bool,X33) | s(bool,'T_0') = s(bool,'const.dec_to_exhProof.v_rel_3'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X30),s('type.conSem.v',X31),s('type.exhSem.v',X32)))) ) | $spl2),
  inference(superposition,[],[f249,f758])).
fof(f5498,plain,(
  ( ! [X28,X26,X29,X27] : (~sP6(sK58(X28,X27,X26),sK59(X28,X27,X26),sK60(X28,X27,X26)) | s(bool,'T_0') = s(bool,'const.dec_to_exhProof.v_rel_3'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X26),s('type.conSem.v',X27),s('type.exhSem.v',X28))) | s(bool,'T_0') = s(bool,X29)) ) | $spl2),
  inference(subsumption_resolution,[],[f5487,f645])).
fof(f5487,plain,(
  ( ! [X28,X26,X29,X27] : (p(s(bool,X29)) | ~sP6(sK58(X28,X27,X26),sK59(X28,X27,X26),sK60(X28,X27,X26)) | s(bool,'T_0') = s(bool,'const.dec_to_exhProof.v_rel_3'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X26),s('type.conSem.v',X27),s('type.exhSem.v',X28))) | s(bool,'T_0') = s(bool,X29)) ) | $spl2),
  inference(superposition,[],[f249,f758])).
fof(f5417,plain,(
  ( ! [X47,X52,X50,X53,X51,X49] : (s(bool,X47) = s(bool,sK137(X49,X50,X51,X52,X53)) | s(bool,'T_0') = s(bool,X47) | s('type.ast.lit',X51) = s('type.ast.lit',X52)) ) | $spl56),
  inference(cnf_transformation,[],[f5417_D])).
fof(f5417_D,plain,(
  ( ! [X47,X52,X50,X53,X51,X49] : (s(bool,X47) = s(bool,sK137(X49,X50,X51,X52,X53)) | s(bool,'T_0') = s(bool,X47) | s('type.ast.lit',X51) = s('type.ast.lit',X52)) ) <=> ~$spl56),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl56])])).
fof(f5418,plain,(
  ( ! [X59,X57,X54,X60,X58,X56,X55] : (s(bool,X54) = s(bool,sK137(X56,X57,X58,X59,X60)) | s('type.ast.lit',X58) = s('type.ast.lit',X59) | s(bool,'T_0') = s(bool,X55) | s(bool,'T_0') = s(bool,X54)) ) | $spl2),
  inference(subsumption_resolution,[],[f5397,f645])).
fof(f5397,plain,(
  ( ! [X59,X57,X54,X60,X58,X56,X55] : (p(s(bool,X55)) | s(bool,X54) = s(bool,sK137(X56,X57,X58,X59,X60)) | s('type.ast.lit',X58) = s('type.ast.lit',X59) | s(bool,'T_0') = s(bool,X55) | s(bool,'T_0') = s(bool,X54)) ) | $spl2),
  inference(superposition,[],[f3610,f758])).
fof(f3610,plain,(
  ( ! [X14,X12,X15,X13,X11,X16] : (p(s(bool,X16)) | s(bool,X16) = s(bool,sK137(X13,X14,X12,X11,X15)) | s('type.ast.lit',X11) = s('type.ast.lit',X12)) )),
  inference(resolution,[],[f367,f173])).
fof(f5416,plain,(
  ( ! [X47,X52,X50,X48,X53,X51,X49] : (s(bool,X47) = s(bool,sK137(X49,X50,X51,X52,X53)) | s('type.ast.lit',X51) = s('type.ast.lit',X52) | s(bool,'T_0') = s(bool,X47) | s(bool,'T_0') = s(bool,X48)) ) | $spl2),
  inference(subsumption_resolution,[],[f5396,f645])).
fof(f5396,plain,(
  ( ! [X47,X52,X50,X48,X53,X51,X49] : (p(s(bool,X48)) | s(bool,X47) = s(bool,sK137(X49,X50,X51,X52,X53)) | s('type.ast.lit',X51) = s('type.ast.lit',X52) | s(bool,'T_0') = s(bool,X47) | s(bool,'T_0') = s(bool,X48)) ) | $spl2),
  inference(superposition,[],[f3610,f758])).
fof(f5376,plain,(
  ( ! [X35,X33,X36,X34] : (~sP14(X36,X35,X34,X33) | s(bool,'T_0') = s(bool,'const.finite_map.SUBMAP_2'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),sK127(X33,X34,X35,X36)),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X35)))) ) | $spl54),
  inference(cnf_transformation,[],[f5376_D])).
fof(f5376_D,plain,(
  ( ! [X35,X33,X36,X34] : (~sP14(X36,X35,X34,X33) | s(bool,'T_0') = s(bool,'const.finite_map.SUBMAP_2'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),sK127(X33,X34,X35,X36)),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X35)))) ) <=> ~$spl54),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl54])])).
fof(f5377,plain,(
  ( ! [X39,X41,X38,X42,X40] : (~sP14(X41,X40,X39,X38) | s(bool,'T_0') = s(bool,X42) | s(bool,'T_0') = s(bool,'const.finite_map.SUBMAP_2'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),sK127(X38,X39,X40,X41)),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X40)))) ) | $spl2),
  inference(subsumption_resolution,[],[f5365,f645])).
fof(f5365,plain,(
  ( ! [X39,X41,X38,X42,X40] : (p(s(bool,X42)) | ~sP14(X41,X40,X39,X38) | s(bool,'T_0') = s(bool,X42) | s(bool,'T_0') = s(bool,'const.finite_map.SUBMAP_2'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),sK127(X38,X39,X40,X41)),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X40)))) ) | $spl2),
  inference(superposition,[],[f356,f758])).
fof(f356,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,'const.finite_map.SUBMAP_2'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),sK127(X3,X2,X1,X0)),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X1)))) | ~sP14(X0,X1,X2,X3)) )),
  inference(cnf_transformation,[],[f159])).
fof(f159,plain,(
  ! [X0,X1,X2,X3] : ((~sP14(X0,X1,X2,X3) | (s('type.conSem.v',X3) = s('type.conSem.v','const.conSem.Closure_3'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),sK123(X3,X2,X1,X0)),s('type.list.list'('type.string.char'),sK124(X3,X2,X1,X0)),s('type.conLang.exp',sK125(X3,X2,X1,X0)))) & s('type.exhSem.v',X2) = s('type.exhSem.v','const.exhSem.Closure_3'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK126(X3,X2,X1,X0)),s('type.list.list'('type.string.char'),sK124(X3,X2,X1,X0)),s('type.exhLang.exp','const.dec_to_exh.compile_exp_2'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),sK127(X3,X2,X1,X0)),s('type.conLang.exp',sK125(X3,X2,X1,X0)))))) & p(s(bool,'const.finite_map.SUBMAP_2'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),sK127(X3,X2,X1,X0)),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X1)))) & p(s(bool,happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool),happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool))),X0),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X1))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),sK123(X3,X2,X1,X0)))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK126(X3,X2,X1,X0))))))) & (! [X4,X5,X6,X7,X8] : (s('type.conSem.v',X3) != s('type.conSem.v','const.conSem.Closure_3'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X4),s('type.list.list'('type.string.char'),X5),s('type.conLang.exp',X6))) | s('type.exhSem.v',X2) != s('type.exhSem.v','const.exhSem.Closure_3'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X7),s('type.list.list'('type.string.char'),X5),s('type.exhLang.exp','const.dec_to_exh.compile_exp_2'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X8),s('type.conLang.exp',X6))))) | ~p(s(bool,'const.finite_map.SUBMAP_2'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X8),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X1)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool),happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool))),X0),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X1))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X4))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X7))))) | sP14(X0,X1,X2,X3)))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK123,sK124,sK125,sK126,sK127])],[f158])).
fof(f158,plain,(
  ! [X0,X1,X2,X3] : ((~sP14(X0,X1,X2,X3) | ? [X9,X10,X11,X12,X13] : (s('type.conSem.v',X3) = s('type.conSem.v','const.conSem.Closure_3'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X9),s('type.list.list'('type.string.char'),X10),s('type.conLang.exp',X11))) & s('type.exhSem.v',X2) = s('type.exhSem.v','const.exhSem.Closure_3'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X12),s('type.list.list'('type.string.char'),X10),s('type.exhLang.exp','const.dec_to_exh.compile_exp_2'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X13),s('type.conLang.exp',X11))))) & p(s(bool,'const.finite_map.SUBMAP_2'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X13),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X1)))) & p(s(bool,happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool),happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool))),X0),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X1))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X9))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X12)))))) & (! [X4,X5,X6,X7,X8] : (s('type.conSem.v',X3) != s('type.conSem.v','const.conSem.Closure_3'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X4),s('type.list.list'('type.string.char'),X5),s('type.conLang.exp',X6))) | s('type.exhSem.v',X2) != s('type.exhSem.v','const.exhSem.Closure_3'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X7),s('type.list.list'('type.string.char'),X5),s('type.exhLang.exp','const.dec_to_exh.compile_exp_2'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X8),s('type.conLang.exp',X6))))) | ~p(s(bool,'const.finite_map.SUBMAP_2'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X8),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X1)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool),happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool))),X0),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X1))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X4))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X7))))) | sP14(X0,X1,X2,X3)))),
  inference(rectify,[],[f157])).
fof(f157,plain,(
  ! [X5,X21,X23,X22] : ((~sP14(X5,X21,X23,X22) | ? [X32,X33,X34,X35,X36] : (s('type.conSem.v',X22) = s('type.conSem.v','const.conSem.Closure_3'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X32),s('type.list.list'('type.string.char'),X33),s('type.conLang.exp',X34))) & s('type.exhSem.v',X23) = s('type.exhSem.v','const.exhSem.Closure_3'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X35),s('type.list.list'('type.string.char'),X33),s('type.exhLang.exp','const.dec_to_exh.compile_exp_2'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X36),s('type.conLang.exp',X34))))) & p(s(bool,'const.finite_map.SUBMAP_2'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X36),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X21)))) & p(s(bool,happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool),happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool))),X5),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X21))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X32))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X35)))))) & (! [X32,X33,X34,X35,X36] : (s('type.conSem.v',X22) != s('type.conSem.v','const.conSem.Closure_3'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X32),s('type.list.list'('type.string.char'),X33),s('type.conLang.exp',X34))) | s('type.exhSem.v',X23) != s('type.exhSem.v','const.exhSem.Closure_3'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X35),s('type.list.list'('type.string.char'),X33),s('type.exhLang.exp','const.dec_to_exh.compile_exp_2'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X36),s('type.conLang.exp',X34))))) | ~p(s(bool,'const.finite_map.SUBMAP_2'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X36),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X21)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool),happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool))),X5),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X21))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X32))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X35))))) | sP14(X5,X21,X23,X22)))),
  inference(nnf_transformation,[],[f63])).
fof(f5375,plain,(
  ( ! [X37,X35,X33,X36,X34] : (~sP14(X36,X35,X34,X33) | s(bool,'T_0') = s(bool,'const.finite_map.SUBMAP_2'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),sK127(X33,X34,X35,X36)),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X35))) | s(bool,'T_0') = s(bool,X37)) ) | $spl2),
  inference(subsumption_resolution,[],[f5364,f645])).
fof(f5364,plain,(
  ( ! [X37,X35,X33,X36,X34] : (p(s(bool,X37)) | ~sP14(X36,X35,X34,X33) | s(bool,'T_0') = s(bool,'const.finite_map.SUBMAP_2'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),sK127(X33,X34,X35,X36)),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X35))) | s(bool,'T_0') = s(bool,X37)) ) | $spl2),
  inference(superposition,[],[f356,f758])).
fof(f5342,plain,(
  ( ! [X35,X33,X36,X34] : (~sP15(X36,X35,X34,X33) | s(bool,'T_0') = s(bool,'const.finite_map.SUBMAP_2'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),sK122(X33,X34,X35,X36)),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X35)))) ) | $spl52),
  inference(cnf_transformation,[],[f5342_D])).
fof(f5342_D,plain,(
  ( ! [X35,X33,X36,X34] : (~sP15(X36,X35,X34,X33) | s(bool,'T_0') = s(bool,'const.finite_map.SUBMAP_2'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),sK122(X33,X34,X35,X36)),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X35)))) ) <=> ~$spl52),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl52])])).
fof(f5343,plain,(
  ( ! [X39,X41,X38,X42,X40] : (~sP15(X41,X40,X39,X38) | s(bool,'T_0') = s(bool,X42) | s(bool,'T_0') = s(bool,'const.finite_map.SUBMAP_2'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),sK122(X38,X39,X40,X41)),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X40)))) ) | $spl2),
  inference(subsumption_resolution,[],[f5331,f645])).
fof(f5331,plain,(
  ( ! [X39,X41,X38,X42,X40] : (p(s(bool,X42)) | ~sP15(X41,X40,X39,X38) | s(bool,'T_0') = s(bool,X42) | s(bool,'T_0') = s(bool,'const.finite_map.SUBMAP_2'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),sK122(X38,X39,X40,X41)),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X40)))) ) | $spl2),
  inference(superposition,[],[f351,f758])).
fof(f351,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,'const.finite_map.SUBMAP_2'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),sK122(X3,X2,X1,X0)),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X1)))) | ~sP15(X0,X1,X2,X3)) )),
  inference(cnf_transformation,[],[f156])).
fof(f156,plain,(
  ! [X0,X1,X2,X3] : ((~sP15(X0,X1,X2,X3) | (s('type.conSem.v',X3) = s('type.conSem.v','const.conSem.Recclosure_3'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),sK119(X3,X2,X1,X0)),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.conLang.exp'))),sK121(X3,X2,X1,X0)),s('type.list.list'('type.string.char'),sK120(X3,X2,X1,X0)))) & s('type.exhSem.v',X2) = s('type.exhSem.v','const.exhSem.Recclosure_3'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK118(X3,X2,X1,X0)),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.exhLang.exp'))),'const.dec_to_exh.compile_funs_2'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),sK122(X3,X2,X1,X0)),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.conLang.exp'))),sK121(X3,X2,X1,X0)))),s('type.list.list'('type.string.char'),sK120(X3,X2,X1,X0)))) & p(s(bool,'const.finite_map.SUBMAP_2'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),sK122(X3,X2,X1,X0)),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X1)))) & p(s(bool,happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool),happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool))),X0),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X1))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),sK119(X3,X2,X1,X0)))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK118(X3,X2,X1,X0))))))) & (! [X4,X5,X6,X7,X8] : (s('type.conSem.v',X3) != s('type.conSem.v','const.conSem.Recclosure_3'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X5),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.conLang.exp'))),X7),s('type.list.list'('type.string.char'),X6))) | s('type.exhSem.v',X2) != s('type.exhSem.v','const.exhSem.Recclosure_3'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X4),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.exhLang.exp'))),'const.dec_to_exh.compile_funs_2'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X8),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.conLang.exp'))),X7))),s('type.list.list'('type.string.char'),X6))) | ~p(s(bool,'const.finite_map.SUBMAP_2'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X8),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X1)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool),happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool))),X0),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X1))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X5))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X4))))) | sP15(X0,X1,X2,X3)))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK118,sK119,sK120,sK121,sK122])],[f155])).
fof(f155,plain,(
  ! [X0,X1,X2,X3] : ((~sP15(X0,X1,X2,X3) | ? [X9,X10,X11,X12,X13] : (s('type.conSem.v',X3) = s('type.conSem.v','const.conSem.Recclosure_3'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X10),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.conLang.exp'))),X12),s('type.list.list'('type.string.char'),X11))) & s('type.exhSem.v',X2) = s('type.exhSem.v','const.exhSem.Recclosure_3'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X9),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.exhLang.exp'))),'const.dec_to_exh.compile_funs_2'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X13),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.conLang.exp'))),X12))),s('type.list.list'('type.string.char'),X11))) & p(s(bool,'const.finite_map.SUBMAP_2'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X13),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X1)))) & p(s(bool,happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool),happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool))),X0),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X1))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X10))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X9)))))) & (! [X4,X5,X6,X7,X8] : (s('type.conSem.v',X3) != s('type.conSem.v','const.conSem.Recclosure_3'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X5),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.conLang.exp'))),X7),s('type.list.list'('type.string.char'),X6))) | s('type.exhSem.v',X2) != s('type.exhSem.v','const.exhSem.Recclosure_3'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X4),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.exhLang.exp'))),'const.dec_to_exh.compile_funs_2'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X8),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.conLang.exp'))),X7))),s('type.list.list'('type.string.char'),X6))) | ~p(s(bool,'const.finite_map.SUBMAP_2'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X8),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X1)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool),happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool))),X0),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X1))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X5))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X4))))) | sP15(X0,X1,X2,X3)))),
  inference(rectify,[],[f154])).
fof(f154,plain,(
  ! [X5,X21,X23,X22] : ((~sP15(X5,X21,X23,X22) | ? [X27,X28,X29,X30,X31] : (s('type.conSem.v',X22) = s('type.conSem.v','const.conSem.Recclosure_3'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X28),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.conLang.exp'))),X30),s('type.list.list'('type.string.char'),X29))) & s('type.exhSem.v',X23) = s('type.exhSem.v','const.exhSem.Recclosure_3'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X27),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.exhLang.exp'))),'const.dec_to_exh.compile_funs_2'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X31),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.conLang.exp'))),X30))),s('type.list.list'('type.string.char'),X29))) & p(s(bool,'const.finite_map.SUBMAP_2'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X31),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X21)))) & p(s(bool,happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool),happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool))),X5),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X21))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X28))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X27)))))) & (! [X27,X28,X29,X30,X31] : (s('type.conSem.v',X22) != s('type.conSem.v','const.conSem.Recclosure_3'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X28),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.conLang.exp'))),X30),s('type.list.list'('type.string.char'),X29))) | s('type.exhSem.v',X23) != s('type.exhSem.v','const.exhSem.Recclosure_3'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X27),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.exhLang.exp'))),'const.dec_to_exh.compile_funs_2'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X31),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.conLang.exp'))),X30))),s('type.list.list'('type.string.char'),X29))) | ~p(s(bool,'const.finite_map.SUBMAP_2'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X31),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X21)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool),happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool))),X5),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X21))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X28))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X27))))) | sP15(X5,X21,X23,X22)))),
  inference(nnf_transformation,[],[f64])).
fof(f5341,plain,(
  ( ! [X37,X35,X33,X36,X34] : (~sP15(X36,X35,X34,X33) | s(bool,'T_0') = s(bool,'const.finite_map.SUBMAP_2'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),sK122(X33,X34,X35,X36)),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X35))) | s(bool,'T_0') = s(bool,X37)) ) | $spl2),
  inference(subsumption_resolution,[],[f5330,f645])).
fof(f5330,plain,(
  ( ! [X37,X35,X33,X36,X34] : (p(s(bool,X37)) | ~sP15(X36,X35,X34,X33) | s(bool,'T_0') = s(bool,'const.finite_map.SUBMAP_2'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),sK122(X33,X34,X35,X36)),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X35))) | s(bool,'T_0') = s(bool,X37)) ) | $spl2),
  inference(superposition,[],[f351,f758])).
fof(f5179,plain,(
  ( ! [X35,X33,X36,X34] : (~sP7(X36,X35,X34,X33) | s(bool,'T_0') = s(bool,'const.finite_map.SUBMAP_2'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),sK89(X33,X34,X35,X36)),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X35)))) ) | $spl50),
  inference(cnf_transformation,[],[f5179_D])).
fof(f5179_D,plain,(
  ( ! [X35,X33,X36,X34] : (~sP7(X36,X35,X34,X33) | s(bool,'T_0') = s(bool,'const.finite_map.SUBMAP_2'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),sK89(X33,X34,X35,X36)),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X35)))) ) <=> ~$spl50),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl50])])).
fof(f5180,plain,(
  ( ! [X39,X41,X38,X42,X40] : (~sP7(X41,X40,X39,X38) | s(bool,'T_0') = s(bool,X42) | s(bool,'T_0') = s(bool,'const.finite_map.SUBMAP_2'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),sK89(X38,X39,X40,X41)),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X40)))) ) | $spl2),
  inference(subsumption_resolution,[],[f5168,f645])).
fof(f5168,plain,(
  ( ! [X39,X41,X38,X42,X40] : (p(s(bool,X42)) | ~sP7(X41,X40,X39,X38) | s(bool,'T_0') = s(bool,X42) | s(bool,'T_0') = s(bool,'const.finite_map.SUBMAP_2'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),sK89(X38,X39,X40,X41)),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X40)))) ) | $spl2),
  inference(superposition,[],[f299,f758])).
fof(f299,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,'const.finite_map.SUBMAP_2'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),sK89(X3,X2,X1,X0)),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X1)))) | ~sP7(X0,X1,X2,X3)) )),
  inference(cnf_transformation,[],[f133])).
fof(f133,plain,(
  ! [X0,X1,X2,X3] : ((~sP7(X0,X1,X2,X3) | (s('type.conSem.v',X3) = s('type.conSem.v','const.conSem.Closure_3'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),sK85(X3,X2,X1,X0)),s('type.list.list'('type.string.char'),sK86(X3,X2,X1,X0)),s('type.conLang.exp',sK87(X3,X2,X1,X0)))) & s('type.exhSem.v',X2) = s('type.exhSem.v','const.exhSem.Closure_3'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK88(X3,X2,X1,X0)),s('type.list.list'('type.string.char'),sK86(X3,X2,X1,X0)),s('type.exhLang.exp','const.dec_to_exh.compile_exp_2'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),sK89(X3,X2,X1,X0)),s('type.conLang.exp',sK87(X3,X2,X1,X0)))))) & p(s(bool,'const.finite_map.SUBMAP_2'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),sK89(X3,X2,X1,X0)),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X1)))) & p(s(bool,happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool),happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool))),X0),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X1))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),sK85(X3,X2,X1,X0)))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK88(X3,X2,X1,X0))))))) & (! [X4,X5,X6,X7,X8] : (s('type.conSem.v',X3) != s('type.conSem.v','const.conSem.Closure_3'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X4),s('type.list.list'('type.string.char'),X5),s('type.conLang.exp',X6))) | s('type.exhSem.v',X2) != s('type.exhSem.v','const.exhSem.Closure_3'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X7),s('type.list.list'('type.string.char'),X5),s('type.exhLang.exp','const.dec_to_exh.compile_exp_2'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X8),s('type.conLang.exp',X6))))) | ~p(s(bool,'const.finite_map.SUBMAP_2'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X8),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X1)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool),happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool))),X0),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X1))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X4))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X7))))) | sP7(X0,X1,X2,X3)))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK85,sK86,sK87,sK88,sK89])],[f132])).
fof(f132,plain,(
  ! [X0,X1,X2,X3] : ((~sP7(X0,X1,X2,X3) | ? [X9,X10,X11,X12,X13] : (s('type.conSem.v',X3) = s('type.conSem.v','const.conSem.Closure_3'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X9),s('type.list.list'('type.string.char'),X10),s('type.conLang.exp',X11))) & s('type.exhSem.v',X2) = s('type.exhSem.v','const.exhSem.Closure_3'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X12),s('type.list.list'('type.string.char'),X10),s('type.exhLang.exp','const.dec_to_exh.compile_exp_2'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X13),s('type.conLang.exp',X11))))) & p(s(bool,'const.finite_map.SUBMAP_2'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X13),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X1)))) & p(s(bool,happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool),happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool))),X0),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X1))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X9))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X12)))))) & (! [X4,X5,X6,X7,X8] : (s('type.conSem.v',X3) != s('type.conSem.v','const.conSem.Closure_3'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X4),s('type.list.list'('type.string.char'),X5),s('type.conLang.exp',X6))) | s('type.exhSem.v',X2) != s('type.exhSem.v','const.exhSem.Closure_3'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X7),s('type.list.list'('type.string.char'),X5),s('type.exhLang.exp','const.dec_to_exh.compile_exp_2'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X8),s('type.conLang.exp',X6))))) | ~p(s(bool,'const.finite_map.SUBMAP_2'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X8),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X1)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool),happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool))),X0),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X1))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X4))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X7))))) | sP7(X0,X1,X2,X3)))),
  inference(rectify,[],[f131])).
fof(f131,plain,(
  ! [X5,X21,X23,X22] : ((~sP7(X5,X21,X23,X22) | ? [X32,X33,X34,X35,X36] : (s('type.conSem.v',X22) = s('type.conSem.v','const.conSem.Closure_3'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X32),s('type.list.list'('type.string.char'),X33),s('type.conLang.exp',X34))) & s('type.exhSem.v',X23) = s('type.exhSem.v','const.exhSem.Closure_3'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X35),s('type.list.list'('type.string.char'),X33),s('type.exhLang.exp','const.dec_to_exh.compile_exp_2'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X36),s('type.conLang.exp',X34))))) & p(s(bool,'const.finite_map.SUBMAP_2'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X36),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X21)))) & p(s(bool,happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool),happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool))),X5),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X21))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X32))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X35)))))) & (! [X32,X33,X34,X35,X36] : (s('type.conSem.v',X22) != s('type.conSem.v','const.conSem.Closure_3'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X32),s('type.list.list'('type.string.char'),X33),s('type.conLang.exp',X34))) | s('type.exhSem.v',X23) != s('type.exhSem.v','const.exhSem.Closure_3'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X35),s('type.list.list'('type.string.char'),X33),s('type.exhLang.exp','const.dec_to_exh.compile_exp_2'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X36),s('type.conLang.exp',X34))))) | ~p(s(bool,'const.finite_map.SUBMAP_2'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X36),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X21)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool),happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool))),X5),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X21))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X32))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X35))))) | sP7(X5,X21,X23,X22)))),
  inference(nnf_transformation,[],[f55])).
fof(f5178,plain,(
  ( ! [X37,X35,X33,X36,X34] : (~sP7(X36,X35,X34,X33) | s(bool,'T_0') = s(bool,'const.finite_map.SUBMAP_2'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),sK89(X33,X34,X35,X36)),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X35))) | s(bool,'T_0') = s(bool,X37)) ) | $spl2),
  inference(subsumption_resolution,[],[f5167,f645])).
fof(f5167,plain,(
  ( ! [X37,X35,X33,X36,X34] : (p(s(bool,X37)) | ~sP7(X36,X35,X34,X33) | s(bool,'T_0') = s(bool,'const.finite_map.SUBMAP_2'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),sK89(X33,X34,X35,X36)),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X35))) | s(bool,'T_0') = s(bool,X37)) ) | $spl2),
  inference(superposition,[],[f299,f758])).
fof(f5145,plain,(
  ( ! [X35,X33,X36,X34] : (~sP8(X36,X35,X34,X33) | s(bool,'T_0') = s(bool,'const.finite_map.SUBMAP_2'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),sK84(X33,X34,X35,X36)),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X35)))) ) | $spl48),
  inference(cnf_transformation,[],[f5145_D])).
fof(f5145_D,plain,(
  ( ! [X35,X33,X36,X34] : (~sP8(X36,X35,X34,X33) | s(bool,'T_0') = s(bool,'const.finite_map.SUBMAP_2'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),sK84(X33,X34,X35,X36)),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X35)))) ) <=> ~$spl48),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl48])])).
fof(f5146,plain,(
  ( ! [X39,X41,X38,X42,X40] : (~sP8(X41,X40,X39,X38) | s(bool,'T_0') = s(bool,X42) | s(bool,'T_0') = s(bool,'const.finite_map.SUBMAP_2'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),sK84(X38,X39,X40,X41)),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X40)))) ) | $spl2),
  inference(subsumption_resolution,[],[f5134,f645])).
fof(f5134,plain,(
  ( ! [X39,X41,X38,X42,X40] : (p(s(bool,X42)) | ~sP8(X41,X40,X39,X38) | s(bool,'T_0') = s(bool,X42) | s(bool,'T_0') = s(bool,'const.finite_map.SUBMAP_2'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),sK84(X38,X39,X40,X41)),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X40)))) ) | $spl2),
  inference(superposition,[],[f294,f758])).
fof(f294,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,'const.finite_map.SUBMAP_2'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),sK84(X3,X2,X1,X0)),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X1)))) | ~sP8(X0,X1,X2,X3)) )),
  inference(cnf_transformation,[],[f130])).
fof(f130,plain,(
  ! [X0,X1,X2,X3] : ((~sP8(X0,X1,X2,X3) | (s('type.conSem.v',X3) = s('type.conSem.v','const.conSem.Recclosure_3'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),sK81(X3,X2,X1,X0)),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.conLang.exp'))),sK83(X3,X2,X1,X0)),s('type.list.list'('type.string.char'),sK82(X3,X2,X1,X0)))) & s('type.exhSem.v',X2) = s('type.exhSem.v','const.exhSem.Recclosure_3'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK80(X3,X2,X1,X0)),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.exhLang.exp'))),'const.dec_to_exh.compile_funs_2'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),sK84(X3,X2,X1,X0)),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.conLang.exp'))),sK83(X3,X2,X1,X0)))),s('type.list.list'('type.string.char'),sK82(X3,X2,X1,X0)))) & p(s(bool,'const.finite_map.SUBMAP_2'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),sK84(X3,X2,X1,X0)),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X1)))) & p(s(bool,happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool),happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool))),X0),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X1))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),sK81(X3,X2,X1,X0)))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK80(X3,X2,X1,X0))))))) & (! [X4,X5,X6,X7,X8] : (s('type.conSem.v',X3) != s('type.conSem.v','const.conSem.Recclosure_3'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X5),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.conLang.exp'))),X7),s('type.list.list'('type.string.char'),X6))) | s('type.exhSem.v',X2) != s('type.exhSem.v','const.exhSem.Recclosure_3'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X4),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.exhLang.exp'))),'const.dec_to_exh.compile_funs_2'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X8),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.conLang.exp'))),X7))),s('type.list.list'('type.string.char'),X6))) | ~p(s(bool,'const.finite_map.SUBMAP_2'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X8),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X1)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool),happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool))),X0),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X1))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X5))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X4))))) | sP8(X0,X1,X2,X3)))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK80,sK81,sK82,sK83,sK84])],[f129])).
fof(f129,plain,(
  ! [X0,X1,X2,X3] : ((~sP8(X0,X1,X2,X3) | ? [X9,X10,X11,X12,X13] : (s('type.conSem.v',X3) = s('type.conSem.v','const.conSem.Recclosure_3'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X10),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.conLang.exp'))),X12),s('type.list.list'('type.string.char'),X11))) & s('type.exhSem.v',X2) = s('type.exhSem.v','const.exhSem.Recclosure_3'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X9),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.exhLang.exp'))),'const.dec_to_exh.compile_funs_2'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X13),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.conLang.exp'))),X12))),s('type.list.list'('type.string.char'),X11))) & p(s(bool,'const.finite_map.SUBMAP_2'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X13),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X1)))) & p(s(bool,happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool),happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool))),X0),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X1))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X10))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X9)))))) & (! [X4,X5,X6,X7,X8] : (s('type.conSem.v',X3) != s('type.conSem.v','const.conSem.Recclosure_3'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X5),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.conLang.exp'))),X7),s('type.list.list'('type.string.char'),X6))) | s('type.exhSem.v',X2) != s('type.exhSem.v','const.exhSem.Recclosure_3'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X4),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.exhLang.exp'))),'const.dec_to_exh.compile_funs_2'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X8),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.conLang.exp'))),X7))),s('type.list.list'('type.string.char'),X6))) | ~p(s(bool,'const.finite_map.SUBMAP_2'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X8),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X1)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool),happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool))),X0),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X1))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X5))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X4))))) | sP8(X0,X1,X2,X3)))),
  inference(rectify,[],[f128])).
fof(f128,plain,(
  ! [X5,X21,X23,X22] : ((~sP8(X5,X21,X23,X22) | ? [X27,X28,X29,X30,X31] : (s('type.conSem.v',X22) = s('type.conSem.v','const.conSem.Recclosure_3'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X28),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.conLang.exp'))),X30),s('type.list.list'('type.string.char'),X29))) & s('type.exhSem.v',X23) = s('type.exhSem.v','const.exhSem.Recclosure_3'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X27),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.exhLang.exp'))),'const.dec_to_exh.compile_funs_2'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X31),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.conLang.exp'))),X30))),s('type.list.list'('type.string.char'),X29))) & p(s(bool,'const.finite_map.SUBMAP_2'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X31),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X21)))) & p(s(bool,happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool),happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool))),X5),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X21))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X28))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X27)))))) & (! [X27,X28,X29,X30,X31] : (s('type.conSem.v',X22) != s('type.conSem.v','const.conSem.Recclosure_3'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X28),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.conLang.exp'))),X30),s('type.list.list'('type.string.char'),X29))) | s('type.exhSem.v',X23) != s('type.exhSem.v','const.exhSem.Recclosure_3'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X27),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.exhLang.exp'))),'const.dec_to_exh.compile_funs_2'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X31),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.conLang.exp'))),X30))),s('type.list.list'('type.string.char'),X29))) | ~p(s(bool,'const.finite_map.SUBMAP_2'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X31),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X21)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool),happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool))),X5),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X21))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X28))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X27))))) | sP8(X5,X21,X23,X22)))),
  inference(nnf_transformation,[],[f56])).
fof(f5144,plain,(
  ( ! [X37,X35,X33,X36,X34] : (~sP8(X36,X35,X34,X33) | s(bool,'T_0') = s(bool,'const.finite_map.SUBMAP_2'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),sK84(X33,X34,X35,X36)),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X35))) | s(bool,'T_0') = s(bool,X37)) ) | $spl2),
  inference(subsumption_resolution,[],[f5133,f645])).
fof(f5133,plain,(
  ( ! [X37,X35,X33,X36,X34] : (p(s(bool,X37)) | ~sP8(X36,X35,X34,X33) | s(bool,'T_0') = s(bool,'const.finite_map.SUBMAP_2'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),sK84(X33,X34,X35,X36)),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X35))) | s(bool,'T_0') = s(bool,X37)) ) | $spl2),
  inference(superposition,[],[f294,f758])).
fof(f5061,plain,(
  ( ! [X118,X116,X119,X117] : (~sP0(X119,X118,X117,X116) | s(bool,'T_0') = s(bool,'const.finite_map.SUBMAP_2'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),sK51(X116,X117,X118,X119)),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X118)))) ) | $spl46),
  inference(cnf_transformation,[],[f5061_D])).
fof(f5061_D,plain,(
  ( ! [X118,X116,X119,X117] : (~sP0(X119,X118,X117,X116) | s(bool,'T_0') = s(bool,'const.finite_map.SUBMAP_2'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),sK51(X116,X117,X118,X119)),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X118)))) ) <=> ~$spl46),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl46])])).
fof(f5071,plain,(
  ( ! [X118,X116,X120,X119,X117] : (~sP0(X119,X118,X117,X116) | s(bool,'T_0') = s(bool,X120) | s(bool,'T_0') = s(bool,'const.finite_map.SUBMAP_2'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),sK51(X116,X117,X118,X119)),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X118)))) ) | $spl2),
  inference(subsumption_resolution,[],[f4777,f645])).
fof(f4777,plain,(
  ( ! [X118,X116,X120,X119,X117] : (p(s(bool,X120)) | ~sP0(X119,X118,X117,X116) | s(bool,'T_0') = s(bool,X120) | s(bool,'T_0') = s(bool,'const.finite_map.SUBMAP_2'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),sK51(X116,X117,X118,X119)),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X118)))) ) | $spl2),
  inference(superposition,[],[f242,f758])).
fof(f242,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,'const.finite_map.SUBMAP_2'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),sK51(X3,X2,X1,X0)),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X1)))) | ~sP0(X0,X1,X2,X3)) )),
  inference(cnf_transformation,[],[f107])).
fof(f107,plain,(
  ! [X0,X1,X2,X3] : ((~sP0(X0,X1,X2,X3) | (s('type.conSem.v',X3) = s('type.conSem.v','const.conSem.Closure_3'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),sK47(X3,X2,X1,X0)),s('type.list.list'('type.string.char'),sK48(X3,X2,X1,X0)),s('type.conLang.exp',sK49(X3,X2,X1,X0)))) & s('type.exhSem.v',X2) = s('type.exhSem.v','const.exhSem.Closure_3'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK50(X3,X2,X1,X0)),s('type.list.list'('type.string.char'),sK48(X3,X2,X1,X0)),s('type.exhLang.exp','const.dec_to_exh.compile_exp_2'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),sK51(X3,X2,X1,X0)),s('type.conLang.exp',sK49(X3,X2,X1,X0)))))) & p(s(bool,'const.finite_map.SUBMAP_2'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),sK51(X3,X2,X1,X0)),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X1)))) & p(s(bool,happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool),happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool))),X0),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X1))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),sK47(X3,X2,X1,X0)))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK50(X3,X2,X1,X0))))))) & (! [X4,X5,X6,X7,X8] : (s('type.conSem.v',X3) != s('type.conSem.v','const.conSem.Closure_3'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X4),s('type.list.list'('type.string.char'),X5),s('type.conLang.exp',X6))) | s('type.exhSem.v',X2) != s('type.exhSem.v','const.exhSem.Closure_3'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X7),s('type.list.list'('type.string.char'),X5),s('type.exhLang.exp','const.dec_to_exh.compile_exp_2'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X8),s('type.conLang.exp',X6))))) | ~p(s(bool,'const.finite_map.SUBMAP_2'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X8),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X1)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool),happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool))),X0),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X1))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X4))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X7))))) | sP0(X0,X1,X2,X3)))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK47,sK48,sK49,sK50,sK51])],[f106])).
fof(f106,plain,(
  ! [X0,X1,X2,X3] : ((~sP0(X0,X1,X2,X3) | ? [X9,X10,X11,X12,X13] : (s('type.conSem.v',X3) = s('type.conSem.v','const.conSem.Closure_3'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X9),s('type.list.list'('type.string.char'),X10),s('type.conLang.exp',X11))) & s('type.exhSem.v',X2) = s('type.exhSem.v','const.exhSem.Closure_3'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X12),s('type.list.list'('type.string.char'),X10),s('type.exhLang.exp','const.dec_to_exh.compile_exp_2'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X13),s('type.conLang.exp',X11))))) & p(s(bool,'const.finite_map.SUBMAP_2'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X13),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X1)))) & p(s(bool,happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool),happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool))),X0),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X1))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X9))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X12)))))) & (! [X4,X5,X6,X7,X8] : (s('type.conSem.v',X3) != s('type.conSem.v','const.conSem.Closure_3'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X4),s('type.list.list'('type.string.char'),X5),s('type.conLang.exp',X6))) | s('type.exhSem.v',X2) != s('type.exhSem.v','const.exhSem.Closure_3'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X7),s('type.list.list'('type.string.char'),X5),s('type.exhLang.exp','const.dec_to_exh.compile_exp_2'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X8),s('type.conLang.exp',X6))))) | ~p(s(bool,'const.finite_map.SUBMAP_2'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X8),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X1)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool),happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool))),X0),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X1))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X4))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X7))))) | sP0(X0,X1,X2,X3)))),
  inference(rectify,[],[f105])).
fof(f105,plain,(
  ! [X5,X21,X23,X22] : ((~sP0(X5,X21,X23,X22) | ? [X32,X33,X34,X35,X36] : (s('type.conSem.v',X22) = s('type.conSem.v','const.conSem.Closure_3'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X32),s('type.list.list'('type.string.char'),X33),s('type.conLang.exp',X34))) & s('type.exhSem.v',X23) = s('type.exhSem.v','const.exhSem.Closure_3'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X35),s('type.list.list'('type.string.char'),X33),s('type.exhLang.exp','const.dec_to_exh.compile_exp_2'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X36),s('type.conLang.exp',X34))))) & p(s(bool,'const.finite_map.SUBMAP_2'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X36),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X21)))) & p(s(bool,happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool),happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool))),X5),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X21))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X32))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X35)))))) & (! [X32,X33,X34,X35,X36] : (s('type.conSem.v',X22) != s('type.conSem.v','const.conSem.Closure_3'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X32),s('type.list.list'('type.string.char'),X33),s('type.conLang.exp',X34))) | s('type.exhSem.v',X23) != s('type.exhSem.v','const.exhSem.Closure_3'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X35),s('type.list.list'('type.string.char'),X33),s('type.exhLang.exp','const.dec_to_exh.compile_exp_2'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X36),s('type.conLang.exp',X34))))) | ~p(s(bool,'const.finite_map.SUBMAP_2'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X36),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X21)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool),happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool))),X5),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X21))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X32))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X35))))) | sP0(X5,X21,X23,X22)))),
  inference(nnf_transformation,[],[f47])).
fof(f5059,plain,(
  ( ! [X111,X114,X112,X113] : (~sP1(X114,X113,X112,X111) | s(bool,'T_0') = s(bool,'const.finite_map.SUBMAP_2'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),sK46(X111,X112,X113,X114)),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X113)))) ) | $spl44),
  inference(cnf_transformation,[],[f5059_D])).
fof(f5059_D,plain,(
  ( ! [X111,X114,X112,X113] : (~sP1(X114,X113,X112,X111) | s(bool,'T_0') = s(bool,'const.finite_map.SUBMAP_2'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),sK46(X111,X112,X113,X114)),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X113)))) ) <=> ~$spl44),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl44])])).
fof(f5070,plain,(
  ( ! [X111,X114,X112,X115,X113] : (~sP1(X114,X113,X112,X111) | s(bool,'T_0') = s(bool,X115) | s(bool,'T_0') = s(bool,'const.finite_map.SUBMAP_2'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),sK46(X111,X112,X113,X114)),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X113)))) ) | $spl2),
  inference(subsumption_resolution,[],[f4776,f645])).
fof(f4776,plain,(
  ( ! [X111,X114,X112,X115,X113] : (p(s(bool,X115)) | ~sP1(X114,X113,X112,X111) | s(bool,'T_0') = s(bool,X115) | s(bool,'T_0') = s(bool,'const.finite_map.SUBMAP_2'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),sK46(X111,X112,X113,X114)),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X113)))) ) | $spl2),
  inference(superposition,[],[f237,f758])).
fof(f237,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,'const.finite_map.SUBMAP_2'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),sK46(X3,X2,X1,X0)),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X1)))) | ~sP1(X0,X1,X2,X3)) )),
  inference(cnf_transformation,[],[f104])).
fof(f104,plain,(
  ! [X0,X1,X2,X3] : ((~sP1(X0,X1,X2,X3) | (s('type.conSem.v',X3) = s('type.conSem.v','const.conSem.Recclosure_3'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),sK43(X3,X2,X1,X0)),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.conLang.exp'))),sK45(X3,X2,X1,X0)),s('type.list.list'('type.string.char'),sK44(X3,X2,X1,X0)))) & s('type.exhSem.v',X2) = s('type.exhSem.v','const.exhSem.Recclosure_3'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK42(X3,X2,X1,X0)),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.exhLang.exp'))),'const.dec_to_exh.compile_funs_2'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),sK46(X3,X2,X1,X0)),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.conLang.exp'))),sK45(X3,X2,X1,X0)))),s('type.list.list'('type.string.char'),sK44(X3,X2,X1,X0)))) & p(s(bool,'const.finite_map.SUBMAP_2'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),sK46(X3,X2,X1,X0)),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X1)))) & p(s(bool,happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool),happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool))),X0),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X1))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),sK43(X3,X2,X1,X0)))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK42(X3,X2,X1,X0))))))) & (! [X4,X5,X6,X7,X8] : (s('type.conSem.v',X3) != s('type.conSem.v','const.conSem.Recclosure_3'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X5),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.conLang.exp'))),X7),s('type.list.list'('type.string.char'),X6))) | s('type.exhSem.v',X2) != s('type.exhSem.v','const.exhSem.Recclosure_3'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X4),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.exhLang.exp'))),'const.dec_to_exh.compile_funs_2'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X8),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.conLang.exp'))),X7))),s('type.list.list'('type.string.char'),X6))) | ~p(s(bool,'const.finite_map.SUBMAP_2'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X8),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X1)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool),happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool))),X0),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X1))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X5))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X4))))) | sP1(X0,X1,X2,X3)))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK42,sK43,sK44,sK45,sK46])],[f103])).
fof(f103,plain,(
  ! [X0,X1,X2,X3] : ((~sP1(X0,X1,X2,X3) | ? [X9,X10,X11,X12,X13] : (s('type.conSem.v',X3) = s('type.conSem.v','const.conSem.Recclosure_3'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X10),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.conLang.exp'))),X12),s('type.list.list'('type.string.char'),X11))) & s('type.exhSem.v',X2) = s('type.exhSem.v','const.exhSem.Recclosure_3'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X9),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.exhLang.exp'))),'const.dec_to_exh.compile_funs_2'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X13),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.conLang.exp'))),X12))),s('type.list.list'('type.string.char'),X11))) & p(s(bool,'const.finite_map.SUBMAP_2'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X13),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X1)))) & p(s(bool,happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool),happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool))),X0),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X1))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X10))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X9)))))) & (! [X4,X5,X6,X7,X8] : (s('type.conSem.v',X3) != s('type.conSem.v','const.conSem.Recclosure_3'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X5),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.conLang.exp'))),X7),s('type.list.list'('type.string.char'),X6))) | s('type.exhSem.v',X2) != s('type.exhSem.v','const.exhSem.Recclosure_3'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X4),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.exhLang.exp'))),'const.dec_to_exh.compile_funs_2'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X8),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.conLang.exp'))),X7))),s('type.list.list'('type.string.char'),X6))) | ~p(s(bool,'const.finite_map.SUBMAP_2'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X8),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X1)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool),happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool))),X0),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X1))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X5))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X4))))) | sP1(X0,X1,X2,X3)))),
  inference(rectify,[],[f102])).
fof(f102,plain,(
  ! [X5,X21,X23,X22] : ((~sP1(X5,X21,X23,X22) | ? [X27,X28,X29,X30,X31] : (s('type.conSem.v',X22) = s('type.conSem.v','const.conSem.Recclosure_3'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X28),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.conLang.exp'))),X30),s('type.list.list'('type.string.char'),X29))) & s('type.exhSem.v',X23) = s('type.exhSem.v','const.exhSem.Recclosure_3'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X27),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.exhLang.exp'))),'const.dec_to_exh.compile_funs_2'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X31),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.conLang.exp'))),X30))),s('type.list.list'('type.string.char'),X29))) & p(s(bool,'const.finite_map.SUBMAP_2'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X31),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X21)))) & p(s(bool,happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool),happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool))),X5),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X21))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X28))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X27)))))) & (! [X27,X28,X29,X30,X31] : (s('type.conSem.v',X22) != s('type.conSem.v','const.conSem.Recclosure_3'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X28),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.conLang.exp'))),X30),s('type.list.list'('type.string.char'),X29))) | s('type.exhSem.v',X23) != s('type.exhSem.v','const.exhSem.Recclosure_3'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X27),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.exhLang.exp'))),'const.dec_to_exh.compile_funs_2'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X31),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.conLang.exp'))),X30))),s('type.list.list'('type.string.char'),X29))) | ~p(s(bool,'const.finite_map.SUBMAP_2'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X31),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X21)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool),happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),bool))),X5),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X21))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X28))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X27))))) | sP1(X5,X21,X23,X22)))),
  inference(nnf_transformation,[],[f48])).
fof(f4498,plain,(
  ( ! [X68,X69] : (s(bool,X68) != s(bool,X69) | s(bool,'F_0') = s(bool,X68) | s(bool,'T_0') = s(bool,X69)) ) | $spl42),
  inference(cnf_transformation,[],[f4498_D])).
fof(f4498_D,plain,(
  ( ! [X68,X69] : (s(bool,X68) != s(bool,X69) | s(bool,'F_0') = s(bool,X68) | s(bool,'T_0') = s(bool,X69)) ) <=> ~$spl42),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl42])])).
fof(f5066,plain,(
  ( ! [X57,X56,X55] : (s(bool,X56) != s(bool,X57) | s(bool,'F_0') = s(bool,X57) | s(bool,'T_0') = s(bool,X56) | s(bool,'T_0') = s(bool,X55)) ) | ($spl2 | $spl7)),
  inference(subsumption_resolution,[],[f4754,f645])).
fof(f4754,plain,(
  ( ! [X57,X56,X55] : (s(bool,X56) != s(bool,X57) | p(s(bool,X55)) | s(bool,'F_0') = s(bool,X57) | s(bool,'T_0') = s(bool,X56) | s(bool,'T_0') = s(bool,X55)) ) | ($spl2 | $spl7)),
  inference(superposition,[],[f1682,f758])).
fof(f5060,plain,(
  ( ! [X118,X116,X120,X119,X117] : (~sP0(X119,X118,X117,X116) | s(bool,'T_0') = s(bool,'const.finite_map.SUBMAP_2'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),sK51(X116,X117,X118,X119)),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X118))) | s(bool,'T_0') = s(bool,X120)) ) | $spl2),
  inference(subsumption_resolution,[],[f4727,f645])).
fof(f4727,plain,(
  ( ! [X118,X116,X120,X119,X117] : (p(s(bool,X120)) | ~sP0(X119,X118,X117,X116) | s(bool,'T_0') = s(bool,'const.finite_map.SUBMAP_2'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),sK51(X116,X117,X118,X119)),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X118))) | s(bool,'T_0') = s(bool,X120)) ) | $spl2),
  inference(superposition,[],[f242,f758])).
fof(f5058,plain,(
  ( ! [X111,X114,X112,X115,X113] : (~sP1(X114,X113,X112,X111) | s(bool,'T_0') = s(bool,'const.finite_map.SUBMAP_2'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),sK46(X111,X112,X113,X114)),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X113))) | s(bool,'T_0') = s(bool,X115)) ) | $spl2),
  inference(subsumption_resolution,[],[f4726,f645])).
fof(f4726,plain,(
  ( ! [X111,X114,X112,X115,X113] : (p(s(bool,X115)) | ~sP1(X114,X113,X112,X111) | s(bool,'T_0') = s(bool,'const.finite_map.SUBMAP_2'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),sK46(X111,X112,X113,X114)),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X113))) | s(bool,'T_0') = s(bool,X115)) ) | $spl2),
  inference(superposition,[],[f237,f758])).
fof(f5054,plain,(
  ( ! [X57,X56,X55] : (s(bool,X56) != s(bool,X57) | s(bool,'F_0') = s(bool,X57) | s(bool,'T_0') = s(bool,X55) | s(bool,'T_0') = s(bool,X56)) ) | ($spl2 | $spl7)),
  inference(subsumption_resolution,[],[f4704,f645])).
fof(f4704,plain,(
  ( ! [X57,X56,X55] : (s(bool,X56) != s(bool,X57) | p(s(bool,X55)) | s(bool,'F_0') = s(bool,X57) | s(bool,'T_0') = s(bool,X55) | s(bool,'T_0') = s(bool,X56)) ) | ($spl2 | $spl7)),
  inference(superposition,[],[f1682,f758])).
fof(f4505,plain,(
  ( ! [X68,X69,X67] : (s(bool,X68) != s(bool,X69) | s(bool,'T_0') = s(bool,X69) | s(bool,'F_0') = s(bool,X68) | s(bool,'F_0') = s(bool,X67)) ) | $spl7),
  inference(subsumption_resolution,[],[f4255,f1538])).
fof(f4255,plain,(
  ( ! [X68,X69,X67] : (s(bool,X68) != s(bool,X69) | ~p(s(bool,X67)) | s(bool,'T_0') = s(bool,X69) | s(bool,'F_0') = s(bool,X68) | s(bool,'F_0') = s(bool,X67)) ) | $spl7),
  inference(superposition,[],[f2342,f2345])).
fof(f4497,plain,(
  ( ! [X68,X69,X67] : (s(bool,X68) != s(bool,X69) | s(bool,'T_0') = s(bool,X69) | s(bool,'F_0') = s(bool,X67) | s(bool,'F_0') = s(bool,X68)) ) | $spl7),
  inference(subsumption_resolution,[],[f4212,f1538])).
fof(f4212,plain,(
  ( ! [X68,X69,X67] : (s(bool,X68) != s(bool,X69) | ~p(s(bool,X67)) | s(bool,'T_0') = s(bool,X69) | s(bool,'F_0') = s(bool,X67) | s(bool,'F_0') = s(bool,X68)) ) | $spl7),
  inference(superposition,[],[f2342,f2345])).
fof(f2903,plain,(
  ( ! [X134,X132,X135,X133,X131] : (s(bool,X135) != s(bool,sK137(X131,X132,X133,X133,X134)) | s(bool,'T_0') = s(bool,X135)) ) | $spl26),
  inference(cnf_transformation,[],[f2903_D])).
fof(f2903_D,plain,(
  ( ! [X134,X132,X135,X133,X131] : (s(bool,X135) != s(bool,sK137(X131,X132,X133,X133,X134)) | s(bool,'T_0') = s(bool,X135)) ) <=> ~$spl26),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl26])])).
fof(f4032,plain,(
  ( ! [X134,X132,X130,X135,X133,X131] : (s(bool,X135) != s(bool,sK137(X131,X132,X133,X133,X134)) | s(bool,'T_0') = s(bool,X135) | s(bool,'F_0') = s(bool,X130)) ) | ($spl2 | $spl7)),
  inference(subsumption_resolution,[],[f3963,f1538])).
fof(f3963,plain,(
  ( ! [X134,X132,X130,X135,X133,X131] : (s(bool,X135) != s(bool,sK137(X131,X132,X133,X133,X134)) | ~p(s(bool,X130)) | s(bool,'T_0') = s(bool,X135) | s(bool,'F_0') = s(bool,X130)) ) | ($spl2 | $spl7)),
  inference(superposition,[],[f2342,f917])).
fof(f3919,plain,(
  $false | $spl32),
  inference(equality_resolution,[],[f3888])).
fof(f3888,plain,(
  ( ! [X0,X1] : (s('type.conSem.v',X0) != s('type.conSem.v','const.conSem.Loc_1'(s('type.num.num',X1)))) ) | $spl32),
  inference(equality_resolution,[],[f3350])).
fof(f3786,plain,(
  $false | $spl28),
  inference(equality_resolution,[],[f3753])).
fof(f3753,plain,(
  ( ! [X0,X1] : (s('type.conSem.v',X0) != s('type.conSem.v','const.conSem.Litv_1'(s('type.ast.lit',X1)))) ) | $spl28),
  inference(equality_resolution,[],[f3344])).
fof(f3565,plain,(
  $false | ($spl7 | $spl10 | $spl38)),
  inference(subsumption_resolution,[],[f3564,f3453])).
fof(f3564,plain,(
  ( ! [X15] : (s(bool,'T_0') != s(bool,X15)) ) | ($spl7 | $spl10 | $spl38)),
  inference(subsumption_resolution,[],[f3489,f1556])).
fof(f3489,plain,(
  ( ! [X15] : (s(bool,'T_0') != s(bool,X15) | ~p(s(bool,X15))) ) | ($spl10 | $spl38)),
  inference(backward_demodulation,[],[f3453,f1478])).
fof(f3563,plain,(
  $false | $spl38),
  inference(subsumption_resolution,[],[f3486,f195])).
fof(f195,plain,(
  p(s(bool,'T_0'))),
  inference(cnf_transformation,[],[f1])).
fof(f1,axiom,(
  p(s(bool,'T_0'))),
  file('thm.dec_to_exhProof.v_rel_rules|split|0',aHL_TRUTH)).
fof(f3486,plain,(
  ~p(s(bool,'T_0')) | $spl38),
  inference(backward_demodulation,[],[f3453,f193])).
fof(f3558,plain,(
  $false | ($spl7 | $spl38)),
  inference(trivial_inequality_removal,[],[f3555])).
fof(f3555,plain,(
  s(bool,'T_0') != s(bool,'T_0') | ($spl7 | $spl38)),
  inference(superposition,[],[f1394,f3453])).
fof(f3463,plain,(
  $false | $spl0),
  inference(resolution,[],[f3274,f195])).
fof(f3274,plain,(
  ( ! [X3] : (~p(s(bool,X3))) ) | $spl0),
  inference(superposition,[],[f193,f644])).
fof(f3464,plain,(
  $false | $spl0),
  inference(resolution,[],[f3274,f194])).
fof(f3454,plain,(
  ( ! [X43] : (~p(s(bool,X43))) ) | $spl40),
  inference(cnf_transformation,[],[f3454_D])).
fof(f3454_D,plain,(
  ( ! [X43] : (~p(s(bool,X43))) ) <=> ~$spl40),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl40])])).
fof(f3452,plain,(
  ( ! [X43,X44] : (~p(s(bool,X43)) | s(bool,'T_0') = s(bool,X44)) ) | ($spl0 | $spl7)),
  inference(subsumption_resolution,[],[f3322,f370])).
fof(f3322,plain,(
  ( ! [X43,X44] : (s(bool,'F_0') != s(bool,X44) | ~p(s(bool,X43)) | s(bool,'T_0') = s(bool,X44)) ) | ($spl0 | $spl7)),
  inference(superposition,[],[f2342,f644])).
fof(f3350,plain,(
  ( ! [X6,X4,X5] : (s('type.exhSem.v',X5) != s('type.exhSem.v','const.exhSem.Loc_1'(s('type.num.num',X6))) | s('type.conSem.v',X4) != s('type.conSem.v','const.conSem.Loc_1'(s('type.num.num',X6)))) ) | $spl32),
  inference(cnf_transformation,[],[f3350_D])).
fof(f3350_D,plain,(
  ( ! [X6,X4,X5] : (s('type.exhSem.v',X5) != s('type.exhSem.v','const.exhSem.Loc_1'(s('type.num.num',X6))) | s('type.conSem.v',X4) != s('type.conSem.v','const.conSem.Loc_1'(s('type.num.num',X6)))) ) <=> ~$spl32),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl32])])).
fof(f3360,plain,(
  ( ! [X2,X0,X1] : (sP20(X0,X1,X2)) ) | $spl36),
  inference(cnf_transformation,[],[f3360_D])).
fof(f3360_D,plain,(
  ( ! [X2,X0,X1] : (sP20(X0,X1,X2)) ) <=> ~$spl36),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl36])])).
fof(f3364,plain,(
  ( ! [X6,X4,X2,X0,X5,X1] : (sP20(X0,X1,X2) | s('type.exhSem.v',X5) != s('type.exhSem.v','const.exhSem.Loc_1'(s('type.num.num',X6))) | s('type.conSem.v',X4) != s('type.conSem.v','const.conSem.Loc_1'(s('type.num.num',X6)))) ) | $spl0),
  inference(subsumption_resolution,[],[f3174,f193])).
fof(f3174,plain,(
  ( ! [X6,X4,X2,X0,X5,X1] : (p(s(bool,'F_0')) | sP20(X0,X1,X2) | s('type.exhSem.v',X5) != s('type.exhSem.v','const.exhSem.Loc_1'(s('type.num.num',X6))) | s('type.conSem.v',X4) != s('type.conSem.v','const.conSem.Loc_1'(s('type.num.num',X6)))) ) | $spl0),
  inference(backward_demodulation,[],[f644,f319])).
fof(f319,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (sP20(X0,X1,X2) | p(s(bool,happ(s(fun('type.exhSem.v',bool),happ(s(fun('type.conSem.v',fun('type.exhSem.v',bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.conSem.v',fun('type.exhSem.v',bool))),X0),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X3))),s('type.conSem.v',X4))),s('type.exhSem.v',X5)))) | s('type.exhSem.v',X5) != s('type.exhSem.v','const.exhSem.Loc_1'(s('type.num.num',X6))) | s('type.conSem.v',X4) != s('type.conSem.v','const.conSem.Loc_1'(s('type.num.num',X6)))) )),
  inference(cnf_transformation,[],[f139])).
fof(f3344,plain,(
  ( ! [X4,X7,X5] : (s('type.exhSem.v',X5) != s('type.exhSem.v','const.exhSem.Litv_1'(s('type.ast.lit',X7))) | s('type.conSem.v',X4) != s('type.conSem.v','const.conSem.Litv_1'(s('type.ast.lit',X7)))) ) | $spl28),
  inference(cnf_transformation,[],[f3344_D])).
fof(f3344_D,plain,(
  ( ! [X4,X7,X5] : (s('type.exhSem.v',X5) != s('type.exhSem.v','const.exhSem.Litv_1'(s('type.ast.lit',X7))) | s('type.conSem.v',X4) != s('type.conSem.v','const.conSem.Litv_1'(s('type.ast.lit',X7)))) ) <=> ~$spl28),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl28])])).
fof(f3359,plain,(
  ( ! [X4,X2,X0,X7,X5,X1] : (sP20(X0,X1,X2) | s('type.exhSem.v',X5) != s('type.exhSem.v','const.exhSem.Litv_1'(s('type.ast.lit',X7))) | s('type.conSem.v',X4) != s('type.conSem.v','const.conSem.Litv_1'(s('type.ast.lit',X7)))) ) | $spl0),
  inference(subsumption_resolution,[],[f3170,f193])).
fof(f3170,plain,(
  ( ! [X4,X2,X0,X7,X5,X1] : (p(s(bool,'F_0')) | sP20(X0,X1,X2) | s('type.exhSem.v',X5) != s('type.exhSem.v','const.exhSem.Litv_1'(s('type.ast.lit',X7))) | s('type.conSem.v',X4) != s('type.conSem.v','const.conSem.Litv_1'(s('type.ast.lit',X7)))) ) | $spl0),
  inference(backward_demodulation,[],[f644,f315])).
fof(f315,plain,(
  ( ! [X4,X2,X0,X7,X5,X3,X1] : (sP20(X0,X1,X2) | p(s(bool,happ(s(fun('type.exhSem.v',bool),happ(s(fun('type.conSem.v',fun('type.exhSem.v',bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.conSem.v',fun('type.exhSem.v',bool))),X0),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X3))),s('type.conSem.v',X4))),s('type.exhSem.v',X5)))) | s('type.exhSem.v',X5) != s('type.exhSem.v','const.exhSem.Litv_1'(s('type.ast.lit',X7))) | s('type.conSem.v',X4) != s('type.conSem.v','const.conSem.Litv_1'(s('type.ast.lit',X7)))) )),
  inference(cnf_transformation,[],[f139])).
fof(f3353,plain,(
  ( ! [X2,X0,X1] : (sP13(X0,X1,X2)) ) | $spl34),
  inference(cnf_transformation,[],[f3353_D])).
fof(f3353_D,plain,(
  ( ! [X2,X0,X1] : (sP13(X0,X1,X2)) ) <=> ~$spl34),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl34])])).
fof(f3357,plain,(
  ( ! [X6,X4,X2,X0,X5,X1] : (sP13(X0,X1,X2) | s('type.exhSem.v',X5) != s('type.exhSem.v','const.exhSem.Loc_1'(s('type.num.num',X6))) | s('type.conSem.v',X4) != s('type.conSem.v','const.conSem.Loc_1'(s('type.num.num',X6)))) ) | $spl0),
  inference(subsumption_resolution,[],[f3166,f193])).
fof(f3166,plain,(
  ( ! [X6,X4,X2,X0,X5,X1] : (p(s(bool,'F_0')) | sP13(X0,X1,X2) | s('type.exhSem.v',X5) != s('type.exhSem.v','const.exhSem.Loc_1'(s('type.num.num',X6))) | s('type.conSem.v',X4) != s('type.conSem.v','const.conSem.Loc_1'(s('type.num.num',X6)))) ) | $spl0),
  inference(backward_demodulation,[],[f644,f262])).
fof(f3352,plain,(
  ( ! [X4,X2,X0,X7,X5,X1] : (sP13(X0,X1,X2) | s('type.exhSem.v',X5) != s('type.exhSem.v','const.exhSem.Litv_1'(s('type.ast.lit',X7))) | s('type.conSem.v',X4) != s('type.conSem.v','const.conSem.Litv_1'(s('type.ast.lit',X7)))) ) | $spl0),
  inference(subsumption_resolution,[],[f3162,f193])).
fof(f3162,plain,(
  ( ! [X4,X2,X0,X7,X5,X1] : (p(s(bool,'F_0')) | sP13(X0,X1,X2) | s('type.exhSem.v',X5) != s('type.exhSem.v','const.exhSem.Litv_1'(s('type.ast.lit',X7))) | s('type.conSem.v',X4) != s('type.conSem.v','const.conSem.Litv_1'(s('type.ast.lit',X7)))) ) | $spl0),
  inference(backward_demodulation,[],[f644,f258])).
fof(f3345,plain,(
  ( ! [X2,X0,X1] : (sP6(X0,X1,X2)) ) | $spl30),
  inference(cnf_transformation,[],[f3345_D])).
fof(f3345_D,plain,(
  ( ! [X2,X0,X1] : (sP6(X0,X1,X2)) ) <=> ~$spl30),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl30])])).
fof(f3349,plain,(
  ( ! [X6,X4,X2,X0,X5,X1] : (sP6(X0,X1,X2) | s('type.exhSem.v',X5) != s('type.exhSem.v','const.exhSem.Loc_1'(s('type.num.num',X6))) | s('type.conSem.v',X4) != s('type.conSem.v','const.conSem.Loc_1'(s('type.num.num',X6)))) ) | $spl0),
  inference(subsumption_resolution,[],[f3158,f193])).
fof(f3158,plain,(
  ( ! [X6,X4,X2,X0,X5,X1] : (p(s(bool,'F_0')) | sP6(X0,X1,X2) | s('type.exhSem.v',X5) != s('type.exhSem.v','const.exhSem.Loc_1'(s('type.num.num',X6))) | s('type.conSem.v',X4) != s('type.conSem.v','const.conSem.Loc_1'(s('type.num.num',X6)))) ) | $spl0),
  inference(backward_demodulation,[],[f644,f205])).
fof(f3343,plain,(
  ( ! [X4,X2,X0,X7,X5,X1] : (sP6(X0,X1,X2) | s('type.exhSem.v',X5) != s('type.exhSem.v','const.exhSem.Litv_1'(s('type.ast.lit',X7))) | s('type.conSem.v',X4) != s('type.conSem.v','const.conSem.Litv_1'(s('type.ast.lit',X7)))) ) | $spl0),
  inference(subsumption_resolution,[],[f3154,f193])).
fof(f3154,plain,(
  ( ! [X4,X2,X0,X7,X5,X1] : (p(s(bool,'F_0')) | sP6(X0,X1,X2) | s('type.exhSem.v',X5) != s('type.exhSem.v','const.exhSem.Litv_1'(s('type.ast.lit',X7))) | s('type.conSem.v',X4) != s('type.conSem.v','const.conSem.Litv_1'(s('type.ast.lit',X7)))) ) | $spl0),
  inference(backward_demodulation,[],[f644,f201])).
fof(f2902,plain,(
  ( ! [X134,X132,X130,X135,X133,X131] : (s(bool,X135) != s(bool,sK137(X131,X132,X133,X133,X134)) | s(bool,'T_0') = s(bool,X135) | s(bool,'F_0') = s(bool,X130)) ) | ($spl2 | $spl7)),
  inference(subsumption_resolution,[],[f2674,f1538])).
fof(f2674,plain,(
  ( ! [X134,X132,X130,X135,X133,X131] : (s(bool,X135) != s(bool,sK137(X131,X132,X133,X133,X134)) | ~p(s(bool,X130)) | s(bool,'T_0') = s(bool,X135) | s(bool,'F_0') = s(bool,X130)) ) | ($spl2 | $spl7)),
  inference(superposition,[],[f2342,f917])).
fof(f2576,plain,(
  ( ! [X11] : (s('type.exhSem.v','const.exhSem.Litv_1'(s('type.ast.lit',sK22))) != s('type.exhSem.v','const.exhSem.Loc_1'(s('type.num.num',X11))) | s('type.conSem.v','const.conSem.Litv_1'(s('type.ast.lit',sK22))) != s('type.conSem.v','const.conSem.Loc_1'(s('type.num.num',X11)))) ) | $spl20),
  inference(cnf_transformation,[],[f2576_D])).
fof(f2576_D,plain,(
  ( ! [X11] : (s('type.exhSem.v','const.exhSem.Litv_1'(s('type.ast.lit',sK22))) != s('type.exhSem.v','const.exhSem.Loc_1'(s('type.num.num',X11))) | s('type.conSem.v','const.conSem.Litv_1'(s('type.ast.lit',sK22))) != s('type.conSem.v','const.conSem.Loc_1'(s('type.num.num',X11)))) ) <=> ~$spl20),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl20])])).
fof(f2582,plain,(
  ( ! [X37,X36] : (sP20(sK58('const.exhSem.Litv_1'(s('type.ast.lit',sK22)),'const.conSem.Litv_1'(s('type.ast.lit',sK22)),sK21),X36,X37)) ) | $spl24),
  inference(cnf_transformation,[],[f2582_D])).
fof(f2582_D,plain,(
  ( ! [X37,X36] : (sP20(sK58('const.exhSem.Litv_1'(s('type.ast.lit',sK22)),'const.conSem.Litv_1'(s('type.ast.lit',sK22)),sK21),X36,X37)) ) <=> ~$spl24),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl24])])).
fof(f2558,plain,(
  ( ! [X47,X45,X46] : (sP20(sK58('const.exhSem.Litv_1'(s('type.ast.lit',sK22)),'const.conSem.Litv_1'(s('type.ast.lit',sK22)),sK21),X45,X46) | s('type.exhSem.v','const.exhSem.Litv_1'(s('type.ast.lit',sK22))) != s('type.exhSem.v','const.exhSem.Loc_1'(s('type.num.num',X47))) | s('type.conSem.v','const.conSem.Litv_1'(s('type.ast.lit',sK22))) != s('type.conSem.v','const.conSem.Loc_1'(s('type.num.num',X47)))) )),
  inference(resolution,[],[f374,f319])).
fof(f374,plain,(
  ~p(s(bool,happ(s(fun('type.exhSem.v',bool),happ(s(fun('type.conSem.v',fun('type.exhSem.v',bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.conSem.v',fun('type.exhSem.v',bool))),sK58('const.exhSem.Litv_1'(s('type.ast.lit',sK22)),'const.conSem.Litv_1'(s('type.ast.lit',sK22)),sK21)),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),sK21))),s('type.conSem.v','const.conSem.Litv_1'(s('type.ast.lit',sK22))))),s('type.exhSem.v','const.exhSem.Litv_1'(s('type.ast.lit',sK22))))))),
  inference(resolution,[],[f166,f252])).
fof(f2574,plain,(
  ( ! [X2] : (s('type.exhSem.v','const.exhSem.Litv_1'(s('type.ast.lit',sK22))) != s('type.exhSem.v','const.exhSem.Litv_1'(s('type.ast.lit',X2))) | s('type.conSem.v','const.conSem.Litv_1'(s('type.ast.lit',sK22))) != s('type.conSem.v','const.conSem.Litv_1'(s('type.ast.lit',X2)))) ) | $spl16),
  inference(cnf_transformation,[],[f2574_D])).
fof(f2574_D,plain,(
  ( ! [X2] : (s('type.exhSem.v','const.exhSem.Litv_1'(s('type.ast.lit',sK22))) != s('type.exhSem.v','const.exhSem.Litv_1'(s('type.ast.lit',X2))) | s('type.conSem.v','const.conSem.Litv_1'(s('type.ast.lit',sK22))) != s('type.conSem.v','const.conSem.Litv_1'(s('type.ast.lit',X2)))) ) <=> ~$spl16),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl16])])).
fof(f2554,plain,(
  ( ! [X37,X38,X36] : (sP20(sK58('const.exhSem.Litv_1'(s('type.ast.lit',sK22)),'const.conSem.Litv_1'(s('type.ast.lit',sK22)),sK21),X36,X37) | s('type.exhSem.v','const.exhSem.Litv_1'(s('type.ast.lit',sK22))) != s('type.exhSem.v','const.exhSem.Litv_1'(s('type.ast.lit',X38))) | s('type.conSem.v','const.conSem.Litv_1'(s('type.ast.lit',sK22))) != s('type.conSem.v','const.conSem.Litv_1'(s('type.ast.lit',X38)))) )),
  inference(resolution,[],[f374,f315])).
fof(f2581,plain,(
  ( ! [X23,X22] : (sP13(sK58('const.exhSem.Litv_1'(s('type.ast.lit',sK22)),'const.conSem.Litv_1'(s('type.ast.lit',sK22)),sK21),X22,X23)) ) | $spl22),
  inference(cnf_transformation,[],[f2581_D])).
fof(f2581_D,plain,(
  ( ! [X23,X22] : (sP13(sK58('const.exhSem.Litv_1'(s('type.ast.lit',sK22)),'const.conSem.Litv_1'(s('type.ast.lit',sK22)),sK21),X22,X23)) ) <=> ~$spl22),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl22])])).
fof(f2552,plain,(
  ( ! [X33,X31,X32] : (sP13(sK58('const.exhSem.Litv_1'(s('type.ast.lit',sK22)),'const.conSem.Litv_1'(s('type.ast.lit',sK22)),sK21),X31,X32) | s('type.exhSem.v','const.exhSem.Litv_1'(s('type.ast.lit',sK22))) != s('type.exhSem.v','const.exhSem.Loc_1'(s('type.num.num',X33))) | s('type.conSem.v','const.conSem.Litv_1'(s('type.ast.lit',sK22))) != s('type.conSem.v','const.conSem.Loc_1'(s('type.num.num',X33)))) )),
  inference(resolution,[],[f374,f262])).
fof(f2548,plain,(
  ( ! [X24,X23,X22] : (sP13(sK58('const.exhSem.Litv_1'(s('type.ast.lit',sK22)),'const.conSem.Litv_1'(s('type.ast.lit',sK22)),sK21),X22,X23) | s('type.exhSem.v','const.exhSem.Litv_1'(s('type.ast.lit',sK22))) != s('type.exhSem.v','const.exhSem.Litv_1'(s('type.ast.lit',X24))) | s('type.conSem.v','const.conSem.Litv_1'(s('type.ast.lit',sK22))) != s('type.conSem.v','const.conSem.Litv_1'(s('type.ast.lit',X24)))) )),
  inference(resolution,[],[f374,f258])).
fof(f2575,plain,(
  ( ! [X0,X1] : (sP6(sK58('const.exhSem.Litv_1'(s('type.ast.lit',sK22)),'const.conSem.Litv_1'(s('type.ast.lit',sK22)),sK21),X0,X1)) ) | $spl18),
  inference(cnf_transformation,[],[f2575_D])).
fof(f2575_D,plain,(
  ( ! [X0,X1] : (sP6(sK58('const.exhSem.Litv_1'(s('type.ast.lit',sK22)),'const.conSem.Litv_1'(s('type.ast.lit',sK22)),sK21),X0,X1)) ) <=> ~$spl18),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl18])])).
fof(f2542,plain,(
  ( ! [X10,X11,X9] : (sP6(sK58('const.exhSem.Litv_1'(s('type.ast.lit',sK22)),'const.conSem.Litv_1'(s('type.ast.lit',sK22)),sK21),X9,X10) | s('type.exhSem.v','const.exhSem.Litv_1'(s('type.ast.lit',sK22))) != s('type.exhSem.v','const.exhSem.Loc_1'(s('type.num.num',X11))) | s('type.conSem.v','const.conSem.Litv_1'(s('type.ast.lit',sK22))) != s('type.conSem.v','const.conSem.Loc_1'(s('type.num.num',X11)))) )),
  inference(resolution,[],[f374,f205])).
fof(f2538,plain,(
  ( ! [X2,X0,X1] : (sP6(sK58('const.exhSem.Litv_1'(s('type.ast.lit',sK22)),'const.conSem.Litv_1'(s('type.ast.lit',sK22)),sK21),X0,X1) | s('type.exhSem.v','const.exhSem.Litv_1'(s('type.ast.lit',sK22))) != s('type.exhSem.v','const.exhSem.Litv_1'(s('type.ast.lit',X2))) | s('type.conSem.v','const.conSem.Litv_1'(s('type.ast.lit',sK22))) != s('type.conSem.v','const.conSem.Litv_1'(s('type.ast.lit',X2)))) )),
  inference(resolution,[],[f374,f201])).
fof(f2193,plain,(
  $false | $spl4),
  inference(resolution,[],[f1945,f193])).
fof(f1945,plain,(
  ( ! [X9] : (p(s(bool,X9))) ) | $spl4),
  inference(trivial_inequality_removal,[],[f1925])).
fof(f1925,plain,(
  ( ! [X7,X9] : (p(s(bool,X9)) | s('type.ast.lit',X7) != s('type.ast.lit',X7)) ) | $spl4),
  inference(superposition,[],[f368,f1392])).
fof(f1536,plain,(
  ~p(s(bool,'F_0')) | $spl15),
  inference(cnf_transformation,[],[f1536_D])).
fof(f1536_D,plain,(
  ~p(s(bool,'F_0')) <=> ~$spl15),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl15])])).
fof(f182,plain,(
  ( ! [X0] : (p(s(bool,X0)) | ~p(s(bool,'F_0'))) )),
  inference(cnf_transformation,[],[f78])).
fof(f78,plain,(
  ! [X0] : ((~p(s(bool,X0)) | ~p(s(bool,'F_0')) | p(s(bool,'F_0'))) & (~p(s(bool,'F_0')) | (p(s(bool,X0)) & p(s(bool,'F_0')))))),
  inference(flattening,[],[f77])).
fof(f77,plain,(
  ! [X0] : (((~p(s(bool,X0)) | ~p(s(bool,'F_0'))) | p(s(bool,'F_0'))) & (~p(s(bool,'F_0')) | (p(s(bool,X0)) & p(s(bool,'F_0')))))),
  inference(nnf_transformation,[],[f29])).
fof(f29,plain,(
  ! [X0] : ((p(s(bool,X0)) & p(s(bool,'F_0'))) <=> p(s(bool,'F_0')))),
  inference(rectify,[],[f17])).
fof(f17,axiom,(
  ! [X16] : ((p(s(bool,X16)) & p(s(bool,'F_0'))) <=> p(s(bool,'F_0')))),
  file('thm.dec_to_exhProof.v_rel_rules|split|0','thm.bool.AND_CLAUSES|split|3')).
fof(f186,plain,(
  ( ! [X0] : (p(s(bool,X0)) | ~p(s(bool,'F_0'))) )),
  inference(cnf_transformation,[],[f80])).
fof(f80,plain,(
  ! [X0] : ((~p(s(bool,'F_0')) | ~p(s(bool,X0)) | p(s(bool,'F_0'))) & (~p(s(bool,'F_0')) | (p(s(bool,'F_0')) & p(s(bool,X0)))))),
  inference(flattening,[],[f79])).
fof(f79,plain,(
  ! [X0] : (((~p(s(bool,'F_0')) | ~p(s(bool,X0))) | p(s(bool,'F_0'))) & (~p(s(bool,'F_0')) | (p(s(bool,'F_0')) & p(s(bool,X0)))))),
  inference(nnf_transformation,[],[f30])).
fof(f30,plain,(
  ! [X0] : ((p(s(bool,'F_0')) & p(s(bool,X0))) <=> p(s(bool,'F_0')))),
  inference(rectify,[],[f14])).
fof(f14,axiom,(
  ! [X16] : ((p(s(bool,'F_0')) & p(s(bool,X16))) <=> p(s(bool,'F_0')))),
  file('thm.dec_to_exhProof.v_rel_rules|split|0','thm.bool.AND_CLAUSES|split|2')).
fof(f1519,plain,(
  $false | $spl6),
  inference(subsumption_resolution,[],[f1489,f195])).
fof(f1489,plain,(
  ~p(s(bool,'T_0')) | $spl6),
  inference(backward_demodulation,[],[f1393,f193])).
fof(f1393,plain,(
  s(bool,'T_0') = s(bool,'F_0') | $spl6),
  inference(cnf_transformation,[],[f1393_D])).
fof(f1393_D,plain,(
  s(bool,'T_0') = s(bool,'F_0') <=> ~$spl6),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl6])])).
fof(f1482,plain,(
  ( ! [X30,X28,X31,X29,X27] : (p(s(bool,sK137(X27,X28,X29,X30,X31)))) ) | $spl12),
  inference(cnf_transformation,[],[f1482_D])).
fof(f1482_D,plain,(
  ( ! [X30,X28,X31,X29,X27] : (p(s(bool,sK137(X27,X28,X29,X30,X31)))) ) <=> ~$spl12),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl12])])).
fof(f1478,plain,(
  ( ! [X15] : (s(bool,'F_0') != s(bool,X15) | ~p(s(bool,X15))) ) | $spl10),
  inference(cnf_transformation,[],[f1478_D])).
fof(f1478_D,plain,(
  ( ! [X15] : (s(bool,'F_0') != s(bool,X15) | ~p(s(bool,X15))) ) <=> ~$spl10),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl10])])).
fof(f1481,plain,(
  ( ! [X30,X28,X31,X29,X27,X32] : (s(bool,'F_0') != s(bool,X32) | p(s(bool,sK137(X27,X28,X29,X30,X31))) | ~p(s(bool,X32))) ) | $spl7),
  inference(subsumption_resolution,[],[f1458,f368])).
fof(f1458,plain,(
  ( ! [X30,X28,X31,X29,X27,X32] : (s(bool,'F_0') != s(bool,X32) | p(s(bool,sK137(X27,X28,X29,X30,X31))) | ~p(s(bool,X32)) | s('type.ast.lit',X29) = s('type.ast.lit',X30)) ) | $spl7),
  inference(superposition,[],[f1430,f506])).
fof(f506,plain,(
  ( ! [X432,X434,X431,X433,X435] : (s(bool,'F_0') = s(bool,sK137(X431,X432,X433,X434,X435)) | s('type.ast.lit',X433) = s('type.ast.lit',X434)) )),
  inference(resolution,[],[f420,f367])).
fof(f1430,plain,(
  ( ! [X6,X7] : (s(bool,X6) != s(bool,X7) | p(s(bool,X7)) | ~p(s(bool,X6))) ) | $spl7),
  inference(subsumption_resolution,[],[f1408,f188])).
fof(f1408,plain,(
  ( ! [X6,X7] : (s(bool,X6) != s(bool,X7) | p(s(bool,X7)) | ~p(s(bool,'T_0')) | ~p(s(bool,X6))) ) | $spl7),
  inference(superposition,[],[f1403,f176])).
fof(f1403,plain,(
  ( ! [X1] : (s(bool,'T_0') != s(bool,X1) | p(s(bool,X1))) ) | $spl7),
  inference(subsumption_resolution,[],[f1397,f182])).
fof(f1397,plain,(
  ( ! [X1] : (s(bool,'T_0') != s(bool,X1) | p(s(bool,X1)) | p(s(bool,'F_0'))) ) | $spl7),
  inference(superposition,[],[f1394,f173])).
fof(f1476,plain,(
  ( ! [X14,X15] : (s(bool,'F_0') != s(bool,X15) | p(s(bool,X14)) | ~p(s(bool,X15))) ) | $spl7),
  inference(subsumption_resolution,[],[f1453,f1403])).
fof(f1453,plain,(
  ( ! [X14,X15] : (s(bool,'F_0') != s(bool,X15) | p(s(bool,X14)) | ~p(s(bool,X15)) | s(bool,'T_0') = s(bool,X14)) ) | $spl7),
  inference(superposition,[],[f1430,f370])).
fof(f1392,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s(bool,X0) = s(bool,sK137(X1,X2,X3,X3,X4))) ) | $spl4),
  inference(cnf_transformation,[],[f1392_D])).
fof(f1392_D,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s(bool,X0) = s(bool,sK137(X1,X2,X3,X3,X4))) ) <=> ~$spl4),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl4])])).
fof(f1394,plain,(
  s(bool,'T_0') != s(bool,'F_0') | $spl7),
  inference(cnf_transformation,[],[f1394_D])).
fof(f1394_D,plain,(
  s(bool,'T_0') != s(bool,'F_0') <=> ~$spl7),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl7])])).
fof(f1391,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,X0) = s(bool,sK137(X1,X2,X3,X3,X4))) ) | $spl2),
  inference(forward_demodulation,[],[f1137,f876])).
fof(f1137,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s(bool,'F_0') != s(bool,sK137(X1,X2,X3,X3,X4)) | s(bool,X0) = s(bool,sK137(X1,X2,X3,X3,X4))) ) | $spl2),
  inference(equality_factoring,[],[f917])).
fof(f645,plain,(
  ( ! [X18] : (~p(s(bool,X18)) | s(bool,'T_0') = s(bool,X18)) ) | $spl2),
  inference(cnf_transformation,[],[f645_D])).
fof(f645_D,plain,(
  ( ! [X18] : (~p(s(bool,X18)) | s(bool,'T_0') = s(bool,X18)) ) <=> ~$spl2),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl2])])).
fof(f640,plain,(
  ( ! [X19,X18] : (~p(s(bool,X18)) | s(bool,'F_0') = s(bool,X19) | s(bool,'T_0') = s(bool,X18)) )),
  inference(duplicate_literal_removal,[],[f638])).
fof(f638,plain,(
  ( ! [X19,X18] : (~p(s(bool,X18)) | s(bool,'F_0') = s(bool,X19) | s(bool,'F_0') = s(bool,X19) | s(bool,'T_0') = s(bool,X18)) )),
  inference(superposition,[],[f441,f370])).
% SZS output end Proof for thm.dec_to_exhProof
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 349
% Passive clauses: 3578
% Generated clauses: 9025
% Final active clauses: 206
% Final passive clauses: 3109
% Input formulas: 21
% Initial clauses: 205
% 
% Selected by SInE selection: 17
% SInE iterations: 1
% 
% Duplicate literals: 406
% Trivial inequalities: 57
% Fw subsumption resolutions: 1133
% Fw demodulations: 685
% Bw demodulations: 128
% 
% Simple tautologies: 289
% Equational tautologies: 36
% Forward subsumptions: 2734
% 
% Binary resolution: 1479
% Factoring: 2
% Forward superposition: 3218
% Backward superposition: 1557
% Self superposition: 68
% Equality factoring: 56
% Equality resolution: 35
% 
% Split clauses: 144
% Split components: 290
% SAT solver clauses: 156
% SAT solver unit clauses: 9
% SAT solver binary clauses: 30
% 
% Sat splits: 144
% Sat splitting refutations: 11
% 
% Memory used [KB]: 8443
% Time elapsed: 0.350 s
% ------------------------------
% ------------------------------
% Success in time 12.08 s
