Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 149 next slice time: 5
dis+11_7_3 on thm.wordProps
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.wordProps
% SZS output start Proof for thm.wordProps
fof(f5185,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f5184,f224,f461,f459,f457,f455,f453,f451,f449,f447,f445,f443,f441,f439,f437,f435,f433,f431,f429,f427,f425,f423,f421,f419,f237,f418,f5182,f5181,f5180,f5179,f5178,f5177,f5176,f4444,f4443,f4442,f4441,f4440,f4439,f4438,f4049,f2088,f2087,f2086,f244,f456,f5183])).
fof(f5183,plain,(
  $false | $spl20),
  inference(subsumption_resolution,[],[f439,f232])).
fof(f232,plain,(
  ( ! [X35,X33,X34,X32] : (s('type.wordLang.prog'(sK12),sK13) != s('type.wordLang.prog'(sK12),'const.wordLang.Set_2'(s('type.wordLang.store_name',X32),s('type.wordLang.exp'(sK12),'const.wordLang.Shift_3'(s('type.asm.shift',X33),s('type.wordLang.exp'(sK12),X34),s('type.wordLang.num_exp'(sK12),X35)))))) )),
  inference(cnf_transformation,[],[f139])).
fof(f139,plain,(
  (s('type.wordLang.prog'(sK12),'const.wordLang.Skip_0') = s('type.wordLang.prog'(sK12),sK13) | s('type.wordLang.prog'(sK12),sK13) = s('type.wordLang.prog'(sK12),'const.wordLang.Move_2'(s('type.num.num',sK14),s('type.list.list'('type.pair.prod'('type.num.num','type.num.num')),sK15))) | s('type.wordLang.prog'(sK12),sK13) = s('type.wordLang.prog'(sK12),'const.wordLang.Inst_1'(s('type.asm.inst'(sK12),sK16))) | s('type.wordLang.prog'(sK12),sK13) = s('type.wordLang.prog'(sK12),'const.wordLang.Assign_2'(s('type.num.num',sK17),s('type.wordLang.exp'(sK12),sK18))) | s('type.wordLang.prog'(sK12),sK13) = s('type.wordLang.prog'(sK12),'const.wordLang.Get_2'(s('type.num.num',sK19),s('type.wordLang.store_name',sK20))) | s('type.wordLang.prog'(sK12),sK13) = s('type.wordLang.prog'(sK12),'const.wordLang.Set_2'(s('type.wordLang.store_name',sK21),s('type.wordLang.exp'(sK12),'const.wordLang.Const_1'(s('type.fcp.cart'(bool,sK12),sK22))))) | s('type.wordLang.prog'(sK12),sK13) = s('type.wordLang.prog'(sK12),'const.wordLang.Set_2'(s('type.wordLang.store_name',sK23),s('type.wordLang.exp'(sK12),'const.wordLang.Var_1'(s('type.num.num',sK24))))) | s('type.wordLang.prog'(sK12),sK13) = s('type.wordLang.prog'(sK12),'const.wordLang.Set_2'(s('type.wordLang.store_name',sK25),s('type.wordLang.exp'(sK12),'const.wordLang.Lookup_1'(s('type.wordLang.store_name',sK26))))) | s('type.wordLang.prog'(sK12),sK13) = s('type.wordLang.prog'(sK12),'const.wordLang.Set_2'(s('type.wordLang.store_name',sK27),s('type.wordLang.exp'(sK12),'const.wordLang.Load_1'(s('type.wordLang.exp'(sK12),sK28))))) | s('type.wordLang.prog'(sK12),sK13) = s('type.wordLang.prog'(sK12),'const.wordLang.Set_2'(s('type.wordLang.store_name',sK29),s('type.wordLang.exp'(sK12),'const.wordLang.Op_2'(s('type.asm.binop',sK30),s('type.list.list'('type.wordLang.exp'(sK12)),sK31))))) | s('type.wordLang.prog'(sK12),sK13) = s('type.wordLang.prog'(sK12),'const.wordLang.Set_2'(s('type.wordLang.store_name',sK32),s('type.wordLang.exp'(sK12),'const.wordLang.Shift_3'(s('type.asm.shift',sK33),s('type.wordLang.exp'(sK12),sK34),s('type.wordLang.num_exp'(sK12),sK35))))) | s('type.wordLang.prog'(sK12),sK13) = s('type.wordLang.prog'(sK12),'const.wordLang.Store_2'(s('type.wordLang.exp'(sK12),sK36),s('type.num.num',sK37))) | s('type.wordLang.prog'(sK12),sK13) = s('type.wordLang.prog'(sK12),'const.wordLang.MustTerminate_2'(s('type.num.num',sK38),s('type.wordLang.prog'(sK12),sK39))) | s('type.wordLang.prog'(sK12),sK13) = s('type.wordLang.prog'(sK12),'const.wordLang.Call_4'(s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.sptree.spt'('type.one.one'),'type.pair.prod'('type.wordLang.prog'(sK12),'type.pair.prod'('type.num.num','type.num.num'))))),sK40),s('type.option.option'('type.num.num'),sK41),s('type.list.list'('type.num.num'),sK42),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.wordLang.prog'(sK12),'type.pair.prod'('type.num.num','type.num.num')))),sK43))) | s('type.wordLang.prog'(sK12),sK13) = s('type.wordLang.prog'(sK12),'const.wordLang.Seq_2'(s('type.wordLang.prog'(sK12),sK44),s('type.wordLang.prog'(sK12),sK45))) | s('type.wordLang.prog'(sK12),sK13) = s('type.wordLang.prog'(sK12),'const.wordLang.If_5'(s('type.asm.cmp',sK46),s('type.num.num',sK47),s('type.asm.reg_imm'(sK12),sK48),s('type.wordLang.prog'(sK12),sK49),s('type.wordLang.prog'(sK12),sK50))) | s('type.wordLang.prog'(sK12),sK13) = s('type.wordLang.prog'(sK12),'const.wordLang.Alloc_2'(s('type.num.num',sK51),s('type.sptree.spt'('type.one.one'),sK52))) | s('type.wordLang.prog'(sK12),sK13) = s('type.wordLang.prog'(sK12),'const.wordLang.Raise_1'(s('type.num.num',sK53))) | s('type.wordLang.prog'(sK12),sK13) = s('type.wordLang.prog'(sK12),'const.wordLang.Return_2'(s('type.num.num',sK54),s('type.num.num',sK55))) | s('type.wordLang.prog'(sK12),'const.wordLang.Tick_0') = s('type.wordLang.prog'(sK12),sK13) | s('type.wordLang.prog'(sK12),sK13) = s('type.wordLang.prog'(sK12),'const.wordLang.LocValue_3'(s('type.num.num',sK56),s('type.num.num',sK57),s('type.num.num',sK58))) | s('type.wordLang.prog'(sK12),sK13) = s('type.wordLang.prog'(sK12),'const.wordLang.FFI_4'(s('type.num.num',sK59),s('type.num.num',sK60),s('type.num.num',sK61),s('type.sptree.spt'('type.one.one'),sK62)))) & ! [X49,X50] : s('type.wordLang.prog'(sK12),sK13) != s('type.wordLang.prog'(sK12),'const.wordLang.Assign_2'(s('type.num.num',X49),s('type.wordLang.exp'(sK12),X50))) & ! [X47,X48] : s('type.wordLang.prog'(sK12),sK13) != s('type.wordLang.prog'(sK12),'const.wordLang.Store_2'(s('type.wordLang.exp'(sK12),X47),s('type.num.num',X48))) & ! [X45,X46] : s('type.wordLang.prog'(sK12),sK13) != s('type.wordLang.prog'(sK12),'const.wordLang.Set_2'(s('type.wordLang.store_name',X45),s('type.wordLang.exp'(sK12),'const.wordLang.Var_1'(s('type.num.num',X46))))) & ! [X43,X44] : s('type.wordLang.prog'(sK12),sK13) != s('type.wordLang.prog'(sK12),'const.wordLang.Set_2'(s('type.wordLang.store_name',X43),s('type.wordLang.exp'(sK12),'const.wordLang.Const_1'(s('type.fcp.cart'(bool,sK12),X44))))) & ! [X41,X42] : s('type.wordLang.prog'(sK12),sK13) != s('type.wordLang.prog'(sK12),'const.wordLang.Set_2'(s('type.wordLang.store_name',X41),s('type.wordLang.exp'(sK12),'const.wordLang.Lookup_1'(s('type.wordLang.store_name',X42))))) & ! [X39,X40] : s('type.wordLang.prog'(sK12),sK13) != s('type.wordLang.prog'(sK12),'const.wordLang.Set_2'(s('type.wordLang.store_name',X39),s('type.wordLang.exp'(sK12),'const.wordLang.Load_1'(s('type.wordLang.exp'(sK12),X40))))) & ! [X36,X37,X38] : s('type.wordLang.prog'(sK12),sK13) != s('type.wordLang.prog'(sK12),'const.wordLang.Set_2'(s('type.wordLang.store_name',X36),s('type.wordLang.exp'(sK12),'const.wordLang.Op_2'(s('type.asm.binop',X37),s('type.list.list'('type.wordLang.exp'(sK12)),X38))))) & ! [X32,X33,X34,X35] : s('type.wordLang.prog'(sK12),sK13) != s('type.wordLang.prog'(sK12),'const.wordLang.Set_2'(s('type.wordLang.store_name',X32),s('type.wordLang.exp'(sK12),'const.wordLang.Shift_3'(s('type.asm.shift',X33),s('type.wordLang.exp'(sK12),X34),s('type.wordLang.num_exp'(sK12),X35))))) & ! [X30,X31] : s('type.wordLang.prog'(sK12),sK13) != s('type.wordLang.prog'(sK12),'const.wordLang.Seq_2'(s('type.wordLang.prog'(sK12),X30),s('type.wordLang.prog'(sK12),X31))) & ! [X25,X26,X27,X28,X29] : s('type.wordLang.prog'(sK12),sK13) != s('type.wordLang.prog'(sK12),'const.wordLang.If_5'(s('type.asm.cmp',X25),s('type.num.num',X26),s('type.asm.reg_imm'(sK12),X27),s('type.wordLang.prog'(sK12),X28),s('type.wordLang.prog'(sK12),X29))) & ! [X23,X24] : s('type.wordLang.prog'(sK12),sK13) != s('type.wordLang.prog'(sK12),'const.wordLang.MustTerminate_2'(s('type.num.num',X23),s('type.wordLang.prog'(sK12),X24))) & ! [X19,X20,X21,X22] : s('type.wordLang.prog'(sK12),sK13) != s('type.wordLang.prog'(sK12),'const.wordLang.Call_4'(s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.sptree.spt'('type.one.one'),'type.pair.prod'('type.wordLang.prog'(sK12),'type.pair.prod'('type.num.num','type.num.num'))))),X19),s('type.option.option'('type.num.num'),X20),s('type.list.list'('type.num.num'),X21),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.wordLang.prog'(sK12),'type.pair.prod'('type.num.num','type.num.num')))),X22))) & s('type.wordLang.prog'(sK12),'const.wordLang.Skip_0') != s('type.wordLang.prog'(sK12),sK13) & ! [X17,X18] : s('type.wordLang.prog'(sK12),sK13) != s('type.wordLang.prog'(sK12),'const.wordLang.Move_2'(s('type.num.num',X17),s('type.list.list'('type.pair.prod'('type.num.num','type.num.num')),X18))) & ! [X16] : s('type.wordLang.prog'(sK12),sK13) != s('type.wordLang.prog'(sK12),'const.wordLang.Inst_1'(s('type.asm.inst'(sK12),X16))) & ! [X14,X15] : s('type.wordLang.prog'(sK12),sK13) != s('type.wordLang.prog'(sK12),'const.wordLang.Get_2'(s('type.num.num',X14),s('type.wordLang.store_name',X15))) & ! [X12,X13] : s('type.wordLang.prog'(sK12),sK13) != s('type.wordLang.prog'(sK12),'const.wordLang.Alloc_2'(s('type.num.num',X12),s('type.sptree.spt'('type.one.one'),X13))) & ! [X11] : s('type.wordLang.prog'(sK12),sK13) != s('type.wordLang.prog'(sK12),'const.wordLang.Raise_1'(s('type.num.num',X11))) & ! [X9,X10] : s('type.wordLang.prog'(sK12),sK13) != s('type.wordLang.prog'(sK12),'const.wordLang.Return_2'(s('type.num.num',X9),s('type.num.num',X10))) & s('type.wordLang.prog'(sK12),'const.wordLang.Tick_0') != s('type.wordLang.prog'(sK12),sK13) & ! [X6,X7,X8] : s('type.wordLang.prog'(sK12),sK13) != s('type.wordLang.prog'(sK12),'const.wordLang.LocValue_3'(s('type.num.num',X6),s('type.num.num',X7),s('type.num.num',X8))) & ! [X2,X3,X4,X5] : s('type.wordLang.prog'(sK12),sK13) != s('type.wordLang.prog'(sK12),'const.wordLang.FFI_4'(s('type.num.num',X2),s('type.num.num',X3),s('type.num.num',X4),s('type.sptree.spt'('type.one.one'),X5)))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK12,sK13,sK14,sK15,sK16,sK17,sK18,sK19,sK20,sK21,sK22,sK23,sK24,sK25,sK26,sK27,sK28,sK29,sK30,sK31,sK32,sK33,sK34,sK35,sK36,sK37,sK38,sK39,sK40,sK41,sK42,sK43,sK44,sK45,sK46,sK47,sK48,sK49,sK50,sK51,sK52,sK53,sK54,sK55,sK56,sK57,sK58,sK59,sK60,sK61,sK62])],[f138])).
fof(f138,plain,(
  ? [X0,X1] : ((s('type.wordLang.prog'(X0),'const.wordLang.Skip_0') = s('type.wordLang.prog'(X0),X1) | ? [X98,X99] : s('type.wordLang.prog'(X0),X1) = s('type.wordLang.prog'(X0),'const.wordLang.Move_2'(s('type.num.num',X98),s('type.list.list'('type.pair.prod'('type.num.num','type.num.num')),X99))) | ? [X97] : s('type.wordLang.prog'(X0),X1) = s('type.wordLang.prog'(X0),'const.wordLang.Inst_1'(s('type.asm.inst'(X0),X97))) | ? [X95,X96] : s('type.wordLang.prog'(X0),X1) = s('type.wordLang.prog'(X0),'const.wordLang.Assign_2'(s('type.num.num',X95),s('type.wordLang.exp'(X0),X96))) | ? [X93,X94] : s('type.wordLang.prog'(X0),X1) = s('type.wordLang.prog'(X0),'const.wordLang.Get_2'(s('type.num.num',X93),s('type.wordLang.store_name',X94))) | ? [X91,X92] : s('type.wordLang.prog'(X0),X1) = s('type.wordLang.prog'(X0),'const.wordLang.Set_2'(s('type.wordLang.store_name',X91),s('type.wordLang.exp'(X0),'const.wordLang.Const_1'(s('type.fcp.cart'(bool,X0),X92))))) | ? [X89,X90] : s('type.wordLang.prog'(X0),X1) = s('type.wordLang.prog'(X0),'const.wordLang.Set_2'(s('type.wordLang.store_name',X89),s('type.wordLang.exp'(X0),'const.wordLang.Var_1'(s('type.num.num',X90))))) | ? [X87,X88] : s('type.wordLang.prog'(X0),X1) = s('type.wordLang.prog'(X0),'const.wordLang.Set_2'(s('type.wordLang.store_name',X87),s('type.wordLang.exp'(X0),'const.wordLang.Lookup_1'(s('type.wordLang.store_name',X88))))) | ? [X85,X86] : s('type.wordLang.prog'(X0),X1) = s('type.wordLang.prog'(X0),'const.wordLang.Set_2'(s('type.wordLang.store_name',X85),s('type.wordLang.exp'(X0),'const.wordLang.Load_1'(s('type.wordLang.exp'(X0),X86))))) | ? [X82,X83,X84] : s('type.wordLang.prog'(X0),X1) = s('type.wordLang.prog'(X0),'const.wordLang.Set_2'(s('type.wordLang.store_name',X82),s('type.wordLang.exp'(X0),'const.wordLang.Op_2'(s('type.asm.binop',X83),s('type.list.list'('type.wordLang.exp'(X0)),X84))))) | ? [X78,X79,X80,X81] : s('type.wordLang.prog'(X0),X1) = s('type.wordLang.prog'(X0),'const.wordLang.Set_2'(s('type.wordLang.store_name',X78),s('type.wordLang.exp'(X0),'const.wordLang.Shift_3'(s('type.asm.shift',X79),s('type.wordLang.exp'(X0),X80),s('type.wordLang.num_exp'(X0),X81))))) | ? [X76,X77] : s('type.wordLang.prog'(X0),X1) = s('type.wordLang.prog'(X0),'const.wordLang.Store_2'(s('type.wordLang.exp'(X0),X76),s('type.num.num',X77))) | ? [X74,X75] : s('type.wordLang.prog'(X0),X1) = s('type.wordLang.prog'(X0),'const.wordLang.MustTerminate_2'(s('type.num.num',X74),s('type.wordLang.prog'(X0),X75))) | ? [X70,X71,X72,X73] : s('type.wordLang.prog'(X0),X1) = s('type.wordLang.prog'(X0),'const.wordLang.Call_4'(s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.sptree.spt'('type.one.one'),'type.pair.prod'('type.wordLang.prog'(X0),'type.pair.prod'('type.num.num','type.num.num'))))),X70),s('type.option.option'('type.num.num'),X71),s('type.list.list'('type.num.num'),X72),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.wordLang.prog'(X0),'type.pair.prod'('type.num.num','type.num.num')))),X73))) | ? [X68,X69] : s('type.wordLang.prog'(X0),X1) = s('type.wordLang.prog'(X0),'const.wordLang.Seq_2'(s('type.wordLang.prog'(X0),X68),s('type.wordLang.prog'(X0),X69))) | ? [X63,X64,X65,X66,X67] : s('type.wordLang.prog'(X0),X1) = s('type.wordLang.prog'(X0),'const.wordLang.If_5'(s('type.asm.cmp',X63),s('type.num.num',X64),s('type.asm.reg_imm'(X0),X65),s('type.wordLang.prog'(X0),X66),s('type.wordLang.prog'(X0),X67))) | ? [X61,X62] : s('type.wordLang.prog'(X0),X1) = s('type.wordLang.prog'(X0),'const.wordLang.Alloc_2'(s('type.num.num',X61),s('type.sptree.spt'('type.one.one'),X62))) | ? [X60] : s('type.wordLang.prog'(X0),X1) = s('type.wordLang.prog'(X0),'const.wordLang.Raise_1'(s('type.num.num',X60))) | ? [X58,X59] : s('type.wordLang.prog'(X0),X1) = s('type.wordLang.prog'(X0),'const.wordLang.Return_2'(s('type.num.num',X58),s('type.num.num',X59))) | s('type.wordLang.prog'(X0),'const.wordLang.Tick_0') = s('type.wordLang.prog'(X0),X1) | ? [X55,X56,X57] : s('type.wordLang.prog'(X0),X1) = s('type.wordLang.prog'(X0),'const.wordLang.LocValue_3'(s('type.num.num',X55),s('type.num.num',X56),s('type.num.num',X57))) | ? [X51,X52,X53,X54] : s('type.wordLang.prog'(X0),X1) = s('type.wordLang.prog'(X0),'const.wordLang.FFI_4'(s('type.num.num',X51),s('type.num.num',X52),s('type.num.num',X53),s('type.sptree.spt'('type.one.one'),X54)))) & ! [X49,X50] : s('type.wordLang.prog'(X0),X1) != s('type.wordLang.prog'(X0),'const.wordLang.Assign_2'(s('type.num.num',X49),s('type.wordLang.exp'(X0),X50))) & ! [X47,X48] : s('type.wordLang.prog'(X0),X1) != s('type.wordLang.prog'(X0),'const.wordLang.Store_2'(s('type.wordLang.exp'(X0),X47),s('type.num.num',X48))) & ! [X45,X46] : s('type.wordLang.prog'(X0),X1) != s('type.wordLang.prog'(X0),'const.wordLang.Set_2'(s('type.wordLang.store_name',X45),s('type.wordLang.exp'(X0),'const.wordLang.Var_1'(s('type.num.num',X46))))) & ! [X43,X44] : s('type.wordLang.prog'(X0),X1) != s('type.wordLang.prog'(X0),'const.wordLang.Set_2'(s('type.wordLang.store_name',X43),s('type.wordLang.exp'(X0),'const.wordLang.Const_1'(s('type.fcp.cart'(bool,X0),X44))))) & ! [X41,X42] : s('type.wordLang.prog'(X0),X1) != s('type.wordLang.prog'(X0),'const.wordLang.Set_2'(s('type.wordLang.store_name',X41),s('type.wordLang.exp'(X0),'const.wordLang.Lookup_1'(s('type.wordLang.store_name',X42))))) & ! [X39,X40] : s('type.wordLang.prog'(X0),X1) != s('type.wordLang.prog'(X0),'const.wordLang.Set_2'(s('type.wordLang.store_name',X39),s('type.wordLang.exp'(X0),'const.wordLang.Load_1'(s('type.wordLang.exp'(X0),X40))))) & ! [X36,X37,X38] : s('type.wordLang.prog'(X0),X1) != s('type.wordLang.prog'(X0),'const.wordLang.Set_2'(s('type.wordLang.store_name',X36),s('type.wordLang.exp'(X0),'const.wordLang.Op_2'(s('type.asm.binop',X37),s('type.list.list'('type.wordLang.exp'(X0)),X38))))) & ! [X32,X33,X34,X35] : s('type.wordLang.prog'(X0),X1) != s('type.wordLang.prog'(X0),'const.wordLang.Set_2'(s('type.wordLang.store_name',X32),s('type.wordLang.exp'(X0),'const.wordLang.Shift_3'(s('type.asm.shift',X33),s('type.wordLang.exp'(X0),X34),s('type.wordLang.num_exp'(X0),X35))))) & ! [X30,X31] : s('type.wordLang.prog'(X0),X1) != s('type.wordLang.prog'(X0),'const.wordLang.Seq_2'(s('type.wordLang.prog'(X0),X30),s('type.wordLang.prog'(X0),X31))) & ! [X25,X26,X27,X28,X29] : s('type.wordLang.prog'(X0),X1) != s('type.wordLang.prog'(X0),'const.wordLang.If_5'(s('type.asm.cmp',X25),s('type.num.num',X26),s('type.asm.reg_imm'(X0),X27),s('type.wordLang.prog'(X0),X28),s('type.wordLang.prog'(X0),X29))) & ! [X23,X24] : s('type.wordLang.prog'(X0),X1) != s('type.wordLang.prog'(X0),'const.wordLang.MustTerminate_2'(s('type.num.num',X23),s('type.wordLang.prog'(X0),X24))) & ! [X19,X20,X21,X22] : s('type.wordLang.prog'(X0),X1) != s('type.wordLang.prog'(X0),'const.wordLang.Call_4'(s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.sptree.spt'('type.one.one'),'type.pair.prod'('type.wordLang.prog'(X0),'type.pair.prod'('type.num.num','type.num.num'))))),X19),s('type.option.option'('type.num.num'),X20),s('type.list.list'('type.num.num'),X21),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.wordLang.prog'(X0),'type.pair.prod'('type.num.num','type.num.num')))),X22))) & s('type.wordLang.prog'(X0),'const.wordLang.Skip_0') != s('type.wordLang.prog'(X0),X1) & ! [X17,X18] : s('type.wordLang.prog'(X0),X1) != s('type.wordLang.prog'(X0),'const.wordLang.Move_2'(s('type.num.num',X17),s('type.list.list'('type.pair.prod'('type.num.num','type.num.num')),X18))) & ! [X16] : s('type.wordLang.prog'(X0),X1) != s('type.wordLang.prog'(X0),'const.wordLang.Inst_1'(s('type.asm.inst'(X0),X16))) & ! [X14,X15] : s('type.wordLang.prog'(X0),X1) != s('type.wordLang.prog'(X0),'const.wordLang.Get_2'(s('type.num.num',X14),s('type.wordLang.store_name',X15))) & ! [X12,X13] : s('type.wordLang.prog'(X0),X1) != s('type.wordLang.prog'(X0),'const.wordLang.Alloc_2'(s('type.num.num',X12),s('type.sptree.spt'('type.one.one'),X13))) & ! [X11] : s('type.wordLang.prog'(X0),X1) != s('type.wordLang.prog'(X0),'const.wordLang.Raise_1'(s('type.num.num',X11))) & ! [X9,X10] : s('type.wordLang.prog'(X0),X1) != s('type.wordLang.prog'(X0),'const.wordLang.Return_2'(s('type.num.num',X9),s('type.num.num',X10))) & s('type.wordLang.prog'(X0),'const.wordLang.Tick_0') != s('type.wordLang.prog'(X0),X1) & ! [X6,X7,X8] : s('type.wordLang.prog'(X0),X1) != s('type.wordLang.prog'(X0),'const.wordLang.LocValue_3'(s('type.num.num',X6),s('type.num.num',X7),s('type.num.num',X8))) & ! [X2,X3,X4,X5] : s('type.wordLang.prog'(X0),X1) != s('type.wordLang.prog'(X0),'const.wordLang.FFI_4'(s('type.num.num',X2),s('type.num.num',X3),s('type.num.num',X4),s('type.sptree.spt'('type.one.one'),X5))))),
  inference(rectify,[],[f98])).
fof(f98,plain,(
  ? [X0,X1] : ((s('type.wordLang.prog'(X0),'const.wordLang.Skip_0') = s('type.wordLang.prog'(X0),X1) | ? [X49,X50] : s('type.wordLang.prog'(X0),X1) = s('type.wordLang.prog'(X0),'const.wordLang.Move_2'(s('type.num.num',X49),s('type.list.list'('type.pair.prod'('type.num.num','type.num.num')),X50))) | ? [X48] : s('type.wordLang.prog'(X0),X1) = s('type.wordLang.prog'(X0),'const.wordLang.Inst_1'(s('type.asm.inst'(X0),X48))) | ? [X46,X47] : s('type.wordLang.prog'(X0),X1) = s('type.wordLang.prog'(X0),'const.wordLang.Assign_2'(s('type.num.num',X46),s('type.wordLang.exp'(X0),X47))) | ? [X44,X45] : s('type.wordLang.prog'(X0),X1) = s('type.wordLang.prog'(X0),'const.wordLang.Get_2'(s('type.num.num',X44),s('type.wordLang.store_name',X45))) | ? [X42,X43] : s('type.wordLang.prog'(X0),X1) = s('type.wordLang.prog'(X0),'const.wordLang.Set_2'(s('type.wordLang.store_name',X42),s('type.wordLang.exp'(X0),'const.wordLang.Const_1'(s('type.fcp.cart'(bool,X0),X43))))) | ? [X40,X41] : s('type.wordLang.prog'(X0),X1) = s('type.wordLang.prog'(X0),'const.wordLang.Set_2'(s('type.wordLang.store_name',X40),s('type.wordLang.exp'(X0),'const.wordLang.Var_1'(s('type.num.num',X41))))) | ? [X38,X39] : s('type.wordLang.prog'(X0),X1) = s('type.wordLang.prog'(X0),'const.wordLang.Set_2'(s('type.wordLang.store_name',X38),s('type.wordLang.exp'(X0),'const.wordLang.Lookup_1'(s('type.wordLang.store_name',X39))))) | ? [X36,X37] : s('type.wordLang.prog'(X0),X1) = s('type.wordLang.prog'(X0),'const.wordLang.Set_2'(s('type.wordLang.store_name',X36),s('type.wordLang.exp'(X0),'const.wordLang.Load_1'(s('type.wordLang.exp'(X0),X37))))) | ? [X33,X34,X35] : s('type.wordLang.prog'(X0),X1) = s('type.wordLang.prog'(X0),'const.wordLang.Set_2'(s('type.wordLang.store_name',X33),s('type.wordLang.exp'(X0),'const.wordLang.Op_2'(s('type.asm.binop',X34),s('type.list.list'('type.wordLang.exp'(X0)),X35))))) | ? [X29,X30,X31,X32] : s('type.wordLang.prog'(X0),X1) = s('type.wordLang.prog'(X0),'const.wordLang.Set_2'(s('type.wordLang.store_name',X29),s('type.wordLang.exp'(X0),'const.wordLang.Shift_3'(s('type.asm.shift',X30),s('type.wordLang.exp'(X0),X31),s('type.wordLang.num_exp'(X0),X32))))) | ? [X27,X28] : s('type.wordLang.prog'(X0),X1) = s('type.wordLang.prog'(X0),'const.wordLang.Store_2'(s('type.wordLang.exp'(X0),X27),s('type.num.num',X28))) | ? [X25,X26] : s('type.wordLang.prog'(X0),X1) = s('type.wordLang.prog'(X0),'const.wordLang.MustTerminate_2'(s('type.num.num',X25),s('type.wordLang.prog'(X0),X26))) | ? [X21,X22,X23,X24] : s('type.wordLang.prog'(X0),X1) = s('type.wordLang.prog'(X0),'const.wordLang.Call_4'(s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.sptree.spt'('type.one.one'),'type.pair.prod'('type.wordLang.prog'(X0),'type.pair.prod'('type.num.num','type.num.num'))))),X21),s('type.option.option'('type.num.num'),X22),s('type.list.list'('type.num.num'),X23),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.wordLang.prog'(X0),'type.pair.prod'('type.num.num','type.num.num')))),X24))) | ? [X19,X20] : s('type.wordLang.prog'(X0),X1) = s('type.wordLang.prog'(X0),'const.wordLang.Seq_2'(s('type.wordLang.prog'(X0),X19),s('type.wordLang.prog'(X0),X20))) | ? [X14,X15,X16,X17,X18] : s('type.wordLang.prog'(X0),X1) = s('type.wordLang.prog'(X0),'const.wordLang.If_5'(s('type.asm.cmp',X14),s('type.num.num',X15),s('type.asm.reg_imm'(X0),X16),s('type.wordLang.prog'(X0),X17),s('type.wordLang.prog'(X0),X18))) | ? [X12,X13] : s('type.wordLang.prog'(X0),X1) = s('type.wordLang.prog'(X0),'const.wordLang.Alloc_2'(s('type.num.num',X12),s('type.sptree.spt'('type.one.one'),X13))) | ? [X11] : s('type.wordLang.prog'(X0),X1) = s('type.wordLang.prog'(X0),'const.wordLang.Raise_1'(s('type.num.num',X11))) | ? [X9,X10] : s('type.wordLang.prog'(X0),X1) = s('type.wordLang.prog'(X0),'const.wordLang.Return_2'(s('type.num.num',X9),s('type.num.num',X10))) | s('type.wordLang.prog'(X0),'const.wordLang.Tick_0') = s('type.wordLang.prog'(X0),X1) | ? [X6,X7,X8] : s('type.wordLang.prog'(X0),X1) = s('type.wordLang.prog'(X0),'const.wordLang.LocValue_3'(s('type.num.num',X6),s('type.num.num',X7),s('type.num.num',X8))) | ? [X2,X3,X4,X5] : s('type.wordLang.prog'(X0),X1) = s('type.wordLang.prog'(X0),'const.wordLang.FFI_4'(s('type.num.num',X2),s('type.num.num',X3),s('type.num.num',X4),s('type.sptree.spt'('type.one.one'),X5)))) & ! [X98,X99] : s('type.wordLang.prog'(X0),X1) != s('type.wordLang.prog'(X0),'const.wordLang.Assign_2'(s('type.num.num',X98),s('type.wordLang.exp'(X0),X99))) & ! [X96,X97] : s('type.wordLang.prog'(X0),X1) != s('type.wordLang.prog'(X0),'const.wordLang.Store_2'(s('type.wordLang.exp'(X0),X96),s('type.num.num',X97))) & ! [X94,X95] : s('type.wordLang.prog'(X0),X1) != s('type.wordLang.prog'(X0),'const.wordLang.Set_2'(s('type.wordLang.store_name',X94),s('type.wordLang.exp'(X0),'const.wordLang.Var_1'(s('type.num.num',X95))))) & ! [X92,X93] : s('type.wordLang.prog'(X0),X1) != s('type.wordLang.prog'(X0),'const.wordLang.Set_2'(s('type.wordLang.store_name',X92),s('type.wordLang.exp'(X0),'const.wordLang.Const_1'(s('type.fcp.cart'(bool,X0),X93))))) & ! [X90,X91] : s('type.wordLang.prog'(X0),X1) != s('type.wordLang.prog'(X0),'const.wordLang.Set_2'(s('type.wordLang.store_name',X90),s('type.wordLang.exp'(X0),'const.wordLang.Lookup_1'(s('type.wordLang.store_name',X91))))) & ! [X88,X89] : s('type.wordLang.prog'(X0),X1) != s('type.wordLang.prog'(X0),'const.wordLang.Set_2'(s('type.wordLang.store_name',X88),s('type.wordLang.exp'(X0),'const.wordLang.Load_1'(s('type.wordLang.exp'(X0),X89))))) & ! [X85,X86,X87] : s('type.wordLang.prog'(X0),X1) != s('type.wordLang.prog'(X0),'const.wordLang.Set_2'(s('type.wordLang.store_name',X85),s('type.wordLang.exp'(X0),'const.wordLang.Op_2'(s('type.asm.binop',X86),s('type.list.list'('type.wordLang.exp'(X0)),X87))))) & ! [X81,X82,X83,X84] : s('type.wordLang.prog'(X0),X1) != s('type.wordLang.prog'(X0),'const.wordLang.Set_2'(s('type.wordLang.store_name',X81),s('type.wordLang.exp'(X0),'const.wordLang.Shift_3'(s('type.asm.shift',X82),s('type.wordLang.exp'(X0),X83),s('type.wordLang.num_exp'(X0),X84))))) & ! [X79,X80] : s('type.wordLang.prog'(X0),X1) != s('type.wordLang.prog'(X0),'const.wordLang.Seq_2'(s('type.wordLang.prog'(X0),X79),s('type.wordLang.prog'(X0),X80))) & ! [X74,X75,X76,X77,X78] : s('type.wordLang.prog'(X0),X1) != s('type.wordLang.prog'(X0),'const.wordLang.If_5'(s('type.asm.cmp',X74),s('type.num.num',X75),s('type.asm.reg_imm'(X0),X76),s('type.wordLang.prog'(X0),X77),s('type.wordLang.prog'(X0),X78))) & ! [X72,X73] : s('type.wordLang.prog'(X0),X1) != s('type.wordLang.prog'(X0),'const.wordLang.MustTerminate_2'(s('type.num.num',X72),s('type.wordLang.prog'(X0),X73))) & ! [X68,X69,X70,X71] : s('type.wordLang.prog'(X0),X1) != s('type.wordLang.prog'(X0),'const.wordLang.Call_4'(s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.sptree.spt'('type.one.one'),'type.pair.prod'('type.wordLang.prog'(X0),'type.pair.prod'('type.num.num','type.num.num'))))),X68),s('type.option.option'('type.num.num'),X69),s('type.list.list'('type.num.num'),X70),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.wordLang.prog'(X0),'type.pair.prod'('type.num.num','type.num.num')))),X71))) & s('type.wordLang.prog'(X0),'const.wordLang.Skip_0') != s('type.wordLang.prog'(X0),X1) & ! [X66,X67] : s('type.wordLang.prog'(X0),X1) != s('type.wordLang.prog'(X0),'const.wordLang.Move_2'(s('type.num.num',X66),s('type.list.list'('type.pair.prod'('type.num.num','type.num.num')),X67))) & ! [X65] : s('type.wordLang.prog'(X0),X1) != s('type.wordLang.prog'(X0),'const.wordLang.Inst_1'(s('type.asm.inst'(X0),X65))) & ! [X63,X64] : s('type.wordLang.prog'(X0),X1) != s('type.wordLang.prog'(X0),'const.wordLang.Get_2'(s('type.num.num',X63),s('type.wordLang.store_name',X64))) & ! [X61,X62] : s('type.wordLang.prog'(X0),X1) != s('type.wordLang.prog'(X0),'const.wordLang.Alloc_2'(s('type.num.num',X61),s('type.sptree.spt'('type.one.one'),X62))) & ! [X60] : s('type.wordLang.prog'(X0),X1) != s('type.wordLang.prog'(X0),'const.wordLang.Raise_1'(s('type.num.num',X60))) & ! [X58,X59] : s('type.wordLang.prog'(X0),X1) != s('type.wordLang.prog'(X0),'const.wordLang.Return_2'(s('type.num.num',X58),s('type.num.num',X59))) & s('type.wordLang.prog'(X0),'const.wordLang.Tick_0') != s('type.wordLang.prog'(X0),X1) & ! [X55,X56,X57] : s('type.wordLang.prog'(X0),X1) != s('type.wordLang.prog'(X0),'const.wordLang.LocValue_3'(s('type.num.num',X55),s('type.num.num',X56),s('type.num.num',X57))) & ! [X51,X52,X53,X54] : s('type.wordLang.prog'(X0),X1) != s('type.wordLang.prog'(X0),'const.wordLang.FFI_4'(s('type.num.num',X51),s('type.num.num',X52),s('type.num.num',X53),s('type.sptree.spt'('type.one.one'),X54))))),
  inference(flattening,[],[f97])).
fof(f97,plain,(
  ? [X0,X1] : ((s('type.wordLang.prog'(X0),'const.wordLang.Skip_0') = s('type.wordLang.prog'(X0),X1) | ? [X49,X50] : s('type.wordLang.prog'(X0),X1) = s('type.wordLang.prog'(X0),'const.wordLang.Move_2'(s('type.num.num',X49),s('type.list.list'('type.pair.prod'('type.num.num','type.num.num')),X50))) | ? [X48] : s('type.wordLang.prog'(X0),X1) = s('type.wordLang.prog'(X0),'const.wordLang.Inst_1'(s('type.asm.inst'(X0),X48))) | ? [X46,X47] : s('type.wordLang.prog'(X0),X1) = s('type.wordLang.prog'(X0),'const.wordLang.Assign_2'(s('type.num.num',X46),s('type.wordLang.exp'(X0),X47))) | ? [X44,X45] : s('type.wordLang.prog'(X0),X1) = s('type.wordLang.prog'(X0),'const.wordLang.Get_2'(s('type.num.num',X44),s('type.wordLang.store_name',X45))) | ? [X42,X43] : s('type.wordLang.prog'(X0),X1) = s('type.wordLang.prog'(X0),'const.wordLang.Set_2'(s('type.wordLang.store_name',X42),s('type.wordLang.exp'(X0),'const.wordLang.Const_1'(s('type.fcp.cart'(bool,X0),X43))))) | ? [X40,X41] : s('type.wordLang.prog'(X0),X1) = s('type.wordLang.prog'(X0),'const.wordLang.Set_2'(s('type.wordLang.store_name',X40),s('type.wordLang.exp'(X0),'const.wordLang.Var_1'(s('type.num.num',X41))))) | ? [X38,X39] : s('type.wordLang.prog'(X0),X1) = s('type.wordLang.prog'(X0),'const.wordLang.Set_2'(s('type.wordLang.store_name',X38),s('type.wordLang.exp'(X0),'const.wordLang.Lookup_1'(s('type.wordLang.store_name',X39))))) | ? [X36,X37] : s('type.wordLang.prog'(X0),X1) = s('type.wordLang.prog'(X0),'const.wordLang.Set_2'(s('type.wordLang.store_name',X36),s('type.wordLang.exp'(X0),'const.wordLang.Load_1'(s('type.wordLang.exp'(X0),X37))))) | ? [X33,X34,X35] : s('type.wordLang.prog'(X0),X1) = s('type.wordLang.prog'(X0),'const.wordLang.Set_2'(s('type.wordLang.store_name',X33),s('type.wordLang.exp'(X0),'const.wordLang.Op_2'(s('type.asm.binop',X34),s('type.list.list'('type.wordLang.exp'(X0)),X35))))) | ? [X29,X30,X31,X32] : s('type.wordLang.prog'(X0),X1) = s('type.wordLang.prog'(X0),'const.wordLang.Set_2'(s('type.wordLang.store_name',X29),s('type.wordLang.exp'(X0),'const.wordLang.Shift_3'(s('type.asm.shift',X30),s('type.wordLang.exp'(X0),X31),s('type.wordLang.num_exp'(X0),X32))))) | ? [X27,X28] : s('type.wordLang.prog'(X0),X1) = s('type.wordLang.prog'(X0),'const.wordLang.Store_2'(s('type.wordLang.exp'(X0),X27),s('type.num.num',X28))) | ? [X25,X26] : s('type.wordLang.prog'(X0),X1) = s('type.wordLang.prog'(X0),'const.wordLang.MustTerminate_2'(s('type.num.num',X25),s('type.wordLang.prog'(X0),X26))) | ? [X21,X22,X23,X24] : s('type.wordLang.prog'(X0),X1) = s('type.wordLang.prog'(X0),'const.wordLang.Call_4'(s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.sptree.spt'('type.one.one'),'type.pair.prod'('type.wordLang.prog'(X0),'type.pair.prod'('type.num.num','type.num.num'))))),X21),s('type.option.option'('type.num.num'),X22),s('type.list.list'('type.num.num'),X23),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.wordLang.prog'(X0),'type.pair.prod'('type.num.num','type.num.num')))),X24))) | ? [X19,X20] : s('type.wordLang.prog'(X0),X1) = s('type.wordLang.prog'(X0),'const.wordLang.Seq_2'(s('type.wordLang.prog'(X0),X19),s('type.wordLang.prog'(X0),X20))) | ? [X14,X15,X16,X17,X18] : s('type.wordLang.prog'(X0),X1) = s('type.wordLang.prog'(X0),'const.wordLang.If_5'(s('type.asm.cmp',X14),s('type.num.num',X15),s('type.asm.reg_imm'(X0),X16),s('type.wordLang.prog'(X0),X17),s('type.wordLang.prog'(X0),X18))) | ? [X12,X13] : s('type.wordLang.prog'(X0),X1) = s('type.wordLang.prog'(X0),'const.wordLang.Alloc_2'(s('type.num.num',X12),s('type.sptree.spt'('type.one.one'),X13))) | ? [X11] : s('type.wordLang.prog'(X0),X1) = s('type.wordLang.prog'(X0),'const.wordLang.Raise_1'(s('type.num.num',X11))) | ? [X9,X10] : s('type.wordLang.prog'(X0),X1) = s('type.wordLang.prog'(X0),'const.wordLang.Return_2'(s('type.num.num',X9),s('type.num.num',X10))) | s('type.wordLang.prog'(X0),'const.wordLang.Tick_0') = s('type.wordLang.prog'(X0),X1) | ? [X6,X7,X8] : s('type.wordLang.prog'(X0),X1) = s('type.wordLang.prog'(X0),'const.wordLang.LocValue_3'(s('type.num.num',X6),s('type.num.num',X7),s('type.num.num',X8))) | ? [X2,X3,X4,X5] : s('type.wordLang.prog'(X0),X1) = s('type.wordLang.prog'(X0),'const.wordLang.FFI_4'(s('type.num.num',X2),s('type.num.num',X3),s('type.num.num',X4),s('type.sptree.spt'('type.one.one'),X5)))) & (! [X98,X99] : s('type.wordLang.prog'(X0),X1) != s('type.wordLang.prog'(X0),'const.wordLang.Assign_2'(s('type.num.num',X98),s('type.wordLang.exp'(X0),X99))) & ! [X96,X97] : s('type.wordLang.prog'(X0),X1) != s('type.wordLang.prog'(X0),'const.wordLang.Store_2'(s('type.wordLang.exp'(X0),X96),s('type.num.num',X97))) & ! [X94,X95] : s('type.wordLang.prog'(X0),X1) != s('type.wordLang.prog'(X0),'const.wordLang.Set_2'(s('type.wordLang.store_name',X94),s('type.wordLang.exp'(X0),'const.wordLang.Var_1'(s('type.num.num',X95))))) & ! [X92,X93] : s('type.wordLang.prog'(X0),X1) != s('type.wordLang.prog'(X0),'const.wordLang.Set_2'(s('type.wordLang.store_name',X92),s('type.wordLang.exp'(X0),'const.wordLang.Const_1'(s('type.fcp.cart'(bool,X0),X93))))) & ! [X90,X91] : s('type.wordLang.prog'(X0),X1) != s('type.wordLang.prog'(X0),'const.wordLang.Set_2'(s('type.wordLang.store_name',X90),s('type.wordLang.exp'(X0),'const.wordLang.Lookup_1'(s('type.wordLang.store_name',X91))))) & ! [X88,X89] : s('type.wordLang.prog'(X0),X1) != s('type.wordLang.prog'(X0),'const.wordLang.Set_2'(s('type.wordLang.store_name',X88),s('type.wordLang.exp'(X0),'const.wordLang.Load_1'(s('type.wordLang.exp'(X0),X89))))) & ! [X85,X86,X87] : s('type.wordLang.prog'(X0),X1) != s('type.wordLang.prog'(X0),'const.wordLang.Set_2'(s('type.wordLang.store_name',X85),s('type.wordLang.exp'(X0),'const.wordLang.Op_2'(s('type.asm.binop',X86),s('type.list.list'('type.wordLang.exp'(X0)),X87))))) & ! [X81,X82,X83,X84] : s('type.wordLang.prog'(X0),X1) != s('type.wordLang.prog'(X0),'const.wordLang.Set_2'(s('type.wordLang.store_name',X81),s('type.wordLang.exp'(X0),'const.wordLang.Shift_3'(s('type.asm.shift',X82),s('type.wordLang.exp'(X0),X83),s('type.wordLang.num_exp'(X0),X84))))) & ! [X79,X80] : s('type.wordLang.prog'(X0),X1) != s('type.wordLang.prog'(X0),'const.wordLang.Seq_2'(s('type.wordLang.prog'(X0),X79),s('type.wordLang.prog'(X0),X80))) & ! [X74,X75,X76,X77,X78] : s('type.wordLang.prog'(X0),X1) != s('type.wordLang.prog'(X0),'const.wordLang.If_5'(s('type.asm.cmp',X74),s('type.num.num',X75),s('type.asm.reg_imm'(X0),X76),s('type.wordLang.prog'(X0),X77),s('type.wordLang.prog'(X0),X78))) & ! [X72,X73] : s('type.wordLang.prog'(X0),X1) != s('type.wordLang.prog'(X0),'const.wordLang.MustTerminate_2'(s('type.num.num',X72),s('type.wordLang.prog'(X0),X73))) & ! [X68,X69,X70,X71] : s('type.wordLang.prog'(X0),X1) != s('type.wordLang.prog'(X0),'const.wordLang.Call_4'(s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.sptree.spt'('type.one.one'),'type.pair.prod'('type.wordLang.prog'(X0),'type.pair.prod'('type.num.num','type.num.num'))))),X68),s('type.option.option'('type.num.num'),X69),s('type.list.list'('type.num.num'),X70),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.wordLang.prog'(X0),'type.pair.prod'('type.num.num','type.num.num')))),X71))) & s('type.wordLang.prog'(X0),'const.wordLang.Skip_0') != s('type.wordLang.prog'(X0),X1) & ! [X66,X67] : s('type.wordLang.prog'(X0),X1) != s('type.wordLang.prog'(X0),'const.wordLang.Move_2'(s('type.num.num',X66),s('type.list.list'('type.pair.prod'('type.num.num','type.num.num')),X67))) & ! [X65] : s('type.wordLang.prog'(X0),X1) != s('type.wordLang.prog'(X0),'const.wordLang.Inst_1'(s('type.asm.inst'(X0),X65))) & ! [X63,X64] : s('type.wordLang.prog'(X0),X1) != s('type.wordLang.prog'(X0),'const.wordLang.Get_2'(s('type.num.num',X63),s('type.wordLang.store_name',X64))) & ! [X61,X62] : s('type.wordLang.prog'(X0),X1) != s('type.wordLang.prog'(X0),'const.wordLang.Alloc_2'(s('type.num.num',X61),s('type.sptree.spt'('type.one.one'),X62))) & ! [X60] : s('type.wordLang.prog'(X0),X1) != s('type.wordLang.prog'(X0),'const.wordLang.Raise_1'(s('type.num.num',X60))) & ! [X58,X59] : s('type.wordLang.prog'(X0),X1) != s('type.wordLang.prog'(X0),'const.wordLang.Return_2'(s('type.num.num',X58),s('type.num.num',X59))) & s('type.wordLang.prog'(X0),'const.wordLang.Tick_0') != s('type.wordLang.prog'(X0),X1) & ! [X55,X56,X57] : s('type.wordLang.prog'(X0),X1) != s('type.wordLang.prog'(X0),'const.wordLang.LocValue_3'(s('type.num.num',X55),s('type.num.num',X56),s('type.num.num',X57))) & ! [X51,X52,X53,X54] : s('type.wordLang.prog'(X0),X1) != s('type.wordLang.prog'(X0),'const.wordLang.FFI_4'(s('type.num.num',X51),s('type.num.num',X52),s('type.num.num',X53),s('type.sptree.spt'('type.one.one'),X54)))))),
  inference(ennf_transformation,[],[f40])).
fof(f40,plain,(
  ~! [X0,X1] : ((s('type.wordLang.prog'(X0),'const.wordLang.Skip_0') = s('type.wordLang.prog'(X0),X1) | ? [X49,X50] : s('type.wordLang.prog'(X0),X1) = s('type.wordLang.prog'(X0),'const.wordLang.Move_2'(s('type.num.num',X49),s('type.list.list'('type.pair.prod'('type.num.num','type.num.num')),X50))) | ? [X48] : s('type.wordLang.prog'(X0),X1) = s('type.wordLang.prog'(X0),'const.wordLang.Inst_1'(s('type.asm.inst'(X0),X48))) | ? [X46,X47] : s('type.wordLang.prog'(X0),X1) = s('type.wordLang.prog'(X0),'const.wordLang.Assign_2'(s('type.num.num',X46),s('type.wordLang.exp'(X0),X47))) | ? [X44,X45] : s('type.wordLang.prog'(X0),X1) = s('type.wordLang.prog'(X0),'const.wordLang.Get_2'(s('type.num.num',X44),s('type.wordLang.store_name',X45))) | ? [X42,X43] : s('type.wordLang.prog'(X0),X1) = s('type.wordLang.prog'(X0),'const.wordLang.Set_2'(s('type.wordLang.store_name',X42),s('type.wordLang.exp'(X0),'const.wordLang.Const_1'(s('type.fcp.cart'(bool,X0),X43))))) | ? [X40,X41] : s('type.wordLang.prog'(X0),X1) = s('type.wordLang.prog'(X0),'const.wordLang.Set_2'(s('type.wordLang.store_name',X40),s('type.wordLang.exp'(X0),'const.wordLang.Var_1'(s('type.num.num',X41))))) | ? [X38,X39] : s('type.wordLang.prog'(X0),X1) = s('type.wordLang.prog'(X0),'const.wordLang.Set_2'(s('type.wordLang.store_name',X38),s('type.wordLang.exp'(X0),'const.wordLang.Lookup_1'(s('type.wordLang.store_name',X39))))) | ? [X36,X37] : s('type.wordLang.prog'(X0),X1) = s('type.wordLang.prog'(X0),'const.wordLang.Set_2'(s('type.wordLang.store_name',X36),s('type.wordLang.exp'(X0),'const.wordLang.Load_1'(s('type.wordLang.exp'(X0),X37))))) | ? [X33,X34,X35] : s('type.wordLang.prog'(X0),X1) = s('type.wordLang.prog'(X0),'const.wordLang.Set_2'(s('type.wordLang.store_name',X33),s('type.wordLang.exp'(X0),'const.wordLang.Op_2'(s('type.asm.binop',X34),s('type.list.list'('type.wordLang.exp'(X0)),X35))))) | ? [X29,X30,X31,X32] : s('type.wordLang.prog'(X0),X1) = s('type.wordLang.prog'(X0),'const.wordLang.Set_2'(s('type.wordLang.store_name',X29),s('type.wordLang.exp'(X0),'const.wordLang.Shift_3'(s('type.asm.shift',X30),s('type.wordLang.exp'(X0),X31),s('type.wordLang.num_exp'(X0),X32))))) | ? [X27,X28] : s('type.wordLang.prog'(X0),X1) = s('type.wordLang.prog'(X0),'const.wordLang.Store_2'(s('type.wordLang.exp'(X0),X27),s('type.num.num',X28))) | ? [X25,X26] : s('type.wordLang.prog'(X0),X1) = s('type.wordLang.prog'(X0),'const.wordLang.MustTerminate_2'(s('type.num.num',X25),s('type.wordLang.prog'(X0),X26))) | ? [X21,X22,X23,X24] : s('type.wordLang.prog'(X0),X1) = s('type.wordLang.prog'(X0),'const.wordLang.Call_4'(s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.sptree.spt'('type.one.one'),'type.pair.prod'('type.wordLang.prog'(X0),'type.pair.prod'('type.num.num','type.num.num'))))),X21),s('type.option.option'('type.num.num'),X22),s('type.list.list'('type.num.num'),X23),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.wordLang.prog'(X0),'type.pair.prod'('type.num.num','type.num.num')))),X24))) | ? [X19,X20] : s('type.wordLang.prog'(X0),X1) = s('type.wordLang.prog'(X0),'const.wordLang.Seq_2'(s('type.wordLang.prog'(X0),X19),s('type.wordLang.prog'(X0),X20))) | ? [X14,X15,X16,X17,X18] : s('type.wordLang.prog'(X0),X1) = s('type.wordLang.prog'(X0),'const.wordLang.If_5'(s('type.asm.cmp',X14),s('type.num.num',X15),s('type.asm.reg_imm'(X0),X16),s('type.wordLang.prog'(X0),X17),s('type.wordLang.prog'(X0),X18))) | ? [X12,X13] : s('type.wordLang.prog'(X0),X1) = s('type.wordLang.prog'(X0),'const.wordLang.Alloc_2'(s('type.num.num',X12),s('type.sptree.spt'('type.one.one'),X13))) | ? [X11] : s('type.wordLang.prog'(X0),X1) = s('type.wordLang.prog'(X0),'const.wordLang.Raise_1'(s('type.num.num',X11))) | ? [X9,X10] : s('type.wordLang.prog'(X0),X1) = s('type.wordLang.prog'(X0),'const.wordLang.Return_2'(s('type.num.num',X9),s('type.num.num',X10))) | s('type.wordLang.prog'(X0),'const.wordLang.Tick_0') = s('type.wordLang.prog'(X0),X1) | ? [X6,X7,X8] : s('type.wordLang.prog'(X0),X1) = s('type.wordLang.prog'(X0),'const.wordLang.LocValue_3'(s('type.num.num',X6),s('type.num.num',X7),s('type.num.num',X8))) | ? [X2,X3,X4,X5] : s('type.wordLang.prog'(X0),X1) = s('type.wordLang.prog'(X0),'const.wordLang.FFI_4'(s('type.num.num',X2),s('type.num.num',X3),s('type.num.num',X4),s('type.sptree.spt'('type.one.one'),X5)))) => (? [X98,X99] : s('type.wordLang.prog'(X0),X1) = s('type.wordLang.prog'(X0),'const.wordLang.Assign_2'(s('type.num.num',X98),s('type.wordLang.exp'(X0),X99))) | ? [X96,X97] : s('type.wordLang.prog'(X0),X1) = s('type.wordLang.prog'(X0),'const.wordLang.Store_2'(s('type.wordLang.exp'(X0),X96),s('type.num.num',X97))) | ? [X94,X95] : s('type.wordLang.prog'(X0),X1) = s('type.wordLang.prog'(X0),'const.wordLang.Set_2'(s('type.wordLang.store_name',X94),s('type.wordLang.exp'(X0),'const.wordLang.Var_1'(s('type.num.num',X95))))) | ? [X92,X93] : s('type.wordLang.prog'(X0),X1) = s('type.wordLang.prog'(X0),'const.wordLang.Set_2'(s('type.wordLang.store_name',X92),s('type.wordLang.exp'(X0),'const.wordLang.Const_1'(s('type.fcp.cart'(bool,X0),X93))))) | ? [X90,X91] : s('type.wordLang.prog'(X0),X1) = s('type.wordLang.prog'(X0),'const.wordLang.Set_2'(s('type.wordLang.store_name',X90),s('type.wordLang.exp'(X0),'const.wordLang.Lookup_1'(s('type.wordLang.store_name',X91))))) | ? [X88,X89] : s('type.wordLang.prog'(X0),X1) = s('type.wordLang.prog'(X0),'const.wordLang.Set_2'(s('type.wordLang.store_name',X88),s('type.wordLang.exp'(X0),'const.wordLang.Load_1'(s('type.wordLang.exp'(X0),X89))))) | ? [X85,X86,X87] : s('type.wordLang.prog'(X0),X1) = s('type.wordLang.prog'(X0),'const.wordLang.Set_2'(s('type.wordLang.store_name',X85),s('type.wordLang.exp'(X0),'const.wordLang.Op_2'(s('type.asm.binop',X86),s('type.list.list'('type.wordLang.exp'(X0)),X87))))) | ? [X81,X82,X83,X84] : s('type.wordLang.prog'(X0),X1) = s('type.wordLang.prog'(X0),'const.wordLang.Set_2'(s('type.wordLang.store_name',X81),s('type.wordLang.exp'(X0),'const.wordLang.Shift_3'(s('type.asm.shift',X82),s('type.wordLang.exp'(X0),X83),s('type.wordLang.num_exp'(X0),X84))))) | ? [X79,X80] : s('type.wordLang.prog'(X0),X1) = s('type.wordLang.prog'(X0),'const.wordLang.Seq_2'(s('type.wordLang.prog'(X0),X79),s('type.wordLang.prog'(X0),X80))) | ? [X74,X75,X76,X77,X78] : s('type.wordLang.prog'(X0),X1) = s('type.wordLang.prog'(X0),'const.wordLang.If_5'(s('type.asm.cmp',X74),s('type.num.num',X75),s('type.asm.reg_imm'(X0),X76),s('type.wordLang.prog'(X0),X77),s('type.wordLang.prog'(X0),X78))) | ? [X72,X73] : s('type.wordLang.prog'(X0),X1) = s('type.wordLang.prog'(X0),'const.wordLang.MustTerminate_2'(s('type.num.num',X72),s('type.wordLang.prog'(X0),X73))) | ? [X68,X69,X70,X71] : s('type.wordLang.prog'(X0),X1) = s('type.wordLang.prog'(X0),'const.wordLang.Call_4'(s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.sptree.spt'('type.one.one'),'type.pair.prod'('type.wordLang.prog'(X0),'type.pair.prod'('type.num.num','type.num.num'))))),X68),s('type.option.option'('type.num.num'),X69),s('type.list.list'('type.num.num'),X70),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.wordLang.prog'(X0),'type.pair.prod'('type.num.num','type.num.num')))),X71))) | s('type.wordLang.prog'(X0),'const.wordLang.Skip_0') = s('type.wordLang.prog'(X0),X1) | ? [X66,X67] : s('type.wordLang.prog'(X0),X1) = s('type.wordLang.prog'(X0),'const.wordLang.Move_2'(s('type.num.num',X66),s('type.list.list'('type.pair.prod'('type.num.num','type.num.num')),X67))) | ? [X65] : s('type.wordLang.prog'(X0),X1) = s('type.wordLang.prog'(X0),'const.wordLang.Inst_1'(s('type.asm.inst'(X0),X65))) | ? [X63,X64] : s('type.wordLang.prog'(X0),X1) = s('type.wordLang.prog'(X0),'const.wordLang.Get_2'(s('type.num.num',X63),s('type.wordLang.store_name',X64))) | ? [X61,X62] : s('type.wordLang.prog'(X0),X1) = s('type.wordLang.prog'(X0),'const.wordLang.Alloc_2'(s('type.num.num',X61),s('type.sptree.spt'('type.one.one'),X62))) | ? [X60] : s('type.wordLang.prog'(X0),X1) = s('type.wordLang.prog'(X0),'const.wordLang.Raise_1'(s('type.num.num',X60))) | ? [X58,X59] : s('type.wordLang.prog'(X0),X1) = s('type.wordLang.prog'(X0),'const.wordLang.Return_2'(s('type.num.num',X58),s('type.num.num',X59))) | s('type.wordLang.prog'(X0),'const.wordLang.Tick_0') = s('type.wordLang.prog'(X0),X1) | ? [X55,X56,X57] : s('type.wordLang.prog'(X0),X1) = s('type.wordLang.prog'(X0),'const.wordLang.LocValue_3'(s('type.num.num',X55),s('type.num.num',X56),s('type.num.num',X57))) | ? [X51,X52,X53,X54] : s('type.wordLang.prog'(X0),X1) = s('type.wordLang.prog'(X0),'const.wordLang.FFI_4'(s('type.num.num',X51),s('type.num.num',X52),s('type.num.num',X53),s('type.sptree.spt'('type.one.one'),X54)))))),
  inference(flattening,[],[f39])).
fof(f39,plain,(
  ~! [X0] : ! [X1] : ((s('type.wordLang.prog'(X0),'const.wordLang.Skip_0') = s('type.wordLang.prog'(X0),X1) | ? [X49,X50] : s('type.wordLang.prog'(X0),X1) = s('type.wordLang.prog'(X0),'const.wordLang.Move_2'(s('type.num.num',X49),s('type.list.list'('type.pair.prod'('type.num.num','type.num.num')),X50))) | ? [X48] : s('type.wordLang.prog'(X0),X1) = s('type.wordLang.prog'(X0),'const.wordLang.Inst_1'(s('type.asm.inst'(X0),X48))) | ? [X46,X47] : s('type.wordLang.prog'(X0),X1) = s('type.wordLang.prog'(X0),'const.wordLang.Assign_2'(s('type.num.num',X46),s('type.wordLang.exp'(X0),X47))) | ? [X44,X45] : s('type.wordLang.prog'(X0),X1) = s('type.wordLang.prog'(X0),'const.wordLang.Get_2'(s('type.num.num',X44),s('type.wordLang.store_name',X45))) | ? [X42,X43] : s('type.wordLang.prog'(X0),X1) = s('type.wordLang.prog'(X0),'const.wordLang.Set_2'(s('type.wordLang.store_name',X42),s('type.wordLang.exp'(X0),'const.wordLang.Const_1'(s('type.fcp.cart'(bool,X0),X43))))) | ? [X40,X41] : s('type.wordLang.prog'(X0),X1) = s('type.wordLang.prog'(X0),'const.wordLang.Set_2'(s('type.wordLang.store_name',X40),s('type.wordLang.exp'(X0),'const.wordLang.Var_1'(s('type.num.num',X41))))) | ? [X38,X39] : s('type.wordLang.prog'(X0),X1) = s('type.wordLang.prog'(X0),'const.wordLang.Set_2'(s('type.wordLang.store_name',X38),s('type.wordLang.exp'(X0),'const.wordLang.Lookup_1'(s('type.wordLang.store_name',X39))))) | ? [X36,X37] : s('type.wordLang.prog'(X0),X1) = s('type.wordLang.prog'(X0),'const.wordLang.Set_2'(s('type.wordLang.store_name',X36),s('type.wordLang.exp'(X0),'const.wordLang.Load_1'(s('type.wordLang.exp'(X0),X37))))) | ? [X33,X34,X35] : s('type.wordLang.prog'(X0),X1) = s('type.wordLang.prog'(X0),'const.wordLang.Set_2'(s('type.wordLang.store_name',X33),s('type.wordLang.exp'(X0),'const.wordLang.Op_2'(s('type.asm.binop',X34),s('type.list.list'('type.wordLang.exp'(X0)),X35))))) | ? [X29,X30,X31,X32] : s('type.wordLang.prog'(X0),X1) = s('type.wordLang.prog'(X0),'const.wordLang.Set_2'(s('type.wordLang.store_name',X29),s('type.wordLang.exp'(X0),'const.wordLang.Shift_3'(s('type.asm.shift',X30),s('type.wordLang.exp'(X0),X31),s('type.wordLang.num_exp'(X0),X32))))) | ? [X27,X28] : s('type.wordLang.prog'(X0),X1) = s('type.wordLang.prog'(X0),'const.wordLang.Store_2'(s('type.wordLang.exp'(X0),X27),s('type.num.num',X28))) | ? [X25,X26] : s('type.wordLang.prog'(X0),X1) = s('type.wordLang.prog'(X0),'const.wordLang.MustTerminate_2'(s('type.num.num',X25),s('type.wordLang.prog'(X0),X26))) | ? [X21,X22,X23,X24] : s('type.wordLang.prog'(X0),X1) = s('type.wordLang.prog'(X0),'const.wordLang.Call_4'(s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.sptree.spt'('type.one.one'),'type.pair.prod'('type.wordLang.prog'(X0),'type.pair.prod'('type.num.num','type.num.num'))))),X21),s('type.option.option'('type.num.num'),X22),s('type.list.list'('type.num.num'),X23),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.wordLang.prog'(X0),'type.pair.prod'('type.num.num','type.num.num')))),X24))) | ? [X19,X20] : s('type.wordLang.prog'(X0),X1) = s('type.wordLang.prog'(X0),'const.wordLang.Seq_2'(s('type.wordLang.prog'(X0),X19),s('type.wordLang.prog'(X0),X20))) | ? [X14,X15,X16,X17,X18] : s('type.wordLang.prog'(X0),X1) = s('type.wordLang.prog'(X0),'const.wordLang.If_5'(s('type.asm.cmp',X14),s('type.num.num',X15),s('type.asm.reg_imm'(X0),X16),s('type.wordLang.prog'(X0),X17),s('type.wordLang.prog'(X0),X18))) | ? [X12,X13] : s('type.wordLang.prog'(X0),X1) = s('type.wordLang.prog'(X0),'const.wordLang.Alloc_2'(s('type.num.num',X12),s('type.sptree.spt'('type.one.one'),X13))) | ? [X11] : s('type.wordLang.prog'(X0),X1) = s('type.wordLang.prog'(X0),'const.wordLang.Raise_1'(s('type.num.num',X11))) | ? [X9,X10] : s('type.wordLang.prog'(X0),X1) = s('type.wordLang.prog'(X0),'const.wordLang.Return_2'(s('type.num.num',X9),s('type.num.num',X10))) | s('type.wordLang.prog'(X0),'const.wordLang.Tick_0') = s('type.wordLang.prog'(X0),X1) | ? [X6,X7,X8] : s('type.wordLang.prog'(X0),X1) = s('type.wordLang.prog'(X0),'const.wordLang.LocValue_3'(s('type.num.num',X6),s('type.num.num',X7),s('type.num.num',X8))) | ? [X2,X3,X4,X5] : s('type.wordLang.prog'(X0),X1) = s('type.wordLang.prog'(X0),'const.wordLang.FFI_4'(s('type.num.num',X2),s('type.num.num',X3),s('type.num.num',X4),s('type.sptree.spt'('type.one.one'),X5)))) => (? [X98,X99] : s('type.wordLang.prog'(X0),X1) = s('type.wordLang.prog'(X0),'const.wordLang.Assign_2'(s('type.num.num',X98),s('type.wordLang.exp'(X0),X99))) | ? [X96,X97] : s('type.wordLang.prog'(X0),X1) = s('type.wordLang.prog'(X0),'const.wordLang.Store_2'(s('type.wordLang.exp'(X0),X96),s('type.num.num',X97))) | ? [X94,X95] : s('type.wordLang.prog'(X0),X1) = s('type.wordLang.prog'(X0),'const.wordLang.Set_2'(s('type.wordLang.store_name',X94),s('type.wordLang.exp'(X0),'const.wordLang.Var_1'(s('type.num.num',X95))))) | ? [X92,X93] : s('type.wordLang.prog'(X0),X1) = s('type.wordLang.prog'(X0),'const.wordLang.Set_2'(s('type.wordLang.store_name',X92),s('type.wordLang.exp'(X0),'const.wordLang.Const_1'(s('type.fcp.cart'(bool,X0),X93))))) | ? [X90,X91] : s('type.wordLang.prog'(X0),X1) = s('type.wordLang.prog'(X0),'const.wordLang.Set_2'(s('type.wordLang.store_name',X90),s('type.wordLang.exp'(X0),'const.wordLang.Lookup_1'(s('type.wordLang.store_name',X91))))) | ? [X88,X89] : s('type.wordLang.prog'(X0),X1) = s('type.wordLang.prog'(X0),'const.wordLang.Set_2'(s('type.wordLang.store_name',X88),s('type.wordLang.exp'(X0),'const.wordLang.Load_1'(s('type.wordLang.exp'(X0),X89))))) | ? [X85,X86,X87] : s('type.wordLang.prog'(X0),X1) = s('type.wordLang.prog'(X0),'const.wordLang.Set_2'(s('type.wordLang.store_name',X85),s('type.wordLang.exp'(X0),'const.wordLang.Op_2'(s('type.asm.binop',X86),s('type.list.list'('type.wordLang.exp'(X0)),X87))))) | ? [X81,X82,X83,X84] : s('type.wordLang.prog'(X0),X1) = s('type.wordLang.prog'(X0),'const.wordLang.Set_2'(s('type.wordLang.store_name',X81),s('type.wordLang.exp'(X0),'const.wordLang.Shift_3'(s('type.asm.shift',X82),s('type.wordLang.exp'(X0),X83),s('type.wordLang.num_exp'(X0),X84))))) | ? [X79,X80] : s('type.wordLang.prog'(X0),X1) = s('type.wordLang.prog'(X0),'const.wordLang.Seq_2'(s('type.wordLang.prog'(X0),X79),s('type.wordLang.prog'(X0),X80))) | ? [X74,X75,X76,X77,X78] : s('type.wordLang.prog'(X0),X1) = s('type.wordLang.prog'(X0),'const.wordLang.If_5'(s('type.asm.cmp',X74),s('type.num.num',X75),s('type.asm.reg_imm'(X0),X76),s('type.wordLang.prog'(X0),X77),s('type.wordLang.prog'(X0),X78))) | ? [X72,X73] : s('type.wordLang.prog'(X0),X1) = s('type.wordLang.prog'(X0),'const.wordLang.MustTerminate_2'(s('type.num.num',X72),s('type.wordLang.prog'(X0),X73))) | ? [X68,X69,X70,X71] : s('type.wordLang.prog'(X0),X1) = s('type.wordLang.prog'(X0),'const.wordLang.Call_4'(s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.sptree.spt'('type.one.one'),'type.pair.prod'('type.wordLang.prog'(X0),'type.pair.prod'('type.num.num','type.num.num'))))),X68),s('type.option.option'('type.num.num'),X69),s('type.list.list'('type.num.num'),X70),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.wordLang.prog'(X0),'type.pair.prod'('type.num.num','type.num.num')))),X71))) | s('type.wordLang.prog'(X0),'const.wordLang.Skip_0') = s('type.wordLang.prog'(X0),X1) | ? [X66,X67] : s('type.wordLang.prog'(X0),X1) = s('type.wordLang.prog'(X0),'const.wordLang.Move_2'(s('type.num.num',X66),s('type.list.list'('type.pair.prod'('type.num.num','type.num.num')),X67))) | ? [X65] : s('type.wordLang.prog'(X0),X1) = s('type.wordLang.prog'(X0),'const.wordLang.Inst_1'(s('type.asm.inst'(X0),X65))) | ? [X63,X64] : s('type.wordLang.prog'(X0),X1) = s('type.wordLang.prog'(X0),'const.wordLang.Get_2'(s('type.num.num',X63),s('type.wordLang.store_name',X64))) | ? [X61,X62] : s('type.wordLang.prog'(X0),X1) = s('type.wordLang.prog'(X0),'const.wordLang.Alloc_2'(s('type.num.num',X61),s('type.sptree.spt'('type.one.one'),X62))) | ? [X60] : s('type.wordLang.prog'(X0),X1) = s('type.wordLang.prog'(X0),'const.wordLang.Raise_1'(s('type.num.num',X60))) | ? [X58,X59] : s('type.wordLang.prog'(X0),X1) = s('type.wordLang.prog'(X0),'const.wordLang.Return_2'(s('type.num.num',X58),s('type.num.num',X59))) | s('type.wordLang.prog'(X0),'const.wordLang.Tick_0') = s('type.wordLang.prog'(X0),X1) | ? [X55,X56,X57] : s('type.wordLang.prog'(X0),X1) = s('type.wordLang.prog'(X0),'const.wordLang.LocValue_3'(s('type.num.num',X55),s('type.num.num',X56),s('type.num.num',X57))) | ? [X51,X52,X53,X54] : s('type.wordLang.prog'(X0),X1) = s('type.wordLang.prog'(X0),'const.wordLang.FFI_4'(s('type.num.num',X51),s('type.num.num',X52),s('type.num.num',X53),s('type.sptree.spt'('type.one.one'),X54)))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : ! [X7] : ((s('type.wordLang.prog'(X6),'const.wordLang.Skip_0') = s('type.wordLang.prog'(X6),X7) | ? [X8,X9] : s('type.wordLang.prog'(X6),X7) = s('type.wordLang.prog'(X6),'const.wordLang.Move_2'(s('type.num.num',X8),s('type.list.list'('type.pair.prod'('type.num.num','type.num.num')),X9))) | ? [X10] : s('type.wordLang.prog'(X6),X7) = s('type.wordLang.prog'(X6),'const.wordLang.Inst_1'(s('type.asm.inst'(X6),X10))) | ? [X11,X12] : s('type.wordLang.prog'(X6),X7) = s('type.wordLang.prog'(X6),'const.wordLang.Assign_2'(s('type.num.num',X11),s('type.wordLang.exp'(X6),X12))) | ? [X13,X14] : s('type.wordLang.prog'(X6),X7) = s('type.wordLang.prog'(X6),'const.wordLang.Get_2'(s('type.num.num',X13),s('type.wordLang.store_name',X14))) | ? [X15,X16] : s('type.wordLang.prog'(X6),X7) = s('type.wordLang.prog'(X6),'const.wordLang.Set_2'(s('type.wordLang.store_name',X15),s('type.wordLang.exp'(X6),'const.wordLang.Const_1'(s('type.fcp.cart'(bool,X6),X16))))) | ? [X15,X17] : s('type.wordLang.prog'(X6),X7) = s('type.wordLang.prog'(X6),'const.wordLang.Set_2'(s('type.wordLang.store_name',X15),s('type.wordLang.exp'(X6),'const.wordLang.Var_1'(s('type.num.num',X17))))) | ? [X15,X18] : s('type.wordLang.prog'(X6),X7) = s('type.wordLang.prog'(X6),'const.wordLang.Set_2'(s('type.wordLang.store_name',X15),s('type.wordLang.exp'(X6),'const.wordLang.Lookup_1'(s('type.wordLang.store_name',X18))))) | ? [X15,X19] : s('type.wordLang.prog'(X6),X7) = s('type.wordLang.prog'(X6),'const.wordLang.Set_2'(s('type.wordLang.store_name',X15),s('type.wordLang.exp'(X6),'const.wordLang.Load_1'(s('type.wordLang.exp'(X6),X19))))) | ? [X15,X20,X21] : s('type.wordLang.prog'(X6),X7) = s('type.wordLang.prog'(X6),'const.wordLang.Set_2'(s('type.wordLang.store_name',X15),s('type.wordLang.exp'(X6),'const.wordLang.Op_2'(s('type.asm.binop',X20),s('type.list.list'('type.wordLang.exp'(X6)),X21))))) | ? [X15,X22,X23,X24] : s('type.wordLang.prog'(X6),X7) = s('type.wordLang.prog'(X6),'const.wordLang.Set_2'(s('type.wordLang.store_name',X15),s('type.wordLang.exp'(X6),'const.wordLang.Shift_3'(s('type.asm.shift',X22),s('type.wordLang.exp'(X6),X23),s('type.wordLang.num_exp'(X6),X24))))) | ? [X12,X25] : s('type.wordLang.prog'(X6),X7) = s('type.wordLang.prog'(X6),'const.wordLang.Store_2'(s('type.wordLang.exp'(X6),X12),s('type.num.num',X25))) | ? [X26,X27] : s('type.wordLang.prog'(X6),X7) = s('type.wordLang.prog'(X6),'const.wordLang.MustTerminate_2'(s('type.num.num',X26),s('type.wordLang.prog'(X6),X27))) | ? [X28,X29,X30,X31] : s('type.wordLang.prog'(X6),X7) = s('type.wordLang.prog'(X6),'const.wordLang.Call_4'(s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.sptree.spt'('type.one.one'),'type.pair.prod'('type.wordLang.prog'(X6),'type.pair.prod'('type.num.num','type.num.num'))))),X28),s('type.option.option'('type.num.num'),X29),s('type.list.list'('type.num.num'),X30),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.wordLang.prog'(X6),'type.pair.prod'('type.num.num','type.num.num')))),X31))) | ? [X32,X33] : s('type.wordLang.prog'(X6),X7) = s('type.wordLang.prog'(X6),'const.wordLang.Seq_2'(s('type.wordLang.prog'(X6),X32),s('type.wordLang.prog'(X6),X33))) | ? [X34,X35,X36,X37,X38] : s('type.wordLang.prog'(X6),X7) = s('type.wordLang.prog'(X6),'const.wordLang.If_5'(s('type.asm.cmp',X34),s('type.num.num',X35),s('type.asm.reg_imm'(X6),X36),s('type.wordLang.prog'(X6),X37),s('type.wordLang.prog'(X6),X38))) | ? [X39,X40] : s('type.wordLang.prog'(X6),X7) = s('type.wordLang.prog'(X6),'const.wordLang.Alloc_2'(s('type.num.num',X39),s('type.sptree.spt'('type.one.one'),X40))) | ? [X41] : s('type.wordLang.prog'(X6),X7) = s('type.wordLang.prog'(X6),'const.wordLang.Raise_1'(s('type.num.num',X41))) | ? [X42,X43] : s('type.wordLang.prog'(X6),X7) = s('type.wordLang.prog'(X6),'const.wordLang.Return_2'(s('type.num.num',X42),s('type.num.num',X43))) | s('type.wordLang.prog'(X6),'const.wordLang.Tick_0') = s('type.wordLang.prog'(X6),X7) | ? [X44,X45,X46] : s('type.wordLang.prog'(X6),X7) = s('type.wordLang.prog'(X6),'const.wordLang.LocValue_3'(s('type.num.num',X44),s('type.num.num',X45),s('type.num.num',X46))) | ? [X47,X48,X49,X50] : s('type.wordLang.prog'(X6),X7) = s('type.wordLang.prog'(X6),'const.wordLang.FFI_4'(s('type.num.num',X47),s('type.num.num',X48),s('type.num.num',X49),s('type.sptree.spt'('type.one.one'),X50)))) => (? [X11,X12] : s('type.wordLang.prog'(X6),X7) = s('type.wordLang.prog'(X6),'const.wordLang.Assign_2'(s('type.num.num',X11),s('type.wordLang.exp'(X6),X12))) | ? [X12,X25] : s('type.wordLang.prog'(X6),X7) = s('type.wordLang.prog'(X6),'const.wordLang.Store_2'(s('type.wordLang.exp'(X6),X12),s('type.num.num',X25))) | ? [X15,X17] : s('type.wordLang.prog'(X6),X7) = s('type.wordLang.prog'(X6),'const.wordLang.Set_2'(s('type.wordLang.store_name',X15),s('type.wordLang.exp'(X6),'const.wordLang.Var_1'(s('type.num.num',X17))))) | ? [X15,X16] : s('type.wordLang.prog'(X6),X7) = s('type.wordLang.prog'(X6),'const.wordLang.Set_2'(s('type.wordLang.store_name',X15),s('type.wordLang.exp'(X6),'const.wordLang.Const_1'(s('type.fcp.cart'(bool,X6),X16))))) | ? [X15,X18] : s('type.wordLang.prog'(X6),X7) = s('type.wordLang.prog'(X6),'const.wordLang.Set_2'(s('type.wordLang.store_name',X15),s('type.wordLang.exp'(X6),'const.wordLang.Lookup_1'(s('type.wordLang.store_name',X18))))) | ? [X15,X19] : s('type.wordLang.prog'(X6),X7) = s('type.wordLang.prog'(X6),'const.wordLang.Set_2'(s('type.wordLang.store_name',X15),s('type.wordLang.exp'(X6),'const.wordLang.Load_1'(s('type.wordLang.exp'(X6),X19))))) | ? [X15,X20,X21] : s('type.wordLang.prog'(X6),X7) = s('type.wordLang.prog'(X6),'const.wordLang.Set_2'(s('type.wordLang.store_name',X15),s('type.wordLang.exp'(X6),'const.wordLang.Op_2'(s('type.asm.binop',X20),s('type.list.list'('type.wordLang.exp'(X6)),X21))))) | ? [X15,X22,X23,X24] : s('type.wordLang.prog'(X6),X7) = s('type.wordLang.prog'(X6),'const.wordLang.Set_2'(s('type.wordLang.store_name',X15),s('type.wordLang.exp'(X6),'const.wordLang.Shift_3'(s('type.asm.shift',X22),s('type.wordLang.exp'(X6),X23),s('type.wordLang.num_exp'(X6),X24))))) | ? [X32,X33] : s('type.wordLang.prog'(X6),X7) = s('type.wordLang.prog'(X6),'const.wordLang.Seq_2'(s('type.wordLang.prog'(X6),X32),s('type.wordLang.prog'(X6),X33))) | ? [X34,X35,X36,X37,X38] : s('type.wordLang.prog'(X6),X7) = s('type.wordLang.prog'(X6),'const.wordLang.If_5'(s('type.asm.cmp',X34),s('type.num.num',X35),s('type.asm.reg_imm'(X6),X36),s('type.wordLang.prog'(X6),X37),s('type.wordLang.prog'(X6),X38))) | ? [X26,X27] : s('type.wordLang.prog'(X6),X7) = s('type.wordLang.prog'(X6),'const.wordLang.MustTerminate_2'(s('type.num.num',X26),s('type.wordLang.prog'(X6),X27))) | ? [X28,X29,X30,X31] : s('type.wordLang.prog'(X6),X7) = s('type.wordLang.prog'(X6),'const.wordLang.Call_4'(s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.sptree.spt'('type.one.one'),'type.pair.prod'('type.wordLang.prog'(X6),'type.pair.prod'('type.num.num','type.num.num'))))),X28),s('type.option.option'('type.num.num'),X29),s('type.list.list'('type.num.num'),X30),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.wordLang.prog'(X6),'type.pair.prod'('type.num.num','type.num.num')))),X31))) | s('type.wordLang.prog'(X6),'const.wordLang.Skip_0') = s('type.wordLang.prog'(X6),X7) | ? [X8,X9] : s('type.wordLang.prog'(X6),X7) = s('type.wordLang.prog'(X6),'const.wordLang.Move_2'(s('type.num.num',X8),s('type.list.list'('type.pair.prod'('type.num.num','type.num.num')),X9))) | ? [X10] : s('type.wordLang.prog'(X6),X7) = s('type.wordLang.prog'(X6),'const.wordLang.Inst_1'(s('type.asm.inst'(X6),X10))) | ? [X13,X14] : s('type.wordLang.prog'(X6),X7) = s('type.wordLang.prog'(X6),'const.wordLang.Get_2'(s('type.num.num',X13),s('type.wordLang.store_name',X14))) | ? [X39,X40] : s('type.wordLang.prog'(X6),X7) = s('type.wordLang.prog'(X6),'const.wordLang.Alloc_2'(s('type.num.num',X39),s('type.sptree.spt'('type.one.one'),X40))) | ? [X41] : s('type.wordLang.prog'(X6),X7) = s('type.wordLang.prog'(X6),'const.wordLang.Raise_1'(s('type.num.num',X41))) | ? [X42,X43] : s('type.wordLang.prog'(X6),X7) = s('type.wordLang.prog'(X6),'const.wordLang.Return_2'(s('type.num.num',X42),s('type.num.num',X43))) | s('type.wordLang.prog'(X6),'const.wordLang.Tick_0') = s('type.wordLang.prog'(X6),X7) | ? [X44,X45,X46] : s('type.wordLang.prog'(X6),X7) = s('type.wordLang.prog'(X6),'const.wordLang.LocValue_3'(s('type.num.num',X44),s('type.num.num',X45),s('type.num.num',X46))) | ? [X47,X48,X49,X50] : s('type.wordLang.prog'(X6),X7) = s('type.wordLang.prog'(X6),'const.wordLang.FFI_4'(s('type.num.num',X47),s('type.num.num',X48),s('type.num.num',X49),s('type.sptree.spt'('type.one.one'),X50)))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : ! [X7] : ((s('type.wordLang.prog'(X6),'const.wordLang.Skip_0') = s('type.wordLang.prog'(X6),X7) | ? [X8,X9] : s('type.wordLang.prog'(X6),X7) = s('type.wordLang.prog'(X6),'const.wordLang.Move_2'(s('type.num.num',X8),s('type.list.list'('type.pair.prod'('type.num.num','type.num.num')),X9))) | ? [X10] : s('type.wordLang.prog'(X6),X7) = s('type.wordLang.prog'(X6),'const.wordLang.Inst_1'(s('type.asm.inst'(X6),X10))) | ? [X11,X12] : s('type.wordLang.prog'(X6),X7) = s('type.wordLang.prog'(X6),'const.wordLang.Assign_2'(s('type.num.num',X11),s('type.wordLang.exp'(X6),X12))) | ? [X13,X14] : s('type.wordLang.prog'(X6),X7) = s('type.wordLang.prog'(X6),'const.wordLang.Get_2'(s('type.num.num',X13),s('type.wordLang.store_name',X14))) | ? [X15,X16] : s('type.wordLang.prog'(X6),X7) = s('type.wordLang.prog'(X6),'const.wordLang.Set_2'(s('type.wordLang.store_name',X15),s('type.wordLang.exp'(X6),'const.wordLang.Const_1'(s('type.fcp.cart'(bool,X6),X16))))) | ? [X15,X17] : s('type.wordLang.prog'(X6),X7) = s('type.wordLang.prog'(X6),'const.wordLang.Set_2'(s('type.wordLang.store_name',X15),s('type.wordLang.exp'(X6),'const.wordLang.Var_1'(s('type.num.num',X17))))) | ? [X15,X18] : s('type.wordLang.prog'(X6),X7) = s('type.wordLang.prog'(X6),'const.wordLang.Set_2'(s('type.wordLang.store_name',X15),s('type.wordLang.exp'(X6),'const.wordLang.Lookup_1'(s('type.wordLang.store_name',X18))))) | ? [X15,X19] : s('type.wordLang.prog'(X6),X7) = s('type.wordLang.prog'(X6),'const.wordLang.Set_2'(s('type.wordLang.store_name',X15),s('type.wordLang.exp'(X6),'const.wordLang.Load_1'(s('type.wordLang.exp'(X6),X19))))) | ? [X15,X20,X21] : s('type.wordLang.prog'(X6),X7) = s('type.wordLang.prog'(X6),'const.wordLang.Set_2'(s('type.wordLang.store_name',X15),s('type.wordLang.exp'(X6),'const.wordLang.Op_2'(s('type.asm.binop',X20),s('type.list.list'('type.wordLang.exp'(X6)),X21))))) | ? [X15,X22,X23,X24] : s('type.wordLang.prog'(X6),X7) = s('type.wordLang.prog'(X6),'const.wordLang.Set_2'(s('type.wordLang.store_name',X15),s('type.wordLang.exp'(X6),'const.wordLang.Shift_3'(s('type.asm.shift',X22),s('type.wordLang.exp'(X6),X23),s('type.wordLang.num_exp'(X6),X24))))) | ? [X12,X25] : s('type.wordLang.prog'(X6),X7) = s('type.wordLang.prog'(X6),'const.wordLang.Store_2'(s('type.wordLang.exp'(X6),X12),s('type.num.num',X25))) | ? [X26,X27] : s('type.wordLang.prog'(X6),X7) = s('type.wordLang.prog'(X6),'const.wordLang.MustTerminate_2'(s('type.num.num',X26),s('type.wordLang.prog'(X6),X27))) | ? [X28,X29,X30,X31] : s('type.wordLang.prog'(X6),X7) = s('type.wordLang.prog'(X6),'const.wordLang.Call_4'(s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.sptree.spt'('type.one.one'),'type.pair.prod'('type.wordLang.prog'(X6),'type.pair.prod'('type.num.num','type.num.num'))))),X28),s('type.option.option'('type.num.num'),X29),s('type.list.list'('type.num.num'),X30),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.wordLang.prog'(X6),'type.pair.prod'('type.num.num','type.num.num')))),X31))) | ? [X32,X33] : s('type.wordLang.prog'(X6),X7) = s('type.wordLang.prog'(X6),'const.wordLang.Seq_2'(s('type.wordLang.prog'(X6),X32),s('type.wordLang.prog'(X6),X33))) | ? [X34,X35,X36,X37,X38] : s('type.wordLang.prog'(X6),X7) = s('type.wordLang.prog'(X6),'const.wordLang.If_5'(s('type.asm.cmp',X34),s('type.num.num',X35),s('type.asm.reg_imm'(X6),X36),s('type.wordLang.prog'(X6),X37),s('type.wordLang.prog'(X6),X38))) | ? [X39,X40] : s('type.wordLang.prog'(X6),X7) = s('type.wordLang.prog'(X6),'const.wordLang.Alloc_2'(s('type.num.num',X39),s('type.sptree.spt'('type.one.one'),X40))) | ? [X41] : s('type.wordLang.prog'(X6),X7) = s('type.wordLang.prog'(X6),'const.wordLang.Raise_1'(s('type.num.num',X41))) | ? [X42,X43] : s('type.wordLang.prog'(X6),X7) = s('type.wordLang.prog'(X6),'const.wordLang.Return_2'(s('type.num.num',X42),s('type.num.num',X43))) | s('type.wordLang.prog'(X6),'const.wordLang.Tick_0') = s('type.wordLang.prog'(X6),X7) | ? [X44,X45,X46] : s('type.wordLang.prog'(X6),X7) = s('type.wordLang.prog'(X6),'const.wordLang.LocValue_3'(s('type.num.num',X44),s('type.num.num',X45),s('type.num.num',X46))) | ? [X47,X48,X49,X50] : s('type.wordLang.prog'(X6),X7) = s('type.wordLang.prog'(X6),'const.wordLang.FFI_4'(s('type.num.num',X47),s('type.num.num',X48),s('type.num.num',X49),s('type.sptree.spt'('type.one.one'),X50)))) => (? [X11,X12] : s('type.wordLang.prog'(X6),X7) = s('type.wordLang.prog'(X6),'const.wordLang.Assign_2'(s('type.num.num',X11),s('type.wordLang.exp'(X6),X12))) | ? [X12,X25] : s('type.wordLang.prog'(X6),X7) = s('type.wordLang.prog'(X6),'const.wordLang.Store_2'(s('type.wordLang.exp'(X6),X12),s('type.num.num',X25))) | ? [X15,X17] : s('type.wordLang.prog'(X6),X7) = s('type.wordLang.prog'(X6),'const.wordLang.Set_2'(s('type.wordLang.store_name',X15),s('type.wordLang.exp'(X6),'const.wordLang.Var_1'(s('type.num.num',X17))))) | ? [X15,X16] : s('type.wordLang.prog'(X6),X7) = s('type.wordLang.prog'(X6),'const.wordLang.Set_2'(s('type.wordLang.store_name',X15),s('type.wordLang.exp'(X6),'const.wordLang.Const_1'(s('type.fcp.cart'(bool,X6),X16))))) | ? [X15,X18] : s('type.wordLang.prog'(X6),X7) = s('type.wordLang.prog'(X6),'const.wordLang.Set_2'(s('type.wordLang.store_name',X15),s('type.wordLang.exp'(X6),'const.wordLang.Lookup_1'(s('type.wordLang.store_name',X18))))) | ? [X15,X19] : s('type.wordLang.prog'(X6),X7) = s('type.wordLang.prog'(X6),'const.wordLang.Set_2'(s('type.wordLang.store_name',X15),s('type.wordLang.exp'(X6),'const.wordLang.Load_1'(s('type.wordLang.exp'(X6),X19))))) | ? [X15,X20,X21] : s('type.wordLang.prog'(X6),X7) = s('type.wordLang.prog'(X6),'const.wordLang.Set_2'(s('type.wordLang.store_name',X15),s('type.wordLang.exp'(X6),'const.wordLang.Op_2'(s('type.asm.binop',X20),s('type.list.list'('type.wordLang.exp'(X6)),X21))))) | ? [X15,X22,X23,X24] : s('type.wordLang.prog'(X6),X7) = s('type.wordLang.prog'(X6),'const.wordLang.Set_2'(s('type.wordLang.store_name',X15),s('type.wordLang.exp'(X6),'const.wordLang.Shift_3'(s('type.asm.shift',X22),s('type.wordLang.exp'(X6),X23),s('type.wordLang.num_exp'(X6),X24))))) | ? [X32,X33] : s('type.wordLang.prog'(X6),X7) = s('type.wordLang.prog'(X6),'const.wordLang.Seq_2'(s('type.wordLang.prog'(X6),X32),s('type.wordLang.prog'(X6),X33))) | ? [X34,X35,X36,X37,X38] : s('type.wordLang.prog'(X6),X7) = s('type.wordLang.prog'(X6),'const.wordLang.If_5'(s('type.asm.cmp',X34),s('type.num.num',X35),s('type.asm.reg_imm'(X6),X36),s('type.wordLang.prog'(X6),X37),s('type.wordLang.prog'(X6),X38))) | ? [X26,X27] : s('type.wordLang.prog'(X6),X7) = s('type.wordLang.prog'(X6),'const.wordLang.MustTerminate_2'(s('type.num.num',X26),s('type.wordLang.prog'(X6),X27))) | ? [X28,X29,X30,X31] : s('type.wordLang.prog'(X6),X7) = s('type.wordLang.prog'(X6),'const.wordLang.Call_4'(s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.sptree.spt'('type.one.one'),'type.pair.prod'('type.wordLang.prog'(X6),'type.pair.prod'('type.num.num','type.num.num'))))),X28),s('type.option.option'('type.num.num'),X29),s('type.list.list'('type.num.num'),X30),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.wordLang.prog'(X6),'type.pair.prod'('type.num.num','type.num.num')))),X31))) | s('type.wordLang.prog'(X6),'const.wordLang.Skip_0') = s('type.wordLang.prog'(X6),X7) | ? [X8,X9] : s('type.wordLang.prog'(X6),X7) = s('type.wordLang.prog'(X6),'const.wordLang.Move_2'(s('type.num.num',X8),s('type.list.list'('type.pair.prod'('type.num.num','type.num.num')),X9))) | ? [X10] : s('type.wordLang.prog'(X6),X7) = s('type.wordLang.prog'(X6),'const.wordLang.Inst_1'(s('type.asm.inst'(X6),X10))) | ? [X13,X14] : s('type.wordLang.prog'(X6),X7) = s('type.wordLang.prog'(X6),'const.wordLang.Get_2'(s('type.num.num',X13),s('type.wordLang.store_name',X14))) | ? [X39,X40] : s('type.wordLang.prog'(X6),X7) = s('type.wordLang.prog'(X6),'const.wordLang.Alloc_2'(s('type.num.num',X39),s('type.sptree.spt'('type.one.one'),X40))) | ? [X41] : s('type.wordLang.prog'(X6),X7) = s('type.wordLang.prog'(X6),'const.wordLang.Raise_1'(s('type.num.num',X41))) | ? [X42,X43] : s('type.wordLang.prog'(X6),X7) = s('type.wordLang.prog'(X6),'const.wordLang.Return_2'(s('type.num.num',X42),s('type.num.num',X43))) | s('type.wordLang.prog'(X6),'const.wordLang.Tick_0') = s('type.wordLang.prog'(X6),X7) | ? [X44,X45,X46] : s('type.wordLang.prog'(X6),X7) = s('type.wordLang.prog'(X6),'const.wordLang.LocValue_3'(s('type.num.num',X44),s('type.num.num',X45),s('type.num.num',X46))) | ? [X47,X48,X49,X50] : s('type.wordLang.prog'(X6),X7) = s('type.wordLang.prog'(X6),'const.wordLang.FFI_4'(s('type.num.num',X47),s('type.num.num',X48),s('type.num.num',X49),s('type.sptree.spt'('type.one.one'),X50)))))),
  file('thm.wordProps.wordProps_2|49|6_prove_ltb','thm.wordProps.wordProps_2|49|6_prove_ltb')).
fof(f456,plain,(
  s('type.wordLang.prog'(sK12),'const.wordLang.Tick_0') != s('type.wordLang.prog'(sK12),sK13) | $spl39),
  inference(cnf_transformation,[],[f456_D])).
fof(f456_D,plain,(
  s('type.wordLang.prog'(sK12),'const.wordLang.Tick_0') != s('type.wordLang.prog'(sK12),sK13) <=> ~$spl39),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl39])])).
fof(f244,plain,(
  s('type.wordLang.prog'(sK12),'const.wordLang.Tick_0') != s('type.wordLang.prog'(sK12),sK13)),
  inference(cnf_transformation,[],[f139])).
fof(f2086,plain,(
  $false | $spl24),
  inference(subsumption_resolution,[],[f443,f235])).
fof(f235,plain,(
  ( ! [X24,X23] : (s('type.wordLang.prog'(sK12),sK13) != s('type.wordLang.prog'(sK12),'const.wordLang.MustTerminate_2'(s('type.num.num',X23),s('type.wordLang.prog'(sK12),X24)))) )),
  inference(cnf_transformation,[],[f139])).
fof(f2087,plain,(
  $false | $spl34),
  inference(subsumption_resolution,[],[f453,f242])).
fof(f242,plain,(
  ( ! [X11] : (s('type.wordLang.prog'(sK12),sK13) != s('type.wordLang.prog'(sK12),'const.wordLang.Raise_1'(s('type.num.num',X11)))) )),
  inference(cnf_transformation,[],[f139])).
fof(f2088,plain,(
  $false | $spl22),
  inference(subsumption_resolution,[],[f441,f226])).
fof(f226,plain,(
  ( ! [X47,X48] : (s('type.wordLang.prog'(sK12),sK13) != s('type.wordLang.prog'(sK12),'const.wordLang.Store_2'(s('type.wordLang.exp'(sK12),X47),s('type.num.num',X48)))) )),
  inference(cnf_transformation,[],[f139])).
fof(f4049,plain,(
  $false | $spl2),
  inference(subsumption_resolution,[],[f421,f238])).
fof(f238,plain,(
  ( ! [X17,X18] : (s('type.wordLang.prog'(sK12),sK13) != s('type.wordLang.prog'(sK12),'const.wordLang.Move_2'(s('type.num.num',X17),s('type.list.list'('type.pair.prod'('type.num.num','type.num.num')),X18)))) )),
  inference(cnf_transformation,[],[f139])).
fof(f4438,plain,(
  $false | $spl18),
  inference(subsumption_resolution,[],[f437,f231])).
fof(f231,plain,(
  ( ! [X37,X38,X36] : (s('type.wordLang.prog'(sK12),sK13) != s('type.wordLang.prog'(sK12),'const.wordLang.Set_2'(s('type.wordLang.store_name',X36),s('type.wordLang.exp'(sK12),'const.wordLang.Op_2'(s('type.asm.binop',X37),s('type.list.list'('type.wordLang.exp'(sK12)),X38)))))) )),
  inference(cnf_transformation,[],[f139])).
fof(f4439,plain,(
  $false | $spl36),
  inference(subsumption_resolution,[],[f455,f243])).
fof(f243,plain,(
  ( ! [X10,X9] : (s('type.wordLang.prog'(sK12),sK13) != s('type.wordLang.prog'(sK12),'const.wordLang.Return_2'(s('type.num.num',X9),s('type.num.num',X10)))) )),
  inference(cnf_transformation,[],[f139])).
fof(f4440,plain,(
  $false | $spl32),
  inference(subsumption_resolution,[],[f451,f241])).
fof(f241,plain,(
  ( ! [X12,X13] : (s('type.wordLang.prog'(sK12),sK13) != s('type.wordLang.prog'(sK12),'const.wordLang.Alloc_2'(s('type.num.num',X12),s('type.sptree.spt'('type.one.one'),X13)))) )),
  inference(cnf_transformation,[],[f139])).
fof(f4441,plain,(
  $false | $spl6),
  inference(subsumption_resolution,[],[f425,f225])).
fof(f225,plain,(
  ( ! [X50,X49] : (s('type.wordLang.prog'(sK12),sK13) != s('type.wordLang.prog'(sK12),'const.wordLang.Assign_2'(s('type.num.num',X49),s('type.wordLang.exp'(sK12),X50)))) )),
  inference(cnf_transformation,[],[f139])).
fof(f4442,plain,(
  $false | $spl8),
  inference(subsumption_resolution,[],[f427,f240])).
fof(f240,plain,(
  ( ! [X14,X15] : (s('type.wordLang.prog'(sK12),sK13) != s('type.wordLang.prog'(sK12),'const.wordLang.Get_2'(s('type.num.num',X14),s('type.wordLang.store_name',X15)))) )),
  inference(cnf_transformation,[],[f139])).
fof(f4443,plain,(
  $false | $spl40),
  inference(subsumption_resolution,[],[f459,f245])).
fof(f245,plain,(
  ( ! [X6,X8,X7] : (s('type.wordLang.prog'(sK12),sK13) != s('type.wordLang.prog'(sK12),'const.wordLang.LocValue_3'(s('type.num.num',X6),s('type.num.num',X7),s('type.num.num',X8)))) )),
  inference(cnf_transformation,[],[f139])).
fof(f4444,plain,(
  $false | $spl14),
  inference(subsumption_resolution,[],[f433,f229])).
fof(f229,plain,(
  ( ! [X41,X42] : (s('type.wordLang.prog'(sK12),sK13) != s('type.wordLang.prog'(sK12),'const.wordLang.Set_2'(s('type.wordLang.store_name',X41),s('type.wordLang.exp'(sK12),'const.wordLang.Lookup_1'(s('type.wordLang.store_name',X42)))))) )),
  inference(cnf_transformation,[],[f139])).
fof(f5176,plain,(
  $false | $spl26),
  inference(subsumption_resolution,[],[f445,f236])).
fof(f236,plain,(
  ( ! [X21,X19,X22,X20] : (s('type.wordLang.prog'(sK12),sK13) != s('type.wordLang.prog'(sK12),'const.wordLang.Call_4'(s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.sptree.spt'('type.one.one'),'type.pair.prod'('type.wordLang.prog'(sK12),'type.pair.prod'('type.num.num','type.num.num'))))),X19),s('type.option.option'('type.num.num'),X20),s('type.list.list'('type.num.num'),X21),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.wordLang.prog'(sK12),'type.pair.prod'('type.num.num','type.num.num')))),X22)))) )),
  inference(cnf_transformation,[],[f139])).
fof(f5177,plain,(
  $false | $spl16),
  inference(subsumption_resolution,[],[f435,f230])).
fof(f230,plain,(
  ( ! [X39,X40] : (s('type.wordLang.prog'(sK12),sK13) != s('type.wordLang.prog'(sK12),'const.wordLang.Set_2'(s('type.wordLang.store_name',X39),s('type.wordLang.exp'(sK12),'const.wordLang.Load_1'(s('type.wordLang.exp'(sK12),X40)))))) )),
  inference(cnf_transformation,[],[f139])).
fof(f5178,plain,(
  $false | $spl28),
  inference(subsumption_resolution,[],[f447,f233])).
fof(f233,plain,(
  ( ! [X30,X31] : (s('type.wordLang.prog'(sK12),sK13) != s('type.wordLang.prog'(sK12),'const.wordLang.Seq_2'(s('type.wordLang.prog'(sK12),X30),s('type.wordLang.prog'(sK12),X31)))) )),
  inference(cnf_transformation,[],[f139])).
fof(f5179,plain,(
  $false | $spl42),
  inference(subsumption_resolution,[],[f461,f246])).
fof(f246,plain,(
  ( ! [X4,X2,X5,X3] : (s('type.wordLang.prog'(sK12),sK13) != s('type.wordLang.prog'(sK12),'const.wordLang.FFI_4'(s('type.num.num',X2),s('type.num.num',X3),s('type.num.num',X4),s('type.sptree.spt'('type.one.one'),X5)))) )),
  inference(cnf_transformation,[],[f139])).
fof(f5180,plain,(
  $false | $spl10),
  inference(subsumption_resolution,[],[f429,f228])).
fof(f228,plain,(
  ( ! [X43,X44] : (s('type.wordLang.prog'(sK12),sK13) != s('type.wordLang.prog'(sK12),'const.wordLang.Set_2'(s('type.wordLang.store_name',X43),s('type.wordLang.exp'(sK12),'const.wordLang.Const_1'(s('type.fcp.cart'(bool,sK12),X44)))))) )),
  inference(cnf_transformation,[],[f139])).
fof(f5181,plain,(
  $false | $spl30),
  inference(subsumption_resolution,[],[f449,f234])).
fof(f234,plain,(
  ( ! [X28,X26,X29,X27,X25] : (s('type.wordLang.prog'(sK12),sK13) != s('type.wordLang.prog'(sK12),'const.wordLang.If_5'(s('type.asm.cmp',X25),s('type.num.num',X26),s('type.asm.reg_imm'(sK12),X27),s('type.wordLang.prog'(sK12),X28),s('type.wordLang.prog'(sK12),X29)))) )),
  inference(cnf_transformation,[],[f139])).
fof(f5182,plain,(
  $false | $spl12),
  inference(subsumption_resolution,[],[f431,f227])).
fof(f227,plain,(
  ( ! [X45,X46] : (s('type.wordLang.prog'(sK12),sK13) != s('type.wordLang.prog'(sK12),'const.wordLang.Set_2'(s('type.wordLang.store_name',X45),s('type.wordLang.exp'(sK12),'const.wordLang.Var_1'(s('type.num.num',X46)))))) )),
  inference(cnf_transformation,[],[f139])).
fof(f418,plain,(
  s('type.wordLang.prog'(sK12),'const.wordLang.Skip_0') != s('type.wordLang.prog'(sK12),sK13) | $spl1),
  inference(cnf_transformation,[],[f418_D])).
fof(f418_D,plain,(
  s('type.wordLang.prog'(sK12),'const.wordLang.Skip_0') != s('type.wordLang.prog'(sK12),sK13) <=> ~$spl1),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1])])).
fof(f237,plain,(
  s('type.wordLang.prog'(sK12),'const.wordLang.Skip_0') != s('type.wordLang.prog'(sK12),sK13)),
  inference(cnf_transformation,[],[f139])).
fof(f419,plain,(
  s('type.wordLang.prog'(sK12),'const.wordLang.Skip_0') = s('type.wordLang.prog'(sK12),sK13) | $spl0),
  inference(cnf_transformation,[],[f419_D])).
fof(f419_D,plain,(
  s('type.wordLang.prog'(sK12),'const.wordLang.Skip_0') = s('type.wordLang.prog'(sK12),sK13) <=> ~$spl0),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl0])])).
fof(f421,plain,(
  s('type.wordLang.prog'(sK12),sK13) = s('type.wordLang.prog'(sK12),'const.wordLang.Move_2'(s('type.num.num',sK14),s('type.list.list'('type.pair.prod'('type.num.num','type.num.num')),sK15))) | $spl2),
  inference(cnf_transformation,[],[f421_D])).
fof(f421_D,plain,(
  s('type.wordLang.prog'(sK12),sK13) = s('type.wordLang.prog'(sK12),'const.wordLang.Move_2'(s('type.num.num',sK14),s('type.list.list'('type.pair.prod'('type.num.num','type.num.num')),sK15))) <=> ~$spl2),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl2])])).
fof(f423,plain,(
  s('type.wordLang.prog'(sK12),sK13) = s('type.wordLang.prog'(sK12),'const.wordLang.Inst_1'(s('type.asm.inst'(sK12),sK16))) | $spl4),
  inference(cnf_transformation,[],[f423_D])).
fof(f423_D,plain,(
  s('type.wordLang.prog'(sK12),sK13) = s('type.wordLang.prog'(sK12),'const.wordLang.Inst_1'(s('type.asm.inst'(sK12),sK16))) <=> ~$spl4),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl4])])).
fof(f425,plain,(
  s('type.wordLang.prog'(sK12),sK13) = s('type.wordLang.prog'(sK12),'const.wordLang.Assign_2'(s('type.num.num',sK17),s('type.wordLang.exp'(sK12),sK18))) | $spl6),
  inference(cnf_transformation,[],[f425_D])).
fof(f425_D,plain,(
  s('type.wordLang.prog'(sK12),sK13) = s('type.wordLang.prog'(sK12),'const.wordLang.Assign_2'(s('type.num.num',sK17),s('type.wordLang.exp'(sK12),sK18))) <=> ~$spl6),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl6])])).
fof(f427,plain,(
  s('type.wordLang.prog'(sK12),sK13) = s('type.wordLang.prog'(sK12),'const.wordLang.Get_2'(s('type.num.num',sK19),s('type.wordLang.store_name',sK20))) | $spl8),
  inference(cnf_transformation,[],[f427_D])).
fof(f427_D,plain,(
  s('type.wordLang.prog'(sK12),sK13) = s('type.wordLang.prog'(sK12),'const.wordLang.Get_2'(s('type.num.num',sK19),s('type.wordLang.store_name',sK20))) <=> ~$spl8),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl8])])).
fof(f429,plain,(
  s('type.wordLang.prog'(sK12),sK13) = s('type.wordLang.prog'(sK12),'const.wordLang.Set_2'(s('type.wordLang.store_name',sK21),s('type.wordLang.exp'(sK12),'const.wordLang.Const_1'(s('type.fcp.cart'(bool,sK12),sK22))))) | $spl10),
  inference(cnf_transformation,[],[f429_D])).
fof(f429_D,plain,(
  s('type.wordLang.prog'(sK12),sK13) = s('type.wordLang.prog'(sK12),'const.wordLang.Set_2'(s('type.wordLang.store_name',sK21),s('type.wordLang.exp'(sK12),'const.wordLang.Const_1'(s('type.fcp.cart'(bool,sK12),sK22))))) <=> ~$spl10),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl10])])).
fof(f431,plain,(
  s('type.wordLang.prog'(sK12),sK13) = s('type.wordLang.prog'(sK12),'const.wordLang.Set_2'(s('type.wordLang.store_name',sK23),s('type.wordLang.exp'(sK12),'const.wordLang.Var_1'(s('type.num.num',sK24))))) | $spl12),
  inference(cnf_transformation,[],[f431_D])).
fof(f431_D,plain,(
  s('type.wordLang.prog'(sK12),sK13) = s('type.wordLang.prog'(sK12),'const.wordLang.Set_2'(s('type.wordLang.store_name',sK23),s('type.wordLang.exp'(sK12),'const.wordLang.Var_1'(s('type.num.num',sK24))))) <=> ~$spl12),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl12])])).
fof(f433,plain,(
  s('type.wordLang.prog'(sK12),sK13) = s('type.wordLang.prog'(sK12),'const.wordLang.Set_2'(s('type.wordLang.store_name',sK25),s('type.wordLang.exp'(sK12),'const.wordLang.Lookup_1'(s('type.wordLang.store_name',sK26))))) | $spl14),
  inference(cnf_transformation,[],[f433_D])).
fof(f433_D,plain,(
  s('type.wordLang.prog'(sK12),sK13) = s('type.wordLang.prog'(sK12),'const.wordLang.Set_2'(s('type.wordLang.store_name',sK25),s('type.wordLang.exp'(sK12),'const.wordLang.Lookup_1'(s('type.wordLang.store_name',sK26))))) <=> ~$spl14),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl14])])).
fof(f435,plain,(
  s('type.wordLang.prog'(sK12),sK13) = s('type.wordLang.prog'(sK12),'const.wordLang.Set_2'(s('type.wordLang.store_name',sK27),s('type.wordLang.exp'(sK12),'const.wordLang.Load_1'(s('type.wordLang.exp'(sK12),sK28))))) | $spl16),
  inference(cnf_transformation,[],[f435_D])).
fof(f435_D,plain,(
  s('type.wordLang.prog'(sK12),sK13) = s('type.wordLang.prog'(sK12),'const.wordLang.Set_2'(s('type.wordLang.store_name',sK27),s('type.wordLang.exp'(sK12),'const.wordLang.Load_1'(s('type.wordLang.exp'(sK12),sK28))))) <=> ~$spl16),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl16])])).
fof(f437,plain,(
  s('type.wordLang.prog'(sK12),sK13) = s('type.wordLang.prog'(sK12),'const.wordLang.Set_2'(s('type.wordLang.store_name',sK29),s('type.wordLang.exp'(sK12),'const.wordLang.Op_2'(s('type.asm.binop',sK30),s('type.list.list'('type.wordLang.exp'(sK12)),sK31))))) | $spl18),
  inference(cnf_transformation,[],[f437_D])).
fof(f437_D,plain,(
  s('type.wordLang.prog'(sK12),sK13) = s('type.wordLang.prog'(sK12),'const.wordLang.Set_2'(s('type.wordLang.store_name',sK29),s('type.wordLang.exp'(sK12),'const.wordLang.Op_2'(s('type.asm.binop',sK30),s('type.list.list'('type.wordLang.exp'(sK12)),sK31))))) <=> ~$spl18),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl18])])).
fof(f439,plain,(
  s('type.wordLang.prog'(sK12),sK13) = s('type.wordLang.prog'(sK12),'const.wordLang.Set_2'(s('type.wordLang.store_name',sK32),s('type.wordLang.exp'(sK12),'const.wordLang.Shift_3'(s('type.asm.shift',sK33),s('type.wordLang.exp'(sK12),sK34),s('type.wordLang.num_exp'(sK12),sK35))))) | $spl20),
  inference(cnf_transformation,[],[f439_D])).
fof(f439_D,plain,(
  s('type.wordLang.prog'(sK12),sK13) = s('type.wordLang.prog'(sK12),'const.wordLang.Set_2'(s('type.wordLang.store_name',sK32),s('type.wordLang.exp'(sK12),'const.wordLang.Shift_3'(s('type.asm.shift',sK33),s('type.wordLang.exp'(sK12),sK34),s('type.wordLang.num_exp'(sK12),sK35))))) <=> ~$spl20),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl20])])).
fof(f441,plain,(
  s('type.wordLang.prog'(sK12),sK13) = s('type.wordLang.prog'(sK12),'const.wordLang.Store_2'(s('type.wordLang.exp'(sK12),sK36),s('type.num.num',sK37))) | $spl22),
  inference(cnf_transformation,[],[f441_D])).
fof(f441_D,plain,(
  s('type.wordLang.prog'(sK12),sK13) = s('type.wordLang.prog'(sK12),'const.wordLang.Store_2'(s('type.wordLang.exp'(sK12),sK36),s('type.num.num',sK37))) <=> ~$spl22),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl22])])).
fof(f443,plain,(
  s('type.wordLang.prog'(sK12),sK13) = s('type.wordLang.prog'(sK12),'const.wordLang.MustTerminate_2'(s('type.num.num',sK38),s('type.wordLang.prog'(sK12),sK39))) | $spl24),
  inference(cnf_transformation,[],[f443_D])).
fof(f443_D,plain,(
  s('type.wordLang.prog'(sK12),sK13) = s('type.wordLang.prog'(sK12),'const.wordLang.MustTerminate_2'(s('type.num.num',sK38),s('type.wordLang.prog'(sK12),sK39))) <=> ~$spl24),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl24])])).
fof(f445,plain,(
  s('type.wordLang.prog'(sK12),sK13) = s('type.wordLang.prog'(sK12),'const.wordLang.Call_4'(s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.sptree.spt'('type.one.one'),'type.pair.prod'('type.wordLang.prog'(sK12),'type.pair.prod'('type.num.num','type.num.num'))))),sK40),s('type.option.option'('type.num.num'),sK41),s('type.list.list'('type.num.num'),sK42),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.wordLang.prog'(sK12),'type.pair.prod'('type.num.num','type.num.num')))),sK43))) | $spl26),
  inference(cnf_transformation,[],[f445_D])).
fof(f445_D,plain,(
  s('type.wordLang.prog'(sK12),sK13) = s('type.wordLang.prog'(sK12),'const.wordLang.Call_4'(s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.sptree.spt'('type.one.one'),'type.pair.prod'('type.wordLang.prog'(sK12),'type.pair.prod'('type.num.num','type.num.num'))))),sK40),s('type.option.option'('type.num.num'),sK41),s('type.list.list'('type.num.num'),sK42),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.wordLang.prog'(sK12),'type.pair.prod'('type.num.num','type.num.num')))),sK43))) <=> ~$spl26),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl26])])).
fof(f447,plain,(
  s('type.wordLang.prog'(sK12),sK13) = s('type.wordLang.prog'(sK12),'const.wordLang.Seq_2'(s('type.wordLang.prog'(sK12),sK44),s('type.wordLang.prog'(sK12),sK45))) | $spl28),
  inference(cnf_transformation,[],[f447_D])).
fof(f447_D,plain,(
  s('type.wordLang.prog'(sK12),sK13) = s('type.wordLang.prog'(sK12),'const.wordLang.Seq_2'(s('type.wordLang.prog'(sK12),sK44),s('type.wordLang.prog'(sK12),sK45))) <=> ~$spl28),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl28])])).
fof(f449,plain,(
  s('type.wordLang.prog'(sK12),sK13) = s('type.wordLang.prog'(sK12),'const.wordLang.If_5'(s('type.asm.cmp',sK46),s('type.num.num',sK47),s('type.asm.reg_imm'(sK12),sK48),s('type.wordLang.prog'(sK12),sK49),s('type.wordLang.prog'(sK12),sK50))) | $spl30),
  inference(cnf_transformation,[],[f449_D])).
fof(f449_D,plain,(
  s('type.wordLang.prog'(sK12),sK13) = s('type.wordLang.prog'(sK12),'const.wordLang.If_5'(s('type.asm.cmp',sK46),s('type.num.num',sK47),s('type.asm.reg_imm'(sK12),sK48),s('type.wordLang.prog'(sK12),sK49),s('type.wordLang.prog'(sK12),sK50))) <=> ~$spl30),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl30])])).
fof(f451,plain,(
  s('type.wordLang.prog'(sK12),sK13) = s('type.wordLang.prog'(sK12),'const.wordLang.Alloc_2'(s('type.num.num',sK51),s('type.sptree.spt'('type.one.one'),sK52))) | $spl32),
  inference(cnf_transformation,[],[f451_D])).
fof(f451_D,plain,(
  s('type.wordLang.prog'(sK12),sK13) = s('type.wordLang.prog'(sK12),'const.wordLang.Alloc_2'(s('type.num.num',sK51),s('type.sptree.spt'('type.one.one'),sK52))) <=> ~$spl32),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl32])])).
fof(f453,plain,(
  s('type.wordLang.prog'(sK12),sK13) = s('type.wordLang.prog'(sK12),'const.wordLang.Raise_1'(s('type.num.num',sK53))) | $spl34),
  inference(cnf_transformation,[],[f453_D])).
fof(f453_D,plain,(
  s('type.wordLang.prog'(sK12),sK13) = s('type.wordLang.prog'(sK12),'const.wordLang.Raise_1'(s('type.num.num',sK53))) <=> ~$spl34),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl34])])).
fof(f455,plain,(
  s('type.wordLang.prog'(sK12),sK13) = s('type.wordLang.prog'(sK12),'const.wordLang.Return_2'(s('type.num.num',sK54),s('type.num.num',sK55))) | $spl36),
  inference(cnf_transformation,[],[f455_D])).
fof(f455_D,plain,(
  s('type.wordLang.prog'(sK12),sK13) = s('type.wordLang.prog'(sK12),'const.wordLang.Return_2'(s('type.num.num',sK54),s('type.num.num',sK55))) <=> ~$spl36),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl36])])).
fof(f457,plain,(
  s('type.wordLang.prog'(sK12),'const.wordLang.Tick_0') = s('type.wordLang.prog'(sK12),sK13) | $spl38),
  inference(cnf_transformation,[],[f457_D])).
fof(f457_D,plain,(
  s('type.wordLang.prog'(sK12),'const.wordLang.Tick_0') = s('type.wordLang.prog'(sK12),sK13) <=> ~$spl38),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl38])])).
fof(f459,plain,(
  s('type.wordLang.prog'(sK12),sK13) = s('type.wordLang.prog'(sK12),'const.wordLang.LocValue_3'(s('type.num.num',sK56),s('type.num.num',sK57),s('type.num.num',sK58))) | $spl40),
  inference(cnf_transformation,[],[f459_D])).
fof(f459_D,plain,(
  s('type.wordLang.prog'(sK12),sK13) = s('type.wordLang.prog'(sK12),'const.wordLang.LocValue_3'(s('type.num.num',sK56),s('type.num.num',sK57),s('type.num.num',sK58))) <=> ~$spl40),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl40])])).
fof(f461,plain,(
  s('type.wordLang.prog'(sK12),sK13) = s('type.wordLang.prog'(sK12),'const.wordLang.FFI_4'(s('type.num.num',sK59),s('type.num.num',sK60),s('type.num.num',sK61),s('type.sptree.spt'('type.one.one'),sK62))) | $spl42),
  inference(cnf_transformation,[],[f461_D])).
fof(f461_D,plain,(
  s('type.wordLang.prog'(sK12),sK13) = s('type.wordLang.prog'(sK12),'const.wordLang.FFI_4'(s('type.num.num',sK59),s('type.num.num',sK60),s('type.num.num',sK61),s('type.sptree.spt'('type.one.one'),sK62))) <=> ~$spl42),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl42])])).
fof(f224,plain,(
  s('type.wordLang.prog'(sK12),sK13) = s('type.wordLang.prog'(sK12),'const.wordLang.FFI_4'(s('type.num.num',sK59),s('type.num.num',sK60),s('type.num.num',sK61),s('type.sptree.spt'('type.one.one'),sK62))) | s('type.wordLang.prog'(sK12),sK13) = s('type.wordLang.prog'(sK12),'const.wordLang.LocValue_3'(s('type.num.num',sK56),s('type.num.num',sK57),s('type.num.num',sK58))) | s('type.wordLang.prog'(sK12),'const.wordLang.Tick_0') = s('type.wordLang.prog'(sK12),sK13) | s('type.wordLang.prog'(sK12),sK13) = s('type.wordLang.prog'(sK12),'const.wordLang.Return_2'(s('type.num.num',sK54),s('type.num.num',sK55))) | s('type.wordLang.prog'(sK12),sK13) = s('type.wordLang.prog'(sK12),'const.wordLang.Raise_1'(s('type.num.num',sK53))) | s('type.wordLang.prog'(sK12),sK13) = s('type.wordLang.prog'(sK12),'const.wordLang.Alloc_2'(s('type.num.num',sK51),s('type.sptree.spt'('type.one.one'),sK52))) | s('type.wordLang.prog'(sK12),sK13) = s('type.wordLang.prog'(sK12),'const.wordLang.If_5'(s('type.asm.cmp',sK46),s('type.num.num',sK47),s('type.asm.reg_imm'(sK12),sK48),s('type.wordLang.prog'(sK12),sK49),s('type.wordLang.prog'(sK12),sK50))) | s('type.wordLang.prog'(sK12),sK13) = s('type.wordLang.prog'(sK12),'const.wordLang.Seq_2'(s('type.wordLang.prog'(sK12),sK44),s('type.wordLang.prog'(sK12),sK45))) | s('type.wordLang.prog'(sK12),sK13) = s('type.wordLang.prog'(sK12),'const.wordLang.Call_4'(s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.sptree.spt'('type.one.one'),'type.pair.prod'('type.wordLang.prog'(sK12),'type.pair.prod'('type.num.num','type.num.num'))))),sK40),s('type.option.option'('type.num.num'),sK41),s('type.list.list'('type.num.num'),sK42),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.wordLang.prog'(sK12),'type.pair.prod'('type.num.num','type.num.num')))),sK43))) | s('type.wordLang.prog'(sK12),sK13) = s('type.wordLang.prog'(sK12),'const.wordLang.MustTerminate_2'(s('type.num.num',sK38),s('type.wordLang.prog'(sK12),sK39))) | s('type.wordLang.prog'(sK12),sK13) = s('type.wordLang.prog'(sK12),'const.wordLang.Store_2'(s('type.wordLang.exp'(sK12),sK36),s('type.num.num',sK37))) | s('type.wordLang.prog'(sK12),sK13) = s('type.wordLang.prog'(sK12),'const.wordLang.Set_2'(s('type.wordLang.store_name',sK32),s('type.wordLang.exp'(sK12),'const.wordLang.Shift_3'(s('type.asm.shift',sK33),s('type.wordLang.exp'(sK12),sK34),s('type.wordLang.num_exp'(sK12),sK35))))) | s('type.wordLang.prog'(sK12),sK13) = s('type.wordLang.prog'(sK12),'const.wordLang.Set_2'(s('type.wordLang.store_name',sK29),s('type.wordLang.exp'(sK12),'const.wordLang.Op_2'(s('type.asm.binop',sK30),s('type.list.list'('type.wordLang.exp'(sK12)),sK31))))) | s('type.wordLang.prog'(sK12),sK13) = s('type.wordLang.prog'(sK12),'const.wordLang.Set_2'(s('type.wordLang.store_name',sK27),s('type.wordLang.exp'(sK12),'const.wordLang.Load_1'(s('type.wordLang.exp'(sK12),sK28))))) | s('type.wordLang.prog'(sK12),sK13) = s('type.wordLang.prog'(sK12),'const.wordLang.Set_2'(s('type.wordLang.store_name',sK25),s('type.wordLang.exp'(sK12),'const.wordLang.Lookup_1'(s('type.wordLang.store_name',sK26))))) | s('type.wordLang.prog'(sK12),sK13) = s('type.wordLang.prog'(sK12),'const.wordLang.Set_2'(s('type.wordLang.store_name',sK23),s('type.wordLang.exp'(sK12),'const.wordLang.Var_1'(s('type.num.num',sK24))))) | s('type.wordLang.prog'(sK12),sK13) = s('type.wordLang.prog'(sK12),'const.wordLang.Set_2'(s('type.wordLang.store_name',sK21),s('type.wordLang.exp'(sK12),'const.wordLang.Const_1'(s('type.fcp.cart'(bool,sK12),sK22))))) | s('type.wordLang.prog'(sK12),sK13) = s('type.wordLang.prog'(sK12),'const.wordLang.Get_2'(s('type.num.num',sK19),s('type.wordLang.store_name',sK20))) | s('type.wordLang.prog'(sK12),sK13) = s('type.wordLang.prog'(sK12),'const.wordLang.Assign_2'(s('type.num.num',sK17),s('type.wordLang.exp'(sK12),sK18))) | s('type.wordLang.prog'(sK12),sK13) = s('type.wordLang.prog'(sK12),'const.wordLang.Inst_1'(s('type.asm.inst'(sK12),sK16))) | s('type.wordLang.prog'(sK12),sK13) = s('type.wordLang.prog'(sK12),'const.wordLang.Move_2'(s('type.num.num',sK14),s('type.list.list'('type.pair.prod'('type.num.num','type.num.num')),sK15))) | s('type.wordLang.prog'(sK12),'const.wordLang.Skip_0') = s('type.wordLang.prog'(sK12),sK13)),
  inference(cnf_transformation,[],[f139])).
fof(f5184,plain,(
  $false | $spl4),
  inference(subsumption_resolution,[],[f423,f239])).
fof(f239,plain,(
  ( ! [X16] : (s('type.wordLang.prog'(sK12),sK13) != s('type.wordLang.prog'(sK12),'const.wordLang.Inst_1'(s('type.asm.inst'(sK12),X16)))) )),
  inference(cnf_transformation,[],[f139])).
% SZS output end Proof for thm.wordProps
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 427
% Passive clauses: 1600
% Generated clauses: 4952
% Final active clauses: 427
% Final passive clauses: 958
% Input formulas: 37
% Initial clauses: 190
% 
% Duplicate literals: 158
% Trivial inequalities: 29
% Fw subsumption resolutions: 356
% 
% Simple tautologies: 146
% Equational tautologies: 42
% Forward subsumptions: 2559
% 
% Binary resolution: 3039
% Factoring: 844
% Forward superposition: 170
% Backward superposition: 59
% Self superposition: 2
% Equality factoring: 2
% Equality resolution: 16
% 
% Split clauses: 119
% Split components: 259
% SAT solver clauses: 287
% SAT solver unit clauses: 28
% SAT solver binary clauses: 45
% SAT solver learnt clauses: 1
% 
% Sat splits: 119
% Sat splitting refutations: 20
% 
% TWLsolver clauses: 286
% TWLsolver calls for satisfiability: 234
% 
% Memory used [KB]: 2814
% Time elapsed: 0.220 s
% ------------------------------
% ------------------------------
% Success in time 0.24 s
