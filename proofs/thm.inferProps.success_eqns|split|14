Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 149 next slice time: 5
dis+11_7_3 on thm.inferProps
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.inferProps
% SZS output start Proof for thm.inferProps
fof(f479,plain,(
  $false),
  inference(trivial_inequality_removal,[],[f478])).
fof(f478,plain,(
  s('type.pair.prod'('type.infer.exc'(sK1,sK0),sK1),'const.infer.read_1'(s(sK1,sK2))) != s('type.pair.prod'('type.infer.exc'(sK1,sK0),sK1),'const.infer.read_1'(s(sK1,sK2)))),
  inference(superposition,[],[f157,f172])).
fof(f172,plain,(
  ( ! [X2,X0,X1] : (s('type.pair.prod'('type.infer.exc'(X1,X0),X1),'const.infer.read_1'(s(X1,X2))) = s('type.pair.prod'('type.infer.exc'(X1,X0),X1),'const.pair.,_2'(s('type.infer.exc'(X1,X0),'const.infer.Success_1'(s(X1,X2))),s(X1,X2)))) )),
  inference(cnf_transformation,[],[f64])).
fof(f64,plain,(
  ! [X0,X1,X2] : s('type.pair.prod'('type.infer.exc'(X1,X0),X1),'const.infer.read_1'(s(X1,X2))) = s('type.pair.prod'('type.infer.exc'(X1,X0),X1),'const.pair.,_2'(s('type.infer.exc'(X1,X0),'const.infer.Success_1'(s(X1,X2))),s(X1,X2)))),
  inference(flattening,[],[f63])).
fof(f63,plain,(
  ! [X0,X1] : ! [X2] : s('type.pair.prod'('type.infer.exc'(X1,X0),X1),'const.infer.read_1'(s(X1,X2))) = s('type.pair.prod'('type.infer.exc'(X1,X0),X1),'const.pair.,_2'(s('type.infer.exc'(X1,X0),'const.infer.Success_1'(s(X1,X2))),s(X1,X2)))),
  inference(rectify,[],[f7])).
fof(f7,axiom,(
  ! [X6,X7] : ! [X5] : s('type.pair.prod'('type.infer.exc'(X7,X6),X7),'const.infer.read_1'(s(X7,X5))) = s('type.pair.prod'('type.infer.exc'(X7,X6),X7),'const.pair.,_2'(s('type.infer.exc'(X7,X6),'const.infer.Success_1'(s(X7,X5))),s(X7,X5)))),
  file('thm.inferProps.success_eqns|split|14','thm.infer.read_def')).
fof(f157,plain,(
  s('type.pair.prod'('type.infer.exc'(sK1,sK0),sK1),'const.infer.read_1'(s(sK1,sK2))) != s('type.pair.prod'('type.infer.exc'(sK1,sK0),sK1),'const.pair.,_2'(s('type.infer.exc'(sK1,sK0),'const.infer.Success_1'(s(sK1,sK2))),s(sK1,sK2)))),
  inference(cnf_transformation,[],[f123])).
fof(f123,plain,(
  s('type.pair.prod'('type.infer.exc'(sK1,sK0),sK1),'const.infer.read_1'(s(sK1,sK2))) != s('type.pair.prod'('type.infer.exc'(sK1,sK0),sK1),'const.pair.,_2'(s('type.infer.exc'(sK1,sK0),'const.infer.Success_1'(s(sK1,sK2))),s(sK1,sK2)))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1,sK2])],[f121])).
fof(f121,plain,(
  ? [X0,X1,X2] : s('type.pair.prod'('type.infer.exc'(X1,X0),X1),'const.infer.read_1'(s(X1,X2))) != s('type.pair.prod'('type.infer.exc'(X1,X0),X1),'const.pair.,_2'(s('type.infer.exc'(X1,X0),'const.infer.Success_1'(s(X1,X2))),s(X1,X2)))),
  inference(ennf_transformation,[],[f47])).
fof(f47,plain,(
  ~! [X0,X1,X2] : s('type.pair.prod'('type.infer.exc'(X1,X0),X1),'const.infer.read_1'(s(X1,X2))) = s('type.pair.prod'('type.infer.exc'(X1,X0),X1),'const.pair.,_2'(s('type.infer.exc'(X1,X0),'const.infer.Success_1'(s(X1,X2))),s(X1,X2)))),
  inference(flattening,[],[f46])).
fof(f46,plain,(
  ~! [X0,X1] : ! [X2] : s('type.pair.prod'('type.infer.exc'(X1,X0),X1),'const.infer.read_1'(s(X1,X2))) = s('type.pair.prod'('type.infer.exc'(X1,X0),X1),'const.pair.,_2'(s('type.infer.exc'(X1,X0),'const.infer.Success_1'(s(X1,X2))),s(X1,X2)))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6,X7] : ! [X5] : s('type.pair.prod'('type.infer.exc'(X7,X6),X7),'const.infer.read_1'(s(X7,X5))) = s('type.pair.prod'('type.infer.exc'(X7,X6),X7),'const.pair.,_2'(s('type.infer.exc'(X7,X6),'const.infer.Success_1'(s(X7,X5))),s(X7,X5)))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6,X7] : ! [X5] : s('type.pair.prod'('type.infer.exc'(X7,X6),X7),'const.infer.read_1'(s(X7,X5))) = s('type.pair.prod'('type.infer.exc'(X7,X6),X7),'const.pair.,_2'(s('type.infer.exc'(X7,X6),'const.infer.Success_1'(s(X7,X5))),s(X7,X5)))),
  file('thm.inferProps.success_eqns|split|14','thm.inferProps.success_eqns|split|14')).
% SZS output end Proof for thm.inferProps
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 17
% Passive clauses: 103
% Generated clauses: 291
% Final active clauses: 15
% Final passive clauses: 80
% Input formulas: 44
% Initial clauses: 78
% 
% Duplicate literals: 41
% Trivial inequalities: 3
% Fw demodulations: 4
% 
% Simple tautologies: 16
% Equational tautologies: 14
% Forward subsumptions: 107
% 
% Binary resolution: 4
% Forward superposition: 62
% Backward superposition: 52
% Self superposition: 34
% Equality factoring: 26
% 
% Split clauses: 3
% Split components: 6
% SAT solver clauses: 5
% SAT solver unit clauses: 1
% SAT solver binary clauses: 4
% 
% Sat splits: 3
% Sat splitting refutations: 1
% 
% TWLsolver clauses: 5
% TWLsolver calls for satisfiability: 4
% 
% Memory used [KB]: 895
% Time elapsed: 0.017 s
% ------------------------------
% ------------------------------
% Success in time 0.031 s
