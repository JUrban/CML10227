Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 149 next slice time: 5
dis+11_7_3 on thm.decSem
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.decSem
% SZS output start Proof for thm.decSem
fof(f12189,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f12188,f3839,f35,f53,f36,f55,f51,f5142,f37,f56,f54,f52])).
fof(f52,plain,(
  s('type.decSem.environment','const.decSem.environment_v_fupd_2'(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),sK0))),s('type.decSem.environment','const.decSem.environment_exh_fupd_2'(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),'type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),sK1))),s('type.decSem.environment','const.bool.ARB_0'))))) != s('type.decSem.environment','const.decSem.environment_v_fupd_2'(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),sK2))),s('type.decSem.environment','const.decSem.environment_exh_fupd_2'(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),'type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),sK3))),s('type.decSem.environment','const.bool.ARB_0'))))) | $spl1),
  inference(cnf_transformation,[],[f52_D])).
fof(f52_D,plain,(
  s('type.decSem.environment','const.decSem.environment_v_fupd_2'(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),sK0))),s('type.decSem.environment','const.decSem.environment_exh_fupd_2'(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),'type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),sK1))),s('type.decSem.environment','const.bool.ARB_0'))))) != s('type.decSem.environment','const.decSem.environment_v_fupd_2'(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),sK2))),s('type.decSem.environment','const.decSem.environment_exh_fupd_2'(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),'type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),sK3))),s('type.decSem.environment','const.bool.ARB_0'))))) <=> ~$spl1),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1])])).
fof(f54,plain,(
  s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),sK0) != s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),sK2) | $spl3),
  inference(cnf_transformation,[],[f54_D])).
fof(f54_D,plain,(
  s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),sK0) != s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),sK2) <=> ~$spl3),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl3])])).
fof(f56,plain,(
  s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),sK1) != s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),sK3) | $spl5),
  inference(cnf_transformation,[],[f56_D])).
fof(f56_D,plain,(
  s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),sK1) != s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),sK3) <=> ~$spl5),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl5])])).
fof(f37,plain,(
  s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),sK1) != s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),sK3) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),sK0) != s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),sK2) | s('type.decSem.environment','const.decSem.environment_v_fupd_2'(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),sK0))),s('type.decSem.environment','const.decSem.environment_exh_fupd_2'(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),'type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),sK1))),s('type.decSem.environment','const.bool.ARB_0'))))) != s('type.decSem.environment','const.decSem.environment_v_fupd_2'(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),sK2))),s('type.decSem.environment','const.decSem.environment_exh_fupd_2'(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),'type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),sK3))),s('type.decSem.environment','const.bool.ARB_0')))))),
  inference(cnf_transformation,[],[f31])).
fof(f31,plain,(
  (s('type.decSem.environment','const.decSem.environment_v_fupd_2'(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),sK0))),s('type.decSem.environment','const.decSem.environment_exh_fupd_2'(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),'type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),sK1))),s('type.decSem.environment','const.bool.ARB_0'))))) = s('type.decSem.environment','const.decSem.environment_v_fupd_2'(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),sK2))),s('type.decSem.environment','const.decSem.environment_exh_fupd_2'(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),'type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),sK3))),s('type.decSem.environment','const.bool.ARB_0'))))) | (s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),sK0) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),sK2) & s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),sK1) = s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),sK3))) & (s('type.decSem.environment','const.decSem.environment_v_fupd_2'(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),sK0))),s('type.decSem.environment','const.decSem.environment_exh_fupd_2'(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),'type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),sK1))),s('type.decSem.environment','const.bool.ARB_0'))))) != s('type.decSem.environment','const.decSem.environment_v_fupd_2'(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),sK2))),s('type.decSem.environment','const.decSem.environment_exh_fupd_2'(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),'type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),sK3))),s('type.decSem.environment','const.bool.ARB_0'))))) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),sK0) != s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),sK2) | s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),sK1) != s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),sK3))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1,sK2,sK3])],[f30])).
fof(f30,plain,(
  ? [X0,X1,X2,X3] : ((s('type.decSem.environment','const.decSem.environment_v_fupd_2'(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X0))),s('type.decSem.environment','const.decSem.environment_exh_fupd_2'(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),'type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X1))),s('type.decSem.environment','const.bool.ARB_0'))))) = s('type.decSem.environment','const.decSem.environment_v_fupd_2'(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X2))),s('type.decSem.environment','const.decSem.environment_exh_fupd_2'(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),'type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X3))),s('type.decSem.environment','const.bool.ARB_0'))))) | (s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X0) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X2) & s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X1) = s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X3))) & (s('type.decSem.environment','const.decSem.environment_v_fupd_2'(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X0))),s('type.decSem.environment','const.decSem.environment_exh_fupd_2'(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),'type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X1))),s('type.decSem.environment','const.bool.ARB_0'))))) != s('type.decSem.environment','const.decSem.environment_v_fupd_2'(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X2))),s('type.decSem.environment','const.decSem.environment_exh_fupd_2'(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),'type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X3))),s('type.decSem.environment','const.bool.ARB_0'))))) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X0) != s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X2) | s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X1) != s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X3)))),
  inference(flattening,[],[f29])).
fof(f29,plain,(
  ? [X0,X1,X2,X3] : ((s('type.decSem.environment','const.decSem.environment_v_fupd_2'(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X0))),s('type.decSem.environment','const.decSem.environment_exh_fupd_2'(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),'type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X1))),s('type.decSem.environment','const.bool.ARB_0'))))) = s('type.decSem.environment','const.decSem.environment_v_fupd_2'(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X2))),s('type.decSem.environment','const.decSem.environment_exh_fupd_2'(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),'type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X3))),s('type.decSem.environment','const.bool.ARB_0'))))) | (s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X0) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X2) & s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X1) = s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X3))) & (s('type.decSem.environment','const.decSem.environment_v_fupd_2'(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X0))),s('type.decSem.environment','const.decSem.environment_exh_fupd_2'(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),'type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X1))),s('type.decSem.environment','const.bool.ARB_0'))))) != s('type.decSem.environment','const.decSem.environment_v_fupd_2'(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X2))),s('type.decSem.environment','const.decSem.environment_exh_fupd_2'(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),'type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X3))),s('type.decSem.environment','const.bool.ARB_0'))))) | (s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X0) != s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X2) | s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X1) != s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X3))))),
  inference(nnf_transformation,[],[f27])).
fof(f27,plain,(
  ? [X0,X1,X2,X3] : (s('type.decSem.environment','const.decSem.environment_v_fupd_2'(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X0))),s('type.decSem.environment','const.decSem.environment_exh_fupd_2'(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),'type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X1))),s('type.decSem.environment','const.bool.ARB_0'))))) = s('type.decSem.environment','const.decSem.environment_v_fupd_2'(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X2))),s('type.decSem.environment','const.decSem.environment_exh_fupd_2'(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),'type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X3))),s('type.decSem.environment','const.bool.ARB_0'))))) <~> (s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X0) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X2) & s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X1) = s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X3)))),
  inference(ennf_transformation,[],[f14])).
fof(f14,plain,(
  ~! [X0,X1,X2,X3] : (s('type.decSem.environment','const.decSem.environment_v_fupd_2'(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X0))),s('type.decSem.environment','const.decSem.environment_exh_fupd_2'(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),'type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X1))),s('type.decSem.environment','const.bool.ARB_0'))))) = s('type.decSem.environment','const.decSem.environment_v_fupd_2'(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X2))),s('type.decSem.environment','const.decSem.environment_exh_fupd_2'(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),'type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X3))),s('type.decSem.environment','const.bool.ARB_0'))))) <=> (s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X0) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X2) & s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X1) = s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X3)))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6,X7,X8,X9] : (s('type.decSem.environment','const.decSem.environment_v_fupd_2'(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X6))),s('type.decSem.environment','const.decSem.environment_exh_fupd_2'(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),'type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X7))),s('type.decSem.environment','const.bool.ARB_0'))))) = s('type.decSem.environment','const.decSem.environment_v_fupd_2'(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X8))),s('type.decSem.environment','const.decSem.environment_exh_fupd_2'(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),'type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X9))),s('type.decSem.environment','const.bool.ARB_0'))))) <=> (s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X6) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X8) & s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X7) = s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X9)))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6,X7,X8,X9] : (s('type.decSem.environment','const.decSem.environment_v_fupd_2'(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X6))),s('type.decSem.environment','const.decSem.environment_exh_fupd_2'(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),'type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X7))),s('type.decSem.environment','const.bool.ARB_0'))))) = s('type.decSem.environment','const.decSem.environment_v_fupd_2'(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X8))),s('type.decSem.environment','const.decSem.environment_exh_fupd_2'(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),'type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X9))),s('type.decSem.environment','const.bool.ARB_0'))))) <=> (s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X6) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X8) & s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X7) = s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X9)))),
  file('thm.decSem.environment_literal_|49||49|','thm.decSem.environment_literal_|49||49|')).
fof(f5142,plain,(
  $false | ($spl0 | $spl3 | $spl4)),
  inference(subsumption_resolution,[],[f5141,f54])).
fof(f5141,plain,(
  s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),sK0) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),sK2) | ($spl0 | $spl4)),
  inference(forward_demodulation,[],[f5114,f3407])).
fof(f3407,plain,(
  ( ! [X2,X3] : (s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X2) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'const.decSem.environment_v_1'(s('type.decSem.environment','const.decSem.environment_v_fupd_2'(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),X2))),s('type.decSem.environment',X3)))))) )),
  inference(superposition,[],[f43,f302])).
fof(f302,plain,(
  ( ! [X2,X0,X3,X1] : (s(X0,X2) = s(X0,happ(s(fun(X1,X0),'const.combin.K_1'(s(X0,X2))),s(X1,X3)))) )),
  inference(forward_demodulation,[],[f49,f48])).
fof(f48,plain,(
  ( ! [X2,X0,X3,X1] : (s(X1,X2) = s(X1,'const.combin.K_2'(s(X1,X2),s(X0,X3)))) )),
  inference(cnf_transformation,[],[f22])).
fof(f22,plain,(
  ! [X0,X1,X2,X3] : s(X1,X2) = s(X1,'const.combin.K_2'(s(X1,X2),s(X0,X3)))),
  inference(flattening,[],[f21])).
fof(f21,plain,(
  ! [X0,X1] : ! [X2,X3] : s(X1,X2) = s(X1,'const.combin.K_2'(s(X1,X2),s(X0,X3)))),
  inference(rectify,[],[f7])).
fof(f7,axiom,(
  ! [X10,X11] : ! [X12,X13] : s(X11,X12) = s(X11,'const.combin.K_2'(s(X11,X12),s(X10,X13)))),
  file('thm.decSem.environment_literal_|49||49|','thm.combin.K_THM')).
fof(f49,plain,(
  ( ! [X2,X0,X3,X1] : (s(X0,'const.combin.K_2'(s(X0,X2),s(X1,X3))) = s(X0,happ(s(fun(X1,X0),'const.combin.K_1'(s(X0,X2))),s(X1,X3)))) )),
  inference(cnf_transformation,[],[f24])).
fof(f24,plain,(
  ! [X0,X1,X2,X3] : s(X0,'const.combin.K_2'(s(X0,X2),s(X1,X3))) = s(X0,happ(s(fun(X1,X0),'const.combin.K_1'(s(X0,X2))),s(X1,X3)))),
  inference(flattening,[],[f23])).
fof(f23,plain,(
  ! [X0,X1] : ! [X2,X3] : s(X0,'const.combin.K_2'(s(X0,X2),s(X1,X3))) = s(X0,happ(s(fun(X1,X0),'const.combin.K_1'(s(X0,X2))),s(X1,X3)))),
  inference(rectify,[],[f13])).
fof(f13,axiom,(
  ! [X11,X10] : ! [X18,X19] : s(X11,'const.combin.K_2'(s(X11,X18),s(X10,X19))) = s(X11,happ(s(fun(X10,X11),'const.combin.K_1'(s(X11,X18))),s(X10,X19)))),
  file('thm.decSem.environment_literal_|49||49|','ARITY_1_2_const.combin.K')).
fof(f43,plain,(
  ( ! [X0,X1] : (s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'const.decSem.environment_v_1'(s('type.decSem.environment','const.decSem.environment_v_fupd_2'(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v'))),X0),s('type.decSem.environment',X1))))) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v'))),X0),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'const.decSem.environment_v_1'(s('type.decSem.environment',X1)))))) )),
  inference(cnf_transformation,[],[f18])).
fof(f18,plain,(
  ! [X0,X1] : s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'const.decSem.environment_v_1'(s('type.decSem.environment','const.decSem.environment_v_fupd_2'(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v'))),X0),s('type.decSem.environment',X1))))) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v'))),X0),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'const.decSem.environment_v_1'(s('type.decSem.environment',X1)))))),
  inference(rectify,[],[f10])).
fof(f10,axiom,(
  ! [X14,X15] : s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'const.decSem.environment_v_1'(s('type.decSem.environment','const.decSem.environment_v_fupd_2'(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v'))),X14),s('type.decSem.environment',X15))))) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),happ(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v'))),X14),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'const.decSem.environment_v_1'(s('type.decSem.environment',X15)))))),
  file('thm.decSem.environment_literal_|49||49|','thm.decSem.decSem_79_prove_ltb')).
fof(f5114,plain,(
  s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),sK2) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'const.decSem.environment_v_1'(s('type.decSem.environment','const.decSem.environment_v_fupd_2'(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),sK0))),s('type.decSem.environment','const.decSem.environment_exh_fupd_2'(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),'type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),sK1))),s('type.decSem.environment','const.bool.ARB_0'))))))) | ($spl0 | $spl4)),
  inference(superposition,[],[f3407,f3840])).
fof(f3840,plain,(
  s('type.decSem.environment','const.decSem.environment_v_fupd_2'(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),sK0))),s('type.decSem.environment','const.decSem.environment_exh_fupd_2'(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),'type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),sK1))),s('type.decSem.environment','const.bool.ARB_0'))))) = s('type.decSem.environment','const.decSem.environment_v_fupd_2'(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),sK2))),s('type.decSem.environment','const.decSem.environment_exh_fupd_2'(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),'type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),sK1))),s('type.decSem.environment','const.bool.ARB_0'))))) | ($spl0 | $spl4)),
  inference(forward_demodulation,[],[f51,f55])).
fof(f51,plain,(
  s('type.decSem.environment','const.decSem.environment_v_fupd_2'(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),sK0))),s('type.decSem.environment','const.decSem.environment_exh_fupd_2'(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),'type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),sK1))),s('type.decSem.environment','const.bool.ARB_0'))))) = s('type.decSem.environment','const.decSem.environment_v_fupd_2'(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),sK2))),s('type.decSem.environment','const.decSem.environment_exh_fupd_2'(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),'type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),sK3))),s('type.decSem.environment','const.bool.ARB_0'))))) | $spl0),
  inference(cnf_transformation,[],[f51_D])).
fof(f51_D,plain,(
  s('type.decSem.environment','const.decSem.environment_v_fupd_2'(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),sK0))),s('type.decSem.environment','const.decSem.environment_exh_fupd_2'(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),'type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),sK1))),s('type.decSem.environment','const.bool.ARB_0'))))) = s('type.decSem.environment','const.decSem.environment_v_fupd_2'(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),sK2))),s('type.decSem.environment','const.decSem.environment_exh_fupd_2'(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),'type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),sK3))),s('type.decSem.environment','const.bool.ARB_0'))))) <=> ~$spl0),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl0])])).
fof(f55,plain,(
  s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),sK1) = s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),sK3) | $spl4),
  inference(cnf_transformation,[],[f55_D])).
fof(f55_D,plain,(
  s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),sK1) = s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),sK3) <=> ~$spl4),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl4])])).
fof(f36,plain,(
  s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),sK1) = s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),sK3) | s('type.decSem.environment','const.decSem.environment_v_fupd_2'(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),sK0))),s('type.decSem.environment','const.decSem.environment_exh_fupd_2'(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),'type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),sK1))),s('type.decSem.environment','const.bool.ARB_0'))))) = s('type.decSem.environment','const.decSem.environment_v_fupd_2'(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),sK2))),s('type.decSem.environment','const.decSem.environment_exh_fupd_2'(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),'type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),sK3))),s('type.decSem.environment','const.bool.ARB_0')))))),
  inference(cnf_transformation,[],[f31])).
fof(f53,plain,(
  s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),sK0) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),sK2) | $spl2),
  inference(cnf_transformation,[],[f53_D])).
fof(f53_D,plain,(
  s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),sK0) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),sK2) <=> ~$spl2),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl2])])).
fof(f35,plain,(
  s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),sK0) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),sK2) | s('type.decSem.environment','const.decSem.environment_v_fupd_2'(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),sK0))),s('type.decSem.environment','const.decSem.environment_exh_fupd_2'(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),'type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),sK1))),s('type.decSem.environment','const.bool.ARB_0'))))) = s('type.decSem.environment','const.decSem.environment_v_fupd_2'(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),sK2))),s('type.decSem.environment','const.decSem.environment_exh_fupd_2'(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),'type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),sK3))),s('type.decSem.environment','const.bool.ARB_0')))))),
  inference(cnf_transformation,[],[f31])).
fof(f3839,plain,(
  $false | ($spl1 | $spl2 | $spl4)),
  inference(trivial_inequality_removal,[],[f3838])).
fof(f3838,plain,(
  s('type.decSem.environment','const.decSem.environment_v_fupd_2'(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),sK0))),s('type.decSem.environment','const.decSem.environment_exh_fupd_2'(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),'type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),sK1))),s('type.decSem.environment','const.bool.ARB_0'))))) != s('type.decSem.environment','const.decSem.environment_v_fupd_2'(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),sK0))),s('type.decSem.environment','const.decSem.environment_exh_fupd_2'(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),'type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),sK1))),s('type.decSem.environment','const.bool.ARB_0'))))) | ($spl1 | $spl2 | $spl4)),
  inference(forward_demodulation,[],[f3837,f53])).
fof(f3837,plain,(
  s('type.decSem.environment','const.decSem.environment_v_fupd_2'(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),sK0))),s('type.decSem.environment','const.decSem.environment_exh_fupd_2'(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),'type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),sK1))),s('type.decSem.environment','const.bool.ARB_0'))))) != s('type.decSem.environment','const.decSem.environment_v_fupd_2'(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),sK2))),s('type.decSem.environment','const.decSem.environment_exh_fupd_2'(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),'type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),sK1))),s('type.decSem.environment','const.bool.ARB_0'))))) | ($spl1 | $spl4)),
  inference(forward_demodulation,[],[f52,f55])).
fof(f12188,plain,(
  $false | ($spl0 | $spl5)),
  inference(subsumption_resolution,[],[f12187,f56])).
fof(f12187,plain,(
  s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),sK1) = s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),sK3) | $spl0),
  inference(forward_demodulation,[],[f12186,f3599])).
fof(f3599,plain,(
  ( ! [X2,X3] : (s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X2) = s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),'const.decSem.environment_exh_1'(s('type.decSem.environment','const.decSem.environment_exh_fupd_2'(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),'type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X2))),s('type.decSem.environment',X3)))))) )),
  inference(superposition,[],[f44,f302])).
fof(f44,plain,(
  ( ! [X0,X1] : (s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),'const.decSem.environment_exh_1'(s('type.decSem.environment','const.decSem.environment_exh_fupd_2'(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),'type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num'))),X0),s('type.decSem.environment',X1))))) = s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),'type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num'))),X0),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),'const.decSem.environment_exh_1'(s('type.decSem.environment',X1)))))) )),
  inference(cnf_transformation,[],[f19])).
fof(f19,plain,(
  ! [X0,X1] : s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),'const.decSem.environment_exh_1'(s('type.decSem.environment','const.decSem.environment_exh_fupd_2'(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),'type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num'))),X0),s('type.decSem.environment',X1))))) = s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),'type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num'))),X0),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),'const.decSem.environment_exh_1'(s('type.decSem.environment',X1)))))),
  inference(rectify,[],[f11])).
fof(f11,axiom,(
  ! [X14,X15] : s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),'const.decSem.environment_exh_1'(s('type.decSem.environment','const.decSem.environment_exh_fupd_2'(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),'type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num'))),X14),s('type.decSem.environment',X15))))) = s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),'type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num'))),X14),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),'const.decSem.environment_exh_1'(s('type.decSem.environment',X15)))))),
  file('thm.decSem.environment_literal_|49||49|','thm.decSem.decSem_8|48|_prove_ltb')).
fof(f12186,plain,(
  s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),sK3) = s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),'const.decSem.environment_exh_1'(s('type.decSem.environment','const.decSem.environment_exh_fupd_2'(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),'type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),sK1))),s('type.decSem.environment','const.bool.ARB_0'))))) | $spl0),
  inference(forward_demodulation,[],[f5364,f3599])).
fof(f5364,plain,(
  s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),'const.decSem.environment_exh_1'(s('type.decSem.environment','const.decSem.environment_exh_fupd_2'(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),'type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),sK1))),s('type.decSem.environment','const.bool.ARB_0'))))) = s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),'const.decSem.environment_exh_1'(s('type.decSem.environment','const.decSem.environment_exh_fupd_2'(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),'type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),sK3))),s('type.decSem.environment','const.bool.ARB_0'))))) | $spl0),
  inference(forward_demodulation,[],[f5325,f42])).
fof(f42,plain,(
  ( ! [X0,X1] : (s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),'const.decSem.environment_exh_1'(s('type.decSem.environment',X1))) = s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),'const.decSem.environment_exh_1'(s('type.decSem.environment','const.decSem.environment_v_fupd_2'(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v'))),X0),s('type.decSem.environment',X1)))))) )),
  inference(cnf_transformation,[],[f17])).
fof(f17,plain,(
  ! [X0,X1] : s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),'const.decSem.environment_exh_1'(s('type.decSem.environment',X1))) = s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),'const.decSem.environment_exh_1'(s('type.decSem.environment','const.decSem.environment_v_fupd_2'(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v'))),X0),s('type.decSem.environment',X1)))))),
  inference(rectify,[],[f9])).
fof(f9,axiom,(
  ! [X14,X15] : s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),'const.decSem.environment_exh_1'(s('type.decSem.environment',X15))) = s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),'const.decSem.environment_exh_1'(s('type.decSem.environment','const.decSem.environment_v_fupd_2'(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v'))),X14),s('type.decSem.environment',X15)))))),
  file('thm.decSem.environment_literal_|49||49|','thm.decSem.decSem_78_prove_ltb')).
fof(f5325,plain,(
  s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),'const.decSem.environment_exh_1'(s('type.decSem.environment','const.decSem.environment_exh_fupd_2'(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),'type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),sK3))),s('type.decSem.environment','const.bool.ARB_0'))))) = s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),'const.decSem.environment_exh_1'(s('type.decSem.environment','const.decSem.environment_v_fupd_2'(s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.conSem.v')),sK0))),s('type.decSem.environment','const.decSem.environment_exh_fupd_2'(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),'type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),sK1))),s('type.decSem.environment','const.bool.ARB_0'))))))) | $spl0),
  inference(superposition,[],[f42,f51])).
% SZS output end Proof for thm.decSem
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 92
% Passive clauses: 874
% Generated clauses: 11935
% Final active clauses: 83
% Final passive clauses: 653
% Input formulas: 12
% Initial clauses: 16
% 
% Duplicate literals: 754
% Trivial inequalities: 125
% Fw subsumption resolutions: 1288
% Fw demodulations: 1081
% Bw demodulations: 3
% 
% Simple tautologies: 170
% Equational tautologies: 24
% Forward subsumptions: 6950
% 
% Binary resolution: 8
% Forward superposition: 4364
% Backward superposition: 3905
% Self superposition: 173
% Equality factoring: 63
% Equality resolution: 14
% 
% Split clauses: 392
% Split components: 794
% SAT solver clauses: 799
% SAT solver unit clauses: 21
% SAT solver binary clauses: 105
% SAT solver learnt clauses: 3
% SAT solver learnt literals: 2
% 
% Sat splits: 392
% Sat splitting refutations: 5
% 
% TWLsolver clauses: 795
% TWLsolver calls for satisfiability: 92
% 
% Memory used [KB]: 8571
% Time elapsed: 0.337 s
% ------------------------------
% ------------------------------
% Success in time 0.35 s
