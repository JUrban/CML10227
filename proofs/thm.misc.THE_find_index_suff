Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 150 next slice time: 5
dis+11_7_3 on thm.misc
% (31188)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 210
% Passive clauses: 3200
% Generated clauses: 20569
% Final active clauses: 200
% Final passive clauses: 2794
% Input formulas: 23
% Initial clauses: 58
% 
% Duplicate literals: 899
% Trivial inequalities: 446
% Fw subsumption resolutions: 2862
% Fw demodulations: 2668
% Bw demodulations: 6
% 
% Simple tautologies: 425
% Equational tautologies: 21
% Forward subsumptions: 8773
% 
% Binary resolution: 969
% Forward superposition: 7676
% Backward superposition: 4597
% Self superposition: 92
% Equality factoring: 48
% Equality resolution: 48
% 
% Split clauses: 723
% Split components: 1459
% SAT solver clauses: 1324
% SAT solver unit clauses: 22
% SAT solver binary clauses: 215
% 
% Sat splits: 723
% Sat splitting refutations: 2
% 
% TWLsolver clauses: 1321
% TWLsolver calls for satisfiability: 259
% 
% Memory used [KB]: 11513
% Time elapsed: 0.600 s
% ------------------------------
% ------------------------------
% remaining time: 144 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.misc
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.misc
% SZS output start Proof for thm.misc
fof(f933,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f932,f99,f176,f136,f192,f198,f201,f97,f173,f104,f180,f923,f925,f101,f178,f840,f860,f210,f214,f98,f171,f108,f182,f827,f833,f126,f188,f822,f823,f135,f193,f879,f887,f96,f174,f138,f194])).
fof(f194,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X0)))) ) | $spl32),
  inference(cnf_transformation,[],[f194_D])).
fof(f194_D,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X0)))) ) <=> ~$spl32),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl32])])).
fof(f138,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f49])).
fof(f49,plain,(
  ! [X0,X1] : s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X0)))),
  inference(rectify,[],[f7])).
fof(f7,axiom,(
  ! [X11,X10] : s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X10),s('type.num.num',X11))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X11),s('type.num.num',X10)))),
  file('thm.misc.THE_find_index_suff','thm.arithmetic.ADD_SYM')).
fof(f174,plain,(
  ( ! [X5] : (p(s(bool,happ(s(fun('type.num.num',bool),sK1),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X5),s('type.num.num',sK4)))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X5),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK3))))))) ) | $spl4),
  inference(cnf_transformation,[],[f174_D])).
fof(f174_D,plain,(
  ( ! [X5] : (p(s(bool,happ(s(fun('type.num.num',bool),sK1),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X5),s('type.num.num',sK4)))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X5),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK3))))))) ) <=> ~$spl4),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl4])])).
fof(f96,plain,(
  ( ! [X5] : (p(s(bool,happ(s(fun('type.num.num',bool),sK1),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X5),s('type.num.num',sK4)))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X5),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK3))))))) )),
  inference(cnf_transformation,[],[f68])).
fof(f68,plain,(
  ! [X5] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X5),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)))))) | p(s(bool,happ(s(fun('type.num.num',bool),sK1),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X5),s('type.num.num',sK4))))))) & p(s(bool,'const.bool.IN_2'(s(sK0,sK2),s(fun(sK0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(sK0),sK3)))))) & ~p(s(bool,happ(s(fun('type.num.num',bool),sK1),s('type.num.num','const.option.THE_1'(s('type.option.option'('type.num.num'),'const.misc.find_index_3'(s(sK0,sK2),s('type.list.list'(sK0),sK3),s('type.num.num',sK4))))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1,sK2,sK3,sK4])],[f55])).
fof(f55,plain,(
  ? [X0,X1,X2,X3,X4] : (! [X5] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X5),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3)))))) | p(s(bool,happ(s(fun('type.num.num',bool),X1),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X5),s('type.num.num',X4))))))) & p(s(bool,'const.bool.IN_2'(s(X0,X2),s(fun(X0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X0),X3)))))) & ~p(s(bool,happ(s(fun('type.num.num',bool),X1),s('type.num.num','const.option.THE_1'(s('type.option.option'('type.num.num'),'const.misc.find_index_3'(s(X0,X2),s('type.list.list'(X0),X3),s('type.num.num',X4)))))))))),
  inference(flattening,[],[f54])).
fof(f54,plain,(
  ? [X0,X1,X2,X3,X4] : ((! [X5] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X5),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3)))))) | p(s(bool,happ(s(fun('type.num.num',bool),X1),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X5),s('type.num.num',X4))))))) & p(s(bool,'const.bool.IN_2'(s(X0,X2),s(fun(X0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X0),X3))))))) & ~p(s(bool,happ(s(fun('type.num.num',bool),X1),s('type.num.num','const.option.THE_1'(s('type.option.option'('type.num.num'),'const.misc.find_index_3'(s(X0,X2),s('type.list.list'(X0),X3),s('type.num.num',X4)))))))))),
  inference(ennf_transformation,[],[f26])).
fof(f26,plain,(
  ~! [X0,X1,X2,X3,X4] : ((! [X5] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X5),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3)))))) => p(s(bool,happ(s(fun('type.num.num',bool),X1),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X5),s('type.num.num',X4))))))) & p(s(bool,'const.bool.IN_2'(s(X0,X2),s(fun(X0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X0),X3))))))) => p(s(bool,happ(s(fun('type.num.num',bool),X1),s('type.num.num','const.option.THE_1'(s('type.option.option'('type.num.num'),'const.misc.find_index_3'(s(X0,X2),s('type.list.list'(X0),X3),s('type.num.num',X4)))))))))),
  inference(flattening,[],[f25])).
fof(f25,plain,(
  ~! [X0] : ! [X1,X2,X3,X4] : ((! [X5] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X5),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3)))))) => p(s(bool,happ(s(fun('type.num.num',bool),X1),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X5),s('type.num.num',X4))))))) & p(s(bool,'const.bool.IN_2'(s(X0,X2),s(fun(X0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X0),X3))))))) => p(s(bool,happ(s(fun('type.num.num',bool),X1),s('type.num.num','const.option.THE_1'(s('type.option.option'('type.num.num'),'const.misc.find_index_3'(s(X0,X2),s('type.list.list'(X0),X3),s('type.num.num',X4)))))))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : ! [X7,X8,X9,X10] : ((! [X11] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X11),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X9)))))) => p(s(bool,happ(s(fun('type.num.num',bool),X7),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X11),s('type.num.num',X10))))))) & p(s(bool,'const.bool.IN_2'(s(X6,X8),s(fun(X6,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X6),X9))))))) => p(s(bool,happ(s(fun('type.num.num',bool),X7),s('type.num.num','const.option.THE_1'(s('type.option.option'('type.num.num'),'const.misc.find_index_3'(s(X6,X8),s('type.list.list'(X6),X9),s('type.num.num',X10)))))))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : ! [X7,X8,X9,X10] : ((! [X11] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X11),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X9)))))) => p(s(bool,happ(s(fun('type.num.num',bool),X7),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X11),s('type.num.num',X10))))))) & p(s(bool,'const.bool.IN_2'(s(X6,X8),s(fun(X6,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X6),X9))))))) => p(s(bool,happ(s(fun('type.num.num',bool),X7),s('type.num.num','const.option.THE_1'(s('type.option.option'('type.num.num'),'const.misc.find_index_3'(s(X6,X8),s('type.list.list'(X6),X9),s('type.num.num',X10)))))))))),
  file('thm.misc.THE_find_index_suff','thm.misc.THE_find_index_suff')).
fof(f887,plain,(
  ( ! [X0] : (p(s(bool,happ(s(fun('type.num.num',bool),sK1),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK4),s('type.num.num',X0)))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK3))))))) ) | $spl226),
  inference(cnf_transformation,[],[f887_D])).
fof(f887_D,plain,(
  ( ! [X0] : (p(s(bool,happ(s(fun('type.num.num',bool),sK1),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK4),s('type.num.num',X0)))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK3))))))) ) <=> ~$spl226),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl226])])).
fof(f879,plain,(
  ( ! [X0] : (p(s(bool,happ(s(fun('type.num.num',bool),sK1),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK4),s('type.num.num',X0)))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK3))))))) ) | ($spl4 | $spl32)),
  inference(superposition,[],[f174,f194])).
fof(f193,plain,(
  ( ! [X2,X0,X3,X1] : (~p(s(bool,'const.bool.IN_2'(s(X0,X2),s(fun(X0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X0),X1)))))) | s('type.option.option'('type.num.num'),'const.misc.find_index_3'(s(X0,X2),s('type.list.list'(X0),X1),s('type.num.num',X3))) = s('type.option.option'('type.num.num'),'const.option.SOME_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X3),s('type.num.num',sK7(X3,X2,X1,X0))))))) ) | $spl30),
  inference(cnf_transformation,[],[f193_D])).
fof(f193_D,plain,(
  ( ! [X2,X0,X3,X1] : (~p(s(bool,'const.bool.IN_2'(s(X0,X2),s(fun(X0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X0),X1)))))) | s('type.option.option'('type.num.num'),'const.misc.find_index_3'(s(X0,X2),s('type.list.list'(X0),X1),s('type.num.num',X3))) = s('type.option.option'('type.num.num'),'const.option.SOME_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X3),s('type.num.num',sK7(X3,X2,X1,X0))))))) ) <=> ~$spl30),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl30])])).
fof(f135,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.option.option'('type.num.num'),'const.misc.find_index_3'(s(X0,X2),s('type.list.list'(X0),X1),s('type.num.num',X3))) = s('type.option.option'('type.num.num'),'const.option.SOME_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X3),s('type.num.num',sK7(X3,X2,X1,X0)))))) | ~p(s(bool,'const.bool.IN_2'(s(X0,X2),s(fun(X0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X0),X1))))))) )),
  inference(cnf_transformation,[],[f90])).
fof(f90,plain,(
  ! [X0,X1,X2,X3] : (~p(s(bool,'const.bool.IN_2'(s(X0,X2),s(fun(X0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X0),X1)))))) | (s('type.option.option'('type.num.num'),'const.misc.find_index_3'(s(X0,X2),s('type.list.list'(X0),X1),s('type.num.num',X3))) = s('type.option.option'('type.num.num'),'const.option.SOME_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X3),s('type.num.num',sK7(X3,X2,X1,X0)))))) & p(s(bool,'const.prim_rec.<_2'(s('type.num.num',sK7(X3,X2,X1,X0)),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1)))))) & s(X0,X2) = s(X0,'const.list.EL_2'(s('type.num.num',sK7(X3,X2,X1,X0)),s('type.list.list'(X0),X1)))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK7])],[f62])).
fof(f62,plain,(
  ! [X0,X1,X2,X3] : (~p(s(bool,'const.bool.IN_2'(s(X0,X2),s(fun(X0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X0),X1)))))) | ? [X4] : (s('type.option.option'('type.num.num'),'const.option.SOME_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X3),s('type.num.num',X4))))) = s('type.option.option'('type.num.num'),'const.misc.find_index_3'(s(X0,X2),s('type.list.list'(X0),X1),s('type.num.num',X3))) & p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X4),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1)))))) & s(X0,X2) = s(X0,'const.list.EL_2'(s('type.num.num',X4),s('type.list.list'(X0),X1)))))),
  inference(ennf_transformation,[],[f48])).
fof(f48,plain,(
  ! [X0,X1,X2,X3] : (p(s(bool,'const.bool.IN_2'(s(X0,X2),s(fun(X0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X0),X1)))))) => ? [X4] : (s('type.option.option'('type.num.num'),'const.option.SOME_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X3),s('type.num.num',X4))))) = s('type.option.option'('type.num.num'),'const.misc.find_index_3'(s(X0,X2),s('type.list.list'(X0),X1),s('type.num.num',X3))) & p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X4),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1)))))) & s(X0,X2) = s(X0,'const.list.EL_2'(s('type.num.num',X4),s('type.list.list'(X0),X1)))))),
  inference(flattening,[],[f47])).
fof(f47,plain,(
  ! [X0] : ! [X1,X2,X3] : (p(s(bool,'const.bool.IN_2'(s(X0,X2),s(fun(X0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X0),X1)))))) => ? [X4] : (s('type.option.option'('type.num.num'),'const.option.SOME_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X3),s('type.num.num',X4))))) = s('type.option.option'('type.num.num'),'const.misc.find_index_3'(s(X0,X2),s('type.list.list'(X0),X1),s('type.num.num',X3))) & p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X4),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1)))))) & s(X0,X2) = s(X0,'const.list.EL_2'(s('type.num.num',X4),s('type.list.list'(X0),X1)))))),
  inference(rectify,[],[f23])).
fof(f23,axiom,(
  ! [X6] : ! [X9,X8,X10] : (p(s(bool,'const.bool.IN_2'(s(X6,X8),s(fun(X6,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X6),X9)))))) => ? [X20] : (s('type.option.option'('type.num.num'),'const.option.SOME_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X10),s('type.num.num',X20))))) = s('type.option.option'('type.num.num'),'const.misc.find_index_3'(s(X6,X8),s('type.list.list'(X6),X9),s('type.num.num',X10))) & p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X20),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X9)))))) & s(X6,X8) = s(X6,'const.list.EL_2'(s('type.num.num',X20),s('type.list.list'(X6),X9)))))),
  file('thm.misc.THE_find_index_suff','thm.misc.find_index_MEM')).
fof(f823,plain,(
  ( ! [X0] : (s('type.option.option'('type.num.num'),'const.misc.find_index_3'(s(sK0,sK2),s('type.list.list'(sK0),sK3),s('type.num.num',X0))) = s('type.option.option'('type.num.num'),'const.option.SOME_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',sK7(X0,sK2,sK3,sK0))))))) ) | $spl186),
  inference(cnf_transformation,[],[f823_D])).
fof(f823_D,plain,(
  ( ! [X0] : (s('type.option.option'('type.num.num'),'const.misc.find_index_3'(s(sK0,sK2),s('type.list.list'(sK0),sK3),s('type.num.num',X0))) = s('type.option.option'('type.num.num'),'const.option.SOME_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',sK7(X0,sK2,sK3,sK0))))))) ) <=> ~$spl186),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl186])])).
fof(f822,plain,(
  ( ! [X0] : (s('type.option.option'('type.num.num'),'const.misc.find_index_3'(s(sK0,sK2),s('type.list.list'(sK0),sK3),s('type.num.num',X0))) = s('type.option.option'('type.num.num'),'const.option.SOME_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',sK7(X0,sK2,sK3,sK0))))))) ) | ($spl6 | $spl30 | $spl38)),
  inference(subsumption_resolution,[],[f799,f176])).
fof(f799,plain,(
  ( ! [X0] : (~p(s(bool,'T_0')) | s('type.option.option'('type.num.num'),'const.misc.find_index_3'(s(sK0,sK2),s('type.list.list'(sK0),sK3),s('type.num.num',X0))) = s('type.option.option'('type.num.num'),'const.option.SOME_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',sK7(X0,sK2,sK3,sK0))))))) ) | ($spl30 | $spl38)),
  inference(superposition,[],[f193,f201])).
fof(f188,plain,(
  ( ! [X0,X1] : (s(X0,X1) = s(X0,'const.option.THE_1'(s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X1)))))) ) | $spl20),
  inference(cnf_transformation,[],[f188_D])).
fof(f188_D,plain,(
  ( ! [X0,X1] : (s(X0,X1) = s(X0,'const.option.THE_1'(s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X1)))))) ) <=> ~$spl20),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl20])])).
fof(f126,plain,(
  ( ! [X0,X1] : (s(X0,X1) = s(X0,'const.option.THE_1'(s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X1)))))) )),
  inference(cnf_transformation,[],[f41])).
fof(f41,plain,(
  ! [X0,X1] : s(X0,X1) = s(X0,'const.option.THE_1'(s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X1)))))),
  inference(flattening,[],[f40])).
fof(f40,plain,(
  ! [X0] : ! [X1] : s(X0,X1) = s(X0,'const.option.THE_1'(s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X1)))))),
  inference(rectify,[],[f24])).
fof(f24,axiom,(
  ! [X6] : ! [X8] : s(X6,X8) = s(X6,'const.option.THE_1'(s('type.option.option'(X6),'const.option.SOME_1'(s(X6,X8)))))),
  file('thm.misc.THE_find_index_suff','thm.option.THE_DEF')).
fof(f833,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',sK7(X0,sK2,sK3,sK0)))) = s('type.num.num','const.option.THE_1'(s('type.option.option'('type.num.num'),'const.misc.find_index_3'(s(sK0,sK2),s('type.list.list'(sK0),sK3),s('type.num.num',X0)))))) ) | $spl192),
  inference(cnf_transformation,[],[f833_D])).
fof(f833_D,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',sK7(X0,sK2,sK3,sK0)))) = s('type.num.num','const.option.THE_1'(s('type.option.option'('type.num.num'),'const.misc.find_index_3'(s(sK0,sK2),s('type.list.list'(sK0),sK3),s('type.num.num',X0)))))) ) <=> ~$spl192),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl192])])).
fof(f827,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',sK7(X0,sK2,sK3,sK0)))) = s('type.num.num','const.option.THE_1'(s('type.option.option'('type.num.num'),'const.misc.find_index_3'(s(sK0,sK2),s('type.list.list'(sK0),sK3),s('type.num.num',X0)))))) ) | ($spl20 | $spl186)),
  inference(superposition,[],[f188,f823])).
fof(f182,plain,(
  ( ! [X0] : (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)) ) | $spl16),
  inference(cnf_transformation,[],[f182_D])).
fof(f182_D,plain,(
  ( ! [X0] : (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)) ) <=> ~$spl16),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl16])])).
fof(f108,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f71])).
fof(f71,plain,(
  ! [X0] : ((s(bool,'F_0') != s(bool,X0) | ~p(s(bool,X0))) & (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f31])).
fof(f31,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(flattening,[],[f30])).
fof(f30,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(rectify,[],[f19])).
fof(f19,axiom,(
  ! [X12] : (s(bool,'F_0') = s(bool,X12) <=> ~p(s(bool,X12)))),
  file('thm.misc.THE_find_index_suff','thm.bool.EQ_CLAUSES|split|3')).
fof(f171,plain,(
  ~p(s(bool,happ(s(fun('type.num.num',bool),sK1),s('type.num.num','const.option.THE_1'(s('type.option.option'('type.num.num'),'const.misc.find_index_3'(s(sK0,sK2),s('type.list.list'(sK0),sK3),s('type.num.num',sK4)))))))) | $spl1),
  inference(cnf_transformation,[],[f171_D])).
fof(f171_D,plain,(
  ~p(s(bool,happ(s(fun('type.num.num',bool),sK1),s('type.num.num','const.option.THE_1'(s('type.option.option'('type.num.num'),'const.misc.find_index_3'(s(sK0,sK2),s('type.list.list'(sK0),sK3),s('type.num.num',sK4)))))))) <=> ~$spl1),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1])])).
fof(f98,plain,(
  ~p(s(bool,happ(s(fun('type.num.num',bool),sK1),s('type.num.num','const.option.THE_1'(s('type.option.option'('type.num.num'),'const.misc.find_index_3'(s(sK0,sK2),s('type.list.list'(sK0),sK3),s('type.num.num',sK4))))))))),
  inference(cnf_transformation,[],[f68])).
fof(f214,plain,(
  s(bool,'F_0') = s(bool,happ(s(fun('type.num.num',bool),sK1),s('type.num.num','const.option.THE_1'(s('type.option.option'('type.num.num'),'const.misc.find_index_3'(s(sK0,sK2),s('type.list.list'(sK0),sK3),s('type.num.num',sK4))))))) | $spl42),
  inference(cnf_transformation,[],[f214_D])).
fof(f214_D,plain,(
  s(bool,'F_0') = s(bool,happ(s(fun('type.num.num',bool),sK1),s('type.num.num','const.option.THE_1'(s('type.option.option'('type.num.num'),'const.misc.find_index_3'(s(sK0,sK2),s('type.list.list'(sK0),sK3),s('type.num.num',sK4))))))) <=> ~$spl42),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl42])])).
fof(f210,plain,(
  s(bool,'F_0') = s(bool,happ(s(fun('type.num.num',bool),sK1),s('type.num.num','const.option.THE_1'(s('type.option.option'('type.num.num'),'const.misc.find_index_3'(s(sK0,sK2),s('type.list.list'(sK0),sK3),s('type.num.num',sK4))))))) | ($spl1 | $spl16)),
  inference(resolution,[],[f182,f171])).
fof(f860,plain,(
  s(bool,'F_0') = s(bool,happ(s(fun('type.num.num',bool),sK1),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK4),s('type.num.num',sK7(sK4,sK2,sK3,sK0)))))) | $spl214),
  inference(cnf_transformation,[],[f860_D])).
fof(f860_D,plain,(
  s(bool,'F_0') = s(bool,happ(s(fun('type.num.num',bool),sK1),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK4),s('type.num.num',sK7(sK4,sK2,sK3,sK0)))))) <=> ~$spl214),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl214])])).
fof(f840,plain,(
  s(bool,'F_0') = s(bool,happ(s(fun('type.num.num',bool),sK1),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK4),s('type.num.num',sK7(sK4,sK2,sK3,sK0)))))) | ($spl42 | $spl192)),
  inference(backward_demodulation,[],[f833,f214])).
fof(f178,plain,(
  ~p(s(bool,'F_0')) | $spl9),
  inference(cnf_transformation,[],[f178_D])).
fof(f178_D,plain,(
  ~p(s(bool,'F_0')) <=> ~$spl9),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl9])])).
fof(f101,plain,(
  ~p(s(bool,'F_0'))),
  inference(cnf_transformation,[],[f27])).
fof(f27,plain,(
  ~p(s(bool,'F_0'))),
  inference(flattening,[],[f2])).
fof(f2,axiom,(
  ~p(s(bool,'F_0'))),
  file('thm.misc.THE_find_index_suff',aHL_FALSITY)).
fof(f925,plain,(
  ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',sK7(sK4,sK2,sK3,sK0)),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)))))) | $spl233),
  inference(cnf_transformation,[],[f925_D])).
fof(f925_D,plain,(
  ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',sK7(sK4,sK2,sK3,sK0)),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)))))) <=> ~$spl233),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl233])])).
fof(f923,plain,(
  ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',sK7(sK4,sK2,sK3,sK0)),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)))))) | ($spl9 | $spl214 | $spl226)),
  inference(subsumption_resolution,[],[f918,f178])).
fof(f918,plain,(
  p(s(bool,'F_0')) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',sK7(sK4,sK2,sK3,sK0)),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)))))) | ($spl214 | $spl226)),
  inference(superposition,[],[f887,f860])).
fof(f180,plain,(
  ( ! [X0] : (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)) ) | $spl12),
  inference(cnf_transformation,[],[f180_D])).
fof(f180_D,plain,(
  ( ! [X0] : (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)) ) <=> ~$spl12),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl12])])).
fof(f104,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f69])).
fof(f69,plain,(
  ! [X0] : ((s(bool,'T_0') != s(bool,X0) | p(s(bool,X0))) & (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f28])).
fof(f28,plain,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) <=> p(s(bool,X0)))),
  inference(rectify,[],[f17])).
fof(f17,axiom,(
  ! [X12] : (s(bool,'T_0') = s(bool,X12) <=> p(s(bool,X12)))),
  file('thm.misc.THE_find_index_suff','thm.bool.EQ_CLAUSES|split|1')).
fof(f173,plain,(
  p(s(bool,'const.bool.IN_2'(s(sK0,sK2),s(fun(sK0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(sK0),sK3)))))) | $spl2),
  inference(cnf_transformation,[],[f173_D])).
fof(f173_D,plain,(
  p(s(bool,'const.bool.IN_2'(s(sK0,sK2),s(fun(sK0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(sK0),sK3)))))) <=> ~$spl2),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl2])])).
fof(f97,plain,(
  p(s(bool,'const.bool.IN_2'(s(sK0,sK2),s(fun(sK0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(sK0),sK3))))))),
  inference(cnf_transformation,[],[f68])).
fof(f201,plain,(
  s(bool,'T_0') = s(bool,'const.bool.IN_2'(s(sK0,sK2),s(fun(sK0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(sK0),sK3))))) | $spl38),
  inference(cnf_transformation,[],[f201_D])).
fof(f201_D,plain,(
  s(bool,'T_0') = s(bool,'const.bool.IN_2'(s(sK0,sK2),s(fun(sK0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(sK0),sK3))))) <=> ~$spl38),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl38])])).
fof(f198,plain,(
  s(bool,'T_0') = s(bool,'const.bool.IN_2'(s(sK0,sK2),s(fun(sK0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(sK0),sK3))))) | ($spl2 | $spl12)),
  inference(resolution,[],[f180,f173])).
fof(f192,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',sK7(X3,X2,X1,X0)),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1)))))) | ~p(s(bool,'const.bool.IN_2'(s(X0,X2),s(fun(X0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X0),X1))))))) ) | $spl28),
  inference(cnf_transformation,[],[f192_D])).
fof(f192_D,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',sK7(X3,X2,X1,X0)),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1)))))) | ~p(s(bool,'const.bool.IN_2'(s(X0,X2),s(fun(X0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X0),X1))))))) ) <=> ~$spl28),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl28])])).
fof(f136,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',sK7(X3,X2,X1,X0)),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1)))))) | ~p(s(bool,'const.bool.IN_2'(s(X0,X2),s(fun(X0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X0),X1))))))) )),
  inference(cnf_transformation,[],[f90])).
fof(f176,plain,(
  p(s(bool,'T_0')) | $spl6),
  inference(cnf_transformation,[],[f176_D])).
fof(f176_D,plain,(
  p(s(bool,'T_0')) <=> ~$spl6),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl6])])).
fof(f99,plain,(
  p(s(bool,'T_0'))),
  inference(cnf_transformation,[],[f1])).
fof(f1,axiom,(
  p(s(bool,'T_0'))),
  file('thm.misc.THE_find_index_suff',aHL_TRUTH)).
fof(f932,plain,(
  $false | ($spl6 | $spl28 | $spl38 | $spl233)),
  inference(subsumption_resolution,[],[f931,f176])).
fof(f931,plain,(
  ~p(s(bool,'T_0')) | ($spl28 | $spl38 | $spl233)),
  inference(forward_demodulation,[],[f927,f201])).
fof(f927,plain,(
  ~p(s(bool,'const.bool.IN_2'(s(sK0,sK2),s(fun(sK0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(sK0),sK3)))))) | ($spl28 | $spl233)),
  inference(resolution,[],[f925,f192])).
% SZS output end Proof for thm.misc
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 54
% Passive clauses: 129
% Generated clauses: 882
% Final active clauses: 29
% Final passive clauses: 55
% Input formulas: 23
% Initial clauses: 58
% 
% Duplicate literals: 7
% Trivial inequalities: 20
% Fw subsumption resolutions: 68
% Fw demodulations: 108
% Bw demodulations: 25
% Condensations: 23
% Global subsumptions: 4
% 
% Simple tautologies: 33
% Equational tautologies: 4
% Forward subsumptions: 294
% Bw demodulations to eq. taut.: 2
% 
% Binary resolution: 35
% Forward superposition: 252
% Backward superposition: 83
% Self superposition: 8
% Equality factoring: 2
% Equality resolution: 13
% 
% Split clauses: 18
% Split components: 36
% SAT solver clauses: 238
% SAT solver unit clauses: 60
% SAT solver binary clauses: 29
% SAT solver learnt clauses: 9
% 
% Sat splits: 18
% Sat splitting refutations: 9
% 
% TWLsolver clauses: 221
% TWLsolver calls for satisfiability: 248
% 
% Memory used [KB]: 1663
% Time elapsed: 0.027 s
% ------------------------------
% ------------------------------
% Success in time 0.64 s
