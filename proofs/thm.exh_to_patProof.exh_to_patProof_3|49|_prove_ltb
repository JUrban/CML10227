Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 149 next slice time: 5
dis+11_7_3 on thm.exh_to_patProof
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.exh_to_patProof
% SZS output start Proof for thm.exh_to_patProof
fof(f4647,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f4646,f216,f395,f393,f391,f389,f4644,f4643,f4645])).
fof(f4645,plain,(
  $false | $spl0),
  inference(subsumption_resolution,[],[f389,f217])).
fof(f217,plain,(
  ( ! [X8] : (s('type.pair.prod'(fun('type.num.num',fun('type.num.num',bool)),'type.pair.prod'('type.num.num','type.num.num')),sK12) != s('type.pair.prod'(fun('type.num.num',fun('type.num.num',bool)),'type.pair.prod'('type.num.num','type.num.num')),'const.pair.,_2'(s(fun('type.num.num',fun('type.num.num',bool)),X8),s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')))))) )),
  inference(cnf_transformation,[],[f135])).
fof(f135,plain,(
  (s('type.pair.prod'(fun('type.num.num',fun('type.num.num',bool)),'type.pair.prod'('type.num.num','type.num.num')),sK12) = s('type.pair.prod'(fun('type.num.num',fun('type.num.num',bool)),'type.pair.prod'('type.num.num','type.num.num')),'const.pair.,_2'(s(fun('type.num.num',fun('type.num.num',bool)),sK13),s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0'))))) | s('type.pair.prod'(fun('type.num.num',fun('type.num.num',bool)),'type.pair.prod'('type.num.num','type.num.num')),sK12) = s('type.pair.prod'(fun('type.num.num',fun('type.num.num',bool)),'type.pair.prod'('type.num.num','type.num.num')),'const.pair.,_2'(s(fun('type.num.num',fun('type.num.num',bool)),sK14),s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num',sK15))))))) | s('type.pair.prod'(fun('type.num.num',fun('type.num.num',bool)),'type.pair.prod'('type.num.num','type.num.num')),sK12) = s('type.pair.prod'(fun('type.num.num',fun('type.num.num',bool)),'type.pair.prod'('type.num.num','type.num.num')),'const.pair.,_2'(s(fun('type.num.num',fun('type.num.num',bool)),sK16),s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',sK17))),s('type.num.num','const.num.|48|_0'))))) | s('type.pair.prod'(fun('type.num.num',fun('type.num.num',bool)),'type.pair.prod'('type.num.num','type.num.num')),sK12) = s('type.pair.prod'(fun('type.num.num',fun('type.num.num',bool)),'type.pair.prod'('type.num.num','type.num.num')),'const.pair.,_2'(s(fun('type.num.num',fun('type.num.num',bool)),sK18),s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',sK19))),s('type.num.num','const.num.SUC_1'(s('type.num.num',sK20)))))))) & ! [X8] : s('type.pair.prod'(fun('type.num.num',fun('type.num.num',bool)),'type.pair.prod'('type.num.num','type.num.num')),sK12) != s('type.pair.prod'(fun('type.num.num',fun('type.num.num',bool)),'type.pair.prod'('type.num.num','type.num.num')),'const.pair.,_2'(s(fun('type.num.num',fun('type.num.num',bool)),X8),s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0'))))) & ! [X5,X6,X7] : s('type.pair.prod'(fun('type.num.num',fun('type.num.num',bool)),'type.pair.prod'('type.num.num','type.num.num')),sK12) != s('type.pair.prod'(fun('type.num.num',fun('type.num.num',bool)),'type.pair.prod'('type.num.num','type.num.num')),'const.pair.,_2'(s(fun('type.num.num',fun('type.num.num',bool)),X5),s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X6))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X7))))))) & ! [X3,X4] : s('type.pair.prod'(fun('type.num.num',fun('type.num.num',bool)),'type.pair.prod'('type.num.num','type.num.num')),sK12) != s('type.pair.prod'(fun('type.num.num',fun('type.num.num',bool)),'type.pair.prod'('type.num.num','type.num.num')),'const.pair.,_2'(s(fun('type.num.num',fun('type.num.num',bool)),X3),s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num',X4))))))) & ! [X1,X2] : s('type.pair.prod'(fun('type.num.num',fun('type.num.num',bool)),'type.pair.prod'('type.num.num','type.num.num')),sK12) != s('type.pair.prod'(fun('type.num.num',fun('type.num.num',bool)),'type.pair.prod'('type.num.num','type.num.num')),'const.pair.,_2'(s(fun('type.num.num',fun('type.num.num',bool)),X1),s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X2))),s('type.num.num','const.num.|48|_0')))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK12,sK13,sK14,sK15,sK16,sK17,sK18,sK19,sK20])],[f134])).
fof(f134,plain,(
  ? [X0] : ((? [X16] : s('type.pair.prod'(fun('type.num.num',fun('type.num.num',bool)),'type.pair.prod'('type.num.num','type.num.num')),X0) = s('type.pair.prod'(fun('type.num.num',fun('type.num.num',bool)),'type.pair.prod'('type.num.num','type.num.num')),'const.pair.,_2'(s(fun('type.num.num',fun('type.num.num',bool)),X16),s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0'))))) | ? [X14,X15] : s('type.pair.prod'(fun('type.num.num',fun('type.num.num',bool)),'type.pair.prod'('type.num.num','type.num.num')),X0) = s('type.pair.prod'(fun('type.num.num',fun('type.num.num',bool)),'type.pair.prod'('type.num.num','type.num.num')),'const.pair.,_2'(s(fun('type.num.num',fun('type.num.num',bool)),X14),s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num',X15))))))) | ? [X12,X13] : s('type.pair.prod'(fun('type.num.num',fun('type.num.num',bool)),'type.pair.prod'('type.num.num','type.num.num')),X0) = s('type.pair.prod'(fun('type.num.num',fun('type.num.num',bool)),'type.pair.prod'('type.num.num','type.num.num')),'const.pair.,_2'(s(fun('type.num.num',fun('type.num.num',bool)),X12),s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X13))),s('type.num.num','const.num.|48|_0'))))) | ? [X9,X10,X11] : s('type.pair.prod'(fun('type.num.num',fun('type.num.num',bool)),'type.pair.prod'('type.num.num','type.num.num')),X0) = s('type.pair.prod'(fun('type.num.num',fun('type.num.num',bool)),'type.pair.prod'('type.num.num','type.num.num')),'const.pair.,_2'(s(fun('type.num.num',fun('type.num.num',bool)),X9),s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X10))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X11)))))))) & ! [X8] : s('type.pair.prod'(fun('type.num.num',fun('type.num.num',bool)),'type.pair.prod'('type.num.num','type.num.num')),X0) != s('type.pair.prod'(fun('type.num.num',fun('type.num.num',bool)),'type.pair.prod'('type.num.num','type.num.num')),'const.pair.,_2'(s(fun('type.num.num',fun('type.num.num',bool)),X8),s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0'))))) & ! [X5,X6,X7] : s('type.pair.prod'(fun('type.num.num',fun('type.num.num',bool)),'type.pair.prod'('type.num.num','type.num.num')),X0) != s('type.pair.prod'(fun('type.num.num',fun('type.num.num',bool)),'type.pair.prod'('type.num.num','type.num.num')),'const.pair.,_2'(s(fun('type.num.num',fun('type.num.num',bool)),X5),s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X6))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X7))))))) & ! [X3,X4] : s('type.pair.prod'(fun('type.num.num',fun('type.num.num',bool)),'type.pair.prod'('type.num.num','type.num.num')),X0) != s('type.pair.prod'(fun('type.num.num',fun('type.num.num',bool)),'type.pair.prod'('type.num.num','type.num.num')),'const.pair.,_2'(s(fun('type.num.num',fun('type.num.num',bool)),X3),s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num',X4))))))) & ! [X1,X2] : s('type.pair.prod'(fun('type.num.num',fun('type.num.num',bool)),'type.pair.prod'('type.num.num','type.num.num')),X0) != s('type.pair.prod'(fun('type.num.num',fun('type.num.num',bool)),'type.pair.prod'('type.num.num','type.num.num')),'const.pair.,_2'(s(fun('type.num.num',fun('type.num.num',bool)),X1),s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X2))),s('type.num.num','const.num.|48|_0'))))))),
  inference(rectify,[],[f94])).
fof(f94,plain,(
  ? [X0] : ((? [X8] : s('type.pair.prod'(fun('type.num.num',fun('type.num.num',bool)),'type.pair.prod'('type.num.num','type.num.num')),X0) = s('type.pair.prod'(fun('type.num.num',fun('type.num.num',bool)),'type.pair.prod'('type.num.num','type.num.num')),'const.pair.,_2'(s(fun('type.num.num',fun('type.num.num',bool)),X8),s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0'))))) | ? [X6,X7] : s('type.pair.prod'(fun('type.num.num',fun('type.num.num',bool)),'type.pair.prod'('type.num.num','type.num.num')),X0) = s('type.pair.prod'(fun('type.num.num',fun('type.num.num',bool)),'type.pair.prod'('type.num.num','type.num.num')),'const.pair.,_2'(s(fun('type.num.num',fun('type.num.num',bool)),X6),s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num',X7))))))) | ? [X4,X5] : s('type.pair.prod'(fun('type.num.num',fun('type.num.num',bool)),'type.pair.prod'('type.num.num','type.num.num')),X0) = s('type.pair.prod'(fun('type.num.num',fun('type.num.num',bool)),'type.pair.prod'('type.num.num','type.num.num')),'const.pair.,_2'(s(fun('type.num.num',fun('type.num.num',bool)),X4),s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X5))),s('type.num.num','const.num.|48|_0'))))) | ? [X1,X2,X3] : s('type.pair.prod'(fun('type.num.num',fun('type.num.num',bool)),'type.pair.prod'('type.num.num','type.num.num')),X0) = s('type.pair.prod'(fun('type.num.num',fun('type.num.num',bool)),'type.pair.prod'('type.num.num','type.num.num')),'const.pair.,_2'(s(fun('type.num.num',fun('type.num.num',bool)),X1),s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X2))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X3)))))))) & ! [X16] : s('type.pair.prod'(fun('type.num.num',fun('type.num.num',bool)),'type.pair.prod'('type.num.num','type.num.num')),X0) != s('type.pair.prod'(fun('type.num.num',fun('type.num.num',bool)),'type.pair.prod'('type.num.num','type.num.num')),'const.pair.,_2'(s(fun('type.num.num',fun('type.num.num',bool)),X16),s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0'))))) & ! [X13,X14,X15] : s('type.pair.prod'(fun('type.num.num',fun('type.num.num',bool)),'type.pair.prod'('type.num.num','type.num.num')),X0) != s('type.pair.prod'(fun('type.num.num',fun('type.num.num',bool)),'type.pair.prod'('type.num.num','type.num.num')),'const.pair.,_2'(s(fun('type.num.num',fun('type.num.num',bool)),X13),s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X14))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X15))))))) & ! [X11,X12] : s('type.pair.prod'(fun('type.num.num',fun('type.num.num',bool)),'type.pair.prod'('type.num.num','type.num.num')),X0) != s('type.pair.prod'(fun('type.num.num',fun('type.num.num',bool)),'type.pair.prod'('type.num.num','type.num.num')),'const.pair.,_2'(s(fun('type.num.num',fun('type.num.num',bool)),X11),s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num',X12))))))) & ! [X9,X10] : s('type.pair.prod'(fun('type.num.num',fun('type.num.num',bool)),'type.pair.prod'('type.num.num','type.num.num')),X0) != s('type.pair.prod'(fun('type.num.num',fun('type.num.num',bool)),'type.pair.prod'('type.num.num','type.num.num')),'const.pair.,_2'(s(fun('type.num.num',fun('type.num.num',bool)),X9),s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X10))),s('type.num.num','const.num.|48|_0'))))))),
  inference(flattening,[],[f93])).
fof(f93,plain,(
  ? [X0] : ((? [X8] : s('type.pair.prod'(fun('type.num.num',fun('type.num.num',bool)),'type.pair.prod'('type.num.num','type.num.num')),X0) = s('type.pair.prod'(fun('type.num.num',fun('type.num.num',bool)),'type.pair.prod'('type.num.num','type.num.num')),'const.pair.,_2'(s(fun('type.num.num',fun('type.num.num',bool)),X8),s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0'))))) | ? [X6,X7] : s('type.pair.prod'(fun('type.num.num',fun('type.num.num',bool)),'type.pair.prod'('type.num.num','type.num.num')),X0) = s('type.pair.prod'(fun('type.num.num',fun('type.num.num',bool)),'type.pair.prod'('type.num.num','type.num.num')),'const.pair.,_2'(s(fun('type.num.num',fun('type.num.num',bool)),X6),s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num',X7))))))) | ? [X4,X5] : s('type.pair.prod'(fun('type.num.num',fun('type.num.num',bool)),'type.pair.prod'('type.num.num','type.num.num')),X0) = s('type.pair.prod'(fun('type.num.num',fun('type.num.num',bool)),'type.pair.prod'('type.num.num','type.num.num')),'const.pair.,_2'(s(fun('type.num.num',fun('type.num.num',bool)),X4),s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X5))),s('type.num.num','const.num.|48|_0'))))) | ? [X1,X2,X3] : s('type.pair.prod'(fun('type.num.num',fun('type.num.num',bool)),'type.pair.prod'('type.num.num','type.num.num')),X0) = s('type.pair.prod'(fun('type.num.num',fun('type.num.num',bool)),'type.pair.prod'('type.num.num','type.num.num')),'const.pair.,_2'(s(fun('type.num.num',fun('type.num.num',bool)),X1),s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X2))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X3)))))))) & (! [X16] : s('type.pair.prod'(fun('type.num.num',fun('type.num.num',bool)),'type.pair.prod'('type.num.num','type.num.num')),X0) != s('type.pair.prod'(fun('type.num.num',fun('type.num.num',bool)),'type.pair.prod'('type.num.num','type.num.num')),'const.pair.,_2'(s(fun('type.num.num',fun('type.num.num',bool)),X16),s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0'))))) & ! [X13,X14,X15] : s('type.pair.prod'(fun('type.num.num',fun('type.num.num',bool)),'type.pair.prod'('type.num.num','type.num.num')),X0) != s('type.pair.prod'(fun('type.num.num',fun('type.num.num',bool)),'type.pair.prod'('type.num.num','type.num.num')),'const.pair.,_2'(s(fun('type.num.num',fun('type.num.num',bool)),X13),s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X14))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X15))))))) & ! [X11,X12] : s('type.pair.prod'(fun('type.num.num',fun('type.num.num',bool)),'type.pair.prod'('type.num.num','type.num.num')),X0) != s('type.pair.prod'(fun('type.num.num',fun('type.num.num',bool)),'type.pair.prod'('type.num.num','type.num.num')),'const.pair.,_2'(s(fun('type.num.num',fun('type.num.num',bool)),X11),s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num',X12))))))) & ! [X9,X10] : s('type.pair.prod'(fun('type.num.num',fun('type.num.num',bool)),'type.pair.prod'('type.num.num','type.num.num')),X0) != s('type.pair.prod'(fun('type.num.num',fun('type.num.num',bool)),'type.pair.prod'('type.num.num','type.num.num')),'const.pair.,_2'(s(fun('type.num.num',fun('type.num.num',bool)),X9),s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X10))),s('type.num.num','const.num.|48|_0')))))))),
  inference(ennf_transformation,[],[f38])).
fof(f38,plain,(
  ~! [X0] : ((? [X8] : s('type.pair.prod'(fun('type.num.num',fun('type.num.num',bool)),'type.pair.prod'('type.num.num','type.num.num')),X0) = s('type.pair.prod'(fun('type.num.num',fun('type.num.num',bool)),'type.pair.prod'('type.num.num','type.num.num')),'const.pair.,_2'(s(fun('type.num.num',fun('type.num.num',bool)),X8),s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0'))))) | ? [X6,X7] : s('type.pair.prod'(fun('type.num.num',fun('type.num.num',bool)),'type.pair.prod'('type.num.num','type.num.num')),X0) = s('type.pair.prod'(fun('type.num.num',fun('type.num.num',bool)),'type.pair.prod'('type.num.num','type.num.num')),'const.pair.,_2'(s(fun('type.num.num',fun('type.num.num',bool)),X6),s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num',X7))))))) | ? [X4,X5] : s('type.pair.prod'(fun('type.num.num',fun('type.num.num',bool)),'type.pair.prod'('type.num.num','type.num.num')),X0) = s('type.pair.prod'(fun('type.num.num',fun('type.num.num',bool)),'type.pair.prod'('type.num.num','type.num.num')),'const.pair.,_2'(s(fun('type.num.num',fun('type.num.num',bool)),X4),s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X5))),s('type.num.num','const.num.|48|_0'))))) | ? [X1,X2,X3] : s('type.pair.prod'(fun('type.num.num',fun('type.num.num',bool)),'type.pair.prod'('type.num.num','type.num.num')),X0) = s('type.pair.prod'(fun('type.num.num',fun('type.num.num',bool)),'type.pair.prod'('type.num.num','type.num.num')),'const.pair.,_2'(s(fun('type.num.num',fun('type.num.num',bool)),X1),s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X2))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X3)))))))) => (? [X16] : s('type.pair.prod'(fun('type.num.num',fun('type.num.num',bool)),'type.pair.prod'('type.num.num','type.num.num')),X0) = s('type.pair.prod'(fun('type.num.num',fun('type.num.num',bool)),'type.pair.prod'('type.num.num','type.num.num')),'const.pair.,_2'(s(fun('type.num.num',fun('type.num.num',bool)),X16),s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0'))))) | ? [X13,X14,X15] : s('type.pair.prod'(fun('type.num.num',fun('type.num.num',bool)),'type.pair.prod'('type.num.num','type.num.num')),X0) = s('type.pair.prod'(fun('type.num.num',fun('type.num.num',bool)),'type.pair.prod'('type.num.num','type.num.num')),'const.pair.,_2'(s(fun('type.num.num',fun('type.num.num',bool)),X13),s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X14))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X15))))))) | ? [X11,X12] : s('type.pair.prod'(fun('type.num.num',fun('type.num.num',bool)),'type.pair.prod'('type.num.num','type.num.num')),X0) = s('type.pair.prod'(fun('type.num.num',fun('type.num.num',bool)),'type.pair.prod'('type.num.num','type.num.num')),'const.pair.,_2'(s(fun('type.num.num',fun('type.num.num',bool)),X11),s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num',X12))))))) | ? [X9,X10] : s('type.pair.prod'(fun('type.num.num',fun('type.num.num',bool)),'type.pair.prod'('type.num.num','type.num.num')),X0) = s('type.pair.prod'(fun('type.num.num',fun('type.num.num',bool)),'type.pair.prod'('type.num.num','type.num.num')),'const.pair.,_2'(s(fun('type.num.num',fun('type.num.num',bool)),X9),s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X10))),s('type.num.num','const.num.|48|_0')))))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : ((? [X7] : s('type.pair.prod'(fun('type.num.num',fun('type.num.num',bool)),'type.pair.prod'('type.num.num','type.num.num')),X6) = s('type.pair.prod'(fun('type.num.num',fun('type.num.num',bool)),'type.pair.prod'('type.num.num','type.num.num')),'const.pair.,_2'(s(fun('type.num.num',fun('type.num.num',bool)),X7),s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0'))))) | ? [X7,X8] : s('type.pair.prod'(fun('type.num.num',fun('type.num.num',bool)),'type.pair.prod'('type.num.num','type.num.num')),X6) = s('type.pair.prod'(fun('type.num.num',fun('type.num.num',bool)),'type.pair.prod'('type.num.num','type.num.num')),'const.pair.,_2'(s(fun('type.num.num',fun('type.num.num',bool)),X7),s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num',X8))))))) | ? [X7,X9] : s('type.pair.prod'(fun('type.num.num',fun('type.num.num',bool)),'type.pair.prod'('type.num.num','type.num.num')),X6) = s('type.pair.prod'(fun('type.num.num',fun('type.num.num',bool)),'type.pair.prod'('type.num.num','type.num.num')),'const.pair.,_2'(s(fun('type.num.num',fun('type.num.num',bool)),X7),s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X9))),s('type.num.num','const.num.|48|_0'))))) | ? [X7,X10,X11] : s('type.pair.prod'(fun('type.num.num',fun('type.num.num',bool)),'type.pair.prod'('type.num.num','type.num.num')),X6) = s('type.pair.prod'(fun('type.num.num',fun('type.num.num',bool)),'type.pair.prod'('type.num.num','type.num.num')),'const.pair.,_2'(s(fun('type.num.num',fun('type.num.num',bool)),X7),s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X10))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X11)))))))) => (? [X7] : s('type.pair.prod'(fun('type.num.num',fun('type.num.num',bool)),'type.pair.prod'('type.num.num','type.num.num')),X6) = s('type.pair.prod'(fun('type.num.num',fun('type.num.num',bool)),'type.pair.prod'('type.num.num','type.num.num')),'const.pair.,_2'(s(fun('type.num.num',fun('type.num.num',bool)),X7),s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0'))))) | ? [X7,X10,X11] : s('type.pair.prod'(fun('type.num.num',fun('type.num.num',bool)),'type.pair.prod'('type.num.num','type.num.num')),X6) = s('type.pair.prod'(fun('type.num.num',fun('type.num.num',bool)),'type.pair.prod'('type.num.num','type.num.num')),'const.pair.,_2'(s(fun('type.num.num',fun('type.num.num',bool)),X7),s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X10))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X11))))))) | ? [X7,X8] : s('type.pair.prod'(fun('type.num.num',fun('type.num.num',bool)),'type.pair.prod'('type.num.num','type.num.num')),X6) = s('type.pair.prod'(fun('type.num.num',fun('type.num.num',bool)),'type.pair.prod'('type.num.num','type.num.num')),'const.pair.,_2'(s(fun('type.num.num',fun('type.num.num',bool)),X7),s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num',X8))))))) | ? [X7,X9] : s('type.pair.prod'(fun('type.num.num',fun('type.num.num',bool)),'type.pair.prod'('type.num.num','type.num.num')),X6) = s('type.pair.prod'(fun('type.num.num',fun('type.num.num',bool)),'type.pair.prod'('type.num.num','type.num.num')),'const.pair.,_2'(s(fun('type.num.num',fun('type.num.num',bool)),X7),s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X9))),s('type.num.num','const.num.|48|_0')))))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : ((? [X7] : s('type.pair.prod'(fun('type.num.num',fun('type.num.num',bool)),'type.pair.prod'('type.num.num','type.num.num')),X6) = s('type.pair.prod'(fun('type.num.num',fun('type.num.num',bool)),'type.pair.prod'('type.num.num','type.num.num')),'const.pair.,_2'(s(fun('type.num.num',fun('type.num.num',bool)),X7),s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0'))))) | ? [X7,X8] : s('type.pair.prod'(fun('type.num.num',fun('type.num.num',bool)),'type.pair.prod'('type.num.num','type.num.num')),X6) = s('type.pair.prod'(fun('type.num.num',fun('type.num.num',bool)),'type.pair.prod'('type.num.num','type.num.num')),'const.pair.,_2'(s(fun('type.num.num',fun('type.num.num',bool)),X7),s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num',X8))))))) | ? [X7,X9] : s('type.pair.prod'(fun('type.num.num',fun('type.num.num',bool)),'type.pair.prod'('type.num.num','type.num.num')),X6) = s('type.pair.prod'(fun('type.num.num',fun('type.num.num',bool)),'type.pair.prod'('type.num.num','type.num.num')),'const.pair.,_2'(s(fun('type.num.num',fun('type.num.num',bool)),X7),s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X9))),s('type.num.num','const.num.|48|_0'))))) | ? [X7,X10,X11] : s('type.pair.prod'(fun('type.num.num',fun('type.num.num',bool)),'type.pair.prod'('type.num.num','type.num.num')),X6) = s('type.pair.prod'(fun('type.num.num',fun('type.num.num',bool)),'type.pair.prod'('type.num.num','type.num.num')),'const.pair.,_2'(s(fun('type.num.num',fun('type.num.num',bool)),X7),s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X10))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X11)))))))) => (? [X7] : s('type.pair.prod'(fun('type.num.num',fun('type.num.num',bool)),'type.pair.prod'('type.num.num','type.num.num')),X6) = s('type.pair.prod'(fun('type.num.num',fun('type.num.num',bool)),'type.pair.prod'('type.num.num','type.num.num')),'const.pair.,_2'(s(fun('type.num.num',fun('type.num.num',bool)),X7),s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0'))))) | ? [X7,X10,X11] : s('type.pair.prod'(fun('type.num.num',fun('type.num.num',bool)),'type.pair.prod'('type.num.num','type.num.num')),X6) = s('type.pair.prod'(fun('type.num.num',fun('type.num.num',bool)),'type.pair.prod'('type.num.num','type.num.num')),'const.pair.,_2'(s(fun('type.num.num',fun('type.num.num',bool)),X7),s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X10))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X11))))))) | ? [X7,X8] : s('type.pair.prod'(fun('type.num.num',fun('type.num.num',bool)),'type.pair.prod'('type.num.num','type.num.num')),X6) = s('type.pair.prod'(fun('type.num.num',fun('type.num.num',bool)),'type.pair.prod'('type.num.num','type.num.num')),'const.pair.,_2'(s(fun('type.num.num',fun('type.num.num',bool)),X7),s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num',X8))))))) | ? [X7,X9] : s('type.pair.prod'(fun('type.num.num',fun('type.num.num',bool)),'type.pair.prod'('type.num.num','type.num.num')),X6) = s('type.pair.prod'(fun('type.num.num',fun('type.num.num',bool)),'type.pair.prod'('type.num.num','type.num.num')),'const.pair.,_2'(s(fun('type.num.num',fun('type.num.num',bool)),X7),s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X9))),s('type.num.num','const.num.|48|_0')))))))),
  file('thm.exh_to_patProof.exh_to_patProof_3|49|_prove_ltb','thm.exh_to_patProof.exh_to_patProof_3|49|_prove_ltb')).
fof(f4643,plain,(
  $false | $spl6),
  inference(subsumption_resolution,[],[f395,f218])).
fof(f218,plain,(
  ( ! [X6,X7,X5] : (s('type.pair.prod'(fun('type.num.num',fun('type.num.num',bool)),'type.pair.prod'('type.num.num','type.num.num')),sK12) != s('type.pair.prod'(fun('type.num.num',fun('type.num.num',bool)),'type.pair.prod'('type.num.num','type.num.num')),'const.pair.,_2'(s(fun('type.num.num',fun('type.num.num',bool)),X5),s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X6))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X7)))))))) )),
  inference(cnf_transformation,[],[f135])).
fof(f4644,plain,(
  $false | $spl4),
  inference(subsumption_resolution,[],[f393,f220])).
fof(f220,plain,(
  ( ! [X2,X1] : (s('type.pair.prod'(fun('type.num.num',fun('type.num.num',bool)),'type.pair.prod'('type.num.num','type.num.num')),sK12) != s('type.pair.prod'(fun('type.num.num',fun('type.num.num',bool)),'type.pair.prod'('type.num.num','type.num.num')),'const.pair.,_2'(s(fun('type.num.num',fun('type.num.num',bool)),X1),s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X2))),s('type.num.num','const.num.|48|_0')))))) )),
  inference(cnf_transformation,[],[f135])).
fof(f389,plain,(
  s('type.pair.prod'(fun('type.num.num',fun('type.num.num',bool)),'type.pair.prod'('type.num.num','type.num.num')),sK12) = s('type.pair.prod'(fun('type.num.num',fun('type.num.num',bool)),'type.pair.prod'('type.num.num','type.num.num')),'const.pair.,_2'(s(fun('type.num.num',fun('type.num.num',bool)),sK13),s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0'))))) | $spl0),
  inference(cnf_transformation,[],[f389_D])).
fof(f389_D,plain,(
  s('type.pair.prod'(fun('type.num.num',fun('type.num.num',bool)),'type.pair.prod'('type.num.num','type.num.num')),sK12) = s('type.pair.prod'(fun('type.num.num',fun('type.num.num',bool)),'type.pair.prod'('type.num.num','type.num.num')),'const.pair.,_2'(s(fun('type.num.num',fun('type.num.num',bool)),sK13),s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0'))))) <=> ~$spl0),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl0])])).
fof(f391,plain,(
  s('type.pair.prod'(fun('type.num.num',fun('type.num.num',bool)),'type.pair.prod'('type.num.num','type.num.num')),sK12) = s('type.pair.prod'(fun('type.num.num',fun('type.num.num',bool)),'type.pair.prod'('type.num.num','type.num.num')),'const.pair.,_2'(s(fun('type.num.num',fun('type.num.num',bool)),sK14),s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num',sK15))))))) | $spl2),
  inference(cnf_transformation,[],[f391_D])).
fof(f391_D,plain,(
  s('type.pair.prod'(fun('type.num.num',fun('type.num.num',bool)),'type.pair.prod'('type.num.num','type.num.num')),sK12) = s('type.pair.prod'(fun('type.num.num',fun('type.num.num',bool)),'type.pair.prod'('type.num.num','type.num.num')),'const.pair.,_2'(s(fun('type.num.num',fun('type.num.num',bool)),sK14),s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num',sK15))))))) <=> ~$spl2),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl2])])).
fof(f393,plain,(
  s('type.pair.prod'(fun('type.num.num',fun('type.num.num',bool)),'type.pair.prod'('type.num.num','type.num.num')),sK12) = s('type.pair.prod'(fun('type.num.num',fun('type.num.num',bool)),'type.pair.prod'('type.num.num','type.num.num')),'const.pair.,_2'(s(fun('type.num.num',fun('type.num.num',bool)),sK16),s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',sK17))),s('type.num.num','const.num.|48|_0'))))) | $spl4),
  inference(cnf_transformation,[],[f393_D])).
fof(f393_D,plain,(
  s('type.pair.prod'(fun('type.num.num',fun('type.num.num',bool)),'type.pair.prod'('type.num.num','type.num.num')),sK12) = s('type.pair.prod'(fun('type.num.num',fun('type.num.num',bool)),'type.pair.prod'('type.num.num','type.num.num')),'const.pair.,_2'(s(fun('type.num.num',fun('type.num.num',bool)),sK16),s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',sK17))),s('type.num.num','const.num.|48|_0'))))) <=> ~$spl4),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl4])])).
fof(f395,plain,(
  s('type.pair.prod'(fun('type.num.num',fun('type.num.num',bool)),'type.pair.prod'('type.num.num','type.num.num')),sK12) = s('type.pair.prod'(fun('type.num.num',fun('type.num.num',bool)),'type.pair.prod'('type.num.num','type.num.num')),'const.pair.,_2'(s(fun('type.num.num',fun('type.num.num',bool)),sK18),s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',sK19))),s('type.num.num','const.num.SUC_1'(s('type.num.num',sK20))))))) | $spl6),
  inference(cnf_transformation,[],[f395_D])).
fof(f395_D,plain,(
  s('type.pair.prod'(fun('type.num.num',fun('type.num.num',bool)),'type.pair.prod'('type.num.num','type.num.num')),sK12) = s('type.pair.prod'(fun('type.num.num',fun('type.num.num',bool)),'type.pair.prod'('type.num.num','type.num.num')),'const.pair.,_2'(s(fun('type.num.num',fun('type.num.num',bool)),sK18),s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',sK19))),s('type.num.num','const.num.SUC_1'(s('type.num.num',sK20))))))) <=> ~$spl6),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl6])])).
fof(f216,plain,(
  s('type.pair.prod'(fun('type.num.num',fun('type.num.num',bool)),'type.pair.prod'('type.num.num','type.num.num')),sK12) = s('type.pair.prod'(fun('type.num.num',fun('type.num.num',bool)),'type.pair.prod'('type.num.num','type.num.num')),'const.pair.,_2'(s(fun('type.num.num',fun('type.num.num',bool)),sK18),s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',sK19))),s('type.num.num','const.num.SUC_1'(s('type.num.num',sK20))))))) | s('type.pair.prod'(fun('type.num.num',fun('type.num.num',bool)),'type.pair.prod'('type.num.num','type.num.num')),sK12) = s('type.pair.prod'(fun('type.num.num',fun('type.num.num',bool)),'type.pair.prod'('type.num.num','type.num.num')),'const.pair.,_2'(s(fun('type.num.num',fun('type.num.num',bool)),sK16),s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',sK17))),s('type.num.num','const.num.|48|_0'))))) | s('type.pair.prod'(fun('type.num.num',fun('type.num.num',bool)),'type.pair.prod'('type.num.num','type.num.num')),sK12) = s('type.pair.prod'(fun('type.num.num',fun('type.num.num',bool)),'type.pair.prod'('type.num.num','type.num.num')),'const.pair.,_2'(s(fun('type.num.num',fun('type.num.num',bool)),sK14),s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num',sK15))))))) | s('type.pair.prod'(fun('type.num.num',fun('type.num.num',bool)),'type.pair.prod'('type.num.num','type.num.num')),sK12) = s('type.pair.prod'(fun('type.num.num',fun('type.num.num',bool)),'type.pair.prod'('type.num.num','type.num.num')),'const.pair.,_2'(s(fun('type.num.num',fun('type.num.num',bool)),sK13),s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')))))),
  inference(cnf_transformation,[],[f135])).
fof(f4646,plain,(
  $false | $spl2),
  inference(subsumption_resolution,[],[f391,f219])).
fof(f219,plain,(
  ( ! [X4,X3] : (s('type.pair.prod'(fun('type.num.num',fun('type.num.num',bool)),'type.pair.prod'('type.num.num','type.num.num')),sK12) != s('type.pair.prod'(fun('type.num.num',fun('type.num.num',bool)),'type.pair.prod'('type.num.num','type.num.num')),'const.pair.,_2'(s(fun('type.num.num',fun('type.num.num',bool)),X3),s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num',X4)))))))) )),
  inference(cnf_transformation,[],[f135])).
% SZS output end Proof for thm.exh_to_patProof
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 366
% Passive clauses: 1496
% Generated clauses: 4424
% Final active clauses: 366
% Final passive clauses: 958
% Input formulas: 36
% Initial clauses: 168
% 
% Duplicate literals: 153
% Trivial inequalities: 21
% Fw subsumption resolutions: 294
% 
% Simple tautologies: 143
% Equational tautologies: 30
% Forward subsumptions: 2285
% 
% Binary resolution: 2749
% Factoring: 769
% Forward superposition: 152
% Backward superposition: 59
% Self superposition: 2
% Equality factoring: 2
% Equality resolution: 12
% 
% Split clauses: 98
% Split components: 199
% SAT solver clauses: 184
% SAT solver unit clauses: 10
% SAT solver binary clauses: 37
% SAT solver learnt clauses: 1
% 
% Sat splits: 98
% Sat splitting refutations: 4
% 
% TWLsolver clauses: 183
% TWLsolver calls for satisfiability: 155
% 
% Memory used [KB]: 2430
% Time elapsed: 0.108 s
% ------------------------------
% ------------------------------
% Success in time 0.11 s
