Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 149 next slice time: 5
dis+11_7_3 on thm.wordSem
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.wordSem
% SZS output start Proof for thm.wordSem
fof(f4327,plain,(
  $false),
  inference(subsumption_resolution,[],[f19,f24])).
fof(f24,plain,(
  ( ! [X6,X4,X2,X0,X14,X12,X10,X8,X7,X5,X3,X1,X15,X13,X11,X9,X16] : (s('type.wordSem.state'(X1,X0),'const.wordSem.state_locals_fupd_2'(s(fun('type.sptree.spt'('type.wordSem.word_loc'(X1)),'type.sptree.spt'('type.wordSem.word_loc'(X1))),'const.combin.K_1'(s('type.sptree.spt'('type.wordSem.word_loc'(X1)),X3))),s('type.wordSem.state'(X1,X0),'const.wordSem.state_store_fupd_2'(s(fun('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))),'const.combin.K_1'(s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)),X10))),s('type.wordSem.state'(X1,X0),'const.wordSem.state_stack_fupd_2'(s(fun('type.list.list'('type.wordSem.stack_frame'(X1)),'type.list.list'('type.wordSem.stack_frame'(X1))),'const.combin.K_1'(s('type.list.list'('type.wordSem.stack_frame'(X1)),X9))),s('type.wordSem.state'(X1,X0),'const.wordSem.state_memory_fupd_2'(s(fun(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1))),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),X11))),s('type.wordSem.state'(X1,X0),'const.wordSem.state_mdomain_fupd_2'(s(fun(fun('type.fcp.cart'(bool,X1),bool),fun('type.fcp.cart'(bool,X1),bool)),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,X1),bool),X12))),s('type.wordSem.state'(X1,X0),'const.wordSem.state_permute_fupd_2'(s(fun(fun('type.num.num',fun('type.num.num','type.num.num')),fun('type.num.num',fun('type.num.num','type.num.num'))),'const.combin.K_1'(s(fun('type.num.num',fun('type.num.num','type.num.num')),X13))),s('type.wordSem.state'(X1,X0),'const.wordSem.state_gc_fun_fupd_2'(s(fun(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)))))),fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))))),'const.combin.K_1'(s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)))))),X14))),s('type.wordSem.state'(X1,X0),'const.wordSem.state_handler_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X6))),s('type.wordSem.state'(X1,X0),'const.wordSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X7))),s('type.wordSem.state'(X1,X0),'const.wordSem.state_termdep_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X8))),s('type.wordSem.state'(X1,X0),'const.wordSem.state_code_fupd_2'(s(fun('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X1))),'type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X1)))),'const.combin.K_1'(s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X1))),X4))),s('type.wordSem.state'(X1,X0),'const.wordSem.state_be_fupd_2'(s(fun(bool,bool),'const.combin.K_1'(s(bool,X16))),s('type.wordSem.state'(X1,X0),'const.wordSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(X2),'type.ffi.ffi_state'(X0)),'const.combin.K_1'(s('type.ffi.ffi_state'(X0),X15))),s('type.wordSem.state'(X1,X2),'const.bool.ARB_0'))))))))))))))))))))))))))) = s('type.wordSem.state'(X1,X0),'const.wordSem.state_locals_fupd_2'(s(fun('type.sptree.spt'('type.wordSem.word_loc'(X1)),'type.sptree.spt'('type.wordSem.word_loc'(X1))),'const.combin.K_1'(s('type.sptree.spt'('type.wordSem.word_loc'(X1)),X3))),s('type.wordSem.state'(X1,X0),'const.wordSem.state_store_fupd_2'(s(fun('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))),'const.combin.K_1'(s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)),X10))),s('type.wordSem.state'(X1,X0),'const.wordSem.state_stack_fupd_2'(s(fun('type.list.list'('type.wordSem.stack_frame'(X1)),'type.list.list'('type.wordSem.stack_frame'(X1))),'const.combin.K_1'(s('type.list.list'('type.wordSem.stack_frame'(X1)),X9))),s('type.wordSem.state'(X1,X0),'const.wordSem.state_memory_fupd_2'(s(fun(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1))),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),X11))),s('type.wordSem.state'(X1,X0),'const.wordSem.state_mdomain_fupd_2'(s(fun(fun('type.fcp.cart'(bool,X1),bool),fun('type.fcp.cart'(bool,X1),bool)),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,X1),bool),X12))),s('type.wordSem.state'(X1,X0),'const.wordSem.state_permute_fupd_2'(s(fun(fun('type.num.num',fun('type.num.num','type.num.num')),fun('type.num.num',fun('type.num.num','type.num.num'))),'const.combin.K_1'(s(fun('type.num.num',fun('type.num.num','type.num.num')),X13))),s('type.wordSem.state'(X1,X0),'const.wordSem.state_gc_fun_fupd_2'(s(fun(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)))))),fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))))),'const.combin.K_1'(s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)))))),X14))),s('type.wordSem.state'(X1,X0),'const.wordSem.state_handler_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X6))),s('type.wordSem.state'(X1,X0),'const.wordSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X7))),s('type.wordSem.state'(X1,X0),'const.wordSem.state_termdep_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X8))),s('type.wordSem.state'(X1,X0),'const.wordSem.state_code_fupd_2'(s(fun('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X1))),'type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X1)))),'const.combin.K_1'(s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X1))),X4))),s('type.wordSem.state'(X1,X0),'const.wordSem.state_be_fupd_2'(s(fun(bool,bool),'const.combin.K_1'(s(bool,X16))),s('type.wordSem.state'(X1,X0),'const.wordSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(X2),'type.ffi.ffi_state'(X0)),'const.combin.K_1'(s('type.ffi.ffi_state'(X0),X15))),s('type.wordSem.state'(X1,X2),X5)))))))))))))))))))))))))))) )),
  inference(cnf_transformation,[],[f14])).
fof(f14,plain,(
  ! [X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16] : s('type.wordSem.state'(X1,X0),'const.wordSem.state_locals_fupd_2'(s(fun('type.sptree.spt'('type.wordSem.word_loc'(X1)),'type.sptree.spt'('type.wordSem.word_loc'(X1))),'const.combin.K_1'(s('type.sptree.spt'('type.wordSem.word_loc'(X1)),X3))),s('type.wordSem.state'(X1,X0),'const.wordSem.state_store_fupd_2'(s(fun('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))),'const.combin.K_1'(s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)),X10))),s('type.wordSem.state'(X1,X0),'const.wordSem.state_stack_fupd_2'(s(fun('type.list.list'('type.wordSem.stack_frame'(X1)),'type.list.list'('type.wordSem.stack_frame'(X1))),'const.combin.K_1'(s('type.list.list'('type.wordSem.stack_frame'(X1)),X9))),s('type.wordSem.state'(X1,X0),'const.wordSem.state_memory_fupd_2'(s(fun(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1))),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),X11))),s('type.wordSem.state'(X1,X0),'const.wordSem.state_mdomain_fupd_2'(s(fun(fun('type.fcp.cart'(bool,X1),bool),fun('type.fcp.cart'(bool,X1),bool)),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,X1),bool),X12))),s('type.wordSem.state'(X1,X0),'const.wordSem.state_permute_fupd_2'(s(fun(fun('type.num.num',fun('type.num.num','type.num.num')),fun('type.num.num',fun('type.num.num','type.num.num'))),'const.combin.K_1'(s(fun('type.num.num',fun('type.num.num','type.num.num')),X13))),s('type.wordSem.state'(X1,X0),'const.wordSem.state_gc_fun_fupd_2'(s(fun(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)))))),fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))))),'const.combin.K_1'(s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)))))),X14))),s('type.wordSem.state'(X1,X0),'const.wordSem.state_handler_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X6))),s('type.wordSem.state'(X1,X0),'const.wordSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X7))),s('type.wordSem.state'(X1,X0),'const.wordSem.state_termdep_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X8))),s('type.wordSem.state'(X1,X0),'const.wordSem.state_code_fupd_2'(s(fun('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X1))),'type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X1)))),'const.combin.K_1'(s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X1))),X4))),s('type.wordSem.state'(X1,X0),'const.wordSem.state_be_fupd_2'(s(fun(bool,bool),'const.combin.K_1'(s(bool,X16))),s('type.wordSem.state'(X1,X0),'const.wordSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(X2),'type.ffi.ffi_state'(X0)),'const.combin.K_1'(s('type.ffi.ffi_state'(X0),X15))),s('type.wordSem.state'(X1,X2),'const.bool.ARB_0'))))))))))))))))))))))))))) = s('type.wordSem.state'(X1,X0),'const.wordSem.state_locals_fupd_2'(s(fun('type.sptree.spt'('type.wordSem.word_loc'(X1)),'type.sptree.spt'('type.wordSem.word_loc'(X1))),'const.combin.K_1'(s('type.sptree.spt'('type.wordSem.word_loc'(X1)),X3))),s('type.wordSem.state'(X1,X0),'const.wordSem.state_store_fupd_2'(s(fun('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))),'const.combin.K_1'(s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)),X10))),s('type.wordSem.state'(X1,X0),'const.wordSem.state_stack_fupd_2'(s(fun('type.list.list'('type.wordSem.stack_frame'(X1)),'type.list.list'('type.wordSem.stack_frame'(X1))),'const.combin.K_1'(s('type.list.list'('type.wordSem.stack_frame'(X1)),X9))),s('type.wordSem.state'(X1,X0),'const.wordSem.state_memory_fupd_2'(s(fun(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1))),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),X11))),s('type.wordSem.state'(X1,X0),'const.wordSem.state_mdomain_fupd_2'(s(fun(fun('type.fcp.cart'(bool,X1),bool),fun('type.fcp.cart'(bool,X1),bool)),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,X1),bool),X12))),s('type.wordSem.state'(X1,X0),'const.wordSem.state_permute_fupd_2'(s(fun(fun('type.num.num',fun('type.num.num','type.num.num')),fun('type.num.num',fun('type.num.num','type.num.num'))),'const.combin.K_1'(s(fun('type.num.num',fun('type.num.num','type.num.num')),X13))),s('type.wordSem.state'(X1,X0),'const.wordSem.state_gc_fun_fupd_2'(s(fun(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)))))),fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))))),'const.combin.K_1'(s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)))))),X14))),s('type.wordSem.state'(X1,X0),'const.wordSem.state_handler_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X6))),s('type.wordSem.state'(X1,X0),'const.wordSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X7))),s('type.wordSem.state'(X1,X0),'const.wordSem.state_termdep_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X8))),s('type.wordSem.state'(X1,X0),'const.wordSem.state_code_fupd_2'(s(fun('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X1))),'type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X1)))),'const.combin.K_1'(s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X1))),X4))),s('type.wordSem.state'(X1,X0),'const.wordSem.state_be_fupd_2'(s(fun(bool,bool),'const.combin.K_1'(s(bool,X16))),s('type.wordSem.state'(X1,X0),'const.wordSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(X2),'type.ffi.ffi_state'(X0)),'const.combin.K_1'(s('type.ffi.ffi_state'(X0),X15))),s('type.wordSem.state'(X1,X2),X5)))))))))))))))))))))))))))),
  inference(flattening,[],[f13])).
fof(f13,plain,(
  ! [X0,X1,X2] : ! [X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16] : s('type.wordSem.state'(X1,X0),'const.wordSem.state_locals_fupd_2'(s(fun('type.sptree.spt'('type.wordSem.word_loc'(X1)),'type.sptree.spt'('type.wordSem.word_loc'(X1))),'const.combin.K_1'(s('type.sptree.spt'('type.wordSem.word_loc'(X1)),X3))),s('type.wordSem.state'(X1,X0),'const.wordSem.state_store_fupd_2'(s(fun('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))),'const.combin.K_1'(s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)),X10))),s('type.wordSem.state'(X1,X0),'const.wordSem.state_stack_fupd_2'(s(fun('type.list.list'('type.wordSem.stack_frame'(X1)),'type.list.list'('type.wordSem.stack_frame'(X1))),'const.combin.K_1'(s('type.list.list'('type.wordSem.stack_frame'(X1)),X9))),s('type.wordSem.state'(X1,X0),'const.wordSem.state_memory_fupd_2'(s(fun(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1))),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),X11))),s('type.wordSem.state'(X1,X0),'const.wordSem.state_mdomain_fupd_2'(s(fun(fun('type.fcp.cart'(bool,X1),bool),fun('type.fcp.cart'(bool,X1),bool)),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,X1),bool),X12))),s('type.wordSem.state'(X1,X0),'const.wordSem.state_permute_fupd_2'(s(fun(fun('type.num.num',fun('type.num.num','type.num.num')),fun('type.num.num',fun('type.num.num','type.num.num'))),'const.combin.K_1'(s(fun('type.num.num',fun('type.num.num','type.num.num')),X13))),s('type.wordSem.state'(X1,X0),'const.wordSem.state_gc_fun_fupd_2'(s(fun(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)))))),fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))))),'const.combin.K_1'(s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)))))),X14))),s('type.wordSem.state'(X1,X0),'const.wordSem.state_handler_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X6))),s('type.wordSem.state'(X1,X0),'const.wordSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X7))),s('type.wordSem.state'(X1,X0),'const.wordSem.state_termdep_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X8))),s('type.wordSem.state'(X1,X0),'const.wordSem.state_code_fupd_2'(s(fun('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X1))),'type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X1)))),'const.combin.K_1'(s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X1))),X4))),s('type.wordSem.state'(X1,X0),'const.wordSem.state_be_fupd_2'(s(fun(bool,bool),'const.combin.K_1'(s(bool,X16))),s('type.wordSem.state'(X1,X0),'const.wordSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(X2),'type.ffi.ffi_state'(X0)),'const.combin.K_1'(s('type.ffi.ffi_state'(X0),X15))),s('type.wordSem.state'(X1,X2),'const.bool.ARB_0'))))))))))))))))))))))))))) = s('type.wordSem.state'(X1,X0),'const.wordSem.state_locals_fupd_2'(s(fun('type.sptree.spt'('type.wordSem.word_loc'(X1)),'type.sptree.spt'('type.wordSem.word_loc'(X1))),'const.combin.K_1'(s('type.sptree.spt'('type.wordSem.word_loc'(X1)),X3))),s('type.wordSem.state'(X1,X0),'const.wordSem.state_store_fupd_2'(s(fun('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))),'const.combin.K_1'(s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)),X10))),s('type.wordSem.state'(X1,X0),'const.wordSem.state_stack_fupd_2'(s(fun('type.list.list'('type.wordSem.stack_frame'(X1)),'type.list.list'('type.wordSem.stack_frame'(X1))),'const.combin.K_1'(s('type.list.list'('type.wordSem.stack_frame'(X1)),X9))),s('type.wordSem.state'(X1,X0),'const.wordSem.state_memory_fupd_2'(s(fun(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1))),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),X11))),s('type.wordSem.state'(X1,X0),'const.wordSem.state_mdomain_fupd_2'(s(fun(fun('type.fcp.cart'(bool,X1),bool),fun('type.fcp.cart'(bool,X1),bool)),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,X1),bool),X12))),s('type.wordSem.state'(X1,X0),'const.wordSem.state_permute_fupd_2'(s(fun(fun('type.num.num',fun('type.num.num','type.num.num')),fun('type.num.num',fun('type.num.num','type.num.num'))),'const.combin.K_1'(s(fun('type.num.num',fun('type.num.num','type.num.num')),X13))),s('type.wordSem.state'(X1,X0),'const.wordSem.state_gc_fun_fupd_2'(s(fun(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)))))),fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))))),'const.combin.K_1'(s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)))))),X14))),s('type.wordSem.state'(X1,X0),'const.wordSem.state_handler_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X6))),s('type.wordSem.state'(X1,X0),'const.wordSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X7))),s('type.wordSem.state'(X1,X0),'const.wordSem.state_termdep_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X8))),s('type.wordSem.state'(X1,X0),'const.wordSem.state_code_fupd_2'(s(fun('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X1))),'type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X1)))),'const.combin.K_1'(s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X1))),X4))),s('type.wordSem.state'(X1,X0),'const.wordSem.state_be_fupd_2'(s(fun(bool,bool),'const.combin.K_1'(s(bool,X16))),s('type.wordSem.state'(X1,X0),'const.wordSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(X2),'type.ffi.ffi_state'(X0)),'const.combin.K_1'(s('type.ffi.ffi_state'(X0),X15))),s('type.wordSem.state'(X1,X2),X5)))))))))))))))))))))))))))),
  inference(rectify,[],[f7])).
fof(f7,axiom,(
  ! [X6,X7,X8] : ! [X10,X20,X9,X17,X18,X19,X12,X11,X13,X14,X15,X16,X22,X21] : s('type.wordSem.state'(X7,X6),'const.wordSem.state_locals_fupd_2'(s(fun('type.sptree.spt'('type.wordSem.word_loc'(X7)),'type.sptree.spt'('type.wordSem.word_loc'(X7))),'const.combin.K_1'(s('type.sptree.spt'('type.wordSem.word_loc'(X7)),X10))),s('type.wordSem.state'(X7,X6),'const.wordSem.state_store_fupd_2'(s(fun('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X7)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X7))),'const.combin.K_1'(s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X7)),X11))),s('type.wordSem.state'(X7,X6),'const.wordSem.state_stack_fupd_2'(s(fun('type.list.list'('type.wordSem.stack_frame'(X7)),'type.list.list'('type.wordSem.stack_frame'(X7))),'const.combin.K_1'(s('type.list.list'('type.wordSem.stack_frame'(X7)),X12))),s('type.wordSem.state'(X7,X6),'const.wordSem.state_memory_fupd_2'(s(fun(fun('type.fcp.cart'(bool,X7),'type.wordSem.word_loc'(X7)),fun('type.fcp.cart'(bool,X7),'type.wordSem.word_loc'(X7))),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,X7),'type.wordSem.word_loc'(X7)),X13))),s('type.wordSem.state'(X7,X6),'const.wordSem.state_mdomain_fupd_2'(s(fun(fun('type.fcp.cart'(bool,X7),bool),fun('type.fcp.cart'(bool,X7),bool)),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,X7),bool),X14))),s('type.wordSem.state'(X7,X6),'const.wordSem.state_permute_fupd_2'(s(fun(fun('type.num.num',fun('type.num.num','type.num.num')),fun('type.num.num',fun('type.num.num','type.num.num'))),'const.combin.K_1'(s(fun('type.num.num',fun('type.num.num','type.num.num')),X15))),s('type.wordSem.state'(X7,X6),'const.wordSem.state_gc_fun_fupd_2'(s(fun(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X7)),'type.pair.prod'(fun('type.fcp.cart'(bool,X7),'type.wordSem.word_loc'(X7)),'type.pair.prod'(fun('type.fcp.cart'(bool,X7),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X7))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X7)),'type.pair.prod'(fun('type.fcp.cart'(bool,X7),'type.wordSem.word_loc'(X7)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X7)))))),fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X7)),'type.pair.prod'(fun('type.fcp.cart'(bool,X7),'type.wordSem.word_loc'(X7)),'type.pair.prod'(fun('type.fcp.cart'(bool,X7),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X7))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X7)),'type.pair.prod'(fun('type.fcp.cart'(bool,X7),'type.wordSem.word_loc'(X7)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X7))))))),'const.combin.K_1'(s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X7)),'type.pair.prod'(fun('type.fcp.cart'(bool,X7),'type.wordSem.word_loc'(X7)),'type.pair.prod'(fun('type.fcp.cart'(bool,X7),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X7))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X7)),'type.pair.prod'(fun('type.fcp.cart'(bool,X7),'type.wordSem.word_loc'(X7)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X7)))))),X16))),s('type.wordSem.state'(X7,X6),'const.wordSem.state_handler_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X17))),s('type.wordSem.state'(X7,X6),'const.wordSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X18))),s('type.wordSem.state'(X7,X6),'const.wordSem.state_termdep_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X19))),s('type.wordSem.state'(X7,X6),'const.wordSem.state_code_fupd_2'(s(fun('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X7))),'type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X7)))),'const.combin.K_1'(s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X7))),X20))),s('type.wordSem.state'(X7,X6),'const.wordSem.state_be_fupd_2'(s(fun(bool,bool),'const.combin.K_1'(s(bool,X21))),s('type.wordSem.state'(X7,X6),'const.wordSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(X8),'type.ffi.ffi_state'(X6)),'const.combin.K_1'(s('type.ffi.ffi_state'(X6),X22))),s('type.wordSem.state'(X7,X8),'const.bool.ARB_0'))))))))))))))))))))))))))) = s('type.wordSem.state'(X7,X6),'const.wordSem.state_locals_fupd_2'(s(fun('type.sptree.spt'('type.wordSem.word_loc'(X7)),'type.sptree.spt'('type.wordSem.word_loc'(X7))),'const.combin.K_1'(s('type.sptree.spt'('type.wordSem.word_loc'(X7)),X10))),s('type.wordSem.state'(X7,X6),'const.wordSem.state_store_fupd_2'(s(fun('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X7)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X7))),'const.combin.K_1'(s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X7)),X11))),s('type.wordSem.state'(X7,X6),'const.wordSem.state_stack_fupd_2'(s(fun('type.list.list'('type.wordSem.stack_frame'(X7)),'type.list.list'('type.wordSem.stack_frame'(X7))),'const.combin.K_1'(s('type.list.list'('type.wordSem.stack_frame'(X7)),X12))),s('type.wordSem.state'(X7,X6),'const.wordSem.state_memory_fupd_2'(s(fun(fun('type.fcp.cart'(bool,X7),'type.wordSem.word_loc'(X7)),fun('type.fcp.cart'(bool,X7),'type.wordSem.word_loc'(X7))),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,X7),'type.wordSem.word_loc'(X7)),X13))),s('type.wordSem.state'(X7,X6),'const.wordSem.state_mdomain_fupd_2'(s(fun(fun('type.fcp.cart'(bool,X7),bool),fun('type.fcp.cart'(bool,X7),bool)),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,X7),bool),X14))),s('type.wordSem.state'(X7,X6),'const.wordSem.state_permute_fupd_2'(s(fun(fun('type.num.num',fun('type.num.num','type.num.num')),fun('type.num.num',fun('type.num.num','type.num.num'))),'const.combin.K_1'(s(fun('type.num.num',fun('type.num.num','type.num.num')),X15))),s('type.wordSem.state'(X7,X6),'const.wordSem.state_gc_fun_fupd_2'(s(fun(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X7)),'type.pair.prod'(fun('type.fcp.cart'(bool,X7),'type.wordSem.word_loc'(X7)),'type.pair.prod'(fun('type.fcp.cart'(bool,X7),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X7))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X7)),'type.pair.prod'(fun('type.fcp.cart'(bool,X7),'type.wordSem.word_loc'(X7)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X7)))))),fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X7)),'type.pair.prod'(fun('type.fcp.cart'(bool,X7),'type.wordSem.word_loc'(X7)),'type.pair.prod'(fun('type.fcp.cart'(bool,X7),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X7))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X7)),'type.pair.prod'(fun('type.fcp.cart'(bool,X7),'type.wordSem.word_loc'(X7)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X7))))))),'const.combin.K_1'(s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X7)),'type.pair.prod'(fun('type.fcp.cart'(bool,X7),'type.wordSem.word_loc'(X7)),'type.pair.prod'(fun('type.fcp.cart'(bool,X7),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X7))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X7)),'type.pair.prod'(fun('type.fcp.cart'(bool,X7),'type.wordSem.word_loc'(X7)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X7)))))),X16))),s('type.wordSem.state'(X7,X6),'const.wordSem.state_handler_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X17))),s('type.wordSem.state'(X7,X6),'const.wordSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X18))),s('type.wordSem.state'(X7,X6),'const.wordSem.state_termdep_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X19))),s('type.wordSem.state'(X7,X6),'const.wordSem.state_code_fupd_2'(s(fun('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X7))),'type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X7)))),'const.combin.K_1'(s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X7))),X20))),s('type.wordSem.state'(X7,X6),'const.wordSem.state_be_fupd_2'(s(fun(bool,bool),'const.combin.K_1'(s(bool,X21))),s('type.wordSem.state'(X7,X6),'const.wordSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(X8),'type.ffi.ffi_state'(X6)),'const.combin.K_1'(s('type.ffi.ffi_state'(X6),X22))),s('type.wordSem.state'(X7,X8),X9)))))))))))))))))))))))))))),
  file('thm.wordSem.state_updates_eq_literal','thm.wordSem.wordSem_336_prove_ltb')).
fof(f19,plain,(
  s('type.wordSem.state'(sK1,sK0),'const.wordSem.state_locals_fupd_2'(s(fun('type.sptree.spt'('type.wordSem.word_loc'(sK1)),'type.sptree.spt'('type.wordSem.word_loc'(sK1))),'const.combin.K_1'(s('type.sptree.spt'('type.wordSem.word_loc'(sK1)),sK4))),s('type.wordSem.state'(sK1,sK0),'const.wordSem.state_store_fupd_2'(s(fun('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK1))),'const.combin.K_1'(s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK1)),sK5))),s('type.wordSem.state'(sK1,sK0),'const.wordSem.state_stack_fupd_2'(s(fun('type.list.list'('type.wordSem.stack_frame'(sK1)),'type.list.list'('type.wordSem.stack_frame'(sK1))),'const.combin.K_1'(s('type.list.list'('type.wordSem.stack_frame'(sK1)),sK6))),s('type.wordSem.state'(sK1,sK0),'const.wordSem.state_memory_fupd_2'(s(fun(fun('type.fcp.cart'(bool,sK1),'type.wordSem.word_loc'(sK1)),fun('type.fcp.cart'(bool,sK1),'type.wordSem.word_loc'(sK1))),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,sK1),'type.wordSem.word_loc'(sK1)),sK7))),s('type.wordSem.state'(sK1,sK0),'const.wordSem.state_mdomain_fupd_2'(s(fun(fun('type.fcp.cart'(bool,sK1),bool),fun('type.fcp.cart'(bool,sK1),bool)),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,sK1),bool),sK8))),s('type.wordSem.state'(sK1,sK0),'const.wordSem.state_permute_fupd_2'(s(fun(fun('type.num.num',fun('type.num.num','type.num.num')),fun('type.num.num',fun('type.num.num','type.num.num'))),'const.combin.K_1'(s(fun('type.num.num',fun('type.num.num','type.num.num')),sK9))),s('type.wordSem.state'(sK1,sK0),'const.wordSem.state_gc_fun_fupd_2'(s(fun(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK1)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK1),'type.wordSem.word_loc'(sK1)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK1),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK1))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK1)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK1),'type.wordSem.word_loc'(sK1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK1)))))),fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK1)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK1),'type.wordSem.word_loc'(sK1)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK1),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK1))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK1)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK1),'type.wordSem.word_loc'(sK1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK1))))))),'const.combin.K_1'(s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK1)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK1),'type.wordSem.word_loc'(sK1)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK1),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK1))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK1)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK1),'type.wordSem.word_loc'(sK1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK1)))))),sK10))),s('type.wordSem.state'(sK1,sK0),'const.wordSem.state_handler_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK11))),s('type.wordSem.state'(sK1,sK0),'const.wordSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK12))),s('type.wordSem.state'(sK1,sK0),'const.wordSem.state_termdep_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK13))),s('type.wordSem.state'(sK1,sK0),'const.wordSem.state_code_fupd_2'(s(fun('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK1))),'type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK1)))),'const.combin.K_1'(s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK1))),sK14))),s('type.wordSem.state'(sK1,sK0),'const.wordSem.state_be_fupd_2'(s(fun(bool,bool),'const.combin.K_1'(s(bool,sK15))),s('type.wordSem.state'(sK1,sK0),'const.wordSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK2),'type.ffi.ffi_state'(sK0)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK0),sK16))),s('type.wordSem.state'(sK1,sK2),'const.bool.ARB_0'))))))))))))))))))))))))))) != s('type.wordSem.state'(sK1,sK0),'const.wordSem.state_locals_fupd_2'(s(fun('type.sptree.spt'('type.wordSem.word_loc'(sK1)),'type.sptree.spt'('type.wordSem.word_loc'(sK1))),'const.combin.K_1'(s('type.sptree.spt'('type.wordSem.word_loc'(sK1)),sK4))),s('type.wordSem.state'(sK1,sK0),'const.wordSem.state_store_fupd_2'(s(fun('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK1))),'const.combin.K_1'(s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK1)),sK5))),s('type.wordSem.state'(sK1,sK0),'const.wordSem.state_stack_fupd_2'(s(fun('type.list.list'('type.wordSem.stack_frame'(sK1)),'type.list.list'('type.wordSem.stack_frame'(sK1))),'const.combin.K_1'(s('type.list.list'('type.wordSem.stack_frame'(sK1)),sK6))),s('type.wordSem.state'(sK1,sK0),'const.wordSem.state_memory_fupd_2'(s(fun(fun('type.fcp.cart'(bool,sK1),'type.wordSem.word_loc'(sK1)),fun('type.fcp.cart'(bool,sK1),'type.wordSem.word_loc'(sK1))),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,sK1),'type.wordSem.word_loc'(sK1)),sK7))),s('type.wordSem.state'(sK1,sK0),'const.wordSem.state_mdomain_fupd_2'(s(fun(fun('type.fcp.cart'(bool,sK1),bool),fun('type.fcp.cart'(bool,sK1),bool)),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,sK1),bool),sK8))),s('type.wordSem.state'(sK1,sK0),'const.wordSem.state_permute_fupd_2'(s(fun(fun('type.num.num',fun('type.num.num','type.num.num')),fun('type.num.num',fun('type.num.num','type.num.num'))),'const.combin.K_1'(s(fun('type.num.num',fun('type.num.num','type.num.num')),sK9))),s('type.wordSem.state'(sK1,sK0),'const.wordSem.state_gc_fun_fupd_2'(s(fun(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK1)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK1),'type.wordSem.word_loc'(sK1)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK1),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK1))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK1)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK1),'type.wordSem.word_loc'(sK1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK1)))))),fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK1)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK1),'type.wordSem.word_loc'(sK1)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK1),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK1))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK1)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK1),'type.wordSem.word_loc'(sK1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK1))))))),'const.combin.K_1'(s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK1)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK1),'type.wordSem.word_loc'(sK1)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK1),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK1))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK1)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK1),'type.wordSem.word_loc'(sK1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK1)))))),sK10))),s('type.wordSem.state'(sK1,sK0),'const.wordSem.state_handler_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK11))),s('type.wordSem.state'(sK1,sK0),'const.wordSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK12))),s('type.wordSem.state'(sK1,sK0),'const.wordSem.state_termdep_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK13))),s('type.wordSem.state'(sK1,sK0),'const.wordSem.state_code_fupd_2'(s(fun('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK1))),'type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK1)))),'const.combin.K_1'(s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK1))),sK14))),s('type.wordSem.state'(sK1,sK0),'const.wordSem.state_be_fupd_2'(s(fun(bool,bool),'const.combin.K_1'(s(bool,sK15))),s('type.wordSem.state'(sK1,sK0),'const.wordSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK2),'type.ffi.ffi_state'(sK0)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK0),sK16))),s('type.wordSem.state'(sK1,sK2),sK3)))))))))))))))))))))))))))),
  inference(cnf_transformation,[],[f17])).
fof(f17,plain,(
  s('type.wordSem.state'(sK1,sK0),'const.wordSem.state_locals_fupd_2'(s(fun('type.sptree.spt'('type.wordSem.word_loc'(sK1)),'type.sptree.spt'('type.wordSem.word_loc'(sK1))),'const.combin.K_1'(s('type.sptree.spt'('type.wordSem.word_loc'(sK1)),sK4))),s('type.wordSem.state'(sK1,sK0),'const.wordSem.state_store_fupd_2'(s(fun('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK1))),'const.combin.K_1'(s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK1)),sK5))),s('type.wordSem.state'(sK1,sK0),'const.wordSem.state_stack_fupd_2'(s(fun('type.list.list'('type.wordSem.stack_frame'(sK1)),'type.list.list'('type.wordSem.stack_frame'(sK1))),'const.combin.K_1'(s('type.list.list'('type.wordSem.stack_frame'(sK1)),sK6))),s('type.wordSem.state'(sK1,sK0),'const.wordSem.state_memory_fupd_2'(s(fun(fun('type.fcp.cart'(bool,sK1),'type.wordSem.word_loc'(sK1)),fun('type.fcp.cart'(bool,sK1),'type.wordSem.word_loc'(sK1))),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,sK1),'type.wordSem.word_loc'(sK1)),sK7))),s('type.wordSem.state'(sK1,sK0),'const.wordSem.state_mdomain_fupd_2'(s(fun(fun('type.fcp.cart'(bool,sK1),bool),fun('type.fcp.cart'(bool,sK1),bool)),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,sK1),bool),sK8))),s('type.wordSem.state'(sK1,sK0),'const.wordSem.state_permute_fupd_2'(s(fun(fun('type.num.num',fun('type.num.num','type.num.num')),fun('type.num.num',fun('type.num.num','type.num.num'))),'const.combin.K_1'(s(fun('type.num.num',fun('type.num.num','type.num.num')),sK9))),s('type.wordSem.state'(sK1,sK0),'const.wordSem.state_gc_fun_fupd_2'(s(fun(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK1)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK1),'type.wordSem.word_loc'(sK1)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK1),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK1))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK1)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK1),'type.wordSem.word_loc'(sK1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK1)))))),fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK1)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK1),'type.wordSem.word_loc'(sK1)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK1),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK1))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK1)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK1),'type.wordSem.word_loc'(sK1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK1))))))),'const.combin.K_1'(s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK1)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK1),'type.wordSem.word_loc'(sK1)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK1),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK1))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK1)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK1),'type.wordSem.word_loc'(sK1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK1)))))),sK10))),s('type.wordSem.state'(sK1,sK0),'const.wordSem.state_handler_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK11))),s('type.wordSem.state'(sK1,sK0),'const.wordSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK12))),s('type.wordSem.state'(sK1,sK0),'const.wordSem.state_termdep_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK13))),s('type.wordSem.state'(sK1,sK0),'const.wordSem.state_code_fupd_2'(s(fun('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK1))),'type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK1)))),'const.combin.K_1'(s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK1))),sK14))),s('type.wordSem.state'(sK1,sK0),'const.wordSem.state_be_fupd_2'(s(fun(bool,bool),'const.combin.K_1'(s(bool,sK15))),s('type.wordSem.state'(sK1,sK0),'const.wordSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK2),'type.ffi.ffi_state'(sK0)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK0),sK16))),s('type.wordSem.state'(sK1,sK2),'const.bool.ARB_0'))))))))))))))))))))))))))) != s('type.wordSem.state'(sK1,sK0),'const.wordSem.state_locals_fupd_2'(s(fun('type.sptree.spt'('type.wordSem.word_loc'(sK1)),'type.sptree.spt'('type.wordSem.word_loc'(sK1))),'const.combin.K_1'(s('type.sptree.spt'('type.wordSem.word_loc'(sK1)),sK4))),s('type.wordSem.state'(sK1,sK0),'const.wordSem.state_store_fupd_2'(s(fun('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK1))),'const.combin.K_1'(s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK1)),sK5))),s('type.wordSem.state'(sK1,sK0),'const.wordSem.state_stack_fupd_2'(s(fun('type.list.list'('type.wordSem.stack_frame'(sK1)),'type.list.list'('type.wordSem.stack_frame'(sK1))),'const.combin.K_1'(s('type.list.list'('type.wordSem.stack_frame'(sK1)),sK6))),s('type.wordSem.state'(sK1,sK0),'const.wordSem.state_memory_fupd_2'(s(fun(fun('type.fcp.cart'(bool,sK1),'type.wordSem.word_loc'(sK1)),fun('type.fcp.cart'(bool,sK1),'type.wordSem.word_loc'(sK1))),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,sK1),'type.wordSem.word_loc'(sK1)),sK7))),s('type.wordSem.state'(sK1,sK0),'const.wordSem.state_mdomain_fupd_2'(s(fun(fun('type.fcp.cart'(bool,sK1),bool),fun('type.fcp.cart'(bool,sK1),bool)),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,sK1),bool),sK8))),s('type.wordSem.state'(sK1,sK0),'const.wordSem.state_permute_fupd_2'(s(fun(fun('type.num.num',fun('type.num.num','type.num.num')),fun('type.num.num',fun('type.num.num','type.num.num'))),'const.combin.K_1'(s(fun('type.num.num',fun('type.num.num','type.num.num')),sK9))),s('type.wordSem.state'(sK1,sK0),'const.wordSem.state_gc_fun_fupd_2'(s(fun(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK1)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK1),'type.wordSem.word_loc'(sK1)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK1),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK1))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK1)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK1),'type.wordSem.word_loc'(sK1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK1)))))),fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK1)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK1),'type.wordSem.word_loc'(sK1)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK1),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK1))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK1)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK1),'type.wordSem.word_loc'(sK1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK1))))))),'const.combin.K_1'(s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK1)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK1),'type.wordSem.word_loc'(sK1)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK1),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK1))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK1)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK1),'type.wordSem.word_loc'(sK1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK1)))))),sK10))),s('type.wordSem.state'(sK1,sK0),'const.wordSem.state_handler_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK11))),s('type.wordSem.state'(sK1,sK0),'const.wordSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK12))),s('type.wordSem.state'(sK1,sK0),'const.wordSem.state_termdep_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK13))),s('type.wordSem.state'(sK1,sK0),'const.wordSem.state_code_fupd_2'(s(fun('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK1))),'type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK1)))),'const.combin.K_1'(s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK1))),sK14))),s('type.wordSem.state'(sK1,sK0),'const.wordSem.state_be_fupd_2'(s(fun(bool,bool),'const.combin.K_1'(s(bool,sK15))),s('type.wordSem.state'(sK1,sK0),'const.wordSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK2),'type.ffi.ffi_state'(sK0)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK0),sK16))),s('type.wordSem.state'(sK1,sK2),sK3)))))))))))))))))))))))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1,sK2,sK3,sK4,sK5,sK6,sK7,sK8,sK9,sK10,sK11,sK12,sK13,sK14,sK15,sK16])],[f15])).
fof(f15,plain,(
  ? [X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16] : s('type.wordSem.state'(X1,X0),'const.wordSem.state_locals_fupd_2'(s(fun('type.sptree.spt'('type.wordSem.word_loc'(X1)),'type.sptree.spt'('type.wordSem.word_loc'(X1))),'const.combin.K_1'(s('type.sptree.spt'('type.wordSem.word_loc'(X1)),X4))),s('type.wordSem.state'(X1,X0),'const.wordSem.state_store_fupd_2'(s(fun('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))),'const.combin.K_1'(s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)),X5))),s('type.wordSem.state'(X1,X0),'const.wordSem.state_stack_fupd_2'(s(fun('type.list.list'('type.wordSem.stack_frame'(X1)),'type.list.list'('type.wordSem.stack_frame'(X1))),'const.combin.K_1'(s('type.list.list'('type.wordSem.stack_frame'(X1)),X6))),s('type.wordSem.state'(X1,X0),'const.wordSem.state_memory_fupd_2'(s(fun(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1))),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),X7))),s('type.wordSem.state'(X1,X0),'const.wordSem.state_mdomain_fupd_2'(s(fun(fun('type.fcp.cart'(bool,X1),bool),fun('type.fcp.cart'(bool,X1),bool)),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,X1),bool),X8))),s('type.wordSem.state'(X1,X0),'const.wordSem.state_permute_fupd_2'(s(fun(fun('type.num.num',fun('type.num.num','type.num.num')),fun('type.num.num',fun('type.num.num','type.num.num'))),'const.combin.K_1'(s(fun('type.num.num',fun('type.num.num','type.num.num')),X9))),s('type.wordSem.state'(X1,X0),'const.wordSem.state_gc_fun_fupd_2'(s(fun(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)))))),fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))))),'const.combin.K_1'(s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)))))),X10))),s('type.wordSem.state'(X1,X0),'const.wordSem.state_handler_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X11))),s('type.wordSem.state'(X1,X0),'const.wordSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X12))),s('type.wordSem.state'(X1,X0),'const.wordSem.state_termdep_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X13))),s('type.wordSem.state'(X1,X0),'const.wordSem.state_code_fupd_2'(s(fun('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X1))),'type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X1)))),'const.combin.K_1'(s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X1))),X14))),s('type.wordSem.state'(X1,X0),'const.wordSem.state_be_fupd_2'(s(fun(bool,bool),'const.combin.K_1'(s(bool,X15))),s('type.wordSem.state'(X1,X0),'const.wordSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(X2),'type.ffi.ffi_state'(X0)),'const.combin.K_1'(s('type.ffi.ffi_state'(X0),X16))),s('type.wordSem.state'(X1,X2),'const.bool.ARB_0'))))))))))))))))))))))))))) != s('type.wordSem.state'(X1,X0),'const.wordSem.state_locals_fupd_2'(s(fun('type.sptree.spt'('type.wordSem.word_loc'(X1)),'type.sptree.spt'('type.wordSem.word_loc'(X1))),'const.combin.K_1'(s('type.sptree.spt'('type.wordSem.word_loc'(X1)),X4))),s('type.wordSem.state'(X1,X0),'const.wordSem.state_store_fupd_2'(s(fun('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))),'const.combin.K_1'(s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)),X5))),s('type.wordSem.state'(X1,X0),'const.wordSem.state_stack_fupd_2'(s(fun('type.list.list'('type.wordSem.stack_frame'(X1)),'type.list.list'('type.wordSem.stack_frame'(X1))),'const.combin.K_1'(s('type.list.list'('type.wordSem.stack_frame'(X1)),X6))),s('type.wordSem.state'(X1,X0),'const.wordSem.state_memory_fupd_2'(s(fun(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1))),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),X7))),s('type.wordSem.state'(X1,X0),'const.wordSem.state_mdomain_fupd_2'(s(fun(fun('type.fcp.cart'(bool,X1),bool),fun('type.fcp.cart'(bool,X1),bool)),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,X1),bool),X8))),s('type.wordSem.state'(X1,X0),'const.wordSem.state_permute_fupd_2'(s(fun(fun('type.num.num',fun('type.num.num','type.num.num')),fun('type.num.num',fun('type.num.num','type.num.num'))),'const.combin.K_1'(s(fun('type.num.num',fun('type.num.num','type.num.num')),X9))),s('type.wordSem.state'(X1,X0),'const.wordSem.state_gc_fun_fupd_2'(s(fun(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)))))),fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))))),'const.combin.K_1'(s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)))))),X10))),s('type.wordSem.state'(X1,X0),'const.wordSem.state_handler_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X11))),s('type.wordSem.state'(X1,X0),'const.wordSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X12))),s('type.wordSem.state'(X1,X0),'const.wordSem.state_termdep_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X13))),s('type.wordSem.state'(X1,X0),'const.wordSem.state_code_fupd_2'(s(fun('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X1))),'type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X1)))),'const.combin.K_1'(s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X1))),X14))),s('type.wordSem.state'(X1,X0),'const.wordSem.state_be_fupd_2'(s(fun(bool,bool),'const.combin.K_1'(s(bool,X15))),s('type.wordSem.state'(X1,X0),'const.wordSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(X2),'type.ffi.ffi_state'(X0)),'const.combin.K_1'(s('type.ffi.ffi_state'(X0),X16))),s('type.wordSem.state'(X1,X2),X3)))))))))))))))))))))))))))),
  inference(ennf_transformation,[],[f9])).
fof(f9,plain,(
  ~! [X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16] : s('type.wordSem.state'(X1,X0),'const.wordSem.state_locals_fupd_2'(s(fun('type.sptree.spt'('type.wordSem.word_loc'(X1)),'type.sptree.spt'('type.wordSem.word_loc'(X1))),'const.combin.K_1'(s('type.sptree.spt'('type.wordSem.word_loc'(X1)),X4))),s('type.wordSem.state'(X1,X0),'const.wordSem.state_store_fupd_2'(s(fun('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))),'const.combin.K_1'(s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)),X5))),s('type.wordSem.state'(X1,X0),'const.wordSem.state_stack_fupd_2'(s(fun('type.list.list'('type.wordSem.stack_frame'(X1)),'type.list.list'('type.wordSem.stack_frame'(X1))),'const.combin.K_1'(s('type.list.list'('type.wordSem.stack_frame'(X1)),X6))),s('type.wordSem.state'(X1,X0),'const.wordSem.state_memory_fupd_2'(s(fun(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1))),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),X7))),s('type.wordSem.state'(X1,X0),'const.wordSem.state_mdomain_fupd_2'(s(fun(fun('type.fcp.cart'(bool,X1),bool),fun('type.fcp.cart'(bool,X1),bool)),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,X1),bool),X8))),s('type.wordSem.state'(X1,X0),'const.wordSem.state_permute_fupd_2'(s(fun(fun('type.num.num',fun('type.num.num','type.num.num')),fun('type.num.num',fun('type.num.num','type.num.num'))),'const.combin.K_1'(s(fun('type.num.num',fun('type.num.num','type.num.num')),X9))),s('type.wordSem.state'(X1,X0),'const.wordSem.state_gc_fun_fupd_2'(s(fun(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)))))),fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))))),'const.combin.K_1'(s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)))))),X10))),s('type.wordSem.state'(X1,X0),'const.wordSem.state_handler_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X11))),s('type.wordSem.state'(X1,X0),'const.wordSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X12))),s('type.wordSem.state'(X1,X0),'const.wordSem.state_termdep_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X13))),s('type.wordSem.state'(X1,X0),'const.wordSem.state_code_fupd_2'(s(fun('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X1))),'type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X1)))),'const.combin.K_1'(s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X1))),X14))),s('type.wordSem.state'(X1,X0),'const.wordSem.state_be_fupd_2'(s(fun(bool,bool),'const.combin.K_1'(s(bool,X15))),s('type.wordSem.state'(X1,X0),'const.wordSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(X2),'type.ffi.ffi_state'(X0)),'const.combin.K_1'(s('type.ffi.ffi_state'(X0),X16))),s('type.wordSem.state'(X1,X2),'const.bool.ARB_0'))))))))))))))))))))))))))) = s('type.wordSem.state'(X1,X0),'const.wordSem.state_locals_fupd_2'(s(fun('type.sptree.spt'('type.wordSem.word_loc'(X1)),'type.sptree.spt'('type.wordSem.word_loc'(X1))),'const.combin.K_1'(s('type.sptree.spt'('type.wordSem.word_loc'(X1)),X4))),s('type.wordSem.state'(X1,X0),'const.wordSem.state_store_fupd_2'(s(fun('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))),'const.combin.K_1'(s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)),X5))),s('type.wordSem.state'(X1,X0),'const.wordSem.state_stack_fupd_2'(s(fun('type.list.list'('type.wordSem.stack_frame'(X1)),'type.list.list'('type.wordSem.stack_frame'(X1))),'const.combin.K_1'(s('type.list.list'('type.wordSem.stack_frame'(X1)),X6))),s('type.wordSem.state'(X1,X0),'const.wordSem.state_memory_fupd_2'(s(fun(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1))),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),X7))),s('type.wordSem.state'(X1,X0),'const.wordSem.state_mdomain_fupd_2'(s(fun(fun('type.fcp.cart'(bool,X1),bool),fun('type.fcp.cart'(bool,X1),bool)),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,X1),bool),X8))),s('type.wordSem.state'(X1,X0),'const.wordSem.state_permute_fupd_2'(s(fun(fun('type.num.num',fun('type.num.num','type.num.num')),fun('type.num.num',fun('type.num.num','type.num.num'))),'const.combin.K_1'(s(fun('type.num.num',fun('type.num.num','type.num.num')),X9))),s('type.wordSem.state'(X1,X0),'const.wordSem.state_gc_fun_fupd_2'(s(fun(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)))))),fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))))),'const.combin.K_1'(s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)))))),X10))),s('type.wordSem.state'(X1,X0),'const.wordSem.state_handler_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X11))),s('type.wordSem.state'(X1,X0),'const.wordSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X12))),s('type.wordSem.state'(X1,X0),'const.wordSem.state_termdep_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X13))),s('type.wordSem.state'(X1,X0),'const.wordSem.state_code_fupd_2'(s(fun('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X1))),'type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X1)))),'const.combin.K_1'(s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X1))),X14))),s('type.wordSem.state'(X1,X0),'const.wordSem.state_be_fupd_2'(s(fun(bool,bool),'const.combin.K_1'(s(bool,X15))),s('type.wordSem.state'(X1,X0),'const.wordSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(X2),'type.ffi.ffi_state'(X0)),'const.combin.K_1'(s('type.ffi.ffi_state'(X0),X16))),s('type.wordSem.state'(X1,X2),X3)))))))))))))))))))))))))))),
  inference(flattening,[],[f8])).
fof(f8,plain,(
  ~! [X0,X1,X2] : ! [X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16] : s('type.wordSem.state'(X1,X0),'const.wordSem.state_locals_fupd_2'(s(fun('type.sptree.spt'('type.wordSem.word_loc'(X1)),'type.sptree.spt'('type.wordSem.word_loc'(X1))),'const.combin.K_1'(s('type.sptree.spt'('type.wordSem.word_loc'(X1)),X4))),s('type.wordSem.state'(X1,X0),'const.wordSem.state_store_fupd_2'(s(fun('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))),'const.combin.K_1'(s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)),X5))),s('type.wordSem.state'(X1,X0),'const.wordSem.state_stack_fupd_2'(s(fun('type.list.list'('type.wordSem.stack_frame'(X1)),'type.list.list'('type.wordSem.stack_frame'(X1))),'const.combin.K_1'(s('type.list.list'('type.wordSem.stack_frame'(X1)),X6))),s('type.wordSem.state'(X1,X0),'const.wordSem.state_memory_fupd_2'(s(fun(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1))),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),X7))),s('type.wordSem.state'(X1,X0),'const.wordSem.state_mdomain_fupd_2'(s(fun(fun('type.fcp.cart'(bool,X1),bool),fun('type.fcp.cart'(bool,X1),bool)),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,X1),bool),X8))),s('type.wordSem.state'(X1,X0),'const.wordSem.state_permute_fupd_2'(s(fun(fun('type.num.num',fun('type.num.num','type.num.num')),fun('type.num.num',fun('type.num.num','type.num.num'))),'const.combin.K_1'(s(fun('type.num.num',fun('type.num.num','type.num.num')),X9))),s('type.wordSem.state'(X1,X0),'const.wordSem.state_gc_fun_fupd_2'(s(fun(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)))))),fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))))),'const.combin.K_1'(s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)))))),X10))),s('type.wordSem.state'(X1,X0),'const.wordSem.state_handler_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X11))),s('type.wordSem.state'(X1,X0),'const.wordSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X12))),s('type.wordSem.state'(X1,X0),'const.wordSem.state_termdep_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X13))),s('type.wordSem.state'(X1,X0),'const.wordSem.state_code_fupd_2'(s(fun('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X1))),'type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X1)))),'const.combin.K_1'(s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X1))),X14))),s('type.wordSem.state'(X1,X0),'const.wordSem.state_be_fupd_2'(s(fun(bool,bool),'const.combin.K_1'(s(bool,X15))),s('type.wordSem.state'(X1,X0),'const.wordSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(X2),'type.ffi.ffi_state'(X0)),'const.combin.K_1'(s('type.ffi.ffi_state'(X0),X16))),s('type.wordSem.state'(X1,X2),'const.bool.ARB_0'))))))))))))))))))))))))))) = s('type.wordSem.state'(X1,X0),'const.wordSem.state_locals_fupd_2'(s(fun('type.sptree.spt'('type.wordSem.word_loc'(X1)),'type.sptree.spt'('type.wordSem.word_loc'(X1))),'const.combin.K_1'(s('type.sptree.spt'('type.wordSem.word_loc'(X1)),X4))),s('type.wordSem.state'(X1,X0),'const.wordSem.state_store_fupd_2'(s(fun('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))),'const.combin.K_1'(s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)),X5))),s('type.wordSem.state'(X1,X0),'const.wordSem.state_stack_fupd_2'(s(fun('type.list.list'('type.wordSem.stack_frame'(X1)),'type.list.list'('type.wordSem.stack_frame'(X1))),'const.combin.K_1'(s('type.list.list'('type.wordSem.stack_frame'(X1)),X6))),s('type.wordSem.state'(X1,X0),'const.wordSem.state_memory_fupd_2'(s(fun(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1))),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),X7))),s('type.wordSem.state'(X1,X0),'const.wordSem.state_mdomain_fupd_2'(s(fun(fun('type.fcp.cart'(bool,X1),bool),fun('type.fcp.cart'(bool,X1),bool)),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,X1),bool),X8))),s('type.wordSem.state'(X1,X0),'const.wordSem.state_permute_fupd_2'(s(fun(fun('type.num.num',fun('type.num.num','type.num.num')),fun('type.num.num',fun('type.num.num','type.num.num'))),'const.combin.K_1'(s(fun('type.num.num',fun('type.num.num','type.num.num')),X9))),s('type.wordSem.state'(X1,X0),'const.wordSem.state_gc_fun_fupd_2'(s(fun(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)))))),fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))))),'const.combin.K_1'(s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)))))),X10))),s('type.wordSem.state'(X1,X0),'const.wordSem.state_handler_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X11))),s('type.wordSem.state'(X1,X0),'const.wordSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X12))),s('type.wordSem.state'(X1,X0),'const.wordSem.state_termdep_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X13))),s('type.wordSem.state'(X1,X0),'const.wordSem.state_code_fupd_2'(s(fun('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X1))),'type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X1)))),'const.combin.K_1'(s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X1))),X14))),s('type.wordSem.state'(X1,X0),'const.wordSem.state_be_fupd_2'(s(fun(bool,bool),'const.combin.K_1'(s(bool,X15))),s('type.wordSem.state'(X1,X0),'const.wordSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(X2),'type.ffi.ffi_state'(X0)),'const.combin.K_1'(s('type.ffi.ffi_state'(X0),X16))),s('type.wordSem.state'(X1,X2),X3)))))))))))))))))))))))))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6,X7,X8] : ! [X9,X10,X11,X12,X13,X14,X15,X16,X17,X18,X19,X20,X21,X22] : s('type.wordSem.state'(X7,X6),'const.wordSem.state_locals_fupd_2'(s(fun('type.sptree.spt'('type.wordSem.word_loc'(X7)),'type.sptree.spt'('type.wordSem.word_loc'(X7))),'const.combin.K_1'(s('type.sptree.spt'('type.wordSem.word_loc'(X7)),X10))),s('type.wordSem.state'(X7,X6),'const.wordSem.state_store_fupd_2'(s(fun('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X7)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X7))),'const.combin.K_1'(s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X7)),X11))),s('type.wordSem.state'(X7,X6),'const.wordSem.state_stack_fupd_2'(s(fun('type.list.list'('type.wordSem.stack_frame'(X7)),'type.list.list'('type.wordSem.stack_frame'(X7))),'const.combin.K_1'(s('type.list.list'('type.wordSem.stack_frame'(X7)),X12))),s('type.wordSem.state'(X7,X6),'const.wordSem.state_memory_fupd_2'(s(fun(fun('type.fcp.cart'(bool,X7),'type.wordSem.word_loc'(X7)),fun('type.fcp.cart'(bool,X7),'type.wordSem.word_loc'(X7))),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,X7),'type.wordSem.word_loc'(X7)),X13))),s('type.wordSem.state'(X7,X6),'const.wordSem.state_mdomain_fupd_2'(s(fun(fun('type.fcp.cart'(bool,X7),bool),fun('type.fcp.cart'(bool,X7),bool)),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,X7),bool),X14))),s('type.wordSem.state'(X7,X6),'const.wordSem.state_permute_fupd_2'(s(fun(fun('type.num.num',fun('type.num.num','type.num.num')),fun('type.num.num',fun('type.num.num','type.num.num'))),'const.combin.K_1'(s(fun('type.num.num',fun('type.num.num','type.num.num')),X15))),s('type.wordSem.state'(X7,X6),'const.wordSem.state_gc_fun_fupd_2'(s(fun(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X7)),'type.pair.prod'(fun('type.fcp.cart'(bool,X7),'type.wordSem.word_loc'(X7)),'type.pair.prod'(fun('type.fcp.cart'(bool,X7),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X7))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X7)),'type.pair.prod'(fun('type.fcp.cart'(bool,X7),'type.wordSem.word_loc'(X7)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X7)))))),fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X7)),'type.pair.prod'(fun('type.fcp.cart'(bool,X7),'type.wordSem.word_loc'(X7)),'type.pair.prod'(fun('type.fcp.cart'(bool,X7),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X7))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X7)),'type.pair.prod'(fun('type.fcp.cart'(bool,X7),'type.wordSem.word_loc'(X7)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X7))))))),'const.combin.K_1'(s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X7)),'type.pair.prod'(fun('type.fcp.cart'(bool,X7),'type.wordSem.word_loc'(X7)),'type.pair.prod'(fun('type.fcp.cart'(bool,X7),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X7))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X7)),'type.pair.prod'(fun('type.fcp.cart'(bool,X7),'type.wordSem.word_loc'(X7)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X7)))))),X16))),s('type.wordSem.state'(X7,X6),'const.wordSem.state_handler_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X17))),s('type.wordSem.state'(X7,X6),'const.wordSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X18))),s('type.wordSem.state'(X7,X6),'const.wordSem.state_termdep_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X19))),s('type.wordSem.state'(X7,X6),'const.wordSem.state_code_fupd_2'(s(fun('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X7))),'type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X7)))),'const.combin.K_1'(s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X7))),X20))),s('type.wordSem.state'(X7,X6),'const.wordSem.state_be_fupd_2'(s(fun(bool,bool),'const.combin.K_1'(s(bool,X21))),s('type.wordSem.state'(X7,X6),'const.wordSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(X8),'type.ffi.ffi_state'(X6)),'const.combin.K_1'(s('type.ffi.ffi_state'(X6),X22))),s('type.wordSem.state'(X7,X8),'const.bool.ARB_0'))))))))))))))))))))))))))) = s('type.wordSem.state'(X7,X6),'const.wordSem.state_locals_fupd_2'(s(fun('type.sptree.spt'('type.wordSem.word_loc'(X7)),'type.sptree.spt'('type.wordSem.word_loc'(X7))),'const.combin.K_1'(s('type.sptree.spt'('type.wordSem.word_loc'(X7)),X10))),s('type.wordSem.state'(X7,X6),'const.wordSem.state_store_fupd_2'(s(fun('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X7)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X7))),'const.combin.K_1'(s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X7)),X11))),s('type.wordSem.state'(X7,X6),'const.wordSem.state_stack_fupd_2'(s(fun('type.list.list'('type.wordSem.stack_frame'(X7)),'type.list.list'('type.wordSem.stack_frame'(X7))),'const.combin.K_1'(s('type.list.list'('type.wordSem.stack_frame'(X7)),X12))),s('type.wordSem.state'(X7,X6),'const.wordSem.state_memory_fupd_2'(s(fun(fun('type.fcp.cart'(bool,X7),'type.wordSem.word_loc'(X7)),fun('type.fcp.cart'(bool,X7),'type.wordSem.word_loc'(X7))),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,X7),'type.wordSem.word_loc'(X7)),X13))),s('type.wordSem.state'(X7,X6),'const.wordSem.state_mdomain_fupd_2'(s(fun(fun('type.fcp.cart'(bool,X7),bool),fun('type.fcp.cart'(bool,X7),bool)),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,X7),bool),X14))),s('type.wordSem.state'(X7,X6),'const.wordSem.state_permute_fupd_2'(s(fun(fun('type.num.num',fun('type.num.num','type.num.num')),fun('type.num.num',fun('type.num.num','type.num.num'))),'const.combin.K_1'(s(fun('type.num.num',fun('type.num.num','type.num.num')),X15))),s('type.wordSem.state'(X7,X6),'const.wordSem.state_gc_fun_fupd_2'(s(fun(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X7)),'type.pair.prod'(fun('type.fcp.cart'(bool,X7),'type.wordSem.word_loc'(X7)),'type.pair.prod'(fun('type.fcp.cart'(bool,X7),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X7))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X7)),'type.pair.prod'(fun('type.fcp.cart'(bool,X7),'type.wordSem.word_loc'(X7)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X7)))))),fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X7)),'type.pair.prod'(fun('type.fcp.cart'(bool,X7),'type.wordSem.word_loc'(X7)),'type.pair.prod'(fun('type.fcp.cart'(bool,X7),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X7))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X7)),'type.pair.prod'(fun('type.fcp.cart'(bool,X7),'type.wordSem.word_loc'(X7)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X7))))))),'const.combin.K_1'(s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X7)),'type.pair.prod'(fun('type.fcp.cart'(bool,X7),'type.wordSem.word_loc'(X7)),'type.pair.prod'(fun('type.fcp.cart'(bool,X7),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X7))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X7)),'type.pair.prod'(fun('type.fcp.cart'(bool,X7),'type.wordSem.word_loc'(X7)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X7)))))),X16))),s('type.wordSem.state'(X7,X6),'const.wordSem.state_handler_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X17))),s('type.wordSem.state'(X7,X6),'const.wordSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X18))),s('type.wordSem.state'(X7,X6),'const.wordSem.state_termdep_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X19))),s('type.wordSem.state'(X7,X6),'const.wordSem.state_code_fupd_2'(s(fun('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X7))),'type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X7)))),'const.combin.K_1'(s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X7))),X20))),s('type.wordSem.state'(X7,X6),'const.wordSem.state_be_fupd_2'(s(fun(bool,bool),'const.combin.K_1'(s(bool,X21))),s('type.wordSem.state'(X7,X6),'const.wordSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(X8),'type.ffi.ffi_state'(X6)),'const.combin.K_1'(s('type.ffi.ffi_state'(X6),X22))),s('type.wordSem.state'(X7,X8),X9)))))))))))))))))))))))))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6,X7,X8] : ! [X9,X10,X11,X12,X13,X14,X15,X16,X17,X18,X19,X20,X21,X22] : s('type.wordSem.state'(X7,X6),'const.wordSem.state_locals_fupd_2'(s(fun('type.sptree.spt'('type.wordSem.word_loc'(X7)),'type.sptree.spt'('type.wordSem.word_loc'(X7))),'const.combin.K_1'(s('type.sptree.spt'('type.wordSem.word_loc'(X7)),X10))),s('type.wordSem.state'(X7,X6),'const.wordSem.state_store_fupd_2'(s(fun('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X7)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X7))),'const.combin.K_1'(s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X7)),X11))),s('type.wordSem.state'(X7,X6),'const.wordSem.state_stack_fupd_2'(s(fun('type.list.list'('type.wordSem.stack_frame'(X7)),'type.list.list'('type.wordSem.stack_frame'(X7))),'const.combin.K_1'(s('type.list.list'('type.wordSem.stack_frame'(X7)),X12))),s('type.wordSem.state'(X7,X6),'const.wordSem.state_memory_fupd_2'(s(fun(fun('type.fcp.cart'(bool,X7),'type.wordSem.word_loc'(X7)),fun('type.fcp.cart'(bool,X7),'type.wordSem.word_loc'(X7))),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,X7),'type.wordSem.word_loc'(X7)),X13))),s('type.wordSem.state'(X7,X6),'const.wordSem.state_mdomain_fupd_2'(s(fun(fun('type.fcp.cart'(bool,X7),bool),fun('type.fcp.cart'(bool,X7),bool)),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,X7),bool),X14))),s('type.wordSem.state'(X7,X6),'const.wordSem.state_permute_fupd_2'(s(fun(fun('type.num.num',fun('type.num.num','type.num.num')),fun('type.num.num',fun('type.num.num','type.num.num'))),'const.combin.K_1'(s(fun('type.num.num',fun('type.num.num','type.num.num')),X15))),s('type.wordSem.state'(X7,X6),'const.wordSem.state_gc_fun_fupd_2'(s(fun(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X7)),'type.pair.prod'(fun('type.fcp.cart'(bool,X7),'type.wordSem.word_loc'(X7)),'type.pair.prod'(fun('type.fcp.cart'(bool,X7),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X7))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X7)),'type.pair.prod'(fun('type.fcp.cart'(bool,X7),'type.wordSem.word_loc'(X7)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X7)))))),fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X7)),'type.pair.prod'(fun('type.fcp.cart'(bool,X7),'type.wordSem.word_loc'(X7)),'type.pair.prod'(fun('type.fcp.cart'(bool,X7),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X7))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X7)),'type.pair.prod'(fun('type.fcp.cart'(bool,X7),'type.wordSem.word_loc'(X7)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X7))))))),'const.combin.K_1'(s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X7)),'type.pair.prod'(fun('type.fcp.cart'(bool,X7),'type.wordSem.word_loc'(X7)),'type.pair.prod'(fun('type.fcp.cart'(bool,X7),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X7))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X7)),'type.pair.prod'(fun('type.fcp.cart'(bool,X7),'type.wordSem.word_loc'(X7)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X7)))))),X16))),s('type.wordSem.state'(X7,X6),'const.wordSem.state_handler_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X17))),s('type.wordSem.state'(X7,X6),'const.wordSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X18))),s('type.wordSem.state'(X7,X6),'const.wordSem.state_termdep_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X19))),s('type.wordSem.state'(X7,X6),'const.wordSem.state_code_fupd_2'(s(fun('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X7))),'type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X7)))),'const.combin.K_1'(s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X7))),X20))),s('type.wordSem.state'(X7,X6),'const.wordSem.state_be_fupd_2'(s(fun(bool,bool),'const.combin.K_1'(s(bool,X21))),s('type.wordSem.state'(X7,X6),'const.wordSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(X8),'type.ffi.ffi_state'(X6)),'const.combin.K_1'(s('type.ffi.ffi_state'(X6),X22))),s('type.wordSem.state'(X7,X8),'const.bool.ARB_0'))))))))))))))))))))))))))) = s('type.wordSem.state'(X7,X6),'const.wordSem.state_locals_fupd_2'(s(fun('type.sptree.spt'('type.wordSem.word_loc'(X7)),'type.sptree.spt'('type.wordSem.word_loc'(X7))),'const.combin.K_1'(s('type.sptree.spt'('type.wordSem.word_loc'(X7)),X10))),s('type.wordSem.state'(X7,X6),'const.wordSem.state_store_fupd_2'(s(fun('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X7)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X7))),'const.combin.K_1'(s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X7)),X11))),s('type.wordSem.state'(X7,X6),'const.wordSem.state_stack_fupd_2'(s(fun('type.list.list'('type.wordSem.stack_frame'(X7)),'type.list.list'('type.wordSem.stack_frame'(X7))),'const.combin.K_1'(s('type.list.list'('type.wordSem.stack_frame'(X7)),X12))),s('type.wordSem.state'(X7,X6),'const.wordSem.state_memory_fupd_2'(s(fun(fun('type.fcp.cart'(bool,X7),'type.wordSem.word_loc'(X7)),fun('type.fcp.cart'(bool,X7),'type.wordSem.word_loc'(X7))),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,X7),'type.wordSem.word_loc'(X7)),X13))),s('type.wordSem.state'(X7,X6),'const.wordSem.state_mdomain_fupd_2'(s(fun(fun('type.fcp.cart'(bool,X7),bool),fun('type.fcp.cart'(bool,X7),bool)),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,X7),bool),X14))),s('type.wordSem.state'(X7,X6),'const.wordSem.state_permute_fupd_2'(s(fun(fun('type.num.num',fun('type.num.num','type.num.num')),fun('type.num.num',fun('type.num.num','type.num.num'))),'const.combin.K_1'(s(fun('type.num.num',fun('type.num.num','type.num.num')),X15))),s('type.wordSem.state'(X7,X6),'const.wordSem.state_gc_fun_fupd_2'(s(fun(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X7)),'type.pair.prod'(fun('type.fcp.cart'(bool,X7),'type.wordSem.word_loc'(X7)),'type.pair.prod'(fun('type.fcp.cart'(bool,X7),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X7))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X7)),'type.pair.prod'(fun('type.fcp.cart'(bool,X7),'type.wordSem.word_loc'(X7)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X7)))))),fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X7)),'type.pair.prod'(fun('type.fcp.cart'(bool,X7),'type.wordSem.word_loc'(X7)),'type.pair.prod'(fun('type.fcp.cart'(bool,X7),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X7))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X7)),'type.pair.prod'(fun('type.fcp.cart'(bool,X7),'type.wordSem.word_loc'(X7)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X7))))))),'const.combin.K_1'(s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X7)),'type.pair.prod'(fun('type.fcp.cart'(bool,X7),'type.wordSem.word_loc'(X7)),'type.pair.prod'(fun('type.fcp.cart'(bool,X7),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X7))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X7)),'type.pair.prod'(fun('type.fcp.cart'(bool,X7),'type.wordSem.word_loc'(X7)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X7)))))),X16))),s('type.wordSem.state'(X7,X6),'const.wordSem.state_handler_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X17))),s('type.wordSem.state'(X7,X6),'const.wordSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X18))),s('type.wordSem.state'(X7,X6),'const.wordSem.state_termdep_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X19))),s('type.wordSem.state'(X7,X6),'const.wordSem.state_code_fupd_2'(s(fun('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X7))),'type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X7)))),'const.combin.K_1'(s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X7))),X20))),s('type.wordSem.state'(X7,X6),'const.wordSem.state_be_fupd_2'(s(fun(bool,bool),'const.combin.K_1'(s(bool,X21))),s('type.wordSem.state'(X7,X6),'const.wordSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(X8),'type.ffi.ffi_state'(X6)),'const.combin.K_1'(s('type.ffi.ffi_state'(X6),X22))),s('type.wordSem.state'(X7,X8),X9)))))))))))))))))))))))))))),
  file('thm.wordSem.state_updates_eq_literal','thm.wordSem.state_updates_eq_literal')).
% SZS output end Proof for thm.wordSem
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 29
% Passive clauses: 792
% Generated clauses: 4294
% Final active clauses: 22
% Final passive clauses: 596
% Input formulas: 6
% Initial clauses: 6
% 
% Duplicate literals: 423
% Trivial inequalities: 38
% Fw subsumption resolutions: 241
% Fw demodulations: 112
% Bw demodulations: 1
% 
% Simple tautologies: 112
% Equational tautologies: 93
% Forward subsumptions: 1641
% 
% Binary resolution: 12
% Forward superposition: 1416
% Backward superposition: 1367
% Self superposition: 251
% Equality factoring: 230
% Equality resolution: 1
% 
% Split clauses: 441
% Split components: 883
% SAT solver clauses: 848
% SAT solver unit clauses: 234
% SAT solver binary clauses: 212
% 
% Sat splits: 441
% Sat splitting refutations: 2
% 
% TWLsolver clauses: 848
% TWLsolver calls for satisfiability: 23
% 
% Memory used [KB]: 4221
% Time elapsed: 0.213 s
% ------------------------------
% ------------------------------
% Success in time 0.24 s
