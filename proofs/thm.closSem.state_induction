Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 149 next slice time: 5
dis+11_7_3 on thm.closSem
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.closSem
% SZS output start Proof for thm.closSem
fof(f12600,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f12583,f340,f237,f339,f344])).
fof(f344,plain,(
  $false | ($spl1 | $spl2)),
  inference(resolution,[],[f340,f339])).
fof(f339,plain,(
  ~p(s(bool,'F_0')) | $spl1),
  inference(cnf_transformation,[],[f339_D])).
fof(f339_D,plain,(
  ~p(s(bool,'F_0')) <=> ~$spl1),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1])])).
fof(f237,plain,(
  ~p(s(bool,'F_0'))),
  inference(cnf_transformation,[],[f73])).
fof(f73,plain,(
  ~p(s(bool,'F_0'))),
  inference(flattening,[],[f2])).
fof(f2,axiom,(
  ~p(s(bool,'F_0'))),
  file('thm.closSem.state_induction',aHL_FALSITY)).
fof(f340,plain,(
  ( ! [X0] : (p(s(bool,X0))) ) | $spl2),
  inference(cnf_transformation,[],[f340_D])).
fof(f340_D,plain,(
  ( ! [X0] : (p(s(bool,X0))) ) <=> ~$spl2),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl2])])).
fof(f12583,plain,(
  ( ! [X0] : (p(s(bool,X0))) ) | $spl1),
  inference(subsumption_resolution,[],[f12563,f241])).
fof(f241,plain,(
  ( ! [X0] : (p(s(bool,X0)) | s(bool,'T_0') != s(bool,X0)) )),
  inference(cnf_transformation,[],[f199])).
fof(f199,plain,(
  ! [X0] : ((s(bool,'T_0') != s(bool,X0) | p(s(bool,X0))) & (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f76])).
fof(f76,plain,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) <=> p(s(bool,X0)))),
  inference(rectify,[],[f27])).
fof(f27,axiom,(
  ! [X17] : (s(bool,'T_0') = s(bool,X17) <=> p(s(bool,X17)))),
  file('thm.closSem.state_induction','thm.bool.EQ_CLAUSES|split|0')).
fof(f12563,plain,(
  ( ! [X0] : (p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)) ) | $spl1),
  inference(superposition,[],[f12438,f671])).
fof(f671,plain,(
  ( ! [X4] : (s(bool,X4) = s(bool,happ(s(fun('type.closSem.state'(sK0),bool),sK1),s('type.closSem.state'(sK0),sK2))) | s(bool,'T_0') = s(bool,X4)) ) | $spl1),
  inference(subsumption_resolution,[],[f662,f339])).
fof(f662,plain,(
  ( ! [X4] : (p(s(bool,'F_0')) | s(bool,X4) = s(bool,happ(s(fun('type.closSem.state'(sK0),bool),sK1),s('type.closSem.state'(sK0),sK2))) | s(bool,'T_0') = s(bool,X4)) )),
  inference(superposition,[],[f408,f361])).
fof(f361,plain,(
  s(bool,'F_0') = s(bool,happ(s(fun('type.closSem.state'(sK0),bool),sK1),s('type.closSem.state'(sK0),sK2)))),
  inference(resolution,[],[f234,f246])).
fof(f246,plain,(
  ( ! [X0] : (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f201])).
fof(f201,plain,(
  ! [X0] : ((s(bool,'F_0') != s(bool,X0) | ~p(s(bool,X0))) & (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f79])).
fof(f79,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(flattening,[],[f78])).
fof(f78,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(rectify,[],[f26])).
fof(f26,axiom,(
  ! [X17] : (s(bool,'F_0') = s(bool,X17) <=> ~p(s(bool,X17)))),
  file('thm.closSem.state_induction','thm.bool.EQ_CLAUSES|split|2')).
fof(f234,plain,(
  ~p(s(bool,happ(s(fun('type.closSem.state'(sK0),bool),sK1),s('type.closSem.state'(sK0),sK2))))),
  inference(cnf_transformation,[],[f198])).
fof(f198,plain,(
  ! [X3,X4,X5,X6,X7] : p(s(bool,happ(s(fun('type.closSem.state'(sK0),bool),sK1),s('type.closSem.state'(sK0),'const.closSem.recordtype|46|state_5'(s('type.list.list'('type.option.option'('type.closSem.v')),X3),s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),X4),s('type.ffi.ffi_state'(sK0),X5),s('type.num.num',X6),s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),X7)))))) & ~p(s(bool,happ(s(fun('type.closSem.state'(sK0),bool),sK1),s('type.closSem.state'(sK0),sK2))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1,sK2])],[f197])).
fof(f197,plain,(
  ? [X0,X1] : (! [X3,X4,X5,X6,X7] : p(s(bool,happ(s(fun('type.closSem.state'(X0),bool),X1),s('type.closSem.state'(X0),'const.closSem.recordtype|46|state_5'(s('type.list.list'('type.option.option'('type.closSem.v')),X3),s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),X4),s('type.ffi.ffi_state'(X0),X5),s('type.num.num',X6),s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),X7)))))) & ? [X2] : ~p(s(bool,happ(s(fun('type.closSem.state'(X0),bool),X1),s('type.closSem.state'(X0),X2)))))),
  inference(rectify,[],[f190])).
fof(f190,plain,(
  ? [X0,X1] : (! [X2,X3,X4,X5,X6] : p(s(bool,happ(s(fun('type.closSem.state'(X0),bool),X1),s('type.closSem.state'(X0),'const.closSem.recordtype|46|state_5'(s('type.list.list'('type.option.option'('type.closSem.v')),X2),s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),X3),s('type.ffi.ffi_state'(X0),X4),s('type.num.num',X5),s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),X6)))))) & ? [X7] : ~p(s(bool,happ(s(fun('type.closSem.state'(X0),bool),X1),s('type.closSem.state'(X0),X7)))))),
  inference(ennf_transformation,[],[f72])).
fof(f72,plain,(
  ~! [X0,X1] : (! [X2,X3,X4,X5,X6] : p(s(bool,happ(s(fun('type.closSem.state'(X0),bool),X1),s('type.closSem.state'(X0),'const.closSem.recordtype|46|state_5'(s('type.list.list'('type.option.option'('type.closSem.v')),X2),s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),X3),s('type.ffi.ffi_state'(X0),X4),s('type.num.num',X5),s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),X6)))))) => ! [X7] : p(s(bool,happ(s(fun('type.closSem.state'(X0),bool),X1),s('type.closSem.state'(X0),X7)))))),
  inference(flattening,[],[f71])).
fof(f71,plain,(
  ~! [X0] : ! [X1] : (! [X2,X3,X4,X5,X6] : p(s(bool,happ(s(fun('type.closSem.state'(X0),bool),X1),s('type.closSem.state'(X0),'const.closSem.recordtype|46|state_5'(s('type.list.list'('type.option.option'('type.closSem.v')),X2),s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),X3),s('type.ffi.ffi_state'(X0),X4),s('type.num.num',X5),s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),X6)))))) => ! [X7] : p(s(bool,happ(s(fun('type.closSem.state'(X0),bool),X1),s('type.closSem.state'(X0),X7)))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : ! [X7] : (! [X8,X9,X10,X11,X12] : p(s(bool,happ(s(fun('type.closSem.state'(X6),bool),X7),s('type.closSem.state'(X6),'const.closSem.recordtype|46|state_5'(s('type.list.list'('type.option.option'('type.closSem.v')),X8),s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),X9),s('type.ffi.ffi_state'(X6),X10),s('type.num.num',X11),s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),X12)))))) => ! [X13] : p(s(bool,happ(s(fun('type.closSem.state'(X6),bool),X7),s('type.closSem.state'(X6),X13)))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : ! [X7] : (! [X8,X9,X10,X11,X12] : p(s(bool,happ(s(fun('type.closSem.state'(X6),bool),X7),s('type.closSem.state'(X6),'const.closSem.recordtype|46|state_5'(s('type.list.list'('type.option.option'('type.closSem.v')),X8),s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),X9),s('type.ffi.ffi_state'(X6),X10),s('type.num.num',X11),s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),X12)))))) => ! [X13] : p(s(bool,happ(s(fun('type.closSem.state'(X6),bool),X7),s('type.closSem.state'(X6),X13)))))),
  file('thm.closSem.state_induction','thm.closSem.state_induction')).
fof(f408,plain,(
  ( ! [X2,X1] : (p(s(bool,X1)) | s(bool,X1) = s(bool,X2) | s(bool,'T_0') = s(bool,X2)) )),
  inference(resolution,[],[f304,f242])).
fof(f242,plain,(
  ( ! [X0] : (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f199])).
fof(f304,plain,(
  ( ! [X0,X1] : (p(s(bool,X1)) | p(s(bool,X0)) | s(bool,X0) = s(bool,X1)) )),
  inference(cnf_transformation,[],[f193])).
fof(f193,plain,(
  ! [X0,X1] : ((p(s(bool,X0)) & ~p(s(bool,X1))) | (p(s(bool,X1)) & ~p(s(bool,X0))) | s(bool,X0) = s(bool,X1))),
  inference(flattening,[],[f192])).
fof(f192,plain,(
  ! [X0,X1] : ((p(s(bool,X0)) & ~p(s(bool,X1))) | ((p(s(bool,X1)) & ~p(s(bool,X0))) | s(bool,X0) = s(bool,X1)))),
  inference(ennf_transformation,[],[f149])).
fof(f149,plain,(
  ! [X0,X1] : ((p(s(bool,X0)) => p(s(bool,X1))) => ((p(s(bool,X1)) => p(s(bool,X0))) => s(bool,X0) = s(bool,X1)))),
  inference(rectify,[],[f7])).
fof(f7,axiom,(
  ! [X14,X15] : ((p(s(bool,X14)) => p(s(bool,X15))) => ((p(s(bool,X15)) => p(s(bool,X14))) => s(bool,X14) = s(bool,X15)))),
  file('thm.closSem.state_induction','thm.bool.IMP_ANTISYM_AX')).
fof(f12438,plain,(
  ( ! [X8] : (p(s(bool,happ(s(fun('type.closSem.state'(sK0),bool),sK1),s('type.closSem.state'(sK0),X8))))) )),
  inference(superposition,[],[f233,f269])).
fof(f269,plain,(
  ( ! [X0,X1] : (s('type.closSem.state'(X0),X1) = s('type.closSem.state'(X0),'const.closSem.recordtype|46|state_5'(s('type.list.list'('type.option.option'('type.closSem.v')),sK3(X1,X0)),s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),sK4(X1,X0)),s('type.ffi.ffi_state'(X0),sK5(X1,X0)),s('type.num.num',sK6(X1,X0)),s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK7(X1,X0))))) )),
  inference(cnf_transformation,[],[f216])).
fof(f216,plain,(
  ! [X0,X1] : s('type.closSem.state'(X0),X1) = s('type.closSem.state'(X0),'const.closSem.recordtype|46|state_5'(s('type.list.list'('type.option.option'('type.closSem.v')),sK3(X1,X0)),s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),sK4(X1,X0)),s('type.ffi.ffi_state'(X0),sK5(X1,X0)),s('type.num.num',sK6(X1,X0)),s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),sK7(X1,X0))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK3,sK4,sK5,sK6,sK7])],[f93])).
fof(f93,plain,(
  ! [X0,X1] : ? [X2,X3,X4,X5,X6] : s('type.closSem.state'(X0),X1) = s('type.closSem.state'(X0),'const.closSem.recordtype|46|state_5'(s('type.list.list'('type.option.option'('type.closSem.v')),X2),s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),X3),s('type.ffi.ffi_state'(X0),X4),s('type.num.num',X5),s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),X6)))),
  inference(flattening,[],[f92])).
fof(f92,plain,(
  ! [X0] : ! [X1] : ? [X2,X3,X4,X5,X6] : s('type.closSem.state'(X0),X1) = s('type.closSem.state'(X0),'const.closSem.recordtype|46|state_5'(s('type.list.list'('type.option.option'('type.closSem.v')),X2),s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),X3),s('type.ffi.ffi_state'(X0),X4),s('type.num.num',X5),s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),X6)))),
  inference(rectify,[],[f37])).
fof(f37,axiom,(
  ! [X6] : ! [X46] : ? [X8,X9,X10,X11,X12] : s('type.closSem.state'(X6),X46) = s('type.closSem.state'(X6),'const.closSem.recordtype|46|state_5'(s('type.list.list'('type.option.option'('type.closSem.v')),X8),s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),X9),s('type.ffi.ffi_state'(X6),X10),s('type.num.num',X11),s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),X12)))),
  file('thm.closSem.state_induction','thm.closSem.state_nchotomy')).
fof(f233,plain,(
  ( ! [X6,X4,X7,X5,X3] : (p(s(bool,happ(s(fun('type.closSem.state'(sK0),bool),sK1),s('type.closSem.state'(sK0),'const.closSem.recordtype|46|state_5'(s('type.list.list'('type.option.option'('type.closSem.v')),X3),s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),X4),s('type.ffi.ffi_state'(sK0),X5),s('type.num.num',X6),s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),X7))))))) )),
  inference(cnf_transformation,[],[f198])).
% SZS output end Proof for thm.closSem
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 122
% Passive clauses: 1786
% Generated clauses: 12202
% Final active clauses: 112
% Final passive clauses: 1550
% Input formulas: 69
% Initial clauses: 103
% 
% Duplicate literals: 519
% Trivial inequalities: 259
% Fw subsumption resolutions: 916
% Fw demodulations: 1281
% Bw demodulations: 8
% 
% Simple tautologies: 237
% Equational tautologies: 37
% Forward subsumptions: 7083
% Bw demodulations to eq. taut.: 1
% 
% Binary resolution: 174
% Factoring: 1
% Forward superposition: 4190
% Backward superposition: 4513
% Self superposition: 121
% Equality factoring: 66
% Equality resolution: 22
% 
% Split clauses: 72
% Split components: 146
% SAT solver clauses: 199
% SAT solver unit clauses: 14
% SAT solver binary clauses: 79
% SAT solver learnt clauses: 1
% 
% Sat splits: 72
% Sat splitting refutations: 2
% 
% TWLsolver clauses: 193
% TWLsolver calls for satisfiability: 76
% 
% Memory used [KB]: 10106
% Time elapsed: 0.481 s
% ------------------------------
% ------------------------------
% Success in time 0.48 s
