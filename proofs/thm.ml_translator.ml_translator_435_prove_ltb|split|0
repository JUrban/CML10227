Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 149 next slice time: 5
dis+11_7_3 on thm.ml_translator
% (146133)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 118
% Passive clauses: 1871
% Generated clauses: 20434
% Final active clauses: 118
% Final passive clauses: 1659
% Input formulas: 53
% Initial clauses: 74
% 
% Duplicate literals: 726
% Trivial inequalities: 333
% Fw subsumption resolutions: 2602
% Fw demodulations: 1854
% 
% Simple tautologies: 399
% Equational tautologies: 41
% Forward subsumptions: 12033
% 
% Binary resolution: 80
% Factoring: 1
% Forward superposition: 7649
% Backward superposition: 6685
% Self superposition: 231
% Equality factoring: 101
% Equality resolution: 34
% 
% Split clauses: 228
% Split components: 468
% SAT solver clauses: 439
% SAT solver unit clauses: 25
% SAT solver binary clauses: 133
% 
% Sat splits: 228
% 
% TWLsolver clauses: 439
% TWLsolver calls for satisfiability: 83
% 
% Memory used [KB]: 14328
% Time elapsed: 0.600 s
% ------------------------------
% ------------------------------
% remaining time: 144 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.ml_translator
% (146176)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 98
% Passive clauses: 429
% Generated clauses: 13498
% Final active clauses: 92
% Final passive clauses: 325
% Input formulas: 53
% Initial clauses: 74
% 
% Duplicate literals: 588
% Trivial inequalities: 209
% Fw subsumption resolutions: 1003
% Fw demodulations: 1035
% Bw demodulations: 6
% Condensations: 1781
% Global subsumptions: 9
% 
% Simple tautologies: 196
% Equational tautologies: 37
% Forward subsumptions: 7424
% 
% Binary resolution: 69
% Factoring: 1
% Forward superposition: 4270
% Backward superposition: 3719
% Self superposition: 188
% Equality factoring: 81
% Equality resolution: 22
% 
% Split clauses: 39
% Split components: 78
% SAT solver clauses: 869
% SAT solver unit clauses: 120
% SAT solver binary clauses: 47
% SAT solver learnt clauses: 18
% 
% Sat splits: 39
% Sat splitting refutations: 4
% 
% TWLsolver clauses: 833
% TWLsolver calls for satisfiability: 232
% 
% Memory used [KB]: 10362
% Time elapsed: 0.700 s
% ------------------------------
% ------------------------------
% remaining time: 136 next slice time: 103
lrs+11_2_br=off:cond=on:fde=none:gs=on:gsaa=full_model:lwlo=on:nwc=2:sas=minisat:stl=30:ssfp=100000:ssfq=1.4:smm=sco:ssnc=none:sp=occurrence:urr=on_98 on thm.ml_translator
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.ml_translator
% SZS output start Proof for thm.ml_translator
fof(f14149,plain,(
  $false),
  inference(subsumption_resolution,[],[f14148,f242])).
fof(f242,plain,(
  s('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),'const.semanticPrimitives.empty_store_0') != s('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),'const.semanticPrimitives.state_refs_1'(s('type.semanticPrimitives.state'('type.one.one'),'const.ml_translator.empty_state_0')))),
  inference(backward_demodulation,[],[f230,f166])).
fof(f166,plain,(
  s('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),'const.semanticPrimitives.empty_store_0') != s('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),'const.semanticPrimitives.state_refs_1'(s('type.semanticPrimitives.state'('type.one.one'),'const.pair.FST_1'(s('type.pair.prod'('type.semanticPrimitives.state'('type.one.one'),'type.semanticPrimitives.result'(sK1,sK0)),'const.pair.,_2'(s('type.semanticPrimitives.state'('type.one.one'),'const.ml_translator.empty_state_0'),s('type.semanticPrimitives.result'(sK1,sK0),'const.semanticPrimitives.Rval_1'(s(sK1,sK2)))))))))),
  inference(cnf_transformation,[],[f145])).
fof(f145,plain,(
  s('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),'const.semanticPrimitives.empty_store_0') != s('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),'const.semanticPrimitives.state_refs_1'(s('type.semanticPrimitives.state'('type.one.one'),'const.pair.FST_1'(s('type.pair.prod'('type.semanticPrimitives.state'('type.one.one'),'type.semanticPrimitives.result'(sK1,sK0)),'const.pair.,_2'(s('type.semanticPrimitives.state'('type.one.one'),'const.ml_translator.empty_state_0'),s('type.semanticPrimitives.result'(sK1,sK0),'const.semanticPrimitives.Rval_1'(s(sK1,sK2)))))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1,sK2])],[f140])).
fof(f140,plain,(
  ? [X0,X1,X2] : s('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),'const.semanticPrimitives.empty_store_0') != s('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),'const.semanticPrimitives.state_refs_1'(s('type.semanticPrimitives.state'('type.one.one'),'const.pair.FST_1'(s('type.pair.prod'('type.semanticPrimitives.state'('type.one.one'),'type.semanticPrimitives.result'(X1,X0)),'const.pair.,_2'(s('type.semanticPrimitives.state'('type.one.one'),'const.ml_translator.empty_state_0'),s('type.semanticPrimitives.result'(X1,X0),'const.semanticPrimitives.Rval_1'(s(X1,X2)))))))))),
  inference(ennf_transformation,[],[f56])).
fof(f56,plain,(
  ~! [X0,X1,X2] : s('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),'const.semanticPrimitives.empty_store_0') = s('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),'const.semanticPrimitives.state_refs_1'(s('type.semanticPrimitives.state'('type.one.one'),'const.pair.FST_1'(s('type.pair.prod'('type.semanticPrimitives.state'('type.one.one'),'type.semanticPrimitives.result'(X1,X0)),'const.pair.,_2'(s('type.semanticPrimitives.state'('type.one.one'),'const.ml_translator.empty_state_0'),s('type.semanticPrimitives.result'(X1,X0),'const.semanticPrimitives.Rval_1'(s(X1,X2)))))))))),
  inference(flattening,[],[f55])).
fof(f55,plain,(
  ~! [X0,X1] : ! [X2] : s('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),'const.semanticPrimitives.empty_store_0') = s('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),'const.semanticPrimitives.state_refs_1'(s('type.semanticPrimitives.state'('type.one.one'),'const.pair.FST_1'(s('type.pair.prod'('type.semanticPrimitives.state'('type.one.one'),'type.semanticPrimitives.result'(X1,X0)),'const.pair.,_2'(s('type.semanticPrimitives.state'('type.one.one'),'const.ml_translator.empty_state_0'),s('type.semanticPrimitives.result'(X1,X0),'const.semanticPrimitives.Rval_1'(s(X1,X2)))))))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6,X7] : ! [X8] : s('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),'const.semanticPrimitives.empty_store_0') = s('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),'const.semanticPrimitives.state_refs_1'(s('type.semanticPrimitives.state'('type.one.one'),'const.pair.FST_1'(s('type.pair.prod'('type.semanticPrimitives.state'('type.one.one'),'type.semanticPrimitives.result'(X7,X6)),'const.pair.,_2'(s('type.semanticPrimitives.state'('type.one.one'),'const.ml_translator.empty_state_0'),s('type.semanticPrimitives.result'(X7,X6),'const.semanticPrimitives.Rval_1'(s(X7,X8)))))))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6,X7] : ! [X8] : s('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),'const.semanticPrimitives.empty_store_0') = s('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),'const.semanticPrimitives.state_refs_1'(s('type.semanticPrimitives.state'('type.one.one'),'const.pair.FST_1'(s('type.pair.prod'('type.semanticPrimitives.state'('type.one.one'),'type.semanticPrimitives.result'(X7,X6)),'const.pair.,_2'(s('type.semanticPrimitives.state'('type.one.one'),'const.ml_translator.empty_state_0'),s('type.semanticPrimitives.result'(X7,X6),'const.semanticPrimitives.Rval_1'(s(X7,X8)))))))))),
  file('thm.ml_translator.ml_translator_435_prove_ltb|split|0','thm.ml_translator.ml_translator_435_prove_ltb|split|0')).
fof(f230,plain,(
  ( ! [X2,X0,X3,X1] : (s(X1,X2) = s(X1,'const.pair.FST_1'(s('type.pair.prod'(X1,X0),'const.pair.,_2'(s(X1,X2),s(X0,X3)))))) )),
  inference(cnf_transformation,[],[f121])).
fof(f121,plain,(
  ! [X0,X1,X2,X3] : s(X1,X2) = s(X1,'const.pair.FST_1'(s('type.pair.prod'(X1,X0),'const.pair.,_2'(s(X1,X2),s(X0,X3)))))),
  inference(flattening,[],[f120])).
fof(f120,plain,(
  ! [X0,X1] : ! [X2,X3] : s(X1,X2) = s(X1,'const.pair.FST_1'(s('type.pair.prod'(X1,X0),'const.pair.,_2'(s(X1,X2),s(X0,X3)))))),
  inference(rectify,[],[f25])).
fof(f25,axiom,(
  ! [X6,X7] : ! [X8,X12] : s(X7,X8) = s(X7,'const.pair.FST_1'(s('type.pair.prod'(X7,X6),'const.pair.,_2'(s(X7,X8),s(X6,X12)))))),
  file('thm.ml_translator.ml_translator_435_prove_ltb|split|0','thm.pair.FST')).
fof(f14148,plain,(
  s('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),'const.semanticPrimitives.empty_store_0') = s('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),'const.semanticPrimitives.state_refs_1'(s('type.semanticPrimitives.state'('type.one.one'),'const.ml_translator.empty_state_0')))),
  inference(forward_demodulation,[],[f14083,f12161])).
fof(f12161,plain,(
  ( ! [X4,X5,X3] : (s('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),X3) = s('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),'const.semanticPrimitives.state_refs_1'(s('type.semanticPrimitives.state'(X4),'const.semanticPrimitives.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),X3))),s('type.semanticPrimitives.state'(X4),X5)))))) )),
  inference(superposition,[],[f221,f243])).
fof(f243,plain,(
  ( ! [X2,X0,X3,X1] : (s(X0,X2) = s(X0,happ(s(fun(X1,X0),'const.combin.K_1'(s(X0,X2))),s(X1,X3)))) )),
  inference(forward_demodulation,[],[f232,f229])).
fof(f229,plain,(
  ( ! [X2,X0,X3,X1] : (s(X1,X2) = s(X1,'const.combin.K_2'(s(X1,X2),s(X0,X3)))) )),
  inference(cnf_transformation,[],[f119])).
fof(f119,plain,(
  ! [X0,X1,X2,X3] : s(X1,X2) = s(X1,'const.combin.K_2'(s(X1,X2),s(X0,X3)))),
  inference(flattening,[],[f118])).
fof(f118,plain,(
  ! [X0,X1] : ! [X2,X3] : s(X1,X2) = s(X1,'const.combin.K_2'(s(X1,X2),s(X0,X3)))),
  inference(rectify,[],[f23])).
fof(f23,axiom,(
  ! [X6,X7] : ! [X8,X12] : s(X7,X8) = s(X7,'const.combin.K_2'(s(X7,X8),s(X6,X12)))),
  file('thm.ml_translator.ml_translator_435_prove_ltb|split|0','thm.combin.K_THM')).
fof(f232,plain,(
  ( ! [X2,X0,X3,X1] : (s(X0,'const.combin.K_2'(s(X0,X2),s(X1,X3))) = s(X0,happ(s(fun(X1,X0),'const.combin.K_1'(s(X0,X2))),s(X1,X3)))) )),
  inference(cnf_transformation,[],[f125])).
fof(f125,plain,(
  ! [X0,X1,X2,X3] : s(X0,'const.combin.K_2'(s(X0,X2),s(X1,X3))) = s(X0,happ(s(fun(X1,X0),'const.combin.K_1'(s(X0,X2))),s(X1,X3)))),
  inference(flattening,[],[f124])).
fof(f124,plain,(
  ! [X0,X1] : ! [X2,X3] : s(X0,'const.combin.K_2'(s(X0,X2),s(X1,X3))) = s(X0,happ(s(fun(X1,X0),'const.combin.K_1'(s(X0,X2))),s(X1,X3)))),
  inference(rectify,[],[f53])).
fof(f53,axiom,(
  ! [X7,X6] : ! [X19,X20] : s(X7,'const.combin.K_2'(s(X7,X19),s(X6,X20))) = s(X7,happ(s(fun(X6,X7),'const.combin.K_1'(s(X7,X19))),s(X6,X20)))),
  file('thm.ml_translator.ml_translator_435_prove_ltb|split|0','ARITY_1_2_const.combin.K')).
fof(f221,plain,(
  ( ! [X2,X0,X1] : (s('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),'const.semanticPrimitives.state_refs_1'(s('type.semanticPrimitives.state'(X0),'const.semanticPrimitives.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'))),X2),s('type.semanticPrimitives.state'(X0),X1))))) = s('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),happ(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'))),X2),s('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),'const.semanticPrimitives.state_refs_1'(s('type.semanticPrimitives.state'(X0),X1)))))) )),
  inference(cnf_transformation,[],[f110])).
fof(f110,plain,(
  ! [X0,X1,X2] : s('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),'const.semanticPrimitives.state_refs_1'(s('type.semanticPrimitives.state'(X0),'const.semanticPrimitives.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'))),X2),s('type.semanticPrimitives.state'(X0),X1))))) = s('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),happ(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'))),X2),s('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),'const.semanticPrimitives.state_refs_1'(s('type.semanticPrimitives.state'(X0),X1)))))),
  inference(flattening,[],[f109])).
fof(f109,plain,(
  ! [X0] : ! [X1,X2] : s('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),'const.semanticPrimitives.state_refs_1'(s('type.semanticPrimitives.state'(X0),'const.semanticPrimitives.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'))),X2),s('type.semanticPrimitives.state'(X0),X1))))) = s('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),happ(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'))),X2),s('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),'const.semanticPrimitives.state_refs_1'(s('type.semanticPrimitives.state'(X0),X1)))))),
  inference(rectify,[],[f49])).
fof(f49,axiom,(
  ! [X15] : ! [X16,X17] : s('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),'const.semanticPrimitives.state_refs_1'(s('type.semanticPrimitives.state'(X15),'const.semanticPrimitives.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'))),X17),s('type.semanticPrimitives.state'(X15),X16))))) = s('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),happ(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'))),X17),s('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),'const.semanticPrimitives.state_refs_1'(s('type.semanticPrimitives.state'(X15),X16)))))),
  file('thm.ml_translator.ml_translator_435_prove_ltb|split|0','thm.semanticPrimitives.semanticPrimitives_238_prove_ltb')).
fof(f14083,plain,(
  s('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),'const.semanticPrimitives.state_refs_1'(s('type.semanticPrimitives.state'('type.one.one'),'const.ml_translator.empty_state_0'))) = s('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),'const.semanticPrimitives.state_refs_1'(s('type.semanticPrimitives.state'('type.one.one'),'const.semanticPrimitives.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),'const.semanticPrimitives.empty_store_0'))),s('type.semanticPrimitives.state'('type.one.one'),'const.semanticPrimitives.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'('type.one.one'),'type.ffi.ffi_state'('type.one.one')),'const.combin.K_1'(s('type.ffi.ffi_state'('type.one.one'),'const.ffi.initial_ffi_state_2'(s(fun('type.num.num',fun('type.one.one',fun('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),'type.ffi.oracle_result'('type.one.one')))),'const.bool.ARB_0'),s('type.one.one','const.one.one_0'))))),s('type.semanticPrimitives.state'('type.one.one'),'const.semanticPrimitives.state_defined_types_fupd_2'(s(fun(fun('type.semanticPrimitives.tid_or_exn',bool),fun('type.semanticPrimitives.tid_or_exn',bool)),'const.combin.K_1'(s(fun('type.semanticPrimitives.tid_or_exn',bool),'const.pred_set.EMPTY_0'))),s('type.semanticPrimitives.state'('type.one.one'),'const.semanticPrimitives.state_defined_mods_fupd_2'(s(fun(fun('type.list.list'('type.string.char'),bool),fun('type.list.list'('type.string.char'),bool)),'const.combin.K_1'(s(fun('type.list.list'('type.string.char'),bool),'const.pred_set.EMPTY_0'))),s('type.semanticPrimitives.state'('type.one.one'),'const.bool.ARB_0')))))))))))),
  inference(superposition,[],[f207,f169])).
fof(f169,plain,(
  s('type.semanticPrimitives.state'('type.one.one'),'const.ml_translator.empty_state_0') = s('type.semanticPrimitives.state'('type.one.one'),'const.semanticPrimitives.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num','const.num.|48|_0'))),s('type.semanticPrimitives.state'('type.one.one'),'const.semanticPrimitives.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),'const.semanticPrimitives.empty_store_0'))),s('type.semanticPrimitives.state'('type.one.one'),'const.semanticPrimitives.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'('type.one.one'),'type.ffi.ffi_state'('type.one.one')),'const.combin.K_1'(s('type.ffi.ffi_state'('type.one.one'),'const.ffi.initial_ffi_state_2'(s(fun('type.num.num',fun('type.one.one',fun('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),'type.ffi.oracle_result'('type.one.one')))),'const.bool.ARB_0'),s('type.one.one','const.one.one_0'))))),s('type.semanticPrimitives.state'('type.one.one'),'const.semanticPrimitives.state_defined_types_fupd_2'(s(fun(fun('type.semanticPrimitives.tid_or_exn',bool),fun('type.semanticPrimitives.tid_or_exn',bool)),'const.combin.K_1'(s(fun('type.semanticPrimitives.tid_or_exn',bool),'const.pred_set.EMPTY_0'))),s('type.semanticPrimitives.state'('type.one.one'),'const.semanticPrimitives.state_defined_mods_fupd_2'(s(fun(fun('type.list.list'('type.string.char'),bool),fun('type.list.list'('type.string.char'),bool)),'const.combin.K_1'(s(fun('type.list.list'('type.string.char'),bool),'const.pred_set.EMPTY_0'))),s('type.semanticPrimitives.state'('type.one.one'),'const.bool.ARB_0')))))))))))),
  inference(cnf_transformation,[],[f24])).
fof(f24,axiom,(
  s('type.semanticPrimitives.state'('type.one.one'),'const.ml_translator.empty_state_0') = s('type.semanticPrimitives.state'('type.one.one'),'const.semanticPrimitives.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num','const.num.|48|_0'))),s('type.semanticPrimitives.state'('type.one.one'),'const.semanticPrimitives.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),'const.semanticPrimitives.empty_store_0'))),s('type.semanticPrimitives.state'('type.one.one'),'const.semanticPrimitives.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'('type.one.one'),'type.ffi.ffi_state'('type.one.one')),'const.combin.K_1'(s('type.ffi.ffi_state'('type.one.one'),'const.ffi.initial_ffi_state_2'(s(fun('type.num.num',fun('type.one.one',fun('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),'type.ffi.oracle_result'('type.one.one')))),'const.bool.ARB_0'),s('type.one.one','const.one.one_0'))))),s('type.semanticPrimitives.state'('type.one.one'),'const.semanticPrimitives.state_defined_types_fupd_2'(s(fun(fun('type.semanticPrimitives.tid_or_exn',bool),fun('type.semanticPrimitives.tid_or_exn',bool)),'const.combin.K_1'(s(fun('type.semanticPrimitives.tid_or_exn',bool),'const.pred_set.EMPTY_0'))),s('type.semanticPrimitives.state'('type.one.one'),'const.semanticPrimitives.state_defined_mods_fupd_2'(s(fun(fun('type.list.list'('type.string.char'),bool),fun('type.list.list'('type.string.char'),bool)),'const.combin.K_1'(s(fun('type.list.list'('type.string.char'),bool),'const.pred_set.EMPTY_0'))),s('type.semanticPrimitives.state'('type.one.one'),'const.bool.ARB_0')))))))))))),
  file('thm.ml_translator.ml_translator_435_prove_ltb|split|0','thm.ml_translator.empty_state_def')).
fof(f207,plain,(
  ( ! [X2,X0,X1] : (s('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),'const.semanticPrimitives.state_refs_1'(s('type.semanticPrimitives.state'(X0),X1))) = s('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),'const.semanticPrimitives.state_refs_1'(s('type.semanticPrimitives.state'(X0),'const.semanticPrimitives.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),X2),s('type.semanticPrimitives.state'(X0),X1)))))) )),
  inference(cnf_transformation,[],[f82])).
fof(f82,plain,(
  ! [X0,X1,X2] : s('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),'const.semanticPrimitives.state_refs_1'(s('type.semanticPrimitives.state'(X0),X1))) = s('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),'const.semanticPrimitives.state_refs_1'(s('type.semanticPrimitives.state'(X0),'const.semanticPrimitives.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),X2),s('type.semanticPrimitives.state'(X0),X1)))))),
  inference(flattening,[],[f81])).
fof(f81,plain,(
  ! [X0] : ! [X1,X2] : s('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),'const.semanticPrimitives.state_refs_1'(s('type.semanticPrimitives.state'(X0),X1))) = s('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),'const.semanticPrimitives.state_refs_1'(s('type.semanticPrimitives.state'(X0),'const.semanticPrimitives.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),X2),s('type.semanticPrimitives.state'(X0),X1)))))),
  inference(rectify,[],[f32])).
fof(f32,axiom,(
  ! [X15] : ! [X16,X17] : s('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),'const.semanticPrimitives.state_refs_1'(s('type.semanticPrimitives.state'(X15),X16))) = s('type.list.list'('type.semanticPrimitives.store_v'('type.semanticPrimitives.v')),'const.semanticPrimitives.state_refs_1'(s('type.semanticPrimitives.state'(X15),'const.semanticPrimitives.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),X17),s('type.semanticPrimitives.state'(X15),X16)))))),
  file('thm.ml_translator.ml_translator_435_prove_ltb|split|0','thm.semanticPrimitives.semanticPrimitives_22|49|_prove_ltb')).
% SZS output end Proof for thm.ml_translator
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 101
% Passive clauses: 501
% Generated clauses: 13926
% Final active clauses: 84
% Final passive clauses: 267
% Input formulas: 53
% Initial clauses: 74
% 
% Duplicate literals: 595
% Trivial inequalities: 170
% Fw subsumption resolutions: 958
% Fw demodulations: 1036
% Bw demodulations: 131
% Condensations: 1959
% Global subsumptions: 5
% 
% Simple tautologies: 195
% Equational tautologies: 97
% Forward subsumptions: 8317
% Bw demodulations to eq. taut.: 1
% 
% Unit resulting resolution: 312
% Factoring: 1
% Forward superposition: 4005
% Backward superposition: 4230
% Self superposition: 217
% Equality factoring: 80
% Equality resolution: 16
% 
% Split clauses: 22
% Split components: 44
% SAT solver clauses: 561
% SAT solver unit clauses: 74
% SAT solver binary clauses: 149
% 
% Sat splits: 22
% Sat splitting refutations: 9
% 
% Memory used [KB]: 7675
% Time elapsed: 0.789 s
% ------------------------------
% ------------------------------
% Success in time 2.1 s
