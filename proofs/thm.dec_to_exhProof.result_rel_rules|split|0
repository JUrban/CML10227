Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 149 next slice time: 5
dis+11_7_3 on thm.dec_to_exhProof
% (60940)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 90
% Passive clauses: 1694
% Generated clauses: 9513
% Final active clauses: 86
% Final passive clauses: 1511
% Input formulas: 21
% Initial clauses: 265
% 
% Duplicate literals: 679
% Trivial inequalities: 116
% Fw subsumption resolutions: 1126
% Fw demodulations: 20
% Bw demodulations: 1
% 
% Simple tautologies: 260
% Equational tautologies: 130
% Forward subsumptions: 3215
% 
% Binary resolution: 33
% Forward superposition: 3285
% Backward superposition: 3060
% Self superposition: 460
% Equality factoring: 408
% Equality resolution: 12
% 
% Split clauses: 448
% Split components: 903
% SAT solver clauses: 1473
% SAT solver unit clauses: 319
% SAT solver binary clauses: 486
% 
% Sat splits: 448
% Sat splitting refutations: 2
% 
% TWLsolver clauses: 1467
% TWLsolver calls for satisfiability: 51
% 
% Memory used [KB]: 4349
% Time elapsed: 0.600 s
% ------------------------------
% ------------------------------
% remaining time: 143 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.dec_to_exhProof
% (61041)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 157
% Passive clauses: 744
% Generated clauses: 22160
% Final active clauses: 152
% Final passive clauses: 281
% Input formulas: 21
% Initial clauses: 265
% 
% Duplicate literals: 1680
% Trivial inequalities: 27
% Fw subsumption resolutions: 2175
% Fw demodulations: 4147
% Bw demodulations: 308
% Condensations: 1589
% Global subsumptions: 4
% 
% Simple tautologies: 245
% Equational tautologies: 19
% Forward subsumptions: 10349
% 
% Binary resolution: 47
% Forward superposition: 7249
% Backward superposition: 3768
% Self superposition: 114
% Equality factoring: 36
% Equality resolution: 4
% 
% Split clauses: 21
% Split components: 52
% SAT solver clauses: 992
% SAT solver unit clauses: 256
% SAT solver binary clauses: 98
% SAT solver learnt clauses: 8
% 
% Sat splits: 21
% Sat splitting refutations: 4
% 
% TWLsolver clauses: 976
% TWLsolver calls for satisfiability: 4910
% 
% Memory used [KB]: 11769
% Time elapsed: 0.700 s
% ------------------------------
% ------------------------------
% remaining time: 136 next slice time: 103
lrs+11_2_br=off:cond=on:fde=none:gs=on:gsaa=full_model:lwlo=on:nwc=2:sas=minisat:stl=30:ssfp=100000:ssfq=1.4:smm=sco:ssnc=none:sp=occurrence:urr=on_98 on thm.dec_to_exhProof
% (61102)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 168
% Passive clauses: 1708
% Generated clauses: 38279
% Final active clauses: 63
% Final passive clauses: 388
% Input formulas: 21
% Initial clauses: 265
% Discarded non-redundant clauses: 8
% 
% Duplicate literals: 3514
% Trivial inequalities: 306
% Fw subsumption resolutions: 2065
% Fw demodulations: 1726
% Bw demodulations: 773
% Condensations: 6269
% Global subsumptions: 24
% 
% Simple tautologies: 512
% Equational tautologies: 2853
% Forward subsumptions: 19392
% Bw demodulations to eq. taut.: 2
% 
% Unit resulting resolution: 7051
% Forward superposition: 8628
% Backward superposition: 5457
% Self superposition: 546
% Equality factoring: 500
% Equality resolution: 19
% 
% Split clauses: 102
% Split components: 207
% SAT solver clauses: 1955
% SAT solver unit clauses: 14
% SAT solver binary clauses: 428
% 
% Sat splits: 102
% Sat splitting refutations: 17
% 
% Memory used [KB]: 11129
% Time elapsed: 10.400 s
% ------------------------------
% ------------------------------
% remaining time: 32 next slice time: 32
dis+11_5_fde=none:nwc=1:sas=minisat:sd=1:ss=axioms:st=5.0:sos=all:sdd=large:sser=off:sfr=on:ssfp=100000:ssfq=2.0:ssnc=none_37 on thm.dec_to_exhProof
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.dec_to_exhProof
% SZS output start Proof for thm.dec_to_exhProof
fof(f1741,plain,(
  $false),
  inference(subsumption_resolution,[],[f1740,f482])).
fof(f482,plain,(
  ~p(s(bool,'F_0'))),
  inference(cnf_transformation,[],[f42])).
fof(f42,plain,(
  ~p(s(bool,'F_0'))),
  inference(flattening,[],[f2])).
fof(f2,axiom,(
  ~p(s(bool,'F_0'))),
  file('thm.dec_to_exhProof.result_rel_rules|split|0',aHL_FALSITY)).
fof(f1740,plain,(
  p(s(bool,'F_0'))),
  inference(forward_demodulation,[],[f1739,f574])).
fof(f574,plain,(
  s(bool,'F_0') = s(bool,'const.dec_to_exhProof.result_rel_4'(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun(sK29,fun(sK31,bool))),sK32),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),sK33),s('type.pair.prod'('type.decSem.state'(sK30),'type.semanticPrimitives.result'(sK29,'type.conSem.v')),'const.pair.,_2'(s('type.decSem.state'(sK30),sK36),s('type.semanticPrimitives.result'(sK29,'type.conSem.v'),'const.semanticPrimitives.Rval_1'(s(sK29,sK34))))),s('type.pair.prod'('type.exhSem.state'(sK30),'type.semanticPrimitives.result'(sK31,'type.exhSem.v')),'const.pair.,_2'(s('type.exhSem.state'(sK30),sK37),s('type.semanticPrimitives.result'(sK31,'type.exhSem.v'),'const.semanticPrimitives.Rval_1'(s(sK31,sK35)))))))),
  inference(subsumption_resolution,[],[f572,f483])).
fof(f483,plain,(
  p(s(bool,'T_0'))),
  inference(cnf_transformation,[],[f20])).
fof(f20,axiom,(
  p(s(bool,'T_0'))),
  file('thm.dec_to_exhProof.result_rel_rules|split|0','thm.bool.TRUTH')).
fof(f572,plain,(
  ~p(s(bool,'T_0')) | s(bool,'F_0') = s(bool,'const.dec_to_exhProof.result_rel_4'(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun(sK29,fun(sK31,bool))),sK32),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),sK33),s('type.pair.prod'('type.decSem.state'(sK30),'type.semanticPrimitives.result'(sK29,'type.conSem.v')),'const.pair.,_2'(s('type.decSem.state'(sK30),sK36),s('type.semanticPrimitives.result'(sK29,'type.conSem.v'),'const.semanticPrimitives.Rval_1'(s(sK29,sK34))))),s('type.pair.prod'('type.exhSem.state'(sK30),'type.semanticPrimitives.result'(sK31,'type.exhSem.v')),'const.pair.,_2'(s('type.exhSem.state'(sK30),sK37),s('type.semanticPrimitives.result'(sK31,'type.exhSem.v'),'const.semanticPrimitives.Rval_1'(s(sK31,sK35)))))))),
  inference(superposition,[],[f226,f487])).
fof(f487,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f3])).
fof(f3,axiom,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) | s(bool,'F_0') = s(bool,X0))),
  file('thm.dec_to_exhProof.result_rel_rules|split|0',aHL_BOOL_CASES)).
fof(f226,plain,(
  ~p(s(bool,'const.dec_to_exhProof.result_rel_4'(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun(sK29,fun(sK31,bool))),sK32),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),sK33),s('type.pair.prod'('type.decSem.state'(sK30),'type.semanticPrimitives.result'(sK29,'type.conSem.v')),'const.pair.,_2'(s('type.decSem.state'(sK30),sK36),s('type.semanticPrimitives.result'(sK29,'type.conSem.v'),'const.semanticPrimitives.Rval_1'(s(sK29,sK34))))),s('type.pair.prod'('type.exhSem.state'(sK30),'type.semanticPrimitives.result'(sK31,'type.exhSem.v')),'const.pair.,_2'(s('type.exhSem.state'(sK30),sK37),s('type.semanticPrimitives.result'(sK31,'type.exhSem.v'),'const.semanticPrimitives.Rval_1'(s(sK31,sK35))))))))),
  inference(cnf_transformation,[],[f101])).
fof(f101,plain,(
  p(s(bool,happ(s(fun(sK31,bool),happ(s(fun(sK29,fun(sK31,bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun(sK29,fun(sK31,bool))),sK32),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),sK33))),s(sK29,sK34))),s(sK31,sK35)))) & p(s(bool,'const.dec_to_exhProof.state_rel_3'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),sK33),s('type.decSem.state'(sK30),sK36),s('type.exhSem.state'(sK30),sK37)))) & ~p(s(bool,'const.dec_to_exhProof.result_rel_4'(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun(sK29,fun(sK31,bool))),sK32),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),sK33),s('type.pair.prod'('type.decSem.state'(sK30),'type.semanticPrimitives.result'(sK29,'type.conSem.v')),'const.pair.,_2'(s('type.decSem.state'(sK30),sK36),s('type.semanticPrimitives.result'(sK29,'type.conSem.v'),'const.semanticPrimitives.Rval_1'(s(sK29,sK34))))),s('type.pair.prod'('type.exhSem.state'(sK30),'type.semanticPrimitives.result'(sK31,'type.exhSem.v')),'const.pair.,_2'(s('type.exhSem.state'(sK30),sK37),s('type.semanticPrimitives.result'(sK31,'type.exhSem.v'),'const.semanticPrimitives.Rval_1'(s(sK31,sK35))))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK29,sK30,sK31,sK32,sK33,sK34,sK35,sK36,sK37])],[f46])).
fof(f46,plain,(
  ? [X0,X1,X2,X3,X4,X5,X6,X7,X8] : (p(s(bool,happ(s(fun(X2,bool),happ(s(fun(X0,fun(X2,bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun(X0,fun(X2,bool))),X3),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X4))),s(X0,X5))),s(X2,X6)))) & p(s(bool,'const.dec_to_exhProof.state_rel_3'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X4),s('type.decSem.state'(X1),X7),s('type.exhSem.state'(X1),X8)))) & ~p(s(bool,'const.dec_to_exhProof.result_rel_4'(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun(X0,fun(X2,bool))),X3),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X4),s('type.pair.prod'('type.decSem.state'(X1),'type.semanticPrimitives.result'(X0,'type.conSem.v')),'const.pair.,_2'(s('type.decSem.state'(X1),X7),s('type.semanticPrimitives.result'(X0,'type.conSem.v'),'const.semanticPrimitives.Rval_1'(s(X0,X5))))),s('type.pair.prod'('type.exhSem.state'(X1),'type.semanticPrimitives.result'(X2,'type.exhSem.v')),'const.pair.,_2'(s('type.exhSem.state'(X1),X8),s('type.semanticPrimitives.result'(X2,'type.exhSem.v'),'const.semanticPrimitives.Rval_1'(s(X2,X6)))))))))),
  inference(flattening,[],[f45])).
fof(f45,plain,(
  ? [X0,X1,X2,X3,X4,X5,X6,X7,X8] : ((p(s(bool,happ(s(fun(X2,bool),happ(s(fun(X0,fun(X2,bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun(X0,fun(X2,bool))),X3),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X4))),s(X0,X5))),s(X2,X6)))) & p(s(bool,'const.dec_to_exhProof.state_rel_3'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X4),s('type.decSem.state'(X1),X7),s('type.exhSem.state'(X1),X8))))) & ~p(s(bool,'const.dec_to_exhProof.result_rel_4'(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun(X0,fun(X2,bool))),X3),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X4),s('type.pair.prod'('type.decSem.state'(X1),'type.semanticPrimitives.result'(X0,'type.conSem.v')),'const.pair.,_2'(s('type.decSem.state'(X1),X7),s('type.semanticPrimitives.result'(X0,'type.conSem.v'),'const.semanticPrimitives.Rval_1'(s(X0,X5))))),s('type.pair.prod'('type.exhSem.state'(X1),'type.semanticPrimitives.result'(X2,'type.exhSem.v')),'const.pair.,_2'(s('type.exhSem.state'(X1),X8),s('type.semanticPrimitives.result'(X2,'type.exhSem.v'),'const.semanticPrimitives.Rval_1'(s(X2,X6)))))))))),
  inference(ennf_transformation,[],[f24])).
fof(f24,plain,(
  ~! [X0,X1,X2,X3,X4,X5,X6,X7,X8] : ((p(s(bool,happ(s(fun(X2,bool),happ(s(fun(X0,fun(X2,bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun(X0,fun(X2,bool))),X3),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X4))),s(X0,X5))),s(X2,X6)))) & p(s(bool,'const.dec_to_exhProof.state_rel_3'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X4),s('type.decSem.state'(X1),X7),s('type.exhSem.state'(X1),X8))))) => p(s(bool,'const.dec_to_exhProof.result_rel_4'(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun(X0,fun(X2,bool))),X3),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X4),s('type.pair.prod'('type.decSem.state'(X1),'type.semanticPrimitives.result'(X0,'type.conSem.v')),'const.pair.,_2'(s('type.decSem.state'(X1),X7),s('type.semanticPrimitives.result'(X0,'type.conSem.v'),'const.semanticPrimitives.Rval_1'(s(X0,X5))))),s('type.pair.prod'('type.exhSem.state'(X1),'type.semanticPrimitives.result'(X2,'type.exhSem.v')),'const.pair.,_2'(s('type.exhSem.state'(X1),X8),s('type.semanticPrimitives.result'(X2,'type.exhSem.v'),'const.semanticPrimitives.Rval_1'(s(X2,X6)))))))))),
  inference(flattening,[],[f23])).
fof(f23,plain,(
  ~! [X0,X1,X2] : ! [X3,X4,X5,X6,X7,X8] : ((p(s(bool,happ(s(fun(X2,bool),happ(s(fun(X0,fun(X2,bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun(X0,fun(X2,bool))),X3),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X4))),s(X0,X5))),s(X2,X6)))) & p(s(bool,'const.dec_to_exhProof.state_rel_3'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X4),s('type.decSem.state'(X1),X7),s('type.exhSem.state'(X1),X8))))) => p(s(bool,'const.dec_to_exhProof.result_rel_4'(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun(X0,fun(X2,bool))),X3),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X4),s('type.pair.prod'('type.decSem.state'(X1),'type.semanticPrimitives.result'(X0,'type.conSem.v')),'const.pair.,_2'(s('type.decSem.state'(X1),X7),s('type.semanticPrimitives.result'(X0,'type.conSem.v'),'const.semanticPrimitives.Rval_1'(s(X0,X5))))),s('type.pair.prod'('type.exhSem.state'(X1),'type.semanticPrimitives.result'(X2,'type.exhSem.v')),'const.pair.,_2'(s('type.exhSem.state'(X1),X8),s('type.semanticPrimitives.result'(X2,'type.exhSem.v'),'const.semanticPrimitives.Rval_1'(s(X2,X6)))))))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6,X7,X8] : ! [X9,X10,X11,X12,X13,X14] : ((p(s(bool,happ(s(fun(X8,bool),happ(s(fun(X6,fun(X8,bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun(X6,fun(X8,bool))),X9),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X10))),s(X6,X11))),s(X8,X12)))) & p(s(bool,'const.dec_to_exhProof.state_rel_3'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X10),s('type.decSem.state'(X7),X13),s('type.exhSem.state'(X7),X14))))) => p(s(bool,'const.dec_to_exhProof.result_rel_4'(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun(X6,fun(X8,bool))),X9),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X10),s('type.pair.prod'('type.decSem.state'(X7),'type.semanticPrimitives.result'(X6,'type.conSem.v')),'const.pair.,_2'(s('type.decSem.state'(X7),X13),s('type.semanticPrimitives.result'(X6,'type.conSem.v'),'const.semanticPrimitives.Rval_1'(s(X6,X11))))),s('type.pair.prod'('type.exhSem.state'(X7),'type.semanticPrimitives.result'(X8,'type.exhSem.v')),'const.pair.,_2'(s('type.exhSem.state'(X7),X14),s('type.semanticPrimitives.result'(X8,'type.exhSem.v'),'const.semanticPrimitives.Rval_1'(s(X8,X12)))))))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6,X7,X8] : ! [X9,X10,X11,X12,X13,X14] : ((p(s(bool,happ(s(fun(X8,bool),happ(s(fun(X6,fun(X8,bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun(X6,fun(X8,bool))),X9),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X10))),s(X6,X11))),s(X8,X12)))) & p(s(bool,'const.dec_to_exhProof.state_rel_3'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X10),s('type.decSem.state'(X7),X13),s('type.exhSem.state'(X7),X14))))) => p(s(bool,'const.dec_to_exhProof.result_rel_4'(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun(X6,fun(X8,bool))),X9),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X10),s('type.pair.prod'('type.decSem.state'(X7),'type.semanticPrimitives.result'(X6,'type.conSem.v')),'const.pair.,_2'(s('type.decSem.state'(X7),X13),s('type.semanticPrimitives.result'(X6,'type.conSem.v'),'const.semanticPrimitives.Rval_1'(s(X6,X11))))),s('type.pair.prod'('type.exhSem.state'(X7),'type.semanticPrimitives.result'(X8,'type.exhSem.v')),'const.pair.,_2'(s('type.exhSem.state'(X7),X14),s('type.semanticPrimitives.result'(X8,'type.exhSem.v'),'const.semanticPrimitives.Rval_1'(s(X8,X12)))))))))),
  file('thm.dec_to_exhProof.result_rel_rules|split|0','thm.dec_to_exhProof.result_rel_rules|split|0')).
fof(f1739,plain,(
  p(s(bool,'const.dec_to_exhProof.result_rel_4'(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun(sK29,fun(sK31,bool))),sK32),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),sK33),s('type.pair.prod'('type.decSem.state'(sK30),'type.semanticPrimitives.result'(sK29,'type.conSem.v')),'const.pair.,_2'(s('type.decSem.state'(sK30),sK36),s('type.semanticPrimitives.result'(sK29,'type.conSem.v'),'const.semanticPrimitives.Rval_1'(s(sK29,sK34))))),s('type.pair.prod'('type.exhSem.state'(sK30),'type.semanticPrimitives.result'(sK31,'type.exhSem.v')),'const.pair.,_2'(s('type.exhSem.state'(sK30),sK37),s('type.semanticPrimitives.result'(sK31,'type.exhSem.v'),'const.semanticPrimitives.Rval_1'(s(sK31,sK35))))))))),
  inference(subsumption_resolution,[],[f1726,f1715])).
fof(f1715,plain,(
  sP0(sK33,sK30,sK31,sK29,sK32,'const.pair.,_2'(s('type.exhSem.state'(sK30),sK37),s('type.semanticPrimitives.result'(sK31,'type.exhSem.v'),'const.semanticPrimitives.Rval_1'(s(sK31,sK35)))),'const.pair.,_2'(s('type.decSem.state'(sK30),sK36),s('type.semanticPrimitives.result'(sK29,'type.conSem.v'),'const.semanticPrimitives.Rval_1'(s(sK29,sK34)))))),
  inference(subsumption_resolution,[],[f1706,f483])).
fof(f1706,plain,(
  ~p(s(bool,'T_0')) | sP0(sK33,sK30,sK31,sK29,sK32,'const.pair.,_2'(s('type.exhSem.state'(sK30),sK37),s('type.semanticPrimitives.result'(sK31,'type.exhSem.v'),'const.semanticPrimitives.Rval_1'(s(sK31,sK35)))),'const.pair.,_2'(s('type.decSem.state'(sK30),sK36),s('type.semanticPrimitives.result'(sK29,'type.conSem.v'),'const.semanticPrimitives.Rval_1'(s(sK29,sK34)))))),
  inference(superposition,[],[f1224,f505])).
fof(f505,plain,(
  s(bool,'T_0') = s(bool,happ(s(fun(sK31,bool),happ(s(fun(sK29,fun(sK31,bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun(sK29,fun(sK31,bool))),sK32),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),sK33))),s(sK29,sK34))),s(sK31,sK35)))),
  inference(subsumption_resolution,[],[f504,f482])).
fof(f504,plain,(
  p(s(bool,'F_0')) | s(bool,'T_0') = s(bool,happ(s(fun(sK31,bool),happ(s(fun(sK29,fun(sK31,bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun(sK29,fun(sK31,bool))),sK32),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),sK33))),s(sK29,sK34))),s(sK31,sK35)))),
  inference(superposition,[],[f224,f487])).
fof(f224,plain,(
  p(s(bool,happ(s(fun(sK31,bool),happ(s(fun(sK29,fun(sK31,bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun(sK29,fun(sK31,bool))),sK32),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),sK33))),s(sK29,sK34))),s(sK31,sK35))))),
  inference(cnf_transformation,[],[f101])).
fof(f1224,plain,(
  ( ! [X4,X2,X0,X3,X1] : (~p(s(bool,happ(s(fun(X0,bool),happ(s(fun(X1,fun(X0,bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun(X1,fun(X0,bool))),X2),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),sK33))),s(X1,X4))),s(X0,X3)))) | sP0(sK33,sK30,X0,X1,X2,'const.pair.,_2'(s('type.exhSem.state'(sK30),sK37),s('type.semanticPrimitives.result'(X0,'type.exhSem.v'),'const.semanticPrimitives.Rval_1'(s(X0,X3)))),'const.pair.,_2'(s('type.decSem.state'(sK30),sK36),s('type.semanticPrimitives.result'(X1,'type.conSem.v'),'const.semanticPrimitives.Rval_1'(s(X1,X4)))))) )),
  inference(equality_resolution,[],[f963])).
fof(f963,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.decSem.state'(sK30),'type.semanticPrimitives.result'(X1,'type.conSem.v')),X5) != s('type.pair.prod'('type.decSem.state'(sK30),'type.semanticPrimitives.result'(X1,'type.conSem.v')),'const.pair.,_2'(s('type.decSem.state'(sK30),sK36),s('type.semanticPrimitives.result'(X1,'type.conSem.v'),'const.semanticPrimitives.Rval_1'(s(X1,X3))))) | sP0(sK33,sK30,X0,X1,X2,'const.pair.,_2'(s('type.exhSem.state'(sK30),sK37),s('type.semanticPrimitives.result'(X0,'type.exhSem.v'),'const.semanticPrimitives.Rval_1'(s(X0,X4)))),X5) | ~p(s(bool,happ(s(fun(X0,bool),happ(s(fun(X1,fun(X0,bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun(X1,fun(X0,bool))),X2),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),sK33))),s(X1,X3))),s(X0,X4))))) )),
  inference(equality_resolution,[],[f489])).
fof(f489,plain,(
  ( ! [X14,X12,X10,X15,X13,X11,X9] : (s('type.pair.prod'('type.exhSem.state'(sK30),'type.semanticPrimitives.result'(X9,'type.exhSem.v')),X12) != s('type.pair.prod'('type.exhSem.state'(sK30),'type.semanticPrimitives.result'(X9,'type.exhSem.v')),'const.pair.,_2'(s('type.exhSem.state'(sK30),sK37),s('type.semanticPrimitives.result'(X9,'type.exhSem.v'),'const.semanticPrimitives.Rval_1'(s(X9,X15))))) | ~p(s(bool,happ(s(fun(X9,bool),happ(s(fun(X10,fun(X9,bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun(X10,fun(X9,bool))),X11),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),sK33))),s(X10,X14))),s(X9,X15)))) | sP0(sK33,sK30,X9,X10,X11,X12,X13) | s('type.pair.prod'('type.decSem.state'(sK30),'type.semanticPrimitives.result'(X10,'type.conSem.v')),X13) != s('type.pair.prod'('type.decSem.state'(sK30),'type.semanticPrimitives.result'(X10,'type.conSem.v')),'const.pair.,_2'(s('type.decSem.state'(sK30),sK36),s('type.semanticPrimitives.result'(X10,'type.conSem.v'),'const.semanticPrimitives.Rval_1'(s(X10,X14)))))) )),
  inference(resolution,[],[f225,f236])).
fof(f236,plain,(
  ( ! [X6,X4,X2,X0,X10,X8,X7,X5,X3,X1,X9] : (sP0(X0,X1,X2,X3,X4,X5,X6) | ~p(s(bool,'const.dec_to_exhProof.state_rel_3'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X0),s('type.decSem.state'(X1),X9),s('type.exhSem.state'(X1),X10)))) | ~p(s(bool,happ(s(fun(X2,bool),happ(s(fun(X3,fun(X2,bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun(X3,fun(X2,bool))),X4),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X0))),s(X3,X7))),s(X2,X8)))) | s('type.pair.prod'('type.exhSem.state'(X1),'type.semanticPrimitives.result'(X2,'type.exhSem.v')),X5) != s('type.pair.prod'('type.exhSem.state'(X1),'type.semanticPrimitives.result'(X2,'type.exhSem.v')),'const.pair.,_2'(s('type.exhSem.state'(X1),X10),s('type.semanticPrimitives.result'(X2,'type.exhSem.v'),'const.semanticPrimitives.Rval_1'(s(X2,X8))))) | s('type.pair.prod'('type.decSem.state'(X1),'type.semanticPrimitives.result'(X3,'type.conSem.v')),X6) != s('type.pair.prod'('type.decSem.state'(X1),'type.semanticPrimitives.result'(X3,'type.conSem.v')),'const.pair.,_2'(s('type.decSem.state'(X1),X9),s('type.semanticPrimitives.result'(X3,'type.conSem.v'),'const.semanticPrimitives.Rval_1'(s(X3,X7)))))) )),
  inference(cnf_transformation,[],[f107])).
fof(f107,plain,(
  ! [X0,X1,X2,X3,X4,X5,X6] : ((~sP0(X0,X1,X2,X3,X4,X5,X6) | (s('type.pair.prod'('type.decSem.state'(X1),'type.semanticPrimitives.result'(X3,'type.conSem.v')),X6) = s('type.pair.prod'('type.decSem.state'(X1),'type.semanticPrimitives.result'(X3,'type.conSem.v')),'const.pair.,_2'(s('type.decSem.state'(X1),sK44(X6,X5,X4,X3,X2,X1,X0)),s('type.semanticPrimitives.result'(X3,'type.conSem.v'),'const.semanticPrimitives.Rval_1'(s(X3,sK42(X6,X5,X4,X3,X2,X1,X0)))))) & s('type.pair.prod'('type.exhSem.state'(X1),'type.semanticPrimitives.result'(X2,'type.exhSem.v')),X5) = s('type.pair.prod'('type.exhSem.state'(X1),'type.semanticPrimitives.result'(X2,'type.exhSem.v')),'const.pair.,_2'(s('type.exhSem.state'(X1),sK45(X6,X5,X4,X3,X2,X1,X0)),s('type.semanticPrimitives.result'(X2,'type.exhSem.v'),'const.semanticPrimitives.Rval_1'(s(X2,sK43(X6,X5,X4,X3,X2,X1,X0)))))) & p(s(bool,happ(s(fun(X2,bool),happ(s(fun(X3,fun(X2,bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun(X3,fun(X2,bool))),X4),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X0))),s(X3,sK42(X6,X5,X4,X3,X2,X1,X0)))),s(X2,sK43(X6,X5,X4,X3,X2,X1,X0))))) & p(s(bool,'const.dec_to_exhProof.state_rel_3'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X0),s('type.decSem.state'(X1),sK44(X6,X5,X4,X3,X2,X1,X0)),s('type.exhSem.state'(X1),sK45(X6,X5,X4,X3,X2,X1,X0))))))) & (! [X7,X8,X9,X10] : (s('type.pair.prod'('type.decSem.state'(X1),'type.semanticPrimitives.result'(X3,'type.conSem.v')),X6) != s('type.pair.prod'('type.decSem.state'(X1),'type.semanticPrimitives.result'(X3,'type.conSem.v')),'const.pair.,_2'(s('type.decSem.state'(X1),X9),s('type.semanticPrimitives.result'(X3,'type.conSem.v'),'const.semanticPrimitives.Rval_1'(s(X3,X7))))) | s('type.pair.prod'('type.exhSem.state'(X1),'type.semanticPrimitives.result'(X2,'type.exhSem.v')),X5) != s('type.pair.prod'('type.exhSem.state'(X1),'type.semanticPrimitives.result'(X2,'type.exhSem.v')),'const.pair.,_2'(s('type.exhSem.state'(X1),X10),s('type.semanticPrimitives.result'(X2,'type.exhSem.v'),'const.semanticPrimitives.Rval_1'(s(X2,X8))))) | ~p(s(bool,happ(s(fun(X2,bool),happ(s(fun(X3,fun(X2,bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun(X3,fun(X2,bool))),X4),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X0))),s(X3,X7))),s(X2,X8)))) | ~p(s(bool,'const.dec_to_exhProof.state_rel_3'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X0),s('type.decSem.state'(X1),X9),s('type.exhSem.state'(X1),X10))))) | sP0(X0,X1,X2,X3,X4,X5,X6)))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK42,sK43,sK44,sK45])],[f106])).
fof(f106,plain,(
  ! [X0,X1,X2,X3,X4,X5,X6] : ((~sP0(X0,X1,X2,X3,X4,X5,X6) | ? [X11,X12,X13,X14] : (s('type.pair.prod'('type.decSem.state'(X1),'type.semanticPrimitives.result'(X3,'type.conSem.v')),X6) = s('type.pair.prod'('type.decSem.state'(X1),'type.semanticPrimitives.result'(X3,'type.conSem.v')),'const.pair.,_2'(s('type.decSem.state'(X1),X13),s('type.semanticPrimitives.result'(X3,'type.conSem.v'),'const.semanticPrimitives.Rval_1'(s(X3,X11))))) & s('type.pair.prod'('type.exhSem.state'(X1),'type.semanticPrimitives.result'(X2,'type.exhSem.v')),X5) = s('type.pair.prod'('type.exhSem.state'(X1),'type.semanticPrimitives.result'(X2,'type.exhSem.v')),'const.pair.,_2'(s('type.exhSem.state'(X1),X14),s('type.semanticPrimitives.result'(X2,'type.exhSem.v'),'const.semanticPrimitives.Rval_1'(s(X2,X12))))) & p(s(bool,happ(s(fun(X2,bool),happ(s(fun(X3,fun(X2,bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun(X3,fun(X2,bool))),X4),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X0))),s(X3,X11))),s(X2,X12)))) & p(s(bool,'const.dec_to_exhProof.state_rel_3'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X0),s('type.decSem.state'(X1),X13),s('type.exhSem.state'(X1),X14)))))) & (! [X7,X8,X9,X10] : (s('type.pair.prod'('type.decSem.state'(X1),'type.semanticPrimitives.result'(X3,'type.conSem.v')),X6) != s('type.pair.prod'('type.decSem.state'(X1),'type.semanticPrimitives.result'(X3,'type.conSem.v')),'const.pair.,_2'(s('type.decSem.state'(X1),X9),s('type.semanticPrimitives.result'(X3,'type.conSem.v'),'const.semanticPrimitives.Rval_1'(s(X3,X7))))) | s('type.pair.prod'('type.exhSem.state'(X1),'type.semanticPrimitives.result'(X2,'type.exhSem.v')),X5) != s('type.pair.prod'('type.exhSem.state'(X1),'type.semanticPrimitives.result'(X2,'type.exhSem.v')),'const.pair.,_2'(s('type.exhSem.state'(X1),X10),s('type.semanticPrimitives.result'(X2,'type.exhSem.v'),'const.semanticPrimitives.Rval_1'(s(X2,X8))))) | ~p(s(bool,happ(s(fun(X2,bool),happ(s(fun(X3,fun(X2,bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun(X3,fun(X2,bool))),X4),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X0))),s(X3,X7))),s(X2,X8)))) | ~p(s(bool,'const.dec_to_exhProof.state_rel_3'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X0),s('type.decSem.state'(X1),X9),s('type.exhSem.state'(X1),X10))))) | sP0(X0,X1,X2,X3,X4,X5,X6)))),
  inference(rectify,[],[f105])).
fof(f105,plain,(
  ! [X8,X1,X2,X0,X3,X10,X9] : ((~sP0(X8,X1,X2,X0,X3,X10,X9) | ? [X18,X19,X20,X21] : (s('type.pair.prod'('type.decSem.state'(X1),'type.semanticPrimitives.result'(X0,'type.conSem.v')),X9) = s('type.pair.prod'('type.decSem.state'(X1),'type.semanticPrimitives.result'(X0,'type.conSem.v')),'const.pair.,_2'(s('type.decSem.state'(X1),X20),s('type.semanticPrimitives.result'(X0,'type.conSem.v'),'const.semanticPrimitives.Rval_1'(s(X0,X18))))) & s('type.pair.prod'('type.exhSem.state'(X1),'type.semanticPrimitives.result'(X2,'type.exhSem.v')),X10) = s('type.pair.prod'('type.exhSem.state'(X1),'type.semanticPrimitives.result'(X2,'type.exhSem.v')),'const.pair.,_2'(s('type.exhSem.state'(X1),X21),s('type.semanticPrimitives.result'(X2,'type.exhSem.v'),'const.semanticPrimitives.Rval_1'(s(X2,X19))))) & p(s(bool,happ(s(fun(X2,bool),happ(s(fun(X0,fun(X2,bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun(X0,fun(X2,bool))),X3),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X8))),s(X0,X18))),s(X2,X19)))) & p(s(bool,'const.dec_to_exhProof.state_rel_3'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X8),s('type.decSem.state'(X1),X20),s('type.exhSem.state'(X1),X21)))))) & (! [X18,X19,X20,X21] : (s('type.pair.prod'('type.decSem.state'(X1),'type.semanticPrimitives.result'(X0,'type.conSem.v')),X9) != s('type.pair.prod'('type.decSem.state'(X1),'type.semanticPrimitives.result'(X0,'type.conSem.v')),'const.pair.,_2'(s('type.decSem.state'(X1),X20),s('type.semanticPrimitives.result'(X0,'type.conSem.v'),'const.semanticPrimitives.Rval_1'(s(X0,X18))))) | s('type.pair.prod'('type.exhSem.state'(X1),'type.semanticPrimitives.result'(X2,'type.exhSem.v')),X10) != s('type.pair.prod'('type.exhSem.state'(X1),'type.semanticPrimitives.result'(X2,'type.exhSem.v')),'const.pair.,_2'(s('type.exhSem.state'(X1),X21),s('type.semanticPrimitives.result'(X2,'type.exhSem.v'),'const.semanticPrimitives.Rval_1'(s(X2,X19))))) | ~p(s(bool,happ(s(fun(X2,bool),happ(s(fun(X0,fun(X2,bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun(X0,fun(X2,bool))),X3),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X8))),s(X0,X18))),s(X2,X19)))) | ~p(s(bool,'const.dec_to_exhProof.state_rel_3'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X8),s('type.decSem.state'(X1),X20),s('type.exhSem.state'(X1),X21))))) | sP0(X8,X1,X2,X0,X3,X10,X9)))),
  inference(nnf_transformation,[],[f67])).
fof(f67,plain,(
  ! [X8,X1,X2,X0,X3,X10,X9] : (sP0(X8,X1,X2,X0,X3,X10,X9) <=> ? [X18,X19,X20,X21] : (s('type.pair.prod'('type.decSem.state'(X1),'type.semanticPrimitives.result'(X0,'type.conSem.v')),X9) = s('type.pair.prod'('type.decSem.state'(X1),'type.semanticPrimitives.result'(X0,'type.conSem.v')),'const.pair.,_2'(s('type.decSem.state'(X1),X20),s('type.semanticPrimitives.result'(X0,'type.conSem.v'),'const.semanticPrimitives.Rval_1'(s(X0,X18))))) & s('type.pair.prod'('type.exhSem.state'(X1),'type.semanticPrimitives.result'(X2,'type.exhSem.v')),X10) = s('type.pair.prod'('type.exhSem.state'(X1),'type.semanticPrimitives.result'(X2,'type.exhSem.v')),'const.pair.,_2'(s('type.exhSem.state'(X1),X21),s('type.semanticPrimitives.result'(X2,'type.exhSem.v'),'const.semanticPrimitives.Rval_1'(s(X2,X19))))) & p(s(bool,happ(s(fun(X2,bool),happ(s(fun(X0,fun(X2,bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun(X0,fun(X2,bool))),X3),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X8))),s(X0,X18))),s(X2,X19)))) & p(s(bool,'const.dec_to_exhProof.state_rel_3'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X8),s('type.decSem.state'(X1),X20),s('type.exhSem.state'(X1),X21))))))),
  introduced(predicate_definition_introduction,[new_symbols(naming,[sP0])])).
fof(f225,plain,(
  p(s(bool,'const.dec_to_exhProof.state_rel_3'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),sK33),s('type.decSem.state'(sK30),sK36),s('type.exhSem.state'(sK30),sK37))))),
  inference(cnf_transformation,[],[f101])).
fof(f1726,plain,(
  p(s(bool,'const.dec_to_exhProof.result_rel_4'(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun(sK29,fun(sK31,bool))),sK32),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),sK33),s('type.pair.prod'('type.decSem.state'(sK30),'type.semanticPrimitives.result'(sK29,'type.conSem.v')),'const.pair.,_2'(s('type.decSem.state'(sK30),sK36),s('type.semanticPrimitives.result'(sK29,'type.conSem.v'),'const.semanticPrimitives.Rval_1'(s(sK29,sK34))))),s('type.pair.prod'('type.exhSem.state'(sK30),'type.semanticPrimitives.result'(sK31,'type.exhSem.v')),'const.pair.,_2'(s('type.exhSem.state'(sK30),sK37),s('type.semanticPrimitives.result'(sK31,'type.exhSem.v'),'const.semanticPrimitives.Rval_1'(s(sK31,sK35)))))))) | ~sP0(sK33,sK30,sK31,sK29,sK32,'const.pair.,_2'(s('type.exhSem.state'(sK30),sK37),s('type.semanticPrimitives.result'(sK31,'type.exhSem.v'),'const.semanticPrimitives.Rval_1'(s(sK31,sK35)))),'const.pair.,_2'(s('type.decSem.state'(sK30),sK36),s('type.semanticPrimitives.result'(sK29,'type.conSem.v'),'const.semanticPrimitives.Rval_1'(s(sK29,sK34)))))),
  inference(resolution,[],[f567,f241])).
fof(f241,plain,(
  ( ! [X6,X4,X2,X0,X10,X8,X5,X3,X1,X9] : (p(s(bool,'const.dec_to_exhProof.result_rel_4'(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun(X0,fun(X2,bool))),X3),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X4),s('type.pair.prod'('type.decSem.state'(X1),'type.semanticPrimitives.result'(X0,'type.conSem.v')),X5),s('type.pair.prod'('type.exhSem.state'(X1),'type.semanticPrimitives.result'(X2,'type.exhSem.v')),X6)))) | p(s(bool,happ(s(fun('type.pair.prod'('type.exhSem.state'(X1),'type.semanticPrimitives.result'(X2,'type.exhSem.v')),bool),happ(s(fun('type.pair.prod'('type.decSem.state'(X1),'type.semanticPrimitives.result'(X0,'type.conSem.v')),fun('type.pair.prod'('type.exhSem.state'(X1),'type.semanticPrimitives.result'(X2,'type.exhSem.v')),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.pair.prod'('type.decSem.state'(X1),'type.semanticPrimitives.result'(X0,'type.conSem.v')),fun('type.pair.prod'('type.exhSem.state'(X1),'type.semanticPrimitives.result'(X2,'type.exhSem.v')),bool))),sK52(X6,X5,X4,X3,X2,X1,X0)),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X8))),s('type.pair.prod'('type.decSem.state'(X1),'type.semanticPrimitives.result'(X0,'type.conSem.v')),X9))),s('type.pair.prod'('type.exhSem.state'(X1),'type.semanticPrimitives.result'(X2,'type.exhSem.v')),X10)))) | ~sP0(X8,X1,X2,X0,X3,X10,X9)) )),
  inference(cnf_transformation,[],[f110])).
fof(f110,plain,(
  ! [X0,X1,X2,X3,X4,X5,X6] : ((~p(s(bool,'const.dec_to_exhProof.result_rel_4'(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun(X0,fun(X2,bool))),X3),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X4),s('type.pair.prod'('type.decSem.state'(X1),'type.semanticPrimitives.result'(X0,'type.conSem.v')),X5),s('type.pair.prod'('type.exhSem.state'(X1),'type.semanticPrimitives.result'(X2,'type.exhSem.v')),X6)))) | ! [X14] : (((sP0(sK46(X14,X6,X5,X4,X3,X2,X1,X0),X1,X2,X0,X3,sK48(X14,X6,X5,X4,X3,X2,X1,X0),sK47(X14,X6,X5,X4,X3,X2,X1,X0)) | sP1(sK46(X14,X6,X5,X4,X3,X2,X1,X0),X1,X2,sK48(X14,X6,X5,X4,X3,X2,X1,X0),X0,sK47(X14,X6,X5,X4,X3,X2,X1,X0)) | (s('type.pair.prod'('type.decSem.state'(X1),'type.semanticPrimitives.result'(X0,'type.conSem.v')),sK47(X14,X6,X5,X4,X3,X2,X1,X0)) = s('type.pair.prod'('type.decSem.state'(X1),'type.semanticPrimitives.result'(X0,'type.conSem.v')),'const.pair.,_2'(s('type.decSem.state'(X1),sK49(X14,X6,X5,X4,X3,X2,X1,X0)),s('type.semanticPrimitives.result'(X0,'type.conSem.v'),'const.semanticPrimitives.Rerr_1'(s('type.semanticPrimitives.error_result'('type.conSem.v'),'const.semanticPrimitives.Rabort_1'(s('type.semanticPrimitives.abort',sK51(X14,X6,X5,X4,X3,X2,X1,X0)))))))) & s('type.pair.prod'('type.exhSem.state'(X1),'type.semanticPrimitives.result'(X2,'type.exhSem.v')),sK48(X14,X6,X5,X4,X3,X2,X1,X0)) = s('type.pair.prod'('type.exhSem.state'(X1),'type.semanticPrimitives.result'(X2,'type.exhSem.v')),'const.pair.,_2'(s('type.exhSem.state'(X1),sK50(X14,X6,X5,X4,X3,X2,X1,X0)),s('type.semanticPrimitives.result'(X2,'type.exhSem.v'),'const.semanticPrimitives.Rerr_1'(s('type.semanticPrimitives.error_result'('type.exhSem.v'),'const.semanticPrimitives.Rabort_1'(s('type.semanticPrimitives.abort',sK51(X14,X6,X5,X4,X3,X2,X1,X0)))))))) & p(s(bool,'const.dec_to_exhProof.state_rel_3'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),sK46(X14,X6,X5,X4,X3,X2,X1,X0)),s('type.decSem.state'(X1),sK49(X14,X6,X5,X4,X3,X2,X1,X0)),s('type.exhSem.state'(X1),sK50(X14,X6,X5,X4,X3,X2,X1,X0))))))) & ~p(s(bool,happ(s(fun('type.pair.prod'('type.exhSem.state'(X1),'type.semanticPrimitives.result'(X2,'type.exhSem.v')),bool),happ(s(fun('type.pair.prod'('type.decSem.state'(X1),'type.semanticPrimitives.result'(X0,'type.conSem.v')),fun('type.pair.prod'('type.exhSem.state'(X1),'type.semanticPrimitives.result'(X2,'type.exhSem.v')),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.pair.prod'('type.decSem.state'(X1),'type.semanticPrimitives.result'(X0,'type.conSem.v')),fun('type.pair.prod'('type.exhSem.state'(X1),'type.semanticPrimitives.result'(X2,'type.exhSem.v')),bool))),X14),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),sK46(X14,X6,X5,X4,X3,X2,X1,X0)))),s('type.pair.prod'('type.decSem.state'(X1),'type.semanticPrimitives.result'(X0,'type.conSem.v')),sK47(X14,X6,X5,X4,X3,X2,X1,X0)))),s('type.pair.prod'('type.exhSem.state'(X1),'type.semanticPrimitives.result'(X2,'type.exhSem.v')),sK48(X14,X6,X5,X4,X3,X2,X1,X0)))))) | p(s(bool,happ(s(fun('type.pair.prod'('type.exhSem.state'(X1),'type.semanticPrimitives.result'(X2,'type.exhSem.v')),bool),happ(s(fun('type.pair.prod'('type.decSem.state'(X1),'type.semanticPrimitives.result'(X0,'type.conSem.v')),fun('type.pair.prod'('type.exhSem.state'(X1),'type.semanticPrimitives.result'(X2,'type.exhSem.v')),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.pair.prod'('type.decSem.state'(X1),'type.semanticPrimitives.result'(X0,'type.conSem.v')),fun('type.pair.prod'('type.exhSem.state'(X1),'type.semanticPrimitives.result'(X2,'type.exhSem.v')),bool))),X14),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X4))),s('type.pair.prod'('type.decSem.state'(X1),'type.semanticPrimitives.result'(X0,'type.conSem.v')),X5))),s('type.pair.prod'('type.exhSem.state'(X1),'type.semanticPrimitives.result'(X2,'type.exhSem.v')),X6)))))) & ((! [X8,X9,X10] : ((~sP0(X8,X1,X2,X0,X3,X10,X9) & ~sP1(X8,X1,X2,X10,X0,X9) & ! [X11,X12,X13] : (s('type.pair.prod'('type.decSem.state'(X1),'type.semanticPrimitives.result'(X0,'type.conSem.v')),X9) != s('type.pair.prod'('type.decSem.state'(X1),'type.semanticPrimitives.result'(X0,'type.conSem.v')),'const.pair.,_2'(s('type.decSem.state'(X1),X11),s('type.semanticPrimitives.result'(X0,'type.conSem.v'),'const.semanticPrimitives.Rerr_1'(s('type.semanticPrimitives.error_result'('type.conSem.v'),'const.semanticPrimitives.Rabort_1'(s('type.semanticPrimitives.abort',X13))))))) | s('type.pair.prod'('type.exhSem.state'(X1),'type.semanticPrimitives.result'(X2,'type.exhSem.v')),X10) != s('type.pair.prod'('type.exhSem.state'(X1),'type.semanticPrimitives.result'(X2,'type.exhSem.v')),'const.pair.,_2'(s('type.exhSem.state'(X1),X12),s('type.semanticPrimitives.result'(X2,'type.exhSem.v'),'const.semanticPrimitives.Rerr_1'(s('type.semanticPrimitives.error_result'('type.exhSem.v'),'const.semanticPrimitives.Rabort_1'(s('type.semanticPrimitives.abort',X13))))))) | ~p(s(bool,'const.dec_to_exhProof.state_rel_3'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X8),s('type.decSem.state'(X1),X11),s('type.exhSem.state'(X1),X12)))))) | p(s(bool,happ(s(fun('type.pair.prod'('type.exhSem.state'(X1),'type.semanticPrimitives.result'(X2,'type.exhSem.v')),bool),happ(s(fun('type.pair.prod'('type.decSem.state'(X1),'type.semanticPrimitives.result'(X0,'type.conSem.v')),fun('type.pair.prod'('type.exhSem.state'(X1),'type.semanticPrimitives.result'(X2,'type.exhSem.v')),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.pair.prod'('type.decSem.state'(X1),'type.semanticPrimitives.result'(X0,'type.conSem.v')),fun('type.pair.prod'('type.exhSem.state'(X1),'type.semanticPrimitives.result'(X2,'type.exhSem.v')),bool))),sK52(X6,X5,X4,X3,X2,X1,X0)),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X8))),s('type.pair.prod'('type.decSem.state'(X1),'type.semanticPrimitives.result'(X0,'type.conSem.v')),X9))),s('type.pair.prod'('type.exhSem.state'(X1),'type.semanticPrimitives.result'(X2,'type.exhSem.v')),X10))))) & ~p(s(bool,happ(s(fun('type.pair.prod'('type.exhSem.state'(X1),'type.semanticPrimitives.result'(X2,'type.exhSem.v')),bool),happ(s(fun('type.pair.prod'('type.decSem.state'(X1),'type.semanticPrimitives.result'(X0,'type.conSem.v')),fun('type.pair.prod'('type.exhSem.state'(X1),'type.semanticPrimitives.result'(X2,'type.exhSem.v')),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.pair.prod'('type.decSem.state'(X1),'type.semanticPrimitives.result'(X0,'type.conSem.v')),fun('type.pair.prod'('type.exhSem.state'(X1),'type.semanticPrimitives.result'(X2,'type.exhSem.v')),bool))),sK52(X6,X5,X4,X3,X2,X1,X0)),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X4))),s('type.pair.prod'('type.decSem.state'(X1),'type.semanticPrimitives.result'(X0,'type.conSem.v')),X5))),s('type.pair.prod'('type.exhSem.state'(X1),'type.semanticPrimitives.result'(X2,'type.exhSem.v')),X6))))) | p(s(bool,'const.dec_to_exhProof.result_rel_4'(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun(X0,fun(X2,bool))),X3),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X4),s('type.pair.prod'('type.decSem.state'(X1),'type.semanticPrimitives.result'(X0,'type.conSem.v')),X5),s('type.pair.prod'('type.exhSem.state'(X1),'type.semanticPrimitives.result'(X2,'type.exhSem.v')),X6))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK46,sK47,sK48,sK49,sK50,sK51,sK52])],[f109])).
fof(f109,plain,(
  ! [X0,X1,X2,X3,X4,X5,X6] : ((~p(s(bool,'const.dec_to_exhProof.result_rel_4'(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun(X0,fun(X2,bool))),X3),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X4),s('type.pair.prod'('type.decSem.state'(X1),'type.semanticPrimitives.result'(X0,'type.conSem.v')),X5),s('type.pair.prod'('type.exhSem.state'(X1),'type.semanticPrimitives.result'(X2,'type.exhSem.v')),X6)))) | ! [X14] : (? [X15,X16,X17] : ((sP0(X15,X1,X2,X0,X3,X17,X16) | sP1(X15,X1,X2,X17,X0,X16) | ? [X18,X19,X20] : (s('type.pair.prod'('type.decSem.state'(X1),'type.semanticPrimitives.result'(X0,'type.conSem.v')),X16) = s('type.pair.prod'('type.decSem.state'(X1),'type.semanticPrimitives.result'(X0,'type.conSem.v')),'const.pair.,_2'(s('type.decSem.state'(X1),X18),s('type.semanticPrimitives.result'(X0,'type.conSem.v'),'const.semanticPrimitives.Rerr_1'(s('type.semanticPrimitives.error_result'('type.conSem.v'),'const.semanticPrimitives.Rabort_1'(s('type.semanticPrimitives.abort',X20))))))) & s('type.pair.prod'('type.exhSem.state'(X1),'type.semanticPrimitives.result'(X2,'type.exhSem.v')),X17) = s('type.pair.prod'('type.exhSem.state'(X1),'type.semanticPrimitives.result'(X2,'type.exhSem.v')),'const.pair.,_2'(s('type.exhSem.state'(X1),X19),s('type.semanticPrimitives.result'(X2,'type.exhSem.v'),'const.semanticPrimitives.Rerr_1'(s('type.semanticPrimitives.error_result'('type.exhSem.v'),'const.semanticPrimitives.Rabort_1'(s('type.semanticPrimitives.abort',X20))))))) & p(s(bool,'const.dec_to_exhProof.state_rel_3'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X15),s('type.decSem.state'(X1),X18),s('type.exhSem.state'(X1),X19)))))) & ~p(s(bool,happ(s(fun('type.pair.prod'('type.exhSem.state'(X1),'type.semanticPrimitives.result'(X2,'type.exhSem.v')),bool),happ(s(fun('type.pair.prod'('type.decSem.state'(X1),'type.semanticPrimitives.result'(X0,'type.conSem.v')),fun('type.pair.prod'('type.exhSem.state'(X1),'type.semanticPrimitives.result'(X2,'type.exhSem.v')),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.pair.prod'('type.decSem.state'(X1),'type.semanticPrimitives.result'(X0,'type.conSem.v')),fun('type.pair.prod'('type.exhSem.state'(X1),'type.semanticPrimitives.result'(X2,'type.exhSem.v')),bool))),X14),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X15))),s('type.pair.prod'('type.decSem.state'(X1),'type.semanticPrimitives.result'(X0,'type.conSem.v')),X16))),s('type.pair.prod'('type.exhSem.state'(X1),'type.semanticPrimitives.result'(X2,'type.exhSem.v')),X17))))) | p(s(bool,happ(s(fun('type.pair.prod'('type.exhSem.state'(X1),'type.semanticPrimitives.result'(X2,'type.exhSem.v')),bool),happ(s(fun('type.pair.prod'('type.decSem.state'(X1),'type.semanticPrimitives.result'(X0,'type.conSem.v')),fun('type.pair.prod'('type.exhSem.state'(X1),'type.semanticPrimitives.result'(X2,'type.exhSem.v')),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.pair.prod'('type.decSem.state'(X1),'type.semanticPrimitives.result'(X0,'type.conSem.v')),fun('type.pair.prod'('type.exhSem.state'(X1),'type.semanticPrimitives.result'(X2,'type.exhSem.v')),bool))),X14),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X4))),s('type.pair.prod'('type.decSem.state'(X1),'type.semanticPrimitives.result'(X0,'type.conSem.v')),X5))),s('type.pair.prod'('type.exhSem.state'(X1),'type.semanticPrimitives.result'(X2,'type.exhSem.v')),X6)))))) & (? [X7] : (! [X8,X9,X10] : ((~sP0(X8,X1,X2,X0,X3,X10,X9) & ~sP1(X8,X1,X2,X10,X0,X9) & ! [X11,X12,X13] : (s('type.pair.prod'('type.decSem.state'(X1),'type.semanticPrimitives.result'(X0,'type.conSem.v')),X9) != s('type.pair.prod'('type.decSem.state'(X1),'type.semanticPrimitives.result'(X0,'type.conSem.v')),'const.pair.,_2'(s('type.decSem.state'(X1),X11),s('type.semanticPrimitives.result'(X0,'type.conSem.v'),'const.semanticPrimitives.Rerr_1'(s('type.semanticPrimitives.error_result'('type.conSem.v'),'const.semanticPrimitives.Rabort_1'(s('type.semanticPrimitives.abort',X13))))))) | s('type.pair.prod'('type.exhSem.state'(X1),'type.semanticPrimitives.result'(X2,'type.exhSem.v')),X10) != s('type.pair.prod'('type.exhSem.state'(X1),'type.semanticPrimitives.result'(X2,'type.exhSem.v')),'const.pair.,_2'(s('type.exhSem.state'(X1),X12),s('type.semanticPrimitives.result'(X2,'type.exhSem.v'),'const.semanticPrimitives.Rerr_1'(s('type.semanticPrimitives.error_result'('type.exhSem.v'),'const.semanticPrimitives.Rabort_1'(s('type.semanticPrimitives.abort',X13))))))) | ~p(s(bool,'const.dec_to_exhProof.state_rel_3'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X8),s('type.decSem.state'(X1),X11),s('type.exhSem.state'(X1),X12)))))) | p(s(bool,happ(s(fun('type.pair.prod'('type.exhSem.state'(X1),'type.semanticPrimitives.result'(X2,'type.exhSem.v')),bool),happ(s(fun('type.pair.prod'('type.decSem.state'(X1),'type.semanticPrimitives.result'(X0,'type.conSem.v')),fun('type.pair.prod'('type.exhSem.state'(X1),'type.semanticPrimitives.result'(X2,'type.exhSem.v')),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.pair.prod'('type.decSem.state'(X1),'type.semanticPrimitives.result'(X0,'type.conSem.v')),fun('type.pair.prod'('type.exhSem.state'(X1),'type.semanticPrimitives.result'(X2,'type.exhSem.v')),bool))),X7),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X8))),s('type.pair.prod'('type.decSem.state'(X1),'type.semanticPrimitives.result'(X0,'type.conSem.v')),X9))),s('type.pair.prod'('type.exhSem.state'(X1),'type.semanticPrimitives.result'(X2,'type.exhSem.v')),X10))))) & ~p(s(bool,happ(s(fun('type.pair.prod'('type.exhSem.state'(X1),'type.semanticPrimitives.result'(X2,'type.exhSem.v')),bool),happ(s(fun('type.pair.prod'('type.decSem.state'(X1),'type.semanticPrimitives.result'(X0,'type.conSem.v')),fun('type.pair.prod'('type.exhSem.state'(X1),'type.semanticPrimitives.result'(X2,'type.exhSem.v')),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.pair.prod'('type.decSem.state'(X1),'type.semanticPrimitives.result'(X0,'type.conSem.v')),fun('type.pair.prod'('type.exhSem.state'(X1),'type.semanticPrimitives.result'(X2,'type.exhSem.v')),bool))),X7),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X4))),s('type.pair.prod'('type.decSem.state'(X1),'type.semanticPrimitives.result'(X0,'type.conSem.v')),X5))),s('type.pair.prod'('type.exhSem.state'(X1),'type.semanticPrimitives.result'(X2,'type.exhSem.v')),X6))))) | p(s(bool,'const.dec_to_exhProof.result_rel_4'(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun(X0,fun(X2,bool))),X3),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X4),s('type.pair.prod'('type.decSem.state'(X1),'type.semanticPrimitives.result'(X0,'type.conSem.v')),X5),s('type.pair.prod'('type.exhSem.state'(X1),'type.semanticPrimitives.result'(X2,'type.exhSem.v')),X6))))))),
  inference(rectify,[],[f108])).
fof(f108,plain,(
  ! [X0,X1,X2,X3,X4,X5,X6] : ((~p(s(bool,'const.dec_to_exhProof.result_rel_4'(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun(X0,fun(X2,bool))),X3),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X4),s('type.pair.prod'('type.decSem.state'(X1),'type.semanticPrimitives.result'(X0,'type.conSem.v')),X5),s('type.pair.prod'('type.exhSem.state'(X1),'type.semanticPrimitives.result'(X2,'type.exhSem.v')),X6)))) | ! [X7] : (? [X8,X9,X10] : ((sP0(X8,X1,X2,X0,X3,X10,X9) | sP1(X8,X1,X2,X10,X0,X9) | ? [X11,X12,X13] : (s('type.pair.prod'('type.decSem.state'(X1),'type.semanticPrimitives.result'(X0,'type.conSem.v')),X9) = s('type.pair.prod'('type.decSem.state'(X1),'type.semanticPrimitives.result'(X0,'type.conSem.v')),'const.pair.,_2'(s('type.decSem.state'(X1),X11),s('type.semanticPrimitives.result'(X0,'type.conSem.v'),'const.semanticPrimitives.Rerr_1'(s('type.semanticPrimitives.error_result'('type.conSem.v'),'const.semanticPrimitives.Rabort_1'(s('type.semanticPrimitives.abort',X13))))))) & s('type.pair.prod'('type.exhSem.state'(X1),'type.semanticPrimitives.result'(X2,'type.exhSem.v')),X10) = s('type.pair.prod'('type.exhSem.state'(X1),'type.semanticPrimitives.result'(X2,'type.exhSem.v')),'const.pair.,_2'(s('type.exhSem.state'(X1),X12),s('type.semanticPrimitives.result'(X2,'type.exhSem.v'),'const.semanticPrimitives.Rerr_1'(s('type.semanticPrimitives.error_result'('type.exhSem.v'),'const.semanticPrimitives.Rabort_1'(s('type.semanticPrimitives.abort',X13))))))) & p(s(bool,'const.dec_to_exhProof.state_rel_3'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X8),s('type.decSem.state'(X1),X11),s('type.exhSem.state'(X1),X12)))))) & ~p(s(bool,happ(s(fun('type.pair.prod'('type.exhSem.state'(X1),'type.semanticPrimitives.result'(X2,'type.exhSem.v')),bool),happ(s(fun('type.pair.prod'('type.decSem.state'(X1),'type.semanticPrimitives.result'(X0,'type.conSem.v')),fun('type.pair.prod'('type.exhSem.state'(X1),'type.semanticPrimitives.result'(X2,'type.exhSem.v')),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.pair.prod'('type.decSem.state'(X1),'type.semanticPrimitives.result'(X0,'type.conSem.v')),fun('type.pair.prod'('type.exhSem.state'(X1),'type.semanticPrimitives.result'(X2,'type.exhSem.v')),bool))),X7),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X8))),s('type.pair.prod'('type.decSem.state'(X1),'type.semanticPrimitives.result'(X0,'type.conSem.v')),X9))),s('type.pair.prod'('type.exhSem.state'(X1),'type.semanticPrimitives.result'(X2,'type.exhSem.v')),X10))))) | p(s(bool,happ(s(fun('type.pair.prod'('type.exhSem.state'(X1),'type.semanticPrimitives.result'(X2,'type.exhSem.v')),bool),happ(s(fun('type.pair.prod'('type.decSem.state'(X1),'type.semanticPrimitives.result'(X0,'type.conSem.v')),fun('type.pair.prod'('type.exhSem.state'(X1),'type.semanticPrimitives.result'(X2,'type.exhSem.v')),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.pair.prod'('type.decSem.state'(X1),'type.semanticPrimitives.result'(X0,'type.conSem.v')),fun('type.pair.prod'('type.exhSem.state'(X1),'type.semanticPrimitives.result'(X2,'type.exhSem.v')),bool))),X7),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X4))),s('type.pair.prod'('type.decSem.state'(X1),'type.semanticPrimitives.result'(X0,'type.conSem.v')),X5))),s('type.pair.prod'('type.exhSem.state'(X1),'type.semanticPrimitives.result'(X2,'type.exhSem.v')),X6)))))) & (? [X7] : (! [X8,X9,X10] : ((~sP0(X8,X1,X2,X0,X3,X10,X9) & ~sP1(X8,X1,X2,X10,X0,X9) & ! [X11,X12,X13] : (s('type.pair.prod'('type.decSem.state'(X1),'type.semanticPrimitives.result'(X0,'type.conSem.v')),X9) != s('type.pair.prod'('type.decSem.state'(X1),'type.semanticPrimitives.result'(X0,'type.conSem.v')),'const.pair.,_2'(s('type.decSem.state'(X1),X11),s('type.semanticPrimitives.result'(X0,'type.conSem.v'),'const.semanticPrimitives.Rerr_1'(s('type.semanticPrimitives.error_result'('type.conSem.v'),'const.semanticPrimitives.Rabort_1'(s('type.semanticPrimitives.abort',X13))))))) | s('type.pair.prod'('type.exhSem.state'(X1),'type.semanticPrimitives.result'(X2,'type.exhSem.v')),X10) != s('type.pair.prod'('type.exhSem.state'(X1),'type.semanticPrimitives.result'(X2,'type.exhSem.v')),'const.pair.,_2'(s('type.exhSem.state'(X1),X12),s('type.semanticPrimitives.result'(X2,'type.exhSem.v'),'const.semanticPrimitives.Rerr_1'(s('type.semanticPrimitives.error_result'('type.exhSem.v'),'const.semanticPrimitives.Rabort_1'(s('type.semanticPrimitives.abort',X13))))))) | ~p(s(bool,'const.dec_to_exhProof.state_rel_3'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X8),s('type.decSem.state'(X1),X11),s('type.exhSem.state'(X1),X12)))))) | p(s(bool,happ(s(fun('type.pair.prod'('type.exhSem.state'(X1),'type.semanticPrimitives.result'(X2,'type.exhSem.v')),bool),happ(s(fun('type.pair.prod'('type.decSem.state'(X1),'type.semanticPrimitives.result'(X0,'type.conSem.v')),fun('type.pair.prod'('type.exhSem.state'(X1),'type.semanticPrimitives.result'(X2,'type.exhSem.v')),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.pair.prod'('type.decSem.state'(X1),'type.semanticPrimitives.result'(X0,'type.conSem.v')),fun('type.pair.prod'('type.exhSem.state'(X1),'type.semanticPrimitives.result'(X2,'type.exhSem.v')),bool))),X7),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X8))),s('type.pair.prod'('type.decSem.state'(X1),'type.semanticPrimitives.result'(X0,'type.conSem.v')),X9))),s('type.pair.prod'('type.exhSem.state'(X1),'type.semanticPrimitives.result'(X2,'type.exhSem.v')),X10))))) & ~p(s(bool,happ(s(fun('type.pair.prod'('type.exhSem.state'(X1),'type.semanticPrimitives.result'(X2,'type.exhSem.v')),bool),happ(s(fun('type.pair.prod'('type.decSem.state'(X1),'type.semanticPrimitives.result'(X0,'type.conSem.v')),fun('type.pair.prod'('type.exhSem.state'(X1),'type.semanticPrimitives.result'(X2,'type.exhSem.v')),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.pair.prod'('type.decSem.state'(X1),'type.semanticPrimitives.result'(X0,'type.conSem.v')),fun('type.pair.prod'('type.exhSem.state'(X1),'type.semanticPrimitives.result'(X2,'type.exhSem.v')),bool))),X7),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X4))),s('type.pair.prod'('type.decSem.state'(X1),'type.semanticPrimitives.result'(X0,'type.conSem.v')),X5))),s('type.pair.prod'('type.exhSem.state'(X1),'type.semanticPrimitives.result'(X2,'type.exhSem.v')),X6))))) | p(s(bool,'const.dec_to_exhProof.result_rel_4'(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun(X0,fun(X2,bool))),X3),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X4),s('type.pair.prod'('type.decSem.state'(X1),'type.semanticPrimitives.result'(X0,'type.conSem.v')),X5),s('type.pair.prod'('type.exhSem.state'(X1),'type.semanticPrimitives.result'(X2,'type.exhSem.v')),X6))))))),
  inference(nnf_transformation,[],[f69])).
fof(f69,plain,(
  ! [X0,X1,X2,X3,X4,X5,X6] : (p(s(bool,'const.dec_to_exhProof.result_rel_4'(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun(X0,fun(X2,bool))),X3),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X4),s('type.pair.prod'('type.decSem.state'(X1),'type.semanticPrimitives.result'(X0,'type.conSem.v')),X5),s('type.pair.prod'('type.exhSem.state'(X1),'type.semanticPrimitives.result'(X2,'type.exhSem.v')),X6)))) <=> ! [X7] : (? [X8,X9,X10] : ((sP0(X8,X1,X2,X0,X3,X10,X9) | sP1(X8,X1,X2,X10,X0,X9) | ? [X11,X12,X13] : (s('type.pair.prod'('type.decSem.state'(X1),'type.semanticPrimitives.result'(X0,'type.conSem.v')),X9) = s('type.pair.prod'('type.decSem.state'(X1),'type.semanticPrimitives.result'(X0,'type.conSem.v')),'const.pair.,_2'(s('type.decSem.state'(X1),X11),s('type.semanticPrimitives.result'(X0,'type.conSem.v'),'const.semanticPrimitives.Rerr_1'(s('type.semanticPrimitives.error_result'('type.conSem.v'),'const.semanticPrimitives.Rabort_1'(s('type.semanticPrimitives.abort',X13))))))) & s('type.pair.prod'('type.exhSem.state'(X1),'type.semanticPrimitives.result'(X2,'type.exhSem.v')),X10) = s('type.pair.prod'('type.exhSem.state'(X1),'type.semanticPrimitives.result'(X2,'type.exhSem.v')),'const.pair.,_2'(s('type.exhSem.state'(X1),X12),s('type.semanticPrimitives.result'(X2,'type.exhSem.v'),'const.semanticPrimitives.Rerr_1'(s('type.semanticPrimitives.error_result'('type.exhSem.v'),'const.semanticPrimitives.Rabort_1'(s('type.semanticPrimitives.abort',X13))))))) & p(s(bool,'const.dec_to_exhProof.state_rel_3'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X8),s('type.decSem.state'(X1),X11),s('type.exhSem.state'(X1),X12)))))) & ~p(s(bool,happ(s(fun('type.pair.prod'('type.exhSem.state'(X1),'type.semanticPrimitives.result'(X2,'type.exhSem.v')),bool),happ(s(fun('type.pair.prod'('type.decSem.state'(X1),'type.semanticPrimitives.result'(X0,'type.conSem.v')),fun('type.pair.prod'('type.exhSem.state'(X1),'type.semanticPrimitives.result'(X2,'type.exhSem.v')),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.pair.prod'('type.decSem.state'(X1),'type.semanticPrimitives.result'(X0,'type.conSem.v')),fun('type.pair.prod'('type.exhSem.state'(X1),'type.semanticPrimitives.result'(X2,'type.exhSem.v')),bool))),X7),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X8))),s('type.pair.prod'('type.decSem.state'(X1),'type.semanticPrimitives.result'(X0,'type.conSem.v')),X9))),s('type.pair.prod'('type.exhSem.state'(X1),'type.semanticPrimitives.result'(X2,'type.exhSem.v')),X10))))) | p(s(bool,happ(s(fun('type.pair.prod'('type.exhSem.state'(X1),'type.semanticPrimitives.result'(X2,'type.exhSem.v')),bool),happ(s(fun('type.pair.prod'('type.decSem.state'(X1),'type.semanticPrimitives.result'(X0,'type.conSem.v')),fun('type.pair.prod'('type.exhSem.state'(X1),'type.semanticPrimitives.result'(X2,'type.exhSem.v')),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.pair.prod'('type.decSem.state'(X1),'type.semanticPrimitives.result'(X0,'type.conSem.v')),fun('type.pair.prod'('type.exhSem.state'(X1),'type.semanticPrimitives.result'(X2,'type.exhSem.v')),bool))),X7),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X4))),s('type.pair.prod'('type.decSem.state'(X1),'type.semanticPrimitives.result'(X0,'type.conSem.v')),X5))),s('type.pair.prod'('type.exhSem.state'(X1),'type.semanticPrimitives.result'(X2,'type.exhSem.v')),X6))))))),
  inference(definition_folding,[],[f47,f68,f67])).
fof(f68,plain,(
  ! [X8,X1,X2,X10,X0,X9] : (sP1(X8,X1,X2,X10,X0,X9) <=> ? [X14,X15,X16,X17] : (s('type.pair.prod'('type.decSem.state'(X1),'type.semanticPrimitives.result'(X0,'type.conSem.v')),X9) = s('type.pair.prod'('type.decSem.state'(X1),'type.semanticPrimitives.result'(X0,'type.conSem.v')),'const.pair.,_2'(s('type.decSem.state'(X1),X16),s('type.semanticPrimitives.result'(X0,'type.conSem.v'),'const.semanticPrimitives.Rerr_1'(s('type.semanticPrimitives.error_result'('type.conSem.v'),'const.semanticPrimitives.Rraise_1'(s('type.conSem.v',X14))))))) & s('type.pair.prod'('type.exhSem.state'(X1),'type.semanticPrimitives.result'(X2,'type.exhSem.v')),X10) = s('type.pair.prod'('type.exhSem.state'(X1),'type.semanticPrimitives.result'(X2,'type.exhSem.v')),'const.pair.,_2'(s('type.exhSem.state'(X1),X17),s('type.semanticPrimitives.result'(X2,'type.exhSem.v'),'const.semanticPrimitives.Rerr_1'(s('type.semanticPrimitives.error_result'('type.exhSem.v'),'const.semanticPrimitives.Rraise_1'(s('type.exhSem.v',X15))))))) & p(s(bool,'const.dec_to_exhProof.v_rel_3'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X8),s('type.conSem.v',X14),s('type.exhSem.v',X15)))) & p(s(bool,'const.dec_to_exhProof.state_rel_3'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X8),s('type.decSem.state'(X1),X16),s('type.exhSem.state'(X1),X17))))))),
  introduced(predicate_definition_introduction,[new_symbols(naming,[sP1])])).
fof(f47,plain,(
  ! [X0,X1,X2,X3,X4,X5,X6] : (p(s(bool,'const.dec_to_exhProof.result_rel_4'(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun(X0,fun(X2,bool))),X3),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X4),s('type.pair.prod'('type.decSem.state'(X1),'type.semanticPrimitives.result'(X0,'type.conSem.v')),X5),s('type.pair.prod'('type.exhSem.state'(X1),'type.semanticPrimitives.result'(X2,'type.exhSem.v')),X6)))) <=> ! [X7] : (? [X8,X9,X10] : ((? [X18,X19,X20,X21] : (s('type.pair.prod'('type.decSem.state'(X1),'type.semanticPrimitives.result'(X0,'type.conSem.v')),X9) = s('type.pair.prod'('type.decSem.state'(X1),'type.semanticPrimitives.result'(X0,'type.conSem.v')),'const.pair.,_2'(s('type.decSem.state'(X1),X20),s('type.semanticPrimitives.result'(X0,'type.conSem.v'),'const.semanticPrimitives.Rval_1'(s(X0,X18))))) & s('type.pair.prod'('type.exhSem.state'(X1),'type.semanticPrimitives.result'(X2,'type.exhSem.v')),X10) = s('type.pair.prod'('type.exhSem.state'(X1),'type.semanticPrimitives.result'(X2,'type.exhSem.v')),'const.pair.,_2'(s('type.exhSem.state'(X1),X21),s('type.semanticPrimitives.result'(X2,'type.exhSem.v'),'const.semanticPrimitives.Rval_1'(s(X2,X19))))) & p(s(bool,happ(s(fun(X2,bool),happ(s(fun(X0,fun(X2,bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun(X0,fun(X2,bool))),X3),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X8))),s(X0,X18))),s(X2,X19)))) & p(s(bool,'const.dec_to_exhProof.state_rel_3'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X8),s('type.decSem.state'(X1),X20),s('type.exhSem.state'(X1),X21))))) | ? [X14,X15,X16,X17] : (s('type.pair.prod'('type.decSem.state'(X1),'type.semanticPrimitives.result'(X0,'type.conSem.v')),X9) = s('type.pair.prod'('type.decSem.state'(X1),'type.semanticPrimitives.result'(X0,'type.conSem.v')),'const.pair.,_2'(s('type.decSem.state'(X1),X16),s('type.semanticPrimitives.result'(X0,'type.conSem.v'),'const.semanticPrimitives.Rerr_1'(s('type.semanticPrimitives.error_result'('type.conSem.v'),'const.semanticPrimitives.Rraise_1'(s('type.conSem.v',X14))))))) & s('type.pair.prod'('type.exhSem.state'(X1),'type.semanticPrimitives.result'(X2,'type.exhSem.v')),X10) = s('type.pair.prod'('type.exhSem.state'(X1),'type.semanticPrimitives.result'(X2,'type.exhSem.v')),'const.pair.,_2'(s('type.exhSem.state'(X1),X17),s('type.semanticPrimitives.result'(X2,'type.exhSem.v'),'const.semanticPrimitives.Rerr_1'(s('type.semanticPrimitives.error_result'('type.exhSem.v'),'const.semanticPrimitives.Rraise_1'(s('type.exhSem.v',X15))))))) & p(s(bool,'const.dec_to_exhProof.v_rel_3'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X8),s('type.conSem.v',X14),s('type.exhSem.v',X15)))) & p(s(bool,'const.dec_to_exhProof.state_rel_3'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X8),s('type.decSem.state'(X1),X16),s('type.exhSem.state'(X1),X17))))) | ? [X11,X12,X13] : (s('type.pair.prod'('type.decSem.state'(X1),'type.semanticPrimitives.result'(X0,'type.conSem.v')),X9) = s('type.pair.prod'('type.decSem.state'(X1),'type.semanticPrimitives.result'(X0,'type.conSem.v')),'const.pair.,_2'(s('type.decSem.state'(X1),X11),s('type.semanticPrimitives.result'(X0,'type.conSem.v'),'const.semanticPrimitives.Rerr_1'(s('type.semanticPrimitives.error_result'('type.conSem.v'),'const.semanticPrimitives.Rabort_1'(s('type.semanticPrimitives.abort',X13))))))) & s('type.pair.prod'('type.exhSem.state'(X1),'type.semanticPrimitives.result'(X2,'type.exhSem.v')),X10) = s('type.pair.prod'('type.exhSem.state'(X1),'type.semanticPrimitives.result'(X2,'type.exhSem.v')),'const.pair.,_2'(s('type.exhSem.state'(X1),X12),s('type.semanticPrimitives.result'(X2,'type.exhSem.v'),'const.semanticPrimitives.Rerr_1'(s('type.semanticPrimitives.error_result'('type.exhSem.v'),'const.semanticPrimitives.Rabort_1'(s('type.semanticPrimitives.abort',X13))))))) & p(s(bool,'const.dec_to_exhProof.state_rel_3'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X8),s('type.decSem.state'(X1),X11),s('type.exhSem.state'(X1),X12)))))) & ~p(s(bool,happ(s(fun('type.pair.prod'('type.exhSem.state'(X1),'type.semanticPrimitives.result'(X2,'type.exhSem.v')),bool),happ(s(fun('type.pair.prod'('type.decSem.state'(X1),'type.semanticPrimitives.result'(X0,'type.conSem.v')),fun('type.pair.prod'('type.exhSem.state'(X1),'type.semanticPrimitives.result'(X2,'type.exhSem.v')),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.pair.prod'('type.decSem.state'(X1),'type.semanticPrimitives.result'(X0,'type.conSem.v')),fun('type.pair.prod'('type.exhSem.state'(X1),'type.semanticPrimitives.result'(X2,'type.exhSem.v')),bool))),X7),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X8))),s('type.pair.prod'('type.decSem.state'(X1),'type.semanticPrimitives.result'(X0,'type.conSem.v')),X9))),s('type.pair.prod'('type.exhSem.state'(X1),'type.semanticPrimitives.result'(X2,'type.exhSem.v')),X10))))) | p(s(bool,happ(s(fun('type.pair.prod'('type.exhSem.state'(X1),'type.semanticPrimitives.result'(X2,'type.exhSem.v')),bool),happ(s(fun('type.pair.prod'('type.decSem.state'(X1),'type.semanticPrimitives.result'(X0,'type.conSem.v')),fun('type.pair.prod'('type.exhSem.state'(X1),'type.semanticPrimitives.result'(X2,'type.exhSem.v')),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.pair.prod'('type.decSem.state'(X1),'type.semanticPrimitives.result'(X0,'type.conSem.v')),fun('type.pair.prod'('type.exhSem.state'(X1),'type.semanticPrimitives.result'(X2,'type.exhSem.v')),bool))),X7),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X4))),s('type.pair.prod'('type.decSem.state'(X1),'type.semanticPrimitives.result'(X0,'type.conSem.v')),X5))),s('type.pair.prod'('type.exhSem.state'(X1),'type.semanticPrimitives.result'(X2,'type.exhSem.v')),X6))))))),
  inference(ennf_transformation,[],[f26])).
fof(f26,plain,(
  ! [X0,X1,X2,X3,X4,X5,X6] : (p(s(bool,'const.dec_to_exhProof.result_rel_4'(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun(X0,fun(X2,bool))),X3),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X4),s('type.pair.prod'('type.decSem.state'(X1),'type.semanticPrimitives.result'(X0,'type.conSem.v')),X5),s('type.pair.prod'('type.exhSem.state'(X1),'type.semanticPrimitives.result'(X2,'type.exhSem.v')),X6)))) <=> ! [X7] : (! [X8,X9,X10] : ((? [X18,X19,X20,X21] : (s('type.pair.prod'('type.decSem.state'(X1),'type.semanticPrimitives.result'(X0,'type.conSem.v')),X9) = s('type.pair.prod'('type.decSem.state'(X1),'type.semanticPrimitives.result'(X0,'type.conSem.v')),'const.pair.,_2'(s('type.decSem.state'(X1),X20),s('type.semanticPrimitives.result'(X0,'type.conSem.v'),'const.semanticPrimitives.Rval_1'(s(X0,X18))))) & s('type.pair.prod'('type.exhSem.state'(X1),'type.semanticPrimitives.result'(X2,'type.exhSem.v')),X10) = s('type.pair.prod'('type.exhSem.state'(X1),'type.semanticPrimitives.result'(X2,'type.exhSem.v')),'const.pair.,_2'(s('type.exhSem.state'(X1),X21),s('type.semanticPrimitives.result'(X2,'type.exhSem.v'),'const.semanticPrimitives.Rval_1'(s(X2,X19))))) & p(s(bool,happ(s(fun(X2,bool),happ(s(fun(X0,fun(X2,bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun(X0,fun(X2,bool))),X3),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X8))),s(X0,X18))),s(X2,X19)))) & p(s(bool,'const.dec_to_exhProof.state_rel_3'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X8),s('type.decSem.state'(X1),X20),s('type.exhSem.state'(X1),X21))))) | ? [X14,X15,X16,X17] : (s('type.pair.prod'('type.decSem.state'(X1),'type.semanticPrimitives.result'(X0,'type.conSem.v')),X9) = s('type.pair.prod'('type.decSem.state'(X1),'type.semanticPrimitives.result'(X0,'type.conSem.v')),'const.pair.,_2'(s('type.decSem.state'(X1),X16),s('type.semanticPrimitives.result'(X0,'type.conSem.v'),'const.semanticPrimitives.Rerr_1'(s('type.semanticPrimitives.error_result'('type.conSem.v'),'const.semanticPrimitives.Rraise_1'(s('type.conSem.v',X14))))))) & s('type.pair.prod'('type.exhSem.state'(X1),'type.semanticPrimitives.result'(X2,'type.exhSem.v')),X10) = s('type.pair.prod'('type.exhSem.state'(X1),'type.semanticPrimitives.result'(X2,'type.exhSem.v')),'const.pair.,_2'(s('type.exhSem.state'(X1),X17),s('type.semanticPrimitives.result'(X2,'type.exhSem.v'),'const.semanticPrimitives.Rerr_1'(s('type.semanticPrimitives.error_result'('type.exhSem.v'),'const.semanticPrimitives.Rraise_1'(s('type.exhSem.v',X15))))))) & p(s(bool,'const.dec_to_exhProof.v_rel_3'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X8),s('type.conSem.v',X14),s('type.exhSem.v',X15)))) & p(s(bool,'const.dec_to_exhProof.state_rel_3'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X8),s('type.decSem.state'(X1),X16),s('type.exhSem.state'(X1),X17))))) | ? [X11,X12,X13] : (s('type.pair.prod'('type.decSem.state'(X1),'type.semanticPrimitives.result'(X0,'type.conSem.v')),X9) = s('type.pair.prod'('type.decSem.state'(X1),'type.semanticPrimitives.result'(X0,'type.conSem.v')),'const.pair.,_2'(s('type.decSem.state'(X1),X11),s('type.semanticPrimitives.result'(X0,'type.conSem.v'),'const.semanticPrimitives.Rerr_1'(s('type.semanticPrimitives.error_result'('type.conSem.v'),'const.semanticPrimitives.Rabort_1'(s('type.semanticPrimitives.abort',X13))))))) & s('type.pair.prod'('type.exhSem.state'(X1),'type.semanticPrimitives.result'(X2,'type.exhSem.v')),X10) = s('type.pair.prod'('type.exhSem.state'(X1),'type.semanticPrimitives.result'(X2,'type.exhSem.v')),'const.pair.,_2'(s('type.exhSem.state'(X1),X12),s('type.semanticPrimitives.result'(X2,'type.exhSem.v'),'const.semanticPrimitives.Rerr_1'(s('type.semanticPrimitives.error_result'('type.exhSem.v'),'const.semanticPrimitives.Rabort_1'(s('type.semanticPrimitives.abort',X13))))))) & p(s(bool,'const.dec_to_exhProof.state_rel_3'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X8),s('type.decSem.state'(X1),X11),s('type.exhSem.state'(X1),X12)))))) => p(s(bool,happ(s(fun('type.pair.prod'('type.exhSem.state'(X1),'type.semanticPrimitives.result'(X2,'type.exhSem.v')),bool),happ(s(fun('type.pair.prod'('type.decSem.state'(X1),'type.semanticPrimitives.result'(X0,'type.conSem.v')),fun('type.pair.prod'('type.exhSem.state'(X1),'type.semanticPrimitives.result'(X2,'type.exhSem.v')),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.pair.prod'('type.decSem.state'(X1),'type.semanticPrimitives.result'(X0,'type.conSem.v')),fun('type.pair.prod'('type.exhSem.state'(X1),'type.semanticPrimitives.result'(X2,'type.exhSem.v')),bool))),X7),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X8))),s('type.pair.prod'('type.decSem.state'(X1),'type.semanticPrimitives.result'(X0,'type.conSem.v')),X9))),s('type.pair.prod'('type.exhSem.state'(X1),'type.semanticPrimitives.result'(X2,'type.exhSem.v')),X10))))) => p(s(bool,happ(s(fun('type.pair.prod'('type.exhSem.state'(X1),'type.semanticPrimitives.result'(X2,'type.exhSem.v')),bool),happ(s(fun('type.pair.prod'('type.decSem.state'(X1),'type.semanticPrimitives.result'(X0,'type.conSem.v')),fun('type.pair.prod'('type.exhSem.state'(X1),'type.semanticPrimitives.result'(X2,'type.exhSem.v')),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.pair.prod'('type.decSem.state'(X1),'type.semanticPrimitives.result'(X0,'type.conSem.v')),fun('type.pair.prod'('type.exhSem.state'(X1),'type.semanticPrimitives.result'(X2,'type.exhSem.v')),bool))),X7),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X4))),s('type.pair.prod'('type.decSem.state'(X1),'type.semanticPrimitives.result'(X0,'type.conSem.v')),X5))),s('type.pair.prod'('type.exhSem.state'(X1),'type.semanticPrimitives.result'(X2,'type.exhSem.v')),X6))))))),
  inference(flattening,[],[f25])).
fof(f25,plain,(
  ! [X0,X1,X2] : ! [X3,X4,X5,X6] : (p(s(bool,'const.dec_to_exhProof.result_rel_4'(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun(X0,fun(X2,bool))),X3),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X4),s('type.pair.prod'('type.decSem.state'(X1),'type.semanticPrimitives.result'(X0,'type.conSem.v')),X5),s('type.pair.prod'('type.exhSem.state'(X1),'type.semanticPrimitives.result'(X2,'type.exhSem.v')),X6)))) <=> ! [X7] : (! [X8,X9,X10] : ((? [X18,X19,X20,X21] : (s('type.pair.prod'('type.decSem.state'(X1),'type.semanticPrimitives.result'(X0,'type.conSem.v')),X9) = s('type.pair.prod'('type.decSem.state'(X1),'type.semanticPrimitives.result'(X0,'type.conSem.v')),'const.pair.,_2'(s('type.decSem.state'(X1),X20),s('type.semanticPrimitives.result'(X0,'type.conSem.v'),'const.semanticPrimitives.Rval_1'(s(X0,X18))))) & s('type.pair.prod'('type.exhSem.state'(X1),'type.semanticPrimitives.result'(X2,'type.exhSem.v')),X10) = s('type.pair.prod'('type.exhSem.state'(X1),'type.semanticPrimitives.result'(X2,'type.exhSem.v')),'const.pair.,_2'(s('type.exhSem.state'(X1),X21),s('type.semanticPrimitives.result'(X2,'type.exhSem.v'),'const.semanticPrimitives.Rval_1'(s(X2,X19))))) & p(s(bool,happ(s(fun(X2,bool),happ(s(fun(X0,fun(X2,bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun(X0,fun(X2,bool))),X3),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X8))),s(X0,X18))),s(X2,X19)))) & p(s(bool,'const.dec_to_exhProof.state_rel_3'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X8),s('type.decSem.state'(X1),X20),s('type.exhSem.state'(X1),X21))))) | ? [X14,X15,X16,X17] : (s('type.pair.prod'('type.decSem.state'(X1),'type.semanticPrimitives.result'(X0,'type.conSem.v')),X9) = s('type.pair.prod'('type.decSem.state'(X1),'type.semanticPrimitives.result'(X0,'type.conSem.v')),'const.pair.,_2'(s('type.decSem.state'(X1),X16),s('type.semanticPrimitives.result'(X0,'type.conSem.v'),'const.semanticPrimitives.Rerr_1'(s('type.semanticPrimitives.error_result'('type.conSem.v'),'const.semanticPrimitives.Rraise_1'(s('type.conSem.v',X14))))))) & s('type.pair.prod'('type.exhSem.state'(X1),'type.semanticPrimitives.result'(X2,'type.exhSem.v')),X10) = s('type.pair.prod'('type.exhSem.state'(X1),'type.semanticPrimitives.result'(X2,'type.exhSem.v')),'const.pair.,_2'(s('type.exhSem.state'(X1),X17),s('type.semanticPrimitives.result'(X2,'type.exhSem.v'),'const.semanticPrimitives.Rerr_1'(s('type.semanticPrimitives.error_result'('type.exhSem.v'),'const.semanticPrimitives.Rraise_1'(s('type.exhSem.v',X15))))))) & p(s(bool,'const.dec_to_exhProof.v_rel_3'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X8),s('type.conSem.v',X14),s('type.exhSem.v',X15)))) & p(s(bool,'const.dec_to_exhProof.state_rel_3'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X8),s('type.decSem.state'(X1),X16),s('type.exhSem.state'(X1),X17))))) | ? [X11,X12,X13] : (s('type.pair.prod'('type.decSem.state'(X1),'type.semanticPrimitives.result'(X0,'type.conSem.v')),X9) = s('type.pair.prod'('type.decSem.state'(X1),'type.semanticPrimitives.result'(X0,'type.conSem.v')),'const.pair.,_2'(s('type.decSem.state'(X1),X11),s('type.semanticPrimitives.result'(X0,'type.conSem.v'),'const.semanticPrimitives.Rerr_1'(s('type.semanticPrimitives.error_result'('type.conSem.v'),'const.semanticPrimitives.Rabort_1'(s('type.semanticPrimitives.abort',X13))))))) & s('type.pair.prod'('type.exhSem.state'(X1),'type.semanticPrimitives.result'(X2,'type.exhSem.v')),X10) = s('type.pair.prod'('type.exhSem.state'(X1),'type.semanticPrimitives.result'(X2,'type.exhSem.v')),'const.pair.,_2'(s('type.exhSem.state'(X1),X12),s('type.semanticPrimitives.result'(X2,'type.exhSem.v'),'const.semanticPrimitives.Rerr_1'(s('type.semanticPrimitives.error_result'('type.exhSem.v'),'const.semanticPrimitives.Rabort_1'(s('type.semanticPrimitives.abort',X13))))))) & p(s(bool,'const.dec_to_exhProof.state_rel_3'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X8),s('type.decSem.state'(X1),X11),s('type.exhSem.state'(X1),X12)))))) => p(s(bool,happ(s(fun('type.pair.prod'('type.exhSem.state'(X1),'type.semanticPrimitives.result'(X2,'type.exhSem.v')),bool),happ(s(fun('type.pair.prod'('type.decSem.state'(X1),'type.semanticPrimitives.result'(X0,'type.conSem.v')),fun('type.pair.prod'('type.exhSem.state'(X1),'type.semanticPrimitives.result'(X2,'type.exhSem.v')),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.pair.prod'('type.decSem.state'(X1),'type.semanticPrimitives.result'(X0,'type.conSem.v')),fun('type.pair.prod'('type.exhSem.state'(X1),'type.semanticPrimitives.result'(X2,'type.exhSem.v')),bool))),X7),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X8))),s('type.pair.prod'('type.decSem.state'(X1),'type.semanticPrimitives.result'(X0,'type.conSem.v')),X9))),s('type.pair.prod'('type.exhSem.state'(X1),'type.semanticPrimitives.result'(X2,'type.exhSem.v')),X10))))) => p(s(bool,happ(s(fun('type.pair.prod'('type.exhSem.state'(X1),'type.semanticPrimitives.result'(X2,'type.exhSem.v')),bool),happ(s(fun('type.pair.prod'('type.decSem.state'(X1),'type.semanticPrimitives.result'(X0,'type.conSem.v')),fun('type.pair.prod'('type.exhSem.state'(X1),'type.semanticPrimitives.result'(X2,'type.exhSem.v')),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.pair.prod'('type.decSem.state'(X1),'type.semanticPrimitives.result'(X0,'type.conSem.v')),fun('type.pair.prod'('type.exhSem.state'(X1),'type.semanticPrimitives.result'(X2,'type.exhSem.v')),bool))),X7),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X4))),s('type.pair.prod'('type.decSem.state'(X1),'type.semanticPrimitives.result'(X0,'type.conSem.v')),X5))),s('type.pair.prod'('type.exhSem.state'(X1),'type.semanticPrimitives.result'(X2,'type.exhSem.v')),X6))))))),
  inference(rectify,[],[f7])).
fof(f7,axiom,(
  ! [X6,X7,X8] : ! [X5,X15,X16,X17] : (p(s(bool,'const.dec_to_exhProof.result_rel_4'(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun(X6,fun(X8,bool))),X5),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X15),s('type.pair.prod'('type.decSem.state'(X7),'type.semanticPrimitives.result'(X6,'type.conSem.v')),X16),s('type.pair.prod'('type.exhSem.state'(X7),'type.semanticPrimitives.result'(X8,'type.exhSem.v')),X17)))) <=> ! [X18] : (! [X19,X20,X21] : ((? [X11,X12,X13,X14] : (s('type.pair.prod'('type.decSem.state'(X7),'type.semanticPrimitives.result'(X6,'type.conSem.v')),X20) = s('type.pair.prod'('type.decSem.state'(X7),'type.semanticPrimitives.result'(X6,'type.conSem.v')),'const.pair.,_2'(s('type.decSem.state'(X7),X13),s('type.semanticPrimitives.result'(X6,'type.conSem.v'),'const.semanticPrimitives.Rval_1'(s(X6,X11))))) & s('type.pair.prod'('type.exhSem.state'(X7),'type.semanticPrimitives.result'(X8,'type.exhSem.v')),X21) = s('type.pair.prod'('type.exhSem.state'(X7),'type.semanticPrimitives.result'(X8,'type.exhSem.v')),'const.pair.,_2'(s('type.exhSem.state'(X7),X14),s('type.semanticPrimitives.result'(X8,'type.exhSem.v'),'const.semanticPrimitives.Rval_1'(s(X8,X12))))) & p(s(bool,happ(s(fun(X8,bool),happ(s(fun(X6,fun(X8,bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun(X6,fun(X8,bool))),X5),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X19))),s(X6,X11))),s(X8,X12)))) & p(s(bool,'const.dec_to_exhProof.state_rel_3'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X19),s('type.decSem.state'(X7),X13),s('type.exhSem.state'(X7),X14))))) | ? [X11,X12,X13,X14] : (s('type.pair.prod'('type.decSem.state'(X7),'type.semanticPrimitives.result'(X6,'type.conSem.v')),X20) = s('type.pair.prod'('type.decSem.state'(X7),'type.semanticPrimitives.result'(X6,'type.conSem.v')),'const.pair.,_2'(s('type.decSem.state'(X7),X13),s('type.semanticPrimitives.result'(X6,'type.conSem.v'),'const.semanticPrimitives.Rerr_1'(s('type.semanticPrimitives.error_result'('type.conSem.v'),'const.semanticPrimitives.Rraise_1'(s('type.conSem.v',X11))))))) & s('type.pair.prod'('type.exhSem.state'(X7),'type.semanticPrimitives.result'(X8,'type.exhSem.v')),X21) = s('type.pair.prod'('type.exhSem.state'(X7),'type.semanticPrimitives.result'(X8,'type.exhSem.v')),'const.pair.,_2'(s('type.exhSem.state'(X7),X14),s('type.semanticPrimitives.result'(X8,'type.exhSem.v'),'const.semanticPrimitives.Rerr_1'(s('type.semanticPrimitives.error_result'('type.exhSem.v'),'const.semanticPrimitives.Rraise_1'(s('type.exhSem.v',X12))))))) & p(s(bool,'const.dec_to_exhProof.v_rel_3'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X19),s('type.conSem.v',X11),s('type.exhSem.v',X12)))) & p(s(bool,'const.dec_to_exhProof.state_rel_3'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X19),s('type.decSem.state'(X7),X13),s('type.exhSem.state'(X7),X14))))) | ? [X13,X14,X22] : (s('type.pair.prod'('type.decSem.state'(X7),'type.semanticPrimitives.result'(X6,'type.conSem.v')),X20) = s('type.pair.prod'('type.decSem.state'(X7),'type.semanticPrimitives.result'(X6,'type.conSem.v')),'const.pair.,_2'(s('type.decSem.state'(X7),X13),s('type.semanticPrimitives.result'(X6,'type.conSem.v'),'const.semanticPrimitives.Rerr_1'(s('type.semanticPrimitives.error_result'('type.conSem.v'),'const.semanticPrimitives.Rabort_1'(s('type.semanticPrimitives.abort',X22))))))) & s('type.pair.prod'('type.exhSem.state'(X7),'type.semanticPrimitives.result'(X8,'type.exhSem.v')),X21) = s('type.pair.prod'('type.exhSem.state'(X7),'type.semanticPrimitives.result'(X8,'type.exhSem.v')),'const.pair.,_2'(s('type.exhSem.state'(X7),X14),s('type.semanticPrimitives.result'(X8,'type.exhSem.v'),'const.semanticPrimitives.Rerr_1'(s('type.semanticPrimitives.error_result'('type.exhSem.v'),'const.semanticPrimitives.Rabort_1'(s('type.semanticPrimitives.abort',X22))))))) & p(s(bool,'const.dec_to_exhProof.state_rel_3'(s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X19),s('type.decSem.state'(X7),X13),s('type.exhSem.state'(X7),X14)))))) => p(s(bool,happ(s(fun('type.pair.prod'('type.exhSem.state'(X7),'type.semanticPrimitives.result'(X8,'type.exhSem.v')),bool),happ(s(fun('type.pair.prod'('type.decSem.state'(X7),'type.semanticPrimitives.result'(X6,'type.conSem.v')),fun('type.pair.prod'('type.exhSem.state'(X7),'type.semanticPrimitives.result'(X8,'type.exhSem.v')),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.pair.prod'('type.decSem.state'(X7),'type.semanticPrimitives.result'(X6,'type.conSem.v')),fun('type.pair.prod'('type.exhSem.state'(X7),'type.semanticPrimitives.result'(X8,'type.exhSem.v')),bool))),X18),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X19))),s('type.pair.prod'('type.decSem.state'(X7),'type.semanticPrimitives.result'(X6,'type.conSem.v')),X20))),s('type.pair.prod'('type.exhSem.state'(X7),'type.semanticPrimitives.result'(X8,'type.exhSem.v')),X21))))) => p(s(bool,happ(s(fun('type.pair.prod'('type.exhSem.state'(X7),'type.semanticPrimitives.result'(X8,'type.exhSem.v')),bool),happ(s(fun('type.pair.prod'('type.decSem.state'(X7),'type.semanticPrimitives.result'(X6,'type.conSem.v')),fun('type.pair.prod'('type.exhSem.state'(X7),'type.semanticPrimitives.result'(X8,'type.exhSem.v')),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.pair.prod'('type.decSem.state'(X7),'type.semanticPrimitives.result'(X6,'type.conSem.v')),fun('type.pair.prod'('type.exhSem.state'(X7),'type.semanticPrimitives.result'(X8,'type.exhSem.v')),bool))),X18),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X15))),s('type.pair.prod'('type.decSem.state'(X7),'type.semanticPrimitives.result'(X6,'type.conSem.v')),X16))),s('type.pair.prod'('type.exhSem.state'(X7),'type.semanticPrimitives.result'(X8,'type.exhSem.v')),X17))))))),
  file('thm.dec_to_exhProof.result_rel_rules|split|0','thm.dec_to_exhProof.result_rel_def')).
fof(f567,plain,(
  ~p(s(bool,happ(s(fun('type.pair.prod'('type.exhSem.state'(sK30),'type.semanticPrimitives.result'(sK31,'type.exhSem.v')),bool),happ(s(fun('type.pair.prod'('type.decSem.state'(sK30),'type.semanticPrimitives.result'(sK29,'type.conSem.v')),fun('type.pair.prod'('type.exhSem.state'(sK30),'type.semanticPrimitives.result'(sK31,'type.exhSem.v')),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.pair.prod'('type.decSem.state'(sK30),'type.semanticPrimitives.result'(sK29,'type.conSem.v')),fun('type.pair.prod'('type.exhSem.state'(sK30),'type.semanticPrimitives.result'(sK31,'type.exhSem.v')),bool))),sK52('const.pair.,_2'(s('type.exhSem.state'(sK30),sK37),s('type.semanticPrimitives.result'(sK31,'type.exhSem.v'),'const.semanticPrimitives.Rval_1'(s(sK31,sK35)))),'const.pair.,_2'(s('type.decSem.state'(sK30),sK36),s('type.semanticPrimitives.result'(sK29,'type.conSem.v'),'const.semanticPrimitives.Rval_1'(s(sK29,sK34)))),sK33,sK32,sK31,sK30,sK29)),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),sK33))),s('type.pair.prod'('type.decSem.state'(sK30),'type.semanticPrimitives.result'(sK29,'type.conSem.v')),'const.pair.,_2'(s('type.decSem.state'(sK30),sK36),s('type.semanticPrimitives.result'(sK29,'type.conSem.v'),'const.semanticPrimitives.Rval_1'(s(sK29,sK34))))))),s('type.pair.prod'('type.exhSem.state'(sK30),'type.semanticPrimitives.result'(sK31,'type.exhSem.v')),'const.pair.,_2'(s('type.exhSem.state'(sK30),sK37),s('type.semanticPrimitives.result'(sK31,'type.exhSem.v'),'const.semanticPrimitives.Rval_1'(s(sK31,sK35))))))))),
  inference(resolution,[],[f226,f244])).
fof(f244,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (p(s(bool,'const.dec_to_exhProof.result_rel_4'(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun(X0,fun(X2,bool))),X3),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X4),s('type.pair.prod'('type.decSem.state'(X1),'type.semanticPrimitives.result'(X0,'type.conSem.v')),X5),s('type.pair.prod'('type.exhSem.state'(X1),'type.semanticPrimitives.result'(X2,'type.exhSem.v')),X6)))) | ~p(s(bool,happ(s(fun('type.pair.prod'('type.exhSem.state'(X1),'type.semanticPrimitives.result'(X2,'type.exhSem.v')),bool),happ(s(fun('type.pair.prod'('type.decSem.state'(X1),'type.semanticPrimitives.result'(X0,'type.conSem.v')),fun('type.pair.prod'('type.exhSem.state'(X1),'type.semanticPrimitives.result'(X2,'type.exhSem.v')),bool)),happ(s(fun('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),fun('type.pair.prod'('type.decSem.state'(X1),'type.semanticPrimitives.result'(X0,'type.conSem.v')),fun('type.pair.prod'('type.exhSem.state'(X1),'type.semanticPrimitives.result'(X2,'type.exhSem.v')),bool))),sK52(X6,X5,X4,X3,X2,X1,X0)),s('type.finite_map.fmap'('type.ast.id'('type.list.list'('type.string.char')),'type.sptree.spt'('type.num.num')),X4))),s('type.pair.prod'('type.decSem.state'(X1),'type.semanticPrimitives.result'(X0,'type.conSem.v')),X5))),s('type.pair.prod'('type.exhSem.state'(X1),'type.semanticPrimitives.result'(X2,'type.exhSem.v')),X6))))) )),
  inference(cnf_transformation,[],[f110])).
% SZS output end Proof for thm.dec_to_exhProof
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 272
% Passive clauses: 1076
% Generated clauses: 1255
% Final active clauses: 269
% Final passive clauses: 1032
% Input formulas: 21
% Initial clauses: 264
% 
% Selected by SInE selection: 20
% SInE iterations: 1
% 
% Duplicate literals: 10
% Fw subsumption resolutions: 32
% Fw demodulations: 25
% Bw demodulations: 3
% 
% Simple tautologies: 38
% Forward subsumptions: 92
% 
% Binary resolution: 261
% Forward superposition: 858
% Backward superposition: 56
% Equality resolution: 6
% 
% Split clauses: 2
% Split components: 4
% SAT solver clauses: 3
% SAT solver binary clauses: 2
% 
% Sat splits: 2
% 
% Memory used [KB]: 7419
% Time elapsed: 0.139 s
% ------------------------------
% ------------------------------
% Success in time 11.88 s
