Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 149 next slice time: 5
dis+11_7_3 on thm.exh_to_patProof
% (80422)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 1058
% Passive clauses: 7282
% Generated clauses: 28814
% Final active clauses: 1012
% Final passive clauses: 5870
% Input formulas: 133
% Initial clauses: 346
% 
% Duplicate literals: 281
% Trivial inequalities: 47
% Fw subsumption resolutions: 1928
% Fw demodulations: 2730
% Bw demodulations: 9
% 
% Simple tautologies: 275
% Equational tautologies: 37
% Forward subsumptions: 15828
% Fw demodulations to eq. taut.: 2
% 
% Binary resolution: 7589
% Factoring: 1171
% Forward superposition: 7731
% Backward superposition: 6682
% Self superposition: 61
% Equality factoring: 2
% Equality resolution: 23
% 
% Split clauses: 368
% Split components: 738
% SAT solver clauses: 523
% SAT solver unit clauses: 13
% SAT solver binary clauses: 69
% 
% Sat splits: 368
% Sat splitting refutations: 12
% 
% TWLsolver clauses: 523
% TWLsolver calls for satisfiability: 439
% 
% Memory used [KB]: 16630
% Time elapsed: 0.600 s
% ------------------------------
% ------------------------------
% remaining time: 143 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.exh_to_patProof
% (80441)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 503
% Passive clauses: 2406
% Generated clauses: 16648
% Final active clauses: 464
% Final passive clauses: 1568
% Input formulas: 133
% Initial clauses: 346
% 
% Duplicate literals: 94
% Trivial inequalities: 48
% Fw subsumption resolutions: 711
% Fw demodulations: 2052
% Bw demodulations: 339
% Condensations: 87
% Global subsumptions: 24
% 
% Simple tautologies: 239
% Equational tautologies: 20
% Forward subsumptions: 7775
% Fw demodulations to eq. taut.: 2
% Bw demodulations to eq. taut.: 5
% 
% Binary resolution: 1696
% Factoring: 173
% Forward superposition: 4831
% Backward superposition: 3478
% Self superposition: 70
% Equality factoring: 2
% Equality resolution: 22
% 
% Split clauses: 34
% Split components: 68
% SAT solver clauses: 3323
% SAT solver unit clauses: 404
% SAT solver binary clauses: 183
% SAT solver learnt clauses: 50
% SAT solver learnt literals: 15
% 
% Sat splits: 34
% Sat splitting refutations: 52
% 
% TWLsolver clauses: 3225
% TWLsolver calls for satisfiability: 6896
% 
% Memory used [KB]: 15607
% Time elapsed: 0.700 s
% ------------------------------
% ------------------------------
% remaining time: 136 next slice time: 103
lrs+11_2_br=off:cond=on:fde=none:gs=on:gsaa=full_model:lwlo=on:nwc=2:sas=minisat:stl=30:ssfp=100000:ssfq=1.4:smm=sco:ssnc=none:sp=occurrence:urr=on_98 on thm.exh_to_patProof
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.exh_to_patProof
% SZS output start Proof for thm.exh_to_patProof
fof(f33929,plain,(
  $false),
  inference(unit_resulting_resolution,[],[f533,f698])).
fof(f698,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.pair.prod'('type.exhSem.state'(X0),'type.semanticPrimitives.result'('type.list.list'('type.exhSem.v'),'type.exhSem.v')),'const.pair.,_2'(s('type.exhSem.state'(X0),sK85(X3,X2,X1,X0)),s('type.semanticPrimitives.result'('type.list.list'('type.exhSem.v'),'type.exhSem.v'),sK86(X3,X2,X1,X0)))) = s('type.pair.prod'('type.exhSem.state'(X0),'type.semanticPrimitives.result'('type.list.list'('type.exhSem.v'),'type.exhSem.v')),'const.exhSem.evaluate_3'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X2),s('type.exhSem.state'(X0),X1),s('type.list.list'('type.exhLang.exp'),'const.list.CONS_2'(s('type.exhLang.exp',X3),s('type.list.list'('type.exhLang.exp'),'const.list.NIL_0')))))) )),
  inference(cnf_transformation,[],[f460])).
fof(f460,plain,(
  ! [X0,X1,X2,X3] : s('type.pair.prod'('type.exhSem.state'(X0),'type.semanticPrimitives.result'('type.list.list'('type.exhSem.v'),'type.exhSem.v')),'const.pair.,_2'(s('type.exhSem.state'(X0),sK85(X3,X2,X1,X0)),s('type.semanticPrimitives.result'('type.list.list'('type.exhSem.v'),'type.exhSem.v'),sK86(X3,X2,X1,X0)))) = s('type.pair.prod'('type.exhSem.state'(X0),'type.semanticPrimitives.result'('type.list.list'('type.exhSem.v'),'type.exhSem.v')),'const.exhSem.evaluate_3'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X2),s('type.exhSem.state'(X0),X1),s('type.list.list'('type.exhLang.exp'),'const.list.CONS_2'(s('type.exhLang.exp',X3),s('type.list.list'('type.exhLang.exp'),'const.list.NIL_0')))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK85,sK86])],[f234])).
fof(f234,plain,(
  ! [X0,X1,X2,X3] : ? [X4,X5] : s('type.pair.prod'('type.exhSem.state'(X0),'type.semanticPrimitives.result'('type.list.list'('type.exhSem.v'),'type.exhSem.v')),'const.pair.,_2'(s('type.exhSem.state'(X0),X4),s('type.semanticPrimitives.result'('type.list.list'('type.exhSem.v'),'type.exhSem.v'),X5))) = s('type.pair.prod'('type.exhSem.state'(X0),'type.semanticPrimitives.result'('type.list.list'('type.exhSem.v'),'type.exhSem.v')),'const.exhSem.evaluate_3'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X2),s('type.exhSem.state'(X0),X1),s('type.list.list'('type.exhLang.exp'),'const.list.CONS_2'(s('type.exhLang.exp',X3),s('type.list.list'('type.exhLang.exp'),'const.list.NIL_0')))))),
  inference(flattening,[],[f233])).
fof(f233,plain,(
  ! [X0] : ! [X1,X2,X3] : ? [X4,X5] : s('type.pair.prod'('type.exhSem.state'(X0),'type.semanticPrimitives.result'('type.list.list'('type.exhSem.v'),'type.exhSem.v')),'const.pair.,_2'(s('type.exhSem.state'(X0),X4),s('type.semanticPrimitives.result'('type.list.list'('type.exhSem.v'),'type.exhSem.v'),X5))) = s('type.pair.prod'('type.exhSem.state'(X0),'type.semanticPrimitives.result'('type.list.list'('type.exhSem.v'),'type.exhSem.v')),'const.exhSem.evaluate_3'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X2),s('type.exhSem.state'(X0),X1),s('type.list.list'('type.exhLang.exp'),'const.list.CONS_2'(s('type.exhLang.exp',X3),s('type.list.list'('type.exhLang.exp'),'const.list.NIL_0')))))),
  inference(rectify,[],[f8])).
fof(f8,axiom,(
  ! [X6] : ! [X7,X8,X14] : ? [X10,X11] : s('type.pair.prod'('type.exhSem.state'(X6),'type.semanticPrimitives.result'('type.list.list'('type.exhSem.v'),'type.exhSem.v')),'const.pair.,_2'(s('type.exhSem.state'(X6),X10),s('type.semanticPrimitives.result'('type.list.list'('type.exhSem.v'),'type.exhSem.v'),X11))) = s('type.pair.prod'('type.exhSem.state'(X6),'type.semanticPrimitives.result'('type.list.list'('type.exhSem.v'),'type.exhSem.v')),'const.exhSem.evaluate_3'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X8),s('type.exhSem.state'(X6),X7),s('type.list.list'('type.exhLang.exp'),'const.list.CONS_2'(s('type.exhLang.exp',X14),s('type.list.list'('type.exhLang.exp'),'const.list.NIL_0')))))),
  file('thm.exh_to_patProof.exh_to_patProof_|49|29_prove_ltb','thm.exh_to_patProof.exh_to_patProof_|49|23_prove_ltb')).
fof(f533,plain,(
  ( ! [X4,X5] : (s('type.pair.prod'('type.exhSem.state'(sK19),'type.semanticPrimitives.result'('type.list.list'('type.exhSem.v'),'type.exhSem.v')),'const.pair.,_2'(s('type.exhSem.state'(sK19),X4),s('type.semanticPrimitives.result'('type.list.list'('type.exhSem.v'),'type.exhSem.v'),X5))) != s('type.pair.prod'('type.exhSem.state'(sK19),'type.semanticPrimitives.result'('type.list.list'('type.exhSem.v'),'type.exhSem.v')),'const.exhSem.evaluate_3'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK21),s('type.exhSem.state'(sK19),sK20),s('type.list.list'('type.exhLang.exp'),'const.list.CONS_2'(s('type.exhLang.exp',sK22),s('type.list.list'('type.exhLang.exp'),'const.list.NIL_0')))))) )),
  inference(cnf_transformation,[],[f381])).
fof(f381,plain,(
  ! [X4,X5] : s('type.pair.prod'('type.exhSem.state'(sK19),'type.semanticPrimitives.result'('type.list.list'('type.exhSem.v'),'type.exhSem.v')),'const.pair.,_2'(s('type.exhSem.state'(sK19),X4),s('type.semanticPrimitives.result'('type.list.list'('type.exhSem.v'),'type.exhSem.v'),X5))) != s('type.pair.prod'('type.exhSem.state'(sK19),'type.semanticPrimitives.result'('type.list.list'('type.exhSem.v'),'type.exhSem.v')),'const.exhSem.evaluate_3'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK21),s('type.exhSem.state'(sK19),sK20),s('type.list.list'('type.exhLang.exp'),'const.list.CONS_2'(s('type.exhLang.exp',sK22),s('type.list.list'('type.exhLang.exp'),'const.list.NIL_0')))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK19,sK20,sK21,sK22])],[f309])).
fof(f309,plain,(
  ? [X0,X1,X2,X3] : ! [X4,X5] : s('type.pair.prod'('type.exhSem.state'(X0),'type.semanticPrimitives.result'('type.list.list'('type.exhSem.v'),'type.exhSem.v')),'const.pair.,_2'(s('type.exhSem.state'(X0),X4),s('type.semanticPrimitives.result'('type.list.list'('type.exhSem.v'),'type.exhSem.v'),X5))) != s('type.pair.prod'('type.exhSem.state'(X0),'type.semanticPrimitives.result'('type.list.list'('type.exhSem.v'),'type.exhSem.v')),'const.exhSem.evaluate_3'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X2),s('type.exhSem.state'(X0),X1),s('type.list.list'('type.exhLang.exp'),'const.list.CONS_2'(s('type.exhLang.exp',X3),s('type.list.list'('type.exhLang.exp'),'const.list.NIL_0')))))),
  inference(ennf_transformation,[],[f136])).
fof(f136,plain,(
  ~! [X0,X1,X2,X3] : ? [X4,X5] : s('type.pair.prod'('type.exhSem.state'(X0),'type.semanticPrimitives.result'('type.list.list'('type.exhSem.v'),'type.exhSem.v')),'const.pair.,_2'(s('type.exhSem.state'(X0),X4),s('type.semanticPrimitives.result'('type.list.list'('type.exhSem.v'),'type.exhSem.v'),X5))) = s('type.pair.prod'('type.exhSem.state'(X0),'type.semanticPrimitives.result'('type.list.list'('type.exhSem.v'),'type.exhSem.v')),'const.exhSem.evaluate_3'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X2),s('type.exhSem.state'(X0),X1),s('type.list.list'('type.exhLang.exp'),'const.list.CONS_2'(s('type.exhLang.exp',X3),s('type.list.list'('type.exhLang.exp'),'const.list.NIL_0')))))),
  inference(flattening,[],[f135])).
fof(f135,plain,(
  ~! [X0] : ! [X1,X2,X3] : ? [X4,X5] : s('type.pair.prod'('type.exhSem.state'(X0),'type.semanticPrimitives.result'('type.list.list'('type.exhSem.v'),'type.exhSem.v')),'const.pair.,_2'(s('type.exhSem.state'(X0),X4),s('type.semanticPrimitives.result'('type.list.list'('type.exhSem.v'),'type.exhSem.v'),X5))) = s('type.pair.prod'('type.exhSem.state'(X0),'type.semanticPrimitives.result'('type.list.list'('type.exhSem.v'),'type.exhSem.v')),'const.exhSem.evaluate_3'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X2),s('type.exhSem.state'(X0),X1),s('type.list.list'('type.exhLang.exp'),'const.list.CONS_2'(s('type.exhLang.exp',X3),s('type.list.list'('type.exhLang.exp'),'const.list.NIL_0')))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : ! [X7,X8,X9] : ? [X10,X11] : s('type.pair.prod'('type.exhSem.state'(X6),'type.semanticPrimitives.result'('type.list.list'('type.exhSem.v'),'type.exhSem.v')),'const.pair.,_2'(s('type.exhSem.state'(X6),X10),s('type.semanticPrimitives.result'('type.list.list'('type.exhSem.v'),'type.exhSem.v'),X11))) = s('type.pair.prod'('type.exhSem.state'(X6),'type.semanticPrimitives.result'('type.list.list'('type.exhSem.v'),'type.exhSem.v')),'const.exhSem.evaluate_3'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X8),s('type.exhSem.state'(X6),X7),s('type.list.list'('type.exhLang.exp'),'const.list.CONS_2'(s('type.exhLang.exp',X9),s('type.list.list'('type.exhLang.exp'),'const.list.NIL_0')))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : ! [X7,X8,X9] : ? [X10,X11] : s('type.pair.prod'('type.exhSem.state'(X6),'type.semanticPrimitives.result'('type.list.list'('type.exhSem.v'),'type.exhSem.v')),'const.pair.,_2'(s('type.exhSem.state'(X6),X10),s('type.semanticPrimitives.result'('type.list.list'('type.exhSem.v'),'type.exhSem.v'),X11))) = s('type.pair.prod'('type.exhSem.state'(X6),'type.semanticPrimitives.result'('type.list.list'('type.exhSem.v'),'type.exhSem.v')),'const.exhSem.evaluate_3'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X8),s('type.exhSem.state'(X6),X7),s('type.list.list'('type.exhLang.exp'),'const.list.CONS_2'(s('type.exhLang.exp',X9),s('type.list.list'('type.exhLang.exp'),'const.list.NIL_0')))))),
  file('thm.exh_to_patProof.exh_to_patProof_|49|29_prove_ltb','thm.exh_to_patProof.exh_to_patProof_|49|29_prove_ltb')).
% SZS output end Proof for thm.exh_to_patProof
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 467
% Passive clauses: 1370
% Generated clauses: 33452
% Final active clauses: 464
% Final passive clauses: 899
% Input formulas: 133
% Initial clauses: 346
% 
% Duplicate literals: 8
% Trivial inequalities: 15
% Fw subsumption resolutions: 110
% Fw demodulations: 12554
% Bw demodulations: 7
% Condensations: 19
% 
% Simple tautologies: 81
% Equational tautologies: 30
% Forward subsumptions: 8364
% Fw demodulations to eq. taut.: 10832
% 
% Unit resulting resolution: 13042
% Factoring: 2
% Forward superposition: 5149
% Backward superposition: 2542
% Self superposition: 58
% Equality factoring: 2
% Equality resolution: 18
% 
% Split clauses: 3
% Split components: 6
% SAT solver clauses: 1378
% SAT solver unit clauses: 533
% SAT solver binary clauses: 566
% 
% Sat splits: 3
% 
% Memory used [KB]: 17270
% Time elapsed: 1.143 s
% ------------------------------
% ------------------------------
% Success in time 2.48 s
