Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 149 next slice time: 5
dis+11_7_3 on thm.bviProps
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.bviProps
% SZS output start Proof for thm.bviProps
fof(f2594,plain,(
  $false),
  inference(subsumption_resolution,[],[f2593,f78])).
fof(f78,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.bviSem.state_clock_1'(s('type.bviSem.state'(sK0),sK2)))),
  inference(cnf_transformation,[],[f49])).
fof(f49,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.bviSem.state_clock_1'(s('type.bviSem.state'(sK0),sK2))) & s('type.bviSem.state'(sK0),'const.bviProps.inc_clock_2'(s('type.num.num',sK1),s('type.bviSem.state'(sK0),'const.bviSem.dec_clock_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.bviSem.state'(sK0),sK2))))) != s('type.bviSem.state'(sK0),'const.bviSem.dec_clock_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.bviSem.state'(sK0),'const.bviProps.inc_clock_2'(s('type.num.num',sK1),s('type.bviSem.state'(sK0),sK2)))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1,sK2])],[f46])).
fof(f46,plain,(
  ? [X0,X1,X2] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.bviSem.state_clock_1'(s('type.bviSem.state'(X0),X2))) & s('type.bviSem.state'(X0),'const.bviProps.inc_clock_2'(s('type.num.num',X1),s('type.bviSem.state'(X0),'const.bviSem.dec_clock_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.bviSem.state'(X0),X2))))) != s('type.bviSem.state'(X0),'const.bviSem.dec_clock_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.bviSem.state'(X0),'const.bviProps.inc_clock_2'(s('type.num.num',X1),s('type.bviSem.state'(X0),X2))))))),
  inference(ennf_transformation,[],[f24])).
fof(f24,plain,(
  ~! [X0,X1,X2] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.bviSem.state_clock_1'(s('type.bviSem.state'(X0),X2))) => s('type.bviSem.state'(X0),'const.bviProps.inc_clock_2'(s('type.num.num',X1),s('type.bviSem.state'(X0),'const.bviSem.dec_clock_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.bviSem.state'(X0),X2))))) = s('type.bviSem.state'(X0),'const.bviSem.dec_clock_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.bviSem.state'(X0),'const.bviProps.inc_clock_2'(s('type.num.num',X1),s('type.bviSem.state'(X0),X2))))))),
  inference(flattening,[],[f23])).
fof(f23,plain,(
  ~! [X0] : ! [X1,X2] : (~s('type.num.num','const.num.|48|_0') = s('type.num.num','const.bviSem.state_clock_1'(s('type.bviSem.state'(X0),X2))) => s('type.bviSem.state'(X0),'const.bviProps.inc_clock_2'(s('type.num.num',X1),s('type.bviSem.state'(X0),'const.bviSem.dec_clock_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.bviSem.state'(X0),X2))))) = s('type.bviSem.state'(X0),'const.bviSem.dec_clock_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.bviSem.state'(X0),'const.bviProps.inc_clock_2'(s('type.num.num',X1),s('type.bviSem.state'(X0),X2))))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : ! [X7,X8] : (~s('type.num.num','const.num.|48|_0') = s('type.num.num','const.bviSem.state_clock_1'(s('type.bviSem.state'(X6),X8))) => s('type.bviSem.state'(X6),'const.bviProps.inc_clock_2'(s('type.num.num',X7),s('type.bviSem.state'(X6),'const.bviSem.dec_clock_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.bviSem.state'(X6),X8))))) = s('type.bviSem.state'(X6),'const.bviSem.dec_clock_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.bviSem.state'(X6),'const.bviProps.inc_clock_2'(s('type.num.num',X7),s('type.bviSem.state'(X6),X8))))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : ! [X7,X8] : (~s('type.num.num','const.num.|48|_0') = s('type.num.num','const.bviSem.state_clock_1'(s('type.bviSem.state'(X6),X8))) => s('type.bviSem.state'(X6),'const.bviProps.inc_clock_2'(s('type.num.num',X7),s('type.bviSem.state'(X6),'const.bviSem.dec_clock_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.bviSem.state'(X6),X8))))) = s('type.bviSem.state'(X6),'const.bviSem.dec_clock_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.bviSem.state'(X6),'const.bviProps.inc_clock_2'(s('type.num.num',X7),s('type.bviSem.state'(X6),X8))))))),
  file('thm.bviProps.bviProps_67_prove_ltb','thm.bviProps.bviProps_67_prove_ltb')).
fof(f2593,plain,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num','const.bviSem.state_clock_1'(s('type.bviSem.state'(sK0),sK2)))),
  inference(trivial_inequality_removal,[],[f2592])).
fof(f2592,plain,(
  s('type.bviSem.state'(sK0),'const.bviProps.inc_clock_2'(s('type.num.num',sK1),s('type.bviSem.state'(sK0),'const.bviSem.dec_clock_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.bviSem.state'(sK0),sK2))))) != s('type.bviSem.state'(sK0),'const.bviProps.inc_clock_2'(s('type.num.num',sK1),s('type.bviSem.state'(sK0),'const.bviSem.dec_clock_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.bviSem.state'(sK0),sK2))))) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.bviSem.state_clock_1'(s('type.bviSem.state'(sK0),sK2)))),
  inference(superposition,[],[f79,f121])).
fof(f121,plain,(
  ( ! [X2,X0,X1] : (s('type.bviSem.state'(X0),'const.bviProps.inc_clock_2'(s('type.num.num',X2),s('type.bviSem.state'(X0),'const.bviSem.dec_clock_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.bviSem.state'(X0),X1))))) = s('type.bviSem.state'(X0),'const.bviSem.dec_clock_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.bviSem.state'(X0),'const.bviProps.inc_clock_2'(s('type.num.num',X2),s('type.bviSem.state'(X0),X1))))) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.bviSem.state_clock_1'(s('type.bviSem.state'(X0),X1)))) )),
  inference(cnf_transformation,[],[f47])).
fof(f47,plain,(
  ! [X0,X1,X2] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.bviSem.state_clock_1'(s('type.bviSem.state'(X0),X1))) | s('type.bviSem.state'(X0),'const.bviProps.inc_clock_2'(s('type.num.num',X2),s('type.bviSem.state'(X0),'const.bviSem.dec_clock_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.bviSem.state'(X0),X1))))) = s('type.bviSem.state'(X0),'const.bviSem.dec_clock_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.bviSem.state'(X0),'const.bviProps.inc_clock_2'(s('type.num.num',X2),s('type.bviSem.state'(X0),X1))))))),
  inference(ennf_transformation,[],[f42])).
fof(f42,plain,(
  ! [X0,X1,X2] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.bviSem.state_clock_1'(s('type.bviSem.state'(X0),X1))) => s('type.bviSem.state'(X0),'const.bviProps.inc_clock_2'(s('type.num.num',X2),s('type.bviSem.state'(X0),'const.bviSem.dec_clock_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.bviSem.state'(X0),X1))))) = s('type.bviSem.state'(X0),'const.bviSem.dec_clock_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.bviSem.state'(X0),'const.bviProps.inc_clock_2'(s('type.num.num',X2),s('type.bviSem.state'(X0),X1))))))),
  inference(flattening,[],[f41])).
fof(f41,plain,(
  ! [X0] : ! [X1,X2] : (~s('type.num.num','const.num.|48|_0') = s('type.num.num','const.bviSem.state_clock_1'(s('type.bviSem.state'(X0),X1))) => s('type.bviSem.state'(X0),'const.bviProps.inc_clock_2'(s('type.num.num',X2),s('type.bviSem.state'(X0),'const.bviSem.dec_clock_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.bviSem.state'(X0),X1))))) = s('type.bviSem.state'(X0),'const.bviSem.dec_clock_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.bviSem.state'(X0),'const.bviProps.inc_clock_2'(s('type.num.num',X2),s('type.bviSem.state'(X0),X1))))))),
  inference(rectify,[],[f7])).
fof(f7,axiom,(
  ! [X6] : ! [X9,X10] : (~s('type.num.num','const.num.|48|_0') = s('type.num.num','const.bviSem.state_clock_1'(s('type.bviSem.state'(X6),X9))) => s('type.bviSem.state'(X6),'const.bviProps.inc_clock_2'(s('type.num.num',X10),s('type.bviSem.state'(X6),'const.bviSem.dec_clock_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.bviSem.state'(X6),X9))))) = s('type.bviSem.state'(X6),'const.bviSem.dec_clock_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.bviSem.state'(X6),'const.bviProps.inc_clock_2'(s('type.num.num',X10),s('type.bviSem.state'(X6),X9))))))),
  file('thm.bviProps.bviProps_67_prove_ltb','thm.bviProps.dec_clock_inv_clock|49|')).
fof(f79,plain,(
  s('type.bviSem.state'(sK0),'const.bviProps.inc_clock_2'(s('type.num.num',sK1),s('type.bviSem.state'(sK0),'const.bviSem.dec_clock_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.bviSem.state'(sK0),sK2))))) != s('type.bviSem.state'(sK0),'const.bviSem.dec_clock_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.bviSem.state'(sK0),'const.bviProps.inc_clock_2'(s('type.num.num',sK1),s('type.bviSem.state'(sK0),sK2)))))),
  inference(cnf_transformation,[],[f49])).
% SZS output end Proof for thm.bviProps
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 21
% Passive clauses: 458
% Generated clauses: 2411
% Final active clauses: 20
% Final passive clauses: 429
% Input formulas: 21
% Initial clauses: 51
% 
% Duplicate literals: 293
% Trivial inequalities: 31
% Fw subsumption resolutions: 101
% 
% Simple tautologies: 123
% Equational tautologies: 79
% Forward subsumptions: 949
% 
% Binary resolution: 11
% Forward superposition: 696
% Backward superposition: 786
% Self superposition: 223
% Equality factoring: 202
% Equality resolution: 1
% 
% Split clauses: 126
% Split components: 252
% SAT solver clauses: 381
% SAT solver unit clauses: 208
% SAT solver binary clauses: 81
% 
% Sat splits: 126
% 
% TWLsolver clauses: 381
% TWLsolver calls for satisfiability: 13
% 
% Memory used [KB]: 1407
% Time elapsed: 0.190 s
% ------------------------------
% ------------------------------
% Success in time 0.2 s
