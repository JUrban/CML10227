Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 149 next slice time: 5
dis+11_7_3 on thm.bvpSem
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.bvpSem
% SZS output start Proof for thm.bvpSem
fof(f4715,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f4714,f224,f425,f423,f421,f419,f417,f415,f413,f411,f409,f407,f4712,f4711,f4710,f4709,f4708,f4707,f4706,f4705,f4713])).
fof(f4713,plain,(
  $false | $spl0),
  inference(subsumption_resolution,[],[f407,f225])).
fof(f225,plain,(
  ( ! [X30] : (s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(sK12)),sK13) != s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(sK12)),'const.pair.,_2'(s('type.bvp.prog','const.bvp.Skip_0'),s('type.bvpSem.state'(sK12),X30)))) )),
  inference(cnf_transformation,[],[f139])).
fof(f139,plain,(
  (s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(sK12)),sK13) = s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(sK12)),'const.pair.,_2'(s('type.bvp.prog','const.bvp.Skip_0'),s('type.bvpSem.state'(sK12),sK14))) | s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(sK12)),sK13) = s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(sK12)),'const.pair.,_2'(s('type.bvp.prog','const.bvp.Move_2'(s('type.num.num',sK15),s('type.num.num',sK16))),s('type.bvpSem.state'(sK12),sK17))) | s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(sK12)),sK13) = s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(sK12)),'const.pair.,_2'(s('type.bvp.prog','const.bvp.Call_4'(s('type.option.option'('type.pair.prod'('type.num.num','type.sptree.spt'('type.one.one'))),sK18),s('type.option.option'('type.num.num'),sK19),s('type.list.list'('type.num.num'),sK20),s('type.option.option'('type.pair.prod'('type.num.num','type.bvp.prog')),sK21))),s('type.bvpSem.state'(sK12),sK22))) | s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(sK12)),sK13) = s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(sK12)),'const.pair.,_2'(s('type.bvp.prog','const.bvp.Assign_4'(s('type.num.num',sK23),s('type.closLang.op',sK24),s('type.list.list'('type.num.num'),sK25),s('type.option.option'('type.sptree.spt'('type.one.one')),sK26))),s('type.bvpSem.state'(sK12),sK27))) | s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(sK12)),sK13) = s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(sK12)),'const.pair.,_2'(s('type.bvp.prog','const.bvp.Seq_2'(s('type.bvp.prog',sK28),s('type.bvp.prog',sK29))),s('type.bvpSem.state'(sK12),sK30))) | s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(sK12)),sK13) = s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(sK12)),'const.pair.,_2'(s('type.bvp.prog','const.bvp.If_3'(s('type.num.num',sK31),s('type.bvp.prog',sK32),s('type.bvp.prog',sK33))),s('type.bvpSem.state'(sK12),sK34))) | s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(sK12)),sK13) = s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(sK12)),'const.pair.,_2'(s('type.bvp.prog','const.bvp.MakeSpace_2'(s('type.num.num',sK35),s('type.sptree.spt'('type.one.one'),sK36))),s('type.bvpSem.state'(sK12),sK37))) | s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(sK12)),sK13) = s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(sK12)),'const.pair.,_2'(s('type.bvp.prog','const.bvp.Raise_1'(s('type.num.num',sK38))),s('type.bvpSem.state'(sK12),sK39))) | s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(sK12)),sK13) = s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(sK12)),'const.pair.,_2'(s('type.bvp.prog','const.bvp.Return_1'(s('type.num.num',sK40))),s('type.bvpSem.state'(sK12),sK41))) | s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(sK12)),sK13) = s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(sK12)),'const.pair.,_2'(s('type.bvp.prog','const.bvp.Tick_0'),s('type.bvpSem.state'(sK12),sK42)))) & ! [X30] : s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(sK12)),sK13) != s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(sK12)),'const.pair.,_2'(s('type.bvp.prog','const.bvp.Skip_0'),s('type.bvpSem.state'(sK12),X30))) & ! [X27,X28,X29] : s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(sK12)),sK13) != s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(sK12)),'const.pair.,_2'(s('type.bvp.prog','const.bvp.Move_2'(s('type.num.num',X27),s('type.num.num',X28))),s('type.bvpSem.state'(sK12),X29))) & ! [X22,X23,X24,X25,X26] : s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(sK12)),sK13) != s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(sK12)),'const.pair.,_2'(s('type.bvp.prog','const.bvp.Assign_4'(s('type.num.num',X22),s('type.closLang.op',X23),s('type.list.list'('type.num.num'),X24),s('type.option.option'('type.sptree.spt'('type.one.one')),X25))),s('type.bvpSem.state'(sK12),X26))) & ! [X21] : s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(sK12)),sK13) != s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(sK12)),'const.pair.,_2'(s('type.bvp.prog','const.bvp.Tick_0'),s('type.bvpSem.state'(sK12),X21))) & ! [X18,X19,X20] : s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(sK12)),sK13) != s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(sK12)),'const.pair.,_2'(s('type.bvp.prog','const.bvp.MakeSpace_2'(s('type.num.num',X18),s('type.sptree.spt'('type.one.one'),X19))),s('type.bvpSem.state'(sK12),X20))) & ! [X16,X17] : s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(sK12)),sK13) != s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(sK12)),'const.pair.,_2'(s('type.bvp.prog','const.bvp.Raise_1'(s('type.num.num',X16))),s('type.bvpSem.state'(sK12),X17))) & ! [X14,X15] : s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(sK12)),sK13) != s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(sK12)),'const.pair.,_2'(s('type.bvp.prog','const.bvp.Return_1'(s('type.num.num',X14))),s('type.bvpSem.state'(sK12),X15))) & ! [X11,X12,X13] : s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(sK12)),sK13) != s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(sK12)),'const.pair.,_2'(s('type.bvp.prog','const.bvp.Seq_2'(s('type.bvp.prog',X11),s('type.bvp.prog',X12))),s('type.bvpSem.state'(sK12),X13))) & ! [X7,X8,X9,X10] : s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(sK12)),sK13) != s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(sK12)),'const.pair.,_2'(s('type.bvp.prog','const.bvp.If_3'(s('type.num.num',X7),s('type.bvp.prog',X8),s('type.bvp.prog',X9))),s('type.bvpSem.state'(sK12),X10))) & ! [X2,X3,X4,X5,X6] : s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(sK12)),sK13) != s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(sK12)),'const.pair.,_2'(s('type.bvp.prog','const.bvp.Call_4'(s('type.option.option'('type.pair.prod'('type.num.num','type.sptree.spt'('type.one.one'))),X2),s('type.option.option'('type.num.num'),X3),s('type.list.list'('type.num.num'),X4),s('type.option.option'('type.pair.prod'('type.num.num','type.bvp.prog')),X5))),s('type.bvpSem.state'(sK12),X6)))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK12,sK13,sK14,sK15,sK16,sK17,sK18,sK19,sK20,sK21,sK22,sK23,sK24,sK25,sK26,sK27,sK28,sK29,sK30,sK31,sK32,sK33,sK34,sK35,sK36,sK37,sK38,sK39,sK40,sK41,sK42])],[f138])).
fof(f138,plain,(
  ? [X0,X1] : ((? [X59] : s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X0)),X1) = s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X0)),'const.pair.,_2'(s('type.bvp.prog','const.bvp.Skip_0'),s('type.bvpSem.state'(X0),X59))) | ? [X56,X57,X58] : s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X0)),X1) = s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X0)),'const.pair.,_2'(s('type.bvp.prog','const.bvp.Move_2'(s('type.num.num',X56),s('type.num.num',X57))),s('type.bvpSem.state'(X0),X58))) | ? [X51,X52,X53,X54,X55] : s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X0)),X1) = s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X0)),'const.pair.,_2'(s('type.bvp.prog','const.bvp.Call_4'(s('type.option.option'('type.pair.prod'('type.num.num','type.sptree.spt'('type.one.one'))),X51),s('type.option.option'('type.num.num'),X52),s('type.list.list'('type.num.num'),X53),s('type.option.option'('type.pair.prod'('type.num.num','type.bvp.prog')),X54))),s('type.bvpSem.state'(X0),X55))) | ? [X46,X47,X48,X49,X50] : s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X0)),X1) = s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X0)),'const.pair.,_2'(s('type.bvp.prog','const.bvp.Assign_4'(s('type.num.num',X46),s('type.closLang.op',X47),s('type.list.list'('type.num.num'),X48),s('type.option.option'('type.sptree.spt'('type.one.one')),X49))),s('type.bvpSem.state'(X0),X50))) | ? [X43,X44,X45] : s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X0)),X1) = s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X0)),'const.pair.,_2'(s('type.bvp.prog','const.bvp.Seq_2'(s('type.bvp.prog',X43),s('type.bvp.prog',X44))),s('type.bvpSem.state'(X0),X45))) | ? [X39,X40,X41,X42] : s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X0)),X1) = s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X0)),'const.pair.,_2'(s('type.bvp.prog','const.bvp.If_3'(s('type.num.num',X39),s('type.bvp.prog',X40),s('type.bvp.prog',X41))),s('type.bvpSem.state'(X0),X42))) | ? [X36,X37,X38] : s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X0)),X1) = s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X0)),'const.pair.,_2'(s('type.bvp.prog','const.bvp.MakeSpace_2'(s('type.num.num',X36),s('type.sptree.spt'('type.one.one'),X37))),s('type.bvpSem.state'(X0),X38))) | ? [X34,X35] : s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X0)),X1) = s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X0)),'const.pair.,_2'(s('type.bvp.prog','const.bvp.Raise_1'(s('type.num.num',X34))),s('type.bvpSem.state'(X0),X35))) | ? [X32,X33] : s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X0)),X1) = s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X0)),'const.pair.,_2'(s('type.bvp.prog','const.bvp.Return_1'(s('type.num.num',X32))),s('type.bvpSem.state'(X0),X33))) | ? [X31] : s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X0)),X1) = s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X0)),'const.pair.,_2'(s('type.bvp.prog','const.bvp.Tick_0'),s('type.bvpSem.state'(X0),X31)))) & ! [X30] : s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X0)),X1) != s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X0)),'const.pair.,_2'(s('type.bvp.prog','const.bvp.Skip_0'),s('type.bvpSem.state'(X0),X30))) & ! [X27,X28,X29] : s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X0)),X1) != s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X0)),'const.pair.,_2'(s('type.bvp.prog','const.bvp.Move_2'(s('type.num.num',X27),s('type.num.num',X28))),s('type.bvpSem.state'(X0),X29))) & ! [X22,X23,X24,X25,X26] : s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X0)),X1) != s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X0)),'const.pair.,_2'(s('type.bvp.prog','const.bvp.Assign_4'(s('type.num.num',X22),s('type.closLang.op',X23),s('type.list.list'('type.num.num'),X24),s('type.option.option'('type.sptree.spt'('type.one.one')),X25))),s('type.bvpSem.state'(X0),X26))) & ! [X21] : s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X0)),X1) != s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X0)),'const.pair.,_2'(s('type.bvp.prog','const.bvp.Tick_0'),s('type.bvpSem.state'(X0),X21))) & ! [X18,X19,X20] : s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X0)),X1) != s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X0)),'const.pair.,_2'(s('type.bvp.prog','const.bvp.MakeSpace_2'(s('type.num.num',X18),s('type.sptree.spt'('type.one.one'),X19))),s('type.bvpSem.state'(X0),X20))) & ! [X16,X17] : s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X0)),X1) != s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X0)),'const.pair.,_2'(s('type.bvp.prog','const.bvp.Raise_1'(s('type.num.num',X16))),s('type.bvpSem.state'(X0),X17))) & ! [X14,X15] : s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X0)),X1) != s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X0)),'const.pair.,_2'(s('type.bvp.prog','const.bvp.Return_1'(s('type.num.num',X14))),s('type.bvpSem.state'(X0),X15))) & ! [X11,X12,X13] : s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X0)),X1) != s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X0)),'const.pair.,_2'(s('type.bvp.prog','const.bvp.Seq_2'(s('type.bvp.prog',X11),s('type.bvp.prog',X12))),s('type.bvpSem.state'(X0),X13))) & ! [X7,X8,X9,X10] : s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X0)),X1) != s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X0)),'const.pair.,_2'(s('type.bvp.prog','const.bvp.If_3'(s('type.num.num',X7),s('type.bvp.prog',X8),s('type.bvp.prog',X9))),s('type.bvpSem.state'(X0),X10))) & ! [X2,X3,X4,X5,X6] : s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X0)),X1) != s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X0)),'const.pair.,_2'(s('type.bvp.prog','const.bvp.Call_4'(s('type.option.option'('type.pair.prod'('type.num.num','type.sptree.spt'('type.one.one'))),X2),s('type.option.option'('type.num.num'),X3),s('type.list.list'('type.num.num'),X4),s('type.option.option'('type.pair.prod'('type.num.num','type.bvp.prog')),X5))),s('type.bvpSem.state'(X0),X6))))),
  inference(rectify,[],[f98])).
fof(f98,plain,(
  ? [X0,X1] : ((? [X30] : s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X0)),X1) = s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X0)),'const.pair.,_2'(s('type.bvp.prog','const.bvp.Skip_0'),s('type.bvpSem.state'(X0),X30))) | ? [X27,X28,X29] : s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X0)),X1) = s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X0)),'const.pair.,_2'(s('type.bvp.prog','const.bvp.Move_2'(s('type.num.num',X27),s('type.num.num',X28))),s('type.bvpSem.state'(X0),X29))) | ? [X22,X23,X24,X25,X26] : s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X0)),X1) = s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X0)),'const.pair.,_2'(s('type.bvp.prog','const.bvp.Call_4'(s('type.option.option'('type.pair.prod'('type.num.num','type.sptree.spt'('type.one.one'))),X22),s('type.option.option'('type.num.num'),X23),s('type.list.list'('type.num.num'),X24),s('type.option.option'('type.pair.prod'('type.num.num','type.bvp.prog')),X25))),s('type.bvpSem.state'(X0),X26))) | ? [X17,X18,X19,X20,X21] : s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X0)),X1) = s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X0)),'const.pair.,_2'(s('type.bvp.prog','const.bvp.Assign_4'(s('type.num.num',X17),s('type.closLang.op',X18),s('type.list.list'('type.num.num'),X19),s('type.option.option'('type.sptree.spt'('type.one.one')),X20))),s('type.bvpSem.state'(X0),X21))) | ? [X14,X15,X16] : s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X0)),X1) = s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X0)),'const.pair.,_2'(s('type.bvp.prog','const.bvp.Seq_2'(s('type.bvp.prog',X14),s('type.bvp.prog',X15))),s('type.bvpSem.state'(X0),X16))) | ? [X10,X11,X12,X13] : s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X0)),X1) = s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X0)),'const.pair.,_2'(s('type.bvp.prog','const.bvp.If_3'(s('type.num.num',X10),s('type.bvp.prog',X11),s('type.bvp.prog',X12))),s('type.bvpSem.state'(X0),X13))) | ? [X7,X8,X9] : s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X0)),X1) = s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X0)),'const.pair.,_2'(s('type.bvp.prog','const.bvp.MakeSpace_2'(s('type.num.num',X7),s('type.sptree.spt'('type.one.one'),X8))),s('type.bvpSem.state'(X0),X9))) | ? [X5,X6] : s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X0)),X1) = s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X0)),'const.pair.,_2'(s('type.bvp.prog','const.bvp.Raise_1'(s('type.num.num',X5))),s('type.bvpSem.state'(X0),X6))) | ? [X3,X4] : s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X0)),X1) = s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X0)),'const.pair.,_2'(s('type.bvp.prog','const.bvp.Return_1'(s('type.num.num',X3))),s('type.bvpSem.state'(X0),X4))) | ? [X2] : s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X0)),X1) = s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X0)),'const.pair.,_2'(s('type.bvp.prog','const.bvp.Tick_0'),s('type.bvpSem.state'(X0),X2)))) & ! [X59] : s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X0)),X1) != s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X0)),'const.pair.,_2'(s('type.bvp.prog','const.bvp.Skip_0'),s('type.bvpSem.state'(X0),X59))) & ! [X56,X57,X58] : s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X0)),X1) != s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X0)),'const.pair.,_2'(s('type.bvp.prog','const.bvp.Move_2'(s('type.num.num',X56),s('type.num.num',X57))),s('type.bvpSem.state'(X0),X58))) & ! [X51,X52,X53,X54,X55] : s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X0)),X1) != s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X0)),'const.pair.,_2'(s('type.bvp.prog','const.bvp.Assign_4'(s('type.num.num',X51),s('type.closLang.op',X52),s('type.list.list'('type.num.num'),X53),s('type.option.option'('type.sptree.spt'('type.one.one')),X54))),s('type.bvpSem.state'(X0),X55))) & ! [X50] : s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X0)),X1) != s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X0)),'const.pair.,_2'(s('type.bvp.prog','const.bvp.Tick_0'),s('type.bvpSem.state'(X0),X50))) & ! [X47,X48,X49] : s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X0)),X1) != s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X0)),'const.pair.,_2'(s('type.bvp.prog','const.bvp.MakeSpace_2'(s('type.num.num',X47),s('type.sptree.spt'('type.one.one'),X48))),s('type.bvpSem.state'(X0),X49))) & ! [X45,X46] : s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X0)),X1) != s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X0)),'const.pair.,_2'(s('type.bvp.prog','const.bvp.Raise_1'(s('type.num.num',X45))),s('type.bvpSem.state'(X0),X46))) & ! [X43,X44] : s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X0)),X1) != s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X0)),'const.pair.,_2'(s('type.bvp.prog','const.bvp.Return_1'(s('type.num.num',X43))),s('type.bvpSem.state'(X0),X44))) & ! [X40,X41,X42] : s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X0)),X1) != s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X0)),'const.pair.,_2'(s('type.bvp.prog','const.bvp.Seq_2'(s('type.bvp.prog',X40),s('type.bvp.prog',X41))),s('type.bvpSem.state'(X0),X42))) & ! [X36,X37,X38,X39] : s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X0)),X1) != s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X0)),'const.pair.,_2'(s('type.bvp.prog','const.bvp.If_3'(s('type.num.num',X36),s('type.bvp.prog',X37),s('type.bvp.prog',X38))),s('type.bvpSem.state'(X0),X39))) & ! [X31,X32,X33,X34,X35] : s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X0)),X1) != s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X0)),'const.pair.,_2'(s('type.bvp.prog','const.bvp.Call_4'(s('type.option.option'('type.pair.prod'('type.num.num','type.sptree.spt'('type.one.one'))),X31),s('type.option.option'('type.num.num'),X32),s('type.list.list'('type.num.num'),X33),s('type.option.option'('type.pair.prod'('type.num.num','type.bvp.prog')),X34))),s('type.bvpSem.state'(X0),X35))))),
  inference(flattening,[],[f97])).
fof(f97,plain,(
  ? [X0,X1] : ((? [X30] : s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X0)),X1) = s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X0)),'const.pair.,_2'(s('type.bvp.prog','const.bvp.Skip_0'),s('type.bvpSem.state'(X0),X30))) | ? [X27,X28,X29] : s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X0)),X1) = s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X0)),'const.pair.,_2'(s('type.bvp.prog','const.bvp.Move_2'(s('type.num.num',X27),s('type.num.num',X28))),s('type.bvpSem.state'(X0),X29))) | ? [X22,X23,X24,X25,X26] : s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X0)),X1) = s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X0)),'const.pair.,_2'(s('type.bvp.prog','const.bvp.Call_4'(s('type.option.option'('type.pair.prod'('type.num.num','type.sptree.spt'('type.one.one'))),X22),s('type.option.option'('type.num.num'),X23),s('type.list.list'('type.num.num'),X24),s('type.option.option'('type.pair.prod'('type.num.num','type.bvp.prog')),X25))),s('type.bvpSem.state'(X0),X26))) | ? [X17,X18,X19,X20,X21] : s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X0)),X1) = s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X0)),'const.pair.,_2'(s('type.bvp.prog','const.bvp.Assign_4'(s('type.num.num',X17),s('type.closLang.op',X18),s('type.list.list'('type.num.num'),X19),s('type.option.option'('type.sptree.spt'('type.one.one')),X20))),s('type.bvpSem.state'(X0),X21))) | ? [X14,X15,X16] : s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X0)),X1) = s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X0)),'const.pair.,_2'(s('type.bvp.prog','const.bvp.Seq_2'(s('type.bvp.prog',X14),s('type.bvp.prog',X15))),s('type.bvpSem.state'(X0),X16))) | ? [X10,X11,X12,X13] : s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X0)),X1) = s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X0)),'const.pair.,_2'(s('type.bvp.prog','const.bvp.If_3'(s('type.num.num',X10),s('type.bvp.prog',X11),s('type.bvp.prog',X12))),s('type.bvpSem.state'(X0),X13))) | ? [X7,X8,X9] : s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X0)),X1) = s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X0)),'const.pair.,_2'(s('type.bvp.prog','const.bvp.MakeSpace_2'(s('type.num.num',X7),s('type.sptree.spt'('type.one.one'),X8))),s('type.bvpSem.state'(X0),X9))) | ? [X5,X6] : s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X0)),X1) = s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X0)),'const.pair.,_2'(s('type.bvp.prog','const.bvp.Raise_1'(s('type.num.num',X5))),s('type.bvpSem.state'(X0),X6))) | ? [X3,X4] : s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X0)),X1) = s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X0)),'const.pair.,_2'(s('type.bvp.prog','const.bvp.Return_1'(s('type.num.num',X3))),s('type.bvpSem.state'(X0),X4))) | ? [X2] : s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X0)),X1) = s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X0)),'const.pair.,_2'(s('type.bvp.prog','const.bvp.Tick_0'),s('type.bvpSem.state'(X0),X2)))) & (! [X59] : s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X0)),X1) != s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X0)),'const.pair.,_2'(s('type.bvp.prog','const.bvp.Skip_0'),s('type.bvpSem.state'(X0),X59))) & ! [X56,X57,X58] : s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X0)),X1) != s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X0)),'const.pair.,_2'(s('type.bvp.prog','const.bvp.Move_2'(s('type.num.num',X56),s('type.num.num',X57))),s('type.bvpSem.state'(X0),X58))) & ! [X51,X52,X53,X54,X55] : s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X0)),X1) != s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X0)),'const.pair.,_2'(s('type.bvp.prog','const.bvp.Assign_4'(s('type.num.num',X51),s('type.closLang.op',X52),s('type.list.list'('type.num.num'),X53),s('type.option.option'('type.sptree.spt'('type.one.one')),X54))),s('type.bvpSem.state'(X0),X55))) & ! [X50] : s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X0)),X1) != s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X0)),'const.pair.,_2'(s('type.bvp.prog','const.bvp.Tick_0'),s('type.bvpSem.state'(X0),X50))) & ! [X47,X48,X49] : s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X0)),X1) != s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X0)),'const.pair.,_2'(s('type.bvp.prog','const.bvp.MakeSpace_2'(s('type.num.num',X47),s('type.sptree.spt'('type.one.one'),X48))),s('type.bvpSem.state'(X0),X49))) & ! [X45,X46] : s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X0)),X1) != s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X0)),'const.pair.,_2'(s('type.bvp.prog','const.bvp.Raise_1'(s('type.num.num',X45))),s('type.bvpSem.state'(X0),X46))) & ! [X43,X44] : s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X0)),X1) != s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X0)),'const.pair.,_2'(s('type.bvp.prog','const.bvp.Return_1'(s('type.num.num',X43))),s('type.bvpSem.state'(X0),X44))) & ! [X40,X41,X42] : s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X0)),X1) != s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X0)),'const.pair.,_2'(s('type.bvp.prog','const.bvp.Seq_2'(s('type.bvp.prog',X40),s('type.bvp.prog',X41))),s('type.bvpSem.state'(X0),X42))) & ! [X36,X37,X38,X39] : s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X0)),X1) != s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X0)),'const.pair.,_2'(s('type.bvp.prog','const.bvp.If_3'(s('type.num.num',X36),s('type.bvp.prog',X37),s('type.bvp.prog',X38))),s('type.bvpSem.state'(X0),X39))) & ! [X31,X32,X33,X34,X35] : s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X0)),X1) != s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X0)),'const.pair.,_2'(s('type.bvp.prog','const.bvp.Call_4'(s('type.option.option'('type.pair.prod'('type.num.num','type.sptree.spt'('type.one.one'))),X31),s('type.option.option'('type.num.num'),X32),s('type.list.list'('type.num.num'),X33),s('type.option.option'('type.pair.prod'('type.num.num','type.bvp.prog')),X34))),s('type.bvpSem.state'(X0),X35)))))),
  inference(ennf_transformation,[],[f40])).
fof(f40,plain,(
  ~! [X0,X1] : ((? [X30] : s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X0)),X1) = s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X0)),'const.pair.,_2'(s('type.bvp.prog','const.bvp.Skip_0'),s('type.bvpSem.state'(X0),X30))) | ? [X27,X28,X29] : s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X0)),X1) = s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X0)),'const.pair.,_2'(s('type.bvp.prog','const.bvp.Move_2'(s('type.num.num',X27),s('type.num.num',X28))),s('type.bvpSem.state'(X0),X29))) | ? [X22,X23,X24,X25,X26] : s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X0)),X1) = s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X0)),'const.pair.,_2'(s('type.bvp.prog','const.bvp.Call_4'(s('type.option.option'('type.pair.prod'('type.num.num','type.sptree.spt'('type.one.one'))),X22),s('type.option.option'('type.num.num'),X23),s('type.list.list'('type.num.num'),X24),s('type.option.option'('type.pair.prod'('type.num.num','type.bvp.prog')),X25))),s('type.bvpSem.state'(X0),X26))) | ? [X17,X18,X19,X20,X21] : s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X0)),X1) = s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X0)),'const.pair.,_2'(s('type.bvp.prog','const.bvp.Assign_4'(s('type.num.num',X17),s('type.closLang.op',X18),s('type.list.list'('type.num.num'),X19),s('type.option.option'('type.sptree.spt'('type.one.one')),X20))),s('type.bvpSem.state'(X0),X21))) | ? [X14,X15,X16] : s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X0)),X1) = s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X0)),'const.pair.,_2'(s('type.bvp.prog','const.bvp.Seq_2'(s('type.bvp.prog',X14),s('type.bvp.prog',X15))),s('type.bvpSem.state'(X0),X16))) | ? [X10,X11,X12,X13] : s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X0)),X1) = s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X0)),'const.pair.,_2'(s('type.bvp.prog','const.bvp.If_3'(s('type.num.num',X10),s('type.bvp.prog',X11),s('type.bvp.prog',X12))),s('type.bvpSem.state'(X0),X13))) | ? [X7,X8,X9] : s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X0)),X1) = s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X0)),'const.pair.,_2'(s('type.bvp.prog','const.bvp.MakeSpace_2'(s('type.num.num',X7),s('type.sptree.spt'('type.one.one'),X8))),s('type.bvpSem.state'(X0),X9))) | ? [X5,X6] : s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X0)),X1) = s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X0)),'const.pair.,_2'(s('type.bvp.prog','const.bvp.Raise_1'(s('type.num.num',X5))),s('type.bvpSem.state'(X0),X6))) | ? [X3,X4] : s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X0)),X1) = s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X0)),'const.pair.,_2'(s('type.bvp.prog','const.bvp.Return_1'(s('type.num.num',X3))),s('type.bvpSem.state'(X0),X4))) | ? [X2] : s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X0)),X1) = s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X0)),'const.pair.,_2'(s('type.bvp.prog','const.bvp.Tick_0'),s('type.bvpSem.state'(X0),X2)))) => (? [X59] : s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X0)),X1) = s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X0)),'const.pair.,_2'(s('type.bvp.prog','const.bvp.Skip_0'),s('type.bvpSem.state'(X0),X59))) | ? [X56,X57,X58] : s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X0)),X1) = s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X0)),'const.pair.,_2'(s('type.bvp.prog','const.bvp.Move_2'(s('type.num.num',X56),s('type.num.num',X57))),s('type.bvpSem.state'(X0),X58))) | ? [X51,X52,X53,X54,X55] : s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X0)),X1) = s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X0)),'const.pair.,_2'(s('type.bvp.prog','const.bvp.Assign_4'(s('type.num.num',X51),s('type.closLang.op',X52),s('type.list.list'('type.num.num'),X53),s('type.option.option'('type.sptree.spt'('type.one.one')),X54))),s('type.bvpSem.state'(X0),X55))) | ? [X50] : s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X0)),X1) = s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X0)),'const.pair.,_2'(s('type.bvp.prog','const.bvp.Tick_0'),s('type.bvpSem.state'(X0),X50))) | ? [X47,X48,X49] : s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X0)),X1) = s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X0)),'const.pair.,_2'(s('type.bvp.prog','const.bvp.MakeSpace_2'(s('type.num.num',X47),s('type.sptree.spt'('type.one.one'),X48))),s('type.bvpSem.state'(X0),X49))) | ? [X45,X46] : s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X0)),X1) = s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X0)),'const.pair.,_2'(s('type.bvp.prog','const.bvp.Raise_1'(s('type.num.num',X45))),s('type.bvpSem.state'(X0),X46))) | ? [X43,X44] : s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X0)),X1) = s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X0)),'const.pair.,_2'(s('type.bvp.prog','const.bvp.Return_1'(s('type.num.num',X43))),s('type.bvpSem.state'(X0),X44))) | ? [X40,X41,X42] : s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X0)),X1) = s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X0)),'const.pair.,_2'(s('type.bvp.prog','const.bvp.Seq_2'(s('type.bvp.prog',X40),s('type.bvp.prog',X41))),s('type.bvpSem.state'(X0),X42))) | ? [X36,X37,X38,X39] : s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X0)),X1) = s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X0)),'const.pair.,_2'(s('type.bvp.prog','const.bvp.If_3'(s('type.num.num',X36),s('type.bvp.prog',X37),s('type.bvp.prog',X38))),s('type.bvpSem.state'(X0),X39))) | ? [X31,X32,X33,X34,X35] : s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X0)),X1) = s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X0)),'const.pair.,_2'(s('type.bvp.prog','const.bvp.Call_4'(s('type.option.option'('type.pair.prod'('type.num.num','type.sptree.spt'('type.one.one'))),X31),s('type.option.option'('type.num.num'),X32),s('type.list.list'('type.num.num'),X33),s('type.option.option'('type.pair.prod'('type.num.num','type.bvp.prog')),X34))),s('type.bvpSem.state'(X0),X35)))))),
  inference(flattening,[],[f39])).
fof(f39,plain,(
  ~! [X0] : ! [X1] : ((? [X30] : s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X0)),X1) = s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X0)),'const.pair.,_2'(s('type.bvp.prog','const.bvp.Skip_0'),s('type.bvpSem.state'(X0),X30))) | ? [X27,X28,X29] : s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X0)),X1) = s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X0)),'const.pair.,_2'(s('type.bvp.prog','const.bvp.Move_2'(s('type.num.num',X27),s('type.num.num',X28))),s('type.bvpSem.state'(X0),X29))) | ? [X22,X23,X24,X25,X26] : s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X0)),X1) = s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X0)),'const.pair.,_2'(s('type.bvp.prog','const.bvp.Call_4'(s('type.option.option'('type.pair.prod'('type.num.num','type.sptree.spt'('type.one.one'))),X22),s('type.option.option'('type.num.num'),X23),s('type.list.list'('type.num.num'),X24),s('type.option.option'('type.pair.prod'('type.num.num','type.bvp.prog')),X25))),s('type.bvpSem.state'(X0),X26))) | ? [X17,X18,X19,X20,X21] : s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X0)),X1) = s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X0)),'const.pair.,_2'(s('type.bvp.prog','const.bvp.Assign_4'(s('type.num.num',X17),s('type.closLang.op',X18),s('type.list.list'('type.num.num'),X19),s('type.option.option'('type.sptree.spt'('type.one.one')),X20))),s('type.bvpSem.state'(X0),X21))) | ? [X14,X15,X16] : s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X0)),X1) = s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X0)),'const.pair.,_2'(s('type.bvp.prog','const.bvp.Seq_2'(s('type.bvp.prog',X14),s('type.bvp.prog',X15))),s('type.bvpSem.state'(X0),X16))) | ? [X10,X11,X12,X13] : s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X0)),X1) = s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X0)),'const.pair.,_2'(s('type.bvp.prog','const.bvp.If_3'(s('type.num.num',X10),s('type.bvp.prog',X11),s('type.bvp.prog',X12))),s('type.bvpSem.state'(X0),X13))) | ? [X7,X8,X9] : s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X0)),X1) = s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X0)),'const.pair.,_2'(s('type.bvp.prog','const.bvp.MakeSpace_2'(s('type.num.num',X7),s('type.sptree.spt'('type.one.one'),X8))),s('type.bvpSem.state'(X0),X9))) | ? [X5,X6] : s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X0)),X1) = s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X0)),'const.pair.,_2'(s('type.bvp.prog','const.bvp.Raise_1'(s('type.num.num',X5))),s('type.bvpSem.state'(X0),X6))) | ? [X3,X4] : s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X0)),X1) = s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X0)),'const.pair.,_2'(s('type.bvp.prog','const.bvp.Return_1'(s('type.num.num',X3))),s('type.bvpSem.state'(X0),X4))) | ? [X2] : s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X0)),X1) = s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X0)),'const.pair.,_2'(s('type.bvp.prog','const.bvp.Tick_0'),s('type.bvpSem.state'(X0),X2)))) => (? [X59] : s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X0)),X1) = s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X0)),'const.pair.,_2'(s('type.bvp.prog','const.bvp.Skip_0'),s('type.bvpSem.state'(X0),X59))) | ? [X56,X57,X58] : s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X0)),X1) = s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X0)),'const.pair.,_2'(s('type.bvp.prog','const.bvp.Move_2'(s('type.num.num',X56),s('type.num.num',X57))),s('type.bvpSem.state'(X0),X58))) | ? [X51,X52,X53,X54,X55] : s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X0)),X1) = s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X0)),'const.pair.,_2'(s('type.bvp.prog','const.bvp.Assign_4'(s('type.num.num',X51),s('type.closLang.op',X52),s('type.list.list'('type.num.num'),X53),s('type.option.option'('type.sptree.spt'('type.one.one')),X54))),s('type.bvpSem.state'(X0),X55))) | ? [X50] : s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X0)),X1) = s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X0)),'const.pair.,_2'(s('type.bvp.prog','const.bvp.Tick_0'),s('type.bvpSem.state'(X0),X50))) | ? [X47,X48,X49] : s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X0)),X1) = s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X0)),'const.pair.,_2'(s('type.bvp.prog','const.bvp.MakeSpace_2'(s('type.num.num',X47),s('type.sptree.spt'('type.one.one'),X48))),s('type.bvpSem.state'(X0),X49))) | ? [X45,X46] : s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X0)),X1) = s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X0)),'const.pair.,_2'(s('type.bvp.prog','const.bvp.Raise_1'(s('type.num.num',X45))),s('type.bvpSem.state'(X0),X46))) | ? [X43,X44] : s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X0)),X1) = s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X0)),'const.pair.,_2'(s('type.bvp.prog','const.bvp.Return_1'(s('type.num.num',X43))),s('type.bvpSem.state'(X0),X44))) | ? [X40,X41,X42] : s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X0)),X1) = s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X0)),'const.pair.,_2'(s('type.bvp.prog','const.bvp.Seq_2'(s('type.bvp.prog',X40),s('type.bvp.prog',X41))),s('type.bvpSem.state'(X0),X42))) | ? [X36,X37,X38,X39] : s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X0)),X1) = s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X0)),'const.pair.,_2'(s('type.bvp.prog','const.bvp.If_3'(s('type.num.num',X36),s('type.bvp.prog',X37),s('type.bvp.prog',X38))),s('type.bvpSem.state'(X0),X39))) | ? [X31,X32,X33,X34,X35] : s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X0)),X1) = s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X0)),'const.pair.,_2'(s('type.bvp.prog','const.bvp.Call_4'(s('type.option.option'('type.pair.prod'('type.num.num','type.sptree.spt'('type.one.one'))),X31),s('type.option.option'('type.num.num'),X32),s('type.list.list'('type.num.num'),X33),s('type.option.option'('type.pair.prod'('type.num.num','type.bvp.prog')),X34))),s('type.bvpSem.state'(X0),X35)))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : ! [X7] : ((? [X8] : s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X6)),X7) = s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X6)),'const.pair.,_2'(s('type.bvp.prog','const.bvp.Skip_0'),s('type.bvpSem.state'(X6),X8))) | ? [X9,X10,X8] : s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X6)),X7) = s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X6)),'const.pair.,_2'(s('type.bvp.prog','const.bvp.Move_2'(s('type.num.num',X9),s('type.num.num',X10))),s('type.bvpSem.state'(X6),X8))) | ? [X11,X9,X12,X13,X8] : s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X6)),X7) = s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X6)),'const.pair.,_2'(s('type.bvp.prog','const.bvp.Call_4'(s('type.option.option'('type.pair.prod'('type.num.num','type.sptree.spt'('type.one.one'))),X11),s('type.option.option'('type.num.num'),X9),s('type.list.list'('type.num.num'),X12),s('type.option.option'('type.pair.prod'('type.num.num','type.bvp.prog')),X13))),s('type.bvpSem.state'(X6),X8))) | ? [X9,X14,X12,X15,X8] : s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X6)),X7) = s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X6)),'const.pair.,_2'(s('type.bvp.prog','const.bvp.Assign_4'(s('type.num.num',X9),s('type.closLang.op',X14),s('type.list.list'('type.num.num'),X12),s('type.option.option'('type.sptree.spt'('type.one.one')),X15))),s('type.bvpSem.state'(X6),X8))) | ? [X16,X17,X8] : s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X6)),X7) = s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X6)),'const.pair.,_2'(s('type.bvp.prog','const.bvp.Seq_2'(s('type.bvp.prog',X16),s('type.bvp.prog',X17))),s('type.bvpSem.state'(X6),X8))) | ? [X18,X16,X17,X8] : s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X6)),X7) = s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X6)),'const.pair.,_2'(s('type.bvp.prog','const.bvp.If_3'(s('type.num.num',X18),s('type.bvp.prog',X16),s('type.bvp.prog',X17))),s('type.bvpSem.state'(X6),X8))) | ? [X19,X20,X8] : s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X6)),X7) = s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X6)),'const.pair.,_2'(s('type.bvp.prog','const.bvp.MakeSpace_2'(s('type.num.num',X19),s('type.sptree.spt'('type.one.one'),X20))),s('type.bvpSem.state'(X6),X8))) | ? [X18,X8] : s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X6)),X7) = s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X6)),'const.pair.,_2'(s('type.bvp.prog','const.bvp.Raise_1'(s('type.num.num',X18))),s('type.bvpSem.state'(X6),X8))) | ? [X18,X8] : s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X6)),X7) = s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X6)),'const.pair.,_2'(s('type.bvp.prog','const.bvp.Return_1'(s('type.num.num',X18))),s('type.bvpSem.state'(X6),X8))) | ? [X8] : s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X6)),X7) = s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X6)),'const.pair.,_2'(s('type.bvp.prog','const.bvp.Tick_0'),s('type.bvpSem.state'(X6),X8)))) => (? [X8] : s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X6)),X7) = s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X6)),'const.pair.,_2'(s('type.bvp.prog','const.bvp.Skip_0'),s('type.bvpSem.state'(X6),X8))) | ? [X9,X10,X8] : s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X6)),X7) = s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X6)),'const.pair.,_2'(s('type.bvp.prog','const.bvp.Move_2'(s('type.num.num',X9),s('type.num.num',X10))),s('type.bvpSem.state'(X6),X8))) | ? [X9,X14,X12,X15,X8] : s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X6)),X7) = s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X6)),'const.pair.,_2'(s('type.bvp.prog','const.bvp.Assign_4'(s('type.num.num',X9),s('type.closLang.op',X14),s('type.list.list'('type.num.num'),X12),s('type.option.option'('type.sptree.spt'('type.one.one')),X15))),s('type.bvpSem.state'(X6),X8))) | ? [X8] : s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X6)),X7) = s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X6)),'const.pair.,_2'(s('type.bvp.prog','const.bvp.Tick_0'),s('type.bvpSem.state'(X6),X8))) | ? [X19,X20,X8] : s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X6)),X7) = s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X6)),'const.pair.,_2'(s('type.bvp.prog','const.bvp.MakeSpace_2'(s('type.num.num',X19),s('type.sptree.spt'('type.one.one'),X20))),s('type.bvpSem.state'(X6),X8))) | ? [X18,X8] : s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X6)),X7) = s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X6)),'const.pair.,_2'(s('type.bvp.prog','const.bvp.Raise_1'(s('type.num.num',X18))),s('type.bvpSem.state'(X6),X8))) | ? [X18,X8] : s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X6)),X7) = s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X6)),'const.pair.,_2'(s('type.bvp.prog','const.bvp.Return_1'(s('type.num.num',X18))),s('type.bvpSem.state'(X6),X8))) | ? [X16,X17,X8] : s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X6)),X7) = s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X6)),'const.pair.,_2'(s('type.bvp.prog','const.bvp.Seq_2'(s('type.bvp.prog',X16),s('type.bvp.prog',X17))),s('type.bvpSem.state'(X6),X8))) | ? [X18,X16,X17,X8] : s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X6)),X7) = s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X6)),'const.pair.,_2'(s('type.bvp.prog','const.bvp.If_3'(s('type.num.num',X18),s('type.bvp.prog',X16),s('type.bvp.prog',X17))),s('type.bvpSem.state'(X6),X8))) | ? [X11,X9,X12,X13,X8] : s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X6)),X7) = s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X6)),'const.pair.,_2'(s('type.bvp.prog','const.bvp.Call_4'(s('type.option.option'('type.pair.prod'('type.num.num','type.sptree.spt'('type.one.one'))),X11),s('type.option.option'('type.num.num'),X9),s('type.list.list'('type.num.num'),X12),s('type.option.option'('type.pair.prod'('type.num.num','type.bvp.prog')),X13))),s('type.bvpSem.state'(X6),X8)))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : ! [X7] : ((? [X8] : s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X6)),X7) = s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X6)),'const.pair.,_2'(s('type.bvp.prog','const.bvp.Skip_0'),s('type.bvpSem.state'(X6),X8))) | ? [X9,X10,X8] : s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X6)),X7) = s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X6)),'const.pair.,_2'(s('type.bvp.prog','const.bvp.Move_2'(s('type.num.num',X9),s('type.num.num',X10))),s('type.bvpSem.state'(X6),X8))) | ? [X11,X9,X12,X13,X8] : s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X6)),X7) = s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X6)),'const.pair.,_2'(s('type.bvp.prog','const.bvp.Call_4'(s('type.option.option'('type.pair.prod'('type.num.num','type.sptree.spt'('type.one.one'))),X11),s('type.option.option'('type.num.num'),X9),s('type.list.list'('type.num.num'),X12),s('type.option.option'('type.pair.prod'('type.num.num','type.bvp.prog')),X13))),s('type.bvpSem.state'(X6),X8))) | ? [X9,X14,X12,X15,X8] : s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X6)),X7) = s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X6)),'const.pair.,_2'(s('type.bvp.prog','const.bvp.Assign_4'(s('type.num.num',X9),s('type.closLang.op',X14),s('type.list.list'('type.num.num'),X12),s('type.option.option'('type.sptree.spt'('type.one.one')),X15))),s('type.bvpSem.state'(X6),X8))) | ? [X16,X17,X8] : s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X6)),X7) = s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X6)),'const.pair.,_2'(s('type.bvp.prog','const.bvp.Seq_2'(s('type.bvp.prog',X16),s('type.bvp.prog',X17))),s('type.bvpSem.state'(X6),X8))) | ? [X18,X16,X17,X8] : s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X6)),X7) = s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X6)),'const.pair.,_2'(s('type.bvp.prog','const.bvp.If_3'(s('type.num.num',X18),s('type.bvp.prog',X16),s('type.bvp.prog',X17))),s('type.bvpSem.state'(X6),X8))) | ? [X19,X20,X8] : s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X6)),X7) = s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X6)),'const.pair.,_2'(s('type.bvp.prog','const.bvp.MakeSpace_2'(s('type.num.num',X19),s('type.sptree.spt'('type.one.one'),X20))),s('type.bvpSem.state'(X6),X8))) | ? [X18,X8] : s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X6)),X7) = s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X6)),'const.pair.,_2'(s('type.bvp.prog','const.bvp.Raise_1'(s('type.num.num',X18))),s('type.bvpSem.state'(X6),X8))) | ? [X18,X8] : s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X6)),X7) = s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X6)),'const.pair.,_2'(s('type.bvp.prog','const.bvp.Return_1'(s('type.num.num',X18))),s('type.bvpSem.state'(X6),X8))) | ? [X8] : s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X6)),X7) = s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X6)),'const.pair.,_2'(s('type.bvp.prog','const.bvp.Tick_0'),s('type.bvpSem.state'(X6),X8)))) => (? [X8] : s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X6)),X7) = s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X6)),'const.pair.,_2'(s('type.bvp.prog','const.bvp.Skip_0'),s('type.bvpSem.state'(X6),X8))) | ? [X9,X10,X8] : s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X6)),X7) = s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X6)),'const.pair.,_2'(s('type.bvp.prog','const.bvp.Move_2'(s('type.num.num',X9),s('type.num.num',X10))),s('type.bvpSem.state'(X6),X8))) | ? [X9,X14,X12,X15,X8] : s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X6)),X7) = s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X6)),'const.pair.,_2'(s('type.bvp.prog','const.bvp.Assign_4'(s('type.num.num',X9),s('type.closLang.op',X14),s('type.list.list'('type.num.num'),X12),s('type.option.option'('type.sptree.spt'('type.one.one')),X15))),s('type.bvpSem.state'(X6),X8))) | ? [X8] : s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X6)),X7) = s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X6)),'const.pair.,_2'(s('type.bvp.prog','const.bvp.Tick_0'),s('type.bvpSem.state'(X6),X8))) | ? [X19,X20,X8] : s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X6)),X7) = s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X6)),'const.pair.,_2'(s('type.bvp.prog','const.bvp.MakeSpace_2'(s('type.num.num',X19),s('type.sptree.spt'('type.one.one'),X20))),s('type.bvpSem.state'(X6),X8))) | ? [X18,X8] : s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X6)),X7) = s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X6)),'const.pair.,_2'(s('type.bvp.prog','const.bvp.Raise_1'(s('type.num.num',X18))),s('type.bvpSem.state'(X6),X8))) | ? [X18,X8] : s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X6)),X7) = s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X6)),'const.pair.,_2'(s('type.bvp.prog','const.bvp.Return_1'(s('type.num.num',X18))),s('type.bvpSem.state'(X6),X8))) | ? [X16,X17,X8] : s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X6)),X7) = s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X6)),'const.pair.,_2'(s('type.bvp.prog','const.bvp.Seq_2'(s('type.bvp.prog',X16),s('type.bvp.prog',X17))),s('type.bvpSem.state'(X6),X8))) | ? [X18,X16,X17,X8] : s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X6)),X7) = s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X6)),'const.pair.,_2'(s('type.bvp.prog','const.bvp.If_3'(s('type.num.num',X18),s('type.bvp.prog',X16),s('type.bvp.prog',X17))),s('type.bvpSem.state'(X6),X8))) | ? [X11,X9,X12,X13,X8] : s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X6)),X7) = s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X6)),'const.pair.,_2'(s('type.bvp.prog','const.bvp.Call_4'(s('type.option.option'('type.pair.prod'('type.num.num','type.sptree.spt'('type.one.one'))),X11),s('type.option.option'('type.num.num'),X9),s('type.list.list'('type.num.num'),X12),s('type.option.option'('type.pair.prod'('type.num.num','type.bvp.prog')),X13))),s('type.bvpSem.state'(X6),X8)))))),
  file('thm.bvpSem.bvpSem_2|49|5_prove_ltb','thm.bvpSem.bvpSem_2|49|5_prove_ltb')).
fof(f4705,plain,(
  $false | $spl4),
  inference(subsumption_resolution,[],[f411,f234])).
fof(f234,plain,(
  ( ! [X6,X4,X2,X5,X3] : (s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(sK12)),sK13) != s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(sK12)),'const.pair.,_2'(s('type.bvp.prog','const.bvp.Call_4'(s('type.option.option'('type.pair.prod'('type.num.num','type.sptree.spt'('type.one.one'))),X2),s('type.option.option'('type.num.num'),X3),s('type.list.list'('type.num.num'),X4),s('type.option.option'('type.pair.prod'('type.num.num','type.bvp.prog')),X5))),s('type.bvpSem.state'(sK12),X6)))) )),
  inference(cnf_transformation,[],[f139])).
fof(f4706,plain,(
  $false | $spl12),
  inference(subsumption_resolution,[],[f419,f229])).
fof(f229,plain,(
  ( ! [X19,X20,X18] : (s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(sK12)),sK13) != s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(sK12)),'const.pair.,_2'(s('type.bvp.prog','const.bvp.MakeSpace_2'(s('type.num.num',X18),s('type.sptree.spt'('type.one.one'),X19))),s('type.bvpSem.state'(sK12),X20)))) )),
  inference(cnf_transformation,[],[f139])).
fof(f4707,plain,(
  $false | $spl18),
  inference(subsumption_resolution,[],[f425,f228])).
fof(f228,plain,(
  ( ! [X21] : (s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(sK12)),sK13) != s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(sK12)),'const.pair.,_2'(s('type.bvp.prog','const.bvp.Tick_0'),s('type.bvpSem.state'(sK12),X21)))) )),
  inference(cnf_transformation,[],[f139])).
fof(f4708,plain,(
  $false | $spl8),
  inference(subsumption_resolution,[],[f415,f232])).
fof(f232,plain,(
  ( ! [X12,X13,X11] : (s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(sK12)),sK13) != s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(sK12)),'const.pair.,_2'(s('type.bvp.prog','const.bvp.Seq_2'(s('type.bvp.prog',X11),s('type.bvp.prog',X12))),s('type.bvpSem.state'(sK12),X13)))) )),
  inference(cnf_transformation,[],[f139])).
fof(f4709,plain,(
  $false | $spl2),
  inference(subsumption_resolution,[],[f409,f226])).
fof(f226,plain,(
  ( ! [X28,X29,X27] : (s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(sK12)),sK13) != s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(sK12)),'const.pair.,_2'(s('type.bvp.prog','const.bvp.Move_2'(s('type.num.num',X27),s('type.num.num',X28))),s('type.bvpSem.state'(sK12),X29)))) )),
  inference(cnf_transformation,[],[f139])).
fof(f4710,plain,(
  $false | $spl6),
  inference(subsumption_resolution,[],[f413,f227])).
fof(f227,plain,(
  ( ! [X26,X24,X23,X25,X22] : (s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(sK12)),sK13) != s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(sK12)),'const.pair.,_2'(s('type.bvp.prog','const.bvp.Assign_4'(s('type.num.num',X22),s('type.closLang.op',X23),s('type.list.list'('type.num.num'),X24),s('type.option.option'('type.sptree.spt'('type.one.one')),X25))),s('type.bvpSem.state'(sK12),X26)))) )),
  inference(cnf_transformation,[],[f139])).
fof(f4711,plain,(
  $false | $spl16),
  inference(subsumption_resolution,[],[f423,f231])).
fof(f231,plain,(
  ( ! [X14,X15] : (s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(sK12)),sK13) != s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(sK12)),'const.pair.,_2'(s('type.bvp.prog','const.bvp.Return_1'(s('type.num.num',X14))),s('type.bvpSem.state'(sK12),X15)))) )),
  inference(cnf_transformation,[],[f139])).
fof(f4712,plain,(
  $false | $spl14),
  inference(subsumption_resolution,[],[f421,f230])).
fof(f230,plain,(
  ( ! [X17,X16] : (s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(sK12)),sK13) != s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(sK12)),'const.pair.,_2'(s('type.bvp.prog','const.bvp.Raise_1'(s('type.num.num',X16))),s('type.bvpSem.state'(sK12),X17)))) )),
  inference(cnf_transformation,[],[f139])).
fof(f407,plain,(
  s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(sK12)),sK13) = s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(sK12)),'const.pair.,_2'(s('type.bvp.prog','const.bvp.Skip_0'),s('type.bvpSem.state'(sK12),sK14))) | $spl0),
  inference(cnf_transformation,[],[f407_D])).
fof(f407_D,plain,(
  s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(sK12)),sK13) = s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(sK12)),'const.pair.,_2'(s('type.bvp.prog','const.bvp.Skip_0'),s('type.bvpSem.state'(sK12),sK14))) <=> ~$spl0),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl0])])).
fof(f409,plain,(
  s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(sK12)),sK13) = s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(sK12)),'const.pair.,_2'(s('type.bvp.prog','const.bvp.Move_2'(s('type.num.num',sK15),s('type.num.num',sK16))),s('type.bvpSem.state'(sK12),sK17))) | $spl2),
  inference(cnf_transformation,[],[f409_D])).
fof(f409_D,plain,(
  s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(sK12)),sK13) = s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(sK12)),'const.pair.,_2'(s('type.bvp.prog','const.bvp.Move_2'(s('type.num.num',sK15),s('type.num.num',sK16))),s('type.bvpSem.state'(sK12),sK17))) <=> ~$spl2),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl2])])).
fof(f411,plain,(
  s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(sK12)),sK13) = s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(sK12)),'const.pair.,_2'(s('type.bvp.prog','const.bvp.Call_4'(s('type.option.option'('type.pair.prod'('type.num.num','type.sptree.spt'('type.one.one'))),sK18),s('type.option.option'('type.num.num'),sK19),s('type.list.list'('type.num.num'),sK20),s('type.option.option'('type.pair.prod'('type.num.num','type.bvp.prog')),sK21))),s('type.bvpSem.state'(sK12),sK22))) | $spl4),
  inference(cnf_transformation,[],[f411_D])).
fof(f411_D,plain,(
  s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(sK12)),sK13) = s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(sK12)),'const.pair.,_2'(s('type.bvp.prog','const.bvp.Call_4'(s('type.option.option'('type.pair.prod'('type.num.num','type.sptree.spt'('type.one.one'))),sK18),s('type.option.option'('type.num.num'),sK19),s('type.list.list'('type.num.num'),sK20),s('type.option.option'('type.pair.prod'('type.num.num','type.bvp.prog')),sK21))),s('type.bvpSem.state'(sK12),sK22))) <=> ~$spl4),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl4])])).
fof(f413,plain,(
  s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(sK12)),sK13) = s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(sK12)),'const.pair.,_2'(s('type.bvp.prog','const.bvp.Assign_4'(s('type.num.num',sK23),s('type.closLang.op',sK24),s('type.list.list'('type.num.num'),sK25),s('type.option.option'('type.sptree.spt'('type.one.one')),sK26))),s('type.bvpSem.state'(sK12),sK27))) | $spl6),
  inference(cnf_transformation,[],[f413_D])).
fof(f413_D,plain,(
  s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(sK12)),sK13) = s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(sK12)),'const.pair.,_2'(s('type.bvp.prog','const.bvp.Assign_4'(s('type.num.num',sK23),s('type.closLang.op',sK24),s('type.list.list'('type.num.num'),sK25),s('type.option.option'('type.sptree.spt'('type.one.one')),sK26))),s('type.bvpSem.state'(sK12),sK27))) <=> ~$spl6),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl6])])).
fof(f415,plain,(
  s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(sK12)),sK13) = s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(sK12)),'const.pair.,_2'(s('type.bvp.prog','const.bvp.Seq_2'(s('type.bvp.prog',sK28),s('type.bvp.prog',sK29))),s('type.bvpSem.state'(sK12),sK30))) | $spl8),
  inference(cnf_transformation,[],[f415_D])).
fof(f415_D,plain,(
  s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(sK12)),sK13) = s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(sK12)),'const.pair.,_2'(s('type.bvp.prog','const.bvp.Seq_2'(s('type.bvp.prog',sK28),s('type.bvp.prog',sK29))),s('type.bvpSem.state'(sK12),sK30))) <=> ~$spl8),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl8])])).
fof(f417,plain,(
  s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(sK12)),sK13) = s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(sK12)),'const.pair.,_2'(s('type.bvp.prog','const.bvp.If_3'(s('type.num.num',sK31),s('type.bvp.prog',sK32),s('type.bvp.prog',sK33))),s('type.bvpSem.state'(sK12),sK34))) | $spl10),
  inference(cnf_transformation,[],[f417_D])).
fof(f417_D,plain,(
  s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(sK12)),sK13) = s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(sK12)),'const.pair.,_2'(s('type.bvp.prog','const.bvp.If_3'(s('type.num.num',sK31),s('type.bvp.prog',sK32),s('type.bvp.prog',sK33))),s('type.bvpSem.state'(sK12),sK34))) <=> ~$spl10),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl10])])).
fof(f419,plain,(
  s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(sK12)),sK13) = s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(sK12)),'const.pair.,_2'(s('type.bvp.prog','const.bvp.MakeSpace_2'(s('type.num.num',sK35),s('type.sptree.spt'('type.one.one'),sK36))),s('type.bvpSem.state'(sK12),sK37))) | $spl12),
  inference(cnf_transformation,[],[f419_D])).
fof(f419_D,plain,(
  s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(sK12)),sK13) = s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(sK12)),'const.pair.,_2'(s('type.bvp.prog','const.bvp.MakeSpace_2'(s('type.num.num',sK35),s('type.sptree.spt'('type.one.one'),sK36))),s('type.bvpSem.state'(sK12),sK37))) <=> ~$spl12),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl12])])).
fof(f421,plain,(
  s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(sK12)),sK13) = s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(sK12)),'const.pair.,_2'(s('type.bvp.prog','const.bvp.Raise_1'(s('type.num.num',sK38))),s('type.bvpSem.state'(sK12),sK39))) | $spl14),
  inference(cnf_transformation,[],[f421_D])).
fof(f421_D,plain,(
  s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(sK12)),sK13) = s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(sK12)),'const.pair.,_2'(s('type.bvp.prog','const.bvp.Raise_1'(s('type.num.num',sK38))),s('type.bvpSem.state'(sK12),sK39))) <=> ~$spl14),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl14])])).
fof(f423,plain,(
  s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(sK12)),sK13) = s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(sK12)),'const.pair.,_2'(s('type.bvp.prog','const.bvp.Return_1'(s('type.num.num',sK40))),s('type.bvpSem.state'(sK12),sK41))) | $spl16),
  inference(cnf_transformation,[],[f423_D])).
fof(f423_D,plain,(
  s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(sK12)),sK13) = s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(sK12)),'const.pair.,_2'(s('type.bvp.prog','const.bvp.Return_1'(s('type.num.num',sK40))),s('type.bvpSem.state'(sK12),sK41))) <=> ~$spl16),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl16])])).
fof(f425,plain,(
  s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(sK12)),sK13) = s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(sK12)),'const.pair.,_2'(s('type.bvp.prog','const.bvp.Tick_0'),s('type.bvpSem.state'(sK12),sK42))) | $spl18),
  inference(cnf_transformation,[],[f425_D])).
fof(f425_D,plain,(
  s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(sK12)),sK13) = s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(sK12)),'const.pair.,_2'(s('type.bvp.prog','const.bvp.Tick_0'),s('type.bvpSem.state'(sK12),sK42))) <=> ~$spl18),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl18])])).
fof(f224,plain,(
  s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(sK12)),sK13) = s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(sK12)),'const.pair.,_2'(s('type.bvp.prog','const.bvp.Tick_0'),s('type.bvpSem.state'(sK12),sK42))) | s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(sK12)),sK13) = s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(sK12)),'const.pair.,_2'(s('type.bvp.prog','const.bvp.Return_1'(s('type.num.num',sK40))),s('type.bvpSem.state'(sK12),sK41))) | s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(sK12)),sK13) = s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(sK12)),'const.pair.,_2'(s('type.bvp.prog','const.bvp.Raise_1'(s('type.num.num',sK38))),s('type.bvpSem.state'(sK12),sK39))) | s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(sK12)),sK13) = s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(sK12)),'const.pair.,_2'(s('type.bvp.prog','const.bvp.MakeSpace_2'(s('type.num.num',sK35),s('type.sptree.spt'('type.one.one'),sK36))),s('type.bvpSem.state'(sK12),sK37))) | s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(sK12)),sK13) = s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(sK12)),'const.pair.,_2'(s('type.bvp.prog','const.bvp.If_3'(s('type.num.num',sK31),s('type.bvp.prog',sK32),s('type.bvp.prog',sK33))),s('type.bvpSem.state'(sK12),sK34))) | s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(sK12)),sK13) = s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(sK12)),'const.pair.,_2'(s('type.bvp.prog','const.bvp.Seq_2'(s('type.bvp.prog',sK28),s('type.bvp.prog',sK29))),s('type.bvpSem.state'(sK12),sK30))) | s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(sK12)),sK13) = s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(sK12)),'const.pair.,_2'(s('type.bvp.prog','const.bvp.Assign_4'(s('type.num.num',sK23),s('type.closLang.op',sK24),s('type.list.list'('type.num.num'),sK25),s('type.option.option'('type.sptree.spt'('type.one.one')),sK26))),s('type.bvpSem.state'(sK12),sK27))) | s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(sK12)),sK13) = s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(sK12)),'const.pair.,_2'(s('type.bvp.prog','const.bvp.Call_4'(s('type.option.option'('type.pair.prod'('type.num.num','type.sptree.spt'('type.one.one'))),sK18),s('type.option.option'('type.num.num'),sK19),s('type.list.list'('type.num.num'),sK20),s('type.option.option'('type.pair.prod'('type.num.num','type.bvp.prog')),sK21))),s('type.bvpSem.state'(sK12),sK22))) | s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(sK12)),sK13) = s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(sK12)),'const.pair.,_2'(s('type.bvp.prog','const.bvp.Move_2'(s('type.num.num',sK15),s('type.num.num',sK16))),s('type.bvpSem.state'(sK12),sK17))) | s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(sK12)),sK13) = s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(sK12)),'const.pair.,_2'(s('type.bvp.prog','const.bvp.Skip_0'),s('type.bvpSem.state'(sK12),sK14)))),
  inference(cnf_transformation,[],[f139])).
fof(f4714,plain,(
  $false | $spl10),
  inference(subsumption_resolution,[],[f417,f233])).
fof(f233,plain,(
  ( ! [X10,X8,X7,X9] : (s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(sK12)),sK13) != s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(sK12)),'const.pair.,_2'(s('type.bvp.prog','const.bvp.If_3'(s('type.num.num',X7),s('type.bvp.prog',X8),s('type.bvp.prog',X9))),s('type.bvpSem.state'(sK12),X10)))) )),
  inference(cnf_transformation,[],[f139])).
% SZS output end Proof for thm.bvpSem
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 382
% Passive clauses: 1467
% Generated clauses: 4484
% Final active clauses: 382
% Final passive clauses: 897
% Input formulas: 37
% Initial clauses: 178
% 
% Duplicate literals: 153
% Trivial inequalities: 29
% Fw subsumption resolutions: 303
% 
% Simple tautologies: 145
% Equational tautologies: 30
% Forward subsumptions: 2346
% 
% Binary resolution: 2743
% Factoring: 777
% Forward superposition: 162
% Backward superposition: 59
% Self superposition: 2
% Equality factoring: 2
% Equality resolution: 16
% 
% Split clauses: 106
% Split components: 221
% SAT solver clauses: 209
% SAT solver unit clauses: 16
% SAT solver binary clauses: 45
% SAT solver learnt clauses: 1
% 
% Sat splits: 106
% Sat splitting refutations: 10
% 
% TWLsolver clauses: 208
% TWLsolver calls for satisfiability: 177
% 
% Memory used [KB]: 2430
% Time elapsed: 0.166 s
% ------------------------------
% ------------------------------
% Success in time 0.17 s
