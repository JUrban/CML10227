Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 149 next slice time: 5
dis+11_7_3 on thm.inferProps
% (30685)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 147
% Passive clauses: 2037
% Generated clauses: 18030
% Final active clauses: 135
% Final passive clauses: 1639
% Input formulas: 44
% Initial clauses: 82
% 
% Duplicate literals: 1069
% Trivial inequalities: 37
% Fw subsumption resolutions: 1475
% Fw demodulations: 2918
% Bw demodulations: 7
% 
% Simple tautologies: 151
% Equational tautologies: 25
% Forward subsumptions: 9667
% Bw demodulations to eq. taut.: 2
% 
% Binary resolution: 26
% Forward superposition: 7310
% Backward superposition: 4739
% Self superposition: 173
% Equality factoring: 58
% Equality resolution: 7
% 
% Split clauses: 367
% Split components: 747
% SAT solver clauses: 636
% SAT solver unit clauses: 1
% SAT solver binary clauses: 28
% 
% Sat splits: 367
% Sat splitting refutations: 1
% 
% TWLsolver clauses: 633
% TWLsolver calls for satisfiability: 74
% 
% Memory used [KB]: 13688
% Time elapsed: 0.600 s
% ------------------------------
% ------------------------------
% remaining time: 143 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.inferProps
% (30721)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 91
% Passive clauses: 818
% Generated clauses: 7321
% Final active clauses: 88
% Final passive clauses: 704
% Input formulas: 44
% Initial clauses: 82
% 
% Duplicate literals: 215
% Trivial inequalities: 10
% Fw subsumption resolutions: 116
% Fw demodulations: 523
% Bw demodulations: 24
% Condensations: 440
% Global subsumptions: 7
% 
% Simple tautologies: 33
% Equational tautologies: 17
% Forward subsumptions: 3849
% 
% Binary resolution: 5
% Forward superposition: 3840
% Backward superposition: 1091
% Self superposition: 91
% Equality factoring: 32
% Equality resolution: 5
% 
% Split clauses: 27
% Split components: 62
% SAT solver clauses: 1324
% SAT solver unit clauses: 123
% SAT solver binary clauses: 59
% SAT solver learnt clauses: 14
% SAT solver learnt literals: 10
% 
% Sat splits: 27
% Sat splitting refutations: 10
% 
% TWLsolver clauses: 1296
% TWLsolver calls for satisfiability: 670
% 
% Memory used [KB]: 15095
% Time elapsed: 0.700 s
% ------------------------------
% ------------------------------
% remaining time: 136 next slice time: 103
lrs+11_2_br=off:cond=on:fde=none:gs=on:gsaa=full_model:lwlo=on:nwc=2:sas=minisat:stl=30:ssfp=100000:ssfq=1.4:smm=sco:ssnc=none:sp=occurrence:urr=on_98 on thm.inferProps
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.inferProps
% SZS output start Proof for thm.inferProps
fof(f53982,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f162,f249,f247,f245,f243,f241,f161,f248,f160,f246,f159,f244,f158,f242,f240,f277,f280,f278,f1034,f1035,f1051,f1036,f1037,f1052,f1038,f1053,f3533,f3534,f3535,f3536,f3537,f3555,f3556,f3557,f3558,f3559,f3563,f3565,f3567,f3568,f3569,f3570,f3571,f3572,f3612,f3661,f3614,f3662,f3616,f3617,f3618,f3619,f3620,f3664,f3660,f3621,f3663,f3659,f3716,f3730,f3717,f3718,f3731,f3719,f3734,f3732,f8797,f8798,f8799,f8800,f8801,f8802,f8803,f8804,f8805,f8806,f8807,f8808,f8809,f8810,f8811,f8812,f8813,f8814,f8815,f8816,f8817,f8818,f8819,f8820,f8821,f8822,f8823,f8824,f8825,f8826,f8827,f8828,f8829,f8830,f8831,f8832,f8833,f8834,f8835,f8836,f8837,f8838,f8839,f8840,f8841,f8842,f8846,f8851,f27475,f27466,f27485,f27456,f27451,f27442,f27483,f27441,f27490,f27491,f27492,f27486,f27426,f27495,f8847,f27421,f27496,f27420,f27497,f27419,f27498,f27417,f27499,f27416,f27500,f27415,f27501,f27414,f27502,f27413,f27503,f27793,f27794,f27795,f27796,f27797,f29742,f29737,f29744,f30890,f29743,f32808,f32793,f32780,f27489,f38466,f38474,f38475,f38477,f38478,f38479,f38516,f43056,f43057,f48688,f48694,f42959,f48696,f42767,f48697,f42656,f48698,f1050,f48699,f48700,f8850,f8845,f48701,f53814,f53808,f53801,f53834,f53836,f53835,f53794,f53856,f53820,f8848,f53973])).
fof(f53973,plain,(
  $false | ($spl1 | $spl2 | $spl6 | $spl8)),
  inference(subsumption_resolution,[],[f53972,f163])).
fof(f163,plain,(
  p(s(bool,'T_0'))),
  inference(cnf_transformation,[],[f1])).
fof(f1,axiom,(
  p(s(bool,'T_0'))),
  file('thm.inferProps.success_eqns|split|8',aHL_TRUTH)).
fof(f53972,plain,(
  ~p(s(bool,'T_0')) | ($spl1 | $spl2 | $spl6 | $spl8)),
  inference(forward_demodulation,[],[f53956,f40273])).
fof(f40273,plain,(
  s(bool,'T_0') = s(bool,'const.infer.pure_add_constraints_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),'const.list.ZIP_1'(s('type.pair.prod'('type.list.list'('type.infer_t.infer_t'),'type.list.list'('type.infer_t.infer_t')),'const.pair.,_2'(s('type.list.list'('type.infer_t.infer_t'),sK0),s('type.list.list'('type.infer_t.infer_t'),sK1))))),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK3))))) | $spl8),
  inference(unit_resulting_resolution,[],[f248,f274])).
fof(f274,plain,(
  ( ! [X0] : (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f164,f167])).
fof(f167,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f3])).
fof(f3,axiom,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) | s(bool,'F_0') = s(bool,X0))),
  file('thm.inferProps.success_eqns|split|8',aHL_BOOL_CASES)).
fof(f164,plain,(
  ~p(s(bool,'F_0'))),
  inference(cnf_transformation,[],[f47])).
fof(f47,plain,(
  ~p(s(bool,'F_0'))),
  inference(flattening,[],[f2])).
fof(f2,axiom,(
  ~p(s(bool,'F_0'))),
  file('thm.inferProps.success_eqns|split|8',aHL_FALSITY)).
fof(f53956,plain,(
  ~p(s(bool,'const.infer.pure_add_constraints_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),'const.list.ZIP_1'(s('type.pair.prod'('type.list.list'('type.infer_t.infer_t'),'type.list.list'('type.infer_t.infer_t')),'const.pair.,_2'(s('type.list.list'('type.infer_t.infer_t'),sK0),s('type.list.list'('type.infer_t.infer_t'),sK1))))),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK3)))))) | ($spl1 | $spl2 | $spl6)),
  inference(unit_resulting_resolution,[],[f242,f246,f38517,f256])).
fof(f256,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X2))) != s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X3))) | ~p(s(bool,'const.infer.pure_add_constraints_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X2))),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),'const.list.ZIP_1'(s('type.pair.prod'('type.list.list'('type.infer_t.infer_t'),'type.list.list'('type.infer_t.infer_t')),'const.pair.,_2'(s('type.list.list'('type.infer_t.infer_t'),X0),s('type.list.list'('type.infer_t.infer_t'),X1))))),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X3)))))) | s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraints_3'(s('type.list.list'('type.infer_t.infer_t'),X0),s('type.list.list'('type.infer_t.infer_t'),X1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X2))) = s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'const.infer.Success_1'(s('type.one.one',X4))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X3))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.infer_t.infer_t'),X0))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.infer_t.infer_t'),X1)))) )),
  inference(subsumption_resolution,[],[f233,f165])).
fof(f165,plain,(
  ( ! [X0] : (s('type.one.one','const.one.one_0') = s('type.one.one',X0)) )),
  inference(cnf_transformation,[],[f48])).
fof(f48,plain,(
  ! [X0] : s('type.one.one','const.one.one_0') = s('type.one.one',X0)),
  inference(rectify,[],[f23])).
fof(f23,axiom,(
  ! [X15] : s('type.one.one','const.one.one_0') = s('type.one.one',X15)),
  file('thm.inferProps.success_eqns|split|8','thm.one.one')).
fof(f233,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraints_3'(s('type.list.list'('type.infer_t.infer_t'),X0),s('type.list.list'('type.infer_t.infer_t'),X1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X2))) = s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'const.infer.Success_1'(s('type.one.one',X4))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X3))) | ~p(s(bool,'const.infer.pure_add_constraints_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X2))),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),'const.list.ZIP_1'(s('type.pair.prod'('type.list.list'('type.infer_t.infer_t'),'type.list.list'('type.infer_t.infer_t')),'const.pair.,_2'(s('type.list.list'('type.infer_t.infer_t'),X0),s('type.list.list'('type.infer_t.infer_t'),X1))))),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X3)))))) | s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X2))) != s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X3))) | s('type.one.one','const.one.one_0') != s('type.one.one',X4) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.infer_t.infer_t'),X0))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.infer_t.infer_t'),X1)))) )),
  inference(cnf_transformation,[],[f153])).
fof(f153,plain,(
  ! [X0,X1,X2,X3,X4] : ((s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraints_3'(s('type.list.list'('type.infer_t.infer_t'),X0),s('type.list.list'('type.infer_t.infer_t'),X1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X2))) != s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'const.infer.Success_1'(s('type.one.one',X4))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X3))) | (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.infer_t.infer_t'),X0))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.infer_t.infer_t'),X1))) & s('type.one.one','const.one.one_0') = s('type.one.one',X4) & s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X2))) = s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X3))) & p(s(bool,'const.infer.pure_add_constraints_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X2))),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),'const.list.ZIP_1'(s('type.pair.prod'('type.list.list'('type.infer_t.infer_t'),'type.list.list'('type.infer_t.infer_t')),'const.pair.,_2'(s('type.list.list'('type.infer_t.infer_t'),X0),s('type.list.list'('type.infer_t.infer_t'),X1))))),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X3)))))))) & (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.infer_t.infer_t'),X0))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.infer_t.infer_t'),X1))) | s('type.one.one','const.one.one_0') != s('type.one.one',X4) | s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X2))) != s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X3))) | ~p(s(bool,'const.infer.pure_add_constraints_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X2))),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),'const.list.ZIP_1'(s('type.pair.prod'('type.list.list'('type.infer_t.infer_t'),'type.list.list'('type.infer_t.infer_t')),'const.pair.,_2'(s('type.list.list'('type.infer_t.infer_t'),X0),s('type.list.list'('type.infer_t.infer_t'),X1))))),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X3)))))) | s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraints_3'(s('type.list.list'('type.infer_t.infer_t'),X0),s('type.list.list'('type.infer_t.infer_t'),X1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X2))) = s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'const.infer.Success_1'(s('type.one.one',X4))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X3)))))),
  inference(flattening,[],[f152])).
fof(f152,plain,(
  ! [X0,X1,X2,X3,X4] : ((s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraints_3'(s('type.list.list'('type.infer_t.infer_t'),X0),s('type.list.list'('type.infer_t.infer_t'),X1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X2))) != s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'const.infer.Success_1'(s('type.one.one',X4))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X3))) | (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.infer_t.infer_t'),X0))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.infer_t.infer_t'),X1))) & s('type.one.one','const.one.one_0') = s('type.one.one',X4) & s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X2))) = s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X3))) & p(s(bool,'const.infer.pure_add_constraints_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X2))),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),'const.list.ZIP_1'(s('type.pair.prod'('type.list.list'('type.infer_t.infer_t'),'type.list.list'('type.infer_t.infer_t')),'const.pair.,_2'(s('type.list.list'('type.infer_t.infer_t'),X0),s('type.list.list'('type.infer_t.infer_t'),X1))))),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X3)))))))) & ((s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.infer_t.infer_t'),X0))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.infer_t.infer_t'),X1))) | s('type.one.one','const.one.one_0') != s('type.one.one',X4) | s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X2))) != s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X3))) | ~p(s(bool,'const.infer.pure_add_constraints_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X2))),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),'const.list.ZIP_1'(s('type.pair.prod'('type.list.list'('type.infer_t.infer_t'),'type.list.list'('type.infer_t.infer_t')),'const.pair.,_2'(s('type.list.list'('type.infer_t.infer_t'),X0),s('type.list.list'('type.infer_t.infer_t'),X1))))),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X3))))))) | s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraints_3'(s('type.list.list'('type.infer_t.infer_t'),X0),s('type.list.list'('type.infer_t.infer_t'),X1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X2))) = s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'const.infer.Success_1'(s('type.one.one',X4))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X3)))))),
  inference(nnf_transformation,[],[f117])).
fof(f117,plain,(
  ! [X0,X1,X2,X3,X4] : (s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraints_3'(s('type.list.list'('type.infer_t.infer_t'),X0),s('type.list.list'('type.infer_t.infer_t'),X1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X2))) = s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'const.infer.Success_1'(s('type.one.one',X4))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X3))) <=> (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.infer_t.infer_t'),X0))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.infer_t.infer_t'),X1))) & s('type.one.one','const.one.one_0') = s('type.one.one',X4) & s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X2))) = s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X3))) & p(s(bool,'const.infer.pure_add_constraints_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X2))),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),'const.list.ZIP_1'(s('type.pair.prod'('type.list.list'('type.infer_t.infer_t'),'type.list.list'('type.infer_t.infer_t')),'const.pair.,_2'(s('type.list.list'('type.infer_t.infer_t'),X0),s('type.list.list'('type.infer_t.infer_t'),X1))))),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X3))))))))),
  inference(rectify,[],[f15])).
fof(f15,axiom,(
  ! [X6,X7,X16,X18,X10] : (s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraints_3'(s('type.list.list'('type.infer_t.infer_t'),X6),s('type.list.list'('type.infer_t.infer_t'),X7),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X16))) = s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'const.infer.Success_1'(s('type.one.one',X10))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X18))) <=> (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.infer_t.infer_t'),X6))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.infer_t.infer_t'),X7))) & s('type.one.one','const.one.one_0') = s('type.one.one',X10) & s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X16))) = s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X18))) & p(s(bool,'const.infer.pure_add_constraints_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X16))),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),'const.list.ZIP_1'(s('type.pair.prod'('type.list.list'('type.infer_t.infer_t'),'type.list.list'('type.infer_t.infer_t')),'const.pair.,_2'(s('type.list.list'('type.infer_t.infer_t'),X6),s('type.list.list'('type.infer_t.infer_t'),X7))))),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X18))))))))),
  file('thm.inferProps.success_eqns|split|8','thm.inferProps.inferProps_3|48|_prove_ltb')).
fof(f38517,plain,(
  s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraints_3'(s('type.list.list'('type.infer_t.infer_t'),sK0),s('type.list.list'('type.infer_t.infer_t'),sK1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))) != s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'const.infer.Success_1'(s('type.one.one','const.one.one_0'))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK3))) | $spl1),
  inference(forward_demodulation,[],[f241,f165])).
fof(f8848,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,X0)) ) | $spl44),
  inference(cnf_transformation,[],[f8848_D])).
fof(f8848_D,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,X0)) ) <=> ~$spl44),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl44])])).
fof(f53820,plain,(
  ( ! [X21,X19,X20] : (s(bool,X19) = s(bool,g(s('type.one.one',X20))) | s('type.pair.prod'('type.infer.exc'(bool,X21),bool),'const.infer.read_1'(s(bool,X19))) = s('type.pair.prod'('type.infer.exc'(bool,X21),bool),'const.infer.st_ex_return_2'(s(bool,X19),s(bool,X19)))) ) | $spl88),
  inference(cnf_transformation,[],[f53820_D])).
fof(f53820_D,plain,(
  ( ! [X21,X19,X20] : (s(bool,X19) = s(bool,g(s('type.one.one',X20))) | s('type.pair.prod'('type.infer.exc'(bool,X21),bool),'const.infer.read_1'(s(bool,X19))) = s('type.pair.prod'('type.infer.exc'(bool,X21),bool),'const.infer.st_ex_return_2'(s(bool,X19),s(bool,X19)))) ) <=> ~$spl88),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl88])])).
fof(f53856,plain,(
  ( ! [X94,X95,X93,X96] : (s('type.pair.prod'('type.infer.exc'(bool,X95),bool),'const.infer.read_1'(s(bool,X96))) = s('type.pair.prod'('type.infer.exc'(bool,X95),bool),'const.infer.st_ex_return_2'(s(bool,X96),s(bool,X96))) | s(bool,X96) = s(bool,g(s('type.one.one',X93))) | s(bool,'T_0') = s(bool,X94)) ) | ($spl13 | $spl16 | $spl36 | $spl54)),
  inference(subsumption_resolution,[],[f53751,f274])).
fof(f53751,plain,(
  ( ! [X94,X95,X93,X96] : (p(s(bool,X94)) | s('type.pair.prod'('type.infer.exc'(bool,X95),bool),'const.infer.read_1'(s(bool,X96))) = s('type.pair.prod'('type.infer.exc'(bool,X95),bool),'const.infer.st_ex_return_2'(s(bool,X96),s(bool,X96))) | s(bool,X96) = s(bool,g(s('type.one.one',X93))) | s(bool,'T_0') = s(bool,X94)) ) | ($spl13 | $spl16 | $spl36 | $spl54)),
  inference(superposition,[],[f42776,f48765])).
fof(f48765,plain,(
  ( ! [X0,X3] : (s(bool,X3) = s(bool,g(s('type.one.one',X0))) | s(bool,'T_0') = s(bool,X3)) ) | ($spl13 | $spl16 | $spl36)),
  inference(trivial_inequality_removal,[],[f48753])).
fof(f48753,plain,(
  ( ! [X0,X3] : (s(bool,'T_0') != s(bool,'T_0') | s(bool,'T_0') = s(bool,X3) | s(bool,X3) = s(bool,g(s('type.one.one',X0)))) ) | ($spl13 | $spl16 | $spl36)),
  inference(backward_demodulation,[],[f48725,f1051])).
fof(f48725,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,f(s('type.one.one',X0)))) ) | ($spl13 | $spl36)),
  inference(unit_resulting_resolution,[],[f280,f3731,f272])).
fof(f272,plain,(
  ( ! [X0,X1] : (s(bool,X0) = s(bool,X1) | s(bool,'T_0') = s(bool,X1) | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f167,f167])).
fof(f42776,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,X0)) | s('type.pair.prod'('type.infer.exc'(bool,X1),bool),'const.infer.read_1'(s(bool,X2))) = s('type.pair.prod'('type.infer.exc'(bool,X1),bool),'const.infer.st_ex_return_2'(s(bool,X2),s(bool,X2))) | s(bool,X0) = s(bool,X2)) ) | $spl54),
  inference(superposition,[],[f163,f40176])).
fof(f40176,plain,(
  ( ! [X4,X2,X3] : (s('type.pair.prod'('type.infer.exc'(bool,X3),bool),'const.infer.read_1'(s(bool,X2))) = s('type.pair.prod'('type.infer.exc'(bool,X3),bool),'const.infer.st_ex_return_2'(s(bool,X2),s(bool,X2))) | s(bool,X2) = s(bool,X4) | s(bool,'T_0') = s(bool,X4)) ) | $spl54),
  inference(subsumption_resolution,[],[f40162,f163])).
fof(f40162,plain,(
  ( ! [X4,X2,X3] : (~p(s(bool,'T_0')) | s('type.pair.prod'('type.infer.exc'(bool,X3),bool),'const.infer.read_1'(s(bool,X2))) = s('type.pair.prod'('type.infer.exc'(bool,X3),bool),'const.infer.st_ex_return_2'(s(bool,X2),s(bool,X2))) | s(bool,X2) = s(bool,X4) | s(bool,'T_0') = s(bool,X4)) ) | $spl54),
  inference(superposition,[],[f27496,f272])).
fof(f53794,plain,(
  ( ! [X70,X72,X71,X73] : (s(bool,'T_0') = s(bool,X71) | s('type.pair.prod'('type.infer.exc'(bool,X72),bool),'const.infer.read_1'(s(bool,X73))) = s('type.pair.prod'('type.infer.exc'(bool,X72),bool),'const.infer.st_ex_return_2'(s(bool,X73),s(bool,X73))) | s(bool,X73) = s(bool,g(s('type.one.one',X70)))) ) | ($spl13 | $spl16 | $spl36 | $spl54)),
  inference(duplicate_literal_removal,[],[f53745])).
fof(f53745,plain,(
  ( ! [X70,X72,X71,X73] : (s(bool,'T_0') = s(bool,X71) | s('type.pair.prod'('type.infer.exc'(bool,X72),bool),'const.infer.read_1'(s(bool,X73))) = s('type.pair.prod'('type.infer.exc'(bool,X72),bool),'const.infer.st_ex_return_2'(s(bool,X73),s(bool,X73))) | s(bool,X73) = s(bool,g(s('type.one.one',X70))) | s(bool,'T_0') = s(bool,X71)) ) | ($spl13 | $spl16 | $spl36 | $spl54)),
  inference(superposition,[],[f40176,f48765])).
fof(f53835,plain,(
  ( ! [X99,X97] : (s('type.pair.prod'('type.infer.exc'(bool,X99),bool),'const.infer.read_1'(s(bool,X97))) = s('type.pair.prod'('type.infer.exc'(bool,X99),bool),'const.infer.st_ex_return_2'(s(bool,X97),s(bool,X97)))) ) | $spl90),
  inference(cnf_transformation,[],[f53835_D])).
fof(f53835_D,plain,(
  ( ! [X99,X97] : (s('type.pair.prod'('type.infer.exc'(bool,X99),bool),'const.infer.read_1'(s(bool,X97))) = s('type.pair.prod'('type.infer.exc'(bool,X99),bool),'const.infer.st_ex_return_2'(s(bool,X97),s(bool,X97)))) ) <=> ~$spl90),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl90])])).
fof(f53836,plain,(
  ( ! [X98] : (s(bool,'T_0') != s(bool,g(s('type.one.one',X98)))) ) | $spl92),
  inference(cnf_transformation,[],[f53836_D])).
fof(f53836_D,plain,(
  ( ! [X98] : (s(bool,'T_0') != s(bool,g(s('type.one.one',X98)))) ) <=> ~$spl92),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl92])])).
fof(f53834,plain,(
  ( ! [X99,X97,X98] : (s(bool,'T_0') != s(bool,g(s('type.one.one',X98))) | s('type.pair.prod'('type.infer.exc'(bool,X99),bool),'const.infer.read_1'(s(bool,X97))) = s('type.pair.prod'('type.infer.exc'(bool,X99),bool),'const.infer.st_ex_return_2'(s(bool,X97),s(bool,X97)))) ) | ($spl13 | $spl16 | $spl36 | $spl54)),
  inference(subsumption_resolution,[],[f53680,f43062])).
fof(f43062,plain,(
  ( ! [X118,X119] : (s(bool,'T_0') != s(bool,X118) | s('type.pair.prod'('type.infer.exc'(bool,X119),bool),'const.infer.read_1'(s(bool,X118))) = s('type.pair.prod'('type.infer.exc'(bool,X119),bool),'const.infer.st_ex_return_2'(s(bool,X118),s(bool,X118)))) ) | ($spl13 | $spl54)),
  inference(subsumption_resolution,[],[f42690,f280])).
fof(f42690,plain,(
  ( ! [X118,X119] : (s(bool,'T_0') != s(bool,X118) | s('type.pair.prod'('type.infer.exc'(bool,X119),bool),'const.infer.read_1'(s(bool,X118))) = s('type.pair.prod'('type.infer.exc'(bool,X119),bool),'const.infer.st_ex_return_2'(s(bool,X118),s(bool,X118))) | s(bool,'T_0') = s(bool,'F_0')) ) | ($spl13 | $spl54)),
  inference(superposition,[],[f280,f40176])).
fof(f53680,plain,(
  ( ! [X99,X97,X98] : (s(bool,'T_0') != s(bool,g(s('type.one.one',X98))) | s('type.pair.prod'('type.infer.exc'(bool,X99),bool),'const.infer.read_1'(s(bool,X97))) = s('type.pair.prod'('type.infer.exc'(bool,X99),bool),'const.infer.st_ex_return_2'(s(bool,X97),s(bool,X97))) | s(bool,'T_0') = s(bool,X97)) ) | ($spl13 | $spl16 | $spl36 | $spl54)),
  inference(superposition,[],[f43062,f48765])).
fof(f53801,plain,(
  ( ! [X68,X66,X69,X67] : (s(bool,X68) = s(bool,g(s('type.one.one',X67))) | s('type.pair.prod'('type.infer.exc'(bool,X69),bool),'const.infer.read_1'(s(bool,X68))) = s('type.pair.prod'('type.infer.exc'(bool,X69),bool),'const.infer.st_ex_return_2'(s(bool,X68),s(bool,X68))) | s(bool,'T_0') = s(bool,X66)) ) | ($spl13 | $spl16 | $spl36 | $spl54)),
  inference(duplicate_literal_removal,[],[f53672])).
fof(f53672,plain,(
  ( ! [X68,X66,X69,X67] : (s(bool,X68) = s(bool,g(s('type.one.one',X67))) | s('type.pair.prod'('type.infer.exc'(bool,X69),bool),'const.infer.read_1'(s(bool,X68))) = s('type.pair.prod'('type.infer.exc'(bool,X69),bool),'const.infer.st_ex_return_2'(s(bool,X68),s(bool,X68))) | s(bool,'T_0') = s(bool,X66) | s(bool,'T_0') = s(bool,X66)) ) | ($spl13 | $spl16 | $spl36 | $spl54)),
  inference(superposition,[],[f40176,f48765])).
fof(f53808,plain,(
  ( ! [X28,X26,X27,X25] : (s(bool,'T_0') = s(bool,X26) | s('type.pair.prod'('type.infer.exc'(bool,X27),bool),'const.infer.read_1'(s(bool,X28))) = s('type.pair.prod'('type.infer.exc'(bool,X27),bool),'const.infer.st_ex_return_2'(s(bool,X28),s(bool,X28))) | s(bool,X28) = s(bool,g(s('type.one.one',X25)))) ) | ($spl13 | $spl16 | $spl36 | $spl54)),
  inference(duplicate_literal_removal,[],[f53654])).
fof(f53654,plain,(
  ( ! [X28,X26,X27,X25] : (s(bool,'T_0') = s(bool,X26) | s(bool,'T_0') = s(bool,X26) | s('type.pair.prod'('type.infer.exc'(bool,X27),bool),'const.infer.read_1'(s(bool,X28))) = s('type.pair.prod'('type.infer.exc'(bool,X27),bool),'const.infer.st_ex_return_2'(s(bool,X28),s(bool,X28))) | s(bool,X28) = s(bool,g(s('type.one.one',X25)))) ) | ($spl13 | $spl16 | $spl36 | $spl54)),
  inference(superposition,[],[f48765,f40176])).
fof(f53814,plain,(
  ( ! [X21,X19,X20,X18] : (s(bool,X19) = s(bool,g(s('type.one.one',X20))) | s(bool,'T_0') = s(bool,X18) | s('type.pair.prod'('type.infer.exc'(bool,X21),bool),'const.infer.read_1'(s(bool,X19))) = s('type.pair.prod'('type.infer.exc'(bool,X21),bool),'const.infer.st_ex_return_2'(s(bool,X19),s(bool,X19)))) ) | ($spl13 | $spl16 | $spl36 | $spl54)),
  inference(duplicate_literal_removal,[],[f53624])).
fof(f53624,plain,(
  ( ! [X21,X19,X20,X18] : (s(bool,X19) = s(bool,g(s('type.one.one',X20))) | s(bool,'T_0') = s(bool,X18) | s('type.pair.prod'('type.infer.exc'(bool,X21),bool),'const.infer.read_1'(s(bool,X19))) = s('type.pair.prod'('type.infer.exc'(bool,X21),bool),'const.infer.st_ex_return_2'(s(bool,X19),s(bool,X19))) | s(bool,'T_0') = s(bool,X18)) ) | ($spl13 | $spl16 | $spl36 | $spl54)),
  inference(superposition,[],[f48765,f40176])).
fof(f48701,plain,(
  ( ! [X52,X50,X48,X53,X51,X49] : (s(X48,X49) != s(X48,X50) | s('type.pair.prod'('type.infer.exc'('type.one.one',X51),X48),'const.infer.guard_3'(s(bool,'T_0'),s(X51,X52),s(X48,X49))) = s('type.pair.prod'('type.infer.exc'('type.one.one',X51),X48),'const.pair.,_2'(s('type.infer.exc'('type.one.one',X51),'const.infer.Success_1'(s('type.one.one',X53))),s(X48,X50)))) ) | $spl86),
  inference(cnf_transformation,[],[f48701_D])).
fof(f48701_D,plain,(
  ( ! [X52,X50,X48,X53,X51,X49] : (s(X48,X49) != s(X48,X50) | s('type.pair.prod'('type.infer.exc'('type.one.one',X51),X48),'const.infer.guard_3'(s(bool,'T_0'),s(X51,X52),s(X48,X49))) = s('type.pair.prod'('type.infer.exc'('type.one.one',X51),X48),'const.pair.,_2'(s('type.infer.exc'('type.one.one',X51),'const.infer.Success_1'(s('type.one.one',X53))),s(X48,X50)))) ) <=> ~$spl86),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl86])])).
fof(f8845,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s(bool,'T_0') = s(bool,X0) | s(X1,X2) != s(X1,X3) | s('type.pair.prod'('type.infer.exc'('type.one.one',X4),X1),'const.infer.guard_3'(s(bool,'T_0'),s(X4,X5),s(X1,X2))) = s('type.pair.prod'('type.infer.exc'('type.one.one',X4),X1),'const.pair.,_2'(s('type.infer.exc'('type.one.one',X4),'const.infer.Success_1'(s('type.one.one',X6))),s(X1,X3)))) )),
  inference(condensation,[],[f8844])).
fof(f8844,plain,(
  ( ! [X39,X45,X43,X41,X46,X44,X42,X40] : (s(X40,X41) != s(X40,X42) | s('type.pair.prod'('type.infer.exc'('type.one.one',X43),X40),'const.infer.guard_3'(s(bool,'T_0'),s(X43,X44),s(X40,X41))) = s('type.pair.prod'('type.infer.exc'('type.one.one',X43),X40),'const.pair.,_2'(s('type.infer.exc'('type.one.one',X43),'const.infer.Success_1'(s('type.one.one',X45))),s(X40,X42))) | s(bool,X39) = s(bool,X46) | s(bool,'T_0') = s(bool,X46)) )),
  inference(subsumption_resolution,[],[f8789,f361])).
fof(f361,plain,(
  ( ! [X2,X1] : (p(s(bool,X1)) | s(bool,X1) = s(bool,X2) | s(bool,'T_0') = s(bool,X2)) )),
  inference(superposition,[],[f163,f272])).
fof(f8789,plain,(
  ( ! [X39,X45,X43,X41,X46,X44,X42,X40] : (~p(s(bool,X39)) | s(X40,X41) != s(X40,X42) | s('type.pair.prod'('type.infer.exc'('type.one.one',X43),X40),'const.infer.guard_3'(s(bool,'T_0'),s(X43,X44),s(X40,X41))) = s('type.pair.prod'('type.infer.exc'('type.one.one',X43),X40),'const.pair.,_2'(s('type.infer.exc'('type.one.one',X43),'const.infer.Success_1'(s('type.one.one',X45))),s(X40,X42))) | s(bool,X39) = s(bool,X46) | s(bool,'T_0') = s(bool,X46)) )),
  inference(superposition,[],[f252,f272])).
fof(f252,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (~p(s(bool,X2)) | s(X1,X4) != s(X1,X6) | s('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),'const.infer.guard_3'(s(bool,X2),s(X0,X3),s(X1,X4))) = s('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),'const.pair.,_2'(s('type.infer.exc'('type.one.one',X0),'const.infer.Success_1'(s('type.one.one',X5))),s(X1,X6)))) )),
  inference(subsumption_resolution,[],[f198,f165])).
fof(f198,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),'const.infer.guard_3'(s(bool,X2),s(X0,X3),s(X1,X4))) = s('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),'const.pair.,_2'(s('type.infer.exc'('type.one.one',X0),'const.infer.Success_1'(s('type.one.one',X5))),s(X1,X6))) | s(X1,X4) != s(X1,X6) | s('type.one.one','const.one.one_0') != s('type.one.one',X5) | ~p(s(bool,X2))) )),
  inference(cnf_transformation,[],[f135])).
fof(f135,plain,(
  ! [X0,X1,X2,X3,X4,X5,X6] : ((s('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),'const.infer.guard_3'(s(bool,X2),s(X0,X3),s(X1,X4))) != s('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),'const.pair.,_2'(s('type.infer.exc'('type.one.one',X0),'const.infer.Success_1'(s('type.one.one',X5))),s(X1,X6))) | (p(s(bool,X2)) & s('type.one.one','const.one.one_0') = s('type.one.one',X5) & s(X1,X4) = s(X1,X6))) & (~p(s(bool,X2)) | s('type.one.one','const.one.one_0') != s('type.one.one',X5) | s(X1,X4) != s(X1,X6) | s('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),'const.infer.guard_3'(s(bool,X2),s(X0,X3),s(X1,X4))) = s('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),'const.pair.,_2'(s('type.infer.exc'('type.one.one',X0),'const.infer.Success_1'(s('type.one.one',X5))),s(X1,X6)))))),
  inference(flattening,[],[f134])).
fof(f134,plain,(
  ! [X0,X1,X2,X3,X4,X5,X6] : ((s('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),'const.infer.guard_3'(s(bool,X2),s(X0,X3),s(X1,X4))) != s('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),'const.pair.,_2'(s('type.infer.exc'('type.one.one',X0),'const.infer.Success_1'(s('type.one.one',X5))),s(X1,X6))) | (p(s(bool,X2)) & s('type.one.one','const.one.one_0') = s('type.one.one',X5) & s(X1,X4) = s(X1,X6))) & ((~p(s(bool,X2)) | s('type.one.one','const.one.one_0') != s('type.one.one',X5) | s(X1,X4) != s(X1,X6)) | s('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),'const.infer.guard_3'(s(bool,X2),s(X0,X3),s(X1,X4))) = s('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),'const.pair.,_2'(s('type.infer.exc'('type.one.one',X0),'const.infer.Success_1'(s('type.one.one',X5))),s(X1,X6)))))),
  inference(nnf_transformation,[],[f87])).
fof(f87,plain,(
  ! [X0,X1,X2,X3,X4,X5,X6] : (s('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),'const.infer.guard_3'(s(bool,X2),s(X0,X3),s(X1,X4))) = s('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),'const.pair.,_2'(s('type.infer.exc'('type.one.one',X0),'const.infer.Success_1'(s('type.one.one',X5))),s(X1,X6))) <=> (p(s(bool,X2)) & s('type.one.one','const.one.one_0') = s('type.one.one',X5) & s(X1,X4) = s(X1,X6)))),
  inference(flattening,[],[f86])).
fof(f86,plain,(
  ! [X0,X1] : ! [X2,X3,X4,X5,X6] : (s('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),'const.infer.guard_3'(s(bool,X2),s(X0,X3),s(X1,X4))) = s('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),'const.pair.,_2'(s('type.infer.exc'('type.one.one',X0),'const.infer.Success_1'(s('type.one.one',X5))),s(X1,X6))) <=> (p(s(bool,X2)) & s('type.one.one','const.one.one_0') = s('type.one.one',X5) & s(X1,X4) = s(X1,X6)))),
  inference(rectify,[],[f21])).
fof(f21,axiom,(
  ! [X12,X11] : ! [X34,X30,X16,X15,X18] : (s('type.pair.prod'('type.infer.exc'('type.one.one',X12),X11),'const.infer.guard_3'(s(bool,X34),s(X12,X30),s(X11,X16))) = s('type.pair.prod'('type.infer.exc'('type.one.one',X12),X11),'const.pair.,_2'(s('type.infer.exc'('type.one.one',X12),'const.infer.Success_1'(s('type.one.one',X15))),s(X11,X18))) <=> (p(s(bool,X34)) & s('type.one.one','const.one.one_0') = s('type.one.one',X15) & s(X11,X16) = s(X11,X18)))),
  file('thm.inferProps.success_eqns|split|8','thm.inferProps.inferProps_38_prove_ltb')).
fof(f8850,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s(bool,'T_0') = s(bool,X0) | s(X1,X2) != s(X1,X3) | s('type.pair.prod'('type.infer.exc'('type.one.one',X4),X1),'const.infer.guard_3'(s(bool,'T_0'),s(X4,X5),s(X1,X2))) = s('type.pair.prod'('type.infer.exc'('type.one.one',X4),X1),'const.pair.,_2'(s('type.infer.exc'('type.one.one',X4),'const.infer.Success_1'(s('type.one.one',X6))),s(X1,X3)))) )),
  inference(condensation,[],[f8849])).
fof(f8849,plain,(
  ( ! [X47,X54,X52,X50,X48,X53,X51,X49] : (s(X48,X49) != s(X48,X50) | s('type.pair.prod'('type.infer.exc'('type.one.one',X51),X48),'const.infer.guard_3'(s(bool,'T_0'),s(X51,X52),s(X48,X49))) = s('type.pair.prod'('type.infer.exc'('type.one.one',X51),X48),'const.pair.,_2'(s('type.infer.exc'('type.one.one',X51),'const.infer.Success_1'(s('type.one.one',X53))),s(X48,X50))) | s(bool,X47) = s(bool,X54) | s(bool,'T_0') = s(bool,X54)) )),
  inference(subsumption_resolution,[],[f8790,f361])).
fof(f8790,plain,(
  ( ! [X47,X54,X52,X50,X48,X53,X51,X49] : (~p(s(bool,X47)) | s(X48,X49) != s(X48,X50) | s('type.pair.prod'('type.infer.exc'('type.one.one',X51),X48),'const.infer.guard_3'(s(bool,'T_0'),s(X51,X52),s(X48,X49))) = s('type.pair.prod'('type.infer.exc'('type.one.one',X51),X48),'const.pair.,_2'(s('type.infer.exc'('type.one.one',X51),'const.infer.Success_1'(s('type.one.one',X53))),s(X48,X50))) | s(bool,X47) = s(bool,X54) | s(bool,'T_0') = s(bool,X54)) )),
  inference(superposition,[],[f252,f272])).
fof(f48700,plain,(
  ( ! [X47,X54,X55] : (s('type.pair.prod'('type.infer.exc'(bool,X54),bool),'const.infer.read_1'(s(bool,X55))) = s('type.pair.prod'('type.infer.exc'(bool,X54),bool),'const.infer.st_ex_return_2'(s(bool,X55),s(bool,X55))) | s(bool,X47) = s(bool,X55)) ) | $spl84),
  inference(cnf_transformation,[],[f48700_D])).
fof(f48700_D,plain,(
  ( ! [X47,X54,X55] : (s('type.pair.prod'('type.infer.exc'(bool,X54),bool),'const.infer.read_1'(s(bool,X55))) = s('type.pair.prod'('type.infer.exc'(bool,X54),bool),'const.infer.st_ex_return_2'(s(bool,X55),s(bool,X55))) | s(bool,X47) = s(bool,X55)) ) <=> ~$spl84),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl84])])).
fof(f48699,plain,(
  ( ! [X47,X54,X52,X50,X48,X55,X53,X51,X49] : (s(X48,X49) != s(X48,X50) | s('type.pair.prod'('type.infer.exc'('type.one.one',X51),X48),'const.infer.guard_3'(s(bool,'T_0'),s(X51,X52),s(X48,X49))) = s('type.pair.prod'('type.infer.exc'('type.one.one',X51),X48),'const.pair.,_2'(s('type.infer.exc'('type.one.one',X51),'const.infer.Success_1'(s('type.one.one',X53))),s(X48,X50))) | s('type.pair.prod'('type.infer.exc'(bool,X54),bool),'const.infer.read_1'(s(bool,X55))) = s('type.pair.prod'('type.infer.exc'(bool,X54),bool),'const.infer.st_ex_return_2'(s(bool,X55),s(bool,X55))) | s(bool,X47) = s(bool,X55)) ) | $spl54),
  inference(subsumption_resolution,[],[f42783,f42776])).
fof(f42783,plain,(
  ( ! [X47,X54,X52,X50,X48,X55,X53,X51,X49] : (~p(s(bool,X47)) | s(X48,X49) != s(X48,X50) | s('type.pair.prod'('type.infer.exc'('type.one.one',X51),X48),'const.infer.guard_3'(s(bool,'T_0'),s(X51,X52),s(X48,X49))) = s('type.pair.prod'('type.infer.exc'('type.one.one',X51),X48),'const.pair.,_2'(s('type.infer.exc'('type.one.one',X51),'const.infer.Success_1'(s('type.one.one',X53))),s(X48,X50))) | s('type.pair.prod'('type.infer.exc'(bool,X54),bool),'const.infer.read_1'(s(bool,X55))) = s('type.pair.prod'('type.infer.exc'(bool,X54),bool),'const.infer.st_ex_return_2'(s(bool,X55),s(bool,X55))) | s(bool,X47) = s(bool,X55)) ) | $spl54),
  inference(superposition,[],[f252,f40176])).
fof(f1050,plain,(
  ( ! [X2,X1] : (s(fun('type.one.one',bool),X1) = s(fun('type.one.one',bool),X2)) ) | $spl14),
  inference(cnf_transformation,[],[f1050_D])).
fof(f1050_D,plain,(
  ( ! [X2,X1] : (s(fun('type.one.one',bool),X1) = s(fun('type.one.one',bool),X2)) ) <=> ~$spl14),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl14])])).
fof(f48698,plain,(
  ( ! [X734,X730,X731] : (s(bool,X731) != s(bool,f(s('type.one.one',X730))) | s(bool,'T_0') = s(bool,X731) | s('type.pair.prod'('type.infer.exc'(bool,X734),bool),'const.infer.read_1'(s(bool,g(s('type.one.one',X730))))) = s('type.pair.prod'('type.infer.exc'(bool,X734),bool),'const.infer.st_ex_return_2'(s(bool,g(s('type.one.one',X730))),s(bool,g(s('type.one.one',X730)))))) ) | $spl82),
  inference(cnf_transformation,[],[f48698_D])).
fof(f48698_D,plain,(
  ( ! [X734,X730,X731] : (s(bool,X731) != s(bool,f(s('type.one.one',X730))) | s(bool,'T_0') = s(bool,X731) | s('type.pair.prod'('type.infer.exc'(bool,X734),bool),'const.infer.read_1'(s(bool,g(s('type.one.one',X730))))) = s('type.pair.prod'('type.infer.exc'(bool,X734),bool),'const.infer.st_ex_return_2'(s(bool,g(s('type.one.one',X730))),s(bool,g(s('type.one.one',X730)))))) ) <=> ~$spl82),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl82])])).
fof(f42656,plain,(
  ( ! [X732,X734,X730,X733,X731] : (s(bool,X731) != s(bool,f(s('type.one.one',X730))) | s(fun('type.one.one',bool),X732) = s(fun('type.one.one',bool),X733) | s('type.pair.prod'('type.infer.exc'(bool,X734),bool),'const.infer.read_1'(s(bool,g(s('type.one.one',X730))))) = s('type.pair.prod'('type.infer.exc'(bool,X734),bool),'const.infer.st_ex_return_2'(s(bool,g(s('type.one.one',X730))),s(bool,g(s('type.one.one',X730))))) | s(bool,'T_0') = s(bool,X731)) ) | $spl54),
  inference(superposition,[],[f611,f40176])).
fof(f611,plain,(
  ( ! [X21,X19,X22,X20] : (s(X21,f(s('type.one.one',X22))) != s(X21,g(s('type.one.one',X22))) | s(fun('type.one.one',X21),X19) = s(fun('type.one.one',X21),X20)) )),
  inference(superposition,[],[f182,f258])).
fof(f258,plain,(
  ( ! [X0,X1] : (s('type.one.one',X0) = s('type.one.one',X1)) )),
  inference(superposition,[],[f165,f165])).
fof(f182,plain,(
  ( ! [X2,X0,X3,X1] : (s(X1,f(s(X0,sK5(X3,X2,X1,X0)))) != s(X1,g(s(X0,sK5(X3,X2,X1,X0)))) | s(fun(X0,X1),X2) = s(fun(X0,X1),X3)) )),
  inference(cnf_transformation,[],[f127])).
fof(f127,plain,(
  ! [X0,X1,X2,X3] : (s(X1,f(s(X0,sK5(X3,X2,X1,X0)))) != s(X1,g(s(X0,sK5(X3,X2,X1,X0)))) | s(fun(X0,X1),X2) = s(fun(X0,X1),X3))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK5])],[f121])).
fof(f121,plain,(
  ! [X0,X1,X2,X3] : (? [X4] : s(X1,f(s(X0,X4))) != s(X1,g(s(X0,X4))) | s(fun(X0,X1),X2) = s(fun(X0,X1),X3))),
  inference(ennf_transformation,[],[f73])).
fof(f73,plain,(
  ! [X0,X1,X2,X3] : (! [X4] : s(X1,f(s(X0,X4))) = s(X1,g(s(X0,X4))) => s(fun(X0,X1),X2) = s(fun(X0,X1),X3))),
  inference(flattening,[],[f72])).
fof(f72,plain,(
  ! [X0,X1] : ! [X2,X3] : (! [X4] : s(X1,f(s(X0,X4))) = s(X1,g(s(X0,X4))) => s(fun(X0,X1),X2) = s(fun(X0,X1),X3))),
  inference(rectify,[],[f4])).
fof(f4,axiom,(
  ! [X1,X2] : ! [X3,X4] : (! [X5] : s(X2,f(s(X1,X5))) = s(X2,g(s(X1,X5))) => s(fun(X1,X2),X3) = s(fun(X1,X2),X4))),
  file('thm.inferProps.success_eqns|split|8',aHL_EXT)).
fof(f48697,plain,(
  ( ! [X734,X730,X731] : (s(bool,X731) != s(bool,f(s('type.one.one',X730))) | s(bool,'T_0') = s(bool,g(s('type.one.one',X730))) | s('type.pair.prod'('type.infer.exc'(bool,X734),bool),'const.infer.read_1'(s(bool,X731))) = s('type.pair.prod'('type.infer.exc'(bool,X734),bool),'const.infer.st_ex_return_2'(s(bool,X731),s(bool,X731)))) ) | $spl80),
  inference(cnf_transformation,[],[f48697_D])).
fof(f48697_D,plain,(
  ( ! [X734,X730,X731] : (s(bool,X731) != s(bool,f(s('type.one.one',X730))) | s(bool,'T_0') = s(bool,g(s('type.one.one',X730))) | s('type.pair.prod'('type.infer.exc'(bool,X734),bool),'const.infer.read_1'(s(bool,X731))) = s('type.pair.prod'('type.infer.exc'(bool,X734),bool),'const.infer.st_ex_return_2'(s(bool,X731),s(bool,X731)))) ) <=> ~$spl80),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl80])])).
fof(f42767,plain,(
  ( ! [X732,X734,X730,X733,X731] : (s(bool,X731) != s(bool,f(s('type.one.one',X730))) | s(fun('type.one.one',bool),X732) = s(fun('type.one.one',bool),X733) | s('type.pair.prod'('type.infer.exc'(bool,X734),bool),'const.infer.read_1'(s(bool,X731))) = s('type.pair.prod'('type.infer.exc'(bool,X734),bool),'const.infer.st_ex_return_2'(s(bool,X731),s(bool,X731))) | s(bool,'T_0') = s(bool,g(s('type.one.one',X730)))) ) | $spl54),
  inference(superposition,[],[f611,f40176])).
fof(f48696,plain,(
  ( ! [X722,X718,X721] : (s(bool,'T_0') != s(bool,f(s('type.one.one',X718))) | s('type.pair.prod'('type.infer.exc'(bool,X721),bool),'const.infer.read_1'(s(bool,X722))) = s('type.pair.prod'('type.infer.exc'(bool,X721),bool),'const.infer.st_ex_return_2'(s(bool,X722),s(bool,X722))) | s(bool,X722) = s(bool,g(s('type.one.one',X718)))) ) | $spl78),
  inference(cnf_transformation,[],[f48696_D])).
fof(f48696_D,plain,(
  ( ! [X722,X718,X721] : (s(bool,'T_0') != s(bool,f(s('type.one.one',X718))) | s('type.pair.prod'('type.infer.exc'(bool,X721),bool),'const.infer.read_1'(s(bool,X722))) = s('type.pair.prod'('type.infer.exc'(bool,X721),bool),'const.infer.st_ex_return_2'(s(bool,X722),s(bool,X722))) | s(bool,X722) = s(bool,g(s('type.one.one',X718)))) ) <=> ~$spl78),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl78])])).
fof(f42959,plain,(
  ( ! [X720,X722,X718,X721,X719] : (s(bool,'T_0') != s(bool,f(s('type.one.one',X718))) | s(fun('type.one.one',bool),X719) = s(fun('type.one.one',bool),X720) | s('type.pair.prod'('type.infer.exc'(bool,X721),bool),'const.infer.read_1'(s(bool,X722))) = s('type.pair.prod'('type.infer.exc'(bool,X721),bool),'const.infer.st_ex_return_2'(s(bool,X722),s(bool,X722))) | s(bool,X722) = s(bool,g(s('type.one.one',X718)))) ) | $spl54),
  inference(superposition,[],[f611,f40176])).
fof(f48694,plain,(
  ( ! [X28,X26,X27,X25] : (s('type.pair.prod'('type.infer.exc'('type.num.num',X26),bool),'const.infer.st_ex_return_2'(s('type.num.num',X27),s(bool,X25))) != s('type.pair.prod'('type.infer.exc'('type.num.num',X26),bool),'const.infer.st_ex_return_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.infer_t.infer_t'),sK0))),s(bool,'T_0'))) | s('type.pair.prod'('type.infer.exc'(bool,X28),bool),'const.infer.read_1'(s(bool,X25))) = s('type.pair.prod'('type.infer.exc'(bool,X28),bool),'const.infer.st_ex_return_2'(s(bool,X25),s(bool,X25)))) ) | $spl76),
  inference(cnf_transformation,[],[f48694_D])).
fof(f48694_D,plain,(
  ( ! [X28,X26,X27,X25] : (s('type.pair.prod'('type.infer.exc'('type.num.num',X26),bool),'const.infer.st_ex_return_2'(s('type.num.num',X27),s(bool,X25))) != s('type.pair.prod'('type.infer.exc'('type.num.num',X26),bool),'const.infer.st_ex_return_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.infer_t.infer_t'),sK0))),s(bool,'T_0'))) | s('type.pair.prod'('type.infer.exc'(bool,X28),bool),'const.infer.read_1'(s(bool,X25))) = s('type.pair.prod'('type.infer.exc'(bool,X28),bool),'const.infer.st_ex_return_2'(s(bool,X25),s(bool,X25)))) ) <=> ~$spl76),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl76])])).
fof(f48688,plain,(
  ( ! [X28,X26,X24,X27,X25] : (s('type.pair.prod'('type.infer.exc'('type.num.num',X26),bool),'const.infer.st_ex_return_2'(s('type.num.num',X27),s(bool,X25))) != s('type.pair.prod'('type.infer.exc'('type.num.num',X26),bool),'const.infer.st_ex_return_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.infer_t.infer_t'),sK0))),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X24) | s('type.pair.prod'('type.infer.exc'(bool,X28),bool),'const.infer.read_1'(s(bool,X25))) = s('type.pair.prod'('type.infer.exc'(bool,X28),bool),'const.infer.st_ex_return_2'(s(bool,X25),s(bool,X25)))) ) | ($spl2 | $spl24 | $spl54)),
  inference(duplicate_literal_removal,[],[f48660])).
fof(f48660,plain,(
  ( ! [X28,X26,X24,X27,X25] : (s('type.pair.prod'('type.infer.exc'('type.num.num',X26),bool),'const.infer.st_ex_return_2'(s('type.num.num',X27),s(bool,X25))) != s('type.pair.prod'('type.infer.exc'('type.num.num',X26),bool),'const.infer.st_ex_return_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.infer_t.infer_t'),sK0))),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X24) | s('type.pair.prod'('type.infer.exc'(bool,X28),bool),'const.infer.read_1'(s(bool,X25))) = s('type.pair.prod'('type.infer.exc'(bool,X28),bool),'const.infer.st_ex_return_2'(s(bool,X25),s(bool,X25))) | s(bool,'T_0') = s(bool,X24)) ) | ($spl2 | $spl24 | $spl54)),
  inference(superposition,[],[f48039,f40176])).
fof(f48039,plain,(
  ( ! [X39,X38,X40] : (s('type.pair.prod'('type.infer.exc'('type.num.num',X38),bool),'const.infer.st_ex_return_2'(s('type.num.num',X39),s(bool,X40))) != s('type.pair.prod'('type.infer.exc'('type.num.num',X38),bool),'const.infer.st_ex_return_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.infer_t.infer_t'),sK0))),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X40)) ) | ($spl2 | $spl24)),
  inference(superposition,[],[f211,f38943])).
fof(f38943,plain,(
  ( ! [X0] : (s('type.pair.prod'('type.infer.exc'('type.num.num',X0),bool),'const.infer.st_ex_return_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.infer_t.infer_t'),sK0))),s(bool,'T_0'))) = s('type.pair.prod'('type.infer.exc'('type.num.num',X0),bool),'const.pair.,_2'(s('type.infer.exc'('type.num.num',X0),'const.infer.Success_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.infer_t.infer_t'),sK0))))),s(bool,'T_0')))) ) | ($spl2 | $spl24)),
  inference(forward_demodulation,[],[f38942,f242])).
fof(f38942,plain,(
  ( ! [X0] : (s('type.pair.prod'('type.infer.exc'('type.num.num',X0),bool),'const.infer.st_ex_return_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.infer_t.infer_t'),sK1))),s(bool,'T_0'))) = s('type.pair.prod'('type.infer.exc'('type.num.num',X0),bool),'const.pair.,_2'(s('type.infer.exc'('type.num.num',X0),'const.infer.Success_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.infer_t.infer_t'),sK0))))),s(bool,'T_0')))) ) | ($spl2 | $spl24)),
  inference(forward_demodulation,[],[f38793,f3660])).
fof(f38793,plain,(
  ( ! [X2,X0,X1] : (s('type.pair.prod'('type.infer.exc'('type.num.num',X0),bool),'const.pair.,_2'(s('type.infer.exc'('type.num.num',X0),'const.infer.Success_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.infer_t.infer_t'),sK0))))),s(bool,'T_0'))) = s('type.pair.prod'('type.infer.exc'('type.num.num',X0),bool),'const.infer.st_ex_return_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.infer_t.infer_t'),sK1))),s(bool,happ(s(fun('type.one.one',bool),X1),s('type.one.one',X2)))))) ) | ($spl2 | $spl24)),
  inference(unit_resulting_resolution,[],[f3660,f242,f212])).
fof(f212,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s(X1,X3) != s(X1,X5) | s(X2,X4) != s(X2,X6) | s('type.pair.prod'('type.infer.exc'(X1,X0),X2),'const.infer.st_ex_return_2'(s(X1,X3),s(X2,X4))) = s('type.pair.prod'('type.infer.exc'(X1,X0),X2),'const.pair.,_2'(s('type.infer.exc'(X1,X0),'const.infer.Success_1'(s(X1,X5))),s(X2,X6)))) )),
  inference(cnf_transformation,[],[f140])).
fof(f140,plain,(
  ! [X0,X1,X2,X3,X4,X5,X6] : ((s('type.pair.prod'('type.infer.exc'(X1,X0),X2),'const.infer.st_ex_return_2'(s(X1,X3),s(X2,X4))) != s('type.pair.prod'('type.infer.exc'(X1,X0),X2),'const.pair.,_2'(s('type.infer.exc'(X1,X0),'const.infer.Success_1'(s(X1,X5))),s(X2,X6))) | (s(X1,X3) = s(X1,X5) & s(X2,X4) = s(X2,X6))) & (s(X1,X3) != s(X1,X5) | s(X2,X4) != s(X2,X6) | s('type.pair.prod'('type.infer.exc'(X1,X0),X2),'const.infer.st_ex_return_2'(s(X1,X3),s(X2,X4))) = s('type.pair.prod'('type.infer.exc'(X1,X0),X2),'const.pair.,_2'(s('type.infer.exc'(X1,X0),'const.infer.Success_1'(s(X1,X5))),s(X2,X6)))))),
  inference(flattening,[],[f139])).
fof(f139,plain,(
  ! [X0,X1,X2,X3,X4,X5,X6] : ((s('type.pair.prod'('type.infer.exc'(X1,X0),X2),'const.infer.st_ex_return_2'(s(X1,X3),s(X2,X4))) != s('type.pair.prod'('type.infer.exc'(X1,X0),X2),'const.pair.,_2'(s('type.infer.exc'(X1,X0),'const.infer.Success_1'(s(X1,X5))),s(X2,X6))) | (s(X1,X3) = s(X1,X5) & s(X2,X4) = s(X2,X6))) & ((s(X1,X3) != s(X1,X5) | s(X2,X4) != s(X2,X6)) | s('type.pair.prod'('type.infer.exc'(X1,X0),X2),'const.infer.st_ex_return_2'(s(X1,X3),s(X2,X4))) = s('type.pair.prod'('type.infer.exc'(X1,X0),X2),'const.pair.,_2'(s('type.infer.exc'(X1,X0),'const.infer.Success_1'(s(X1,X5))),s(X2,X6)))))),
  inference(nnf_transformation,[],[f103])).
fof(f103,plain,(
  ! [X0,X1,X2,X3,X4,X5,X6] : (s('type.pair.prod'('type.infer.exc'(X1,X0),X2),'const.infer.st_ex_return_2'(s(X1,X3),s(X2,X4))) = s('type.pair.prod'('type.infer.exc'(X1,X0),X2),'const.pair.,_2'(s('type.infer.exc'(X1,X0),'const.infer.Success_1'(s(X1,X5))),s(X2,X6))) <=> (s(X1,X3) = s(X1,X5) & s(X2,X4) = s(X2,X6)))),
  inference(flattening,[],[f102])).
fof(f102,plain,(
  ! [X0,X1,X2] : ! [X3,X4,X5,X6] : (s('type.pair.prod'('type.infer.exc'(X1,X0),X2),'const.infer.st_ex_return_2'(s(X1,X3),s(X2,X4))) = s('type.pair.prod'('type.infer.exc'(X1,X0),X2),'const.pair.,_2'(s('type.infer.exc'(X1,X0),'const.infer.Success_1'(s(X1,X5))),s(X2,X6))) <=> (s(X1,X3) = s(X1,X5) & s(X2,X4) = s(X2,X6)))),
  inference(rectify,[],[f9])).
fof(f9,axiom,(
  ! [X14,X12,X11] : ! [X15,X16,X17,X18] : (s('type.pair.prod'('type.infer.exc'(X12,X14),X11),'const.infer.st_ex_return_2'(s(X12,X15),s(X11,X16))) = s('type.pair.prod'('type.infer.exc'(X12,X14),X11),'const.pair.,_2'(s('type.infer.exc'(X12,X14),'const.infer.Success_1'(s(X12,X17))),s(X11,X18))) <=> (s(X12,X15) = s(X12,X17) & s(X11,X16) = s(X11,X18)))),
  file('thm.inferProps.success_eqns|split|8','thm.inferProps.inferProps_24_prove_ltb')).
fof(f211,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'(X1,X0),X2),'const.infer.st_ex_return_2'(s(X1,X3),s(X2,X4))) != s('type.pair.prod'('type.infer.exc'(X1,X0),X2),'const.pair.,_2'(s('type.infer.exc'(X1,X0),'const.infer.Success_1'(s(X1,X5))),s(X2,X6))) | s(X2,X4) = s(X2,X6)) )),
  inference(cnf_transformation,[],[f140])).
fof(f43057,plain,(
  ( ! [X127,X132,X130,X128,X133,X129] : (s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraints_3'(s('type.list.list'('type.infer_t.infer_t'),X128),s('type.list.list'('type.infer_t.infer_t'),X129),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X127))) != s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'const.infer.Success_1'(s('type.one.one',X132))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X130))) | s('type.pair.prod'('type.infer.exc'(bool,X133),bool),'const.infer.read_1'(s(bool,'const.infer.pure_add_constraints_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X127))),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),'const.list.ZIP_1'(s('type.pair.prod'('type.list.list'('type.infer_t.infer_t'),'type.list.list'('type.infer_t.infer_t')),'const.pair.,_2'(s('type.list.list'('type.infer_t.infer_t'),X128),s('type.list.list'('type.infer_t.infer_t'),X129))))),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X130))))))) = s('type.pair.prod'('type.infer.exc'(bool,X133),bool),'const.infer.st_ex_return_2'(s(bool,'const.infer.pure_add_constraints_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X127))),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),'const.list.ZIP_1'(s('type.pair.prod'('type.list.list'('type.infer_t.infer_t'),'type.list.list'('type.infer_t.infer_t')),'const.pair.,_2'(s('type.list.list'('type.infer_t.infer_t'),X128),s('type.list.list'('type.infer_t.infer_t'),X129))))),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X130))))),s(bool,'const.infer.pure_add_constraints_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X127))),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),'const.list.ZIP_1'(s('type.pair.prod'('type.list.list'('type.infer_t.infer_t'),'type.list.list'('type.infer_t.infer_t')),'const.pair.,_2'(s('type.list.list'('type.infer_t.infer_t'),X128),s('type.list.list'('type.infer_t.infer_t'),X129))))),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X130)))))))) ) | $spl74),
  inference(cnf_transformation,[],[f43057_D])).
fof(f43057_D,plain,(
  ( ! [X127,X132,X130,X128,X133,X129] : (s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraints_3'(s('type.list.list'('type.infer_t.infer_t'),X128),s('type.list.list'('type.infer_t.infer_t'),X129),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X127))) != s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'const.infer.Success_1'(s('type.one.one',X132))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X130))) | s('type.pair.prod'('type.infer.exc'(bool,X133),bool),'const.infer.read_1'(s(bool,'const.infer.pure_add_constraints_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X127))),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),'const.list.ZIP_1'(s('type.pair.prod'('type.list.list'('type.infer_t.infer_t'),'type.list.list'('type.infer_t.infer_t')),'const.pair.,_2'(s('type.list.list'('type.infer_t.infer_t'),X128),s('type.list.list'('type.infer_t.infer_t'),X129))))),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X130))))))) = s('type.pair.prod'('type.infer.exc'(bool,X133),bool),'const.infer.st_ex_return_2'(s(bool,'const.infer.pure_add_constraints_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X127))),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),'const.list.ZIP_1'(s('type.pair.prod'('type.list.list'('type.infer_t.infer_t'),'type.list.list'('type.infer_t.infer_t')),'const.pair.,_2'(s('type.list.list'('type.infer_t.infer_t'),X128),s('type.list.list'('type.infer_t.infer_t'),X129))))),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X130))))),s(bool,'const.infer.pure_add_constraints_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X127))),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),'const.list.ZIP_1'(s('type.pair.prod'('type.list.list'('type.infer_t.infer_t'),'type.list.list'('type.infer_t.infer_t')),'const.pair.,_2'(s('type.list.list'('type.infer_t.infer_t'),X128),s('type.list.list'('type.infer_t.infer_t'),X129))))),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X130)))))))) ) <=> ~$spl74),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl74])])).
fof(f43056,plain,(
  ( ! [X127,X132,X130,X128,X133,X131,X129] : (s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraints_3'(s('type.list.list'('type.infer_t.infer_t'),X128),s('type.list.list'('type.infer_t.infer_t'),X129),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X127))) != s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'const.infer.Success_1'(s('type.one.one',X132))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X130))) | s('type.pair.prod'('type.infer.exc'(bool,X133),bool),'const.infer.read_1'(s(bool,'const.infer.pure_add_constraints_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X127))),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),'const.list.ZIP_1'(s('type.pair.prod'('type.list.list'('type.infer_t.infer_t'),'type.list.list'('type.infer_t.infer_t')),'const.pair.,_2'(s('type.list.list'('type.infer_t.infer_t'),X128),s('type.list.list'('type.infer_t.infer_t'),X129))))),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X130))))))) = s('type.pair.prod'('type.infer.exc'(bool,X133),bool),'const.infer.st_ex_return_2'(s(bool,'const.infer.pure_add_constraints_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X127))),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),'const.list.ZIP_1'(s('type.pair.prod'('type.list.list'('type.infer_t.infer_t'),'type.list.list'('type.infer_t.infer_t')),'const.pair.,_2'(s('type.list.list'('type.infer_t.infer_t'),X128),s('type.list.list'('type.infer_t.infer_t'),X129))))),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X130))))),s(bool,'const.infer.pure_add_constraints_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X127))),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),'const.list.ZIP_1'(s('type.pair.prod'('type.list.list'('type.infer_t.infer_t'),'type.list.list'('type.infer_t.infer_t')),'const.pair.,_2'(s('type.list.list'('type.infer_t.infer_t'),X128),s('type.list.list'('type.infer_t.infer_t'),X129))))),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X130))))))) | s(bool,'T_0') = s(bool,X131)) ) | $spl54),
  inference(subsumption_resolution,[],[f42582,f274])).
fof(f42582,plain,(
  ( ! [X127,X132,X130,X128,X133,X131,X129] : (p(s(bool,X131)) | s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraints_3'(s('type.list.list'('type.infer_t.infer_t'),X128),s('type.list.list'('type.infer_t.infer_t'),X129),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X127))) != s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'const.infer.Success_1'(s('type.one.one',X132))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X130))) | s('type.pair.prod'('type.infer.exc'(bool,X133),bool),'const.infer.read_1'(s(bool,'const.infer.pure_add_constraints_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X127))),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),'const.list.ZIP_1'(s('type.pair.prod'('type.list.list'('type.infer_t.infer_t'),'type.list.list'('type.infer_t.infer_t')),'const.pair.,_2'(s('type.list.list'('type.infer_t.infer_t'),X128),s('type.list.list'('type.infer_t.infer_t'),X129))))),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X130))))))) = s('type.pair.prod'('type.infer.exc'(bool,X133),bool),'const.infer.st_ex_return_2'(s(bool,'const.infer.pure_add_constraints_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X127))),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),'const.list.ZIP_1'(s('type.pair.prod'('type.list.list'('type.infer_t.infer_t'),'type.list.list'('type.infer_t.infer_t')),'const.pair.,_2'(s('type.list.list'('type.infer_t.infer_t'),X128),s('type.list.list'('type.infer_t.infer_t'),X129))))),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X130))))),s(bool,'const.infer.pure_add_constraints_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X127))),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),'const.list.ZIP_1'(s('type.pair.prod'('type.list.list'('type.infer_t.infer_t'),'type.list.list'('type.infer_t.infer_t')),'const.pair.,_2'(s('type.list.list'('type.infer_t.infer_t'),X128),s('type.list.list'('type.infer_t.infer_t'),X129))))),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X130))))))) | s(bool,'T_0') = s(bool,X131)) ) | $spl54),
  inference(superposition,[],[f232,f40176])).
fof(f232,plain,(
  ( ! [X4,X2,X0,X3,X1] : (p(s(bool,'const.infer.pure_add_constraints_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X2))),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),'const.list.ZIP_1'(s('type.pair.prod'('type.list.list'('type.infer_t.infer_t'),'type.list.list'('type.infer_t.infer_t')),'const.pair.,_2'(s('type.list.list'('type.infer_t.infer_t'),X0),s('type.list.list'('type.infer_t.infer_t'),X1))))),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X3)))))) | s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraints_3'(s('type.list.list'('type.infer_t.infer_t'),X0),s('type.list.list'('type.infer_t.infer_t'),X1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X2))) != s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'const.infer.Success_1'(s('type.one.one',X4))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X3)))) )),
  inference(cnf_transformation,[],[f153])).
fof(f38516,plain,(
  $false | ($spl8 | $spl10)),
  inference(subsumption_resolution,[],[f38515,f164])).
fof(f38515,plain,(
  p(s(bool,'F_0')) | ($spl8 | $spl10)),
  inference(forward_demodulation,[],[f248,f278])).
fof(f38479,plain,(
  $false | ($spl0 | $spl9)),
  inference(subsumption_resolution,[],[f249,f38433])).
fof(f38433,plain,(
  p(s(bool,'const.infer.pure_add_constraints_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),'const.list.ZIP_1'(s('type.pair.prod'('type.list.list'('type.infer_t.infer_t'),'type.list.list'('type.infer_t.infer_t')),'const.pair.,_2'(s('type.list.list'('type.infer_t.infer_t'),sK0),s('type.list.list'('type.infer_t.infer_t'),sK1))))),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK3)))))) | $spl0),
  inference(unit_resulting_resolution,[],[f29772,f232])).
fof(f29772,plain,(
  s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraints_3'(s('type.list.list'('type.infer_t.infer_t'),sK0),s('type.list.list'('type.infer_t.infer_t'),sK1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))) = s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'const.infer.Success_1'(s('type.one.one','const.one.one_0'))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK3))) | $spl0),
  inference(forward_demodulation,[],[f240,f165])).
fof(f38478,plain,(
  $false | ($spl0 | $spl9 | $spl10)),
  inference(global_subsumption,[],[f278,f162,f161,f160,f159,f158,f163,f165,f166,f167,f168,f169,f170,f171,f174,f173,f172,f175,f176,f177,f178,f179,f180,f181,f182,f183,f184,f185,f188,f187,f186,f191,f190,f189,f250,f251,f192,f252,f197,f195,f201,f200,f199,f202,f203,f204,f205,f206,f207,f253,f212,f211,f210,f215,f214,f213,f218,f217,f216,f219,f254,f221,f224,f223,f222,f255,f227,f226,f231,f229,f239,f238,f237,f236,f235,f234,f258,f272,f274,f277,f325,f361,f605,f606,f608,f611,f706,f724,f740,f752,f768,f787,f803,f815,f831,f1034,f1035,f1036,f1037,f1038,f1164,f1265,f1264,f1260,f1259,f1266,f1267,f1269,f1272,f1276,f1301,f1302,f1303,f1304,f1305,f1347,f1356,f1382,f1426,f1563,f1562,f1558,f1557,f1608,f1609,f1611,f1614,f1618,f1647,f1648,f1649,f1650,f1651,f1696,f1697,f1706,f1736,f1737,f1738,f1739,f1740,f1825,f1824,f1855,f1880,f1881,f1882,f1886,f1890,f1894,f1896,f1904,f1905,f1906,f1907,f1908,f1910,f2105,f2106,f2111,f2112,f2121,f2162,f2169,f2170,f2175,f2176,f2185,f2226,f2514,f2521,f2526,f2527,f2557,f2556,f2552,f2551,f2559,f2560,f2561,f2563,f2603,f2604,f2610,f2611,f2612,f2614,f2658,f2659,f2770,f2771,f2772,f2779,f2780,f2781,f2824,f2823,f2817,f2816,f2828,f2829,f2830,f2832,f2872,f2873,f2934,f2935,f2936,f2938,f2982,f2983,f3021,f3020,f3014,f3013,f3092,f3093,f3094,f3095,f3097,f3100,f3104,f3141,f3142,f3143,f3144,f3145,f3146,f3154,f3155,f3156,f3157,f3166,f3204,f3205,f3206,f3207,f3208,f3296,f3297,f3302,f3303,f3682,f3683,f3690,f3691,f3695,f3696,f3701,f3702,f3711,f3712,f3713,f3715,f5862,f5864,f5866,f5868,f5872,f5874,f5876,f5882,f5883,f5886,f5887,f5888,f5889,f5890,f5893,f5895,f5928,f5932,f5934,f5936,f5938,f5942,f5944,f5946,f5952,f5953,f5956,f5957,f5958,f5959,f5960,f5963,f5965,f5998,f6002,f6004,f6006,f6008,f6012,f6014,f6016,f6022,f6023,f6026,f6027,f6028,f6029,f6030,f6033,f6035,f6068,f6072,f6074,f6076,f6078,f6082,f6084,f6086,f6092,f6093,f6096,f6097,f6098,f6099,f6100,f6103,f6105,f6138,f6212,f6214,f6216,f6218,f6222,f6224,f6226,f6232,f6233,f6236,f6237,f6238,f6239,f6240,f6243,f6245,f6278,f6282,f6284,f6286,f6288,f6292,f6294,f6296,f6302,f6303,f6306,f6307,f6308,f6309,f6310,f6313,f6315,f6348,f6352,f6354,f6356,f6358,f6362,f6364,f6366,f6372,f6373,f6376,f6377,f6378,f6379,f6380,f6383,f6385,f6418,f6562,f6564,f6566,f6568,f6572,f6574,f6576,f6582,f6583,f6586,f6587,f6588,f6589,f6590,f6593,f6595,f6628,f6631,f6632,f6633,f6634,f6636,f6637,f6638,f6641,f5284,f5281,f5280,f5279,f5278,f5277,f5275,f6643,f5253,f6709,f6710,f6711,f6712,f6714,f6715,f6716,f6719,f5152,f5149,f5148,f5147,f5146,f5145,f5143,f6721,f5121,f6735,f6736,f6737,f6738,f6740,f6741,f6742,f6745,f5108,f5105,f5104,f5103,f5102,f5101,f5099,f6747,f5077,f6761,f6762,f6763,f6764,f6766,f6767,f6768,f6771,f5064,f5061,f5060,f5059,f5058,f5057,f5055,f6773,f5033,f6787,f6788,f6789,f6790,f6792,f6793,f6794,f6797,f5020,f5017,f5016,f5015,f5014,f5013,f5011,f6799,f4989,f6813,f6814,f6815,f6816,f6818,f6819,f6820,f6823,f4976,f4973,f4972,f4971,f4970,f4969,f4967,f6825,f4945,f6909,f6910,f6911,f6912,f6914,f6915,f6916,f6919,f4888,f4885,f4884,f4883,f4882,f4881,f4879,f6921,f4857,f6936,f6938,f6940,f6942,f6946,f6948,f6950,f6956,f6957,f6960,f6961,f6962,f6963,f6964,f6967,f6969,f7002,f8053,f8054,f8055,f8056,f8058,f8059,f8060,f8063,f3920,f3917,f3916,f3915,f3914,f3913,f3911,f8065,f3889,f5781,f5782,f5783,f5785,f5788,f8151,f8152,f8153,f8154,f8155,f8156,f8158,f8159,f5821,f5822,f5823,f5825,f5828,f8173,f5860,f8843,f8796,f8795,f8857,f8858,f8739,f8741,f8742,f8743,f8744,f8745,f8747,f8748,f8860,f8863,f8864,f8865,f8866,f8869,f8870,f8871,f8762,f9334,f9335,f9339,f9340,f10760,f10762,f10764,f10766,f10770,f10774,f10776,f10778,f10784,f10785,f10789,f10790,f10791,f10792,f10794,f10799,f10801,f10842,f10846,f10848,f10850,f10856,f10860,f10862,f10864,f10870,f10871,f10875,f10876,f10877,f10878,f10880,f10885,f10887,f10928,f10931,f10717,f10723,f10724,f10728,f10729,f10734,f10735,f10746,f10747,f10748,f10750,f12028,f12029,f12031,f12032,f12033,f12619,f12613,f12608,f12602,f12674,f12675,f12676,f12677,f12679,f12681,f12682,f12684,f12686,f12708,f12714,f12715,f12716,f12717,f12723,f12726,f12727,f12789,f12790,f12791,f12792,f12796,f12799,f12801,f12823,f12829,f12830,f12831,f12832,f12838,f12841,f13769,f13771,f13773,f13775,f13781,f13785,f13789,f13791,f13793,f13799,f13800,f13804,f13805,f13806,f13807,f13809,f13814,f13816,f13863,f13867,f13869,f13873,f13879,f13883,f13887,f13889,f13891,f13897,f13898,f13902,f13903,f13904,f13905,f13907,f13912,f13914,f13961,f13964,f13726,f14295,f14288,f14282,f14275,f14354,f14355,f14356,f14357,f14359,f14361,f14362,f14364,f14366,f14388,f14394,f14395,f14396,f14397,f14403,f14408,f14410,f14476,f14477,f14478,f14479,f14483,f14486,f14488,f14510,f14516,f14517,f14518,f14519,f14525,f14530,f15489,f15490,f15491,f15492,f15493,f15495,f15497,f15498,f15499,f15502,f14900,f14896,f14895,f14894,f14893,f14891,f14888,f14887,f15505,f14855,f14854,f15523,f15524,f15525,f15526,f15527,f15529,f15531,f15532,f15533,f15536,f14834,f14830,f14829,f14828,f14827,f14825,f14821,f15539,f14789,f14788,f14786,f15557,f15558,f15559,f15560,f15561,f15563,f15565,f15566,f15567,f15570,f14767,f14763,f14762,f14761,f14760,f14758,f14754,f15573,f14722,f14721,f15591,f15592,f15593,f15594,f15595,f15597,f15599,f15600,f15601,f15604,f14701,f14697,f14696,f14695,f14694,f14692,f14688,f15607,f14655,f14653,f14931,f14932,f14934,f14936,f15052,f15053,f15054,f15055,f15056,f15057,f15059,f15061,f15063,f15064,f15068,f15070,f15072,f15074,f15080,f15083,f15084,f15085,f15086,f15087,f15088,f15089,f15090,f15091,f15092,f15109,f15110,f15111,f15112,f15113,f15172,f15178,f15198,f15199,f15200,f15201,f15208,f15209,f15215,f15216,f15221,f15222,f15223,f15224,f15226,f15228,f15230,f15232,f15241,f15242,f15243,f15245,f15250,f15252,f15257,f15258,f15317,f15323,f15327,f15331,f15333,f15334,f15335,f15336,f15337,f15339,f15346,f15347,f15353,f15354,f15359,f15360,f15361,f15362,f15364,f15366,f15368,f15370,f15379,f15380,f15381,f15383,f15389,f15391,f15396,f15397,f15457,f15464,f15468,f15472,f15474,f15475,f15476,f15477,f15478,f16844,f16845,f16846,f16847,f16856,f16857,f16858,f16859,f17503,f17505,f17507,f17509,f17511,f17514,f17522,f17526,f17528,f17530,f17536,f17537,f17541,f17542,f17543,f17544,f17546,f17551,f17552,f17554,f17605,f17606,f17611,f17613,f17615,f17619,f17622,f17630,f17634,f17636,f17638,f17644,f17645,f17649,f17650,f17651,f17652,f17654,f17659,f17660,f17662,f17713,f17714,f17717,f17445,f17447,f17448,f17454,f17455,f17461,f17462,f17467,f17468,f17472,f17474,f17476,f17478,f17489,f17490,f17491,f17493,f20117,f20119,f20121,f20123,f20125,f20128,f20138,f20142,f20144,f20146,f20152,f20153,f20157,f20158,f20159,f20160,f20162,f20168,f20169,f20170,f20172,f20226,f20232,f20243,f20247,f20249,f20251,f20256,f20260,f20261,f20263,f20269,f20302,f19900,f19923,f19924,f19925,f19927,f19929,f19950,f19957,f19958,f19964,f19965,f19970,f19971,f19975,f19977,f19992,f19993,f19994,f19996,f20083,f20091,f22438,f22422,f22492,f22496,f22498,f22500,f22501,f22503,f22549,f22561,f22565,f22569,f22572,f24889,f24891,f24893,f24894,f24896,f25151,f24900,f24910,f24911,f25001,f25040,f25041,f26368,f26369,f26376,f26377,f26447,f2191,f2190,f2127,f2126,f256,f232,f335,f315,f614,f616,f5830,f5827,f5790,f5787,f3164,f3161,f3102,f3099,f2945,f2943,f2940,f2836,f2834,f2621,f2619,f2616,f2567,f2565,f2073,f1912,f1704,f1701,f1616,f1613,f1354,f1351,f1274,f1271,f1151,f618,f610,f293,f164,f28936,f28937,f28938,f28939,f28942,f28943,f28944,f28945,f28954,f28955,f28956,f28957,f28958,f28959,f29124,f29125,f29126,f29127,f29129,f29130,f29131,f29139,f29143,f29145,f29147,f29149,f29156,f29199,f29200,f29201,f29202,f29205,f29206,f29207,f29208,f29210,f29211,f29212,f29219,f29221,f29224,f29228,f29230,f29232,f29234,f29241,f29242,f249,f29772,f29782,f30240,f30242,f30244,f30246,f30248,f30250,f30252,f30254,f30258,f30262,f30264,f30266,f30268,f30274,f30275,f30278,f30281,f30282,f30283,f30284,f30286,f30290,f30291,f30292,f30294,f30347,f30348,f30352,f30354,f30356,f30358,f30360,f30362,f30364,f30366,f30370,f30376,f30378,f30380,f30386,f30387,f30390,f30393,f30394,f30395,f30396,f30398,f30402,f30403,f30404,f30406,f30459,f30460,f30463,f30165,f30170,f30171,f30172,f30174,f30801,f30802,f30803,f30805,f30808,f30809,f30788,f30789,f30790,f30791,f30794,f30795,f30796,f30797,f30799,f30897,f30898,f30899,f30900,f30903,f30904,f30905,f30906,f30908,f30910,f30911,f30912,f30913,f30914,f32243,f32244,f32245,f32246,f32250,f32251,f32252,f32253,f32255,f33488,f33489,f33490,f33491,f33493,f33494,f33495,f33498,f33500,f33502,f33506,f33510,f33512,f33514,f33523,f33524,f33607,f33610,f33611,f33612,f33613,f33616,f33617,f33618,f33619,f34467,f34468,f34469,f34470,f34471,f34472,f34473,f34474,f34475,f34476,f34477,f34478,f34479,f34480,f34481,f34482,f34506,f34484,f34485,f34486,f34487,f34507,f34489,f34490,f34508,f34500,f34501,f34502,f34503,f34509,f34505,f35314,f35315,f35316,f35278,f35279,f35280,f35281,f35317,f35318,f35319,f35320,f35286,f35287,f35288,f35289,f35321,f35322,f35292,f35293,f35294,f35295,f35323,f35297,f35298,f35307,f35308,f35309,f35310,f35311,f35312,f35313,f36947,f36948,f36949,f36950,f36951,f36952,f36953,f36954,f36955,f36958,f36960,f36962,f36966,f36970,f36972,f36974,f36982,f36983,f36984,f36987,f36990,f36991,f36992,f36993,f36994,f36995,f36996,f36997,f36998,f37004,f37005,f37006,f37012,f37013,f37014,f37015,f37016,f37017,f37018,f37019,f37020,f37021,f37022,f37025,f37027,f37029,f37033,f37037,f37039,f37041,f37049,f37050,f37051,f37054,f37057,f37058,f37059,f37060,f37061,f37062,f37063,f37064,f37065,f37071,f37072,f37073,f37079,f37080,f37081,f37172,f37085,f37086,f37087,f37088,f37174,f37090,f37091,f37092,f37093,f37094,f37095,f37096,f37097,f37098,f37099,f37100,f37101,f37102,f37103,f37104,f37105,f37106,f37107,f37108,f37109,f37110,f37111,f37114,f37116,f37118,f37122,f37126,f37128,f37130,f37138,f37139,f37140,f37143,f37146,f37147,f37148,f37149,f37150,f37151,f37152,f37153,f37154,f37160,f37161,f37162,f37168,f37169,f37170,f37322,f37323,f37324,f37325,f37327,f37328,f37329,f37333,f37337,f37341,f37343,f37345,f37354,f37380,f37381,f37382,f37383,f37386,f37387,f37388,f37389,f38435,f38436,f38442,f38443,f38444,f38445,f38449,f38450,f38451,f38452,f38455,f38456,f38473,f29890,f38433,f30169,f29889,f38476])).
fof(f38476,plain,(
  ( ! [X2,X0,X1] : (s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))) = s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X2))) | s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraints_3'(s('type.list.list'('type.infer_t.infer_t'),sK0),s('type.list.list'('type.infer_t.infer_t'),sK1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))) != s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraints_3'(s('type.list.list'('type.infer_t.infer_t'),X0),s('type.list.list'('type.infer_t.infer_t'),X1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X2)))) ) | $spl0),
  inference(backward_demodulation,[],[f29889,f30169])).
fof(f29889,plain,(
  s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))) = s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK3))) | $spl0),
  inference(unit_resulting_resolution,[],[f29772,f231])).
fof(f30169,plain,(
  ( ! [X2,X0,X1] : (s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraints_3'(s('type.list.list'('type.infer_t.infer_t'),sK0),s('type.list.list'('type.infer_t.infer_t'),sK1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))) != s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraints_3'(s('type.list.list'('type.infer_t.infer_t'),X0),s('type.list.list'('type.infer_t.infer_t'),X1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X2))) | s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK3))) = s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X2)))) ) | $spl0),
  inference(superposition,[],[f231,f29772])).
fof(f29890,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.infer_t.infer_t'),sK0))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.infer_t.infer_t'),sK1))) | $spl0),
  inference(unit_resulting_resolution,[],[f29772,f229])).
fof(f38473,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraints_3'(s('type.list.list'('type.infer_t.infer_t'),X1),s('type.list.list'('type.infer_t.infer_t'),X2),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X0))) != s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'const.infer.Success_1'(s('type.one.one',X4))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X3))) | s(bool,'T_0') = s(bool,'const.infer.pure_add_constraints_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X0))),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),'const.list.ZIP_1'(s('type.pair.prod'('type.list.list'('type.infer_t.infer_t'),'type.list.list'('type.infer_t.infer_t')),'const.pair.,_2'(s('type.list.list'('type.infer_t.infer_t'),X1),s('type.list.list'('type.infer_t.infer_t'),X2))))),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X3)))))) )),
  inference(subsumption_resolution,[],[f38460,f164])).
fof(f38460,plain,(
  ( ! [X4,X2,X0,X3,X1] : (p(s(bool,'F_0')) | s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraints_3'(s('type.list.list'('type.infer_t.infer_t'),X1),s('type.list.list'('type.infer_t.infer_t'),X2),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X0))) != s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'const.infer.Success_1'(s('type.one.one',X4))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X3))) | s(bool,'T_0') = s(bool,'const.infer.pure_add_constraints_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X0))),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),'const.list.ZIP_1'(s('type.pair.prod'('type.list.list'('type.infer_t.infer_t'),'type.list.list'('type.infer_t.infer_t')),'const.pair.,_2'(s('type.list.list'('type.infer_t.infer_t'),X1),s('type.list.list'('type.infer_t.infer_t'),X2))))),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X3)))))) )),
  inference(superposition,[],[f232,f167])).
fof(f38456,plain,(
  ( ! [X14,X21,X19,X17,X15,X22,X20,X18,X16] : (p(s(bool,'const.infer.pure_add_constraints_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X19))),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),'const.list.ZIP_1'(s('type.pair.prod'('type.list.list'('type.infer_t.infer_t'),'type.list.list'('type.infer_t.infer_t')),'const.pair.,_2'(s('type.list.list'('type.infer_t.infer_t'),X20),s('type.list.list'('type.infer_t.infer_t'),X21))))),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),happ(s(fun(X15,'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X16),s(X15,happ(s(fun(X14,X15),X17),s(X14,X18)))))))))) | s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraints_3'(s('type.list.list'('type.infer_t.infer_t'),X20),s('type.list.list'('type.infer_t.infer_t'),X21),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X19))) != s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'const.infer.Success_1'(s('type.one.one',X22))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),happ(s(fun(X14,'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'_dst_x0x1_2'(s(fun(X15,'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X16),s(fun(X14,X15),X17))),s(X14,X18)))))) )),
  inference(superposition,[],[f232,f206])).
fof(f38455,plain,(
  ( ! [X6,X12,X10,X8,X7,X5,X13,X11,X9] : (p(s(bool,'const.infer.pure_add_constraints_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X10))),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),'const.list.ZIP_1'(s('type.pair.prod'('type.list.list'('type.infer_t.infer_t'),'type.list.list'('type.infer_t.infer_t')),'const.pair.,_2'(s('type.list.list'('type.infer_t.infer_t'),X11),s('type.list.list'('type.infer_t.infer_t'),X12))))),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),happ(s(fun(X7,'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'_dst_x0x1_2'(s(fun(X5,'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X6),s(fun(X7,X5),X8))),s(X7,X9)))))))) | s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraints_3'(s('type.list.list'('type.infer_t.infer_t'),X11),s('type.list.list'('type.infer_t.infer_t'),X12),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X10))) != s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'const.infer.Success_1'(s('type.one.one',X13))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),happ(s(fun(X5,'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X6),s(X5,happ(s(fun(X7,X5),X8),s(X7,X9)))))))) )),
  inference(superposition,[],[f232,f206])).
fof(f38452,plain,(
  ( ! [X47,X45,X43,X41,X50,X48,X46,X44,X42,X51,X49] : (p(s(bool,'const.infer.pure_add_constraints_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X48))),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),'const.list.ZIP_1'(s('type.pair.prod'('type.list.list'('type.infer_t.infer_t'),'type.list.list'('type.infer_t.infer_t')),'const.pair.,_2'(s('type.list.list'('type.infer_t.infer_t'),X49),s('type.list.list'('type.infer_t.infer_t'),happ(s(fun(X44,'type.list.list'('type.infer_t.infer_t')),'_dst_x0x1x0_3'(s(fun(X42,fun(X41,'type.list.list'('type.infer_t.infer_t'))),X43),s(fun(X44,X42),X45),s(X41,X47))),s(X44,X46))))))),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X50)))))) | s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'const.infer.Success_1'(s('type.one.one',X51))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X50))) != s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraints_3'(s('type.list.list'('type.infer_t.infer_t'),X49),s('type.list.list'('type.infer_t.infer_t'),happ(s(fun(X41,'type.list.list'('type.infer_t.infer_t')),happ(s(fun(X42,fun(X41,'type.list.list'('type.infer_t.infer_t'))),X43),s(X42,happ(s(fun(X44,X42),X45),s(X44,X46))))),s(X41,X47))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X48)))) )),
  inference(superposition,[],[f232,f221])).
fof(f38451,plain,(
  ( ! [X30,X39,X37,X35,X33,X31,X38,X36,X34,X32,X40] : (p(s(bool,'const.infer.pure_add_constraints_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X37))),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),'const.list.ZIP_1'(s('type.pair.prod'('type.list.list'('type.infer_t.infer_t'),'type.list.list'('type.infer_t.infer_t')),'const.pair.,_2'(s('type.list.list'('type.infer_t.infer_t'),X38),s('type.list.list'('type.infer_t.infer_t'),happ(s(fun(X32,'type.list.list'('type.infer_t.infer_t')),happ(s(fun(X31,fun(X32,'type.list.list'('type.infer_t.infer_t'))),X33),s(X31,happ(s(fun(X30,X31),X34),s(X30,X36))))),s(X32,X35))))))),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X39)))))) | s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'const.infer.Success_1'(s('type.one.one',X40))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X39))) != s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraints_3'(s('type.list.list'('type.infer_t.infer_t'),X38),s('type.list.list'('type.infer_t.infer_t'),happ(s(fun(X30,'type.list.list'('type.infer_t.infer_t')),'_dst_x0x1x0_3'(s(fun(X31,fun(X32,'type.list.list'('type.infer_t.infer_t'))),X33),s(fun(X30,X31),X34),s(X32,X35))),s(X30,X36))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X37)))) )),
  inference(superposition,[],[f232,f221])).
fof(f38450,plain,(
  ( ! [X28,X26,X24,X23,X21,X29,X27,X25,X22] : (p(s(bool,'const.infer.pure_add_constraints_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X26))),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),'const.list.ZIP_1'(s('type.pair.prod'('type.list.list'('type.infer_t.infer_t'),'type.list.list'('type.infer_t.infer_t')),'const.pair.,_2'(s('type.list.list'('type.infer_t.infer_t'),X27),s('type.list.list'('type.infer_t.infer_t'),happ(s(fun(X22,'type.list.list'('type.infer_t.infer_t')),X23),s(X22,happ(s(fun(X21,X22),X24),s(X21,X25))))))))),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X28)))))) | s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'const.infer.Success_1'(s('type.one.one',X29))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X28))) != s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraints_3'(s('type.list.list'('type.infer_t.infer_t'),X27),s('type.list.list'('type.infer_t.infer_t'),happ(s(fun(X21,'type.list.list'('type.infer_t.infer_t')),'_dst_x0x1_2'(s(fun(X22,'type.list.list'('type.infer_t.infer_t')),X23),s(fun(X21,X22),X24))),s(X21,X25))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X26)))) )),
  inference(superposition,[],[f232,f206])).
fof(f38449,plain,(
  ( ! [X14,X12,X19,X17,X15,X13,X20,X18,X16] : (p(s(bool,'const.infer.pure_add_constraints_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X17))),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),'const.list.ZIP_1'(s('type.pair.prod'('type.list.list'('type.infer_t.infer_t'),'type.list.list'('type.infer_t.infer_t')),'const.pair.,_2'(s('type.list.list'('type.infer_t.infer_t'),X18),s('type.list.list'('type.infer_t.infer_t'),happ(s(fun(X14,'type.list.list'('type.infer_t.infer_t')),'_dst_x0x1_2'(s(fun(X12,'type.list.list'('type.infer_t.infer_t')),X13),s(fun(X14,X12),X15))),s(X14,X16))))))),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X19)))))) | s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'const.infer.Success_1'(s('type.one.one',X20))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X19))) != s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraints_3'(s('type.list.list'('type.infer_t.infer_t'),X18),s('type.list.list'('type.infer_t.infer_t'),happ(s(fun(X12,'type.list.list'('type.infer_t.infer_t')),X13),s(X12,happ(s(fun(X14,X12),X15),s(X14,X16))))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X17)))) )),
  inference(superposition,[],[f232,f206])).
fof(f38445,plain,(
  ( ! [X47,X45,X43,X41,X50,X48,X46,X44,X42,X51,X49] : (p(s(bool,'const.infer.pure_add_constraints_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X48))),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),'const.list.ZIP_1'(s('type.pair.prod'('type.list.list'('type.infer_t.infer_t'),'type.list.list'('type.infer_t.infer_t')),'const.pair.,_2'(s('type.list.list'('type.infer_t.infer_t'),happ(s(fun(X44,'type.list.list'('type.infer_t.infer_t')),'_dst_x0x1x0_3'(s(fun(X42,fun(X41,'type.list.list'('type.infer_t.infer_t'))),X43),s(fun(X44,X42),X45),s(X41,X47))),s(X44,X46))),s('type.list.list'('type.infer_t.infer_t'),X49))))),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X50)))))) | s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'const.infer.Success_1'(s('type.one.one',X51))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X50))) != s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraints_3'(s('type.list.list'('type.infer_t.infer_t'),happ(s(fun(X41,'type.list.list'('type.infer_t.infer_t')),happ(s(fun(X42,fun(X41,'type.list.list'('type.infer_t.infer_t'))),X43),s(X42,happ(s(fun(X44,X42),X45),s(X44,X46))))),s(X41,X47))),s('type.list.list'('type.infer_t.infer_t'),X49),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X48)))) )),
  inference(superposition,[],[f232,f221])).
fof(f38444,plain,(
  ( ! [X30,X39,X37,X35,X33,X31,X38,X36,X34,X32,X40] : (p(s(bool,'const.infer.pure_add_constraints_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X37))),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),'const.list.ZIP_1'(s('type.pair.prod'('type.list.list'('type.infer_t.infer_t'),'type.list.list'('type.infer_t.infer_t')),'const.pair.,_2'(s('type.list.list'('type.infer_t.infer_t'),happ(s(fun(X32,'type.list.list'('type.infer_t.infer_t')),happ(s(fun(X31,fun(X32,'type.list.list'('type.infer_t.infer_t'))),X33),s(X31,happ(s(fun(X30,X31),X34),s(X30,X36))))),s(X32,X35))),s('type.list.list'('type.infer_t.infer_t'),X38))))),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X39)))))) | s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'const.infer.Success_1'(s('type.one.one',X40))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X39))) != s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraints_3'(s('type.list.list'('type.infer_t.infer_t'),happ(s(fun(X30,'type.list.list'('type.infer_t.infer_t')),'_dst_x0x1x0_3'(s(fun(X31,fun(X32,'type.list.list'('type.infer_t.infer_t'))),X33),s(fun(X30,X31),X34),s(X32,X35))),s(X30,X36))),s('type.list.list'('type.infer_t.infer_t'),X38),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X37)))) )),
  inference(superposition,[],[f232,f221])).
fof(f38443,plain,(
  ( ! [X28,X26,X24,X23,X21,X29,X27,X25,X22] : (p(s(bool,'const.infer.pure_add_constraints_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X26))),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),'const.list.ZIP_1'(s('type.pair.prod'('type.list.list'('type.infer_t.infer_t'),'type.list.list'('type.infer_t.infer_t')),'const.pair.,_2'(s('type.list.list'('type.infer_t.infer_t'),happ(s(fun(X22,'type.list.list'('type.infer_t.infer_t')),X23),s(X22,happ(s(fun(X21,X22),X24),s(X21,X25))))),s('type.list.list'('type.infer_t.infer_t'),X27))))),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X28)))))) | s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'const.infer.Success_1'(s('type.one.one',X29))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X28))) != s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraints_3'(s('type.list.list'('type.infer_t.infer_t'),happ(s(fun(X21,'type.list.list'('type.infer_t.infer_t')),'_dst_x0x1_2'(s(fun(X22,'type.list.list'('type.infer_t.infer_t')),X23),s(fun(X21,X22),X24))),s(X21,X25))),s('type.list.list'('type.infer_t.infer_t'),X27),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X26)))) )),
  inference(superposition,[],[f232,f206])).
fof(f38442,plain,(
  ( ! [X14,X12,X19,X17,X15,X13,X20,X18,X16] : (p(s(bool,'const.infer.pure_add_constraints_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X17))),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),'const.list.ZIP_1'(s('type.pair.prod'('type.list.list'('type.infer_t.infer_t'),'type.list.list'('type.infer_t.infer_t')),'const.pair.,_2'(s('type.list.list'('type.infer_t.infer_t'),happ(s(fun(X14,'type.list.list'('type.infer_t.infer_t')),'_dst_x0x1_2'(s(fun(X12,'type.list.list'('type.infer_t.infer_t')),X13),s(fun(X14,X12),X15))),s(X14,X16))),s('type.list.list'('type.infer_t.infer_t'),X18))))),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X19)))))) | s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'const.infer.Success_1'(s('type.one.one',X20))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X19))) != s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraints_3'(s('type.list.list'('type.infer_t.infer_t'),happ(s(fun(X12,'type.list.list'('type.infer_t.infer_t')),X13),s(X12,happ(s(fun(X14,X12),X15),s(X14,X16))))),s('type.list.list'('type.infer_t.infer_t'),X18),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X17)))) )),
  inference(superposition,[],[f232,f206])).
fof(f38436,plain,(
  ( ! [X14,X21,X19,X17,X15,X22,X20,X18,X16] : (p(s(bool,'const.infer.pure_add_constraints_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),happ(s(fun(X15,'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X16),s(X15,happ(s(fun(X14,X15),X17),s(X14,X18))))))),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),'const.list.ZIP_1'(s('type.pair.prod'('type.list.list'('type.infer_t.infer_t'),'type.list.list'('type.infer_t.infer_t')),'const.pair.,_2'(s('type.list.list'('type.infer_t.infer_t'),X19),s('type.list.list'('type.infer_t.infer_t'),X20))))),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X21)))))) | s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'const.infer.Success_1'(s('type.one.one',X22))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X21))) != s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraints_3'(s('type.list.list'('type.infer_t.infer_t'),X19),s('type.list.list'('type.infer_t.infer_t'),X20),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),happ(s(fun(X14,'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'_dst_x0x1_2'(s(fun(X15,'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X16),s(fun(X14,X15),X17))),s(X14,X18)))))) )),
  inference(superposition,[],[f232,f206])).
fof(f38435,plain,(
  ( ! [X6,X12,X10,X8,X7,X5,X13,X11,X9] : (p(s(bool,'const.infer.pure_add_constraints_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),happ(s(fun(X7,'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'_dst_x0x1_2'(s(fun(X5,'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X6),s(fun(X7,X5),X8))),s(X7,X9))))),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),'const.list.ZIP_1'(s('type.pair.prod'('type.list.list'('type.infer_t.infer_t'),'type.list.list'('type.infer_t.infer_t')),'const.pair.,_2'(s('type.list.list'('type.infer_t.infer_t'),X10),s('type.list.list'('type.infer_t.infer_t'),X11))))),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X12)))))) | s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'const.infer.Success_1'(s('type.one.one',X13))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X12))) != s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraints_3'(s('type.list.list'('type.infer_t.infer_t'),X10),s('type.list.list'('type.infer_t.infer_t'),X11),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),happ(s(fun(X5,'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X6),s(X5,happ(s(fun(X7,X5),X8),s(X7,X9)))))))) )),
  inference(superposition,[],[f232,f206])).
fof(f37389,plain,(
  ( ! [X47,X45,X43,X54,X52,X50,X48,X46,X44,X42,X53,X51,X49] : (s('type.option.option'(X42),'const.option.SOME_1'(s(X42,X50))) != s('type.option.option'(X42),'const.semanticPrimitives.lookup_alist_mod_env_2'(s('type.ast.id'('type.list.list'('type.string.char')),X51),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X42)))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X42))),happ(s(fun(X46,'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X42)))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X42)))),'_dst_x0x1x0_3'(s(fun(X44,fun(X43,'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X42)))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X42))))),X45),s(fun(X46,X44),X47),s(X43,X49))),s(X46,X48))))) | s(X52,X53) != s(X52,X54) | s('type.pair.prod'('type.infer.exc'(X42,'type.list.list'('type.string.char')),X52),'const.pair.,_2'(s('type.infer.exc'(X42,'type.list.list'('type.string.char')),'const.infer.Success_1'(s(X42,X50))),s(X52,X54))) = s('type.pair.prod'('type.infer.exc'(X42,'type.list.list'('type.string.char')),X52),'const.infer.lookup_tenvC_st_ex_3'(s('type.ast.id'('type.list.list'('type.string.char')),X51),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X42)))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X42))),happ(s(fun(X43,'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X42)))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X42)))),happ(s(fun(X44,fun(X43,'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X42)))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X42))))),X45),s(X44,happ(s(fun(X46,X44),X47),s(X46,X48))))),s(X43,X49))),s(X52,X53)))) )),
  inference(superposition,[],[f201,f221])).
fof(f37388,plain,(
  ( ! [X30,X39,X37,X35,X33,X41,X31,X29,X38,X36,X34,X32,X40] : (s('type.option.option'(X29),'const.option.SOME_1'(s(X29,X37))) != s('type.option.option'(X29),'const.semanticPrimitives.lookup_alist_mod_env_2'(s('type.ast.id'('type.list.list'('type.string.char')),X38),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X29)))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X29))),happ(s(fun(X32,'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X29)))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X29)))),happ(s(fun(X31,fun(X32,'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X29)))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X29))))),X33),s(X31,happ(s(fun(X30,X31),X34),s(X30,X36))))),s(X32,X35))))) | s(X39,X40) != s(X39,X41) | s('type.pair.prod'('type.infer.exc'(X29,'type.list.list'('type.string.char')),X39),'const.pair.,_2'(s('type.infer.exc'(X29,'type.list.list'('type.string.char')),'const.infer.Success_1'(s(X29,X37))),s(X39,X41))) = s('type.pair.prod'('type.infer.exc'(X29,'type.list.list'('type.string.char')),X39),'const.infer.lookup_tenvC_st_ex_3'(s('type.ast.id'('type.list.list'('type.string.char')),X38),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X29)))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X29))),happ(s(fun(X30,'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X29)))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X29)))),'_dst_x0x1x0_3'(s(fun(X31,fun(X32,'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X29)))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X29))))),X33),s(fun(X30,X31),X34),s(X32,X35))),s(X30,X36))),s(X39,X40)))) )),
  inference(superposition,[],[f201,f221])).
fof(f37387,plain,(
  ( ! [X28,X26,X24,X23,X21,X19,X27,X25,X22,X20,X18] : (s('type.option.option'(X18),'const.option.SOME_1'(s(X18,X24))) != s('type.option.option'(X18),'const.semanticPrimitives.lookup_alist_mod_env_2'(s('type.ast.id'('type.list.list'('type.string.char')),X25),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X18)))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X18))),happ(s(fun(X20,'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X18)))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X18)))),X21),s(X20,happ(s(fun(X19,X20),X22),s(X19,X23))))))) | s(X26,X27) != s(X26,X28) | s('type.pair.prod'('type.infer.exc'(X18,'type.list.list'('type.string.char')),X26),'const.pair.,_2'(s('type.infer.exc'(X18,'type.list.list'('type.string.char')),'const.infer.Success_1'(s(X18,X24))),s(X26,X28))) = s('type.pair.prod'('type.infer.exc'(X18,'type.list.list'('type.string.char')),X26),'const.infer.lookup_tenvC_st_ex_3'(s('type.ast.id'('type.list.list'('type.string.char')),X25),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X18)))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X18))),happ(s(fun(X19,'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X18)))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X18)))),'_dst_x0x1_2'(s(fun(X20,'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X18)))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X18)))),X21),s(fun(X19,X20),X22))),s(X19,X23))),s(X26,X27)))) )),
  inference(superposition,[],[f201,f206])).
fof(f37386,plain,(
  ( ! [X14,X12,X10,X8,X17,X7,X15,X13,X11,X9,X16] : (s('type.option.option'(X7),'const.option.SOME_1'(s(X7,X13))) != s('type.option.option'(X7),'const.semanticPrimitives.lookup_alist_mod_env_2'(s('type.ast.id'('type.list.list'('type.string.char')),X14),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X7)))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X7))),happ(s(fun(X10,'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X7)))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X7)))),'_dst_x0x1_2'(s(fun(X8,'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X7)))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X7)))),X9),s(fun(X10,X8),X11))),s(X10,X12))))) | s(X15,X16) != s(X15,X17) | s('type.pair.prod'('type.infer.exc'(X7,'type.list.list'('type.string.char')),X15),'const.pair.,_2'(s('type.infer.exc'(X7,'type.list.list'('type.string.char')),'const.infer.Success_1'(s(X7,X13))),s(X15,X17))) = s('type.pair.prod'('type.infer.exc'(X7,'type.list.list'('type.string.char')),X15),'const.infer.lookup_tenvC_st_ex_3'(s('type.ast.id'('type.list.list'('type.string.char')),X14),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X7)))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X7))),happ(s(fun(X8,'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X7)))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X7)))),X9),s(X8,happ(s(fun(X10,X8),X11),s(X10,X12))))),s(X15,X16)))) )),
  inference(superposition,[],[f201,f206])).
fof(f37383,plain,(
  ( ! [X47,X45,X43,X54,X52,X50,X48,X46,X44,X42,X53,X51,X49] : (s('type.option.option'(X49),'const.option.SOME_1'(s(X49,X50))) != s('type.option.option'(X49),'const.semanticPrimitives.lookup_alist_mod_env_2'(s('type.ast.id'('type.list.list'('type.string.char')),happ(s(fun(X45,'type.ast.id'('type.list.list'('type.string.char'))),'_dst_x0x1x0_3'(s(fun(X43,fun(X42,'type.ast.id'('type.list.list'('type.string.char')))),X44),s(fun(X45,X43),X46),s(X42,X48))),s(X45,X47))),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X49)))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X49))),X51))) | s(X52,X53) != s(X52,X54) | s('type.pair.prod'('type.infer.exc'(X49,'type.list.list'('type.string.char')),X52),'const.pair.,_2'(s('type.infer.exc'(X49,'type.list.list'('type.string.char')),'const.infer.Success_1'(s(X49,X50))),s(X52,X54))) = s('type.pair.prod'('type.infer.exc'(X49,'type.list.list'('type.string.char')),X52),'const.infer.lookup_tenvC_st_ex_3'(s('type.ast.id'('type.list.list'('type.string.char')),happ(s(fun(X42,'type.ast.id'('type.list.list'('type.string.char'))),happ(s(fun(X43,fun(X42,'type.ast.id'('type.list.list'('type.string.char')))),X44),s(X43,happ(s(fun(X45,X43),X46),s(X45,X47))))),s(X42,X48))),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X49)))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X49))),X51),s(X52,X53)))) )),
  inference(superposition,[],[f201,f221])).
fof(f37382,plain,(
  ( ! [X30,X39,X37,X35,X33,X41,X31,X29,X38,X36,X34,X32,X40] : (s('type.option.option'(X36),'const.option.SOME_1'(s(X36,X37))) != s('type.option.option'(X36),'const.semanticPrimitives.lookup_alist_mod_env_2'(s('type.ast.id'('type.list.list'('type.string.char')),happ(s(fun(X31,'type.ast.id'('type.list.list'('type.string.char'))),happ(s(fun(X30,fun(X31,'type.ast.id'('type.list.list'('type.string.char')))),X32),s(X30,happ(s(fun(X29,X30),X33),s(X29,X35))))),s(X31,X34))),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X36)))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X36))),X38))) | s(X39,X40) != s(X39,X41) | s('type.pair.prod'('type.infer.exc'(X36,'type.list.list'('type.string.char')),X39),'const.pair.,_2'(s('type.infer.exc'(X36,'type.list.list'('type.string.char')),'const.infer.Success_1'(s(X36,X37))),s(X39,X41))) = s('type.pair.prod'('type.infer.exc'(X36,'type.list.list'('type.string.char')),X39),'const.infer.lookup_tenvC_st_ex_3'(s('type.ast.id'('type.list.list'('type.string.char')),happ(s(fun(X29,'type.ast.id'('type.list.list'('type.string.char'))),'_dst_x0x1x0_3'(s(fun(X30,fun(X31,'type.ast.id'('type.list.list'('type.string.char')))),X32),s(fun(X29,X30),X33),s(X31,X34))),s(X29,X35))),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X36)))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X36))),X38),s(X39,X40)))) )),
  inference(superposition,[],[f201,f221])).
fof(f37381,plain,(
  ( ! [X28,X26,X24,X23,X21,X19,X27,X25,X22,X20,X18] : (s('type.option.option'(X23),'const.option.SOME_1'(s(X23,X24))) != s('type.option.option'(X23),'const.semanticPrimitives.lookup_alist_mod_env_2'(s('type.ast.id'('type.list.list'('type.string.char')),happ(s(fun(X19,'type.ast.id'('type.list.list'('type.string.char'))),X20),s(X19,happ(s(fun(X18,X19),X21),s(X18,X22))))),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X23)))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X23))),X25))) | s(X26,X27) != s(X26,X28) | s('type.pair.prod'('type.infer.exc'(X23,'type.list.list'('type.string.char')),X26),'const.pair.,_2'(s('type.infer.exc'(X23,'type.list.list'('type.string.char')),'const.infer.Success_1'(s(X23,X24))),s(X26,X28))) = s('type.pair.prod'('type.infer.exc'(X23,'type.list.list'('type.string.char')),X26),'const.infer.lookup_tenvC_st_ex_3'(s('type.ast.id'('type.list.list'('type.string.char')),happ(s(fun(X18,'type.ast.id'('type.list.list'('type.string.char'))),'_dst_x0x1_2'(s(fun(X19,'type.ast.id'('type.list.list'('type.string.char'))),X20),s(fun(X18,X19),X21))),s(X18,X22))),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X23)))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X23))),X25),s(X26,X27)))) )),
  inference(superposition,[],[f201,f206])).
fof(f37380,plain,(
  ( ! [X14,X12,X10,X8,X17,X7,X15,X13,X11,X9,X16] : (s('type.option.option'(X12),'const.option.SOME_1'(s(X12,X13))) != s('type.option.option'(X12),'const.semanticPrimitives.lookup_alist_mod_env_2'(s('type.ast.id'('type.list.list'('type.string.char')),happ(s(fun(X9,'type.ast.id'('type.list.list'('type.string.char'))),'_dst_x0x1_2'(s(fun(X7,'type.ast.id'('type.list.list'('type.string.char'))),X8),s(fun(X9,X7),X10))),s(X9,X11))),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X12)))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X12))),X14))) | s(X15,X16) != s(X15,X17) | s('type.pair.prod'('type.infer.exc'(X12,'type.list.list'('type.string.char')),X15),'const.pair.,_2'(s('type.infer.exc'(X12,'type.list.list'('type.string.char')),'const.infer.Success_1'(s(X12,X13))),s(X15,X17))) = s('type.pair.prod'('type.infer.exc'(X12,'type.list.list'('type.string.char')),X15),'const.infer.lookup_tenvC_st_ex_3'(s('type.ast.id'('type.list.list'('type.string.char')),happ(s(fun(X7,'type.ast.id'('type.list.list'('type.string.char'))),X8),s(X7,happ(s(fun(X9,X7),X10),s(X9,X11))))),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X12)))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X12))),X14),s(X15,X16)))) )),
  inference(superposition,[],[f201,f206])).
fof(f37354,plain,(
  ( ! [X308,X304,X306,X303,X309,X305,X307] : (s('type.option.option'('type.one.one'),'const.option.SOME_1'(s('type.one.one',X304))) != s('type.option.option'('type.one.one'),'const.semanticPrimitives.lookup_alist_mod_env_2'(s('type.ast.id'('type.list.list'('type.string.char')),X305),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.one.one')))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.one.one'))),X306))) | s(X307,X308) != s(X307,X309) | s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),X307),'const.pair.,_2'(s('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'const.infer.Success_1'(s('type.one.one',X303))),s(X307,X309))) = s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),X307),'const.infer.lookup_tenvC_st_ex_3'(s('type.ast.id'('type.list.list'('type.string.char')),X305),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.one.one')))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.one.one'))),X306),s(X307,X308)))) )),
  inference(superposition,[],[f201,f258])).
fof(f37345,plain,(
  ( ! [X231,X229,X227,X225,X235,X233,X230,X228,X226,X236,X234,X232] : (s('type.option.option'(fun(X225,fun(X226,fun(X227,fun(X228,fun(X229,'type.one.one')))))),'const.option.SOME_1'(s(fun(X225,fun(X226,fun(X227,fun(X228,fun(X229,'type.one.one'))))),X231))) != s('type.option.option'(fun(X225,fun(X226,fun(X227,fun(X228,fun(X229,'type.one.one')))))),'const.semanticPrimitives.lookup_alist_mod_env_2'(s('type.ast.id'('type.list.list'('type.string.char')),X232),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),fun(X225,fun(X226,fun(X227,fun(X228,fun(X229,'type.one.one'))))))))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),fun(X225,fun(X226,fun(X227,fun(X228,fun(X229,'type.one.one')))))))),X233))) | s(X234,X235) != s(X234,X236) | s('type.pair.prod'('type.infer.exc'(fun(X225,fun(X226,fun(X227,fun(X228,fun(X229,'type.one.one'))))),'type.list.list'('type.string.char')),X234),'const.pair.,_2'(s('type.infer.exc'(fun(X225,fun(X226,fun(X227,fun(X228,fun(X229,'type.one.one'))))),'type.list.list'('type.string.char')),'const.infer.Success_1'(s(fun(X225,fun(X226,fun(X227,fun(X228,fun(X229,'type.one.one'))))),X230))),s(X234,X236))) = s('type.pair.prod'('type.infer.exc'(fun(X225,fun(X226,fun(X227,fun(X228,fun(X229,'type.one.one'))))),'type.list.list'('type.string.char')),X234),'const.infer.lookup_tenvC_st_ex_3'(s('type.ast.id'('type.list.list'('type.string.char')),X232),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),fun(X225,fun(X226,fun(X227,fun(X228,fun(X229,'type.one.one'))))))))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),fun(X225,fun(X226,fun(X227,fun(X228,fun(X229,'type.one.one')))))))),X233),s(X234,X235)))) )),
  inference(superposition,[],[f201,f815])).
fof(f37343,plain,(
  ( ! [X212,X210,X208,X206,X204,X213,X211,X209,X207,X205,X203] : (s('type.option.option'(fun(X203,fun(X204,fun(X205,fun(X206,'type.one.one'))))),'const.option.SOME_1'(s(fun(X203,fun(X204,fun(X205,fun(X206,'type.one.one')))),X208))) != s('type.option.option'(fun(X203,fun(X204,fun(X205,fun(X206,'type.one.one'))))),'const.semanticPrimitives.lookup_alist_mod_env_2'(s('type.ast.id'('type.list.list'('type.string.char')),X209),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),fun(X203,fun(X204,fun(X205,fun(X206,'type.one.one')))))))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),fun(X203,fun(X204,fun(X205,fun(X206,'type.one.one'))))))),X210))) | s(X211,X212) != s(X211,X213) | s('type.pair.prod'('type.infer.exc'(fun(X203,fun(X204,fun(X205,fun(X206,'type.one.one')))),'type.list.list'('type.string.char')),X211),'const.pair.,_2'(s('type.infer.exc'(fun(X203,fun(X204,fun(X205,fun(X206,'type.one.one')))),'type.list.list'('type.string.char')),'const.infer.Success_1'(s(fun(X203,fun(X204,fun(X205,fun(X206,'type.one.one')))),X207))),s(X211,X213))) = s('type.pair.prod'('type.infer.exc'(fun(X203,fun(X204,fun(X205,fun(X206,'type.one.one')))),'type.list.list'('type.string.char')),X211),'const.infer.lookup_tenvC_st_ex_3'(s('type.ast.id'('type.list.list'('type.string.char')),X209),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),fun(X203,fun(X204,fun(X205,fun(X206,'type.one.one')))))))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),fun(X203,fun(X204,fun(X205,fun(X206,'type.one.one'))))))),X210),s(X211,X212)))) )),
  inference(superposition,[],[f201,f787])).
fof(f37341,plain,(
  ( ! [X191,X189,X187,X185,X192,X190,X188,X186,X184,X183] : (s('type.option.option'(fun(X183,fun(X184,fun(X185,'type.one.one')))),'const.option.SOME_1'(s(fun(X183,fun(X184,fun(X185,'type.one.one'))),X187))) != s('type.option.option'(fun(X183,fun(X184,fun(X185,'type.one.one')))),'const.semanticPrimitives.lookup_alist_mod_env_2'(s('type.ast.id'('type.list.list'('type.string.char')),X188),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),fun(X183,fun(X184,fun(X185,'type.one.one'))))))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),fun(X183,fun(X184,fun(X185,'type.one.one')))))),X189))) | s(X190,X191) != s(X190,X192) | s('type.pair.prod'('type.infer.exc'(fun(X183,fun(X184,fun(X185,'type.one.one'))),'type.list.list'('type.string.char')),X190),'const.pair.,_2'(s('type.infer.exc'(fun(X183,fun(X184,fun(X185,'type.one.one'))),'type.list.list'('type.string.char')),'const.infer.Success_1'(s(fun(X183,fun(X184,fun(X185,'type.one.one'))),X186))),s(X190,X192))) = s('type.pair.prod'('type.infer.exc'(fun(X183,fun(X184,fun(X185,'type.one.one'))),'type.list.list'('type.string.char')),X190),'const.infer.lookup_tenvC_st_ex_3'(s('type.ast.id'('type.list.list'('type.string.char')),X188),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),fun(X183,fun(X184,fun(X185,'type.one.one'))))))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),fun(X183,fun(X184,fun(X185,'type.one.one')))))),X189),s(X190,X191)))) )),
  inference(superposition,[],[f201,f752])).
fof(f37337,plain,(
  ( ! [X154,X152,X151,X149,X147,X155,X153,X150,X148] : (s('type.option.option'(fun(X147,fun(X148,'type.one.one'))),'const.option.SOME_1'(s(fun(X147,fun(X148,'type.one.one')),X150))) != s('type.option.option'(fun(X147,fun(X148,'type.one.one'))),'const.semanticPrimitives.lookup_alist_mod_env_2'(s('type.ast.id'('type.list.list'('type.string.char')),X151),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),fun(X147,fun(X148,'type.one.one')))))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),fun(X147,fun(X148,'type.one.one'))))),X152))) | s(X153,X154) != s(X153,X155) | s('type.pair.prod'('type.infer.exc'(fun(X147,fun(X148,'type.one.one')),'type.list.list'('type.string.char')),X153),'const.pair.,_2'(s('type.infer.exc'(fun(X147,fun(X148,'type.one.one')),'type.list.list'('type.string.char')),'const.infer.Success_1'(s(fun(X147,fun(X148,'type.one.one')),X149))),s(X153,X155))) = s('type.pair.prod'('type.infer.exc'(fun(X147,fun(X148,'type.one.one')),'type.list.list'('type.string.char')),X153),'const.infer.lookup_tenvC_st_ex_3'(s('type.ast.id'('type.list.list'('type.string.char')),X151),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),fun(X147,fun(X148,'type.one.one')))))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),fun(X147,fun(X148,'type.one.one'))))),X152),s(X153,X154)))) )),
  inference(superposition,[],[f201,f724])).
fof(f37333,plain,(
  ( ! [X121,X118,X116,X122,X120,X119,X117,X115] : (s('type.option.option'(fun(X115,'type.one.one')),'const.option.SOME_1'(s(fun(X115,'type.one.one'),X117))) != s('type.option.option'(fun(X115,'type.one.one')),'const.semanticPrimitives.lookup_alist_mod_env_2'(s('type.ast.id'('type.list.list'('type.string.char')),X118),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),fun(X115,'type.one.one'))))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),fun(X115,'type.one.one')))),X119))) | s(X120,X121) != s(X120,X122) | s('type.pair.prod'('type.infer.exc'(fun(X115,'type.one.one'),'type.list.list'('type.string.char')),X120),'const.pair.,_2'(s('type.infer.exc'(fun(X115,'type.one.one'),'type.list.list'('type.string.char')),'const.infer.Success_1'(s(fun(X115,'type.one.one'),X116))),s(X120,X122))) = s('type.pair.prod'('type.infer.exc'(fun(X115,'type.one.one'),'type.list.list'('type.string.char')),X120),'const.infer.lookup_tenvC_st_ex_3'(s('type.ast.id'('type.list.list'('type.string.char')),X118),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),fun(X115,'type.one.one'))))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),fun(X115,'type.one.one')))),X119),s(X120,X121)))) )),
  inference(superposition,[],[f201,f605])).
fof(f37329,plain,(
  ( ! [X80,X78,X83,X81,X79,X84,X82] : (s('type.option.option'(bool),'const.option.SOME_1'(s(bool,X79))) != s('type.option.option'(bool),'const.semanticPrimitives.lookup_alist_mod_env_2'(s('type.ast.id'('type.list.list'('type.string.char')),X80),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),bool)))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),bool))),X81))) | s(X82,X83) != s(X82,X84) | s('type.pair.prod'('type.infer.exc'(bool,'type.list.list'('type.string.char')),X82),'const.pair.,_2'(s('type.infer.exc'(bool,'type.list.list'('type.string.char')),'const.infer.Success_1'(s(bool,X78))),s(X82,X84))) = s('type.pair.prod'('type.infer.exc'(bool,'type.list.list'('type.string.char')),X82),'const.infer.lookup_tenvC_st_ex_3'(s('type.ast.id'('type.list.list'('type.string.char')),X80),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),bool)))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),bool))),X81),s(X82,X83))) | s(bool,'T_0') = s(bool,X79) | s(bool,'T_0') = s(bool,X78)) )),
  inference(superposition,[],[f201,f272])).
fof(f37328,plain,(
  ( ! [X76,X74,X72,X71,X77,X75,X73] : (s('type.option.option'(bool),'const.option.SOME_1'(s(bool,'T_0'))) != s('type.option.option'(bool),'const.semanticPrimitives.lookup_alist_mod_env_2'(s('type.ast.id'('type.list.list'('type.string.char')),X72),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),bool)))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),bool))),X73))) | s(X74,X75) != s(X74,X76) | s('type.pair.prod'('type.infer.exc'(bool,'type.list.list'('type.string.char')),X74),'const.pair.,_2'(s('type.infer.exc'(bool,'type.list.list'('type.string.char')),'const.infer.Success_1'(s(bool,X71))),s(X74,X76))) = s('type.pair.prod'('type.infer.exc'(bool,'type.list.list'('type.string.char')),X74),'const.infer.lookup_tenvC_st_ex_3'(s('type.ast.id'('type.list.list'('type.string.char')),X72),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),bool)))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),bool))),X73),s(X74,X75))) | s(bool,X71) = s(bool,X77) | s(bool,'T_0') = s(bool,X77)) )),
  inference(superposition,[],[f201,f272])).
fof(f37327,plain,(
  ( ! [X70,X68,X66,X69,X67,X65] : (s('type.option.option'(bool),'const.option.SOME_1'(s(bool,'F_0'))) != s('type.option.option'(bool),'const.semanticPrimitives.lookup_alist_mod_env_2'(s('type.ast.id'('type.list.list'('type.string.char')),X66),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),bool)))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),bool))),X67))) | s(X68,X69) != s(X68,X70) | s('type.pair.prod'('type.infer.exc'(bool,'type.list.list'('type.string.char')),X68),'const.pair.,_2'(s('type.infer.exc'(bool,'type.list.list'('type.string.char')),'const.infer.Success_1'(s(bool,X65))),s(X68,X70))) = s('type.pair.prod'('type.infer.exc'(bool,'type.list.list'('type.string.char')),X68),'const.infer.lookup_tenvC_st_ex_3'(s('type.ast.id'('type.list.list'('type.string.char')),X66),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),bool)))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),bool))),X67),s(X68,X69))) | s(bool,'T_0') = s(bool,X65)) )),
  inference(superposition,[],[f201,f167])).
fof(f37325,plain,(
  ( ! [X47,X45,X43,X54,X52,X50,X48,X46,X44,X42,X53,X51,X49] : (s('type.option.option'(X42),'const.semanticPrimitives.lookup_alist_mod_env_2'(s('type.ast.id'('type.list.list'('type.string.char')),X50),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X42)))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X42))),X51))) != s('type.option.option'(X42),'const.option.SOME_1'(s(X42,happ(s(fun(X46,X42),'_dst_x0x1x0_3'(s(fun(X44,fun(X43,X42)),X45),s(fun(X46,X44),X47),s(X43,X49))),s(X46,X48))))) | s(X52,X53) != s(X52,X54) | s('type.pair.prod'('type.infer.exc'(X42,'type.list.list'('type.string.char')),X52),'const.infer.lookup_tenvC_st_ex_3'(s('type.ast.id'('type.list.list'('type.string.char')),X50),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X42)))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X42))),X51),s(X52,X53))) = s('type.pair.prod'('type.infer.exc'(X42,'type.list.list'('type.string.char')),X52),'const.pair.,_2'(s('type.infer.exc'(X42,'type.list.list'('type.string.char')),'const.infer.Success_1'(s(X42,happ(s(fun(X43,X42),happ(s(fun(X44,fun(X43,X42)),X45),s(X44,happ(s(fun(X46,X44),X47),s(X46,X48))))),s(X43,X49))))),s(X52,X54)))) )),
  inference(superposition,[],[f201,f221])).
fof(f37324,plain,(
  ( ! [X30,X39,X37,X35,X33,X41,X31,X29,X38,X36,X34,X32,X40] : (s('type.option.option'(X29),'const.semanticPrimitives.lookup_alist_mod_env_2'(s('type.ast.id'('type.list.list'('type.string.char')),X37),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X29)))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X29))),X38))) != s('type.option.option'(X29),'const.option.SOME_1'(s(X29,happ(s(fun(X32,X29),happ(s(fun(X31,fun(X32,X29)),X33),s(X31,happ(s(fun(X30,X31),X34),s(X30,X36))))),s(X32,X35))))) | s(X39,X40) != s(X39,X41) | s('type.pair.prod'('type.infer.exc'(X29,'type.list.list'('type.string.char')),X39),'const.infer.lookup_tenvC_st_ex_3'(s('type.ast.id'('type.list.list'('type.string.char')),X37),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X29)))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X29))),X38),s(X39,X40))) = s('type.pair.prod'('type.infer.exc'(X29,'type.list.list'('type.string.char')),X39),'const.pair.,_2'(s('type.infer.exc'(X29,'type.list.list'('type.string.char')),'const.infer.Success_1'(s(X29,happ(s(fun(X30,X29),'_dst_x0x1x0_3'(s(fun(X31,fun(X32,X29)),X33),s(fun(X30,X31),X34),s(X32,X35))),s(X30,X36))))),s(X39,X41)))) )),
  inference(superposition,[],[f201,f221])).
fof(f37323,plain,(
  ( ! [X28,X26,X24,X23,X21,X19,X27,X25,X22,X20,X18] : (s('type.option.option'(X18),'const.option.SOME_1'(s(X18,happ(s(fun(X20,X18),X21),s(X20,happ(s(fun(X19,X20),X22),s(X19,X23))))))) != s('type.option.option'(X18),'const.semanticPrimitives.lookup_alist_mod_env_2'(s('type.ast.id'('type.list.list'('type.string.char')),X24),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X18)))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X18))),X25))) | s(X26,X27) != s(X26,X28) | s('type.pair.prod'('type.infer.exc'(X18,'type.list.list'('type.string.char')),X26),'const.infer.lookup_tenvC_st_ex_3'(s('type.ast.id'('type.list.list'('type.string.char')),X24),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X18)))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X18))),X25),s(X26,X27))) = s('type.pair.prod'('type.infer.exc'(X18,'type.list.list'('type.string.char')),X26),'const.pair.,_2'(s('type.infer.exc'(X18,'type.list.list'('type.string.char')),'const.infer.Success_1'(s(X18,happ(s(fun(X19,X18),'_dst_x0x1_2'(s(fun(X20,X18),X21),s(fun(X19,X20),X22))),s(X19,X23))))),s(X26,X28)))) )),
  inference(superposition,[],[f201,f206])).
fof(f37322,plain,(
  ( ! [X14,X12,X10,X8,X17,X7,X15,X13,X11,X9,X16] : (s('type.option.option'(X7),'const.option.SOME_1'(s(X7,happ(s(fun(X10,X7),'_dst_x0x1_2'(s(fun(X8,X7),X9),s(fun(X10,X8),X11))),s(X10,X12))))) != s('type.option.option'(X7),'const.semanticPrimitives.lookup_alist_mod_env_2'(s('type.ast.id'('type.list.list'('type.string.char')),X13),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X7)))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X7))),X14))) | s(X15,X16) != s(X15,X17) | s('type.pair.prod'('type.infer.exc'(X7,'type.list.list'('type.string.char')),X15),'const.infer.lookup_tenvC_st_ex_3'(s('type.ast.id'('type.list.list'('type.string.char')),X13),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X7)))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X7))),X14),s(X15,X16))) = s('type.pair.prod'('type.infer.exc'(X7,'type.list.list'('type.string.char')),X15),'const.pair.,_2'(s('type.infer.exc'(X7,'type.list.list'('type.string.char')),'const.infer.Success_1'(s(X7,happ(s(fun(X8,X7),X9),s(X8,happ(s(fun(X10,X8),X11),s(X10,X12))))))),s(X15,X17)))) )),
  inference(superposition,[],[f201,f206])).
fof(f37170,plain,(
  ( ! [X6,X4,X2,X0,X12,X10,X8,X7,X5,X3,X1,X11,X9] : (s('type.pair.prod'('type.infer.exc'(X0,X1),X2),'const.pair.,_2'(s('type.infer.exc'(X0,X1),'const.infer.Success_1'(s(X0,X11))),s(X2,X12))) != s('type.pair.prod'('type.infer.exc'(X0,X1),X2),happ(s(fun(X8,'type.pair.prod'('type.infer.exc'(X0,X1),X2)),'_dst_x0x1_2'(s(fun(X3,'type.pair.prod'('type.infer.exc'(X0,X1),X2)),'const.option.option_CASE_3'(s('type.option.option'(X4),X5),s(fun(X3,'type.pair.prod'('type.infer.exc'(X0,X1),X2)),X6),s(fun(X4,fun(X3,'type.pair.prod'('type.infer.exc'(X0,X1),X2))),X7))),s(fun(X8,X3),X9))),s(X8,X10))) | s('type.option.option'(X4),'const.option.NONE_0') = s('type.option.option'(X4),X5) | s('type.option.option'(X4),X5) = s('type.option.option'(X4),'const.option.SOME_1'(s(X4,sK9(X12,happ(s(fun(X8,X3),X9),s(X8,X10)),X11,X7,X6,X5,X2,X0,X1,X3,X4))))) )),
  inference(superposition,[],[f234,f206])).
fof(f37169,plain,(
  ( ! [X819,X817,X810,X808,X814,X812,X818,X816,X811,X809,X815,X813] : (s('type.pair.prod'('type.infer.exc'(X811,X812),X813),'const.pair.,_2'(s('type.infer.exc'(X811,X812),'const.infer.Success_1'(s(X811,X814))),s(X813,X815))) != s('type.pair.prod'('type.infer.exc'(X811,X812),X813),happ(s(fun('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X808),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'type.pair.prod'('type.infer.exc'(X811,X812),X813)),'const.option.option_CASE_3'(s('type.option.option'(X816),X817),s(fun('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X808),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'type.pair.prod'('type.infer.exc'(X811,X812),X813)),X818),s(fun(X816,fun('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X808),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'type.pair.prod'('type.infer.exc'(X811,X812),X813))),X819))),s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X808),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.apply_subst_2'(s('type.infer_t.infer_t',X809),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X810))))) | s('type.option.option'(X816),'const.option.NONE_0') = s('type.option.option'(X816),X817) | s('type.option.option'(X816),X817) = s('type.option.option'(X816),'const.option.SOME_1'(s(X816,sK9(X815,happ(s(fun('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X808),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.infer.apply_subst_1'(s('type.infer_t.infer_t',X809))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X810)),X814,X819,X818,X817,X813,X811,X812,'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X808),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X816))))) )),
  inference(superposition,[],[f234,f171])).
fof(f37168,plain,(
  ( ! [X798,X796,X802,X800,X806,X804,X799,X797,X803,X801,X807,X805] : (s('type.pair.prod'('type.infer.exc'(X799,X800),X801),'const.pair.,_2'(s('type.infer.exc'(X799,X800),'const.infer.Success_1'(s(X799,X802))),s(X801,X803))) != s('type.pair.prod'('type.infer.exc'(X799,X800),X801),happ(s(fun('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X796),'type.infer.infer_st'(X797)),'type.pair.prod'('type.infer.exc'(X799,X800),X801)),'const.option.option_CASE_3'(s('type.option.option'(X804),X805),s(fun('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X796),'type.infer.infer_st'(X797)),'type.pair.prod'('type.infer.exc'(X799,X800),X801)),X806),s(fun(X804,fun('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X796),'type.infer.infer_st'(X797)),'type.pair.prod'('type.infer.exc'(X799,X800),X801))),X807))),s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X796),'type.infer.infer_st'(X797)),'const.infer.fresh_uvar_1'(s('type.infer.infer_st'(X797),X798))))) | s('type.option.option'(X804),'const.option.NONE_0') = s('type.option.option'(X804),X805) | s('type.option.option'(X804),X805) = s('type.option.option'(X804),'const.option.SOME_1'(s(X804,sK9(X803,happ(s(fun('type.infer.infer_st'(X797),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X796),'type.infer.infer_st'(X797))),'const.infer.fresh_uvar_0'),s('type.infer.infer_st'(X797),X798)),X802,X807,X806,X805,X801,X799,X800,'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X796),'type.infer.infer_st'(X797)),X804))))) )),
  inference(superposition,[],[f234,f179])).
fof(f37162,plain,(
  ( ! [X736,X732,X734,X728,X730,X726,X737,X733,X735,X729,X731,X725,X727] : (s('type.pair.prod'('type.infer.exc'(X729,X730),X731),'const.pair.,_2'(s('type.infer.exc'(X729,X730),'const.infer.Success_1'(s(X729,X732))),s(X731,X733))) != s('type.pair.prod'('type.infer.exc'(X729,X730),X731),happ(s(fun('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X725),'type.infer.infer_st'(X726)),'type.pair.prod'('type.infer.exc'(X729,X730),X731)),'const.option.option_CASE_3'(s('type.option.option'(X734),X735),s(fun('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X725),'type.infer.infer_st'(X726)),'type.pair.prod'('type.infer.exc'(X729,X730),X731)),X736),s(fun(X734,fun('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X725),'type.infer.infer_st'(X726)),'type.pair.prod'('type.infer.exc'(X729,X730),X731))),X737))),s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X725),'type.infer.infer_st'(X726)),'const.infer.n_fresh_uvar_2'(s('type.num.num',X727),s('type.infer.infer_st'(X726),X728))))) | s('type.option.option'(X734),'const.option.NONE_0') = s('type.option.option'(X734),X735) | s('type.option.option'(X734),X735) = s('type.option.option'(X734),'const.option.SOME_1'(s(X734,sK9(X733,happ(s(fun('type.infer.infer_st'(X726),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X725),'type.infer.infer_st'(X726))),happ(s(fun('type.num.num',fun('type.infer.infer_st'(X726),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X725),'type.infer.infer_st'(X726)))),'const.infer.n_fresh_uvar_0'),s('type.num.num',X727))),s('type.infer.infer_st'(X726),X728)),X732,X737,X736,X735,X731,X729,X730,'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X725),'type.infer.infer_st'(X726)),X734))))) )),
  inference(superposition,[],[f234,f181])).
fof(f37161,plain,(
  ( ! [X724,X720,X722,X716,X718,X721,X723,X717,X719] : (s('type.pair.prod'('type.infer.exc'(X716,X717),X718),'const.pair.,_2'(s('type.infer.exc'(X716,X717),'const.infer.Success_1'(s(X716,X719))),s(X718,X720))) != s('type.pair.prod'('type.infer.exc'(X716,X717),X718),happ(s(fun('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'type.pair.prod'('type.infer.exc'(X716,X717),X718)),'const.option.option_CASE_3'(s('type.option.option'(X721),X722),s(fun('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'type.pair.prod'('type.infer.exc'(X716,X717),X718)),X723),s(fun(X721,fun('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'type.pair.prod'('type.infer.exc'(X716,X717),X718))),X724))),s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraints_3'(s('type.list.list'('type.infer_t.infer_t'),sK0),s('type.list.list'('type.infer_t.infer_t'),sK1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))))) | s('type.option.option'(X721),'const.option.NONE_0') = s('type.option.option'(X721),X722) | s('type.option.option'(X721),X722) = s('type.option.option'(X721),'const.option.SOME_1'(s(X721,sK9(X720,'const.pair.,_2'(s('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'const.infer.Success_1'(s('type.one.one','const.one.one_0'))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK3)),X719,X724,X723,X722,X718,X716,X717,'type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X721))))) ) | $spl0),
  inference(superposition,[],[f234,f29772])).
fof(f37160,plain,(
  ( ! [X707,X705,X712,X714,X708,X710,X702,X704,X706,X713,X715,X709,X711,X703] : (s('type.pair.prod'('type.infer.exc'(X707,X708),X709),'const.pair.,_2'(s('type.infer.exc'(X707,X708),'const.infer.Success_1'(s(X707,X710))),s(X709,X711))) != s('type.pair.prod'('type.infer.exc'(X707,X708),X709),happ(s(fun('type.pair.prod'('type.infer.exc'('type.one.one',X702),X703),'type.pair.prod'('type.infer.exc'(X707,X708),X709)),'const.option.option_CASE_3'(s('type.option.option'(X712),X713),s(fun('type.pair.prod'('type.infer.exc'('type.one.one',X702),X703),'type.pair.prod'('type.infer.exc'(X707,X708),X709)),X714),s(fun(X712,fun('type.pair.prod'('type.infer.exc'('type.one.one',X702),X703),'type.pair.prod'('type.infer.exc'(X707,X708),X709))),X715))),s('type.pair.prod'('type.infer.exc'('type.one.one',X702),X703),'const.infer.guard_3'(s(bool,X704),s(X702,X705),s(X703,X706))))) | s('type.option.option'(X712),'const.option.NONE_0') = s('type.option.option'(X712),X713) | s('type.option.option'(X712),X713) = s('type.option.option'(X712),'const.option.SOME_1'(s(X712,sK9(X711,happ(s(fun(X703,'type.pair.prod'('type.infer.exc'('type.one.one',X702),X703)),'const.infer.guard_2'(s(bool,X704),s(X702,X705))),s(X703,X706)),X710,X715,X714,X713,X709,X707,X708,'type.pair.prod'('type.infer.exc'('type.one.one',X702),X703),X712))))) )),
  inference(superposition,[],[f234,f183])).
fof(f37154,plain,(
  ( ! [X639,X633,X635,X629,X631,X640,X642,X636,X638,X632,X634,X628,X630,X641,X643,X637] : (s('type.pair.prod'('type.infer.exc'(X635,X636),X637),'const.pair.,_2'(s('type.infer.exc'(X635,X636),'const.infer.Success_1'(s(X635,X638))),s(X637,X639))) != s('type.pair.prod'('type.infer.exc'(X635,X636),X637),happ(s(fun('type.pair.prod'('type.infer.exc'(X628,'type.list.list'('type.string.char')),X629),'type.pair.prod'('type.infer.exc'(X635,X636),X637)),'const.option.option_CASE_3'(s('type.option.option'(X640),X641),s(fun('type.pair.prod'('type.infer.exc'(X628,'type.list.list'('type.string.char')),X629),'type.pair.prod'('type.infer.exc'(X635,X636),X637)),X642),s(fun(X640,fun('type.pair.prod'('type.infer.exc'(X628,'type.list.list'('type.string.char')),X629),'type.pair.prod'('type.infer.exc'(X635,X636),X637))),X643))),s('type.pair.prod'('type.infer.exc'(X628,'type.list.list'('type.string.char')),X629),'const.infer.lookup_st_ex_4'(s(fun(X630,'type.list.list'('type.string.char')),X631),s(X630,X632),s('type.list.list'('type.pair.prod'(X630,X628)),X633),s(X629,X634))))) | s('type.option.option'(X640),'const.option.NONE_0') = s('type.option.option'(X640),X641) | s('type.option.option'(X640),X641) = s('type.option.option'(X640),'const.option.SOME_1'(s(X640,sK9(X639,happ(s(fun(X629,'type.pair.prod'('type.infer.exc'(X628,'type.list.list'('type.string.char')),X629)),'const.infer.lookup_st_ex_3'(s(fun(X630,'type.list.list'('type.string.char')),X631),s(X630,X632),s('type.list.list'('type.pair.prod'(X630,X628)),X633))),s(X629,X634)),X638,X643,X642,X641,X637,X635,X636,'type.pair.prod'('type.infer.exc'(X628,'type.list.list'('type.string.char')),X629),X640))))) )),
  inference(superposition,[],[f234,f207])).
fof(f37153,plain,(
  ( ! [X625,X627,X621,X623,X617,X619,X613,X615,X624,X626,X620,X622,X616,X618,X612,X614] : (s('type.pair.prod'('type.infer.exc'(X619,X620),X621),'const.pair.,_2'(s('type.infer.exc'(X619,X620),'const.infer.Success_1'(s(X619,X622))),s(X621,X623))) != s('type.pair.prod'('type.infer.exc'(X619,X620),X621),happ(s(fun('type.pair.prod'('type.infer.exc'(X612,X613),X614),'type.pair.prod'('type.infer.exc'(X619,X620),X621)),'const.option.option_CASE_3'(s('type.option.option'(X624),X625),s(fun('type.pair.prod'('type.infer.exc'(X612,X613),X614),'type.pair.prod'('type.infer.exc'(X619,X620),X621)),X626),s(fun(X624,fun('type.pair.prod'('type.infer.exc'(X612,X613),X614),'type.pair.prod'('type.infer.exc'(X619,X620),X621))),X627))),s('type.pair.prod'('type.infer.exc'(X612,X613),X614),'const.infer.st_ex_bind_3'(s(fun(X614,'type.pair.prod'('type.infer.exc'(X615,X613),X614)),X616),s(fun(X615,fun(X614,'type.pair.prod'('type.infer.exc'(X612,X613),X614))),X617),s(X614,X618))))) | s('type.option.option'(X624),'const.option.NONE_0') = s('type.option.option'(X624),X625) | s('type.option.option'(X624),X625) = s('type.option.option'(X624),'const.option.SOME_1'(s(X624,sK9(X623,happ(s(fun(X614,'type.pair.prod'('type.infer.exc'(X612,X613),X614)),'const.infer.st_ex_bind_2'(s(fun(X614,'type.pair.prod'('type.infer.exc'(X615,X613),X614)),X616),s(fun(X615,fun(X614,'type.pair.prod'('type.infer.exc'(X612,X613),X614))),X617))),s(X614,X618)),X622,X627,X626,X625,X621,X619,X620,'type.pair.prod'('type.infer.exc'(X612,X613),X614),X624))))) )),
  inference(superposition,[],[f234,f254])).
fof(f37152,plain,(
  ( ! [X606,X600,X610,X602,X598,X609,X605,X607,X611,X603,X601,X599,X608,X604] : (s('type.pair.prod'('type.infer.exc'(X603,X604),X605),'const.pair.,_2'(s('type.infer.exc'(X603,X604),'const.infer.Success_1'(s(X603,X606))),s(X605,X607))) != s('type.pair.prod'('type.infer.exc'(X603,X604),X605),happ(s(fun('type.pair.prod'('type.infer.exc'(X598,X599),X600),'type.pair.prod'('type.infer.exc'(X603,X604),X605)),'const.option.option_CASE_3'(s('type.option.option'(X608),X609),s(fun('type.pair.prod'('type.infer.exc'(X598,X599),X600),'type.pair.prod'('type.infer.exc'(X603,X604),X605)),X610),s(fun(X608,fun('type.pair.prod'('type.infer.exc'(X598,X599),X600),'type.pair.prod'('type.infer.exc'(X603,X604),X605))),X611))),s('type.pair.prod'('type.infer.exc'(X598,X599),X600),'const.infer.st_ex_return_2'(s(X598,X601),s(X600,X602))))) | s('type.option.option'(X608),'const.option.NONE_0') = s('type.option.option'(X608),X609) | s('type.option.option'(X608),X609) = s('type.option.option'(X608),'const.option.SOME_1'(s(X608,sK9(X607,happ(s(fun(X600,'type.pair.prod'('type.infer.exc'(X598,X599),X600)),happ(s(fun(X598,fun(X600,'type.pair.prod'('type.infer.exc'(X598,X599),X600))),'const.infer.st_ex_return_0'),s(X598,X601))),s(X600,X602)),X606,X611,X610,X609,X605,X603,X604,'type.pair.prod'('type.infer.exc'(X598,X599),X600),X608))))) )),
  inference(superposition,[],[f234,f205])).
fof(f37151,plain,(
  ( ! [X596,X592,X594,X588,X590,X584,X586,X597,X593,X595,X589,X591,X585,X587] : (s('type.pair.prod'('type.infer.exc'(X589,X590),X591),'const.pair.,_2'(s('type.infer.exc'(X589,X590),'const.infer.Success_1'(s(X589,X592))),s(X591,X593))) != s('type.pair.prod'('type.infer.exc'(X589,X590),X591),happ(s(fun('type.pair.prod'('type.infer.exc'(X584,X585),X586),'type.pair.prod'('type.infer.exc'(X589,X590),X591)),'const.option.option_CASE_3'(s('type.option.option'(X594),X595),s(fun('type.pair.prod'('type.infer.exc'(X584,X585),X586),'type.pair.prod'('type.infer.exc'(X589,X590),X591)),X596),s(fun(X594,fun('type.pair.prod'('type.infer.exc'(X584,X585),X586),'type.pair.prod'('type.infer.exc'(X589,X590),X591))),X597))),s('type.pair.prod'('type.infer.exc'(X584,X585),X586),'const.infer.failwith_2'(s(X585,X587),s(X586,X588))))) | s('type.option.option'(X594),'const.option.NONE_0') = s('type.option.option'(X594),X595) | s('type.option.option'(X594),X595) = s('type.option.option'(X594),'const.option.SOME_1'(s(X594,sK9(X593,happ(s(fun(X586,'type.pair.prod'('type.infer.exc'(X584,X585),X586)),'const.infer.failwith_1'(s(X585,X587))),s(X586,X588)),X592,X597,X596,X595,X591,X589,X590,'type.pair.prod'('type.infer.exc'(X584,X585),X586),X594))))) )),
  inference(superposition,[],[f234,f204])).
fof(f37150,plain,(
  ( ! [X573,X575,X580,X582,X576,X578,X572,X574,X581,X583,X577,X579] : (s('type.pair.prod'('type.infer.exc'(X575,X576),X577),'const.pair.,_2'(s('type.infer.exc'(X575,X576),'const.infer.Success_1'(s(X575,X578))),s(X577,X579))) != s('type.pair.prod'('type.infer.exc'(X575,X576),X577),happ(s(fun('type.pair.prod'('type.infer.exc'(X572,X573),X572),'type.pair.prod'('type.infer.exc'(X575,X576),X577)),'const.option.option_CASE_3'(s('type.option.option'(X580),X581),s(fun('type.pair.prod'('type.infer.exc'(X572,X573),X572),'type.pair.prod'('type.infer.exc'(X575,X576),X577)),X582),s(fun(X580,fun('type.pair.prod'('type.infer.exc'(X572,X573),X572),'type.pair.prod'('type.infer.exc'(X575,X576),X577))),X583))),s('type.pair.prod'('type.infer.exc'(X572,X573),X572),'const.infer.read_1'(s(X572,X574))))) | s('type.option.option'(X580),'const.option.NONE_0') = s('type.option.option'(X580),X581) | s('type.option.option'(X580),X581) = s('type.option.option'(X580),'const.option.SOME_1'(s(X580,sK9(X579,happ(s(fun(X572,'type.pair.prod'('type.infer.exc'(X572,X573),X572)),'const.infer.read_0'),s(X572,X574)),X578,X583,X582,X581,X577,X575,X576,'type.pair.prod'('type.infer.exc'(X572,X573),X572),X580))))) )),
  inference(superposition,[],[f234,f178])).
fof(f37149,plain,(
  ( ! [X569,X571,X565,X567,X561,X563,X568,X570,X564,X566,X560,X562] : (s('type.pair.prod'('type.infer.exc'(X563,X564),X565),'const.pair.,_2'(s('type.infer.exc'(X563,X564),'const.infer.Success_1'(s(X563,X566))),s(X565,X567))) != s('type.pair.prod'('type.infer.exc'(X563,X564),X565),happ(s(fun('type.pair.prod'('type.infer.exc'(X560,X561),X560),'type.pair.prod'('type.infer.exc'(X563,X564),X565)),'const.option.option_CASE_3'(s('type.option.option'(X568),X569),s(fun('type.pair.prod'('type.infer.exc'(X560,X561),X560),'type.pair.prod'('type.infer.exc'(X563,X564),X565)),X570),s(fun(X568,fun('type.pair.prod'('type.infer.exc'(X560,X561),X560),'type.pair.prod'('type.infer.exc'(X563,X564),X565))),X571))),s('type.pair.prod'('type.infer.exc'(X560,X561),X560),'const.infer.read_1'(s(X560,X562))))) | s('type.option.option'(X568),'const.option.NONE_0') = s('type.option.option'(X568),X569) | s('type.option.option'(X568),X569) = s('type.option.option'(X568),'const.option.SOME_1'(s(X568,sK9(X567,'const.pair.,_2'(s('type.infer.exc'(X560,X561),'const.infer.Success_1'(s(X560,X562))),s(X560,X562)),X566,X571,X570,X569,X565,X563,X564,'type.pair.prod'('type.infer.exc'(X560,X561),X560),X568))))) )),
  inference(superposition,[],[f234,f177])).
fof(f37148,plain,(
  ( ! [X557,X559,X553,X555,X549,X551,X556,X558,X552,X554,X550] : (s('type.pair.prod'('type.infer.exc'(X551,X552),X553),'const.pair.,_2'(s('type.infer.exc'(X551,X552),'const.infer.Success_1'(s(X551,X554))),s(X553,X555))) != s('type.pair.prod'('type.infer.exc'(X551,X552),X553),happ(s(fun('type.infer_t.infer_t','type.pair.prod'('type.infer.exc'(X551,X552),X553)),'const.option.option_CASE_3'(s('type.option.option'(X556),X557),s(fun('type.infer_t.infer_t','type.pair.prod'('type.infer.exc'(X551,X552),X553)),X558),s(fun(X556,fun('type.infer_t.infer_t','type.pair.prod'('type.infer.exc'(X551,X552),X553))),X559))),s('type.infer_t.infer_t','const.unify.t_walkstar_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X549),s('type.infer_t.infer_t',X550))))) | s('type.option.option'(X556),'const.option.NONE_0') = s('type.option.option'(X556),X557) | s('type.option.option'(X556),X557) = s('type.option.option'(X556),'const.option.SOME_1'(s(X556,sK9(X555,happ(s(fun('type.infer_t.infer_t','type.infer_t.infer_t'),happ(s(fun('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),fun('type.infer_t.infer_t','type.infer_t.infer_t')),'const.unify.t_walkstar_0'),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X549))),s('type.infer_t.infer_t',X550)),X554,X559,X558,X557,X553,X551,X552,'type.infer_t.infer_t',X556))))) )),
  inference(superposition,[],[f234,f176])).
fof(f37147,plain,(
  ( ! [X540,X542,X546,X545,X541,X543,X547,X539,X548,X544] : (s('type.pair.prod'('type.infer.exc'(X540,X541),X542),'const.pair.,_2'(s('type.infer.exc'(X540,X541),'const.infer.Success_1'(s(X540,X543))),s(X542,X544))) != s('type.pair.prod'('type.infer.exc'(X540,X541),X542),happ(s(fun('type.infer_t.infer_t','type.pair.prod'('type.infer.exc'(X540,X541),X542)),'const.option.option_CASE_3'(s('type.option.option'(X545),X546),s(fun('type.infer_t.infer_t','type.pair.prod'('type.infer.exc'(X540,X541),X542)),X547),s(fun(X545,fun('type.infer_t.infer_t','type.pair.prod'('type.infer.exc'(X540,X541),X542))),X548))),s('type.infer_t.infer_t','const.infer_t.Infer_Tuvar_1'(s('type.num.num',X539))))) | s('type.option.option'(X545),'const.option.NONE_0') = s('type.option.option'(X545),X546) | s('type.option.option'(X545),X546) = s('type.option.option'(X545),'const.option.SOME_1'(s(X545,sK9(X544,happ(s(fun('type.num.num','type.infer_t.infer_t'),'const.infer_t.Infer_Tuvar_0'),s('type.num.num',X539)),X543,X548,X547,X546,X542,X540,X541,'type.infer_t.infer_t',X545))))) )),
  inference(superposition,[],[f234,f166])).
fof(f37146,plain,(
  ( ! [X536,X538,X532,X534,X528,X530,X537,X533,X535,X529,X531] : (s('type.pair.prod'('type.infer.exc'(X530,X531),X532),'const.pair.,_2'(s('type.infer.exc'(X530,X531),'const.infer.Success_1'(s(X530,X533))),s(X532,X534))) != s('type.pair.prod'('type.infer.exc'(X530,X531),X532),happ(s(fun('type.num.num','type.pair.prod'('type.infer.exc'(X530,X531),X532)),'const.option.option_CASE_3'(s('type.option.option'(X535),X536),s(fun('type.num.num','type.pair.prod'('type.infer.exc'(X530,X531),X532)),X537),s(fun(X535,fun('type.num.num','type.pair.prod'('type.infer.exc'(X530,X531),X532))),X538))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X528),s('type.num.num',X529))))) | s('type.option.option'(X535),'const.option.NONE_0') = s('type.option.option'(X535),X536) | s('type.option.option'(X535),X536) = s('type.option.option'(X535),'const.option.SOME_1'(s(X535,sK9(X534,happ(s(fun('type.num.num','type.num.num'),'const.arithmetic.+_1'(s('type.num.num',X528))),s('type.num.num',X529)),X533,X538,X537,X536,X532,X530,X531,'type.num.num',X535))))) )),
  inference(superposition,[],[f234,f175])).
fof(f37143,plain,(
  ( ! [X499,X509,X505,X507,X500,X502,X498,X508,X504,X506,X501,X503,X497] : (s('type.pair.prod'('type.infer.exc'(X501,X502),X503),'const.pair.,_2'(s('type.infer.exc'(X501,X502),'const.infer.Success_1'(s(X501,X504))),s(X503,X505))) != s('type.pair.prod'('type.infer.exc'(X501,X502),X503),happ(s(fun('type.list.list'(X497),'type.pair.prod'('type.infer.exc'(X501,X502),X503)),'const.option.option_CASE_3'(s('type.option.option'(X506),X507),s(fun('type.list.list'(X497),'type.pair.prod'('type.infer.exc'(X501,X502),X503)),X508),s(fun(X506,fun('type.list.list'(X497),'type.pair.prod'('type.infer.exc'(X501,X502),X503))),X509))),s('type.list.list'(X497),'const.list.MAP_2'(s(fun(X498,X497),X499),s('type.list.list'(X498),X500))))) | s('type.option.option'(X506),'const.option.NONE_0') = s('type.option.option'(X506),X507) | s('type.option.option'(X506),X507) = s('type.option.option'(X506),'const.option.SOME_1'(s(X506,sK9(X505,happ(s(fun('type.list.list'(X498),'type.list.list'(X497)),happ(s(fun(fun(X498,X497),fun('type.list.list'(X498),'type.list.list'(X497))),'const.list.MAP_0'),s(fun(X498,X497),X499))),s('type.list.list'(X498),X500)),X504,X509,X508,X507,X503,X501,X502,'type.list.list'(X497),X506))))) )),
  inference(superposition,[],[f234,f180])).
fof(f37140,plain,(
  ( ! [X466,X472,X474,X469,X471,X465,X467,X475,X473,X468,X470] : (s('type.pair.prod'('type.infer.exc'(X467,X468),X469),'const.pair.,_2'(s('type.infer.exc'(X467,X468),'const.infer.Success_1'(s(X467,X470))),s(X469,X471))) != s('type.pair.prod'('type.infer.exc'(X467,X468),X469),happ(s(fun('type.one.one','type.pair.prod'('type.infer.exc'(X467,X468),X469)),'const.option.option_CASE_3'(s('type.option.option'(X472),X473),s(fun('type.one.one','type.pair.prod'('type.infer.exc'(X467,X468),X469)),X474),s(fun(X472,fun('type.one.one','type.pair.prod'('type.infer.exc'(X467,X468),X469))),X475))),s('type.one.one',X466))) | s('type.option.option'(X472),'const.option.NONE_0') = s('type.option.option'(X472),X473) | s('type.option.option'(X472),X473) = s('type.option.option'(X472),'const.option.SOME_1'(s(X472,sK9(X471,X465,X470,X475,X474,X473,X469,X467,X468,'type.one.one',X472))))) )),
  inference(superposition,[],[f234,f258])).
fof(f37139,plain,(
  ( ! [X455,X461,X463,X457,X459,X460,X462,X456,X458,X464] : (s('type.pair.prod'('type.infer.exc'(X456,X457),X458),'const.pair.,_2'(s('type.infer.exc'(X456,X457),'const.infer.Success_1'(s(X456,X459))),s(X458,X460))) != s('type.pair.prod'('type.infer.exc'(X456,X457),X458),happ(s(fun('type.one.one','type.pair.prod'('type.infer.exc'(X456,X457),X458)),'const.option.option_CASE_3'(s('type.option.option'(X461),X462),s(fun('type.one.one','type.pair.prod'('type.infer.exc'(X456,X457),X458)),X463),s(fun(X461,fun('type.one.one','type.pair.prod'('type.infer.exc'(X456,X457),X458))),X464))),s('type.one.one',X455))) | s('type.option.option'(X461),'const.option.NONE_0') = s('type.option.option'(X461),X462) | s('type.option.option'(X461),X462) = s('type.option.option'(X461),'const.option.SOME_1'(s(X461,sK9(X460,'const.one.one_0',X459,X464,X463,X462,X458,X456,X457,'type.one.one',X461))))) )),
  inference(superposition,[],[f234,f165])).
fof(f37138,plain,(
  ( ! [X445,X447,X453,X449,X451,X444,X446,X452,X454,X448,X450] : (s('type.pair.prod'('type.infer.exc'(X446,X447),X448),'const.pair.,_2'(s('type.infer.exc'(X446,X447),'const.infer.Success_1'(s(X446,X449))),s(X448,X450))) != s('type.pair.prod'('type.infer.exc'(X446,X447),X448),happ(s(fun(fun('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X444),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'type.pair.prod'('type.infer.exc'(X446,X447),X448)),'const.option.option_CASE_3'(s('type.option.option'(X451),X452),s(fun(fun('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X444),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'type.pair.prod'('type.infer.exc'(X446,X447),X448)),X453),s(fun(X451,fun(fun('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X444),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'type.pair.prod'('type.infer.exc'(X446,X447),X448))),X454))),s(fun('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X444),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.infer.apply_subst_list_1'(s('type.list.list'('type.infer_t.infer_t'),X445))))) | s('type.option.option'(X451),'const.option.NONE_0') = s('type.option.option'(X451),X452) | s('type.option.option'(X451),X452) = s('type.option.option'(X451),'const.option.SOME_1'(s(X451,sK9(X450,happ(s(fun('type.list.list'('type.infer_t.infer_t'),fun('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X444),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))))),'const.infer.apply_subst_list_0'),s('type.list.list'('type.infer_t.infer_t'),X445)),X449,X454,X453,X452,X448,X446,X447,fun('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X444),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),X451))))) )),
  inference(superposition,[],[f234,f169])).
fof(f37130,plain,(
  ( ! [X350,X344,X346,X356,X352,X354,X358,X349,X351,X345,X347,X357,X353,X355,X359,X348] : (s('type.pair.prod'('type.infer.exc'(X351,X352),X353),'const.pair.,_2'(s('type.infer.exc'(X351,X352),'const.infer.Success_1'(s(X351,X354))),s(X353,X355))) != s('type.pair.prod'('type.infer.exc'(X351,X352),X353),happ(s(fun(fun(X344,fun(X345,fun(X346,fun(X347,fun(X348,'type.one.one'))))),'type.pair.prod'('type.infer.exc'(X351,X352),X353)),'const.option.option_CASE_3'(s('type.option.option'(X356),X357),s(fun(fun(X344,fun(X345,fun(X346,fun(X347,fun(X348,'type.one.one'))))),'type.pair.prod'('type.infer.exc'(X351,X352),X353)),X358),s(fun(X356,fun(fun(X344,fun(X345,fun(X346,fun(X347,fun(X348,'type.one.one'))))),'type.pair.prod'('type.infer.exc'(X351,X352),X353))),X359))),s(fun(X344,fun(X345,fun(X346,fun(X347,fun(X348,'type.one.one'))))),X350))) | s('type.option.option'(X356),'const.option.NONE_0') = s('type.option.option'(X356),X357) | s('type.option.option'(X356),X357) = s('type.option.option'(X356),'const.option.SOME_1'(s(X356,sK9(X355,X349,X354,X359,X358,X357,X353,X351,X352,fun(X344,fun(X345,fun(X346,fun(X347,fun(X348,'type.one.one'))))),X356))))) )),
  inference(superposition,[],[f234,f815])).
fof(f37128,plain,(
  ( ! [X315,X325,X327,X321,X323,X316,X318,X314,X324,X326,X320,X322,X328,X317,X319] : (s('type.pair.prod'('type.infer.exc'(X320,X321),X322),'const.pair.,_2'(s('type.infer.exc'(X320,X321),'const.infer.Success_1'(s(X320,X323))),s(X322,X324))) != s('type.pair.prod'('type.infer.exc'(X320,X321),X322),happ(s(fun(fun(X314,fun(X315,fun(X316,fun(X317,'type.one.one')))),'type.pair.prod'('type.infer.exc'(X320,X321),X322)),'const.option.option_CASE_3'(s('type.option.option'(X325),X326),s(fun(fun(X314,fun(X315,fun(X316,fun(X317,'type.one.one')))),'type.pair.prod'('type.infer.exc'(X320,X321),X322)),X327),s(fun(X325,fun(fun(X314,fun(X315,fun(X316,fun(X317,'type.one.one')))),'type.pair.prod'('type.infer.exc'(X320,X321),X322))),X328))),s(fun(X314,fun(X315,fun(X316,fun(X317,'type.one.one')))),X319))) | s('type.option.option'(X325),'const.option.NONE_0') = s('type.option.option'(X325),X326) | s('type.option.option'(X325),X326) = s('type.option.option'(X325),'const.option.SOME_1'(s(X325,sK9(X324,X318,X323,X328,X327,X326,X322,X320,X321,fun(X314,fun(X315,fun(X316,fun(X317,'type.one.one')))),X325))))) )),
  inference(superposition,[],[f234,f787])).
fof(f37126,plain,(
  ( ! [X292,X294,X288,X290,X296,X298,X287,X293,X295,X289,X291,X297,X299,X286] : (s('type.pair.prod'('type.infer.exc'(X291,X292),X293),'const.pair.,_2'(s('type.infer.exc'(X291,X292),'const.infer.Success_1'(s(X291,X294))),s(X293,X295))) != s('type.pair.prod'('type.infer.exc'(X291,X292),X293),happ(s(fun(fun(X286,fun(X287,fun(X288,'type.one.one'))),'type.pair.prod'('type.infer.exc'(X291,X292),X293)),'const.option.option_CASE_3'(s('type.option.option'(X296),X297),s(fun(fun(X286,fun(X287,fun(X288,'type.one.one'))),'type.pair.prod'('type.infer.exc'(X291,X292),X293)),X298),s(fun(X296,fun(fun(X286,fun(X287,fun(X288,'type.one.one'))),'type.pair.prod'('type.infer.exc'(X291,X292),X293))),X299))),s(fun(X286,fun(X287,fun(X288,'type.one.one'))),X290))) | s('type.option.option'(X296),'const.option.NONE_0') = s('type.option.option'(X296),X297) | s('type.option.option'(X296),X297) = s('type.option.option'(X296),'const.option.SOME_1'(s(X296,sK9(X295,X289,X294,X299,X298,X297,X293,X291,X292,fun(X286,fun(X287,fun(X288,'type.one.one'))),X296))))) )),
  inference(superposition,[],[f234,f752])).
fof(f37122,plain,(
  ( ! [X243,X241,X239,X237,X235,X246,X244,X242,X240,X238,X236,X234,X245] : (s('type.pair.prod'('type.infer.exc'(X238,X239),X240),'const.pair.,_2'(s('type.infer.exc'(X238,X239),'const.infer.Success_1'(s(X238,X241))),s(X240,X242))) != s('type.pair.prod'('type.infer.exc'(X238,X239),X240),happ(s(fun(fun(X234,fun(X235,'type.one.one')),'type.pair.prod'('type.infer.exc'(X238,X239),X240)),'const.option.option_CASE_3'(s('type.option.option'(X243),X244),s(fun(fun(X234,fun(X235,'type.one.one')),'type.pair.prod'('type.infer.exc'(X238,X239),X240)),X245),s(fun(X243,fun(fun(X234,fun(X235,'type.one.one')),'type.pair.prod'('type.infer.exc'(X238,X239),X240))),X246))),s(fun(X234,fun(X235,'type.one.one')),X237))) | s('type.option.option'(X243),'const.option.NONE_0') = s('type.option.option'(X243),X244) | s('type.option.option'(X243),X244) = s('type.option.option'(X243),'const.option.SOME_1'(s(X243,sK9(X242,X236,X241,X246,X245,X244,X240,X238,X239,fun(X234,fun(X235,'type.one.one')),X243))))) )),
  inference(superposition,[],[f234,f724])).
fof(f37118,plain,(
  ( ! [X191,X189,X187,X196,X194,X192,X190,X188,X186,X195,X193,X197] : (s('type.pair.prod'('type.infer.exc'(X189,X190),X191),'const.pair.,_2'(s('type.infer.exc'(X189,X190),'const.infer.Success_1'(s(X189,X192))),s(X191,X193))) != s('type.pair.prod'('type.infer.exc'(X189,X190),X191),happ(s(fun(fun(X186,'type.one.one'),'type.pair.prod'('type.infer.exc'(X189,X190),X191)),'const.option.option_CASE_3'(s('type.option.option'(X194),X195),s(fun(fun(X186,'type.one.one'),'type.pair.prod'('type.infer.exc'(X189,X190),X191)),X196),s(fun(X194,fun(fun(X186,'type.one.one'),'type.pair.prod'('type.infer.exc'(X189,X190),X191))),X197))),s(fun(X186,'type.one.one'),X188))) | s('type.option.option'(X194),'const.option.NONE_0') = s('type.option.option'(X194),X195) | s('type.option.option'(X194),X195) = s('type.option.option'(X194),'const.option.SOME_1'(s(X194,sK9(X193,X187,X192,X197,X196,X195,X191,X189,X190,fun(X186,'type.one.one'),X194))))) )),
  inference(superposition,[],[f234,f605])).
fof(f37116,plain,(
  ( ! [X167,X165,X173,X171,X169,X166,X174,X172,X170,X168] : (s('type.pair.prod'('type.infer.exc'(X166,X167),X168),'const.pair.,_2'(s('type.infer.exc'(X166,X167),'const.infer.Success_1'(s(X166,X169))),s(X168,X170))) != s('type.pair.prod'('type.infer.exc'(X166,X167),X168),happ(s(fun(bool,'type.pair.prod'('type.infer.exc'(X166,X167),X168)),'const.option.option_CASE_3'(s('type.option.option'(X171),X172),s(fun(bool,'type.pair.prod'('type.infer.exc'(X166,X167),X168)),X173),s(fun(X171,fun(bool,'type.pair.prod'('type.infer.exc'(X166,X167),X168))),X174))),s(bool,X165))) | s('type.option.option'(X171),'const.option.NONE_0') = s('type.option.option'(X171),X172) | s('type.option.option'(X171),X172) = s('type.option.option'(X171),'const.option.SOME_1'(s(X171,sK9(X170,'F_0',X169,X174,X173,X172,X168,X166,X167,bool,X171)))) | s(bool,'T_0') = s(bool,X165)) )),
  inference(superposition,[],[f234,f167])).
fof(f37114,plain,(
  ( ! [X146,X144,X152,X151,X149,X147,X145,X153,X143,X150,X148] : (s('type.pair.prod'('type.infer.exc'(X144,X145),X146),'const.pair.,_2'(s('type.infer.exc'(X144,X145),'const.infer.Success_1'(s(X144,X147))),s(X146,X148))) != s('type.pair.prod'('type.infer.exc'(X144,X145),X146),happ(s(fun(bool,'type.pair.prod'('type.infer.exc'(X144,X145),X146)),'const.option.option_CASE_3'(s('type.option.option'(X149),X150),s(fun(bool,'type.pair.prod'('type.infer.exc'(X144,X145),X146)),X151),s(fun(X149,fun(bool,'type.pair.prod'('type.infer.exc'(X144,X145),X146))),X152))),s(bool,X143))) | s('type.option.option'(X149),'const.option.NONE_0') = s('type.option.option'(X149),X150) | s('type.option.option'(X149),X150) = s('type.option.option'(X149),'const.option.SOME_1'(s(X149,sK9(X148,'T_0',X147,X152,X151,X150,X146,X144,X145,bool,X149)))) | s(bool,X143) = s(bool,X153) | s(bool,'T_0') = s(bool,X153)) )),
  inference(superposition,[],[f234,f272])).
fof(f37111,plain,(
  ( ! [X111,X118,X116,X114,X112,X120,X110,X119,X117,X115,X113] : (s('type.pair.prod'('type.infer.exc'(X112,X113),X114),'const.pair.,_2'(s('type.infer.exc'(X112,X113),'const.infer.Success_1'(s(X112,X115))),s(X114,X116))) != s('type.pair.prod'('type.infer.exc'(X112,X113),X114),happ(s(fun(bool,'type.pair.prod'('type.infer.exc'(X112,X113),X114)),'const.option.option_CASE_3'(s('type.option.option'(X117),X118),s(fun(bool,'type.pair.prod'('type.infer.exc'(X112,X113),X114)),X119),s(fun(X117,fun(bool,'type.pair.prod'('type.infer.exc'(X112,X113),X114))),X120))),s(bool,X111))) | s('type.option.option'(X117),'const.option.NONE_0') = s('type.option.option'(X117),X118) | s('type.option.option'(X117),X118) = s('type.option.option'(X117),'const.option.SOME_1'(s(X117,sK9(X116,X110,X115,X120,X119,X118,X114,X112,X113,bool,X117)))) | s(bool,'T_0') = s(bool,X111) | s(bool,'T_0') = s(bool,X110)) )),
  inference(superposition,[],[f234,f272])).
fof(f37110,plain,(
  ( ! [X103,X101,X99,X109,X107,X105,X102,X100,X108,X106,X104] : (s('type.pair.prod'('type.infer.exc'(X100,X101),X102),'const.pair.,_2'(s('type.infer.exc'(X100,X101),'const.infer.Success_1'(s(X100,X103))),s(X102,X104))) != s('type.pair.prod'('type.infer.exc'(X100,X101),X102),happ(s(fun(bool,'type.pair.prod'('type.infer.exc'(X100,X101),X102)),'const.option.option_CASE_3'(s('type.option.option'(X105),X106),s(fun(bool,'type.pair.prod'('type.infer.exc'(X100,X101),X102)),X107),s(fun(X105,fun(bool,'type.pair.prod'('type.infer.exc'(X100,X101),X102))),X108))),s(bool,'T_0'))) | s('type.option.option'(X105),'const.option.NONE_0') = s('type.option.option'(X105),X106) | s('type.option.option'(X105),X106) = s('type.option.option'(X105),'const.option.SOME_1'(s(X105,sK9(X104,X99,X103,X108,X107,X106,X102,X100,X101,bool,X105)))) | s(bool,X99) = s(bool,X109) | s(bool,'T_0') = s(bool,X109)) )),
  inference(superposition,[],[f234,f272])).
fof(f37109,plain,(
  ( ! [X94,X92,X90,X97,X95,X93,X91,X89,X98,X96] : (s('type.pair.prod'('type.infer.exc'(X90,X91),X92),'const.pair.,_2'(s('type.infer.exc'(X90,X91),'const.infer.Success_1'(s(X90,X93))),s(X92,X94))) != s('type.pair.prod'('type.infer.exc'(X90,X91),X92),happ(s(fun(bool,'type.pair.prod'('type.infer.exc'(X90,X91),X92)),'const.option.option_CASE_3'(s('type.option.option'(X95),X96),s(fun(bool,'type.pair.prod'('type.infer.exc'(X90,X91),X92)),X97),s(fun(X95,fun(bool,'type.pair.prod'('type.infer.exc'(X90,X91),X92))),X98))),s(bool,'F_0'))) | s('type.option.option'(X95),'const.option.NONE_0') = s('type.option.option'(X95),X96) | s('type.option.option'(X95),X96) = s('type.option.option'(X95),'const.option.SOME_1'(s(X95,sK9(X94,X89,X93,X98,X97,X96,X92,X90,X91,bool,X95)))) | s(bool,'T_0') = s(bool,X89)) )),
  inference(superposition,[],[f234,f167])).
fof(f37108,plain,(
  ( ! [X80,X88,X78,X76,X87,X85,X83,X81,X79,X77,X75,X86,X84,X82] : (s('type.pair.prod'('type.infer.exc'(X80,X81),X82),'const.pair.,_2'(s('type.infer.exc'(X80,X81),'const.infer.Success_1'(s(X80,X83))),s(X82,X84))) != s('type.pair.prod'('type.infer.exc'(X80,X81),X82),happ(s(fun(X75,'type.pair.prod'('type.infer.exc'(X80,X81),X82)),'const.option.option_CASE_3'(s('type.option.option'(X85),X86),s(fun(X75,'type.pair.prod'('type.infer.exc'(X80,X81),X82)),X87),s(fun(X85,fun(X75,'type.pair.prod'('type.infer.exc'(X80,X81),X82))),X88))),s(X75,'const.option.option_CASE_3'(s('type.option.option'(X76),X77),s(X75,X78),s(fun(X76,X75),X79))))) | s('type.option.option'(X85),'const.option.NONE_0') = s('type.option.option'(X85),X86) | s('type.option.option'(X85),X86) = s('type.option.option'(X85),'const.option.SOME_1'(s(X85,sK9(X84,happ(s(fun(fun(X76,X75),X75),happ(s(fun(X75,fun(fun(X76,X75),X75)),happ(s(fun('type.option.option'(X76),fun(X75,fun(fun(X76,X75),X75))),'const.option.option_CASE_0'),s('type.option.option'(X76),X77))),s(X75,X78))),s(fun(X76,X75),X79)),X83,X88,X87,X86,X82,X80,X81,X75,X85))))) )),
  inference(superposition,[],[f234,f184])).
fof(f37107,plain,(
  ( ! [X61,X59,X70,X68,X66,X64,X74,X72,X62,X60,X58,X71,X69,X67,X65,X73,X63] : (s('type.pair.prod'('type.infer.exc'(X66,X67),X68),'const.pair.,_2'(s('type.infer.exc'(X66,X67),'const.infer.Success_1'(s(X66,X69))),s(X68,X70))) != s('type.pair.prod'('type.infer.exc'(X66,X67),X68),happ(s(fun(X58,'type.pair.prod'('type.infer.exc'(X66,X67),X68)),'const.option.option_CASE_3'(s('type.option.option'(X71),X72),s(fun(X58,'type.pair.prod'('type.infer.exc'(X66,X67),X68)),X73),s(fun(X71,fun(X58,'type.pair.prod'('type.infer.exc'(X66,X67),X68))),X74))),s(X58,happ(s(fun(X62,X58),'_dst_x0x1x0_3'(s(fun(X60,fun(X59,X58)),X61),s(fun(X62,X60),X63),s(X59,X65))),s(X62,X64))))) | s('type.option.option'(X71),'const.option.NONE_0') = s('type.option.option'(X71),X72) | s('type.option.option'(X71),X72) = s('type.option.option'(X71),'const.option.SOME_1'(s(X71,sK9(X70,happ(s(fun(X59,X58),happ(s(fun(X60,fun(X59,X58)),X61),s(X60,happ(s(fun(X62,X60),X63),s(X62,X64))))),s(X59,X65)),X69,X74,X73,X72,X68,X66,X67,X58,X71))))) )),
  inference(superposition,[],[f234,f221])).
fof(f37106,plain,(
  ( ! [X57,X47,X45,X43,X41,X54,X52,X50,X48,X56,X46,X44,X42,X55,X53,X51,X49] : (s('type.pair.prod'('type.infer.exc'(X49,X50),X51),'const.pair.,_2'(s('type.infer.exc'(X49,X50),'const.infer.Success_1'(s(X49,X52))),s(X51,X53))) != s('type.pair.prod'('type.infer.exc'(X49,X50),X51),happ(s(fun(X41,'type.pair.prod'('type.infer.exc'(X49,X50),X51)),'const.option.option_CASE_3'(s('type.option.option'(X54),X55),s(fun(X41,'type.pair.prod'('type.infer.exc'(X49,X50),X51)),X56),s(fun(X54,fun(X41,'type.pair.prod'('type.infer.exc'(X49,X50),X51))),X57))),s(X41,happ(s(fun(X44,X41),happ(s(fun(X43,fun(X44,X41)),X45),s(X43,happ(s(fun(X42,X43),X46),s(X42,X48))))),s(X44,X47))))) | s('type.option.option'(X54),'const.option.NONE_0') = s('type.option.option'(X54),X55) | s('type.option.option'(X54),X55) = s('type.option.option'(X54),'const.option.SOME_1'(s(X54,sK9(X53,happ(s(fun(X42,X41),'_dst_x0x1x0_3'(s(fun(X43,fun(X44,X41)),X45),s(fun(X42,X43),X46),s(X44,X47))),s(X42,X48)),X52,X57,X56,X55,X51,X49,X50,X41,X54))))) )),
  inference(superposition,[],[f234,f221])).
fof(f37105,plain,(
  ( ! [X30,X28,X26,X39,X37,X35,X33,X31,X29,X27,X38,X36,X34,X32,X40] : (s('type.pair.prod'('type.infer.exc'(X32,X33),X34),'const.pair.,_2'(s('type.infer.exc'(X32,X33),'const.infer.Success_1'(s(X32,X35))),s(X34,X36))) != s('type.pair.prod'('type.infer.exc'(X32,X33),X34),happ(s(fun(X26,'type.pair.prod'('type.infer.exc'(X32,X33),X34)),'const.option.option_CASE_3'(s('type.option.option'(X37),X38),s(fun(X26,'type.pair.prod'('type.infer.exc'(X32,X33),X34)),X39),s(fun(X37,fun(X26,'type.pair.prod'('type.infer.exc'(X32,X33),X34))),X40))),s(X26,happ(s(fun(X28,X26),X29),s(X28,happ(s(fun(X27,X28),X30),s(X27,X31))))))) | s('type.option.option'(X37),'const.option.NONE_0') = s('type.option.option'(X37),X38) | s('type.option.option'(X37),X38) = s('type.option.option'(X37),'const.option.SOME_1'(s(X37,sK9(X36,happ(s(fun(X27,X26),'_dst_x0x1_2'(s(fun(X28,X26),X29),s(fun(X27,X28),X30))),s(X27,X31)),X35,X40,X39,X38,X34,X32,X33,X26,X37))))) )),
  inference(superposition,[],[f234,f206])).
fof(f37104,plain,(
  ( ! [X24,X14,X12,X23,X21,X19,X17,X25,X15,X13,X11,X22,X20,X18,X16] : (s('type.pair.prod'('type.infer.exc'(X17,X18),X19),'const.pair.,_2'(s('type.infer.exc'(X17,X18),'const.infer.Success_1'(s(X17,X20))),s(X19,X21))) != s('type.pair.prod'('type.infer.exc'(X17,X18),X19),happ(s(fun(X11,'type.pair.prod'('type.infer.exc'(X17,X18),X19)),'const.option.option_CASE_3'(s('type.option.option'(X22),X23),s(fun(X11,'type.pair.prod'('type.infer.exc'(X17,X18),X19)),X24),s(fun(X22,fun(X11,'type.pair.prod'('type.infer.exc'(X17,X18),X19))),X25))),s(X11,happ(s(fun(X14,X11),'_dst_x0x1_2'(s(fun(X12,X11),X13),s(fun(X14,X12),X15))),s(X14,X16))))) | s('type.option.option'(X22),'const.option.NONE_0') = s('type.option.option'(X22),X23) | s('type.option.option'(X22),X23) = s('type.option.option'(X22),'const.option.SOME_1'(s(X22,sK9(X21,happ(s(fun(X12,X11),X13),s(X12,happ(s(fun(X14,X12),X15),s(X14,X16)))),X20,X25,X24,X23,X19,X17,X18,X11,X22))))) )),
  inference(superposition,[],[f234,f206])).
fof(f37103,plain,(
  ( ! [X6,X4,X2,X0,X10,X8,X7,X5,X3,X1,X9] : (s('type.pair.prod'('type.infer.exc'(X2,X3),X4),'const.pair.,_2'(s('type.infer.exc'(X2,X3),'const.infer.Success_1'(s(X2,X5))),s(X4,X6))) != s('type.pair.prod'('type.infer.exc'(X2,X3),X4),happ(s(fun(X0,'type.pair.prod'('type.infer.exc'(X2,X3),X4)),'const.option.option_CASE_3'(s('type.option.option'(X7),X8),s(fun(X0,'type.pair.prod'('type.infer.exc'(X2,X3),X4)),X9),s(fun(X7,fun(X0,'type.pair.prod'('type.infer.exc'(X2,X3),X4))),X10))),s(X0,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(X0),X1))))) | s('type.option.option'(X7),'const.option.NONE_0') = s('type.option.option'(X7),X8) | s('type.option.option'(X7),X8) = s('type.option.option'(X7),'const.option.SOME_1'(s(X7,sK9(X6,happ(s(fun('type.infer.infer_st'(X0),X0),'const.infer.infer_st_subst_0'),s('type.infer.infer_st'(X0),X1)),X5,X10,X9,X8,X4,X2,X3,X0,X7))))) )),
  inference(superposition,[],[f234,f168])).
fof(f37102,plain,(
  ( ! [X80,X88,X78,X76,X87,X85,X83,X81,X79,X77,X75,X86,X84,X82] : (s('type.pair.prod'('type.infer.exc'(X77,X78),X79),'const.pair.,_2'(s('type.infer.exc'(X77,X78),'const.infer.Success_1'(s(X77,X84))),s(X79,X85))) != s('type.pair.prod'('type.infer.exc'(X77,X78),X79),happ(s(fun(X76,'type.pair.prod'('type.infer.exc'(X77,X78),X79)),'const.option.option_CASE_3'(s('type.option.option'(X75),X86),s(fun(X76,'type.pair.prod'('type.infer.exc'(X77,X78),X79)),X87),s(fun(X75,fun(X76,'type.pair.prod'('type.infer.exc'(X77,X78),X79))),'const.option.option_CASE_3'(s('type.option.option'(X80),X81),s(fun(X75,fun(X76,'type.pair.prod'('type.infer.exc'(X77,X78),X79))),X82),s(fun(X80,fun(X75,fun(X76,'type.pair.prod'('type.infer.exc'(X77,X78),X79)))),X83))))),s(X76,X88))) | s('type.option.option'(X75),'const.option.NONE_0') = s('type.option.option'(X75),X86) | s('type.option.option'(X75),X86) = s('type.option.option'(X75),'const.option.SOME_1'(s(X75,sK9(X85,X88,X84,happ(s(fun(fun(X80,fun(X75,fun(X76,'type.pair.prod'('type.infer.exc'(X77,X78),X79)))),fun(X75,fun(X76,'type.pair.prod'('type.infer.exc'(X77,X78),X79)))),happ(s(fun(fun(X75,fun(X76,'type.pair.prod'('type.infer.exc'(X77,X78),X79))),fun(fun(X80,fun(X75,fun(X76,'type.pair.prod'('type.infer.exc'(X77,X78),X79)))),fun(X75,fun(X76,'type.pair.prod'('type.infer.exc'(X77,X78),X79))))),happ(s(fun('type.option.option'(X80),fun(fun(X75,fun(X76,'type.pair.prod'('type.infer.exc'(X77,X78),X79))),fun(fun(X80,fun(X75,fun(X76,'type.pair.prod'('type.infer.exc'(X77,X78),X79)))),fun(X75,fun(X76,'type.pair.prod'('type.infer.exc'(X77,X78),X79)))))),'const.option.option_CASE_0'),s('type.option.option'(X80),X81))),s(fun(X75,fun(X76,'type.pair.prod'('type.infer.exc'(X77,X78),X79))),X82))),s(fun(X80,fun(X75,fun(X76,'type.pair.prod'('type.infer.exc'(X77,X78),X79)))),X83)),X87,X86,X79,X77,X78,X76,X75))))) )),
  inference(superposition,[],[f234,f184])).
fof(f37101,plain,(
  ( ! [X61,X59,X70,X68,X66,X64,X74,X72,X62,X60,X58,X71,X69,X67,X65,X73,X63] : (s('type.pair.prod'('type.infer.exc'(X60,X61),X62),'const.pair.,_2'(s('type.infer.exc'(X60,X61),'const.infer.Success_1'(s(X60,X70))),s(X62,X71))) != s('type.pair.prod'('type.infer.exc'(X60,X61),X62),happ(s(fun(X59,'type.pair.prod'('type.infer.exc'(X60,X61),X62)),'const.option.option_CASE_3'(s('type.option.option'(X58),X72),s(fun(X59,'type.pair.prod'('type.infer.exc'(X60,X61),X62)),X73),s(fun(X58,fun(X59,'type.pair.prod'('type.infer.exc'(X60,X61),X62))),happ(s(fun(X66,fun(X58,fun(X59,'type.pair.prod'('type.infer.exc'(X60,X61),X62)))),'_dst_x0x1x0_3'(s(fun(X64,fun(X63,fun(X58,fun(X59,'type.pair.prod'('type.infer.exc'(X60,X61),X62))))),X65),s(fun(X66,X64),X67),s(X63,X69))),s(X66,X68))))),s(X59,X74))) | s('type.option.option'(X58),'const.option.NONE_0') = s('type.option.option'(X58),X72) | s('type.option.option'(X58),X72) = s('type.option.option'(X58),'const.option.SOME_1'(s(X58,sK9(X71,X74,X70,happ(s(fun(X63,fun(X58,fun(X59,'type.pair.prod'('type.infer.exc'(X60,X61),X62)))),happ(s(fun(X64,fun(X63,fun(X58,fun(X59,'type.pair.prod'('type.infer.exc'(X60,X61),X62))))),X65),s(X64,happ(s(fun(X66,X64),X67),s(X66,X68))))),s(X63,X69)),X73,X72,X62,X60,X61,X59,X58))))) )),
  inference(superposition,[],[f234,f221])).
fof(f37100,plain,(
  ( ! [X57,X47,X45,X43,X41,X54,X52,X50,X48,X56,X46,X44,X42,X55,X53,X51,X49] : (s('type.pair.prod'('type.infer.exc'(X43,X44),X45),'const.pair.,_2'(s('type.infer.exc'(X43,X44),'const.infer.Success_1'(s(X43,X53))),s(X45,X54))) != s('type.pair.prod'('type.infer.exc'(X43,X44),X45),happ(s(fun(X42,'type.pair.prod'('type.infer.exc'(X43,X44),X45)),'const.option.option_CASE_3'(s('type.option.option'(X41),X55),s(fun(X42,'type.pair.prod'('type.infer.exc'(X43,X44),X45)),X56),s(fun(X41,fun(X42,'type.pair.prod'('type.infer.exc'(X43,X44),X45))),happ(s(fun(X48,fun(X41,fun(X42,'type.pair.prod'('type.infer.exc'(X43,X44),X45)))),happ(s(fun(X47,fun(X48,fun(X41,fun(X42,'type.pair.prod'('type.infer.exc'(X43,X44),X45))))),X49),s(X47,happ(s(fun(X46,X47),X50),s(X46,X52))))),s(X48,X51))))),s(X42,X57))) | s('type.option.option'(X41),'const.option.NONE_0') = s('type.option.option'(X41),X55) | s('type.option.option'(X41),X55) = s('type.option.option'(X41),'const.option.SOME_1'(s(X41,sK9(X54,X57,X53,happ(s(fun(X46,fun(X41,fun(X42,'type.pair.prod'('type.infer.exc'(X43,X44),X45)))),'_dst_x0x1x0_3'(s(fun(X47,fun(X48,fun(X41,fun(X42,'type.pair.prod'('type.infer.exc'(X43,X44),X45))))),X49),s(fun(X46,X47),X50),s(X48,X51))),s(X46,X52)),X56,X55,X45,X43,X44,X42,X41))))) )),
  inference(superposition,[],[f234,f221])).
fof(f37099,plain,(
  ( ! [X30,X28,X26,X39,X37,X35,X33,X31,X29,X27,X38,X36,X34,X32,X40] : (s('type.pair.prod'('type.infer.exc'(X28,X29),X30),'const.pair.,_2'(s('type.infer.exc'(X28,X29),'const.infer.Success_1'(s(X28,X36))),s(X30,X37))) != s('type.pair.prod'('type.infer.exc'(X28,X29),X30),happ(s(fun(X27,'type.pair.prod'('type.infer.exc'(X28,X29),X30)),'const.option.option_CASE_3'(s('type.option.option'(X26),X38),s(fun(X27,'type.pair.prod'('type.infer.exc'(X28,X29),X30)),X39),s(fun(X26,fun(X27,'type.pair.prod'('type.infer.exc'(X28,X29),X30))),happ(s(fun(X32,fun(X26,fun(X27,'type.pair.prod'('type.infer.exc'(X28,X29),X30)))),X33),s(X32,happ(s(fun(X31,X32),X34),s(X31,X35))))))),s(X27,X40))) | s('type.option.option'(X26),'const.option.NONE_0') = s('type.option.option'(X26),X38) | s('type.option.option'(X26),X38) = s('type.option.option'(X26),'const.option.SOME_1'(s(X26,sK9(X37,X40,X36,happ(s(fun(X31,fun(X26,fun(X27,'type.pair.prod'('type.infer.exc'(X28,X29),X30)))),'_dst_x0x1_2'(s(fun(X32,fun(X26,fun(X27,'type.pair.prod'('type.infer.exc'(X28,X29),X30)))),X33),s(fun(X31,X32),X34))),s(X31,X35)),X39,X38,X30,X28,X29,X27,X26))))) )),
  inference(superposition,[],[f234,f206])).
fof(f37098,plain,(
  ( ! [X24,X14,X12,X23,X21,X19,X17,X25,X15,X13,X11,X22,X20,X18,X16] : (s('type.pair.prod'('type.infer.exc'(X13,X14),X15),'const.pair.,_2'(s('type.infer.exc'(X13,X14),'const.infer.Success_1'(s(X13,X21))),s(X15,X22))) != s('type.pair.prod'('type.infer.exc'(X13,X14),X15),happ(s(fun(X12,'type.pair.prod'('type.infer.exc'(X13,X14),X15)),'const.option.option_CASE_3'(s('type.option.option'(X11),X23),s(fun(X12,'type.pair.prod'('type.infer.exc'(X13,X14),X15)),X24),s(fun(X11,fun(X12,'type.pair.prod'('type.infer.exc'(X13,X14),X15))),happ(s(fun(X18,fun(X11,fun(X12,'type.pair.prod'('type.infer.exc'(X13,X14),X15)))),'_dst_x0x1_2'(s(fun(X16,fun(X11,fun(X12,'type.pair.prod'('type.infer.exc'(X13,X14),X15)))),X17),s(fun(X18,X16),X19))),s(X18,X20))))),s(X12,X25))) | s('type.option.option'(X11),'const.option.NONE_0') = s('type.option.option'(X11),X23) | s('type.option.option'(X11),X23) = s('type.option.option'(X11),'const.option.SOME_1'(s(X11,sK9(X22,X25,X21,happ(s(fun(X16,fun(X11,fun(X12,'type.pair.prod'('type.infer.exc'(X13,X14),X15)))),X17),s(X16,happ(s(fun(X18,X16),X19),s(X18,X20)))),X24,X23,X15,X13,X14,X12,X11))))) )),
  inference(superposition,[],[f234,f206])).
fof(f37097,plain,(
  ( ! [X6,X4,X2,X0,X10,X8,X7,X5,X3,X1,X9] : (s('type.pair.prod'('type.infer.exc'(X2,X3),X4),'const.pair.,_2'(s('type.infer.exc'(X2,X3),'const.infer.Success_1'(s(X2,X6))),s(X4,X7))) != s('type.pair.prod'('type.infer.exc'(X2,X3),X4),happ(s(fun(X1,'type.pair.prod'('type.infer.exc'(X2,X3),X4)),'const.option.option_CASE_3'(s('type.option.option'(X0),X8),s(fun(X1,'type.pair.prod'('type.infer.exc'(X2,X3),X4)),X9),s(fun(X0,fun(X1,'type.pair.prod'('type.infer.exc'(X2,X3),X4))),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(fun(X0,fun(X1,'type.pair.prod'('type.infer.exc'(X2,X3),X4)))),X5))))),s(X1,X10))) | s('type.option.option'(X0),'const.option.NONE_0') = s('type.option.option'(X0),X8) | s('type.option.option'(X0),X8) = s('type.option.option'(X0),'const.option.SOME_1'(s(X0,sK9(X7,X10,X6,happ(s(fun('type.infer.infer_st'(fun(X0,fun(X1,'type.pair.prod'('type.infer.exc'(X2,X3),X4)))),fun(X0,fun(X1,'type.pair.prod'('type.infer.exc'(X2,X3),X4)))),'const.infer.infer_st_subst_0'),s('type.infer.infer_st'(fun(X0,fun(X1,'type.pair.prod'('type.infer.exc'(X2,X3),X4)))),X5)),X9,X8,X4,X2,X3,X1,X0))))) )),
  inference(superposition,[],[f234,f168])).
fof(f37096,plain,(
  ( ! [X94,X92,X90,X88,X87,X85,X83,X95,X93,X91,X89,X96,X86,X84] : (s('type.pair.prod'('type.infer.exc'(X84,X85),X86),'const.pair.,_2'(s('type.infer.exc'(X84,X85),'const.infer.Success_1'(s(X84,X91))),s(X86,X92))) != s('type.pair.prod'('type.infer.exc'(X84,X85),X86),happ(s(fun(X83,'type.pair.prod'('type.infer.exc'(X84,X85),X86)),'const.option.option_CASE_3'(s('type.option.option'(X93),X94),s(fun(X83,'type.pair.prod'('type.infer.exc'(X84,X85),X86)),'const.option.option_CASE_3'(s('type.option.option'(X87),X88),s(fun(X83,'type.pair.prod'('type.infer.exc'(X84,X85),X86)),X89),s(fun(X87,fun(X83,'type.pair.prod'('type.infer.exc'(X84,X85),X86))),X90))),s(fun(X93,fun(X83,'type.pair.prod'('type.infer.exc'(X84,X85),X86))),X95))),s(X83,X96))) | s('type.option.option'(X93),'const.option.NONE_0') = s('type.option.option'(X93),X94) | s('type.option.option'(X93),X94) = s('type.option.option'(X93),'const.option.SOME_1'(s(X93,sK9(X92,X96,X91,X95,happ(s(fun(fun(X87,fun(X83,'type.pair.prod'('type.infer.exc'(X84,X85),X86))),fun(X83,'type.pair.prod'('type.infer.exc'(X84,X85),X86))),happ(s(fun(fun(X83,'type.pair.prod'('type.infer.exc'(X84,X85),X86)),fun(fun(X87,fun(X83,'type.pair.prod'('type.infer.exc'(X84,X85),X86))),fun(X83,'type.pair.prod'('type.infer.exc'(X84,X85),X86)))),happ(s(fun('type.option.option'(X87),fun(fun(X83,'type.pair.prod'('type.infer.exc'(X84,X85),X86)),fun(fun(X87,fun(X83,'type.pair.prod'('type.infer.exc'(X84,X85),X86))),fun(X83,'type.pair.prod'('type.infer.exc'(X84,X85),X86))))),'const.option.option_CASE_0'),s('type.option.option'(X87),X88))),s(fun(X83,'type.pair.prod'('type.infer.exc'(X84,X85),X86)),X89))),s(fun(X87,fun(X83,'type.pair.prod'('type.infer.exc'(X84,X85),X86))),X90)),X94,X86,X84,X85,X83,X93))))) )),
  inference(superposition,[],[f234,f184])).
fof(f37095,plain,(
  ( ! [X80,X70,X68,X66,X78,X76,X74,X72,X81,X71,X69,X67,X79,X77,X75,X73,X82] : (s('type.pair.prod'('type.infer.exc'(X67,X68),X69),'const.pair.,_2'(s('type.infer.exc'(X67,X68),'const.infer.Success_1'(s(X67,X77))),s(X69,X78))) != s('type.pair.prod'('type.infer.exc'(X67,X68),X69),happ(s(fun(X66,'type.pair.prod'('type.infer.exc'(X67,X68),X69)),'const.option.option_CASE_3'(s('type.option.option'(X79),X80),s(fun(X66,'type.pair.prod'('type.infer.exc'(X67,X68),X69)),happ(s(fun(X73,fun(X66,'type.pair.prod'('type.infer.exc'(X67,X68),X69))),'_dst_x0x1x0_3'(s(fun(X71,fun(X70,fun(X66,'type.pair.prod'('type.infer.exc'(X67,X68),X69)))),X72),s(fun(X73,X71),X74),s(X70,X76))),s(X73,X75))),s(fun(X79,fun(X66,'type.pair.prod'('type.infer.exc'(X67,X68),X69))),X81))),s(X66,X82))) | s('type.option.option'(X79),'const.option.NONE_0') = s('type.option.option'(X79),X80) | s('type.option.option'(X79),X80) = s('type.option.option'(X79),'const.option.SOME_1'(s(X79,sK9(X78,X82,X77,X81,happ(s(fun(X70,fun(X66,'type.pair.prod'('type.infer.exc'(X67,X68),X69))),happ(s(fun(X71,fun(X70,fun(X66,'type.pair.prod'('type.infer.exc'(X67,X68),X69)))),X72),s(X71,happ(s(fun(X73,X71),X74),s(X73,X75))))),s(X70,X76)),X80,X69,X67,X68,X66,X79))))) )),
  inference(superposition,[],[f234,f221])).
fof(f37094,plain,(
  ( ! [X61,X59,X57,X64,X54,X52,X50,X62,X60,X58,X56,X65,X55,X53,X51,X49,X63] : (s('type.pair.prod'('type.infer.exc'(X50,X51),X52),'const.pair.,_2'(s('type.infer.exc'(X50,X51),'const.infer.Success_1'(s(X50,X60))),s(X52,X61))) != s('type.pair.prod'('type.infer.exc'(X50,X51),X52),happ(s(fun(X49,'type.pair.prod'('type.infer.exc'(X50,X51),X52)),'const.option.option_CASE_3'(s('type.option.option'(X62),X63),s(fun(X49,'type.pair.prod'('type.infer.exc'(X50,X51),X52)),happ(s(fun(X55,fun(X49,'type.pair.prod'('type.infer.exc'(X50,X51),X52))),happ(s(fun(X54,fun(X55,fun(X49,'type.pair.prod'('type.infer.exc'(X50,X51),X52)))),X56),s(X54,happ(s(fun(X53,X54),X57),s(X53,X59))))),s(X55,X58))),s(fun(X62,fun(X49,'type.pair.prod'('type.infer.exc'(X50,X51),X52))),X64))),s(X49,X65))) | s('type.option.option'(X62),'const.option.NONE_0') = s('type.option.option'(X62),X63) | s('type.option.option'(X62),X63) = s('type.option.option'(X62),'const.option.SOME_1'(s(X62,sK9(X61,X65,X60,X64,happ(s(fun(X53,fun(X49,'type.pair.prod'('type.infer.exc'(X50,X51),X52))),'_dst_x0x1x0_3'(s(fun(X54,fun(X55,fun(X49,'type.pair.prod'('type.infer.exc'(X50,X51),X52)))),X56),s(fun(X53,X54),X57),s(X55,X58))),s(X53,X59)),X63,X52,X50,X51,X49,X62))))) )),
  inference(superposition,[],[f234,f221])).
fof(f37093,plain,(
  ( ! [X39,X37,X35,X47,X45,X43,X41,X48,X38,X36,X34,X46,X44,X42,X40] : (s('type.pair.prod'('type.infer.exc'(X35,X36),X37),'const.pair.,_2'(s('type.infer.exc'(X35,X36),'const.infer.Success_1'(s(X35,X43))),s(X37,X44))) != s('type.pair.prod'('type.infer.exc'(X35,X36),X37),happ(s(fun(X34,'type.pair.prod'('type.infer.exc'(X35,X36),X37)),'const.option.option_CASE_3'(s('type.option.option'(X45),X46),s(fun(X34,'type.pair.prod'('type.infer.exc'(X35,X36),X37)),happ(s(fun(X39,fun(X34,'type.pair.prod'('type.infer.exc'(X35,X36),X37))),X40),s(X39,happ(s(fun(X38,X39),X41),s(X38,X42))))),s(fun(X45,fun(X34,'type.pair.prod'('type.infer.exc'(X35,X36),X37))),X47))),s(X34,X48))) | s('type.option.option'(X45),'const.option.NONE_0') = s('type.option.option'(X45),X46) | s('type.option.option'(X45),X46) = s('type.option.option'(X45),'const.option.SOME_1'(s(X45,sK9(X44,X48,X43,X47,happ(s(fun(X38,fun(X34,'type.pair.prod'('type.infer.exc'(X35,X36),X37))),'_dst_x0x1_2'(s(fun(X39,fun(X34,'type.pair.prod'('type.infer.exc'(X35,X36),X37))),X40),s(fun(X38,X39),X41))),s(X38,X42)),X46,X37,X35,X36,X34,X45))))) )),
  inference(superposition,[],[f234,f206])).
fof(f37092,plain,(
  ( ! [X30,X28,X26,X24,X33,X23,X21,X19,X31,X29,X27,X25,X32,X22,X20] : (s('type.pair.prod'('type.infer.exc'(X20,X21),X22),'const.pair.,_2'(s('type.infer.exc'(X20,X21),'const.infer.Success_1'(s(X20,X28))),s(X22,X29))) != s('type.pair.prod'('type.infer.exc'(X20,X21),X22),happ(s(fun(X19,'type.pair.prod'('type.infer.exc'(X20,X21),X22)),'const.option.option_CASE_3'(s('type.option.option'(X30),X31),s(fun(X19,'type.pair.prod'('type.infer.exc'(X20,X21),X22)),happ(s(fun(X25,fun(X19,'type.pair.prod'('type.infer.exc'(X20,X21),X22))),'_dst_x0x1_2'(s(fun(X23,fun(X19,'type.pair.prod'('type.infer.exc'(X20,X21),X22))),X24),s(fun(X25,X23),X26))),s(X25,X27))),s(fun(X30,fun(X19,'type.pair.prod'('type.infer.exc'(X20,X21),X22))),X32))),s(X19,X33))) | s('type.option.option'(X30),'const.option.NONE_0') = s('type.option.option'(X30),X31) | s('type.option.option'(X30),X31) = s('type.option.option'(X30),'const.option.SOME_1'(s(X30,sK9(X29,X33,X28,X32,happ(s(fun(X23,fun(X19,'type.pair.prod'('type.infer.exc'(X20,X21),X22))),X24),s(X23,happ(s(fun(X25,X23),X26),s(X25,X27)))),X31,X22,X20,X21,X19,X30))))) )),
  inference(superposition,[],[f234,f206])).
fof(f37091,plain,(
  ( ! [X14,X12,X10,X8,X17,X15,X13,X11,X9,X18,X16] : (s('type.pair.prod'('type.infer.exc'(X9,X10),X11),'const.pair.,_2'(s('type.infer.exc'(X9,X10),'const.infer.Success_1'(s(X9,X13))),s(X11,X14))) != s('type.pair.prod'('type.infer.exc'(X9,X10),X11),happ(s(fun(X8,'type.pair.prod'('type.infer.exc'(X9,X10),X11)),'const.option.option_CASE_3'(s('type.option.option'(X15),X16),s(fun(X8,'type.pair.prod'('type.infer.exc'(X9,X10),X11)),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(fun(X8,'type.pair.prod'('type.infer.exc'(X9,X10),X11))),X12))),s(fun(X15,fun(X8,'type.pair.prod'('type.infer.exc'(X9,X10),X11))),X17))),s(X8,X18))) | s('type.option.option'(X15),'const.option.NONE_0') = s('type.option.option'(X15),X16) | s('type.option.option'(X15),X16) = s('type.option.option'(X15),'const.option.SOME_1'(s(X15,sK9(X14,X18,X13,X17,happ(s(fun('type.infer.infer_st'(fun(X8,'type.pair.prod'('type.infer.exc'(X9,X10),X11))),fun(X8,'type.pair.prod'('type.infer.exc'(X9,X10),X11))),'const.infer.infer_st_subst_0'),s('type.infer.infer_st'(fun(X8,'type.pair.prod'('type.infer.exc'(X9,X10),X11))),X12)),X16,X11,X9,X10,X8,X15))))) )),
  inference(superposition,[],[f234,f168])).
fof(f37090,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'const.infer.Success_1'(s('type.list.list'('type.infer_t.infer_t'),X2))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X3))) != s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),happ(s(fun('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.option.option_CASE_3'(s('type.option.option'(X4),X5),s(fun('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.infer.apply_subst_list_1'(s('type.list.list'('type.infer_t.infer_t'),X1))),s(fun(X4,fun('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))))),X6))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X7))) | s('type.option.option'(X4),'const.option.NONE_0') = s('type.option.option'(X4),X5) | s('type.option.option'(X4),X5) = s('type.option.option'(X4),'const.option.SOME_1'(s(X4,sK9(X3,X7,X2,X6,happ(s(fun('type.list.list'('type.infer_t.infer_t'),fun('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))))),'const.infer.apply_subst_list_0'),s('type.list.list'('type.infer_t.infer_t'),X1)),X5,'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'type.list.list'('type.infer_t.infer_t'),X0,'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X4))))) )),
  inference(superposition,[],[f234,f169])).
fof(f37174,plain,(
  ( ! [X80,X88,X78,X76,X87,X85,X83,X81,X79,X77,X75,X86,X84,X82] : (s('type.option.option'(X75),'const.option.option_CASE_3'(s('type.option.option'(X76),X77),s('type.option.option'(X75),X78),s(fun(X76,'type.option.option'(X75)),X79))) = s('type.option.option'(X75),'const.option.SOME_1'(s(X75,sK9(X84,X88,X83,X87,X86,happ(s(fun(fun(X76,'type.option.option'(X75)),'type.option.option'(X75)),happ(s(fun('type.option.option'(X75),fun(fun(X76,'type.option.option'(X75)),'type.option.option'(X75))),happ(s(fun('type.option.option'(X76),fun('type.option.option'(X75),fun(fun(X76,'type.option.option'(X75)),'type.option.option'(X75)))),'const.option.option_CASE_0'),s('type.option.option'(X76),X77))),s('type.option.option'(X75),X78))),s(fun(X76,'type.option.option'(X75)),X79)),X82,X80,X81,X85,X75)))) | s('type.option.option'(X75),'const.option.NONE_0') = s('type.option.option'(X75),'const.option.option_CASE_3'(s('type.option.option'(X76),X77),s('type.option.option'(X75),X78),s(fun(X76,'type.option.option'(X75)),X79))) | s('type.pair.prod'('type.infer.exc'(X80,X81),X82),'const.pair.,_2'(s('type.infer.exc'(X80,X81),'const.infer.Success_1'(s(X80,X83))),s(X82,X84))) != s('type.pair.prod'('type.infer.exc'(X80,X81),X82),happ(s(fun(X85,'type.pair.prod'('type.infer.exc'(X80,X81),X82)),'const.option.option_CASE_3'(s('type.option.option'(X75),'const.option.option_CASE_3'(s('type.option.option'(X76),X77),s('type.option.option'(X75),X78),s(fun(X76,'type.option.option'(X75)),X79))),s(fun(X85,'type.pair.prod'('type.infer.exc'(X80,X81),X82)),X86),s(fun(X75,fun(X85,'type.pair.prod'('type.infer.exc'(X80,X81),X82))),X87))),s(X85,X88)))) )),
  inference(forward_demodulation,[],[f37173,f184])).
fof(f37173,plain,(
  ( ! [X80,X88,X78,X76,X87,X85,X83,X81,X79,X77,X75,X86,X84,X82] : (s('type.option.option'(X75),'const.option.NONE_0') = s('type.option.option'(X75),'const.option.option_CASE_3'(s('type.option.option'(X76),X77),s('type.option.option'(X75),X78),s(fun(X76,'type.option.option'(X75)),X79))) | s('type.pair.prod'('type.infer.exc'(X80,X81),X82),'const.pair.,_2'(s('type.infer.exc'(X80,X81),'const.infer.Success_1'(s(X80,X83))),s(X82,X84))) != s('type.pair.prod'('type.infer.exc'(X80,X81),X82),happ(s(fun(X85,'type.pair.prod'('type.infer.exc'(X80,X81),X82)),'const.option.option_CASE_3'(s('type.option.option'(X75),'const.option.option_CASE_3'(s('type.option.option'(X76),X77),s('type.option.option'(X75),X78),s(fun(X76,'type.option.option'(X75)),X79))),s(fun(X85,'type.pair.prod'('type.infer.exc'(X80,X81),X82)),X86),s(fun(X75,fun(X85,'type.pair.prod'('type.infer.exc'(X80,X81),X82))),X87))),s(X85,X88))) | s('type.option.option'(X75),happ(s(fun(fun(X76,'type.option.option'(X75)),'type.option.option'(X75)),happ(s(fun('type.option.option'(X75),fun(fun(X76,'type.option.option'(X75)),'type.option.option'(X75))),happ(s(fun('type.option.option'(X76),fun('type.option.option'(X75),fun(fun(X76,'type.option.option'(X75)),'type.option.option'(X75)))),'const.option.option_CASE_0'),s('type.option.option'(X76),X77))),s('type.option.option'(X75),X78))),s(fun(X76,'type.option.option'(X75)),X79))) = s('type.option.option'(X75),'const.option.SOME_1'(s(X75,sK9(X84,X88,X83,X87,X86,happ(s(fun(fun(X76,'type.option.option'(X75)),'type.option.option'(X75)),happ(s(fun('type.option.option'(X75),fun(fun(X76,'type.option.option'(X75)),'type.option.option'(X75))),happ(s(fun('type.option.option'(X76),fun('type.option.option'(X75),fun(fun(X76,'type.option.option'(X75)),'type.option.option'(X75)))),'const.option.option_CASE_0'),s('type.option.option'(X76),X77))),s('type.option.option'(X75),X78))),s(fun(X76,'type.option.option'(X75)),X79)),X82,X80,X81,X85,X75))))) )),
  inference(forward_demodulation,[],[f37089,f184])).
fof(f37089,plain,(
  ( ! [X80,X88,X78,X76,X87,X85,X83,X81,X79,X77,X75,X86,X84,X82] : (s('type.pair.prod'('type.infer.exc'(X80,X81),X82),'const.pair.,_2'(s('type.infer.exc'(X80,X81),'const.infer.Success_1'(s(X80,X83))),s(X82,X84))) != s('type.pair.prod'('type.infer.exc'(X80,X81),X82),happ(s(fun(X85,'type.pair.prod'('type.infer.exc'(X80,X81),X82)),'const.option.option_CASE_3'(s('type.option.option'(X75),'const.option.option_CASE_3'(s('type.option.option'(X76),X77),s('type.option.option'(X75),X78),s(fun(X76,'type.option.option'(X75)),X79))),s(fun(X85,'type.pair.prod'('type.infer.exc'(X80,X81),X82)),X86),s(fun(X75,fun(X85,'type.pair.prod'('type.infer.exc'(X80,X81),X82))),X87))),s(X85,X88))) | s('type.option.option'(X75),'const.option.NONE_0') = s('type.option.option'(X75),happ(s(fun(fun(X76,'type.option.option'(X75)),'type.option.option'(X75)),happ(s(fun('type.option.option'(X75),fun(fun(X76,'type.option.option'(X75)),'type.option.option'(X75))),happ(s(fun('type.option.option'(X76),fun('type.option.option'(X75),fun(fun(X76,'type.option.option'(X75)),'type.option.option'(X75)))),'const.option.option_CASE_0'),s('type.option.option'(X76),X77))),s('type.option.option'(X75),X78))),s(fun(X76,'type.option.option'(X75)),X79))) | s('type.option.option'(X75),happ(s(fun(fun(X76,'type.option.option'(X75)),'type.option.option'(X75)),happ(s(fun('type.option.option'(X75),fun(fun(X76,'type.option.option'(X75)),'type.option.option'(X75))),happ(s(fun('type.option.option'(X76),fun('type.option.option'(X75),fun(fun(X76,'type.option.option'(X75)),'type.option.option'(X75)))),'const.option.option_CASE_0'),s('type.option.option'(X76),X77))),s('type.option.option'(X75),X78))),s(fun(X76,'type.option.option'(X75)),X79))) = s('type.option.option'(X75),'const.option.SOME_1'(s(X75,sK9(X84,X88,X83,X87,X86,happ(s(fun(fun(X76,'type.option.option'(X75)),'type.option.option'(X75)),happ(s(fun('type.option.option'(X75),fun(fun(X76,'type.option.option'(X75)),'type.option.option'(X75))),happ(s(fun('type.option.option'(X76),fun('type.option.option'(X75),fun(fun(X76,'type.option.option'(X75)),'type.option.option'(X75)))),'const.option.option_CASE_0'),s('type.option.option'(X76),X77))),s('type.option.option'(X75),X78))),s(fun(X76,'type.option.option'(X75)),X79)),X82,X80,X81,X85,X75))))) )),
  inference(superposition,[],[f234,f184])).
fof(f37088,plain,(
  ( ! [X61,X59,X70,X68,X66,X64,X74,X72,X62,X60,X58,X71,X69,X67,X65,X73,X63] : (s('type.pair.prod'('type.infer.exc'(X66,X67),X68),'const.pair.,_2'(s('type.infer.exc'(X66,X67),'const.infer.Success_1'(s(X66,X69))),s(X68,X70))) != s('type.pair.prod'('type.infer.exc'(X66,X67),X68),happ(s(fun(X71,'type.pair.prod'('type.infer.exc'(X66,X67),X68)),'const.option.option_CASE_3'(s('type.option.option'(X58),happ(s(fun(X62,'type.option.option'(X58)),'_dst_x0x1x0_3'(s(fun(X60,fun(X59,'type.option.option'(X58))),X61),s(fun(X62,X60),X63),s(X59,X65))),s(X62,X64))),s(fun(X71,'type.pair.prod'('type.infer.exc'(X66,X67),X68)),X72),s(fun(X58,fun(X71,'type.pair.prod'('type.infer.exc'(X66,X67),X68))),X73))),s(X71,X74))) | s('type.option.option'(X58),'const.option.NONE_0') = s('type.option.option'(X58),happ(s(fun(X59,'type.option.option'(X58)),happ(s(fun(X60,fun(X59,'type.option.option'(X58))),X61),s(X60,happ(s(fun(X62,X60),X63),s(X62,X64))))),s(X59,X65))) | s('type.option.option'(X58),happ(s(fun(X59,'type.option.option'(X58)),happ(s(fun(X60,fun(X59,'type.option.option'(X58))),X61),s(X60,happ(s(fun(X62,X60),X63),s(X62,X64))))),s(X59,X65))) = s('type.option.option'(X58),'const.option.SOME_1'(s(X58,sK9(X70,X74,X69,X73,X72,happ(s(fun(X59,'type.option.option'(X58)),happ(s(fun(X60,fun(X59,'type.option.option'(X58))),X61),s(X60,happ(s(fun(X62,X60),X63),s(X62,X64))))),s(X59,X65)),X68,X66,X67,X71,X58))))) )),
  inference(superposition,[],[f234,f221])).
fof(f37087,plain,(
  ( ! [X57,X47,X45,X43,X41,X54,X52,X50,X48,X56,X46,X44,X42,X55,X53,X51,X49] : (s('type.pair.prod'('type.infer.exc'(X49,X50),X51),'const.pair.,_2'(s('type.infer.exc'(X49,X50),'const.infer.Success_1'(s(X49,X52))),s(X51,X53))) != s('type.pair.prod'('type.infer.exc'(X49,X50),X51),happ(s(fun(X54,'type.pair.prod'('type.infer.exc'(X49,X50),X51)),'const.option.option_CASE_3'(s('type.option.option'(X41),happ(s(fun(X44,'type.option.option'(X41)),happ(s(fun(X43,fun(X44,'type.option.option'(X41))),X45),s(X43,happ(s(fun(X42,X43),X46),s(X42,X48))))),s(X44,X47))),s(fun(X54,'type.pair.prod'('type.infer.exc'(X49,X50),X51)),X55),s(fun(X41,fun(X54,'type.pair.prod'('type.infer.exc'(X49,X50),X51))),X56))),s(X54,X57))) | s('type.option.option'(X41),'const.option.NONE_0') = s('type.option.option'(X41),happ(s(fun(X42,'type.option.option'(X41)),'_dst_x0x1x0_3'(s(fun(X43,fun(X44,'type.option.option'(X41))),X45),s(fun(X42,X43),X46),s(X44,X47))),s(X42,X48))) | s('type.option.option'(X41),happ(s(fun(X42,'type.option.option'(X41)),'_dst_x0x1x0_3'(s(fun(X43,fun(X44,'type.option.option'(X41))),X45),s(fun(X42,X43),X46),s(X44,X47))),s(X42,X48))) = s('type.option.option'(X41),'const.option.SOME_1'(s(X41,sK9(X53,X57,X52,X56,X55,happ(s(fun(X42,'type.option.option'(X41)),'_dst_x0x1x0_3'(s(fun(X43,fun(X44,'type.option.option'(X41))),X45),s(fun(X42,X43),X46),s(X44,X47))),s(X42,X48)),X51,X49,X50,X54,X41))))) )),
  inference(superposition,[],[f234,f221])).
fof(f37086,plain,(
  ( ! [X30,X28,X26,X39,X37,X35,X33,X31,X29,X27,X38,X36,X34,X32,X40] : (s('type.pair.prod'('type.infer.exc'(X32,X33),X34),'const.pair.,_2'(s('type.infer.exc'(X32,X33),'const.infer.Success_1'(s(X32,X35))),s(X34,X36))) != s('type.pair.prod'('type.infer.exc'(X32,X33),X34),happ(s(fun(X37,'type.pair.prod'('type.infer.exc'(X32,X33),X34)),'const.option.option_CASE_3'(s('type.option.option'(X26),happ(s(fun(X28,'type.option.option'(X26)),X29),s(X28,happ(s(fun(X27,X28),X30),s(X27,X31))))),s(fun(X37,'type.pair.prod'('type.infer.exc'(X32,X33),X34)),X38),s(fun(X26,fun(X37,'type.pair.prod'('type.infer.exc'(X32,X33),X34))),X39))),s(X37,X40))) | s('type.option.option'(X26),'const.option.NONE_0') = s('type.option.option'(X26),happ(s(fun(X27,'type.option.option'(X26)),'_dst_x0x1_2'(s(fun(X28,'type.option.option'(X26)),X29),s(fun(X27,X28),X30))),s(X27,X31))) | s('type.option.option'(X26),happ(s(fun(X27,'type.option.option'(X26)),'_dst_x0x1_2'(s(fun(X28,'type.option.option'(X26)),X29),s(fun(X27,X28),X30))),s(X27,X31))) = s('type.option.option'(X26),'const.option.SOME_1'(s(X26,sK9(X36,X40,X35,X39,X38,happ(s(fun(X27,'type.option.option'(X26)),'_dst_x0x1_2'(s(fun(X28,'type.option.option'(X26)),X29),s(fun(X27,X28),X30))),s(X27,X31)),X34,X32,X33,X37,X26))))) )),
  inference(superposition,[],[f234,f206])).
fof(f37085,plain,(
  ( ! [X24,X14,X12,X23,X21,X19,X17,X25,X15,X13,X11,X22,X20,X18,X16] : (s('type.pair.prod'('type.infer.exc'(X17,X18),X19),'const.pair.,_2'(s('type.infer.exc'(X17,X18),'const.infer.Success_1'(s(X17,X20))),s(X19,X21))) != s('type.pair.prod'('type.infer.exc'(X17,X18),X19),happ(s(fun(X22,'type.pair.prod'('type.infer.exc'(X17,X18),X19)),'const.option.option_CASE_3'(s('type.option.option'(X11),happ(s(fun(X14,'type.option.option'(X11)),'_dst_x0x1_2'(s(fun(X12,'type.option.option'(X11)),X13),s(fun(X14,X12),X15))),s(X14,X16))),s(fun(X22,'type.pair.prod'('type.infer.exc'(X17,X18),X19)),X23),s(fun(X11,fun(X22,'type.pair.prod'('type.infer.exc'(X17,X18),X19))),X24))),s(X22,X25))) | s('type.option.option'(X11),'const.option.NONE_0') = s('type.option.option'(X11),happ(s(fun(X12,'type.option.option'(X11)),X13),s(X12,happ(s(fun(X14,X12),X15),s(X14,X16))))) | s('type.option.option'(X11),happ(s(fun(X12,'type.option.option'(X11)),X13),s(X12,happ(s(fun(X14,X12),X15),s(X14,X16))))) = s('type.option.option'(X11),'const.option.SOME_1'(s(X11,sK9(X21,X25,X20,X24,X23,happ(s(fun(X12,'type.option.option'(X11)),X13),s(X12,happ(s(fun(X14,X12),X15),s(X14,X16)))),X19,X17,X18,X22,X11))))) )),
  inference(superposition,[],[f234,f206])).
fof(f37172,plain,(
  ( ! [X6,X4,X2,X0,X10,X8,X7,X5,X3,X1,X9] : (s('type.option.option'(X0),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.option.option'(X0)),X1))) = s('type.option.option'(X0),'const.option.SOME_1'(s(X0,sK9(X6,X10,X5,X9,X8,happ(s(fun('type.infer.infer_st'('type.option.option'(X0)),'type.option.option'(X0)),'const.infer.infer_st_subst_0'),s('type.infer.infer_st'('type.option.option'(X0)),X1)),X4,X2,X3,X7,X0)))) | s('type.option.option'(X0),'const.option.NONE_0') = s('type.option.option'(X0),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.option.option'(X0)),X1))) | s('type.pair.prod'('type.infer.exc'(X2,X3),X4),'const.pair.,_2'(s('type.infer.exc'(X2,X3),'const.infer.Success_1'(s(X2,X5))),s(X4,X6))) != s('type.pair.prod'('type.infer.exc'(X2,X3),X4),happ(s(fun(X7,'type.pair.prod'('type.infer.exc'(X2,X3),X4)),'const.option.option_CASE_3'(s('type.option.option'(X0),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.option.option'(X0)),X1))),s(fun(X7,'type.pair.prod'('type.infer.exc'(X2,X3),X4)),X8),s(fun(X0,fun(X7,'type.pair.prod'('type.infer.exc'(X2,X3),X4))),X9))),s(X7,X10)))) )),
  inference(forward_demodulation,[],[f37171,f168])).
fof(f37171,plain,(
  ( ! [X6,X4,X2,X0,X10,X8,X7,X5,X3,X1,X9] : (s('type.option.option'(X0),'const.option.NONE_0') = s('type.option.option'(X0),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.option.option'(X0)),X1))) | s('type.pair.prod'('type.infer.exc'(X2,X3),X4),'const.pair.,_2'(s('type.infer.exc'(X2,X3),'const.infer.Success_1'(s(X2,X5))),s(X4,X6))) != s('type.pair.prod'('type.infer.exc'(X2,X3),X4),happ(s(fun(X7,'type.pair.prod'('type.infer.exc'(X2,X3),X4)),'const.option.option_CASE_3'(s('type.option.option'(X0),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.option.option'(X0)),X1))),s(fun(X7,'type.pair.prod'('type.infer.exc'(X2,X3),X4)),X8),s(fun(X0,fun(X7,'type.pair.prod'('type.infer.exc'(X2,X3),X4))),X9))),s(X7,X10))) | s('type.option.option'(X0),happ(s(fun('type.infer.infer_st'('type.option.option'(X0)),'type.option.option'(X0)),'const.infer.infer_st_subst_0'),s('type.infer.infer_st'('type.option.option'(X0)),X1))) = s('type.option.option'(X0),'const.option.SOME_1'(s(X0,sK9(X6,X10,X5,X9,X8,happ(s(fun('type.infer.infer_st'('type.option.option'(X0)),'type.option.option'(X0)),'const.infer.infer_st_subst_0'),s('type.infer.infer_st'('type.option.option'(X0)),X1)),X4,X2,X3,X7,X0))))) )),
  inference(forward_demodulation,[],[f37084,f168])).
fof(f37084,plain,(
  ( ! [X6,X4,X2,X0,X10,X8,X7,X5,X3,X1,X9] : (s('type.pair.prod'('type.infer.exc'(X2,X3),X4),'const.pair.,_2'(s('type.infer.exc'(X2,X3),'const.infer.Success_1'(s(X2,X5))),s(X4,X6))) != s('type.pair.prod'('type.infer.exc'(X2,X3),X4),happ(s(fun(X7,'type.pair.prod'('type.infer.exc'(X2,X3),X4)),'const.option.option_CASE_3'(s('type.option.option'(X0),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.option.option'(X0)),X1))),s(fun(X7,'type.pair.prod'('type.infer.exc'(X2,X3),X4)),X8),s(fun(X0,fun(X7,'type.pair.prod'('type.infer.exc'(X2,X3),X4))),X9))),s(X7,X10))) | s('type.option.option'(X0),'const.option.NONE_0') = s('type.option.option'(X0),happ(s(fun('type.infer.infer_st'('type.option.option'(X0)),'type.option.option'(X0)),'const.infer.infer_st_subst_0'),s('type.infer.infer_st'('type.option.option'(X0)),X1))) | s('type.option.option'(X0),happ(s(fun('type.infer.infer_st'('type.option.option'(X0)),'type.option.option'(X0)),'const.infer.infer_st_subst_0'),s('type.infer.infer_st'('type.option.option'(X0)),X1))) = s('type.option.option'(X0),'const.option.SOME_1'(s(X0,sK9(X6,X10,X5,X9,X8,happ(s(fun('type.infer.infer_st'('type.option.option'(X0)),'type.option.option'(X0)),'const.infer.infer_st_subst_0'),s('type.infer.infer_st'('type.option.option'(X0)),X1)),X4,X2,X3,X7,X0))))) )),
  inference(superposition,[],[f234,f168])).
fof(f37081,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'(X0,X1),X0),'const.infer.read_1'(s(X0,X2))) != s('type.pair.prod'('type.infer.exc'(X0,X1),X0),happ(s(fun(X3,'type.pair.prod'('type.infer.exc'(X0,X1),X0)),'const.option.option_CASE_3'(s('type.option.option'(X4),X5),s(fun(X3,'type.pair.prod'('type.infer.exc'(X0,X1),X0)),X6),s(fun(X4,fun(X3,'type.pair.prod'('type.infer.exc'(X0,X1),X0))),X7))),s(X3,X8))) | s('type.option.option'(X4),'const.option.NONE_0') = s('type.option.option'(X4),X5) | s('type.option.option'(X4),X5) = s('type.option.option'(X4),'const.option.SOME_1'(s(X4,sK9(X2,X8,X2,X7,X6,X5,X0,X0,X1,X3,X4))))) )),
  inference(superposition,[],[f234,f177])).
fof(f37080,plain,(
  ( ! [X819,X817,X810,X808,X814,X812,X818,X816,X811,X809,X815,X813] : (s('type.pair.prod'('type.infer.exc'(X811,X812),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X808),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.pair.,_2'(s('type.infer.exc'(X811,X812),'const.infer.Success_1'(s(X811,X813))),s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X808),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.apply_subst_2'(s('type.infer_t.infer_t',X809),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X810))))) != s('type.pair.prod'('type.infer.exc'(X811,X812),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X808),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),happ(s(fun(X814,'type.pair.prod'('type.infer.exc'(X811,X812),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X808),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))))),'const.option.option_CASE_3'(s('type.option.option'(X815),X816),s(fun(X814,'type.pair.prod'('type.infer.exc'(X811,X812),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X808),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))))),X817),s(fun(X815,fun(X814,'type.pair.prod'('type.infer.exc'(X811,X812),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X808),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))))),X818))),s(X814,X819))) | s('type.option.option'(X815),'const.option.NONE_0') = s('type.option.option'(X815),X816) | s('type.option.option'(X815),X816) = s('type.option.option'(X815),'const.option.SOME_1'(s(X815,sK9(happ(s(fun('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X808),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.infer.apply_subst_1'(s('type.infer_t.infer_t',X809))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X810)),X819,X813,X818,X817,X816,'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X808),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X811,X812,X814,X815))))) )),
  inference(superposition,[],[f234,f171])).
fof(f37079,plain,(
  ( ! [X798,X796,X802,X800,X806,X804,X799,X797,X803,X801,X807,X805] : (s('type.pair.prod'('type.infer.exc'(X799,X800),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X796),'type.infer.infer_st'(X797))),'const.pair.,_2'(s('type.infer.exc'(X799,X800),'const.infer.Success_1'(s(X799,X801))),s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X796),'type.infer.infer_st'(X797)),'const.infer.fresh_uvar_1'(s('type.infer.infer_st'(X797),X798))))) != s('type.pair.prod'('type.infer.exc'(X799,X800),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X796),'type.infer.infer_st'(X797))),happ(s(fun(X802,'type.pair.prod'('type.infer.exc'(X799,X800),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X796),'type.infer.infer_st'(X797)))),'const.option.option_CASE_3'(s('type.option.option'(X803),X804),s(fun(X802,'type.pair.prod'('type.infer.exc'(X799,X800),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X796),'type.infer.infer_st'(X797)))),X805),s(fun(X803,fun(X802,'type.pair.prod'('type.infer.exc'(X799,X800),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X796),'type.infer.infer_st'(X797))))),X806))),s(X802,X807))) | s('type.option.option'(X803),'const.option.NONE_0') = s('type.option.option'(X803),X804) | s('type.option.option'(X803),X804) = s('type.option.option'(X803),'const.option.SOME_1'(s(X803,sK9(happ(s(fun('type.infer.infer_st'(X797),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X796),'type.infer.infer_st'(X797))),'const.infer.fresh_uvar_0'),s('type.infer.infer_st'(X797),X798)),X807,X801,X806,X805,X804,'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X796),'type.infer.infer_st'(X797)),X799,X800,X802,X803))))) )),
  inference(superposition,[],[f234,f179])).
fof(f37073,plain,(
  ( ! [X736,X732,X734,X728,X730,X726,X737,X733,X735,X729,X731,X725,X727] : (s('type.pair.prod'('type.infer.exc'(X729,X730),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X725),'type.infer.infer_st'(X726))),'const.pair.,_2'(s('type.infer.exc'(X729,X730),'const.infer.Success_1'(s(X729,X731))),s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X725),'type.infer.infer_st'(X726)),'const.infer.n_fresh_uvar_2'(s('type.num.num',X727),s('type.infer.infer_st'(X726),X728))))) != s('type.pair.prod'('type.infer.exc'(X729,X730),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X725),'type.infer.infer_st'(X726))),happ(s(fun(X732,'type.pair.prod'('type.infer.exc'(X729,X730),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X725),'type.infer.infer_st'(X726)))),'const.option.option_CASE_3'(s('type.option.option'(X733),X734),s(fun(X732,'type.pair.prod'('type.infer.exc'(X729,X730),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X725),'type.infer.infer_st'(X726)))),X735),s(fun(X733,fun(X732,'type.pair.prod'('type.infer.exc'(X729,X730),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X725),'type.infer.infer_st'(X726))))),X736))),s(X732,X737))) | s('type.option.option'(X733),'const.option.NONE_0') = s('type.option.option'(X733),X734) | s('type.option.option'(X733),X734) = s('type.option.option'(X733),'const.option.SOME_1'(s(X733,sK9(happ(s(fun('type.infer.infer_st'(X726),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X725),'type.infer.infer_st'(X726))),happ(s(fun('type.num.num',fun('type.infer.infer_st'(X726),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X725),'type.infer.infer_st'(X726)))),'const.infer.n_fresh_uvar_0'),s('type.num.num',X727))),s('type.infer.infer_st'(X726),X728)),X737,X731,X736,X735,X734,'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X725),'type.infer.infer_st'(X726)),X729,X730,X732,X733))))) )),
  inference(superposition,[],[f234,f181])).
fof(f37072,plain,(
  ( ! [X724,X720,X722,X716,X718,X721,X723,X717,X719] : (s('type.pair.prod'('type.infer.exc'(X716,X717),'type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.pair.,_2'(s('type.infer.exc'(X716,X717),'const.infer.Success_1'(s(X716,X718))),s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraints_3'(s('type.list.list'('type.infer_t.infer_t'),sK0),s('type.list.list'('type.infer_t.infer_t'),sK1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))))) != s('type.pair.prod'('type.infer.exc'(X716,X717),'type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),happ(s(fun(X719,'type.pair.prod'('type.infer.exc'(X716,X717),'type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))))),'const.option.option_CASE_3'(s('type.option.option'(X720),X721),s(fun(X719,'type.pair.prod'('type.infer.exc'(X716,X717),'type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))))),X722),s(fun(X720,fun(X719,'type.pair.prod'('type.infer.exc'(X716,X717),'type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))))),X723))),s(X719,X724))) | s('type.option.option'(X720),'const.option.NONE_0') = s('type.option.option'(X720),X721) | s('type.option.option'(X720),X721) = s('type.option.option'(X720),'const.option.SOME_1'(s(X720,sK9('const.pair.,_2'(s('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'const.infer.Success_1'(s('type.one.one','const.one.one_0'))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK3)),X724,X718,X723,X722,X721,'type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X716,X717,X719,X720))))) ) | $spl0),
  inference(superposition,[],[f234,f29772])).
fof(f37071,plain,(
  ( ! [X707,X705,X712,X714,X708,X710,X702,X704,X706,X713,X715,X709,X711,X703] : (s('type.pair.prod'('type.infer.exc'(X707,X708),'type.pair.prod'('type.infer.exc'('type.one.one',X702),X703)),'const.pair.,_2'(s('type.infer.exc'(X707,X708),'const.infer.Success_1'(s(X707,X709))),s('type.pair.prod'('type.infer.exc'('type.one.one',X702),X703),'const.infer.guard_3'(s(bool,X704),s(X702,X705),s(X703,X706))))) != s('type.pair.prod'('type.infer.exc'(X707,X708),'type.pair.prod'('type.infer.exc'('type.one.one',X702),X703)),happ(s(fun(X710,'type.pair.prod'('type.infer.exc'(X707,X708),'type.pair.prod'('type.infer.exc'('type.one.one',X702),X703))),'const.option.option_CASE_3'(s('type.option.option'(X711),X712),s(fun(X710,'type.pair.prod'('type.infer.exc'(X707,X708),'type.pair.prod'('type.infer.exc'('type.one.one',X702),X703))),X713),s(fun(X711,fun(X710,'type.pair.prod'('type.infer.exc'(X707,X708),'type.pair.prod'('type.infer.exc'('type.one.one',X702),X703)))),X714))),s(X710,X715))) | s('type.option.option'(X711),'const.option.NONE_0') = s('type.option.option'(X711),X712) | s('type.option.option'(X711),X712) = s('type.option.option'(X711),'const.option.SOME_1'(s(X711,sK9(happ(s(fun(X703,'type.pair.prod'('type.infer.exc'('type.one.one',X702),X703)),'const.infer.guard_2'(s(bool,X704),s(X702,X705))),s(X703,X706)),X715,X709,X714,X713,X712,'type.pair.prod'('type.infer.exc'('type.one.one',X702),X703),X707,X708,X710,X711))))) )),
  inference(superposition,[],[f234,f183])).
fof(f37065,plain,(
  ( ! [X639,X633,X635,X629,X631,X640,X642,X636,X638,X632,X634,X628,X630,X641,X643,X637] : (s('type.pair.prod'('type.infer.exc'(X635,X636),'type.pair.prod'('type.infer.exc'(X628,'type.list.list'('type.string.char')),X629)),'const.pair.,_2'(s('type.infer.exc'(X635,X636),'const.infer.Success_1'(s(X635,X637))),s('type.pair.prod'('type.infer.exc'(X628,'type.list.list'('type.string.char')),X629),'const.infer.lookup_st_ex_4'(s(fun(X630,'type.list.list'('type.string.char')),X631),s(X630,X632),s('type.list.list'('type.pair.prod'(X630,X628)),X633),s(X629,X634))))) != s('type.pair.prod'('type.infer.exc'(X635,X636),'type.pair.prod'('type.infer.exc'(X628,'type.list.list'('type.string.char')),X629)),happ(s(fun(X638,'type.pair.prod'('type.infer.exc'(X635,X636),'type.pair.prod'('type.infer.exc'(X628,'type.list.list'('type.string.char')),X629))),'const.option.option_CASE_3'(s('type.option.option'(X639),X640),s(fun(X638,'type.pair.prod'('type.infer.exc'(X635,X636),'type.pair.prod'('type.infer.exc'(X628,'type.list.list'('type.string.char')),X629))),X641),s(fun(X639,fun(X638,'type.pair.prod'('type.infer.exc'(X635,X636),'type.pair.prod'('type.infer.exc'(X628,'type.list.list'('type.string.char')),X629)))),X642))),s(X638,X643))) | s('type.option.option'(X639),'const.option.NONE_0') = s('type.option.option'(X639),X640) | s('type.option.option'(X639),X640) = s('type.option.option'(X639),'const.option.SOME_1'(s(X639,sK9(happ(s(fun(X629,'type.pair.prod'('type.infer.exc'(X628,'type.list.list'('type.string.char')),X629)),'const.infer.lookup_st_ex_3'(s(fun(X630,'type.list.list'('type.string.char')),X631),s(X630,X632),s('type.list.list'('type.pair.prod'(X630,X628)),X633))),s(X629,X634)),X643,X637,X642,X641,X640,'type.pair.prod'('type.infer.exc'(X628,'type.list.list'('type.string.char')),X629),X635,X636,X638,X639))))) )),
  inference(superposition,[],[f234,f207])).
fof(f37064,plain,(
  ( ! [X625,X627,X621,X623,X617,X619,X613,X615,X624,X626,X620,X622,X616,X618,X612,X614] : (s('type.pair.prod'('type.infer.exc'(X619,X620),'type.pair.prod'('type.infer.exc'(X612,X613),X614)),'const.pair.,_2'(s('type.infer.exc'(X619,X620),'const.infer.Success_1'(s(X619,X621))),s('type.pair.prod'('type.infer.exc'(X612,X613),X614),'const.infer.st_ex_bind_3'(s(fun(X614,'type.pair.prod'('type.infer.exc'(X615,X613),X614)),X616),s(fun(X615,fun(X614,'type.pair.prod'('type.infer.exc'(X612,X613),X614))),X617),s(X614,X618))))) != s('type.pair.prod'('type.infer.exc'(X619,X620),'type.pair.prod'('type.infer.exc'(X612,X613),X614)),happ(s(fun(X622,'type.pair.prod'('type.infer.exc'(X619,X620),'type.pair.prod'('type.infer.exc'(X612,X613),X614))),'const.option.option_CASE_3'(s('type.option.option'(X623),X624),s(fun(X622,'type.pair.prod'('type.infer.exc'(X619,X620),'type.pair.prod'('type.infer.exc'(X612,X613),X614))),X625),s(fun(X623,fun(X622,'type.pair.prod'('type.infer.exc'(X619,X620),'type.pair.prod'('type.infer.exc'(X612,X613),X614)))),X626))),s(X622,X627))) | s('type.option.option'(X623),'const.option.NONE_0') = s('type.option.option'(X623),X624) | s('type.option.option'(X623),X624) = s('type.option.option'(X623),'const.option.SOME_1'(s(X623,sK9(happ(s(fun(X614,'type.pair.prod'('type.infer.exc'(X612,X613),X614)),'const.infer.st_ex_bind_2'(s(fun(X614,'type.pair.prod'('type.infer.exc'(X615,X613),X614)),X616),s(fun(X615,fun(X614,'type.pair.prod'('type.infer.exc'(X612,X613),X614))),X617))),s(X614,X618)),X627,X621,X626,X625,X624,'type.pair.prod'('type.infer.exc'(X612,X613),X614),X619,X620,X622,X623))))) )),
  inference(superposition,[],[f234,f254])).
fof(f37063,plain,(
  ( ! [X606,X600,X602,X610,X598,X609,X605,X607,X601,X603,X611,X599,X608,X604] : (s('type.pair.prod'('type.infer.exc'(X603,X604),'type.pair.prod'('type.infer.exc'(X598,X599),X600)),'const.pair.,_2'(s('type.infer.exc'(X603,X604),'const.infer.Success_1'(s(X603,X605))),s('type.pair.prod'('type.infer.exc'(X598,X599),X600),'const.infer.st_ex_return_2'(s(X598,X601),s(X600,X602))))) != s('type.pair.prod'('type.infer.exc'(X603,X604),'type.pair.prod'('type.infer.exc'(X598,X599),X600)),happ(s(fun(X606,'type.pair.prod'('type.infer.exc'(X603,X604),'type.pair.prod'('type.infer.exc'(X598,X599),X600))),'const.option.option_CASE_3'(s('type.option.option'(X607),X608),s(fun(X606,'type.pair.prod'('type.infer.exc'(X603,X604),'type.pair.prod'('type.infer.exc'(X598,X599),X600))),X609),s(fun(X607,fun(X606,'type.pair.prod'('type.infer.exc'(X603,X604),'type.pair.prod'('type.infer.exc'(X598,X599),X600)))),X610))),s(X606,X611))) | s('type.option.option'(X607),'const.option.NONE_0') = s('type.option.option'(X607),X608) | s('type.option.option'(X607),X608) = s('type.option.option'(X607),'const.option.SOME_1'(s(X607,sK9(happ(s(fun(X600,'type.pair.prod'('type.infer.exc'(X598,X599),X600)),happ(s(fun(X598,fun(X600,'type.pair.prod'('type.infer.exc'(X598,X599),X600))),'const.infer.st_ex_return_0'),s(X598,X601))),s(X600,X602)),X611,X605,X610,X609,X608,'type.pair.prod'('type.infer.exc'(X598,X599),X600),X603,X604,X606,X607))))) )),
  inference(superposition,[],[f234,f205])).
fof(f37062,plain,(
  ( ! [X596,X592,X594,X588,X590,X584,X586,X597,X593,X595,X589,X591,X585,X587] : (s('type.pair.prod'('type.infer.exc'(X589,X590),'type.pair.prod'('type.infer.exc'(X584,X585),X586)),'const.pair.,_2'(s('type.infer.exc'(X589,X590),'const.infer.Success_1'(s(X589,X591))),s('type.pair.prod'('type.infer.exc'(X584,X585),X586),'const.infer.failwith_2'(s(X585,X587),s(X586,X588))))) != s('type.pair.prod'('type.infer.exc'(X589,X590),'type.pair.prod'('type.infer.exc'(X584,X585),X586)),happ(s(fun(X592,'type.pair.prod'('type.infer.exc'(X589,X590),'type.pair.prod'('type.infer.exc'(X584,X585),X586))),'const.option.option_CASE_3'(s('type.option.option'(X593),X594),s(fun(X592,'type.pair.prod'('type.infer.exc'(X589,X590),'type.pair.prod'('type.infer.exc'(X584,X585),X586))),X595),s(fun(X593,fun(X592,'type.pair.prod'('type.infer.exc'(X589,X590),'type.pair.prod'('type.infer.exc'(X584,X585),X586)))),X596))),s(X592,X597))) | s('type.option.option'(X593),'const.option.NONE_0') = s('type.option.option'(X593),X594) | s('type.option.option'(X593),X594) = s('type.option.option'(X593),'const.option.SOME_1'(s(X593,sK9(happ(s(fun(X586,'type.pair.prod'('type.infer.exc'(X584,X585),X586)),'const.infer.failwith_1'(s(X585,X587))),s(X586,X588)),X597,X591,X596,X595,X594,'type.pair.prod'('type.infer.exc'(X584,X585),X586),X589,X590,X592,X593))))) )),
  inference(superposition,[],[f234,f204])).
fof(f37061,plain,(
  ( ! [X573,X575,X580,X582,X576,X578,X572,X574,X581,X583,X577,X579] : (s('type.pair.prod'('type.infer.exc'(X575,X576),'type.pair.prod'('type.infer.exc'(X572,X573),X572)),'const.pair.,_2'(s('type.infer.exc'(X575,X576),'const.infer.Success_1'(s(X575,X577))),s('type.pair.prod'('type.infer.exc'(X572,X573),X572),'const.infer.read_1'(s(X572,X574))))) != s('type.pair.prod'('type.infer.exc'(X575,X576),'type.pair.prod'('type.infer.exc'(X572,X573),X572)),happ(s(fun(X578,'type.pair.prod'('type.infer.exc'(X575,X576),'type.pair.prod'('type.infer.exc'(X572,X573),X572))),'const.option.option_CASE_3'(s('type.option.option'(X579),X580),s(fun(X578,'type.pair.prod'('type.infer.exc'(X575,X576),'type.pair.prod'('type.infer.exc'(X572,X573),X572))),X581),s(fun(X579,fun(X578,'type.pair.prod'('type.infer.exc'(X575,X576),'type.pair.prod'('type.infer.exc'(X572,X573),X572)))),X582))),s(X578,X583))) | s('type.option.option'(X579),'const.option.NONE_0') = s('type.option.option'(X579),X580) | s('type.option.option'(X579),X580) = s('type.option.option'(X579),'const.option.SOME_1'(s(X579,sK9(happ(s(fun(X572,'type.pair.prod'('type.infer.exc'(X572,X573),X572)),'const.infer.read_0'),s(X572,X574)),X583,X577,X582,X581,X580,'type.pair.prod'('type.infer.exc'(X572,X573),X572),X575,X576,X578,X579))))) )),
  inference(superposition,[],[f234,f178])).
fof(f37060,plain,(
  ( ! [X569,X571,X565,X567,X561,X563,X568,X570,X564,X566,X560,X562] : (s('type.pair.prod'('type.infer.exc'(X563,X564),'type.pair.prod'('type.infer.exc'(X560,X561),X560)),'const.pair.,_2'(s('type.infer.exc'(X563,X564),'const.infer.Success_1'(s(X563,X565))),s('type.pair.prod'('type.infer.exc'(X560,X561),X560),'const.infer.read_1'(s(X560,X562))))) != s('type.pair.prod'('type.infer.exc'(X563,X564),'type.pair.prod'('type.infer.exc'(X560,X561),X560)),happ(s(fun(X566,'type.pair.prod'('type.infer.exc'(X563,X564),'type.pair.prod'('type.infer.exc'(X560,X561),X560))),'const.option.option_CASE_3'(s('type.option.option'(X567),X568),s(fun(X566,'type.pair.prod'('type.infer.exc'(X563,X564),'type.pair.prod'('type.infer.exc'(X560,X561),X560))),X569),s(fun(X567,fun(X566,'type.pair.prod'('type.infer.exc'(X563,X564),'type.pair.prod'('type.infer.exc'(X560,X561),X560)))),X570))),s(X566,X571))) | s('type.option.option'(X567),'const.option.NONE_0') = s('type.option.option'(X567),X568) | s('type.option.option'(X567),X568) = s('type.option.option'(X567),'const.option.SOME_1'(s(X567,sK9('const.pair.,_2'(s('type.infer.exc'(X560,X561),'const.infer.Success_1'(s(X560,X562))),s(X560,X562)),X571,X565,X570,X569,X568,'type.pair.prod'('type.infer.exc'(X560,X561),X560),X563,X564,X566,X567))))) )),
  inference(superposition,[],[f234,f177])).
fof(f37059,plain,(
  ( ! [X557,X559,X553,X555,X549,X551,X556,X558,X552,X554,X550] : (s('type.pair.prod'('type.infer.exc'(X551,X552),'type.infer_t.infer_t'),'const.pair.,_2'(s('type.infer.exc'(X551,X552),'const.infer.Success_1'(s(X551,X553))),s('type.infer_t.infer_t','const.unify.t_walkstar_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X549),s('type.infer_t.infer_t',X550))))) != s('type.pair.prod'('type.infer.exc'(X551,X552),'type.infer_t.infer_t'),happ(s(fun(X554,'type.pair.prod'('type.infer.exc'(X551,X552),'type.infer_t.infer_t')),'const.option.option_CASE_3'(s('type.option.option'(X555),X556),s(fun(X554,'type.pair.prod'('type.infer.exc'(X551,X552),'type.infer_t.infer_t')),X557),s(fun(X555,fun(X554,'type.pair.prod'('type.infer.exc'(X551,X552),'type.infer_t.infer_t'))),X558))),s(X554,X559))) | s('type.option.option'(X555),'const.option.NONE_0') = s('type.option.option'(X555),X556) | s('type.option.option'(X555),X556) = s('type.option.option'(X555),'const.option.SOME_1'(s(X555,sK9(happ(s(fun('type.infer_t.infer_t','type.infer_t.infer_t'),happ(s(fun('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),fun('type.infer_t.infer_t','type.infer_t.infer_t')),'const.unify.t_walkstar_0'),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X549))),s('type.infer_t.infer_t',X550)),X559,X553,X558,X557,X556,'type.infer_t.infer_t',X551,X552,X554,X555))))) )),
  inference(superposition,[],[f234,f176])).
fof(f37058,plain,(
  ( ! [X540,X542,X546,X545,X541,X543,X547,X539,X548,X544] : (s('type.pair.prod'('type.infer.exc'(X540,X541),'type.infer_t.infer_t'),'const.pair.,_2'(s('type.infer.exc'(X540,X541),'const.infer.Success_1'(s(X540,X542))),s('type.infer_t.infer_t','const.infer_t.Infer_Tuvar_1'(s('type.num.num',X539))))) != s('type.pair.prod'('type.infer.exc'(X540,X541),'type.infer_t.infer_t'),happ(s(fun(X543,'type.pair.prod'('type.infer.exc'(X540,X541),'type.infer_t.infer_t')),'const.option.option_CASE_3'(s('type.option.option'(X544),X545),s(fun(X543,'type.pair.prod'('type.infer.exc'(X540,X541),'type.infer_t.infer_t')),X546),s(fun(X544,fun(X543,'type.pair.prod'('type.infer.exc'(X540,X541),'type.infer_t.infer_t'))),X547))),s(X543,X548))) | s('type.option.option'(X544),'const.option.NONE_0') = s('type.option.option'(X544),X545) | s('type.option.option'(X544),X545) = s('type.option.option'(X544),'const.option.SOME_1'(s(X544,sK9(happ(s(fun('type.num.num','type.infer_t.infer_t'),'const.infer_t.Infer_Tuvar_0'),s('type.num.num',X539)),X548,X542,X547,X546,X545,'type.infer_t.infer_t',X540,X541,X543,X544))))) )),
  inference(superposition,[],[f234,f166])).
fof(f37057,plain,(
  ( ! [X536,X538,X532,X534,X528,X530,X537,X533,X535,X529,X531] : (s('type.pair.prod'('type.infer.exc'(X530,X531),'type.num.num'),'const.pair.,_2'(s('type.infer.exc'(X530,X531),'const.infer.Success_1'(s(X530,X532))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X528),s('type.num.num',X529))))) != s('type.pair.prod'('type.infer.exc'(X530,X531),'type.num.num'),happ(s(fun(X533,'type.pair.prod'('type.infer.exc'(X530,X531),'type.num.num')),'const.option.option_CASE_3'(s('type.option.option'(X534),X535),s(fun(X533,'type.pair.prod'('type.infer.exc'(X530,X531),'type.num.num')),X536),s(fun(X534,fun(X533,'type.pair.prod'('type.infer.exc'(X530,X531),'type.num.num'))),X537))),s(X533,X538))) | s('type.option.option'(X534),'const.option.NONE_0') = s('type.option.option'(X534),X535) | s('type.option.option'(X534),X535) = s('type.option.option'(X534),'const.option.SOME_1'(s(X534,sK9(happ(s(fun('type.num.num','type.num.num'),'const.arithmetic.+_1'(s('type.num.num',X528))),s('type.num.num',X529)),X538,X532,X537,X536,X535,'type.num.num',X530,X531,X533,X534))))) )),
  inference(superposition,[],[f234,f175])).
fof(f37054,plain,(
  ( ! [X499,X509,X505,X507,X500,X502,X498,X508,X504,X506,X501,X503,X497] : (s('type.pair.prod'('type.infer.exc'(X501,X502),'type.list.list'(X497)),'const.pair.,_2'(s('type.infer.exc'(X501,X502),'const.infer.Success_1'(s(X501,X503))),s('type.list.list'(X497),'const.list.MAP_2'(s(fun(X498,X497),X499),s('type.list.list'(X498),X500))))) != s('type.pair.prod'('type.infer.exc'(X501,X502),'type.list.list'(X497)),happ(s(fun(X504,'type.pair.prod'('type.infer.exc'(X501,X502),'type.list.list'(X497))),'const.option.option_CASE_3'(s('type.option.option'(X505),X506),s(fun(X504,'type.pair.prod'('type.infer.exc'(X501,X502),'type.list.list'(X497))),X507),s(fun(X505,fun(X504,'type.pair.prod'('type.infer.exc'(X501,X502),'type.list.list'(X497)))),X508))),s(X504,X509))) | s('type.option.option'(X505),'const.option.NONE_0') = s('type.option.option'(X505),X506) | s('type.option.option'(X505),X506) = s('type.option.option'(X505),'const.option.SOME_1'(s(X505,sK9(happ(s(fun('type.list.list'(X498),'type.list.list'(X497)),happ(s(fun(fun(X498,X497),fun('type.list.list'(X498),'type.list.list'(X497))),'const.list.MAP_0'),s(fun(X498,X497),X499))),s('type.list.list'(X498),X500)),X509,X503,X508,X507,X506,'type.list.list'(X497),X501,X502,X504,X505))))) )),
  inference(superposition,[],[f234,f180])).
fof(f37051,plain,(
  ( ! [X466,X472,X474,X469,X471,X465,X467,X475,X473,X468,X470] : (s('type.pair.prod'('type.infer.exc'(X467,X468),'type.one.one'),'const.pair.,_2'(s('type.infer.exc'(X467,X468),'const.infer.Success_1'(s(X467,X469))),s('type.one.one',X466))) != s('type.pair.prod'('type.infer.exc'(X467,X468),'type.one.one'),happ(s(fun(X470,'type.pair.prod'('type.infer.exc'(X467,X468),'type.one.one')),'const.option.option_CASE_3'(s('type.option.option'(X471),X472),s(fun(X470,'type.pair.prod'('type.infer.exc'(X467,X468),'type.one.one')),X473),s(fun(X471,fun(X470,'type.pair.prod'('type.infer.exc'(X467,X468),'type.one.one'))),X474))),s(X470,X475))) | s('type.option.option'(X471),'const.option.NONE_0') = s('type.option.option'(X471),X472) | s('type.option.option'(X471),X472) = s('type.option.option'(X471),'const.option.SOME_1'(s(X471,sK9(X465,X475,X469,X474,X473,X472,'type.one.one',X467,X468,X470,X471))))) )),
  inference(superposition,[],[f234,f258])).
fof(f37050,plain,(
  ( ! [X455,X461,X463,X457,X459,X460,X462,X456,X458,X464] : (s('type.pair.prod'('type.infer.exc'(X456,X457),'type.one.one'),'const.pair.,_2'(s('type.infer.exc'(X456,X457),'const.infer.Success_1'(s(X456,X458))),s('type.one.one',X455))) != s('type.pair.prod'('type.infer.exc'(X456,X457),'type.one.one'),happ(s(fun(X459,'type.pair.prod'('type.infer.exc'(X456,X457),'type.one.one')),'const.option.option_CASE_3'(s('type.option.option'(X460),X461),s(fun(X459,'type.pair.prod'('type.infer.exc'(X456,X457),'type.one.one')),X462),s(fun(X460,fun(X459,'type.pair.prod'('type.infer.exc'(X456,X457),'type.one.one'))),X463))),s(X459,X464))) | s('type.option.option'(X460),'const.option.NONE_0') = s('type.option.option'(X460),X461) | s('type.option.option'(X460),X461) = s('type.option.option'(X460),'const.option.SOME_1'(s(X460,sK9('const.one.one_0',X464,X458,X463,X462,X461,'type.one.one',X456,X457,X459,X460))))) )),
  inference(superposition,[],[f234,f165])).
fof(f37049,plain,(
  ( ! [X445,X447,X453,X449,X451,X444,X446,X452,X454,X448,X450] : (s('type.pair.prod'('type.infer.exc'(X446,X447),fun('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X444),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))))),'const.pair.,_2'(s('type.infer.exc'(X446,X447),'const.infer.Success_1'(s(X446,X448))),s(fun('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X444),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.infer.apply_subst_list_1'(s('type.list.list'('type.infer_t.infer_t'),X445))))) != s('type.pair.prod'('type.infer.exc'(X446,X447),fun('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X444),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))))),happ(s(fun(X449,'type.pair.prod'('type.infer.exc'(X446,X447),fun('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X444),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))))),'const.option.option_CASE_3'(s('type.option.option'(X450),X451),s(fun(X449,'type.pair.prod'('type.infer.exc'(X446,X447),fun('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X444),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))))),X452),s(fun(X450,fun(X449,'type.pair.prod'('type.infer.exc'(X446,X447),fun('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X444),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))))))),X453))),s(X449,X454))) | s('type.option.option'(X450),'const.option.NONE_0') = s('type.option.option'(X450),X451) | s('type.option.option'(X450),X451) = s('type.option.option'(X450),'const.option.SOME_1'(s(X450,sK9(happ(s(fun('type.list.list'('type.infer_t.infer_t'),fun('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X444),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))))),'const.infer.apply_subst_list_0'),s('type.list.list'('type.infer_t.infer_t'),X445)),X454,X448,X453,X452,X451,fun('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X444),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),X446,X447,X449,X450))))) )),
  inference(superposition,[],[f234,f169])).
fof(f37041,plain,(
  ( ! [X350,X344,X346,X356,X352,X354,X358,X349,X351,X345,X347,X357,X353,X355,X359,X348] : (s('type.pair.prod'('type.infer.exc'(X351,X352),fun(X344,fun(X345,fun(X346,fun(X347,fun(X348,'type.one.one')))))),'const.pair.,_2'(s('type.infer.exc'(X351,X352),'const.infer.Success_1'(s(X351,X353))),s(fun(X344,fun(X345,fun(X346,fun(X347,fun(X348,'type.one.one'))))),X350))) != s('type.pair.prod'('type.infer.exc'(X351,X352),fun(X344,fun(X345,fun(X346,fun(X347,fun(X348,'type.one.one')))))),happ(s(fun(X354,'type.pair.prod'('type.infer.exc'(X351,X352),fun(X344,fun(X345,fun(X346,fun(X347,fun(X348,'type.one.one'))))))),'const.option.option_CASE_3'(s('type.option.option'(X355),X356),s(fun(X354,'type.pair.prod'('type.infer.exc'(X351,X352),fun(X344,fun(X345,fun(X346,fun(X347,fun(X348,'type.one.one'))))))),X357),s(fun(X355,fun(X354,'type.pair.prod'('type.infer.exc'(X351,X352),fun(X344,fun(X345,fun(X346,fun(X347,fun(X348,'type.one.one')))))))),X358))),s(X354,X359))) | s('type.option.option'(X355),'const.option.NONE_0') = s('type.option.option'(X355),X356) | s('type.option.option'(X355),X356) = s('type.option.option'(X355),'const.option.SOME_1'(s(X355,sK9(X349,X359,X353,X358,X357,X356,fun(X344,fun(X345,fun(X346,fun(X347,fun(X348,'type.one.one'))))),X351,X352,X354,X355))))) )),
  inference(superposition,[],[f234,f815])).
fof(f37039,plain,(
  ( ! [X315,X325,X327,X321,X323,X316,X318,X314,X324,X326,X320,X322,X328,X317,X319] : (s('type.pair.prod'('type.infer.exc'(X320,X321),fun(X314,fun(X315,fun(X316,fun(X317,'type.one.one'))))),'const.pair.,_2'(s('type.infer.exc'(X320,X321),'const.infer.Success_1'(s(X320,X322))),s(fun(X314,fun(X315,fun(X316,fun(X317,'type.one.one')))),X319))) != s('type.pair.prod'('type.infer.exc'(X320,X321),fun(X314,fun(X315,fun(X316,fun(X317,'type.one.one'))))),happ(s(fun(X323,'type.pair.prod'('type.infer.exc'(X320,X321),fun(X314,fun(X315,fun(X316,fun(X317,'type.one.one')))))),'const.option.option_CASE_3'(s('type.option.option'(X324),X325),s(fun(X323,'type.pair.prod'('type.infer.exc'(X320,X321),fun(X314,fun(X315,fun(X316,fun(X317,'type.one.one')))))),X326),s(fun(X324,fun(X323,'type.pair.prod'('type.infer.exc'(X320,X321),fun(X314,fun(X315,fun(X316,fun(X317,'type.one.one'))))))),X327))),s(X323,X328))) | s('type.option.option'(X324),'const.option.NONE_0') = s('type.option.option'(X324),X325) | s('type.option.option'(X324),X325) = s('type.option.option'(X324),'const.option.SOME_1'(s(X324,sK9(X318,X328,X322,X327,X326,X325,fun(X314,fun(X315,fun(X316,fun(X317,'type.one.one')))),X320,X321,X323,X324))))) )),
  inference(superposition,[],[f234,f787])).
fof(f37037,plain,(
  ( ! [X292,X294,X288,X290,X296,X298,X287,X293,X295,X289,X291,X297,X299,X286] : (s('type.pair.prod'('type.infer.exc'(X291,X292),fun(X286,fun(X287,fun(X288,'type.one.one')))),'const.pair.,_2'(s('type.infer.exc'(X291,X292),'const.infer.Success_1'(s(X291,X293))),s(fun(X286,fun(X287,fun(X288,'type.one.one'))),X290))) != s('type.pair.prod'('type.infer.exc'(X291,X292),fun(X286,fun(X287,fun(X288,'type.one.one')))),happ(s(fun(X294,'type.pair.prod'('type.infer.exc'(X291,X292),fun(X286,fun(X287,fun(X288,'type.one.one'))))),'const.option.option_CASE_3'(s('type.option.option'(X295),X296),s(fun(X294,'type.pair.prod'('type.infer.exc'(X291,X292),fun(X286,fun(X287,fun(X288,'type.one.one'))))),X297),s(fun(X295,fun(X294,'type.pair.prod'('type.infer.exc'(X291,X292),fun(X286,fun(X287,fun(X288,'type.one.one')))))),X298))),s(X294,X299))) | s('type.option.option'(X295),'const.option.NONE_0') = s('type.option.option'(X295),X296) | s('type.option.option'(X295),X296) = s('type.option.option'(X295),'const.option.SOME_1'(s(X295,sK9(X289,X299,X293,X298,X297,X296,fun(X286,fun(X287,fun(X288,'type.one.one'))),X291,X292,X294,X295))))) )),
  inference(superposition,[],[f234,f752])).
fof(f37033,plain,(
  ( ! [X243,X241,X239,X237,X235,X246,X244,X242,X240,X238,X236,X234,X245] : (s('type.pair.prod'('type.infer.exc'(X238,X239),fun(X234,fun(X235,'type.one.one'))),'const.pair.,_2'(s('type.infer.exc'(X238,X239),'const.infer.Success_1'(s(X238,X240))),s(fun(X234,fun(X235,'type.one.one')),X237))) != s('type.pair.prod'('type.infer.exc'(X238,X239),fun(X234,fun(X235,'type.one.one'))),happ(s(fun(X241,'type.pair.prod'('type.infer.exc'(X238,X239),fun(X234,fun(X235,'type.one.one')))),'const.option.option_CASE_3'(s('type.option.option'(X242),X243),s(fun(X241,'type.pair.prod'('type.infer.exc'(X238,X239),fun(X234,fun(X235,'type.one.one')))),X244),s(fun(X242,fun(X241,'type.pair.prod'('type.infer.exc'(X238,X239),fun(X234,fun(X235,'type.one.one'))))),X245))),s(X241,X246))) | s('type.option.option'(X242),'const.option.NONE_0') = s('type.option.option'(X242),X243) | s('type.option.option'(X242),X243) = s('type.option.option'(X242),'const.option.SOME_1'(s(X242,sK9(X236,X246,X240,X245,X244,X243,fun(X234,fun(X235,'type.one.one')),X238,X239,X241,X242))))) )),
  inference(superposition,[],[f234,f724])).
fof(f37029,plain,(
  ( ! [X191,X189,X187,X196,X194,X192,X190,X188,X186,X195,X193,X197] : (s('type.pair.prod'('type.infer.exc'(X189,X190),fun(X186,'type.one.one')),'const.pair.,_2'(s('type.infer.exc'(X189,X190),'const.infer.Success_1'(s(X189,X191))),s(fun(X186,'type.one.one'),X188))) != s('type.pair.prod'('type.infer.exc'(X189,X190),fun(X186,'type.one.one')),happ(s(fun(X192,'type.pair.prod'('type.infer.exc'(X189,X190),fun(X186,'type.one.one'))),'const.option.option_CASE_3'(s('type.option.option'(X193),X194),s(fun(X192,'type.pair.prod'('type.infer.exc'(X189,X190),fun(X186,'type.one.one'))),X195),s(fun(X193,fun(X192,'type.pair.prod'('type.infer.exc'(X189,X190),fun(X186,'type.one.one')))),X196))),s(X192,X197))) | s('type.option.option'(X193),'const.option.NONE_0') = s('type.option.option'(X193),X194) | s('type.option.option'(X193),X194) = s('type.option.option'(X193),'const.option.SOME_1'(s(X193,sK9(X187,X197,X191,X196,X195,X194,fun(X186,'type.one.one'),X189,X190,X192,X193))))) )),
  inference(superposition,[],[f234,f605])).
fof(f37027,plain,(
  ( ! [X167,X165,X173,X171,X169,X166,X174,X172,X170,X168] : (s('type.pair.prod'('type.infer.exc'(X166,X167),bool),'const.pair.,_2'(s('type.infer.exc'(X166,X167),'const.infer.Success_1'(s(X166,X168))),s(bool,X165))) != s('type.pair.prod'('type.infer.exc'(X166,X167),bool),happ(s(fun(X169,'type.pair.prod'('type.infer.exc'(X166,X167),bool)),'const.option.option_CASE_3'(s('type.option.option'(X170),X171),s(fun(X169,'type.pair.prod'('type.infer.exc'(X166,X167),bool)),X172),s(fun(X170,fun(X169,'type.pair.prod'('type.infer.exc'(X166,X167),bool))),X173))),s(X169,X174))) | s('type.option.option'(X170),'const.option.NONE_0') = s('type.option.option'(X170),X171) | s('type.option.option'(X170),X171) = s('type.option.option'(X170),'const.option.SOME_1'(s(X170,sK9('F_0',X174,X168,X173,X172,X171,bool,X166,X167,X169,X170)))) | s(bool,'T_0') = s(bool,X165)) )),
  inference(superposition,[],[f234,f167])).
fof(f37025,plain,(
  ( ! [X146,X144,X152,X151,X149,X147,X145,X153,X143,X150,X148] : (s('type.pair.prod'('type.infer.exc'(X144,X145),bool),'const.pair.,_2'(s('type.infer.exc'(X144,X145),'const.infer.Success_1'(s(X144,X146))),s(bool,X143))) != s('type.pair.prod'('type.infer.exc'(X144,X145),bool),happ(s(fun(X147,'type.pair.prod'('type.infer.exc'(X144,X145),bool)),'const.option.option_CASE_3'(s('type.option.option'(X148),X149),s(fun(X147,'type.pair.prod'('type.infer.exc'(X144,X145),bool)),X150),s(fun(X148,fun(X147,'type.pair.prod'('type.infer.exc'(X144,X145),bool))),X151))),s(X147,X152))) | s('type.option.option'(X148),'const.option.NONE_0') = s('type.option.option'(X148),X149) | s('type.option.option'(X148),X149) = s('type.option.option'(X148),'const.option.SOME_1'(s(X148,sK9('T_0',X152,X146,X151,X150,X149,bool,X144,X145,X147,X148)))) | s(bool,X143) = s(bool,X153) | s(bool,'T_0') = s(bool,X153)) )),
  inference(superposition,[],[f234,f272])).
fof(f37022,plain,(
  ( ! [X111,X118,X116,X114,X112,X120,X110,X119,X117,X115,X113] : (s('type.pair.prod'('type.infer.exc'(X112,X113),bool),'const.pair.,_2'(s('type.infer.exc'(X112,X113),'const.infer.Success_1'(s(X112,X114))),s(bool,X111))) != s('type.pair.prod'('type.infer.exc'(X112,X113),bool),happ(s(fun(X115,'type.pair.prod'('type.infer.exc'(X112,X113),bool)),'const.option.option_CASE_3'(s('type.option.option'(X116),X117),s(fun(X115,'type.pair.prod'('type.infer.exc'(X112,X113),bool)),X118),s(fun(X116,fun(X115,'type.pair.prod'('type.infer.exc'(X112,X113),bool))),X119))),s(X115,X120))) | s('type.option.option'(X116),'const.option.NONE_0') = s('type.option.option'(X116),X117) | s('type.option.option'(X116),X117) = s('type.option.option'(X116),'const.option.SOME_1'(s(X116,sK9(X110,X120,X114,X119,X118,X117,bool,X112,X113,X115,X116)))) | s(bool,'T_0') = s(bool,X111) | s(bool,'T_0') = s(bool,X110)) )),
  inference(superposition,[],[f234,f272])).
fof(f37021,plain,(
  ( ! [X103,X101,X99,X109,X107,X105,X102,X100,X108,X106,X104] : (s('type.pair.prod'('type.infer.exc'(X100,X101),bool),'const.pair.,_2'(s('type.infer.exc'(X100,X101),'const.infer.Success_1'(s(X100,X102))),s(bool,'T_0'))) != s('type.pair.prod'('type.infer.exc'(X100,X101),bool),happ(s(fun(X103,'type.pair.prod'('type.infer.exc'(X100,X101),bool)),'const.option.option_CASE_3'(s('type.option.option'(X104),X105),s(fun(X103,'type.pair.prod'('type.infer.exc'(X100,X101),bool)),X106),s(fun(X104,fun(X103,'type.pair.prod'('type.infer.exc'(X100,X101),bool))),X107))),s(X103,X108))) | s('type.option.option'(X104),'const.option.NONE_0') = s('type.option.option'(X104),X105) | s('type.option.option'(X104),X105) = s('type.option.option'(X104),'const.option.SOME_1'(s(X104,sK9(X99,X108,X102,X107,X106,X105,bool,X100,X101,X103,X104)))) | s(bool,X99) = s(bool,X109) | s(bool,'T_0') = s(bool,X109)) )),
  inference(superposition,[],[f234,f272])).
fof(f37020,plain,(
  ( ! [X94,X92,X90,X97,X95,X93,X91,X89,X98,X96] : (s('type.pair.prod'('type.infer.exc'(X90,X91),bool),'const.pair.,_2'(s('type.infer.exc'(X90,X91),'const.infer.Success_1'(s(X90,X92))),s(bool,'F_0'))) != s('type.pair.prod'('type.infer.exc'(X90,X91),bool),happ(s(fun(X93,'type.pair.prod'('type.infer.exc'(X90,X91),bool)),'const.option.option_CASE_3'(s('type.option.option'(X94),X95),s(fun(X93,'type.pair.prod'('type.infer.exc'(X90,X91),bool)),X96),s(fun(X94,fun(X93,'type.pair.prod'('type.infer.exc'(X90,X91),bool))),X97))),s(X93,X98))) | s('type.option.option'(X94),'const.option.NONE_0') = s('type.option.option'(X94),X95) | s('type.option.option'(X94),X95) = s('type.option.option'(X94),'const.option.SOME_1'(s(X94,sK9(X89,X98,X92,X97,X96,X95,bool,X90,X91,X93,X94)))) | s(bool,'T_0') = s(bool,X89)) )),
  inference(superposition,[],[f234,f167])).
fof(f37019,plain,(
  ( ! [X80,X88,X78,X76,X87,X85,X83,X81,X79,X77,X75,X86,X84,X82] : (s('type.pair.prod'('type.infer.exc'(X80,X81),X75),'const.pair.,_2'(s('type.infer.exc'(X80,X81),'const.infer.Success_1'(s(X80,X82))),s(X75,'const.option.option_CASE_3'(s('type.option.option'(X76),X77),s(X75,X78),s(fun(X76,X75),X79))))) != s('type.pair.prod'('type.infer.exc'(X80,X81),X75),happ(s(fun(X83,'type.pair.prod'('type.infer.exc'(X80,X81),X75)),'const.option.option_CASE_3'(s('type.option.option'(X84),X85),s(fun(X83,'type.pair.prod'('type.infer.exc'(X80,X81),X75)),X86),s(fun(X84,fun(X83,'type.pair.prod'('type.infer.exc'(X80,X81),X75))),X87))),s(X83,X88))) | s('type.option.option'(X84),'const.option.NONE_0') = s('type.option.option'(X84),X85) | s('type.option.option'(X84),X85) = s('type.option.option'(X84),'const.option.SOME_1'(s(X84,sK9(happ(s(fun(fun(X76,X75),X75),happ(s(fun(X75,fun(fun(X76,X75),X75)),happ(s(fun('type.option.option'(X76),fun(X75,fun(fun(X76,X75),X75))),'const.option.option_CASE_0'),s('type.option.option'(X76),X77))),s(X75,X78))),s(fun(X76,X75),X79)),X88,X82,X87,X86,X85,X75,X80,X81,X83,X84))))) )),
  inference(superposition,[],[f234,f184])).
fof(f37018,plain,(
  ( ! [X61,X59,X70,X68,X66,X64,X74,X72,X62,X60,X58,X71,X69,X67,X65,X73,X63] : (s('type.pair.prod'('type.infer.exc'(X66,X67),X58),'const.pair.,_2'(s('type.infer.exc'(X66,X67),'const.infer.Success_1'(s(X66,X68))),s(X58,happ(s(fun(X62,X58),'_dst_x0x1x0_3'(s(fun(X60,fun(X59,X58)),X61),s(fun(X62,X60),X63),s(X59,X65))),s(X62,X64))))) != s('type.pair.prod'('type.infer.exc'(X66,X67),X58),happ(s(fun(X69,'type.pair.prod'('type.infer.exc'(X66,X67),X58)),'const.option.option_CASE_3'(s('type.option.option'(X70),X71),s(fun(X69,'type.pair.prod'('type.infer.exc'(X66,X67),X58)),X72),s(fun(X70,fun(X69,'type.pair.prod'('type.infer.exc'(X66,X67),X58))),X73))),s(X69,X74))) | s('type.option.option'(X70),'const.option.NONE_0') = s('type.option.option'(X70),X71) | s('type.option.option'(X70),X71) = s('type.option.option'(X70),'const.option.SOME_1'(s(X70,sK9(happ(s(fun(X59,X58),happ(s(fun(X60,fun(X59,X58)),X61),s(X60,happ(s(fun(X62,X60),X63),s(X62,X64))))),s(X59,X65)),X74,X68,X73,X72,X71,X58,X66,X67,X69,X70))))) )),
  inference(superposition,[],[f234,f221])).
fof(f37017,plain,(
  ( ! [X57,X47,X45,X43,X41,X54,X52,X50,X48,X56,X46,X44,X42,X55,X53,X51,X49] : (s('type.pair.prod'('type.infer.exc'(X49,X50),X41),happ(s(fun(X52,'type.pair.prod'('type.infer.exc'(X49,X50),X41)),'const.option.option_CASE_3'(s('type.option.option'(X53),X54),s(fun(X52,'type.pair.prod'('type.infer.exc'(X49,X50),X41)),X55),s(fun(X53,fun(X52,'type.pair.prod'('type.infer.exc'(X49,X50),X41))),X56))),s(X52,X57))) != s('type.pair.prod'('type.infer.exc'(X49,X50),X41),'const.pair.,_2'(s('type.infer.exc'(X49,X50),'const.infer.Success_1'(s(X49,X51))),s(X41,happ(s(fun(X44,X41),happ(s(fun(X43,fun(X44,X41)),X45),s(X43,happ(s(fun(X42,X43),X46),s(X42,X48))))),s(X44,X47))))) | s('type.option.option'(X53),'const.option.NONE_0') = s('type.option.option'(X53),X54) | s('type.option.option'(X53),X54) = s('type.option.option'(X53),'const.option.SOME_1'(s(X53,sK9(happ(s(fun(X42,X41),'_dst_x0x1x0_3'(s(fun(X43,fun(X44,X41)),X45),s(fun(X42,X43),X46),s(X44,X47))),s(X42,X48)),X57,X51,X56,X55,X54,X41,X49,X50,X52,X53))))) )),
  inference(superposition,[],[f234,f221])).
fof(f37016,plain,(
  ( ! [X30,X28,X26,X39,X37,X35,X33,X31,X29,X27,X38,X36,X34,X32,X40] : (s('type.pair.prod'('type.infer.exc'(X32,X33),X26),'const.pair.,_2'(s('type.infer.exc'(X32,X33),'const.infer.Success_1'(s(X32,X34))),s(X26,happ(s(fun(X28,X26),X29),s(X28,happ(s(fun(X27,X28),X30),s(X27,X31))))))) != s('type.pair.prod'('type.infer.exc'(X32,X33),X26),happ(s(fun(X35,'type.pair.prod'('type.infer.exc'(X32,X33),X26)),'const.option.option_CASE_3'(s('type.option.option'(X36),X37),s(fun(X35,'type.pair.prod'('type.infer.exc'(X32,X33),X26)),X38),s(fun(X36,fun(X35,'type.pair.prod'('type.infer.exc'(X32,X33),X26))),X39))),s(X35,X40))) | s('type.option.option'(X36),'const.option.NONE_0') = s('type.option.option'(X36),X37) | s('type.option.option'(X36),X37) = s('type.option.option'(X36),'const.option.SOME_1'(s(X36,sK9(happ(s(fun(X27,X26),'_dst_x0x1_2'(s(fun(X28,X26),X29),s(fun(X27,X28),X30))),s(X27,X31)),X40,X34,X39,X38,X37,X26,X32,X33,X35,X36))))) )),
  inference(superposition,[],[f234,f206])).
fof(f37015,plain,(
  ( ! [X24,X14,X12,X23,X21,X19,X17,X25,X15,X13,X11,X22,X20,X18,X16] : (s('type.pair.prod'('type.infer.exc'(X17,X18),X11),'const.pair.,_2'(s('type.infer.exc'(X17,X18),'const.infer.Success_1'(s(X17,X19))),s(X11,happ(s(fun(X14,X11),'_dst_x0x1_2'(s(fun(X12,X11),X13),s(fun(X14,X12),X15))),s(X14,X16))))) != s('type.pair.prod'('type.infer.exc'(X17,X18),X11),happ(s(fun(X20,'type.pair.prod'('type.infer.exc'(X17,X18),X11)),'const.option.option_CASE_3'(s('type.option.option'(X21),X22),s(fun(X20,'type.pair.prod'('type.infer.exc'(X17,X18),X11)),X23),s(fun(X21,fun(X20,'type.pair.prod'('type.infer.exc'(X17,X18),X11))),X24))),s(X20,X25))) | s('type.option.option'(X21),'const.option.NONE_0') = s('type.option.option'(X21),X22) | s('type.option.option'(X21),X22) = s('type.option.option'(X21),'const.option.SOME_1'(s(X21,sK9(happ(s(fun(X12,X11),X13),s(X12,happ(s(fun(X14,X12),X15),s(X14,X16)))),X25,X19,X24,X23,X22,X11,X17,X18,X20,X21))))) )),
  inference(superposition,[],[f234,f206])).
fof(f37014,plain,(
  ( ! [X6,X4,X2,X0,X10,X8,X7,X5,X3,X1,X9] : (s('type.pair.prod'('type.infer.exc'(X2,X3),X0),'const.pair.,_2'(s('type.infer.exc'(X2,X3),'const.infer.Success_1'(s(X2,X4))),s(X0,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(X0),X1))))) != s('type.pair.prod'('type.infer.exc'(X2,X3),X0),happ(s(fun(X5,'type.pair.prod'('type.infer.exc'(X2,X3),X0)),'const.option.option_CASE_3'(s('type.option.option'(X6),X7),s(fun(X5,'type.pair.prod'('type.infer.exc'(X2,X3),X0)),X8),s(fun(X6,fun(X5,'type.pair.prod'('type.infer.exc'(X2,X3),X0))),X9))),s(X5,X10))) | s('type.option.option'(X6),'const.option.NONE_0') = s('type.option.option'(X6),X7) | s('type.option.option'(X6),X7) = s('type.option.option'(X6),'const.option.SOME_1'(s(X6,sK9(happ(s(fun('type.infer.infer_st'(X0),X0),'const.infer.infer_st_subst_0'),s('type.infer.infer_st'(X0),X1)),X10,X4,X9,X8,X7,X0,X2,X3,X5,X6))))) )),
  inference(superposition,[],[f234,f168])).
fof(f37013,plain,(
  ( ! [X819,X817,X810,X808,X814,X812,X818,X816,X811,X809,X815,X813] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X808),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X811),X812),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X808),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X811),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X808),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.apply_subst_2'(s('type.infer_t.infer_t',X809),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X810))))),s(X812,X813))) != s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X808),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X811),X812),happ(s(fun(X814,'type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X808),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X811),X812)),'const.option.option_CASE_3'(s('type.option.option'(X815),X816),s(fun(X814,'type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X808),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X811),X812)),X817),s(fun(X815,fun(X814,'type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X808),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X811),X812))),X818))),s(X814,X819))) | s('type.option.option'(X815),'const.option.NONE_0') = s('type.option.option'(X815),X816) | s('type.option.option'(X815),X816) = s('type.option.option'(X815),'const.option.SOME_1'(s(X815,sK9(X813,X819,happ(s(fun('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X808),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.infer.apply_subst_1'(s('type.infer_t.infer_t',X809))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X810)),X818,X817,X816,X812,'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X808),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X811,X814,X815))))) )),
  inference(superposition,[],[f234,f171])).
fof(f37012,plain,(
  ( ! [X798,X796,X802,X800,X806,X804,X799,X797,X803,X801,X807,X805] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X796),'type.infer.infer_st'(X797)),X799),X800),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X796),'type.infer.infer_st'(X797)),X799),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X796),'type.infer.infer_st'(X797)),'const.infer.fresh_uvar_1'(s('type.infer.infer_st'(X797),X798))))),s(X800,X801))) != s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X796),'type.infer.infer_st'(X797)),X799),X800),happ(s(fun(X802,'type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X796),'type.infer.infer_st'(X797)),X799),X800)),'const.option.option_CASE_3'(s('type.option.option'(X803),X804),s(fun(X802,'type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X796),'type.infer.infer_st'(X797)),X799),X800)),X805),s(fun(X803,fun(X802,'type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X796),'type.infer.infer_st'(X797)),X799),X800))),X806))),s(X802,X807))) | s('type.option.option'(X803),'const.option.NONE_0') = s('type.option.option'(X803),X804) | s('type.option.option'(X803),X804) = s('type.option.option'(X803),'const.option.SOME_1'(s(X803,sK9(X801,X807,happ(s(fun('type.infer.infer_st'(X797),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X796),'type.infer.infer_st'(X797))),'const.infer.fresh_uvar_0'),s('type.infer.infer_st'(X797),X798)),X806,X805,X804,X800,'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X796),'type.infer.infer_st'(X797)),X799,X802,X803))))) )),
  inference(superposition,[],[f234,f179])).
fof(f37006,plain,(
  ( ! [X736,X732,X734,X728,X730,X726,X737,X733,X735,X729,X731,X725,X727] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X725),'type.infer.infer_st'(X726)),X729),X730),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X725),'type.infer.infer_st'(X726)),X729),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X725),'type.infer.infer_st'(X726)),'const.infer.n_fresh_uvar_2'(s('type.num.num',X727),s('type.infer.infer_st'(X726),X728))))),s(X730,X731))) != s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X725),'type.infer.infer_st'(X726)),X729),X730),happ(s(fun(X732,'type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X725),'type.infer.infer_st'(X726)),X729),X730)),'const.option.option_CASE_3'(s('type.option.option'(X733),X734),s(fun(X732,'type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X725),'type.infer.infer_st'(X726)),X729),X730)),X735),s(fun(X733,fun(X732,'type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X725),'type.infer.infer_st'(X726)),X729),X730))),X736))),s(X732,X737))) | s('type.option.option'(X733),'const.option.NONE_0') = s('type.option.option'(X733),X734) | s('type.option.option'(X733),X734) = s('type.option.option'(X733),'const.option.SOME_1'(s(X733,sK9(X731,X737,happ(s(fun('type.infer.infer_st'(X726),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X725),'type.infer.infer_st'(X726))),happ(s(fun('type.num.num',fun('type.infer.infer_st'(X726),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X725),'type.infer.infer_st'(X726)))),'const.infer.n_fresh_uvar_0'),s('type.num.num',X727))),s('type.infer.infer_st'(X726),X728)),X736,X735,X734,X730,'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X725),'type.infer.infer_st'(X726)),X729,X732,X733))))) )),
  inference(superposition,[],[f234,f181])).
fof(f37005,plain,(
  ( ! [X724,X720,X722,X716,X718,X721,X723,X717,X719] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X716),X717),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X716),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraints_3'(s('type.list.list'('type.infer_t.infer_t'),sK0),s('type.list.list'('type.infer_t.infer_t'),sK1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))))),s(X717,X718))) != s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X716),X717),happ(s(fun(X719,'type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X716),X717)),'const.option.option_CASE_3'(s('type.option.option'(X720),X721),s(fun(X719,'type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X716),X717)),X722),s(fun(X720,fun(X719,'type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X716),X717))),X723))),s(X719,X724))) | s('type.option.option'(X720),'const.option.NONE_0') = s('type.option.option'(X720),X721) | s('type.option.option'(X720),X721) = s('type.option.option'(X720),'const.option.SOME_1'(s(X720,sK9(X718,X724,'const.pair.,_2'(s('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'const.infer.Success_1'(s('type.one.one','const.one.one_0'))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK3)),X723,X722,X721,X717,'type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X716,X719,X720))))) ) | $spl0),
  inference(superposition,[],[f234,f29772])).
fof(f37004,plain,(
  ( ! [X707,X705,X712,X714,X708,X710,X702,X704,X706,X713,X715,X709,X711,X703] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one',X702),X703),X707),X708),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one',X702),X703),X707),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.one.one',X702),X703),'const.infer.guard_3'(s(bool,X704),s(X702,X705),s(X703,X706))))),s(X708,X709))) != s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one',X702),X703),X707),X708),happ(s(fun(X710,'type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one',X702),X703),X707),X708)),'const.option.option_CASE_3'(s('type.option.option'(X711),X712),s(fun(X710,'type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one',X702),X703),X707),X708)),X713),s(fun(X711,fun(X710,'type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one',X702),X703),X707),X708))),X714))),s(X710,X715))) | s('type.option.option'(X711),'const.option.NONE_0') = s('type.option.option'(X711),X712) | s('type.option.option'(X711),X712) = s('type.option.option'(X711),'const.option.SOME_1'(s(X711,sK9(X709,X715,happ(s(fun(X703,'type.pair.prod'('type.infer.exc'('type.one.one',X702),X703)),'const.infer.guard_2'(s(bool,X704),s(X702,X705))),s(X703,X706)),X714,X713,X712,X708,'type.pair.prod'('type.infer.exc'('type.one.one',X702),X703),X707,X710,X711))))) )),
  inference(superposition,[],[f234,f183])).
fof(f36998,plain,(
  ( ! [X639,X633,X635,X629,X631,X640,X642,X636,X638,X632,X634,X628,X630,X641,X643,X637] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X628,'type.list.list'('type.string.char')),X629),X635),X636),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'(X628,'type.list.list'('type.string.char')),X629),X635),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'(X628,'type.list.list'('type.string.char')),X629),'const.infer.lookup_st_ex_4'(s(fun(X630,'type.list.list'('type.string.char')),X631),s(X630,X632),s('type.list.list'('type.pair.prod'(X630,X628)),X633),s(X629,X634))))),s(X636,X637))) != s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X628,'type.list.list'('type.string.char')),X629),X635),X636),happ(s(fun(X638,'type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X628,'type.list.list'('type.string.char')),X629),X635),X636)),'const.option.option_CASE_3'(s('type.option.option'(X639),X640),s(fun(X638,'type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X628,'type.list.list'('type.string.char')),X629),X635),X636)),X641),s(fun(X639,fun(X638,'type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X628,'type.list.list'('type.string.char')),X629),X635),X636))),X642))),s(X638,X643))) | s('type.option.option'(X639),'const.option.NONE_0') = s('type.option.option'(X639),X640) | s('type.option.option'(X639),X640) = s('type.option.option'(X639),'const.option.SOME_1'(s(X639,sK9(X637,X643,happ(s(fun(X629,'type.pair.prod'('type.infer.exc'(X628,'type.list.list'('type.string.char')),X629)),'const.infer.lookup_st_ex_3'(s(fun(X630,'type.list.list'('type.string.char')),X631),s(X630,X632),s('type.list.list'('type.pair.prod'(X630,X628)),X633))),s(X629,X634)),X642,X641,X640,X636,'type.pair.prod'('type.infer.exc'(X628,'type.list.list'('type.string.char')),X629),X635,X638,X639))))) )),
  inference(superposition,[],[f234,f207])).
fof(f36997,plain,(
  ( ! [X625,X627,X621,X623,X617,X619,X613,X615,X624,X626,X620,X622,X616,X618,X612,X614] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X612,X613),X614),X619),X620),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'(X612,X613),X614),X619),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'(X612,X613),X614),'const.infer.st_ex_bind_3'(s(fun(X614,'type.pair.prod'('type.infer.exc'(X615,X613),X614)),X616),s(fun(X615,fun(X614,'type.pair.prod'('type.infer.exc'(X612,X613),X614))),X617),s(X614,X618))))),s(X620,X621))) != s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X612,X613),X614),X619),X620),happ(s(fun(X622,'type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X612,X613),X614),X619),X620)),'const.option.option_CASE_3'(s('type.option.option'(X623),X624),s(fun(X622,'type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X612,X613),X614),X619),X620)),X625),s(fun(X623,fun(X622,'type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X612,X613),X614),X619),X620))),X626))),s(X622,X627))) | s('type.option.option'(X623),'const.option.NONE_0') = s('type.option.option'(X623),X624) | s('type.option.option'(X623),X624) = s('type.option.option'(X623),'const.option.SOME_1'(s(X623,sK9(X621,X627,happ(s(fun(X614,'type.pair.prod'('type.infer.exc'(X612,X613),X614)),'const.infer.st_ex_bind_2'(s(fun(X614,'type.pair.prod'('type.infer.exc'(X615,X613),X614)),X616),s(fun(X615,fun(X614,'type.pair.prod'('type.infer.exc'(X612,X613),X614))),X617))),s(X614,X618)),X626,X625,X624,X620,'type.pair.prod'('type.infer.exc'(X612,X613),X614),X619,X622,X623))))) )),
  inference(superposition,[],[f234,f254])).
fof(f36996,plain,(
  ( ! [X606,X600,X602,X610,X598,X609,X605,X607,X601,X603,X611,X599,X608,X604] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X598,X599),X600),X603),X604),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'(X598,X599),X600),X603),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'(X598,X599),X600),'const.infer.st_ex_return_2'(s(X598,X601),s(X600,X602))))),s(X604,X605))) != s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X598,X599),X600),X603),X604),happ(s(fun(X606,'type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X598,X599),X600),X603),X604)),'const.option.option_CASE_3'(s('type.option.option'(X607),X608),s(fun(X606,'type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X598,X599),X600),X603),X604)),X609),s(fun(X607,fun(X606,'type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X598,X599),X600),X603),X604))),X610))),s(X606,X611))) | s('type.option.option'(X607),'const.option.NONE_0') = s('type.option.option'(X607),X608) | s('type.option.option'(X607),X608) = s('type.option.option'(X607),'const.option.SOME_1'(s(X607,sK9(X605,X611,happ(s(fun(X600,'type.pair.prod'('type.infer.exc'(X598,X599),X600)),happ(s(fun(X598,fun(X600,'type.pair.prod'('type.infer.exc'(X598,X599),X600))),'const.infer.st_ex_return_0'),s(X598,X601))),s(X600,X602)),X610,X609,X608,X604,'type.pair.prod'('type.infer.exc'(X598,X599),X600),X603,X606,X607))))) )),
  inference(superposition,[],[f234,f205])).
fof(f36995,plain,(
  ( ! [X596,X592,X594,X588,X590,X584,X586,X597,X593,X595,X589,X591,X585,X587] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X584,X585),X586),X589),X590),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'(X584,X585),X586),X589),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'(X584,X585),X586),'const.infer.failwith_2'(s(X585,X587),s(X586,X588))))),s(X590,X591))) != s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X584,X585),X586),X589),X590),happ(s(fun(X592,'type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X584,X585),X586),X589),X590)),'const.option.option_CASE_3'(s('type.option.option'(X593),X594),s(fun(X592,'type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X584,X585),X586),X589),X590)),X595),s(fun(X593,fun(X592,'type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X584,X585),X586),X589),X590))),X596))),s(X592,X597))) | s('type.option.option'(X593),'const.option.NONE_0') = s('type.option.option'(X593),X594) | s('type.option.option'(X593),X594) = s('type.option.option'(X593),'const.option.SOME_1'(s(X593,sK9(X591,X597,happ(s(fun(X586,'type.pair.prod'('type.infer.exc'(X584,X585),X586)),'const.infer.failwith_1'(s(X585,X587))),s(X586,X588)),X596,X595,X594,X590,'type.pair.prod'('type.infer.exc'(X584,X585),X586),X589,X592,X593))))) )),
  inference(superposition,[],[f234,f204])).
fof(f36994,plain,(
  ( ! [X573,X575,X580,X582,X576,X578,X572,X574,X581,X583,X577,X579] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X572,X573),X572),X575),X576),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'(X572,X573),X572),X575),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'(X572,X573),X572),'const.infer.read_1'(s(X572,X574))))),s(X576,X577))) != s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X572,X573),X572),X575),X576),happ(s(fun(X578,'type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X572,X573),X572),X575),X576)),'const.option.option_CASE_3'(s('type.option.option'(X579),X580),s(fun(X578,'type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X572,X573),X572),X575),X576)),X581),s(fun(X579,fun(X578,'type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X572,X573),X572),X575),X576))),X582))),s(X578,X583))) | s('type.option.option'(X579),'const.option.NONE_0') = s('type.option.option'(X579),X580) | s('type.option.option'(X579),X580) = s('type.option.option'(X579),'const.option.SOME_1'(s(X579,sK9(X577,X583,happ(s(fun(X572,'type.pair.prod'('type.infer.exc'(X572,X573),X572)),'const.infer.read_0'),s(X572,X574)),X582,X581,X580,X576,'type.pair.prod'('type.infer.exc'(X572,X573),X572),X575,X578,X579))))) )),
  inference(superposition,[],[f234,f178])).
fof(f36993,plain,(
  ( ! [X569,X571,X565,X567,X561,X563,X568,X570,X564,X566,X560,X562] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X560,X561),X560),X563),X564),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'(X560,X561),X560),X563),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'(X560,X561),X560),'const.infer.read_1'(s(X560,X562))))),s(X564,X565))) != s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X560,X561),X560),X563),X564),happ(s(fun(X566,'type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X560,X561),X560),X563),X564)),'const.option.option_CASE_3'(s('type.option.option'(X567),X568),s(fun(X566,'type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X560,X561),X560),X563),X564)),X569),s(fun(X567,fun(X566,'type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X560,X561),X560),X563),X564))),X570))),s(X566,X571))) | s('type.option.option'(X567),'const.option.NONE_0') = s('type.option.option'(X567),X568) | s('type.option.option'(X567),X568) = s('type.option.option'(X567),'const.option.SOME_1'(s(X567,sK9(X565,X571,'const.pair.,_2'(s('type.infer.exc'(X560,X561),'const.infer.Success_1'(s(X560,X562))),s(X560,X562)),X570,X569,X568,X564,'type.pair.prod'('type.infer.exc'(X560,X561),X560),X563,X566,X567))))) )),
  inference(superposition,[],[f234,f177])).
fof(f36992,plain,(
  ( ! [X557,X559,X553,X555,X549,X551,X556,X558,X552,X554,X550] : (s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X551),X552),'const.pair.,_2'(s('type.infer.exc'('type.infer_t.infer_t',X551),'const.infer.Success_1'(s('type.infer_t.infer_t','const.unify.t_walkstar_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X549),s('type.infer_t.infer_t',X550))))),s(X552,X553))) != s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X551),X552),happ(s(fun(X554,'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X551),X552)),'const.option.option_CASE_3'(s('type.option.option'(X555),X556),s(fun(X554,'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X551),X552)),X557),s(fun(X555,fun(X554,'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X551),X552))),X558))),s(X554,X559))) | s('type.option.option'(X555),'const.option.NONE_0') = s('type.option.option'(X555),X556) | s('type.option.option'(X555),X556) = s('type.option.option'(X555),'const.option.SOME_1'(s(X555,sK9(X553,X559,happ(s(fun('type.infer_t.infer_t','type.infer_t.infer_t'),happ(s(fun('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),fun('type.infer_t.infer_t','type.infer_t.infer_t')),'const.unify.t_walkstar_0'),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X549))),s('type.infer_t.infer_t',X550)),X558,X557,X556,X552,'type.infer_t.infer_t',X551,X554,X555))))) )),
  inference(superposition,[],[f234,f176])).
fof(f36991,plain,(
  ( ! [X540,X542,X546,X545,X541,X543,X547,X539,X548,X544] : (s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X540),X541),'const.pair.,_2'(s('type.infer.exc'('type.infer_t.infer_t',X540),'const.infer.Success_1'(s('type.infer_t.infer_t','const.infer_t.Infer_Tuvar_1'(s('type.num.num',X539))))),s(X541,X542))) != s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X540),X541),happ(s(fun(X543,'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X540),X541)),'const.option.option_CASE_3'(s('type.option.option'(X544),X545),s(fun(X543,'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X540),X541)),X546),s(fun(X544,fun(X543,'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X540),X541))),X547))),s(X543,X548))) | s('type.option.option'(X544),'const.option.NONE_0') = s('type.option.option'(X544),X545) | s('type.option.option'(X544),X545) = s('type.option.option'(X544),'const.option.SOME_1'(s(X544,sK9(X542,X548,happ(s(fun('type.num.num','type.infer_t.infer_t'),'const.infer_t.Infer_Tuvar_0'),s('type.num.num',X539)),X547,X546,X545,X541,'type.infer_t.infer_t',X540,X543,X544))))) )),
  inference(superposition,[],[f234,f166])).
fof(f36990,plain,(
  ( ! [X536,X538,X532,X534,X528,X530,X537,X533,X535,X529,X531] : (s('type.pair.prod'('type.infer.exc'('type.num.num',X530),X531),'const.pair.,_2'(s('type.infer.exc'('type.num.num',X530),'const.infer.Success_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X528),s('type.num.num',X529))))),s(X531,X532))) != s('type.pair.prod'('type.infer.exc'('type.num.num',X530),X531),happ(s(fun(X533,'type.pair.prod'('type.infer.exc'('type.num.num',X530),X531)),'const.option.option_CASE_3'(s('type.option.option'(X534),X535),s(fun(X533,'type.pair.prod'('type.infer.exc'('type.num.num',X530),X531)),X536),s(fun(X534,fun(X533,'type.pair.prod'('type.infer.exc'('type.num.num',X530),X531))),X537))),s(X533,X538))) | s('type.option.option'(X534),'const.option.NONE_0') = s('type.option.option'(X534),X535) | s('type.option.option'(X534),X535) = s('type.option.option'(X534),'const.option.SOME_1'(s(X534,sK9(X532,X538,happ(s(fun('type.num.num','type.num.num'),'const.arithmetic.+_1'(s('type.num.num',X528))),s('type.num.num',X529)),X537,X536,X535,X531,'type.num.num',X530,X533,X534))))) )),
  inference(superposition,[],[f234,f175])).
fof(f36987,plain,(
  ( ! [X499,X509,X505,X507,X500,X502,X498,X508,X504,X506,X501,X503,X497] : (s('type.pair.prod'('type.infer.exc'('type.list.list'(X497),X501),X502),'const.pair.,_2'(s('type.infer.exc'('type.list.list'(X497),X501),'const.infer.Success_1'(s('type.list.list'(X497),'const.list.MAP_2'(s(fun(X498,X497),X499),s('type.list.list'(X498),X500))))),s(X502,X503))) != s('type.pair.prod'('type.infer.exc'('type.list.list'(X497),X501),X502),happ(s(fun(X504,'type.pair.prod'('type.infer.exc'('type.list.list'(X497),X501),X502)),'const.option.option_CASE_3'(s('type.option.option'(X505),X506),s(fun(X504,'type.pair.prod'('type.infer.exc'('type.list.list'(X497),X501),X502)),X507),s(fun(X505,fun(X504,'type.pair.prod'('type.infer.exc'('type.list.list'(X497),X501),X502))),X508))),s(X504,X509))) | s('type.option.option'(X505),'const.option.NONE_0') = s('type.option.option'(X505),X506) | s('type.option.option'(X505),X506) = s('type.option.option'(X505),'const.option.SOME_1'(s(X505,sK9(X503,X509,happ(s(fun('type.list.list'(X498),'type.list.list'(X497)),happ(s(fun(fun(X498,X497),fun('type.list.list'(X498),'type.list.list'(X497))),'const.list.MAP_0'),s(fun(X498,X497),X499))),s('type.list.list'(X498),X500)),X508,X507,X506,X502,'type.list.list'(X497),X501,X504,X505))))) )),
  inference(superposition,[],[f234,f180])).
fof(f36984,plain,(
  ( ! [X466,X472,X474,X469,X471,X465,X467,X475,X473,X468,X470] : (s('type.pair.prod'('type.infer.exc'('type.one.one',X467),X468),'const.pair.,_2'(s('type.infer.exc'('type.one.one',X467),'const.infer.Success_1'(s('type.one.one',X466))),s(X468,X469))) != s('type.pair.prod'('type.infer.exc'('type.one.one',X467),X468),happ(s(fun(X470,'type.pair.prod'('type.infer.exc'('type.one.one',X467),X468)),'const.option.option_CASE_3'(s('type.option.option'(X471),X472),s(fun(X470,'type.pair.prod'('type.infer.exc'('type.one.one',X467),X468)),X473),s(fun(X471,fun(X470,'type.pair.prod'('type.infer.exc'('type.one.one',X467),X468))),X474))),s(X470,X475))) | s('type.option.option'(X471),'const.option.NONE_0') = s('type.option.option'(X471),X472) | s('type.option.option'(X471),X472) = s('type.option.option'(X471),'const.option.SOME_1'(s(X471,sK9(X469,X475,X465,X474,X473,X472,X468,'type.one.one',X467,X470,X471))))) )),
  inference(superposition,[],[f234,f258])).
fof(f36983,plain,(
  ( ! [X455,X461,X463,X457,X459,X460,X462,X456,X458,X464] : (s('type.pair.prod'('type.infer.exc'('type.one.one',X456),X457),'const.pair.,_2'(s('type.infer.exc'('type.one.one',X456),'const.infer.Success_1'(s('type.one.one',X455))),s(X457,X458))) != s('type.pair.prod'('type.infer.exc'('type.one.one',X456),X457),happ(s(fun(X459,'type.pair.prod'('type.infer.exc'('type.one.one',X456),X457)),'const.option.option_CASE_3'(s('type.option.option'(X460),X461),s(fun(X459,'type.pair.prod'('type.infer.exc'('type.one.one',X456),X457)),X462),s(fun(X460,fun(X459,'type.pair.prod'('type.infer.exc'('type.one.one',X456),X457))),X463))),s(X459,X464))) | s('type.option.option'(X460),'const.option.NONE_0') = s('type.option.option'(X460),X461) | s('type.option.option'(X460),X461) = s('type.option.option'(X460),'const.option.SOME_1'(s(X460,sK9(X458,X464,'const.one.one_0',X463,X462,X461,X457,'type.one.one',X456,X459,X460))))) )),
  inference(superposition,[],[f234,f165])).
fof(f36982,plain,(
  ( ! [X445,X447,X453,X449,X451,X444,X446,X452,X454,X448,X450] : (s('type.pair.prod'('type.infer.exc'(fun('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X444),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),X446),X447),'const.pair.,_2'(s('type.infer.exc'(fun('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X444),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),X446),'const.infer.Success_1'(s(fun('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X444),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.infer.apply_subst_list_1'(s('type.list.list'('type.infer_t.infer_t'),X445))))),s(X447,X448))) != s('type.pair.prod'('type.infer.exc'(fun('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X444),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),X446),X447),happ(s(fun(X449,'type.pair.prod'('type.infer.exc'(fun('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X444),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),X446),X447)),'const.option.option_CASE_3'(s('type.option.option'(X450),X451),s(fun(X449,'type.pair.prod'('type.infer.exc'(fun('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X444),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),X446),X447)),X452),s(fun(X450,fun(X449,'type.pair.prod'('type.infer.exc'(fun('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X444),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),X446),X447))),X453))),s(X449,X454))) | s('type.option.option'(X450),'const.option.NONE_0') = s('type.option.option'(X450),X451) | s('type.option.option'(X450),X451) = s('type.option.option'(X450),'const.option.SOME_1'(s(X450,sK9(X448,X454,happ(s(fun('type.list.list'('type.infer_t.infer_t'),fun('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X444),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))))),'const.infer.apply_subst_list_0'),s('type.list.list'('type.infer_t.infer_t'),X445)),X453,X452,X451,X447,fun('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X444),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),X446,X449,X450))))) )),
  inference(superposition,[],[f234,f169])).
fof(f36974,plain,(
  ( ! [X350,X344,X346,X356,X352,X354,X358,X349,X351,X345,X347,X357,X353,X355,X359,X348] : (s('type.pair.prod'('type.infer.exc'(fun(X344,fun(X345,fun(X346,fun(X347,fun(X348,'type.one.one'))))),X351),X352),'const.pair.,_2'(s('type.infer.exc'(fun(X344,fun(X345,fun(X346,fun(X347,fun(X348,'type.one.one'))))),X351),'const.infer.Success_1'(s(fun(X344,fun(X345,fun(X346,fun(X347,fun(X348,'type.one.one'))))),X350))),s(X352,X353))) != s('type.pair.prod'('type.infer.exc'(fun(X344,fun(X345,fun(X346,fun(X347,fun(X348,'type.one.one'))))),X351),X352),happ(s(fun(X354,'type.pair.prod'('type.infer.exc'(fun(X344,fun(X345,fun(X346,fun(X347,fun(X348,'type.one.one'))))),X351),X352)),'const.option.option_CASE_3'(s('type.option.option'(X355),X356),s(fun(X354,'type.pair.prod'('type.infer.exc'(fun(X344,fun(X345,fun(X346,fun(X347,fun(X348,'type.one.one'))))),X351),X352)),X357),s(fun(X355,fun(X354,'type.pair.prod'('type.infer.exc'(fun(X344,fun(X345,fun(X346,fun(X347,fun(X348,'type.one.one'))))),X351),X352))),X358))),s(X354,X359))) | s('type.option.option'(X355),'const.option.NONE_0') = s('type.option.option'(X355),X356) | s('type.option.option'(X355),X356) = s('type.option.option'(X355),'const.option.SOME_1'(s(X355,sK9(X353,X359,X349,X358,X357,X356,X352,fun(X344,fun(X345,fun(X346,fun(X347,fun(X348,'type.one.one'))))),X351,X354,X355))))) )),
  inference(superposition,[],[f234,f815])).
fof(f36972,plain,(
  ( ! [X315,X325,X327,X321,X323,X316,X318,X314,X324,X326,X320,X322,X328,X317,X319] : (s('type.pair.prod'('type.infer.exc'(fun(X314,fun(X315,fun(X316,fun(X317,'type.one.one')))),X320),X321),'const.pair.,_2'(s('type.infer.exc'(fun(X314,fun(X315,fun(X316,fun(X317,'type.one.one')))),X320),'const.infer.Success_1'(s(fun(X314,fun(X315,fun(X316,fun(X317,'type.one.one')))),X319))),s(X321,X322))) != s('type.pair.prod'('type.infer.exc'(fun(X314,fun(X315,fun(X316,fun(X317,'type.one.one')))),X320),X321),happ(s(fun(X323,'type.pair.prod'('type.infer.exc'(fun(X314,fun(X315,fun(X316,fun(X317,'type.one.one')))),X320),X321)),'const.option.option_CASE_3'(s('type.option.option'(X324),X325),s(fun(X323,'type.pair.prod'('type.infer.exc'(fun(X314,fun(X315,fun(X316,fun(X317,'type.one.one')))),X320),X321)),X326),s(fun(X324,fun(X323,'type.pair.prod'('type.infer.exc'(fun(X314,fun(X315,fun(X316,fun(X317,'type.one.one')))),X320),X321))),X327))),s(X323,X328))) | s('type.option.option'(X324),'const.option.NONE_0') = s('type.option.option'(X324),X325) | s('type.option.option'(X324),X325) = s('type.option.option'(X324),'const.option.SOME_1'(s(X324,sK9(X322,X328,X318,X327,X326,X325,X321,fun(X314,fun(X315,fun(X316,fun(X317,'type.one.one')))),X320,X323,X324))))) )),
  inference(superposition,[],[f234,f787])).
fof(f36970,plain,(
  ( ! [X292,X294,X288,X290,X296,X298,X287,X293,X295,X289,X291,X297,X299,X286] : (s('type.pair.prod'('type.infer.exc'(fun(X286,fun(X287,fun(X288,'type.one.one'))),X291),X292),'const.pair.,_2'(s('type.infer.exc'(fun(X286,fun(X287,fun(X288,'type.one.one'))),X291),'const.infer.Success_1'(s(fun(X286,fun(X287,fun(X288,'type.one.one'))),X290))),s(X292,X293))) != s('type.pair.prod'('type.infer.exc'(fun(X286,fun(X287,fun(X288,'type.one.one'))),X291),X292),happ(s(fun(X294,'type.pair.prod'('type.infer.exc'(fun(X286,fun(X287,fun(X288,'type.one.one'))),X291),X292)),'const.option.option_CASE_3'(s('type.option.option'(X295),X296),s(fun(X294,'type.pair.prod'('type.infer.exc'(fun(X286,fun(X287,fun(X288,'type.one.one'))),X291),X292)),X297),s(fun(X295,fun(X294,'type.pair.prod'('type.infer.exc'(fun(X286,fun(X287,fun(X288,'type.one.one'))),X291),X292))),X298))),s(X294,X299))) | s('type.option.option'(X295),'const.option.NONE_0') = s('type.option.option'(X295),X296) | s('type.option.option'(X295),X296) = s('type.option.option'(X295),'const.option.SOME_1'(s(X295,sK9(X293,X299,X289,X298,X297,X296,X292,fun(X286,fun(X287,fun(X288,'type.one.one'))),X291,X294,X295))))) )),
  inference(superposition,[],[f234,f752])).
fof(f36966,plain,(
  ( ! [X243,X241,X239,X237,X235,X246,X244,X242,X240,X238,X236,X234,X245] : (s('type.pair.prod'('type.infer.exc'(fun(X234,fun(X235,'type.one.one')),X238),X239),'const.pair.,_2'(s('type.infer.exc'(fun(X234,fun(X235,'type.one.one')),X238),'const.infer.Success_1'(s(fun(X234,fun(X235,'type.one.one')),X237))),s(X239,X240))) != s('type.pair.prod'('type.infer.exc'(fun(X234,fun(X235,'type.one.one')),X238),X239),happ(s(fun(X241,'type.pair.prod'('type.infer.exc'(fun(X234,fun(X235,'type.one.one')),X238),X239)),'const.option.option_CASE_3'(s('type.option.option'(X242),X243),s(fun(X241,'type.pair.prod'('type.infer.exc'(fun(X234,fun(X235,'type.one.one')),X238),X239)),X244),s(fun(X242,fun(X241,'type.pair.prod'('type.infer.exc'(fun(X234,fun(X235,'type.one.one')),X238),X239))),X245))),s(X241,X246))) | s('type.option.option'(X242),'const.option.NONE_0') = s('type.option.option'(X242),X243) | s('type.option.option'(X242),X243) = s('type.option.option'(X242),'const.option.SOME_1'(s(X242,sK9(X240,X246,X236,X245,X244,X243,X239,fun(X234,fun(X235,'type.one.one')),X238,X241,X242))))) )),
  inference(superposition,[],[f234,f724])).
fof(f36962,plain,(
  ( ! [X191,X189,X187,X196,X194,X192,X190,X188,X186,X195,X193,X197] : (s('type.pair.prod'('type.infer.exc'(fun(X186,'type.one.one'),X189),X190),'const.pair.,_2'(s('type.infer.exc'(fun(X186,'type.one.one'),X189),'const.infer.Success_1'(s(fun(X186,'type.one.one'),X188))),s(X190,X191))) != s('type.pair.prod'('type.infer.exc'(fun(X186,'type.one.one'),X189),X190),happ(s(fun(X192,'type.pair.prod'('type.infer.exc'(fun(X186,'type.one.one'),X189),X190)),'const.option.option_CASE_3'(s('type.option.option'(X193),X194),s(fun(X192,'type.pair.prod'('type.infer.exc'(fun(X186,'type.one.one'),X189),X190)),X195),s(fun(X193,fun(X192,'type.pair.prod'('type.infer.exc'(fun(X186,'type.one.one'),X189),X190))),X196))),s(X192,X197))) | s('type.option.option'(X193),'const.option.NONE_0') = s('type.option.option'(X193),X194) | s('type.option.option'(X193),X194) = s('type.option.option'(X193),'const.option.SOME_1'(s(X193,sK9(X191,X197,X187,X196,X195,X194,X190,fun(X186,'type.one.one'),X189,X192,X193))))) )),
  inference(superposition,[],[f234,f605])).
fof(f36960,plain,(
  ( ! [X167,X165,X173,X171,X169,X166,X174,X172,X170,X168] : (s('type.pair.prod'('type.infer.exc'(bool,X166),X167),'const.pair.,_2'(s('type.infer.exc'(bool,X166),'const.infer.Success_1'(s(bool,X165))),s(X167,X168))) != s('type.pair.prod'('type.infer.exc'(bool,X166),X167),happ(s(fun(X169,'type.pair.prod'('type.infer.exc'(bool,X166),X167)),'const.option.option_CASE_3'(s('type.option.option'(X170),X171),s(fun(X169,'type.pair.prod'('type.infer.exc'(bool,X166),X167)),X172),s(fun(X170,fun(X169,'type.pair.prod'('type.infer.exc'(bool,X166),X167))),X173))),s(X169,X174))) | s('type.option.option'(X170),'const.option.NONE_0') = s('type.option.option'(X170),X171) | s('type.option.option'(X170),X171) = s('type.option.option'(X170),'const.option.SOME_1'(s(X170,sK9(X168,X174,'F_0',X173,X172,X171,X167,bool,X166,X169,X170)))) | s(bool,'T_0') = s(bool,X165)) )),
  inference(superposition,[],[f234,f167])).
fof(f36958,plain,(
  ( ! [X146,X144,X152,X151,X149,X147,X145,X153,X143,X150,X148] : (s('type.pair.prod'('type.infer.exc'(bool,X144),X145),'const.pair.,_2'(s('type.infer.exc'(bool,X144),'const.infer.Success_1'(s(bool,X143))),s(X145,X146))) != s('type.pair.prod'('type.infer.exc'(bool,X144),X145),happ(s(fun(X147,'type.pair.prod'('type.infer.exc'(bool,X144),X145)),'const.option.option_CASE_3'(s('type.option.option'(X148),X149),s(fun(X147,'type.pair.prod'('type.infer.exc'(bool,X144),X145)),X150),s(fun(X148,fun(X147,'type.pair.prod'('type.infer.exc'(bool,X144),X145))),X151))),s(X147,X152))) | s('type.option.option'(X148),'const.option.NONE_0') = s('type.option.option'(X148),X149) | s('type.option.option'(X148),X149) = s('type.option.option'(X148),'const.option.SOME_1'(s(X148,sK9(X146,X152,'T_0',X151,X150,X149,X145,bool,X144,X147,X148)))) | s(bool,X143) = s(bool,X153) | s(bool,'T_0') = s(bool,X153)) )),
  inference(superposition,[],[f234,f272])).
fof(f36955,plain,(
  ( ! [X111,X118,X116,X114,X112,X120,X110,X119,X117,X115,X113] : (s('type.pair.prod'('type.infer.exc'(bool,X112),X113),'const.pair.,_2'(s('type.infer.exc'(bool,X112),'const.infer.Success_1'(s(bool,X111))),s(X113,X114))) != s('type.pair.prod'('type.infer.exc'(bool,X112),X113),happ(s(fun(X115,'type.pair.prod'('type.infer.exc'(bool,X112),X113)),'const.option.option_CASE_3'(s('type.option.option'(X116),X117),s(fun(X115,'type.pair.prod'('type.infer.exc'(bool,X112),X113)),X118),s(fun(X116,fun(X115,'type.pair.prod'('type.infer.exc'(bool,X112),X113))),X119))),s(X115,X120))) | s('type.option.option'(X116),'const.option.NONE_0') = s('type.option.option'(X116),X117) | s('type.option.option'(X116),X117) = s('type.option.option'(X116),'const.option.SOME_1'(s(X116,sK9(X114,X120,X110,X119,X118,X117,X113,bool,X112,X115,X116)))) | s(bool,'T_0') = s(bool,X111) | s(bool,'T_0') = s(bool,X110)) )),
  inference(superposition,[],[f234,f272])).
fof(f36954,plain,(
  ( ! [X103,X101,X99,X109,X107,X105,X102,X100,X108,X106,X104] : (s('type.pair.prod'('type.infer.exc'(bool,X100),X101),'const.pair.,_2'(s('type.infer.exc'(bool,X100),'const.infer.Success_1'(s(bool,'T_0'))),s(X101,X102))) != s('type.pair.prod'('type.infer.exc'(bool,X100),X101),happ(s(fun(X103,'type.pair.prod'('type.infer.exc'(bool,X100),X101)),'const.option.option_CASE_3'(s('type.option.option'(X104),X105),s(fun(X103,'type.pair.prod'('type.infer.exc'(bool,X100),X101)),X106),s(fun(X104,fun(X103,'type.pair.prod'('type.infer.exc'(bool,X100),X101))),X107))),s(X103,X108))) | s('type.option.option'(X104),'const.option.NONE_0') = s('type.option.option'(X104),X105) | s('type.option.option'(X104),X105) = s('type.option.option'(X104),'const.option.SOME_1'(s(X104,sK9(X102,X108,X99,X107,X106,X105,X101,bool,X100,X103,X104)))) | s(bool,X99) = s(bool,X109) | s(bool,'T_0') = s(bool,X109)) )),
  inference(superposition,[],[f234,f272])).
fof(f36953,plain,(
  ( ! [X94,X92,X90,X97,X95,X93,X91,X89,X98,X96] : (s('type.pair.prod'('type.infer.exc'(bool,X90),X91),'const.pair.,_2'(s('type.infer.exc'(bool,X90),'const.infer.Success_1'(s(bool,'F_0'))),s(X91,X92))) != s('type.pair.prod'('type.infer.exc'(bool,X90),X91),happ(s(fun(X93,'type.pair.prod'('type.infer.exc'(bool,X90),X91)),'const.option.option_CASE_3'(s('type.option.option'(X94),X95),s(fun(X93,'type.pair.prod'('type.infer.exc'(bool,X90),X91)),X96),s(fun(X94,fun(X93,'type.pair.prod'('type.infer.exc'(bool,X90),X91))),X97))),s(X93,X98))) | s('type.option.option'(X94),'const.option.NONE_0') = s('type.option.option'(X94),X95) | s('type.option.option'(X94),X95) = s('type.option.option'(X94),'const.option.SOME_1'(s(X94,sK9(X92,X98,X89,X97,X96,X95,X91,bool,X90,X93,X94)))) | s(bool,'T_0') = s(bool,X89)) )),
  inference(superposition,[],[f234,f167])).
fof(f36952,plain,(
  ( ! [X80,X88,X78,X76,X87,X85,X83,X81,X79,X77,X75,X86,X84,X82] : (s('type.pair.prod'('type.infer.exc'(X75,X80),X81),'const.pair.,_2'(s('type.infer.exc'(X75,X80),'const.infer.Success_1'(s(X75,'const.option.option_CASE_3'(s('type.option.option'(X76),X77),s(X75,X78),s(fun(X76,X75),X79))))),s(X81,X82))) != s('type.pair.prod'('type.infer.exc'(X75,X80),X81),happ(s(fun(X83,'type.pair.prod'('type.infer.exc'(X75,X80),X81)),'const.option.option_CASE_3'(s('type.option.option'(X84),X85),s(fun(X83,'type.pair.prod'('type.infer.exc'(X75,X80),X81)),X86),s(fun(X84,fun(X83,'type.pair.prod'('type.infer.exc'(X75,X80),X81))),X87))),s(X83,X88))) | s('type.option.option'(X84),'const.option.NONE_0') = s('type.option.option'(X84),X85) | s('type.option.option'(X84),X85) = s('type.option.option'(X84),'const.option.SOME_1'(s(X84,sK9(X82,X88,happ(s(fun(fun(X76,X75),X75),happ(s(fun(X75,fun(fun(X76,X75),X75)),happ(s(fun('type.option.option'(X76),fun(X75,fun(fun(X76,X75),X75))),'const.option.option_CASE_0'),s('type.option.option'(X76),X77))),s(X75,X78))),s(fun(X76,X75),X79)),X87,X86,X85,X81,X75,X80,X83,X84))))) )),
  inference(superposition,[],[f234,f184])).
fof(f36951,plain,(
  ( ! [X61,X59,X70,X68,X66,X64,X74,X72,X62,X60,X58,X71,X69,X67,X65,X73,X63] : (s('type.pair.prod'('type.infer.exc'(X58,X66),X67),'const.pair.,_2'(s('type.infer.exc'(X58,X66),'const.infer.Success_1'(s(X58,happ(s(fun(X62,X58),'_dst_x0x1x0_3'(s(fun(X60,fun(X59,X58)),X61),s(fun(X62,X60),X63),s(X59,X65))),s(X62,X64))))),s(X67,X68))) != s('type.pair.prod'('type.infer.exc'(X58,X66),X67),happ(s(fun(X69,'type.pair.prod'('type.infer.exc'(X58,X66),X67)),'const.option.option_CASE_3'(s('type.option.option'(X70),X71),s(fun(X69,'type.pair.prod'('type.infer.exc'(X58,X66),X67)),X72),s(fun(X70,fun(X69,'type.pair.prod'('type.infer.exc'(X58,X66),X67))),X73))),s(X69,X74))) | s('type.option.option'(X70),'const.option.NONE_0') = s('type.option.option'(X70),X71) | s('type.option.option'(X70),X71) = s('type.option.option'(X70),'const.option.SOME_1'(s(X70,sK9(X68,X74,happ(s(fun(X59,X58),happ(s(fun(X60,fun(X59,X58)),X61),s(X60,happ(s(fun(X62,X60),X63),s(X62,X64))))),s(X59,X65)),X73,X72,X71,X67,X58,X66,X69,X70))))) )),
  inference(superposition,[],[f234,f221])).
fof(f36950,plain,(
  ( ! [X57,X47,X45,X43,X41,X54,X52,X50,X48,X56,X46,X44,X42,X55,X53,X51,X49] : (s('type.pair.prod'('type.infer.exc'(X41,X49),X50),happ(s(fun(X52,'type.pair.prod'('type.infer.exc'(X41,X49),X50)),'const.option.option_CASE_3'(s('type.option.option'(X53),X54),s(fun(X52,'type.pair.prod'('type.infer.exc'(X41,X49),X50)),X55),s(fun(X53,fun(X52,'type.pair.prod'('type.infer.exc'(X41,X49),X50))),X56))),s(X52,X57))) != s('type.pair.prod'('type.infer.exc'(X41,X49),X50),'const.pair.,_2'(s('type.infer.exc'(X41,X49),'const.infer.Success_1'(s(X41,happ(s(fun(X44,X41),happ(s(fun(X43,fun(X44,X41)),X45),s(X43,happ(s(fun(X42,X43),X46),s(X42,X48))))),s(X44,X47))))),s(X50,X51))) | s('type.option.option'(X53),'const.option.NONE_0') = s('type.option.option'(X53),X54) | s('type.option.option'(X53),X54) = s('type.option.option'(X53),'const.option.SOME_1'(s(X53,sK9(X51,X57,happ(s(fun(X42,X41),'_dst_x0x1x0_3'(s(fun(X43,fun(X44,X41)),X45),s(fun(X42,X43),X46),s(X44,X47))),s(X42,X48)),X56,X55,X54,X50,X41,X49,X52,X53))))) )),
  inference(superposition,[],[f234,f221])).
fof(f36949,plain,(
  ( ! [X30,X28,X26,X39,X37,X35,X33,X31,X29,X27,X38,X36,X34,X32,X40] : (s('type.pair.prod'('type.infer.exc'(X26,X32),X33),'const.pair.,_2'(s('type.infer.exc'(X26,X32),'const.infer.Success_1'(s(X26,happ(s(fun(X28,X26),X29),s(X28,happ(s(fun(X27,X28),X30),s(X27,X31))))))),s(X33,X34))) != s('type.pair.prod'('type.infer.exc'(X26,X32),X33),happ(s(fun(X35,'type.pair.prod'('type.infer.exc'(X26,X32),X33)),'const.option.option_CASE_3'(s('type.option.option'(X36),X37),s(fun(X35,'type.pair.prod'('type.infer.exc'(X26,X32),X33)),X38),s(fun(X36,fun(X35,'type.pair.prod'('type.infer.exc'(X26,X32),X33))),X39))),s(X35,X40))) | s('type.option.option'(X36),'const.option.NONE_0') = s('type.option.option'(X36),X37) | s('type.option.option'(X36),X37) = s('type.option.option'(X36),'const.option.SOME_1'(s(X36,sK9(X34,X40,happ(s(fun(X27,X26),'_dst_x0x1_2'(s(fun(X28,X26),X29),s(fun(X27,X28),X30))),s(X27,X31)),X39,X38,X37,X33,X26,X32,X35,X36))))) )),
  inference(superposition,[],[f234,f206])).
fof(f36948,plain,(
  ( ! [X24,X14,X12,X23,X21,X19,X17,X25,X15,X13,X11,X22,X20,X18,X16] : (s('type.pair.prod'('type.infer.exc'(X11,X17),X18),'const.pair.,_2'(s('type.infer.exc'(X11,X17),'const.infer.Success_1'(s(X11,happ(s(fun(X14,X11),'_dst_x0x1_2'(s(fun(X12,X11),X13),s(fun(X14,X12),X15))),s(X14,X16))))),s(X18,X19))) != s('type.pair.prod'('type.infer.exc'(X11,X17),X18),happ(s(fun(X20,'type.pair.prod'('type.infer.exc'(X11,X17),X18)),'const.option.option_CASE_3'(s('type.option.option'(X21),X22),s(fun(X20,'type.pair.prod'('type.infer.exc'(X11,X17),X18)),X23),s(fun(X21,fun(X20,'type.pair.prod'('type.infer.exc'(X11,X17),X18))),X24))),s(X20,X25))) | s('type.option.option'(X21),'const.option.NONE_0') = s('type.option.option'(X21),X22) | s('type.option.option'(X21),X22) = s('type.option.option'(X21),'const.option.SOME_1'(s(X21,sK9(X19,X25,happ(s(fun(X12,X11),X13),s(X12,happ(s(fun(X14,X12),X15),s(X14,X16)))),X24,X23,X22,X18,X11,X17,X20,X21))))) )),
  inference(superposition,[],[f234,f206])).
fof(f36947,plain,(
  ( ! [X6,X4,X2,X0,X10,X8,X7,X5,X3,X1,X9] : (s('type.pair.prod'('type.infer.exc'(X0,X2),X3),'const.pair.,_2'(s('type.infer.exc'(X0,X2),'const.infer.Success_1'(s(X0,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(X0),X1))))),s(X3,X4))) != s('type.pair.prod'('type.infer.exc'(X0,X2),X3),happ(s(fun(X5,'type.pair.prod'('type.infer.exc'(X0,X2),X3)),'const.option.option_CASE_3'(s('type.option.option'(X6),X7),s(fun(X5,'type.pair.prod'('type.infer.exc'(X0,X2),X3)),X8),s(fun(X6,fun(X5,'type.pair.prod'('type.infer.exc'(X0,X2),X3))),X9))),s(X5,X10))) | s('type.option.option'(X6),'const.option.NONE_0') = s('type.option.option'(X6),X7) | s('type.option.option'(X6),X7) = s('type.option.option'(X6),'const.option.SOME_1'(s(X6,sK9(X4,X10,happ(s(fun('type.infer.infer_st'(X0),X0),'const.infer.infer_st_subst_0'),s('type.infer.infer_st'(X0),X1)),X9,X8,X7,X3,X0,X2,X5,X6))))) )),
  inference(superposition,[],[f234,f168])).
fof(f35313,plain,(
  ( ! [X2,X0,X1] : (s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraint_3'(s('type.infer_t.infer_t',X0),s('type.infer_t.infer_t',X1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X2))) != s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraints_3'(s('type.list.list'('type.infer_t.infer_t'),sK0),s('type.list.list'('type.infer_t.infer_t'),sK1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))) | s('type.option.option'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.option.SOME_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK8('const.one.one_0',sK3,X2,X1,X0)))) = s('type.option.option'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.unify.t_unify_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X2))),s('type.infer_t.infer_t',X0),s('type.infer_t.infer_t',X1)))) ) | $spl0),
  inference(superposition,[],[f226,f29772])).
fof(f35312,plain,(
  ( ! [X47,X45,X52,X50,X48,X46,X51,X49] : (s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraint_3'(s('type.infer_t.infer_t',X49),s('type.infer_t.infer_t',X50),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X51))) != s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'const.infer.Success_1'(s('type.one.one',X52))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.option.option_CASE_3'(s('type.option.option'(X45),X46),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X47),s(fun(X45,'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X48))))) | s('type.option.option'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.unify.t_unify_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X51))),s('type.infer_t.infer_t',X49),s('type.infer_t.infer_t',X50))) = s('type.option.option'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.option.SOME_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK8(X52,happ(s(fun(fun(X45,'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),happ(s(fun('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),fun(fun(X45,'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),happ(s(fun('type.option.option'(X45),fun('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),fun(fun(X45,'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))))),'const.option.option_CASE_0'),s('type.option.option'(X45),X46))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X47))),s(fun(X45,'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X48)),X51,X50,X49))))) )),
  inference(superposition,[],[f226,f184])).
fof(f35311,plain,(
  ( ! [X39,X37,X35,X43,X41,X38,X36,X34,X44,X42,X40] : (s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraint_3'(s('type.infer_t.infer_t',X41),s('type.infer_t.infer_t',X42),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X43))) != s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'const.infer.Success_1'(s('type.one.one',X44))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),happ(s(fun(X37,'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'_dst_x0x1x0_3'(s(fun(X35,fun(X34,'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),X36),s(fun(X37,X35),X38),s(X34,X40))),s(X37,X39))))) | s('type.option.option'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.unify.t_unify_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X43))),s('type.infer_t.infer_t',X41),s('type.infer_t.infer_t',X42))) = s('type.option.option'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.option.SOME_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK8(X44,happ(s(fun(X34,'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),happ(s(fun(X35,fun(X34,'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),X36),s(X35,happ(s(fun(X37,X35),X38),s(X37,X39))))),s(X34,X40)),X43,X42,X41))))) )),
  inference(superposition,[],[f226,f221])).
fof(f35310,plain,(
  ( ! [X30,X28,X26,X24,X33,X23,X31,X29,X27,X25,X32] : (s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraint_3'(s('type.infer_t.infer_t',X30),s('type.infer_t.infer_t',X31),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X32))) != s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'const.infer.Success_1'(s('type.one.one',X33))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),happ(s(fun(X25,'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),happ(s(fun(X24,fun(X25,'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),X26),s(X24,happ(s(fun(X23,X24),X27),s(X23,X29))))),s(X25,X28))))) | s('type.option.option'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.unify.t_unify_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X32))),s('type.infer_t.infer_t',X30),s('type.infer_t.infer_t',X31))) = s('type.option.option'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.option.SOME_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK8(X33,happ(s(fun(X23,'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'_dst_x0x1x0_3'(s(fun(X24,fun(X25,'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),X26),s(fun(X23,X24),X27),s(X25,X28))),s(X23,X29)),X32,X31,X30))))) )),
  inference(superposition,[],[f226,f221])).
fof(f35309,plain,(
  ( ! [X14,X21,X19,X17,X15,X22,X20,X18,X16] : (s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraint_3'(s('type.infer_t.infer_t',X19),s('type.infer_t.infer_t',X20),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X21))) != s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'const.infer.Success_1'(s('type.one.one',X22))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),happ(s(fun(X15,'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X16),s(X15,happ(s(fun(X14,X15),X17),s(X14,X18))))))) | s('type.option.option'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.unify.t_unify_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X21))),s('type.infer_t.infer_t',X19),s('type.infer_t.infer_t',X20))) = s('type.option.option'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.option.SOME_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK8(X22,happ(s(fun(X14,'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'_dst_x0x1_2'(s(fun(X15,'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X16),s(fun(X14,X15),X17))),s(X14,X18)),X21,X20,X19))))) )),
  inference(superposition,[],[f226,f206])).
fof(f35308,plain,(
  ( ! [X6,X12,X10,X8,X7,X5,X13,X11,X9] : (s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraint_3'(s('type.infer_t.infer_t',X10),s('type.infer_t.infer_t',X11),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X12))) != s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'const.infer.Success_1'(s('type.one.one',X13))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),happ(s(fun(X7,'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'_dst_x0x1_2'(s(fun(X5,'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X6),s(fun(X7,X5),X8))),s(X7,X9))))) | s('type.option.option'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.unify.t_unify_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X12))),s('type.infer_t.infer_t',X10),s('type.infer_t.infer_t',X11))) = s('type.option.option'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.option.SOME_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK8(X13,happ(s(fun(X5,'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X6),s(X5,happ(s(fun(X7,X5),X8),s(X7,X9)))),X12,X11,X10))))) )),
  inference(superposition,[],[f226,f206])).
fof(f35307,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraint_3'(s('type.infer_t.infer_t',X1),s('type.infer_t.infer_t',X2),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X3))) != s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'const.infer.Success_1'(s('type.one.one',X4))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X0))))) | s('type.option.option'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.unify.t_unify_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X3))),s('type.infer_t.infer_t',X1),s('type.infer_t.infer_t',X2))) = s('type.option.option'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.option.SOME_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK8(X4,happ(s(fun('type.infer.infer_st'('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.infer_st_subst_0'),s('type.infer.infer_st'('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X0)),X3,X2,X1))))) )),
  inference(superposition,[],[f226,f168])).
fof(f35298,plain,(
  ( ! [X6,X10,X8,X7,X5,X9] : (s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraint_3'(s('type.infer_t.infer_t',X7),s('type.infer_t.infer_t',X8),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X9))) != s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'const.infer.Success_1'(s('type.one.one',X6))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X10))) | s('type.option.option'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.option.SOME_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK8(X5,X10,X9,X8,X7)))) = s('type.option.option'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.unify.t_unify_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X9))),s('type.infer_t.infer_t',X7),s('type.infer_t.infer_t',X8)))) )),
  inference(superposition,[],[f226,f258])).
fof(f35297,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraint_3'(s('type.infer_t.infer_t',X1),s('type.infer_t.infer_t',X2),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X3))) != s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'const.infer.Success_1'(s('type.one.one',X0))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X4))) | s('type.option.option'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.option.SOME_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK8('const.one.one_0',X4,X3,X2,X1)))) = s('type.option.option'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.unify.t_unify_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X3))),s('type.infer_t.infer_t',X1),s('type.infer_t.infer_t',X2)))) )),
  inference(superposition,[],[f226,f165])).
fof(f35323,plain,(
  ( ! [X47,X45,X52,X50,X48,X46,X51,X49] : (s('type.option.option'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.unify.t_unify_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.option.option_CASE_3'(s('type.option.option'(X45),X46),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X47),s(fun(X45,'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X48))))),s('type.infer_t.infer_t',X49),s('type.infer_t.infer_t',X50))) = s('type.option.option'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.option.SOME_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK8(X51,X52,happ(s(fun(fun(X45,'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),happ(s(fun('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),fun(fun(X45,'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),happ(s(fun('type.option.option'(X45),fun('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),fun(fun(X45,'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))))),'const.option.option_CASE_0'),s('type.option.option'(X45),X46))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X47))),s(fun(X45,'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X48)),X50,X49)))) | s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'const.infer.Success_1'(s('type.one.one',X51))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X52))) != s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraint_3'(s('type.infer_t.infer_t',X49),s('type.infer_t.infer_t',X50),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.option.option_CASE_3'(s('type.option.option'(X45),X46),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X47),s(fun(X45,'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X48)))))) )),
  inference(forward_demodulation,[],[f35296,f184])).
fof(f35296,plain,(
  ( ! [X47,X45,X52,X50,X48,X46,X51,X49] : (s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'const.infer.Success_1'(s('type.one.one',X51))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X52))) != s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraint_3'(s('type.infer_t.infer_t',X49),s('type.infer_t.infer_t',X50),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.option.option_CASE_3'(s('type.option.option'(X45),X46),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X47),s(fun(X45,'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X48))))) | s('type.option.option'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.option.SOME_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK8(X51,X52,happ(s(fun(fun(X45,'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),happ(s(fun('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),fun(fun(X45,'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),happ(s(fun('type.option.option'(X45),fun('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),fun(fun(X45,'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))))),'const.option.option_CASE_0'),s('type.option.option'(X45),X46))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X47))),s(fun(X45,'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X48)),X50,X49)))) = s('type.option.option'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.unify.t_unify_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),happ(s(fun(fun(X45,'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),happ(s(fun('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),fun(fun(X45,'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),happ(s(fun('type.option.option'(X45),fun('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),fun(fun(X45,'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))))),'const.option.option_CASE_0'),s('type.option.option'(X45),X46))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X47))),s(fun(X45,'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X48))))),s('type.infer_t.infer_t',X49),s('type.infer_t.infer_t',X50)))) )),
  inference(superposition,[],[f226,f184])).
fof(f35295,plain,(
  ( ! [X39,X37,X35,X43,X41,X38,X36,X34,X44,X42,X40] : (s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'const.infer.Success_1'(s('type.one.one',X43))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X44))) != s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraint_3'(s('type.infer_t.infer_t',X41),s('type.infer_t.infer_t',X42),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),happ(s(fun(X37,'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'_dst_x0x1x0_3'(s(fun(X35,fun(X34,'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),X36),s(fun(X37,X35),X38),s(X34,X40))),s(X37,X39))))) | s('type.option.option'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.option.SOME_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK8(X43,X44,happ(s(fun(X34,'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),happ(s(fun(X35,fun(X34,'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),X36),s(X35,happ(s(fun(X37,X35),X38),s(X37,X39))))),s(X34,X40)),X42,X41)))) = s('type.option.option'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.unify.t_unify_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),happ(s(fun(X34,'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),happ(s(fun(X35,fun(X34,'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),X36),s(X35,happ(s(fun(X37,X35),X38),s(X37,X39))))),s(X34,X40))))),s('type.infer_t.infer_t',X41),s('type.infer_t.infer_t',X42)))) )),
  inference(superposition,[],[f226,f221])).
fof(f35294,plain,(
  ( ! [X30,X28,X26,X24,X33,X23,X31,X29,X27,X25,X32] : (s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'const.infer.Success_1'(s('type.one.one',X32))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X33))) != s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraint_3'(s('type.infer_t.infer_t',X30),s('type.infer_t.infer_t',X31),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),happ(s(fun(X25,'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),happ(s(fun(X24,fun(X25,'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),X26),s(X24,happ(s(fun(X23,X24),X27),s(X23,X29))))),s(X25,X28))))) | s('type.option.option'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.option.SOME_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK8(X32,X33,happ(s(fun(X23,'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'_dst_x0x1x0_3'(s(fun(X24,fun(X25,'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),X26),s(fun(X23,X24),X27),s(X25,X28))),s(X23,X29)),X31,X30)))) = s('type.option.option'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.unify.t_unify_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),happ(s(fun(X23,'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'_dst_x0x1x0_3'(s(fun(X24,fun(X25,'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),X26),s(fun(X23,X24),X27),s(X25,X28))),s(X23,X29))))),s('type.infer_t.infer_t',X30),s('type.infer_t.infer_t',X31)))) )),
  inference(superposition,[],[f226,f221])).
fof(f35293,plain,(
  ( ! [X14,X21,X19,X17,X15,X22,X20,X18,X16] : (s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'const.infer.Success_1'(s('type.one.one',X21))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X22))) != s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraint_3'(s('type.infer_t.infer_t',X19),s('type.infer_t.infer_t',X20),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),happ(s(fun(X15,'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X16),s(X15,happ(s(fun(X14,X15),X17),s(X14,X18))))))) | s('type.option.option'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.option.SOME_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK8(X21,X22,happ(s(fun(X14,'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'_dst_x0x1_2'(s(fun(X15,'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X16),s(fun(X14,X15),X17))),s(X14,X18)),X20,X19)))) = s('type.option.option'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.unify.t_unify_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),happ(s(fun(X14,'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'_dst_x0x1_2'(s(fun(X15,'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X16),s(fun(X14,X15),X17))),s(X14,X18))))),s('type.infer_t.infer_t',X19),s('type.infer_t.infer_t',X20)))) )),
  inference(superposition,[],[f226,f206])).
fof(f35292,plain,(
  ( ! [X6,X12,X10,X8,X7,X5,X13,X11,X9] : (s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'const.infer.Success_1'(s('type.one.one',X12))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X13))) != s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraint_3'(s('type.infer_t.infer_t',X10),s('type.infer_t.infer_t',X11),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),happ(s(fun(X7,'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'_dst_x0x1_2'(s(fun(X5,'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X6),s(fun(X7,X5),X8))),s(X7,X9))))) | s('type.option.option'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.option.SOME_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK8(X12,X13,happ(s(fun(X5,'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X6),s(X5,happ(s(fun(X7,X5),X8),s(X7,X9)))),X11,X10)))) = s('type.option.option'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.unify.t_unify_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),happ(s(fun(X5,'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X6),s(X5,happ(s(fun(X7,X5),X8),s(X7,X9))))))),s('type.infer_t.infer_t',X10),s('type.infer_t.infer_t',X11)))) )),
  inference(superposition,[],[f226,f206])).
fof(f35322,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s('type.option.option'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.unify.t_unify_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X0))))),s('type.infer_t.infer_t',X1),s('type.infer_t.infer_t',X2))) = s('type.option.option'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.option.SOME_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK8(X3,X4,happ(s(fun('type.infer.infer_st'('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.infer_st_subst_0'),s('type.infer.infer_st'('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X0)),X2,X1)))) | s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'const.infer.Success_1'(s('type.one.one',X3))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X4))) != s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraint_3'(s('type.infer_t.infer_t',X1),s('type.infer_t.infer_t',X2),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X0)))))) )),
  inference(forward_demodulation,[],[f35291,f168])).
fof(f35291,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'const.infer.Success_1'(s('type.one.one',X3))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X4))) != s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraint_3'(s('type.infer_t.infer_t',X1),s('type.infer_t.infer_t',X2),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X0))))) | s('type.option.option'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.option.SOME_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK8(X3,X4,happ(s(fun('type.infer.infer_st'('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.infer_st_subst_0'),s('type.infer.infer_st'('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X0)),X2,X1)))) = s('type.option.option'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.unify.t_unify_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),happ(s(fun('type.infer.infer_st'('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.infer_st_subst_0'),s('type.infer.infer_st'('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X0))))),s('type.infer_t.infer_t',X1),s('type.infer_t.infer_t',X2)))) )),
  inference(superposition,[],[f226,f168])).
fof(f35321,plain,(
  ( ! [X61,X59,X57,X62,X60,X58,X56,X63] : (s('type.option.option'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.unify.t_unify_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X61))),s('type.infer_t.infer_t',X60),s('type.infer_t.infer_t','const.option.option_CASE_3'(s('type.option.option'(X56),X57),s('type.infer_t.infer_t',X58),s(fun(X56,'type.infer_t.infer_t'),X59))))) = s('type.option.option'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.option.SOME_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK8(X62,X63,X61,happ(s(fun(fun(X56,'type.infer_t.infer_t'),'type.infer_t.infer_t'),happ(s(fun('type.infer_t.infer_t',fun(fun(X56,'type.infer_t.infer_t'),'type.infer_t.infer_t')),happ(s(fun('type.option.option'(X56),fun('type.infer_t.infer_t',fun(fun(X56,'type.infer_t.infer_t'),'type.infer_t.infer_t'))),'const.option.option_CASE_0'),s('type.option.option'(X56),X57))),s('type.infer_t.infer_t',X58))),s(fun(X56,'type.infer_t.infer_t'),X59)),X60)))) | s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'const.infer.Success_1'(s('type.one.one',X62))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X63))) != s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraint_3'(s('type.infer_t.infer_t',X60),s('type.infer_t.infer_t','const.option.option_CASE_3'(s('type.option.option'(X56),X57),s('type.infer_t.infer_t',X58),s(fun(X56,'type.infer_t.infer_t'),X59))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X61)))) )),
  inference(forward_demodulation,[],[f35290,f184])).
fof(f35290,plain,(
  ( ! [X61,X59,X57,X62,X60,X58,X56,X63] : (s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'const.infer.Success_1'(s('type.one.one',X62))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X63))) != s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraint_3'(s('type.infer_t.infer_t',X60),s('type.infer_t.infer_t','const.option.option_CASE_3'(s('type.option.option'(X56),X57),s('type.infer_t.infer_t',X58),s(fun(X56,'type.infer_t.infer_t'),X59))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X61))) | s('type.option.option'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.option.SOME_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK8(X62,X63,X61,happ(s(fun(fun(X56,'type.infer_t.infer_t'),'type.infer_t.infer_t'),happ(s(fun('type.infer_t.infer_t',fun(fun(X56,'type.infer_t.infer_t'),'type.infer_t.infer_t')),happ(s(fun('type.option.option'(X56),fun('type.infer_t.infer_t',fun(fun(X56,'type.infer_t.infer_t'),'type.infer_t.infer_t'))),'const.option.option_CASE_0'),s('type.option.option'(X56),X57))),s('type.infer_t.infer_t',X58))),s(fun(X56,'type.infer_t.infer_t'),X59)),X60)))) = s('type.option.option'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.unify.t_unify_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X61))),s('type.infer_t.infer_t',X60),s('type.infer_t.infer_t',happ(s(fun(fun(X56,'type.infer_t.infer_t'),'type.infer_t.infer_t'),happ(s(fun('type.infer_t.infer_t',fun(fun(X56,'type.infer_t.infer_t'),'type.infer_t.infer_t')),happ(s(fun('type.option.option'(X56),fun('type.infer_t.infer_t',fun(fun(X56,'type.infer_t.infer_t'),'type.infer_t.infer_t'))),'const.option.option_CASE_0'),s('type.option.option'(X56),X57))),s('type.infer_t.infer_t',X58))),s(fun(X56,'type.infer_t.infer_t'),X59)))))) )),
  inference(superposition,[],[f226,f184])).
fof(f35289,plain,(
  ( ! [X47,X45,X54,X52,X50,X48,X46,X55,X53,X51,X49] : (s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'const.infer.Success_1'(s('type.one.one',X54))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X55))) != s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraint_3'(s('type.infer_t.infer_t',X52),s('type.infer_t.infer_t',happ(s(fun(X48,'type.infer_t.infer_t'),'_dst_x0x1x0_3'(s(fun(X46,fun(X45,'type.infer_t.infer_t')),X47),s(fun(X48,X46),X49),s(X45,X51))),s(X48,X50))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X53))) | s('type.option.option'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.option.SOME_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK8(X54,X55,X53,happ(s(fun(X45,'type.infer_t.infer_t'),happ(s(fun(X46,fun(X45,'type.infer_t.infer_t')),X47),s(X46,happ(s(fun(X48,X46),X49),s(X48,X50))))),s(X45,X51)),X52)))) = s('type.option.option'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.unify.t_unify_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X53))),s('type.infer_t.infer_t',X52),s('type.infer_t.infer_t',happ(s(fun(X45,'type.infer_t.infer_t'),happ(s(fun(X46,fun(X45,'type.infer_t.infer_t')),X47),s(X46,happ(s(fun(X48,X46),X49),s(X48,X50))))),s(X45,X51)))))) )),
  inference(superposition,[],[f226,f221])).
fof(f35288,plain,(
  ( ! [X39,X37,X35,X43,X41,X38,X36,X34,X44,X42,X40] : (s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'const.infer.Success_1'(s('type.one.one',X43))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X44))) != s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraint_3'(s('type.infer_t.infer_t',X41),s('type.infer_t.infer_t',happ(s(fun(X36,'type.infer_t.infer_t'),happ(s(fun(X35,fun(X36,'type.infer_t.infer_t')),X37),s(X35,happ(s(fun(X34,X35),X38),s(X34,X40))))),s(X36,X39))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X42))) | s('type.option.option'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.option.SOME_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK8(X43,X44,X42,happ(s(fun(X34,'type.infer_t.infer_t'),'_dst_x0x1x0_3'(s(fun(X35,fun(X36,'type.infer_t.infer_t')),X37),s(fun(X34,X35),X38),s(X36,X39))),s(X34,X40)),X41)))) = s('type.option.option'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.unify.t_unify_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X42))),s('type.infer_t.infer_t',X41),s('type.infer_t.infer_t',happ(s(fun(X34,'type.infer_t.infer_t'),'_dst_x0x1x0_3'(s(fun(X35,fun(X36,'type.infer_t.infer_t')),X37),s(fun(X34,X35),X38),s(X36,X39))),s(X34,X40)))))) )),
  inference(superposition,[],[f226,f221])).
fof(f35287,plain,(
  ( ! [X30,X28,X26,X33,X31,X29,X27,X25,X32] : (s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'const.infer.Success_1'(s('type.one.one',X32))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X33))) != s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraint_3'(s('type.infer_t.infer_t',X30),s('type.infer_t.infer_t',happ(s(fun(X26,'type.infer_t.infer_t'),X27),s(X26,happ(s(fun(X25,X26),X28),s(X25,X29))))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X31))) | s('type.option.option'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.option.SOME_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK8(X32,X33,X31,happ(s(fun(X25,'type.infer_t.infer_t'),'_dst_x0x1_2'(s(fun(X26,'type.infer_t.infer_t'),X27),s(fun(X25,X26),X28))),s(X25,X29)),X30)))) = s('type.option.option'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.unify.t_unify_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X31))),s('type.infer_t.infer_t',X30),s('type.infer_t.infer_t',happ(s(fun(X25,'type.infer_t.infer_t'),'_dst_x0x1_2'(s(fun(X26,'type.infer_t.infer_t'),X27),s(fun(X25,X26),X28))),s(X25,X29)))))) )),
  inference(superposition,[],[f226,f206])).
fof(f35286,plain,(
  ( ! [X24,X23,X21,X19,X17,X22,X20,X18,X16] : (s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'const.infer.Success_1'(s('type.one.one',X23))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X24))) != s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraint_3'(s('type.infer_t.infer_t',X21),s('type.infer_t.infer_t',happ(s(fun(X18,'type.infer_t.infer_t'),'_dst_x0x1_2'(s(fun(X16,'type.infer_t.infer_t'),X17),s(fun(X18,X16),X19))),s(X18,X20))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X22))) | s('type.option.option'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.option.SOME_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK8(X23,X24,X22,happ(s(fun(X16,'type.infer_t.infer_t'),X17),s(X16,happ(s(fun(X18,X16),X19),s(X18,X20)))),X21)))) = s('type.option.option'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.unify.t_unify_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X22))),s('type.infer_t.infer_t',X21),s('type.infer_t.infer_t',happ(s(fun(X16,'type.infer_t.infer_t'),X17),s(X16,happ(s(fun(X18,X16),X19),s(X18,X20)))))))) )),
  inference(superposition,[],[f226,f206])).
fof(f35320,plain,(
  ( ! [X14,X12,X15,X13,X11] : (s('type.option.option'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.option.SOME_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK8(X14,X15,X13,happ(s(fun('type.infer.infer_st'('type.infer_t.infer_t'),'type.infer_t.infer_t'),'const.infer.infer_st_subst_0'),s('type.infer.infer_st'('type.infer_t.infer_t'),X11)),X12)))) = s('type.option.option'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.unify.t_unify_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X13))),s('type.infer_t.infer_t',X12),s('type.infer_t.infer_t','const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.infer_t.infer_t'),X11))))) | s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'const.infer.Success_1'(s('type.one.one',X14))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X15))) != s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraint_3'(s('type.infer_t.infer_t',X12),s('type.infer_t.infer_t','const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.infer_t.infer_t'),X11))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X13)))) )),
  inference(forward_demodulation,[],[f35285,f168])).
fof(f35285,plain,(
  ( ! [X14,X12,X15,X13,X11] : (s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'const.infer.Success_1'(s('type.one.one',X14))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X15))) != s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraint_3'(s('type.infer_t.infer_t',X12),s('type.infer_t.infer_t','const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.infer_t.infer_t'),X11))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X13))) | s('type.option.option'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.option.SOME_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK8(X14,X15,X13,happ(s(fun('type.infer.infer_st'('type.infer_t.infer_t'),'type.infer_t.infer_t'),'const.infer.infer_st_subst_0'),s('type.infer.infer_st'('type.infer_t.infer_t'),X11)),X12)))) = s('type.option.option'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.unify.t_unify_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X13))),s('type.infer_t.infer_t',X12),s('type.infer_t.infer_t',happ(s(fun('type.infer.infer_st'('type.infer_t.infer_t'),'type.infer_t.infer_t'),'const.infer.infer_st_subst_0'),s('type.infer.infer_st'('type.infer_t.infer_t'),X11)))))) )),
  inference(superposition,[],[f226,f168])).
fof(f35319,plain,(
  ( ! [X6,X10,X8,X7,X5,X9] : (s('type.option.option'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.unify.t_unify_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X8))),s('type.infer_t.infer_t',X7),s('type.infer_t.infer_t','const.unify.t_walkstar_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X5),s('type.infer_t.infer_t',X6))))) = s('type.option.option'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.option.SOME_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK8(X9,X10,X8,happ(s(fun('type.infer_t.infer_t','type.infer_t.infer_t'),happ(s(fun('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),fun('type.infer_t.infer_t','type.infer_t.infer_t')),'const.unify.t_walkstar_0'),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X5))),s('type.infer_t.infer_t',X6)),X7)))) | s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'const.infer.Success_1'(s('type.one.one',X9))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X10))) != s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraint_3'(s('type.infer_t.infer_t',X7),s('type.infer_t.infer_t','const.unify.t_walkstar_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X5),s('type.infer_t.infer_t',X6))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X8)))) )),
  inference(forward_demodulation,[],[f35284,f176])).
fof(f35284,plain,(
  ( ! [X6,X10,X8,X7,X5,X9] : (s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'const.infer.Success_1'(s('type.one.one',X9))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X10))) != s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraint_3'(s('type.infer_t.infer_t',X7),s('type.infer_t.infer_t','const.unify.t_walkstar_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X5),s('type.infer_t.infer_t',X6))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X8))) | s('type.option.option'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.option.SOME_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK8(X9,X10,X8,happ(s(fun('type.infer_t.infer_t','type.infer_t.infer_t'),happ(s(fun('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),fun('type.infer_t.infer_t','type.infer_t.infer_t')),'const.unify.t_walkstar_0'),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X5))),s('type.infer_t.infer_t',X6)),X7)))) = s('type.option.option'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.unify.t_unify_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X8))),s('type.infer_t.infer_t',X7),s('type.infer_t.infer_t',happ(s(fun('type.infer_t.infer_t','type.infer_t.infer_t'),happ(s(fun('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),fun('type.infer_t.infer_t','type.infer_t.infer_t')),'const.unify.t_walkstar_0'),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X5))),s('type.infer_t.infer_t',X6)))))) )),
  inference(superposition,[],[f226,f176])).
fof(f35318,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s('type.option.option'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.option.SOME_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK8(X3,X4,X2,happ(s(fun('type.num.num','type.infer_t.infer_t'),'const.infer_t.Infer_Tuvar_0'),s('type.num.num',X0)),X1)))) = s('type.option.option'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.unify.t_unify_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X2))),s('type.infer_t.infer_t',X1),s('type.infer_t.infer_t','const.infer_t.Infer_Tuvar_1'(s('type.num.num',X0))))) | s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'const.infer.Success_1'(s('type.one.one',X3))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X4))) != s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraint_3'(s('type.infer_t.infer_t',X1),s('type.infer_t.infer_t','const.infer_t.Infer_Tuvar_1'(s('type.num.num',X0))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X2)))) )),
  inference(forward_demodulation,[],[f35283,f166])).
fof(f35283,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'const.infer.Success_1'(s('type.one.one',X3))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X4))) != s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraint_3'(s('type.infer_t.infer_t',X1),s('type.infer_t.infer_t','const.infer_t.Infer_Tuvar_1'(s('type.num.num',X0))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X2))) | s('type.option.option'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.option.SOME_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK8(X3,X4,X2,happ(s(fun('type.num.num','type.infer_t.infer_t'),'const.infer_t.Infer_Tuvar_0'),s('type.num.num',X0)),X1)))) = s('type.option.option'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.unify.t_unify_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X2))),s('type.infer_t.infer_t',X1),s('type.infer_t.infer_t',happ(s(fun('type.num.num','type.infer_t.infer_t'),'const.infer_t.Infer_Tuvar_0'),s('type.num.num',X0)))))) )),
  inference(superposition,[],[f226,f166])).
fof(f35317,plain,(
  ( ! [X61,X59,X57,X62,X60,X58,X56,X63] : (s('type.option.option'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.unify.t_unify_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X61))),s('type.infer_t.infer_t','const.option.option_CASE_3'(s('type.option.option'(X56),X57),s('type.infer_t.infer_t',X58),s(fun(X56,'type.infer_t.infer_t'),X59))),s('type.infer_t.infer_t',X60))) = s('type.option.option'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.option.SOME_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK8(X62,X63,X61,X60,happ(s(fun(fun(X56,'type.infer_t.infer_t'),'type.infer_t.infer_t'),happ(s(fun('type.infer_t.infer_t',fun(fun(X56,'type.infer_t.infer_t'),'type.infer_t.infer_t')),happ(s(fun('type.option.option'(X56),fun('type.infer_t.infer_t',fun(fun(X56,'type.infer_t.infer_t'),'type.infer_t.infer_t'))),'const.option.option_CASE_0'),s('type.option.option'(X56),X57))),s('type.infer_t.infer_t',X58))),s(fun(X56,'type.infer_t.infer_t'),X59)))))) | s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'const.infer.Success_1'(s('type.one.one',X62))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X63))) != s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraint_3'(s('type.infer_t.infer_t','const.option.option_CASE_3'(s('type.option.option'(X56),X57),s('type.infer_t.infer_t',X58),s(fun(X56,'type.infer_t.infer_t'),X59))),s('type.infer_t.infer_t',X60),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X61)))) )),
  inference(forward_demodulation,[],[f35282,f184])).
fof(f35282,plain,(
  ( ! [X61,X59,X57,X62,X60,X58,X56,X63] : (s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'const.infer.Success_1'(s('type.one.one',X62))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X63))) != s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraint_3'(s('type.infer_t.infer_t','const.option.option_CASE_3'(s('type.option.option'(X56),X57),s('type.infer_t.infer_t',X58),s(fun(X56,'type.infer_t.infer_t'),X59))),s('type.infer_t.infer_t',X60),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X61))) | s('type.option.option'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.option.SOME_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK8(X62,X63,X61,X60,happ(s(fun(fun(X56,'type.infer_t.infer_t'),'type.infer_t.infer_t'),happ(s(fun('type.infer_t.infer_t',fun(fun(X56,'type.infer_t.infer_t'),'type.infer_t.infer_t')),happ(s(fun('type.option.option'(X56),fun('type.infer_t.infer_t',fun(fun(X56,'type.infer_t.infer_t'),'type.infer_t.infer_t'))),'const.option.option_CASE_0'),s('type.option.option'(X56),X57))),s('type.infer_t.infer_t',X58))),s(fun(X56,'type.infer_t.infer_t'),X59)))))) = s('type.option.option'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.unify.t_unify_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X61))),s('type.infer_t.infer_t',happ(s(fun(fun(X56,'type.infer_t.infer_t'),'type.infer_t.infer_t'),happ(s(fun('type.infer_t.infer_t',fun(fun(X56,'type.infer_t.infer_t'),'type.infer_t.infer_t')),happ(s(fun('type.option.option'(X56),fun('type.infer_t.infer_t',fun(fun(X56,'type.infer_t.infer_t'),'type.infer_t.infer_t'))),'const.option.option_CASE_0'),s('type.option.option'(X56),X57))),s('type.infer_t.infer_t',X58))),s(fun(X56,'type.infer_t.infer_t'),X59))),s('type.infer_t.infer_t',X60)))) )),
  inference(superposition,[],[f226,f184])).
fof(f35281,plain,(
  ( ! [X47,X45,X54,X52,X50,X48,X46,X55,X53,X51,X49] : (s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'const.infer.Success_1'(s('type.one.one',X54))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X55))) != s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraint_3'(s('type.infer_t.infer_t',happ(s(fun(X48,'type.infer_t.infer_t'),'_dst_x0x1x0_3'(s(fun(X46,fun(X45,'type.infer_t.infer_t')),X47),s(fun(X48,X46),X49),s(X45,X51))),s(X48,X50))),s('type.infer_t.infer_t',X52),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X53))) | s('type.option.option'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.option.SOME_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK8(X54,X55,X53,X52,happ(s(fun(X45,'type.infer_t.infer_t'),happ(s(fun(X46,fun(X45,'type.infer_t.infer_t')),X47),s(X46,happ(s(fun(X48,X46),X49),s(X48,X50))))),s(X45,X51)))))) = s('type.option.option'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.unify.t_unify_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X53))),s('type.infer_t.infer_t',happ(s(fun(X45,'type.infer_t.infer_t'),happ(s(fun(X46,fun(X45,'type.infer_t.infer_t')),X47),s(X46,happ(s(fun(X48,X46),X49),s(X48,X50))))),s(X45,X51))),s('type.infer_t.infer_t',X52)))) )),
  inference(superposition,[],[f226,f221])).
fof(f35280,plain,(
  ( ! [X39,X37,X35,X43,X41,X38,X36,X34,X44,X42,X40] : (s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'const.infer.Success_1'(s('type.one.one',X43))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X44))) != s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraint_3'(s('type.infer_t.infer_t',happ(s(fun(X36,'type.infer_t.infer_t'),happ(s(fun(X35,fun(X36,'type.infer_t.infer_t')),X37),s(X35,happ(s(fun(X34,X35),X38),s(X34,X40))))),s(X36,X39))),s('type.infer_t.infer_t',X41),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X42))) | s('type.option.option'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.option.SOME_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK8(X43,X44,X42,X41,happ(s(fun(X34,'type.infer_t.infer_t'),'_dst_x0x1x0_3'(s(fun(X35,fun(X36,'type.infer_t.infer_t')),X37),s(fun(X34,X35),X38),s(X36,X39))),s(X34,X40)))))) = s('type.option.option'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.unify.t_unify_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X42))),s('type.infer_t.infer_t',happ(s(fun(X34,'type.infer_t.infer_t'),'_dst_x0x1x0_3'(s(fun(X35,fun(X36,'type.infer_t.infer_t')),X37),s(fun(X34,X35),X38),s(X36,X39))),s(X34,X40))),s('type.infer_t.infer_t',X41)))) )),
  inference(superposition,[],[f226,f221])).
fof(f35279,plain,(
  ( ! [X30,X28,X26,X33,X31,X29,X27,X25,X32] : (s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'const.infer.Success_1'(s('type.one.one',X32))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X33))) != s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraint_3'(s('type.infer_t.infer_t',happ(s(fun(X26,'type.infer_t.infer_t'),X27),s(X26,happ(s(fun(X25,X26),X28),s(X25,X29))))),s('type.infer_t.infer_t',X30),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X31))) | s('type.option.option'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.option.SOME_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK8(X32,X33,X31,X30,happ(s(fun(X25,'type.infer_t.infer_t'),'_dst_x0x1_2'(s(fun(X26,'type.infer_t.infer_t'),X27),s(fun(X25,X26),X28))),s(X25,X29)))))) = s('type.option.option'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.unify.t_unify_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X31))),s('type.infer_t.infer_t',happ(s(fun(X25,'type.infer_t.infer_t'),'_dst_x0x1_2'(s(fun(X26,'type.infer_t.infer_t'),X27),s(fun(X25,X26),X28))),s(X25,X29))),s('type.infer_t.infer_t',X30)))) )),
  inference(superposition,[],[f226,f206])).
fof(f35278,plain,(
  ( ! [X24,X23,X21,X19,X17,X22,X20,X18,X16] : (s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'const.infer.Success_1'(s('type.one.one',X23))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X24))) != s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraint_3'(s('type.infer_t.infer_t',happ(s(fun(X18,'type.infer_t.infer_t'),'_dst_x0x1_2'(s(fun(X16,'type.infer_t.infer_t'),X17),s(fun(X18,X16),X19))),s(X18,X20))),s('type.infer_t.infer_t',X21),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X22))) | s('type.option.option'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.option.SOME_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK8(X23,X24,X22,X21,happ(s(fun(X16,'type.infer_t.infer_t'),X17),s(X16,happ(s(fun(X18,X16),X19),s(X18,X20)))))))) = s('type.option.option'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.unify.t_unify_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X22))),s('type.infer_t.infer_t',happ(s(fun(X16,'type.infer_t.infer_t'),X17),s(X16,happ(s(fun(X18,X16),X19),s(X18,X20))))),s('type.infer_t.infer_t',X21)))) )),
  inference(superposition,[],[f226,f206])).
fof(f35316,plain,(
  ( ! [X14,X12,X15,X13,X11] : (s('type.option.option'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.option.SOME_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK8(X14,X15,X13,X12,happ(s(fun('type.infer.infer_st'('type.infer_t.infer_t'),'type.infer_t.infer_t'),'const.infer.infer_st_subst_0'),s('type.infer.infer_st'('type.infer_t.infer_t'),X11)))))) = s('type.option.option'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.unify.t_unify_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X13))),s('type.infer_t.infer_t','const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.infer_t.infer_t'),X11))),s('type.infer_t.infer_t',X12))) | s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'const.infer.Success_1'(s('type.one.one',X14))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X15))) != s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraint_3'(s('type.infer_t.infer_t','const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.infer_t.infer_t'),X11))),s('type.infer_t.infer_t',X12),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X13)))) )),
  inference(forward_demodulation,[],[f35277,f168])).
fof(f35277,plain,(
  ( ! [X14,X12,X15,X13,X11] : (s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'const.infer.Success_1'(s('type.one.one',X14))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X15))) != s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraint_3'(s('type.infer_t.infer_t','const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.infer_t.infer_t'),X11))),s('type.infer_t.infer_t',X12),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X13))) | s('type.option.option'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.option.SOME_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK8(X14,X15,X13,X12,happ(s(fun('type.infer.infer_st'('type.infer_t.infer_t'),'type.infer_t.infer_t'),'const.infer.infer_st_subst_0'),s('type.infer.infer_st'('type.infer_t.infer_t'),X11)))))) = s('type.option.option'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.unify.t_unify_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X13))),s('type.infer_t.infer_t',happ(s(fun('type.infer.infer_st'('type.infer_t.infer_t'),'type.infer_t.infer_t'),'const.infer.infer_st_subst_0'),s('type.infer.infer_st'('type.infer_t.infer_t'),X11))),s('type.infer_t.infer_t',X12)))) )),
  inference(superposition,[],[f226,f168])).
fof(f35315,plain,(
  ( ! [X6,X10,X8,X7,X5,X9] : (s('type.option.option'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.unify.t_unify_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X8))),s('type.infer_t.infer_t','const.unify.t_walkstar_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X5),s('type.infer_t.infer_t',X6))),s('type.infer_t.infer_t',X7))) = s('type.option.option'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.option.SOME_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK8(X9,X10,X8,X7,happ(s(fun('type.infer_t.infer_t','type.infer_t.infer_t'),happ(s(fun('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),fun('type.infer_t.infer_t','type.infer_t.infer_t')),'const.unify.t_walkstar_0'),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X5))),s('type.infer_t.infer_t',X6)))))) | s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'const.infer.Success_1'(s('type.one.one',X9))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X10))) != s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraint_3'(s('type.infer_t.infer_t','const.unify.t_walkstar_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X5),s('type.infer_t.infer_t',X6))),s('type.infer_t.infer_t',X7),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X8)))) )),
  inference(forward_demodulation,[],[f35276,f176])).
fof(f35276,plain,(
  ( ! [X6,X10,X8,X7,X5,X9] : (s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'const.infer.Success_1'(s('type.one.one',X9))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X10))) != s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraint_3'(s('type.infer_t.infer_t','const.unify.t_walkstar_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X5),s('type.infer_t.infer_t',X6))),s('type.infer_t.infer_t',X7),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X8))) | s('type.option.option'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.option.SOME_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK8(X9,X10,X8,X7,happ(s(fun('type.infer_t.infer_t','type.infer_t.infer_t'),happ(s(fun('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),fun('type.infer_t.infer_t','type.infer_t.infer_t')),'const.unify.t_walkstar_0'),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X5))),s('type.infer_t.infer_t',X6)))))) = s('type.option.option'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.unify.t_unify_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X8))),s('type.infer_t.infer_t',happ(s(fun('type.infer_t.infer_t','type.infer_t.infer_t'),happ(s(fun('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),fun('type.infer_t.infer_t','type.infer_t.infer_t')),'const.unify.t_walkstar_0'),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X5))),s('type.infer_t.infer_t',X6))),s('type.infer_t.infer_t',X7)))) )),
  inference(superposition,[],[f226,f176])).
fof(f35314,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s('type.option.option'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.option.SOME_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK8(X3,X4,X2,X1,happ(s(fun('type.num.num','type.infer_t.infer_t'),'const.infer_t.Infer_Tuvar_0'),s('type.num.num',X0)))))) = s('type.option.option'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.unify.t_unify_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X2))),s('type.infer_t.infer_t','const.infer_t.Infer_Tuvar_1'(s('type.num.num',X0))),s('type.infer_t.infer_t',X1))) | s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'const.infer.Success_1'(s('type.one.one',X3))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X4))) != s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraint_3'(s('type.infer_t.infer_t','const.infer_t.Infer_Tuvar_1'(s('type.num.num',X0))),s('type.infer_t.infer_t',X1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X2)))) )),
  inference(forward_demodulation,[],[f35275,f166])).
fof(f35275,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'const.infer.Success_1'(s('type.one.one',X3))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X4))) != s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraint_3'(s('type.infer_t.infer_t','const.infer_t.Infer_Tuvar_1'(s('type.num.num',X0))),s('type.infer_t.infer_t',X1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X2))) | s('type.option.option'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.option.SOME_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK8(X3,X4,X2,X1,happ(s(fun('type.num.num','type.infer_t.infer_t'),'const.infer_t.Infer_Tuvar_0'),s('type.num.num',X0)))))) = s('type.option.option'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.unify.t_unify_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X2))),s('type.infer_t.infer_t',happ(s(fun('type.num.num','type.infer_t.infer_t'),'const.infer_t.Infer_Tuvar_0'),s('type.num.num',X0))),s('type.infer_t.infer_t',X1)))) )),
  inference(superposition,[],[f226,f166])).
fof(f34505,plain,(
  ( ! [X2,X0,X1] : (s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraint_3'(s('type.infer_t.infer_t',X0),s('type.infer_t.infer_t',X1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X2))) != s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraints_3'(s('type.list.list'('type.infer_t.infer_t'),sK0),s('type.list.list'('type.infer_t.infer_t'),sK1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))) | s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK3) = s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.infer.infer_st_subst_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK8('const.one.one_0',sK3,X2,X1,X0)))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X2)))) ) | $spl0),
  inference(superposition,[],[f227,f29772])).
fof(f34509,plain,(
  ( ! [X47,X45,X52,X50,X48,X46,X51,X49] : (s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.option.option_CASE_3'(s('type.option.option'(X45),X46),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X47),s(fun(X45,'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X48))) = s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.infer.infer_st_subst_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK8(X52,happ(s(fun(fun(X45,'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),happ(s(fun('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),fun(fun(X45,'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),happ(s(fun('type.option.option'(X45),fun('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),fun(fun(X45,'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))))),'const.option.option_CASE_0'),s('type.option.option'(X45),X46))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X47))),s(fun(X45,'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X48)),X51,X50,X49)))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X51))) | s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraint_3'(s('type.infer_t.infer_t',X49),s('type.infer_t.infer_t',X50),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X51))) != s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'const.infer.Success_1'(s('type.one.one',X52))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.option.option_CASE_3'(s('type.option.option'(X45),X46),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X47),s(fun(X45,'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X48)))))) )),
  inference(forward_demodulation,[],[f34504,f184])).
fof(f34504,plain,(
  ( ! [X47,X45,X52,X50,X48,X46,X51,X49] : (s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraint_3'(s('type.infer_t.infer_t',X49),s('type.infer_t.infer_t',X50),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X51))) != s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'const.infer.Success_1'(s('type.one.one',X52))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.option.option_CASE_3'(s('type.option.option'(X45),X46),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X47),s(fun(X45,'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X48))))) | s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),happ(s(fun(fun(X45,'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),happ(s(fun('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),fun(fun(X45,'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),happ(s(fun('type.option.option'(X45),fun('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),fun(fun(X45,'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))))),'const.option.option_CASE_0'),s('type.option.option'(X45),X46))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X47))),s(fun(X45,'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X48))) = s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.infer.infer_st_subst_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK8(X52,happ(s(fun(fun(X45,'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),happ(s(fun('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),fun(fun(X45,'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),happ(s(fun('type.option.option'(X45),fun('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),fun(fun(X45,'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))))),'const.option.option_CASE_0'),s('type.option.option'(X45),X46))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X47))),s(fun(X45,'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X48)),X51,X50,X49)))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X51)))) )),
  inference(superposition,[],[f227,f184])).
fof(f34503,plain,(
  ( ! [X39,X37,X35,X43,X41,X38,X36,X34,X44,X42,X40] : (s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraint_3'(s('type.infer_t.infer_t',X41),s('type.infer_t.infer_t',X42),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X43))) != s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'const.infer.Success_1'(s('type.one.one',X44))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),happ(s(fun(X37,'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'_dst_x0x1x0_3'(s(fun(X35,fun(X34,'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),X36),s(fun(X37,X35),X38),s(X34,X40))),s(X37,X39))))) | s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),happ(s(fun(X34,'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),happ(s(fun(X35,fun(X34,'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),X36),s(X35,happ(s(fun(X37,X35),X38),s(X37,X39))))),s(X34,X40))) = s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.infer.infer_st_subst_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK8(X44,happ(s(fun(X34,'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),happ(s(fun(X35,fun(X34,'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),X36),s(X35,happ(s(fun(X37,X35),X38),s(X37,X39))))),s(X34,X40)),X43,X42,X41)))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X43)))) )),
  inference(superposition,[],[f227,f221])).
fof(f34502,plain,(
  ( ! [X30,X28,X26,X24,X33,X23,X31,X29,X27,X25,X32] : (s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraint_3'(s('type.infer_t.infer_t',X30),s('type.infer_t.infer_t',X31),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X32))) != s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'const.infer.Success_1'(s('type.one.one',X33))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),happ(s(fun(X25,'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),happ(s(fun(X24,fun(X25,'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),X26),s(X24,happ(s(fun(X23,X24),X27),s(X23,X29))))),s(X25,X28))))) | s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),happ(s(fun(X23,'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'_dst_x0x1x0_3'(s(fun(X24,fun(X25,'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),X26),s(fun(X23,X24),X27),s(X25,X28))),s(X23,X29))) = s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.infer.infer_st_subst_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK8(X33,happ(s(fun(X23,'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'_dst_x0x1x0_3'(s(fun(X24,fun(X25,'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),X26),s(fun(X23,X24),X27),s(X25,X28))),s(X23,X29)),X32,X31,X30)))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X32)))) )),
  inference(superposition,[],[f227,f221])).
fof(f34501,plain,(
  ( ! [X14,X21,X19,X17,X15,X22,X20,X18,X16] : (s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraint_3'(s('type.infer_t.infer_t',X19),s('type.infer_t.infer_t',X20),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X21))) != s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'const.infer.Success_1'(s('type.one.one',X22))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),happ(s(fun(X15,'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X16),s(X15,happ(s(fun(X14,X15),X17),s(X14,X18))))))) | s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),happ(s(fun(X14,'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'_dst_x0x1_2'(s(fun(X15,'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X16),s(fun(X14,X15),X17))),s(X14,X18))) = s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.infer.infer_st_subst_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK8(X22,happ(s(fun(X14,'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'_dst_x0x1_2'(s(fun(X15,'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X16),s(fun(X14,X15),X17))),s(X14,X18)),X21,X20,X19)))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X21)))) )),
  inference(superposition,[],[f227,f206])).
fof(f34500,plain,(
  ( ! [X6,X12,X10,X8,X7,X5,X13,X11,X9] : (s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraint_3'(s('type.infer_t.infer_t',X10),s('type.infer_t.infer_t',X11),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X12))) != s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'const.infer.Success_1'(s('type.one.one',X13))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),happ(s(fun(X7,'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'_dst_x0x1_2'(s(fun(X5,'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X6),s(fun(X7,X5),X8))),s(X7,X9))))) | s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),happ(s(fun(X5,'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X6),s(X5,happ(s(fun(X7,X5),X8),s(X7,X9))))) = s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.infer.infer_st_subst_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK8(X13,happ(s(fun(X5,'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X6),s(X5,happ(s(fun(X7,X5),X8),s(X7,X9)))),X12,X11,X10)))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X12)))) )),
  inference(superposition,[],[f227,f206])).
fof(f34508,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X0))) = s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.infer.infer_st_subst_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK8(X4,happ(s(fun('type.infer.infer_st'('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.infer_st_subst_0'),s('type.infer.infer_st'('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X0)),X3,X2,X1)))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X3))) | s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraint_3'(s('type.infer_t.infer_t',X1),s('type.infer_t.infer_t',X2),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X3))) != s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'const.infer.Success_1'(s('type.one.one',X4))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X0)))))) )),
  inference(forward_demodulation,[],[f34499,f168])).
fof(f34499,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraint_3'(s('type.infer_t.infer_t',X1),s('type.infer_t.infer_t',X2),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X3))) != s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'const.infer.Success_1'(s('type.one.one',X4))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X0))))) | s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),happ(s(fun('type.infer.infer_st'('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.infer_st_subst_0'),s('type.infer.infer_st'('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X0))) = s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.infer.infer_st_subst_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK8(X4,happ(s(fun('type.infer.infer_st'('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.infer_st_subst_0'),s('type.infer.infer_st'('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X0)),X3,X2,X1)))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X3)))) )),
  inference(superposition,[],[f227,f168])).
fof(f34490,plain,(
  ( ! [X6,X10,X8,X7,X5,X9] : (s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraint_3'(s('type.infer_t.infer_t',X7),s('type.infer_t.infer_t',X8),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X9))) != s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'const.infer.Success_1'(s('type.one.one',X6))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X10))) | s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X10) = s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.infer.infer_st_subst_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK8(X5,X10,X9,X8,X7)))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X9)))) )),
  inference(superposition,[],[f227,f258])).
fof(f34489,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraint_3'(s('type.infer_t.infer_t',X1),s('type.infer_t.infer_t',X2),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X3))) != s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'const.infer.Success_1'(s('type.one.one',X0))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X4))) | s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X4) = s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.infer.infer_st_subst_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK8('const.one.one_0',X4,X3,X2,X1)))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X3)))) )),
  inference(superposition,[],[f227,f165])).
fof(f34507,plain,(
  ( ! [X47,X45,X52,X50,X48,X46,X51,X49] : (s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X52) = s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.infer.infer_st_subst_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK8(X51,X52,happ(s(fun(fun(X45,'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),happ(s(fun('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),fun(fun(X45,'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),happ(s(fun('type.option.option'(X45),fun('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),fun(fun(X45,'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))))),'const.option.option_CASE_0'),s('type.option.option'(X45),X46))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X47))),s(fun(X45,'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X48)),X50,X49)))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.option.option_CASE_3'(s('type.option.option'(X45),X46),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X47),s(fun(X45,'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X48))))) | s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'const.infer.Success_1'(s('type.one.one',X51))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X52))) != s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraint_3'(s('type.infer_t.infer_t',X49),s('type.infer_t.infer_t',X50),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.option.option_CASE_3'(s('type.option.option'(X45),X46),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X47),s(fun(X45,'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X48)))))) )),
  inference(forward_demodulation,[],[f34488,f184])).
fof(f34488,plain,(
  ( ! [X47,X45,X52,X50,X48,X46,X51,X49] : (s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'const.infer.Success_1'(s('type.one.one',X51))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X52))) != s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraint_3'(s('type.infer_t.infer_t',X49),s('type.infer_t.infer_t',X50),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.option.option_CASE_3'(s('type.option.option'(X45),X46),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X47),s(fun(X45,'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X48))))) | s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X52) = s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.infer.infer_st_subst_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK8(X51,X52,happ(s(fun(fun(X45,'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),happ(s(fun('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),fun(fun(X45,'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),happ(s(fun('type.option.option'(X45),fun('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),fun(fun(X45,'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))))),'const.option.option_CASE_0'),s('type.option.option'(X45),X46))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X47))),s(fun(X45,'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X48)),X50,X49)))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),happ(s(fun(fun(X45,'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),happ(s(fun('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),fun(fun(X45,'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),happ(s(fun('type.option.option'(X45),fun('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),fun(fun(X45,'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))))),'const.option.option_CASE_0'),s('type.option.option'(X45),X46))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X47))),s(fun(X45,'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X48)))))) )),
  inference(superposition,[],[f227,f184])).
fof(f34487,plain,(
  ( ! [X39,X37,X35,X43,X41,X38,X36,X34,X44,X42,X40] : (s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'const.infer.Success_1'(s('type.one.one',X43))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X44))) != s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraint_3'(s('type.infer_t.infer_t',X41),s('type.infer_t.infer_t',X42),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),happ(s(fun(X37,'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'_dst_x0x1x0_3'(s(fun(X35,fun(X34,'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),X36),s(fun(X37,X35),X38),s(X34,X40))),s(X37,X39))))) | s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X44) = s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.infer.infer_st_subst_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK8(X43,X44,happ(s(fun(X34,'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),happ(s(fun(X35,fun(X34,'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),X36),s(X35,happ(s(fun(X37,X35),X38),s(X37,X39))))),s(X34,X40)),X42,X41)))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),happ(s(fun(X34,'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),happ(s(fun(X35,fun(X34,'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),X36),s(X35,happ(s(fun(X37,X35),X38),s(X37,X39))))),s(X34,X40)))))) )),
  inference(superposition,[],[f227,f221])).
fof(f34486,plain,(
  ( ! [X30,X28,X26,X24,X33,X23,X31,X29,X27,X25,X32] : (s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'const.infer.Success_1'(s('type.one.one',X32))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X33))) != s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraint_3'(s('type.infer_t.infer_t',X30),s('type.infer_t.infer_t',X31),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),happ(s(fun(X25,'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),happ(s(fun(X24,fun(X25,'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),X26),s(X24,happ(s(fun(X23,X24),X27),s(X23,X29))))),s(X25,X28))))) | s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X33) = s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.infer.infer_st_subst_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK8(X32,X33,happ(s(fun(X23,'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'_dst_x0x1x0_3'(s(fun(X24,fun(X25,'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),X26),s(fun(X23,X24),X27),s(X25,X28))),s(X23,X29)),X31,X30)))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),happ(s(fun(X23,'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'_dst_x0x1x0_3'(s(fun(X24,fun(X25,'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),X26),s(fun(X23,X24),X27),s(X25,X28))),s(X23,X29)))))) )),
  inference(superposition,[],[f227,f221])).
fof(f34485,plain,(
  ( ! [X14,X21,X19,X17,X15,X22,X20,X18,X16] : (s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'const.infer.Success_1'(s('type.one.one',X21))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X22))) != s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraint_3'(s('type.infer_t.infer_t',X19),s('type.infer_t.infer_t',X20),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),happ(s(fun(X15,'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X16),s(X15,happ(s(fun(X14,X15),X17),s(X14,X18))))))) | s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X22) = s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.infer.infer_st_subst_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK8(X21,X22,happ(s(fun(X14,'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'_dst_x0x1_2'(s(fun(X15,'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X16),s(fun(X14,X15),X17))),s(X14,X18)),X20,X19)))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),happ(s(fun(X14,'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'_dst_x0x1_2'(s(fun(X15,'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X16),s(fun(X14,X15),X17))),s(X14,X18)))))) )),
  inference(superposition,[],[f227,f206])).
fof(f34484,plain,(
  ( ! [X6,X12,X10,X8,X7,X5,X13,X11,X9] : (s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'const.infer.Success_1'(s('type.one.one',X12))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X13))) != s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraint_3'(s('type.infer_t.infer_t',X10),s('type.infer_t.infer_t',X11),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),happ(s(fun(X7,'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'_dst_x0x1_2'(s(fun(X5,'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X6),s(fun(X7,X5),X8))),s(X7,X9))))) | s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X13) = s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.infer.infer_st_subst_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK8(X12,X13,happ(s(fun(X5,'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X6),s(X5,happ(s(fun(X7,X5),X8),s(X7,X9)))),X11,X10)))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),happ(s(fun(X5,'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X6),s(X5,happ(s(fun(X7,X5),X8),s(X7,X9)))))))) )),
  inference(superposition,[],[f227,f206])).
fof(f34506,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X4) = s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.infer.infer_st_subst_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK8(X3,X4,happ(s(fun('type.infer.infer_st'('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.infer_st_subst_0'),s('type.infer.infer_st'('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X0)),X2,X1)))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X0))))) | s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'const.infer.Success_1'(s('type.one.one',X3))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X4))) != s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraint_3'(s('type.infer_t.infer_t',X1),s('type.infer_t.infer_t',X2),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X0)))))) )),
  inference(forward_demodulation,[],[f34483,f168])).
fof(f34483,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'const.infer.Success_1'(s('type.one.one',X3))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X4))) != s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraint_3'(s('type.infer_t.infer_t',X1),s('type.infer_t.infer_t',X2),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X0))))) | s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X4) = s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.infer.infer_st_subst_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK8(X3,X4,happ(s(fun('type.infer.infer_st'('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.infer_st_subst_0'),s('type.infer.infer_st'('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X0)),X2,X1)))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),happ(s(fun('type.infer.infer_st'('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.infer_st_subst_0'),s('type.infer.infer_st'('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X0)))))) )),
  inference(superposition,[],[f227,f168])).
fof(f34482,plain,(
  ( ! [X61,X59,X57,X62,X60,X58,X56,X63] : (s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'const.infer.Success_1'(s('type.one.one',X62))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X63))) != s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraint_3'(s('type.infer_t.infer_t',X60),s('type.infer_t.infer_t','const.option.option_CASE_3'(s('type.option.option'(X56),X57),s('type.infer_t.infer_t',X58),s(fun(X56,'type.infer_t.infer_t'),X59))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X61))) | s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X63) = s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.infer.infer_st_subst_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK8(X62,X63,X61,happ(s(fun(fun(X56,'type.infer_t.infer_t'),'type.infer_t.infer_t'),happ(s(fun('type.infer_t.infer_t',fun(fun(X56,'type.infer_t.infer_t'),'type.infer_t.infer_t')),happ(s(fun('type.option.option'(X56),fun('type.infer_t.infer_t',fun(fun(X56,'type.infer_t.infer_t'),'type.infer_t.infer_t'))),'const.option.option_CASE_0'),s('type.option.option'(X56),X57))),s('type.infer_t.infer_t',X58))),s(fun(X56,'type.infer_t.infer_t'),X59)),X60)))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X61)))) )),
  inference(superposition,[],[f227,f184])).
fof(f34481,plain,(
  ( ! [X47,X45,X54,X52,X50,X48,X46,X55,X53,X51,X49] : (s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'const.infer.Success_1'(s('type.one.one',X54))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X55))) != s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraint_3'(s('type.infer_t.infer_t',X52),s('type.infer_t.infer_t',happ(s(fun(X48,'type.infer_t.infer_t'),'_dst_x0x1x0_3'(s(fun(X46,fun(X45,'type.infer_t.infer_t')),X47),s(fun(X48,X46),X49),s(X45,X51))),s(X48,X50))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X53))) | s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X55) = s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.infer.infer_st_subst_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK8(X54,X55,X53,happ(s(fun(X45,'type.infer_t.infer_t'),happ(s(fun(X46,fun(X45,'type.infer_t.infer_t')),X47),s(X46,happ(s(fun(X48,X46),X49),s(X48,X50))))),s(X45,X51)),X52)))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X53)))) )),
  inference(superposition,[],[f227,f221])).
fof(f34480,plain,(
  ( ! [X39,X37,X35,X43,X41,X38,X36,X34,X44,X42,X40] : (s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'const.infer.Success_1'(s('type.one.one',X43))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X44))) != s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraint_3'(s('type.infer_t.infer_t',X41),s('type.infer_t.infer_t',happ(s(fun(X36,'type.infer_t.infer_t'),happ(s(fun(X35,fun(X36,'type.infer_t.infer_t')),X37),s(X35,happ(s(fun(X34,X35),X38),s(X34,X40))))),s(X36,X39))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X42))) | s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X44) = s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.infer.infer_st_subst_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK8(X43,X44,X42,happ(s(fun(X34,'type.infer_t.infer_t'),'_dst_x0x1x0_3'(s(fun(X35,fun(X36,'type.infer_t.infer_t')),X37),s(fun(X34,X35),X38),s(X36,X39))),s(X34,X40)),X41)))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X42)))) )),
  inference(superposition,[],[f227,f221])).
fof(f34479,plain,(
  ( ! [X30,X28,X26,X33,X31,X29,X27,X25,X32] : (s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'const.infer.Success_1'(s('type.one.one',X32))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X33))) != s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraint_3'(s('type.infer_t.infer_t',X30),s('type.infer_t.infer_t',happ(s(fun(X26,'type.infer_t.infer_t'),X27),s(X26,happ(s(fun(X25,X26),X28),s(X25,X29))))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X31))) | s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X33) = s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.infer.infer_st_subst_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK8(X32,X33,X31,happ(s(fun(X25,'type.infer_t.infer_t'),'_dst_x0x1_2'(s(fun(X26,'type.infer_t.infer_t'),X27),s(fun(X25,X26),X28))),s(X25,X29)),X30)))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X31)))) )),
  inference(superposition,[],[f227,f206])).
fof(f34478,plain,(
  ( ! [X24,X23,X21,X19,X17,X22,X20,X18,X16] : (s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'const.infer.Success_1'(s('type.one.one',X23))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X24))) != s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraint_3'(s('type.infer_t.infer_t',X21),s('type.infer_t.infer_t',happ(s(fun(X18,'type.infer_t.infer_t'),'_dst_x0x1_2'(s(fun(X16,'type.infer_t.infer_t'),X17),s(fun(X18,X16),X19))),s(X18,X20))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X22))) | s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X24) = s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.infer.infer_st_subst_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK8(X23,X24,X22,happ(s(fun(X16,'type.infer_t.infer_t'),X17),s(X16,happ(s(fun(X18,X16),X19),s(X18,X20)))),X21)))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X22)))) )),
  inference(superposition,[],[f227,f206])).
fof(f34477,plain,(
  ( ! [X14,X12,X15,X13,X11] : (s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'const.infer.Success_1'(s('type.one.one',X14))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X15))) != s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraint_3'(s('type.infer_t.infer_t',X12),s('type.infer_t.infer_t','const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.infer_t.infer_t'),X11))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X13))) | s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X15) = s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.infer.infer_st_subst_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK8(X14,X15,X13,happ(s(fun('type.infer.infer_st'('type.infer_t.infer_t'),'type.infer_t.infer_t'),'const.infer.infer_st_subst_0'),s('type.infer.infer_st'('type.infer_t.infer_t'),X11)),X12)))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X13)))) )),
  inference(superposition,[],[f227,f168])).
fof(f34476,plain,(
  ( ! [X6,X10,X8,X7,X5,X9] : (s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'const.infer.Success_1'(s('type.one.one',X9))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X10))) != s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraint_3'(s('type.infer_t.infer_t',X7),s('type.infer_t.infer_t','const.unify.t_walkstar_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X5),s('type.infer_t.infer_t',X6))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X8))) | s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X10) = s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.infer.infer_st_subst_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK8(X9,X10,X8,happ(s(fun('type.infer_t.infer_t','type.infer_t.infer_t'),happ(s(fun('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),fun('type.infer_t.infer_t','type.infer_t.infer_t')),'const.unify.t_walkstar_0'),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X5))),s('type.infer_t.infer_t',X6)),X7)))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X8)))) )),
  inference(superposition,[],[f227,f176])).
fof(f34475,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'const.infer.Success_1'(s('type.one.one',X3))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X4))) != s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraint_3'(s('type.infer_t.infer_t',X1),s('type.infer_t.infer_t','const.infer_t.Infer_Tuvar_1'(s('type.num.num',X0))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X2))) | s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X4) = s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.infer.infer_st_subst_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK8(X3,X4,X2,happ(s(fun('type.num.num','type.infer_t.infer_t'),'const.infer_t.Infer_Tuvar_0'),s('type.num.num',X0)),X1)))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X2)))) )),
  inference(superposition,[],[f227,f166])).
fof(f34474,plain,(
  ( ! [X61,X59,X57,X62,X60,X58,X56,X63] : (s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'const.infer.Success_1'(s('type.one.one',X62))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X63))) != s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraint_3'(s('type.infer_t.infer_t','const.option.option_CASE_3'(s('type.option.option'(X56),X57),s('type.infer_t.infer_t',X58),s(fun(X56,'type.infer_t.infer_t'),X59))),s('type.infer_t.infer_t',X60),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X61))) | s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X63) = s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.infer.infer_st_subst_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK8(X62,X63,X61,X60,happ(s(fun(fun(X56,'type.infer_t.infer_t'),'type.infer_t.infer_t'),happ(s(fun('type.infer_t.infer_t',fun(fun(X56,'type.infer_t.infer_t'),'type.infer_t.infer_t')),happ(s(fun('type.option.option'(X56),fun('type.infer_t.infer_t',fun(fun(X56,'type.infer_t.infer_t'),'type.infer_t.infer_t'))),'const.option.option_CASE_0'),s('type.option.option'(X56),X57))),s('type.infer_t.infer_t',X58))),s(fun(X56,'type.infer_t.infer_t'),X59)))))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X61)))) )),
  inference(superposition,[],[f227,f184])).
fof(f34473,plain,(
  ( ! [X47,X45,X54,X52,X50,X48,X46,X55,X53,X51,X49] : (s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'const.infer.Success_1'(s('type.one.one',X54))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X55))) != s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraint_3'(s('type.infer_t.infer_t',happ(s(fun(X48,'type.infer_t.infer_t'),'_dst_x0x1x0_3'(s(fun(X46,fun(X45,'type.infer_t.infer_t')),X47),s(fun(X48,X46),X49),s(X45,X51))),s(X48,X50))),s('type.infer_t.infer_t',X52),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X53))) | s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X55) = s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.infer.infer_st_subst_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK8(X54,X55,X53,X52,happ(s(fun(X45,'type.infer_t.infer_t'),happ(s(fun(X46,fun(X45,'type.infer_t.infer_t')),X47),s(X46,happ(s(fun(X48,X46),X49),s(X48,X50))))),s(X45,X51)))))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X53)))) )),
  inference(superposition,[],[f227,f221])).
fof(f34472,plain,(
  ( ! [X39,X37,X35,X43,X41,X38,X36,X34,X44,X42,X40] : (s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'const.infer.Success_1'(s('type.one.one',X43))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X44))) != s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraint_3'(s('type.infer_t.infer_t',happ(s(fun(X36,'type.infer_t.infer_t'),happ(s(fun(X35,fun(X36,'type.infer_t.infer_t')),X37),s(X35,happ(s(fun(X34,X35),X38),s(X34,X40))))),s(X36,X39))),s('type.infer_t.infer_t',X41),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X42))) | s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X44) = s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.infer.infer_st_subst_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK8(X43,X44,X42,X41,happ(s(fun(X34,'type.infer_t.infer_t'),'_dst_x0x1x0_3'(s(fun(X35,fun(X36,'type.infer_t.infer_t')),X37),s(fun(X34,X35),X38),s(X36,X39))),s(X34,X40)))))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X42)))) )),
  inference(superposition,[],[f227,f221])).
fof(f34471,plain,(
  ( ! [X30,X28,X26,X33,X31,X29,X27,X25,X32] : (s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'const.infer.Success_1'(s('type.one.one',X32))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X33))) != s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraint_3'(s('type.infer_t.infer_t',happ(s(fun(X26,'type.infer_t.infer_t'),X27),s(X26,happ(s(fun(X25,X26),X28),s(X25,X29))))),s('type.infer_t.infer_t',X30),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X31))) | s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X33) = s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.infer.infer_st_subst_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK8(X32,X33,X31,X30,happ(s(fun(X25,'type.infer_t.infer_t'),'_dst_x0x1_2'(s(fun(X26,'type.infer_t.infer_t'),X27),s(fun(X25,X26),X28))),s(X25,X29)))))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X31)))) )),
  inference(superposition,[],[f227,f206])).
fof(f34470,plain,(
  ( ! [X24,X23,X21,X19,X17,X22,X20,X18,X16] : (s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'const.infer.Success_1'(s('type.one.one',X23))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X24))) != s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraint_3'(s('type.infer_t.infer_t',happ(s(fun(X18,'type.infer_t.infer_t'),'_dst_x0x1_2'(s(fun(X16,'type.infer_t.infer_t'),X17),s(fun(X18,X16),X19))),s(X18,X20))),s('type.infer_t.infer_t',X21),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X22))) | s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X24) = s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.infer.infer_st_subst_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK8(X23,X24,X22,X21,happ(s(fun(X16,'type.infer_t.infer_t'),X17),s(X16,happ(s(fun(X18,X16),X19),s(X18,X20)))))))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X22)))) )),
  inference(superposition,[],[f227,f206])).
fof(f34469,plain,(
  ( ! [X14,X12,X15,X13,X11] : (s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'const.infer.Success_1'(s('type.one.one',X14))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X15))) != s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraint_3'(s('type.infer_t.infer_t','const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.infer_t.infer_t'),X11))),s('type.infer_t.infer_t',X12),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X13))) | s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X15) = s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.infer.infer_st_subst_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK8(X14,X15,X13,X12,happ(s(fun('type.infer.infer_st'('type.infer_t.infer_t'),'type.infer_t.infer_t'),'const.infer.infer_st_subst_0'),s('type.infer.infer_st'('type.infer_t.infer_t'),X11)))))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X13)))) )),
  inference(superposition,[],[f227,f168])).
fof(f34468,plain,(
  ( ! [X6,X10,X8,X7,X5,X9] : (s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'const.infer.Success_1'(s('type.one.one',X9))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X10))) != s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraint_3'(s('type.infer_t.infer_t','const.unify.t_walkstar_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X5),s('type.infer_t.infer_t',X6))),s('type.infer_t.infer_t',X7),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X8))) | s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X10) = s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.infer.infer_st_subst_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK8(X9,X10,X8,X7,happ(s(fun('type.infer_t.infer_t','type.infer_t.infer_t'),happ(s(fun('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),fun('type.infer_t.infer_t','type.infer_t.infer_t')),'const.unify.t_walkstar_0'),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X5))),s('type.infer_t.infer_t',X6)))))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X8)))) )),
  inference(superposition,[],[f227,f176])).
fof(f34467,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'const.infer.Success_1'(s('type.one.one',X3))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X4))) != s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraint_3'(s('type.infer_t.infer_t','const.infer_t.Infer_Tuvar_1'(s('type.num.num',X0))),s('type.infer_t.infer_t',X1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X2))) | s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X4) = s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.infer.infer_st_subst_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK8(X3,X4,X2,X1,happ(s(fun('type.num.num','type.infer_t.infer_t'),'const.infer_t.Infer_Tuvar_0'),s('type.num.num',X0)))))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X2)))) )),
  inference(superposition,[],[f227,f166])).
fof(f33619,plain,(
  ( ! [X47,X45,X43,X54,X52,X50,X48,X46,X44,X42,X53,X51,X49] : (s('type.pair.prod'('type.infer.exc'(X42,'type.list.list'('type.string.char')),X50),'const.pair.,_2'(s('type.infer.exc'(X42,'type.list.list'('type.string.char')),'const.infer.Success_1'(s(X42,X51))),s(X50,X52))) != s('type.pair.prod'('type.infer.exc'(X42,'type.list.list'('type.string.char')),X50),'const.infer.lookup_tenvC_st_ex_3'(s('type.ast.id'('type.list.list'('type.string.char')),X53),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X42)))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X42))),happ(s(fun(X46,'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X42)))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X42)))),'_dst_x0x1x0_3'(s(fun(X44,fun(X43,'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X42)))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X42))))),X45),s(fun(X46,X44),X47),s(X43,X49))),s(X46,X48))),s(X50,X54))) | s('type.option.option'(X42),'const.option.SOME_1'(s(X42,X51))) = s('type.option.option'(X42),'const.semanticPrimitives.lookup_alist_mod_env_2'(s('type.ast.id'('type.list.list'('type.string.char')),X53),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X42)))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X42))),happ(s(fun(X43,'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X42)))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X42)))),happ(s(fun(X44,fun(X43,'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X42)))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X42))))),X45),s(X44,happ(s(fun(X46,X44),X47),s(X46,X48))))),s(X43,X49)))))) )),
  inference(superposition,[],[f199,f221])).
fof(f33618,plain,(
  ( ! [X30,X39,X37,X35,X33,X41,X31,X29,X38,X36,X34,X32,X40] : (s('type.pair.prod'('type.infer.exc'(X29,'type.list.list'('type.string.char')),X37),'const.pair.,_2'(s('type.infer.exc'(X29,'type.list.list'('type.string.char')),'const.infer.Success_1'(s(X29,X38))),s(X37,X39))) != s('type.pair.prod'('type.infer.exc'(X29,'type.list.list'('type.string.char')),X37),'const.infer.lookup_tenvC_st_ex_3'(s('type.ast.id'('type.list.list'('type.string.char')),X40),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X29)))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X29))),happ(s(fun(X32,'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X29)))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X29)))),happ(s(fun(X31,fun(X32,'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X29)))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X29))))),X33),s(X31,happ(s(fun(X30,X31),X34),s(X30,X36))))),s(X32,X35))),s(X37,X41))) | s('type.option.option'(X29),'const.option.SOME_1'(s(X29,X38))) = s('type.option.option'(X29),'const.semanticPrimitives.lookup_alist_mod_env_2'(s('type.ast.id'('type.list.list'('type.string.char')),X40),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X29)))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X29))),happ(s(fun(X30,'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X29)))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X29)))),'_dst_x0x1x0_3'(s(fun(X31,fun(X32,'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X29)))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X29))))),X33),s(fun(X30,X31),X34),s(X32,X35))),s(X30,X36)))))) )),
  inference(superposition,[],[f199,f221])).
fof(f33617,plain,(
  ( ! [X28,X26,X24,X23,X21,X19,X27,X25,X22,X20,X18] : (s('type.pair.prod'('type.infer.exc'(X18,'type.list.list'('type.string.char')),X24),'const.pair.,_2'(s('type.infer.exc'(X18,'type.list.list'('type.string.char')),'const.infer.Success_1'(s(X18,X25))),s(X24,X26))) != s('type.pair.prod'('type.infer.exc'(X18,'type.list.list'('type.string.char')),X24),'const.infer.lookup_tenvC_st_ex_3'(s('type.ast.id'('type.list.list'('type.string.char')),X27),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X18)))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X18))),happ(s(fun(X20,'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X18)))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X18)))),X21),s(X20,happ(s(fun(X19,X20),X22),s(X19,X23))))),s(X24,X28))) | s('type.option.option'(X18),'const.option.SOME_1'(s(X18,X25))) = s('type.option.option'(X18),'const.semanticPrimitives.lookup_alist_mod_env_2'(s('type.ast.id'('type.list.list'('type.string.char')),X27),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X18)))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X18))),happ(s(fun(X19,'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X18)))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X18)))),'_dst_x0x1_2'(s(fun(X20,'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X18)))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X18)))),X21),s(fun(X19,X20),X22))),s(X19,X23)))))) )),
  inference(superposition,[],[f199,f206])).
fof(f33616,plain,(
  ( ! [X14,X12,X10,X8,X17,X7,X15,X13,X11,X9,X16] : (s('type.pair.prod'('type.infer.exc'(X7,'type.list.list'('type.string.char')),X13),'const.pair.,_2'(s('type.infer.exc'(X7,'type.list.list'('type.string.char')),'const.infer.Success_1'(s(X7,X14))),s(X13,X15))) != s('type.pair.prod'('type.infer.exc'(X7,'type.list.list'('type.string.char')),X13),'const.infer.lookup_tenvC_st_ex_3'(s('type.ast.id'('type.list.list'('type.string.char')),X16),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X7)))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X7))),happ(s(fun(X10,'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X7)))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X7)))),'_dst_x0x1_2'(s(fun(X8,'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X7)))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X7)))),X9),s(fun(X10,X8),X11))),s(X10,X12))),s(X13,X17))) | s('type.option.option'(X7),'const.option.SOME_1'(s(X7,X14))) = s('type.option.option'(X7),'const.semanticPrimitives.lookup_alist_mod_env_2'(s('type.ast.id'('type.list.list'('type.string.char')),X16),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X7)))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X7))),happ(s(fun(X8,'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X7)))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X7)))),X9),s(X8,happ(s(fun(X10,X8),X11),s(X10,X12)))))))) )),
  inference(superposition,[],[f199,f206])).
fof(f33613,plain,(
  ( ! [X47,X45,X43,X54,X52,X50,X48,X46,X44,X42,X53,X51,X49] : (s('type.pair.prod'('type.infer.exc'(X49,'type.list.list'('type.string.char')),X50),'const.pair.,_2'(s('type.infer.exc'(X49,'type.list.list'('type.string.char')),'const.infer.Success_1'(s(X49,X51))),s(X50,X52))) != s('type.pair.prod'('type.infer.exc'(X49,'type.list.list'('type.string.char')),X50),'const.infer.lookup_tenvC_st_ex_3'(s('type.ast.id'('type.list.list'('type.string.char')),happ(s(fun(X45,'type.ast.id'('type.list.list'('type.string.char'))),'_dst_x0x1x0_3'(s(fun(X43,fun(X42,'type.ast.id'('type.list.list'('type.string.char')))),X44),s(fun(X45,X43),X46),s(X42,X48))),s(X45,X47))),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X49)))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X49))),X53),s(X50,X54))) | s('type.option.option'(X49),'const.option.SOME_1'(s(X49,X51))) = s('type.option.option'(X49),'const.semanticPrimitives.lookup_alist_mod_env_2'(s('type.ast.id'('type.list.list'('type.string.char')),happ(s(fun(X42,'type.ast.id'('type.list.list'('type.string.char'))),happ(s(fun(X43,fun(X42,'type.ast.id'('type.list.list'('type.string.char')))),X44),s(X43,happ(s(fun(X45,X43),X46),s(X45,X47))))),s(X42,X48))),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X49)))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X49))),X53)))) )),
  inference(superposition,[],[f199,f221])).
fof(f33612,plain,(
  ( ! [X30,X39,X37,X35,X33,X41,X31,X29,X38,X36,X34,X32,X40] : (s('type.pair.prod'('type.infer.exc'(X36,'type.list.list'('type.string.char')),X37),'const.pair.,_2'(s('type.infer.exc'(X36,'type.list.list'('type.string.char')),'const.infer.Success_1'(s(X36,X38))),s(X37,X39))) != s('type.pair.prod'('type.infer.exc'(X36,'type.list.list'('type.string.char')),X37),'const.infer.lookup_tenvC_st_ex_3'(s('type.ast.id'('type.list.list'('type.string.char')),happ(s(fun(X31,'type.ast.id'('type.list.list'('type.string.char'))),happ(s(fun(X30,fun(X31,'type.ast.id'('type.list.list'('type.string.char')))),X32),s(X30,happ(s(fun(X29,X30),X33),s(X29,X35))))),s(X31,X34))),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X36)))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X36))),X40),s(X37,X41))) | s('type.option.option'(X36),'const.option.SOME_1'(s(X36,X38))) = s('type.option.option'(X36),'const.semanticPrimitives.lookup_alist_mod_env_2'(s('type.ast.id'('type.list.list'('type.string.char')),happ(s(fun(X29,'type.ast.id'('type.list.list'('type.string.char'))),'_dst_x0x1x0_3'(s(fun(X30,fun(X31,'type.ast.id'('type.list.list'('type.string.char')))),X32),s(fun(X29,X30),X33),s(X31,X34))),s(X29,X35))),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X36)))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X36))),X40)))) )),
  inference(superposition,[],[f199,f221])).
fof(f33611,plain,(
  ( ! [X28,X26,X24,X23,X21,X19,X27,X25,X22,X20,X18] : (s('type.pair.prod'('type.infer.exc'(X23,'type.list.list'('type.string.char')),X24),'const.pair.,_2'(s('type.infer.exc'(X23,'type.list.list'('type.string.char')),'const.infer.Success_1'(s(X23,X25))),s(X24,X26))) != s('type.pair.prod'('type.infer.exc'(X23,'type.list.list'('type.string.char')),X24),'const.infer.lookup_tenvC_st_ex_3'(s('type.ast.id'('type.list.list'('type.string.char')),happ(s(fun(X19,'type.ast.id'('type.list.list'('type.string.char'))),X20),s(X19,happ(s(fun(X18,X19),X21),s(X18,X22))))),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X23)))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X23))),X27),s(X24,X28))) | s('type.option.option'(X23),'const.option.SOME_1'(s(X23,X25))) = s('type.option.option'(X23),'const.semanticPrimitives.lookup_alist_mod_env_2'(s('type.ast.id'('type.list.list'('type.string.char')),happ(s(fun(X18,'type.ast.id'('type.list.list'('type.string.char'))),'_dst_x0x1_2'(s(fun(X19,'type.ast.id'('type.list.list'('type.string.char'))),X20),s(fun(X18,X19),X21))),s(X18,X22))),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X23)))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X23))),X27)))) )),
  inference(superposition,[],[f199,f206])).
fof(f33610,plain,(
  ( ! [X14,X12,X10,X8,X17,X7,X15,X13,X11,X9,X16] : (s('type.pair.prod'('type.infer.exc'(X12,'type.list.list'('type.string.char')),X13),'const.pair.,_2'(s('type.infer.exc'(X12,'type.list.list'('type.string.char')),'const.infer.Success_1'(s(X12,X14))),s(X13,X15))) != s('type.pair.prod'('type.infer.exc'(X12,'type.list.list'('type.string.char')),X13),'const.infer.lookup_tenvC_st_ex_3'(s('type.ast.id'('type.list.list'('type.string.char')),happ(s(fun(X9,'type.ast.id'('type.list.list'('type.string.char'))),'_dst_x0x1_2'(s(fun(X7,'type.ast.id'('type.list.list'('type.string.char'))),X8),s(fun(X9,X7),X10))),s(X9,X11))),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X12)))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X12))),X16),s(X13,X17))) | s('type.option.option'(X12),'const.option.SOME_1'(s(X12,X14))) = s('type.option.option'(X12),'const.semanticPrimitives.lookup_alist_mod_env_2'(s('type.ast.id'('type.list.list'('type.string.char')),happ(s(fun(X7,'type.ast.id'('type.list.list'('type.string.char'))),X8),s(X7,happ(s(fun(X9,X7),X10),s(X9,X11))))),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X12)))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X12))),X16)))) )),
  inference(superposition,[],[f199,f206])).
fof(f33607,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s('type.pair.prod'('type.infer.exc'(X0,'type.list.list'('type.string.char')),X0),'const.infer.read_1'(s(X0,X1))) != s('type.pair.prod'('type.infer.exc'(X0,'type.list.list'('type.string.char')),X0),'const.infer.lookup_tenvC_st_ex_3'(s('type.ast.id'('type.list.list'('type.string.char')),X2),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X0)))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X0))),X3),s(X0,X4))) | s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X1))) = s('type.option.option'(X0),'const.semanticPrimitives.lookup_alist_mod_env_2'(s('type.ast.id'('type.list.list'('type.string.char')),X2),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X0)))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X0))),X3)))) )),
  inference(superposition,[],[f199,f177])).
fof(f33524,plain,(
  ( ! [X321,X323,X318,X320,X322,X317,X319] : (s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),X319),'const.pair.,_2'(s('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'const.infer.Success_1'(s('type.one.one',X318))),s(X319,X320))) != s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),X319),'const.infer.lookup_tenvC_st_ex_3'(s('type.ast.id'('type.list.list'('type.string.char')),X321),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.one.one')))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.one.one'))),X322),s(X319,X323))) | s('type.option.option'('type.one.one'),'const.option.SOME_1'(s('type.one.one',X317))) = s('type.option.option'('type.one.one'),'const.semanticPrimitives.lookup_alist_mod_env_2'(s('type.ast.id'('type.list.list'('type.string.char')),X321),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.one.one')))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.one.one'))),X322)))) )),
  inference(superposition,[],[f199,f258])).
fof(f33523,plain,(
  ( ! [X313,X315,X316,X312,X314,X311] : (s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),X312),'const.pair.,_2'(s('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'const.infer.Success_1'(s('type.one.one',X311))),s(X312,X313))) != s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),X312),'const.infer.lookup_tenvC_st_ex_3'(s('type.ast.id'('type.list.list'('type.string.char')),X314),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.one.one')))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.one.one'))),X315),s(X312,X316))) | s('type.option.option'('type.one.one'),'const.option.SOME_1'(s('type.one.one','const.one.one_0'))) = s('type.option.option'('type.one.one'),'const.semanticPrimitives.lookup_alist_mod_env_2'(s('type.ast.id'('type.list.list'('type.string.char')),X314),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.one.one')))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.one.one'))),X315)))) )),
  inference(superposition,[],[f199,f165])).
fof(f33514,plain,(
  ( ! [X243,X241,X239,X237,X246,X244,X242,X240,X238,X236,X247,X245] : (s('type.pair.prod'('type.infer.exc'(fun(X236,fun(X237,fun(X238,fun(X239,fun(X240,'type.one.one'))))),'type.list.list'('type.string.char')),X243),'const.pair.,_2'(s('type.infer.exc'(fun(X236,fun(X237,fun(X238,fun(X239,fun(X240,'type.one.one'))))),'type.list.list'('type.string.char')),'const.infer.Success_1'(s(fun(X236,fun(X237,fun(X238,fun(X239,fun(X240,'type.one.one'))))),X242))),s(X243,X244))) != s('type.pair.prod'('type.infer.exc'(fun(X236,fun(X237,fun(X238,fun(X239,fun(X240,'type.one.one'))))),'type.list.list'('type.string.char')),X243),'const.infer.lookup_tenvC_st_ex_3'(s('type.ast.id'('type.list.list'('type.string.char')),X245),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),fun(X236,fun(X237,fun(X238,fun(X239,fun(X240,'type.one.one'))))))))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),fun(X236,fun(X237,fun(X238,fun(X239,fun(X240,'type.one.one')))))))),X246),s(X243,X247))) | s('type.option.option'(fun(X236,fun(X237,fun(X238,fun(X239,fun(X240,'type.one.one')))))),'const.option.SOME_1'(s(fun(X236,fun(X237,fun(X238,fun(X239,fun(X240,'type.one.one'))))),X241))) = s('type.option.option'(fun(X236,fun(X237,fun(X238,fun(X239,fun(X240,'type.one.one')))))),'const.semanticPrimitives.lookup_alist_mod_env_2'(s('type.ast.id'('type.list.list'('type.string.char')),X245),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),fun(X236,fun(X237,fun(X238,fun(X239,fun(X240,'type.one.one'))))))))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),fun(X236,fun(X237,fun(X238,fun(X239,fun(X240,'type.one.one')))))))),X246)))) )),
  inference(superposition,[],[f199,f815])).
fof(f33512,plain,(
  ( ! [X218,X216,X222,X220,X215,X219,X217,X223,X221,X224,X214] : (s('type.pair.prod'('type.infer.exc'(fun(X214,fun(X215,fun(X216,fun(X217,'type.one.one')))),'type.list.list'('type.string.char')),X220),'const.pair.,_2'(s('type.infer.exc'(fun(X214,fun(X215,fun(X216,fun(X217,'type.one.one')))),'type.list.list'('type.string.char')),'const.infer.Success_1'(s(fun(X214,fun(X215,fun(X216,fun(X217,'type.one.one')))),X219))),s(X220,X221))) != s('type.pair.prod'('type.infer.exc'(fun(X214,fun(X215,fun(X216,fun(X217,'type.one.one')))),'type.list.list'('type.string.char')),X220),'const.infer.lookup_tenvC_st_ex_3'(s('type.ast.id'('type.list.list'('type.string.char')),X222),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),fun(X214,fun(X215,fun(X216,fun(X217,'type.one.one')))))))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),fun(X214,fun(X215,fun(X216,fun(X217,'type.one.one'))))))),X223),s(X220,X224))) | s('type.option.option'(fun(X214,fun(X215,fun(X216,fun(X217,'type.one.one'))))),'const.option.SOME_1'(s(fun(X214,fun(X215,fun(X216,fun(X217,'type.one.one')))),X218))) = s('type.option.option'(fun(X214,fun(X215,fun(X216,fun(X217,'type.one.one'))))),'const.semanticPrimitives.lookup_alist_mod_env_2'(s('type.ast.id'('type.list.list'('type.string.char')),X222),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),fun(X214,fun(X215,fun(X216,fun(X217,'type.one.one')))))))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),fun(X214,fun(X215,fun(X216,fun(X217,'type.one.one'))))))),X223)))) )),
  inference(superposition,[],[f199,f787])).
fof(f33510,plain,(
  ( ! [X198,X196,X194,X202,X200,X199,X197,X195,X203,X201] : (s('type.pair.prod'('type.infer.exc'(fun(X194,fun(X195,fun(X196,'type.one.one'))),'type.list.list'('type.string.char')),X199),'const.pair.,_2'(s('type.infer.exc'(fun(X194,fun(X195,fun(X196,'type.one.one'))),'type.list.list'('type.string.char')),'const.infer.Success_1'(s(fun(X194,fun(X195,fun(X196,'type.one.one'))),X198))),s(X199,X200))) != s('type.pair.prod'('type.infer.exc'(fun(X194,fun(X195,fun(X196,'type.one.one'))),'type.list.list'('type.string.char')),X199),'const.infer.lookup_tenvC_st_ex_3'(s('type.ast.id'('type.list.list'('type.string.char')),X201),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),fun(X194,fun(X195,fun(X196,'type.one.one'))))))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),fun(X194,fun(X195,fun(X196,'type.one.one')))))),X202),s(X199,X203))) | s('type.option.option'(fun(X194,fun(X195,fun(X196,'type.one.one')))),'const.option.SOME_1'(s(fun(X194,fun(X195,fun(X196,'type.one.one'))),X197))) = s('type.option.option'(fun(X194,fun(X195,fun(X196,'type.one.one')))),'const.semanticPrimitives.lookup_alist_mod_env_2'(s('type.ast.id'('type.list.list'('type.string.char')),X201),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),fun(X194,fun(X195,fun(X196,'type.one.one'))))))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),fun(X194,fun(X195,fun(X196,'type.one.one')))))),X202)))) )),
  inference(superposition,[],[f199,f752])).
fof(f33506,plain,(
  ( ! [X158,X165,X163,X161,X159,X166,X164,X162,X160] : (s('type.pair.prod'('type.infer.exc'(fun(X158,fun(X159,'type.one.one')),'type.list.list'('type.string.char')),X162),'const.pair.,_2'(s('type.infer.exc'(fun(X158,fun(X159,'type.one.one')),'type.list.list'('type.string.char')),'const.infer.Success_1'(s(fun(X158,fun(X159,'type.one.one')),X161))),s(X162,X163))) != s('type.pair.prod'('type.infer.exc'(fun(X158,fun(X159,'type.one.one')),'type.list.list'('type.string.char')),X162),'const.infer.lookup_tenvC_st_ex_3'(s('type.ast.id'('type.list.list'('type.string.char')),X164),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),fun(X158,fun(X159,'type.one.one')))))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),fun(X158,fun(X159,'type.one.one'))))),X165),s(X162,X166))) | s('type.option.option'(fun(X158,fun(X159,'type.one.one'))),'const.option.SOME_1'(s(fun(X158,fun(X159,'type.one.one')),X160))) = s('type.option.option'(fun(X158,fun(X159,'type.one.one'))),'const.semanticPrimitives.lookup_alist_mod_env_2'(s('type.ast.id'('type.list.list'('type.string.char')),X164),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),fun(X158,fun(X159,'type.one.one')))))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),fun(X158,fun(X159,'type.one.one'))))),X165)))) )),
  inference(superposition,[],[f199,f724])).
fof(f33502,plain,(
  ( ! [X127,X132,X130,X128,X126,X133,X131,X129] : (s('type.pair.prod'('type.infer.exc'(fun(X126,'type.one.one'),'type.list.list'('type.string.char')),X129),'const.pair.,_2'(s('type.infer.exc'(fun(X126,'type.one.one'),'type.list.list'('type.string.char')),'const.infer.Success_1'(s(fun(X126,'type.one.one'),X128))),s(X129,X130))) != s('type.pair.prod'('type.infer.exc'(fun(X126,'type.one.one'),'type.list.list'('type.string.char')),X129),'const.infer.lookup_tenvC_st_ex_3'(s('type.ast.id'('type.list.list'('type.string.char')),X131),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),fun(X126,'type.one.one'))))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),fun(X126,'type.one.one')))),X132),s(X129,X133))) | s('type.option.option'(fun(X126,'type.one.one')),'const.option.SOME_1'(s(fun(X126,'type.one.one'),X127))) = s('type.option.option'(fun(X126,'type.one.one')),'const.semanticPrimitives.lookup_alist_mod_env_2'(s('type.ast.id'('type.list.list'('type.string.char')),X131),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),fun(X126,'type.one.one'))))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),fun(X126,'type.one.one')))),X132)))) )),
  inference(superposition,[],[f199,f605])).
fof(f33500,plain,(
  ( ! [X118,X116,X114,X117,X115,X113] : (s('type.pair.prod'('type.infer.exc'(bool,'type.list.list'('type.string.char')),X114),'const.pair.,_2'(s('type.infer.exc'(bool,'type.list.list'('type.string.char')),'const.infer.Success_1'(s(bool,X113))),s(X114,X115))) != s('type.pair.prod'('type.infer.exc'(bool,'type.list.list'('type.string.char')),X114),'const.infer.lookup_tenvC_st_ex_3'(s('type.ast.id'('type.list.list'('type.string.char')),X116),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),bool)))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),bool))),X117),s(X114,X118))) | s('type.option.option'(bool),'const.option.SOME_1'(s(bool,'F_0'))) = s('type.option.option'(bool),'const.semanticPrimitives.lookup_alist_mod_env_2'(s('type.ast.id'('type.list.list'('type.string.char')),X116),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),bool)))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),bool))),X117))) | s(bool,'T_0') = s(bool,X113)) )),
  inference(superposition,[],[f199,f167])).
fof(f33498,plain,(
  ( ! [X103,X101,X99,X105,X102,X100,X104] : (s('type.pair.prod'('type.infer.exc'(bool,'type.list.list'('type.string.char')),X100),'const.pair.,_2'(s('type.infer.exc'(bool,'type.list.list'('type.string.char')),'const.infer.Success_1'(s(bool,X99))),s(X100,X101))) != s('type.pair.prod'('type.infer.exc'(bool,'type.list.list'('type.string.char')),X100),'const.infer.lookup_tenvC_st_ex_3'(s('type.ast.id'('type.list.list'('type.string.char')),X102),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),bool)))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),bool))),X103),s(X100,X104))) | s('type.option.option'(bool),'const.option.SOME_1'(s(bool,'T_0'))) = s('type.option.option'(bool),'const.semanticPrimitives.lookup_alist_mod_env_2'(s('type.ast.id'('type.list.list'('type.string.char')),X102),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),bool)))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),bool))),X103))) | s(bool,X99) = s(bool,X105) | s(bool,'T_0') = s(bool,X105)) )),
  inference(superposition,[],[f199,f272])).
fof(f33495,plain,(
  ( ! [X80,X78,X83,X81,X79,X84,X82] : (s('type.pair.prod'('type.infer.exc'(bool,'type.list.list'('type.string.char')),X80),'const.pair.,_2'(s('type.infer.exc'(bool,'type.list.list'('type.string.char')),'const.infer.Success_1'(s(bool,X79))),s(X80,X81))) != s('type.pair.prod'('type.infer.exc'(bool,'type.list.list'('type.string.char')),X80),'const.infer.lookup_tenvC_st_ex_3'(s('type.ast.id'('type.list.list'('type.string.char')),X82),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),bool)))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),bool))),X83),s(X80,X84))) | s('type.option.option'(bool),'const.option.SOME_1'(s(bool,X78))) = s('type.option.option'(bool),'const.semanticPrimitives.lookup_alist_mod_env_2'(s('type.ast.id'('type.list.list'('type.string.char')),X82),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),bool)))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),bool))),X83))) | s(bool,'T_0') = s(bool,X79) | s(bool,'T_0') = s(bool,X78)) )),
  inference(superposition,[],[f199,f272])).
fof(f33494,plain,(
  ( ! [X76,X74,X72,X71,X77,X75,X73] : (s('type.pair.prod'('type.infer.exc'(bool,'type.list.list'('type.string.char')),X72),'const.pair.,_2'(s('type.infer.exc'(bool,'type.list.list'('type.string.char')),'const.infer.Success_1'(s(bool,'T_0'))),s(X72,X73))) != s('type.pair.prod'('type.infer.exc'(bool,'type.list.list'('type.string.char')),X72),'const.infer.lookup_tenvC_st_ex_3'(s('type.ast.id'('type.list.list'('type.string.char')),X74),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),bool)))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),bool))),X75),s(X72,X76))) | s('type.option.option'(bool),'const.option.SOME_1'(s(bool,X71))) = s('type.option.option'(bool),'const.semanticPrimitives.lookup_alist_mod_env_2'(s('type.ast.id'('type.list.list'('type.string.char')),X74),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),bool)))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),bool))),X75))) | s(bool,X71) = s(bool,X77) | s(bool,'T_0') = s(bool,X77)) )),
  inference(superposition,[],[f199,f272])).
fof(f33493,plain,(
  ( ! [X70,X68,X66,X69,X67,X65] : (s('type.pair.prod'('type.infer.exc'(bool,'type.list.list'('type.string.char')),X66),'const.pair.,_2'(s('type.infer.exc'(bool,'type.list.list'('type.string.char')),'const.infer.Success_1'(s(bool,'F_0'))),s(X66,X67))) != s('type.pair.prod'('type.infer.exc'(bool,'type.list.list'('type.string.char')),X66),'const.infer.lookup_tenvC_st_ex_3'(s('type.ast.id'('type.list.list'('type.string.char')),X68),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),bool)))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),bool))),X69),s(X66,X70))) | s('type.option.option'(bool),'const.option.SOME_1'(s(bool,X65))) = s('type.option.option'(bool),'const.semanticPrimitives.lookup_alist_mod_env_2'(s('type.ast.id'('type.list.list'('type.string.char')),X68),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),bool)))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),bool))),X69))) | s(bool,'T_0') = s(bool,X65)) )),
  inference(superposition,[],[f199,f167])).
fof(f33491,plain,(
  ( ! [X47,X45,X43,X54,X52,X50,X48,X46,X44,X42,X53,X51,X49] : (s('type.pair.prod'('type.infer.exc'(X42,'type.list.list'('type.string.char')),X50),'const.infer.lookup_tenvC_st_ex_3'(s('type.ast.id'('type.list.list'('type.string.char')),X52),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X42)))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X42))),X53),s(X50,X54))) != s('type.pair.prod'('type.infer.exc'(X42,'type.list.list'('type.string.char')),X50),'const.pair.,_2'(s('type.infer.exc'(X42,'type.list.list'('type.string.char')),'const.infer.Success_1'(s(X42,happ(s(fun(X46,X42),'_dst_x0x1x0_3'(s(fun(X44,fun(X43,X42)),X45),s(fun(X46,X44),X47),s(X43,X49))),s(X46,X48))))),s(X50,X51))) | s('type.option.option'(X42),'const.semanticPrimitives.lookup_alist_mod_env_2'(s('type.ast.id'('type.list.list'('type.string.char')),X52),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X42)))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X42))),X53))) = s('type.option.option'(X42),'const.option.SOME_1'(s(X42,happ(s(fun(X43,X42),happ(s(fun(X44,fun(X43,X42)),X45),s(X44,happ(s(fun(X46,X44),X47),s(X46,X48))))),s(X43,X49)))))) )),
  inference(superposition,[],[f199,f221])).
fof(f33490,plain,(
  ( ! [X30,X39,X37,X35,X33,X41,X31,X29,X38,X36,X34,X32,X40] : (s('type.pair.prod'('type.infer.exc'(X29,'type.list.list'('type.string.char')),X37),'const.infer.lookup_tenvC_st_ex_3'(s('type.ast.id'('type.list.list'('type.string.char')),X39),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X29)))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X29))),X40),s(X37,X41))) != s('type.pair.prod'('type.infer.exc'(X29,'type.list.list'('type.string.char')),X37),'const.pair.,_2'(s('type.infer.exc'(X29,'type.list.list'('type.string.char')),'const.infer.Success_1'(s(X29,happ(s(fun(X32,X29),happ(s(fun(X31,fun(X32,X29)),X33),s(X31,happ(s(fun(X30,X31),X34),s(X30,X36))))),s(X32,X35))))),s(X37,X38))) | s('type.option.option'(X29),'const.semanticPrimitives.lookup_alist_mod_env_2'(s('type.ast.id'('type.list.list'('type.string.char')),X39),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X29)))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X29))),X40))) = s('type.option.option'(X29),'const.option.SOME_1'(s(X29,happ(s(fun(X30,X29),'_dst_x0x1x0_3'(s(fun(X31,fun(X32,X29)),X33),s(fun(X30,X31),X34),s(X32,X35))),s(X30,X36)))))) )),
  inference(superposition,[],[f199,f221])).
fof(f33489,plain,(
  ( ! [X28,X26,X24,X23,X21,X19,X27,X25,X22,X20,X18] : (s('type.pair.prod'('type.infer.exc'(X18,'type.list.list'('type.string.char')),X24),'const.infer.lookup_tenvC_st_ex_3'(s('type.ast.id'('type.list.list'('type.string.char')),X26),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X18)))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X18))),X27),s(X24,X28))) != s('type.pair.prod'('type.infer.exc'(X18,'type.list.list'('type.string.char')),X24),'const.pair.,_2'(s('type.infer.exc'(X18,'type.list.list'('type.string.char')),'const.infer.Success_1'(s(X18,happ(s(fun(X20,X18),X21),s(X20,happ(s(fun(X19,X20),X22),s(X19,X23))))))),s(X24,X25))) | s('type.option.option'(X18),'const.option.SOME_1'(s(X18,happ(s(fun(X19,X18),'_dst_x0x1_2'(s(fun(X20,X18),X21),s(fun(X19,X20),X22))),s(X19,X23))))) = s('type.option.option'(X18),'const.semanticPrimitives.lookup_alist_mod_env_2'(s('type.ast.id'('type.list.list'('type.string.char')),X26),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X18)))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X18))),X27)))) )),
  inference(superposition,[],[f199,f206])).
fof(f33488,plain,(
  ( ! [X14,X12,X10,X8,X17,X7,X15,X13,X11,X9,X16] : (s('type.pair.prod'('type.infer.exc'(X7,'type.list.list'('type.string.char')),X13),'const.infer.lookup_tenvC_st_ex_3'(s('type.ast.id'('type.list.list'('type.string.char')),X15),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X7)))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X7))),X16),s(X13,X17))) != s('type.pair.prod'('type.infer.exc'(X7,'type.list.list'('type.string.char')),X13),'const.pair.,_2'(s('type.infer.exc'(X7,'type.list.list'('type.string.char')),'const.infer.Success_1'(s(X7,happ(s(fun(X10,X7),'_dst_x0x1_2'(s(fun(X8,X7),X9),s(fun(X10,X8),X11))),s(X10,X12))))),s(X13,X14))) | s('type.option.option'(X7),'const.option.SOME_1'(s(X7,happ(s(fun(X8,X7),X9),s(X8,happ(s(fun(X10,X8),X11),s(X10,X12))))))) = s('type.option.option'(X7),'const.semanticPrimitives.lookup_alist_mod_env_2'(s('type.ast.id'('type.list.list'('type.string.char')),X15),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X7)))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X7))),X16)))) )),
  inference(superposition,[],[f199,f206])).
fof(f32255,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),'const.infer.fresh_uvar_1'(s('type.infer.infer_st'(X1),X2))) = s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),'const.pair.,_2'(s('type.infer.exc'('type.infer_t.infer_t',X0),'const.infer.Success_1'(s('type.infer_t.infer_t',X3))),s('type.infer.infer_st'(X1),'const.infer.infer_st_next_uvar_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'(X1),X2))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.infer.infer_st'(X1),X2))))) | s('type.infer_t.infer_t',X3) != s('type.infer_t.infer_t','const.infer_t.Infer_Tuvar_1'(s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'(X1),X2)))))) )),
  inference(equality_resolution,[],[f191])).
fof(f32253,plain,(
  ( ! [X39,X37,X35,X43,X41,X38,X36,X34,X44,X42,X40] : (s('type.infer.infer_st'(X34),X42) != s('type.infer.infer_st'(X34),'const.infer.infer_st_next_uvar_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'(X34),happ(s(fun(X38,'type.infer.infer_st'(X34)),'_dst_x0x1x0_3'(s(fun(X36,fun(X35,'type.infer.infer_st'(X34))),X37),s(fun(X38,X36),X39),s(X35,X41))),s(X38,X40))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.infer.infer_st'(X34),happ(s(fun(X38,'type.infer.infer_st'(X34)),'_dst_x0x1x0_3'(s(fun(X36,fun(X35,'type.infer.infer_st'(X34))),X37),s(fun(X38,X36),X39),s(X35,X41))),s(X38,X40))))) | s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X43),'type.infer.infer_st'(X34)),'const.pair.,_2'(s('type.infer.exc'('type.infer_t.infer_t',X43),'const.infer.Success_1'(s('type.infer_t.infer_t',X44))),s('type.infer.infer_st'(X34),X42))) = s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X43),'type.infer.infer_st'(X34)),'const.infer.fresh_uvar_1'(s('type.infer.infer_st'(X34),happ(s(fun(X35,'type.infer.infer_st'(X34)),happ(s(fun(X36,fun(X35,'type.infer.infer_st'(X34))),X37),s(X36,happ(s(fun(X38,X36),X39),s(X38,X40))))),s(X35,X41))))) | s('type.infer_t.infer_t',X44) != s('type.infer_t.infer_t','const.infer_t.Infer_Tuvar_1'(s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'(X34),happ(s(fun(X35,'type.infer.infer_st'(X34)),happ(s(fun(X36,fun(X35,'type.infer.infer_st'(X34))),X37),s(X36,happ(s(fun(X38,X36),X39),s(X38,X40))))),s(X35,X41)))))))) )),
  inference(superposition,[],[f191,f221])).
fof(f32252,plain,(
  ( ! [X30,X28,X26,X24,X33,X23,X31,X29,X27,X25,X32] : (s('type.infer.infer_st'(X23),X31) != s('type.infer.infer_st'(X23),'const.infer.infer_st_next_uvar_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'(X23),happ(s(fun(X26,'type.infer.infer_st'(X23)),happ(s(fun(X25,fun(X26,'type.infer.infer_st'(X23))),X27),s(X25,happ(s(fun(X24,X25),X28),s(X24,X30))))),s(X26,X29))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.infer.infer_st'(X23),happ(s(fun(X26,'type.infer.infer_st'(X23)),happ(s(fun(X25,fun(X26,'type.infer.infer_st'(X23))),X27),s(X25,happ(s(fun(X24,X25),X28),s(X24,X30))))),s(X26,X29))))) | s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X32),'type.infer.infer_st'(X23)),'const.pair.,_2'(s('type.infer.exc'('type.infer_t.infer_t',X32),'const.infer.Success_1'(s('type.infer_t.infer_t',X33))),s('type.infer.infer_st'(X23),X31))) = s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X32),'type.infer.infer_st'(X23)),'const.infer.fresh_uvar_1'(s('type.infer.infer_st'(X23),happ(s(fun(X24,'type.infer.infer_st'(X23)),'_dst_x0x1x0_3'(s(fun(X25,fun(X26,'type.infer.infer_st'(X23))),X27),s(fun(X24,X25),X28),s(X26,X29))),s(X24,X30))))) | s('type.infer_t.infer_t',X33) != s('type.infer_t.infer_t','const.infer_t.Infer_Tuvar_1'(s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'(X23),happ(s(fun(X24,'type.infer.infer_st'(X23)),'_dst_x0x1x0_3'(s(fun(X25,fun(X26,'type.infer.infer_st'(X23))),X27),s(fun(X24,X25),X28),s(X26,X29))),s(X24,X30)))))))) )),
  inference(superposition,[],[f191,f221])).
fof(f32251,plain,(
  ( ! [X14,X21,X19,X17,X15,X22,X20,X18,X16] : (s('type.infer.infer_st'(X14),X20) != s('type.infer.infer_st'(X14),'const.infer.infer_st_next_uvar_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'(X14),happ(s(fun(X16,'type.infer.infer_st'(X14)),X17),s(X16,happ(s(fun(X15,X16),X18),s(X15,X19))))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.infer.infer_st'(X14),happ(s(fun(X16,'type.infer.infer_st'(X14)),X17),s(X16,happ(s(fun(X15,X16),X18),s(X15,X19))))))) | s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X21),'type.infer.infer_st'(X14)),'const.pair.,_2'(s('type.infer.exc'('type.infer_t.infer_t',X21),'const.infer.Success_1'(s('type.infer_t.infer_t',X22))),s('type.infer.infer_st'(X14),X20))) = s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X21),'type.infer.infer_st'(X14)),'const.infer.fresh_uvar_1'(s('type.infer.infer_st'(X14),happ(s(fun(X15,'type.infer.infer_st'(X14)),'_dst_x0x1_2'(s(fun(X16,'type.infer.infer_st'(X14)),X17),s(fun(X15,X16),X18))),s(X15,X19))))) | s('type.infer_t.infer_t',X22) != s('type.infer_t.infer_t','const.infer_t.Infer_Tuvar_1'(s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'(X14),happ(s(fun(X15,'type.infer.infer_st'(X14)),'_dst_x0x1_2'(s(fun(X16,'type.infer.infer_st'(X14)),X17),s(fun(X15,X16),X18))),s(X15,X19)))))))) )),
  inference(superposition,[],[f191,f206])).
fof(f32250,plain,(
  ( ! [X6,X12,X10,X8,X7,X5,X13,X11,X9] : (s('type.infer.infer_st'(X5),X11) != s('type.infer.infer_st'(X5),'const.infer.infer_st_next_uvar_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'(X5),happ(s(fun(X8,'type.infer.infer_st'(X5)),'_dst_x0x1_2'(s(fun(X6,'type.infer.infer_st'(X5)),X7),s(fun(X8,X6),X9))),s(X8,X10))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.infer.infer_st'(X5),happ(s(fun(X8,'type.infer.infer_st'(X5)),'_dst_x0x1_2'(s(fun(X6,'type.infer.infer_st'(X5)),X7),s(fun(X8,X6),X9))),s(X8,X10))))) | s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X12),'type.infer.infer_st'(X5)),'const.pair.,_2'(s('type.infer.exc'('type.infer_t.infer_t',X12),'const.infer.Success_1'(s('type.infer_t.infer_t',X13))),s('type.infer.infer_st'(X5),X11))) = s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X12),'type.infer.infer_st'(X5)),'const.infer.fresh_uvar_1'(s('type.infer.infer_st'(X5),happ(s(fun(X6,'type.infer.infer_st'(X5)),X7),s(X6,happ(s(fun(X8,X6),X9),s(X8,X10))))))) | s('type.infer_t.infer_t',X13) != s('type.infer_t.infer_t','const.infer_t.Infer_Tuvar_1'(s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'(X5),happ(s(fun(X6,'type.infer.infer_st'(X5)),X7),s(X6,happ(s(fun(X8,X6),X9),s(X8,X10)))))))))) )),
  inference(superposition,[],[f191,f206])).
fof(f32246,plain,(
  ( ! [X39,X37,X35,X43,X41,X38,X36,X34,X44,X42,X40] : (s('type.infer.infer_st'(X34),happ(s(fun(X38,'type.infer.infer_st'(X34)),'_dst_x0x1x0_3'(s(fun(X36,fun(X35,'type.infer.infer_st'(X34))),X37),s(fun(X38,X36),X39),s(X35,X41))),s(X38,X40))) != s('type.infer.infer_st'(X34),'const.infer.infer_st_next_uvar_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'(X34),X42))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.infer.infer_st'(X34),X42))) | s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X43),'type.infer.infer_st'(X34)),'const.infer.fresh_uvar_1'(s('type.infer.infer_st'(X34),X42))) = s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X43),'type.infer.infer_st'(X34)),'const.pair.,_2'(s('type.infer.exc'('type.infer_t.infer_t',X43),'const.infer.Success_1'(s('type.infer_t.infer_t',X44))),s('type.infer.infer_st'(X34),happ(s(fun(X35,'type.infer.infer_st'(X34)),happ(s(fun(X36,fun(X35,'type.infer.infer_st'(X34))),X37),s(X36,happ(s(fun(X38,X36),X39),s(X38,X40))))),s(X35,X41))))) | s('type.infer_t.infer_t',X44) != s('type.infer_t.infer_t','const.infer_t.Infer_Tuvar_1'(s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'(X34),X42)))))) )),
  inference(superposition,[],[f191,f221])).
fof(f32245,plain,(
  ( ! [X30,X28,X26,X24,X33,X23,X31,X29,X27,X25,X32] : (s('type.infer.infer_st'(X23),'const.infer.infer_st_next_uvar_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'(X23),X31))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.infer.infer_st'(X23),X31))) != s('type.infer.infer_st'(X23),happ(s(fun(X26,'type.infer.infer_st'(X23)),happ(s(fun(X25,fun(X26,'type.infer.infer_st'(X23))),X27),s(X25,happ(s(fun(X24,X25),X28),s(X24,X30))))),s(X26,X29))) | s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X32),'type.infer.infer_st'(X23)),'const.infer.fresh_uvar_1'(s('type.infer.infer_st'(X23),X31))) = s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X32),'type.infer.infer_st'(X23)),'const.pair.,_2'(s('type.infer.exc'('type.infer_t.infer_t',X32),'const.infer.Success_1'(s('type.infer_t.infer_t',X33))),s('type.infer.infer_st'(X23),happ(s(fun(X24,'type.infer.infer_st'(X23)),'_dst_x0x1x0_3'(s(fun(X25,fun(X26,'type.infer.infer_st'(X23))),X27),s(fun(X24,X25),X28),s(X26,X29))),s(X24,X30))))) | s('type.infer_t.infer_t',X33) != s('type.infer_t.infer_t','const.infer_t.Infer_Tuvar_1'(s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'(X23),X31)))))) )),
  inference(superposition,[],[f191,f221])).
fof(f32244,plain,(
  ( ! [X14,X21,X19,X17,X15,X22,X20,X18,X16] : (s('type.infer.infer_st'(X14),happ(s(fun(X16,'type.infer.infer_st'(X14)),X17),s(X16,happ(s(fun(X15,X16),X18),s(X15,X19))))) != s('type.infer.infer_st'(X14),'const.infer.infer_st_next_uvar_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'(X14),X20))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.infer.infer_st'(X14),X20))) | s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X21),'type.infer.infer_st'(X14)),'const.infer.fresh_uvar_1'(s('type.infer.infer_st'(X14),X20))) = s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X21),'type.infer.infer_st'(X14)),'const.pair.,_2'(s('type.infer.exc'('type.infer_t.infer_t',X21),'const.infer.Success_1'(s('type.infer_t.infer_t',X22))),s('type.infer.infer_st'(X14),happ(s(fun(X15,'type.infer.infer_st'(X14)),'_dst_x0x1_2'(s(fun(X16,'type.infer.infer_st'(X14)),X17),s(fun(X15,X16),X18))),s(X15,X19))))) | s('type.infer_t.infer_t',X22) != s('type.infer_t.infer_t','const.infer_t.Infer_Tuvar_1'(s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'(X14),X20)))))) )),
  inference(superposition,[],[f191,f206])).
fof(f32243,plain,(
  ( ! [X6,X12,X10,X8,X7,X5,X13,X11,X9] : (s('type.infer.infer_st'(X5),happ(s(fun(X8,'type.infer.infer_st'(X5)),'_dst_x0x1_2'(s(fun(X6,'type.infer.infer_st'(X5)),X7),s(fun(X8,X6),X9))),s(X8,X10))) != s('type.infer.infer_st'(X5),'const.infer.infer_st_next_uvar_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'(X5),X11))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.infer.infer_st'(X5),X11))) | s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X12),'type.infer.infer_st'(X5)),'const.infer.fresh_uvar_1'(s('type.infer.infer_st'(X5),X11))) = s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X12),'type.infer.infer_st'(X5)),'const.pair.,_2'(s('type.infer.exc'('type.infer_t.infer_t',X12),'const.infer.Success_1'(s('type.infer_t.infer_t',X13))),s('type.infer.infer_st'(X5),happ(s(fun(X6,'type.infer.infer_st'(X5)),X7),s(X6,happ(s(fun(X8,X6),X9),s(X8,X10))))))) | s('type.infer_t.infer_t',X13) != s('type.infer_t.infer_t','const.infer_t.Infer_Tuvar_1'(s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'(X5),X11)))))) )),
  inference(superposition,[],[f191,f206])).
fof(f30914,plain,(
  ( ! [X61,X59,X66,X64,X62,X60,X58,X65,X63] : (s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X62),'type.infer.infer_st'(X63)),'const.infer.n_fresh_uvar_2'(s('type.num.num',X64),s('type.infer.infer_st'(X63),X65))) != s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X62),'type.infer.infer_st'(X63)),'const.pair.,_2'(s('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X62),'const.infer.Success_1'(s('type.list.list'('type.infer_t.infer_t'),'const.option.option_CASE_3'(s('type.option.option'(X58),X59),s('type.list.list'('type.infer_t.infer_t'),X60),s(fun(X58,'type.list.list'('type.infer_t.infer_t')),X61))))),s('type.infer.infer_st'(X63),X66))) | s('type.list.list'('type.infer_t.infer_t'),'const.list.MAP_2'(s(fun('type.num.num','type.infer_t.infer_t'),'_dst_x0x1_2'(s(fun('type.num.num','type.infer_t.infer_t'),'const.infer_t.Infer_Tuvar_0'),s(fun('type.num.num','type.num.num'),'const.arithmetic.+_1'(s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'(X63),X65))))))),s('type.list.list'('type.num.num'),'const.rich_list.COUNT_LIST_1'(s('type.num.num',X64))))) = s('type.list.list'('type.infer_t.infer_t'),happ(s(fun(fun(X58,'type.list.list'('type.infer_t.infer_t')),'type.list.list'('type.infer_t.infer_t')),happ(s(fun('type.list.list'('type.infer_t.infer_t'),fun(fun(X58,'type.list.list'('type.infer_t.infer_t')),'type.list.list'('type.infer_t.infer_t'))),happ(s(fun('type.option.option'(X58),fun('type.list.list'('type.infer_t.infer_t'),fun(fun(X58,'type.list.list'('type.infer_t.infer_t')),'type.list.list'('type.infer_t.infer_t')))),'const.option.option_CASE_0'),s('type.option.option'(X58),X59))),s('type.list.list'('type.infer_t.infer_t'),X60))),s(fun(X58,'type.list.list'('type.infer_t.infer_t')),X61)))) )),
  inference(superposition,[],[f192,f184])).
fof(f30913,plain,(
  ( ! [X57,X47,X54,X52,X50,X48,X56,X46,X55,X53,X51,X49] : (s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X53),'type.infer.infer_st'(X54)),'const.infer.n_fresh_uvar_2'(s('type.num.num',X55),s('type.infer.infer_st'(X54),X56))) != s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X53),'type.infer.infer_st'(X54)),'const.pair.,_2'(s('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X53),'const.infer.Success_1'(s('type.list.list'('type.infer_t.infer_t'),happ(s(fun(X49,'type.list.list'('type.infer_t.infer_t')),'_dst_x0x1x0_3'(s(fun(X47,fun(X46,'type.list.list'('type.infer_t.infer_t'))),X48),s(fun(X49,X47),X50),s(X46,X52))),s(X49,X51))))),s('type.infer.infer_st'(X54),X57))) | s('type.list.list'('type.infer_t.infer_t'),happ(s(fun(X46,'type.list.list'('type.infer_t.infer_t')),happ(s(fun(X47,fun(X46,'type.list.list'('type.infer_t.infer_t'))),X48),s(X47,happ(s(fun(X49,X47),X50),s(X49,X51))))),s(X46,X52))) = s('type.list.list'('type.infer_t.infer_t'),'const.list.MAP_2'(s(fun('type.num.num','type.infer_t.infer_t'),'_dst_x0x1_2'(s(fun('type.num.num','type.infer_t.infer_t'),'const.infer_t.Infer_Tuvar_0'),s(fun('type.num.num','type.num.num'),'const.arithmetic.+_1'(s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'(X54),X56))))))),s('type.list.list'('type.num.num'),'const.rich_list.COUNT_LIST_1'(s('type.num.num',X55)))))) )),
  inference(superposition,[],[f192,f221])).
fof(f30912,plain,(
  ( ! [X39,X37,X35,X45,X43,X41,X38,X36,X34,X44,X42,X40] : (s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X41),'type.infer.infer_st'(X42)),'const.infer.n_fresh_uvar_2'(s('type.num.num',X43),s('type.infer.infer_st'(X42),X44))) != s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X41),'type.infer.infer_st'(X42)),'const.pair.,_2'(s('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X41),'const.infer.Success_1'(s('type.list.list'('type.infer_t.infer_t'),happ(s(fun(X36,'type.list.list'('type.infer_t.infer_t')),happ(s(fun(X35,fun(X36,'type.list.list'('type.infer_t.infer_t'))),X37),s(X35,happ(s(fun(X34,X35),X38),s(X34,X40))))),s(X36,X39))))),s('type.infer.infer_st'(X42),X45))) | s('type.list.list'('type.infer_t.infer_t'),happ(s(fun(X34,'type.list.list'('type.infer_t.infer_t')),'_dst_x0x1x0_3'(s(fun(X35,fun(X36,'type.list.list'('type.infer_t.infer_t'))),X37),s(fun(X34,X35),X38),s(X36,X39))),s(X34,X40))) = s('type.list.list'('type.infer_t.infer_t'),'const.list.MAP_2'(s(fun('type.num.num','type.infer_t.infer_t'),'_dst_x0x1_2'(s(fun('type.num.num','type.infer_t.infer_t'),'const.infer_t.Infer_Tuvar_0'),s(fun('type.num.num','type.num.num'),'const.arithmetic.+_1'(s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'(X42),X44))))))),s('type.list.list'('type.num.num'),'const.rich_list.COUNT_LIST_1'(s('type.num.num',X43)))))) )),
  inference(superposition,[],[f192,f221])).
fof(f30911,plain,(
  ( ! [X30,X28,X26,X24,X33,X31,X29,X27,X25,X32] : (s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X29),'type.infer.infer_st'(X30)),'const.infer.n_fresh_uvar_2'(s('type.num.num',X31),s('type.infer.infer_st'(X30),X32))) != s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X29),'type.infer.infer_st'(X30)),'const.pair.,_2'(s('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X29),'const.infer.Success_1'(s('type.list.list'('type.infer_t.infer_t'),happ(s(fun(X25,'type.list.list'('type.infer_t.infer_t')),X26),s(X25,happ(s(fun(X24,X25),X27),s(X24,X28))))))),s('type.infer.infer_st'(X30),X33))) | s('type.list.list'('type.infer_t.infer_t'),happ(s(fun(X24,'type.list.list'('type.infer_t.infer_t')),'_dst_x0x1_2'(s(fun(X25,'type.list.list'('type.infer_t.infer_t')),X26),s(fun(X24,X25),X27))),s(X24,X28))) = s('type.list.list'('type.infer_t.infer_t'),'const.list.MAP_2'(s(fun('type.num.num','type.infer_t.infer_t'),'_dst_x0x1_2'(s(fun('type.num.num','type.infer_t.infer_t'),'const.infer_t.Infer_Tuvar_0'),s(fun('type.num.num','type.num.num'),'const.arithmetic.+_1'(s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'(X30),X32))))))),s('type.list.list'('type.num.num'),'const.rich_list.COUNT_LIST_1'(s('type.num.num',X31)))))) )),
  inference(superposition,[],[f192,f206])).
fof(f30910,plain,(
  ( ! [X14,X23,X21,X19,X17,X15,X22,X20,X18,X16] : (s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X19),'type.infer.infer_st'(X20)),'const.infer.n_fresh_uvar_2'(s('type.num.num',X21),s('type.infer.infer_st'(X20),X22))) != s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X19),'type.infer.infer_st'(X20)),'const.pair.,_2'(s('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X19),'const.infer.Success_1'(s('type.list.list'('type.infer_t.infer_t'),happ(s(fun(X16,'type.list.list'('type.infer_t.infer_t')),'_dst_x0x1_2'(s(fun(X14,'type.list.list'('type.infer_t.infer_t')),X15),s(fun(X16,X14),X17))),s(X16,X18))))),s('type.infer.infer_st'(X20),X23))) | s('type.list.list'('type.infer_t.infer_t'),happ(s(fun(X14,'type.list.list'('type.infer_t.infer_t')),X15),s(X14,happ(s(fun(X16,X14),X17),s(X16,X18))))) = s('type.list.list'('type.infer_t.infer_t'),'const.list.MAP_2'(s(fun('type.num.num','type.infer_t.infer_t'),'_dst_x0x1_2'(s(fun('type.num.num','type.infer_t.infer_t'),'const.infer_t.Infer_Tuvar_0'),s(fun('type.num.num','type.num.num'),'const.arithmetic.+_1'(s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'(X20),X22))))))),s('type.list.list'('type.num.num'),'const.rich_list.COUNT_LIST_1'(s('type.num.num',X21)))))) )),
  inference(superposition,[],[f192,f206])).
fof(f30908,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X3),'type.infer.infer_st'(X4)),'const.infer.n_fresh_uvar_2'(s('type.num.num',X5),s('type.infer.infer_st'(X4),X6))) != s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X3),'type.infer.infer_st'(X4)),'const.pair.,_2'(s('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X3),'const.infer.Success_1'(s('type.list.list'('type.infer_t.infer_t'),'const.list.MAP_2'(s(fun(X0,'type.infer_t.infer_t'),X1),s('type.list.list'(X0),X2))))),s('type.infer.infer_st'(X4),X7))) | s('type.list.list'('type.infer_t.infer_t'),happ(s(fun('type.list.list'(X0),'type.list.list'('type.infer_t.infer_t')),happ(s(fun(fun(X0,'type.infer_t.infer_t'),fun('type.list.list'(X0),'type.list.list'('type.infer_t.infer_t'))),'const.list.MAP_0'),s(fun(X0,'type.infer_t.infer_t'),X1))),s('type.list.list'(X0),X2))) = s('type.list.list'('type.infer_t.infer_t'),'const.list.MAP_2'(s(fun('type.num.num','type.infer_t.infer_t'),'_dst_x0x1_2'(s(fun('type.num.num','type.infer_t.infer_t'),'const.infer_t.Infer_Tuvar_0'),s(fun('type.num.num','type.num.num'),'const.arithmetic.+_1'(s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'(X4),X6))))))),s('type.list.list'('type.num.num'),'const.rich_list.COUNT_LIST_1'(s('type.num.num',X5)))))) )),
  inference(superposition,[],[f192,f180])).
fof(f30906,plain,(
  ( ! [X39,X47,X45,X43,X41,X48,X38,X46,X44,X42,X40,X49] : (s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X46),'type.infer.infer_st'(X38)),'const.pair.,_2'(s('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X46),'const.infer.Success_1'(s('type.list.list'('type.infer_t.infer_t'),X48))),s('type.infer.infer_st'(X38),X49))) != s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X46),'type.infer.infer_st'(X38)),'const.infer.n_fresh_uvar_2'(s('type.num.num',X47),s('type.infer.infer_st'(X38),happ(s(fun(X42,'type.infer.infer_st'(X38)),'_dst_x0x1x0_3'(s(fun(X40,fun(X39,'type.infer.infer_st'(X38))),X41),s(fun(X42,X40),X43),s(X39,X45))),s(X42,X44))))) | s('type.list.list'('type.infer_t.infer_t'),X48) = s('type.list.list'('type.infer_t.infer_t'),'const.list.MAP_2'(s(fun('type.num.num','type.infer_t.infer_t'),'_dst_x0x1_2'(s(fun('type.num.num','type.infer_t.infer_t'),'const.infer_t.Infer_Tuvar_0'),s(fun('type.num.num','type.num.num'),'const.arithmetic.+_1'(s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'(X38),happ(s(fun(X39,'type.infer.infer_st'(X38)),happ(s(fun(X40,fun(X39,'type.infer.infer_st'(X38))),X41),s(X40,happ(s(fun(X42,X40),X43),s(X42,X44))))),s(X39,X45))))))))),s('type.list.list'('type.num.num'),'const.rich_list.COUNT_LIST_1'(s('type.num.num',X47)))))) )),
  inference(superposition,[],[f192,f221])).
fof(f30905,plain,(
  ( ! [X30,X28,X26,X37,X35,X33,X31,X29,X27,X36,X34,X32] : (s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X34),'type.infer.infer_st'(X26)),'const.pair.,_2'(s('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X34),'const.infer.Success_1'(s('type.list.list'('type.infer_t.infer_t'),X36))),s('type.infer.infer_st'(X26),X37))) != s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X34),'type.infer.infer_st'(X26)),'const.infer.n_fresh_uvar_2'(s('type.num.num',X35),s('type.infer.infer_st'(X26),happ(s(fun(X29,'type.infer.infer_st'(X26)),happ(s(fun(X28,fun(X29,'type.infer.infer_st'(X26))),X30),s(X28,happ(s(fun(X27,X28),X31),s(X27,X33))))),s(X29,X32))))) | s('type.list.list'('type.infer_t.infer_t'),X36) = s('type.list.list'('type.infer_t.infer_t'),'const.list.MAP_2'(s(fun('type.num.num','type.infer_t.infer_t'),'_dst_x0x1_2'(s(fun('type.num.num','type.infer_t.infer_t'),'const.infer_t.Infer_Tuvar_0'),s(fun('type.num.num','type.num.num'),'const.arithmetic.+_1'(s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'(X26),happ(s(fun(X27,'type.infer.infer_st'(X26)),'_dst_x0x1x0_3'(s(fun(X28,fun(X29,'type.infer.infer_st'(X26))),X30),s(fun(X27,X28),X31),s(X29,X32))),s(X27,X33))))))))),s('type.list.list'('type.num.num'),'const.rich_list.COUNT_LIST_1'(s('type.num.num',X35)))))) )),
  inference(superposition,[],[f192,f221])).
fof(f30904,plain,(
  ( ! [X24,X23,X21,X19,X17,X25,X22,X20,X18,X16] : (s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X22),'type.infer.infer_st'(X16)),'const.pair.,_2'(s('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X22),'const.infer.Success_1'(s('type.list.list'('type.infer_t.infer_t'),X24))),s('type.infer.infer_st'(X16),X25))) != s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X22),'type.infer.infer_st'(X16)),'const.infer.n_fresh_uvar_2'(s('type.num.num',X23),s('type.infer.infer_st'(X16),happ(s(fun(X18,'type.infer.infer_st'(X16)),X19),s(X18,happ(s(fun(X17,X18),X20),s(X17,X21))))))) | s('type.list.list'('type.infer_t.infer_t'),X24) = s('type.list.list'('type.infer_t.infer_t'),'const.list.MAP_2'(s(fun('type.num.num','type.infer_t.infer_t'),'_dst_x0x1_2'(s(fun('type.num.num','type.infer_t.infer_t'),'const.infer_t.Infer_Tuvar_0'),s(fun('type.num.num','type.num.num'),'const.arithmetic.+_1'(s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'(X16),happ(s(fun(X17,'type.infer.infer_st'(X16)),'_dst_x0x1_2'(s(fun(X18,'type.infer.infer_st'(X16)),X19),s(fun(X17,X18),X20))),s(X17,X21))))))))),s('type.list.list'('type.num.num'),'const.rich_list.COUNT_LIST_1'(s('type.num.num',X23)))))) )),
  inference(superposition,[],[f192,f206])).
fof(f30903,plain,(
  ( ! [X6,X14,X12,X10,X8,X7,X15,X13,X11,X9] : (s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X12),'type.infer.infer_st'(X6)),'const.pair.,_2'(s('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X12),'const.infer.Success_1'(s('type.list.list'('type.infer_t.infer_t'),X14))),s('type.infer.infer_st'(X6),X15))) != s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X12),'type.infer.infer_st'(X6)),'const.infer.n_fresh_uvar_2'(s('type.num.num',X13),s('type.infer.infer_st'(X6),happ(s(fun(X9,'type.infer.infer_st'(X6)),'_dst_x0x1_2'(s(fun(X7,'type.infer.infer_st'(X6)),X8),s(fun(X9,X7),X10))),s(X9,X11))))) | s('type.list.list'('type.infer_t.infer_t'),X14) = s('type.list.list'('type.infer_t.infer_t'),'const.list.MAP_2'(s(fun('type.num.num','type.infer_t.infer_t'),'_dst_x0x1_2'(s(fun('type.num.num','type.infer_t.infer_t'),'const.infer_t.Infer_Tuvar_0'),s(fun('type.num.num','type.num.num'),'const.arithmetic.+_1'(s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'(X6),happ(s(fun(X7,'type.infer.infer_st'(X6)),X8),s(X7,happ(s(fun(X9,X7),X10),s(X9,X11))))))))))),s('type.list.list'('type.num.num'),'const.rich_list.COUNT_LIST_1'(s('type.num.num',X13)))))) )),
  inference(superposition,[],[f192,f206])).
fof(f30900,plain,(
  ( ! [X61,X59,X57,X66,X64,X62,X60,X58,X56,X65,X55,X63] : (s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X62),'type.infer.infer_st'(X63)),'const.pair.,_2'(s('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X62),'const.infer.Success_1'(s('type.list.list'('type.infer_t.infer_t'),X65))),s('type.infer.infer_st'(X63),X66))) != s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X62),'type.infer.infer_st'(X63)),'const.infer.n_fresh_uvar_2'(s('type.num.num',happ(s(fun(X58,'type.num.num'),'_dst_x0x1x0_3'(s(fun(X56,fun(X55,'type.num.num')),X57),s(fun(X58,X56),X59),s(X55,X61))),s(X58,X60))),s('type.infer.infer_st'(X63),X64))) | s('type.list.list'('type.infer_t.infer_t'),X65) = s('type.list.list'('type.infer_t.infer_t'),'const.list.MAP_2'(s(fun('type.num.num','type.infer_t.infer_t'),'_dst_x0x1_2'(s(fun('type.num.num','type.infer_t.infer_t'),'const.infer_t.Infer_Tuvar_0'),s(fun('type.num.num','type.num.num'),'const.arithmetic.+_1'(s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'(X63),X64))))))),s('type.list.list'('type.num.num'),'const.rich_list.COUNT_LIST_1'(s('type.num.num',happ(s(fun(X55,'type.num.num'),happ(s(fun(X56,fun(X55,'type.num.num')),X57),s(X56,happ(s(fun(X58,X56),X59),s(X58,X60))))),s(X55,X61)))))))) )),
  inference(superposition,[],[f192,f221])).
fof(f30899,plain,(
  ( ! [X47,X45,X43,X54,X52,X50,X48,X46,X44,X53,X51,X49] : (s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X50),'type.infer.infer_st'(X51)),'const.pair.,_2'(s('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X50),'const.infer.Success_1'(s('type.list.list'('type.infer_t.infer_t'),X53))),s('type.infer.infer_st'(X51),X54))) != s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X50),'type.infer.infer_st'(X51)),'const.infer.n_fresh_uvar_2'(s('type.num.num',happ(s(fun(X45,'type.num.num'),happ(s(fun(X44,fun(X45,'type.num.num')),X46),s(X44,happ(s(fun(X43,X44),X47),s(X43,X49))))),s(X45,X48))),s('type.infer.infer_st'(X51),X52))) | s('type.list.list'('type.infer_t.infer_t'),X53) = s('type.list.list'('type.infer_t.infer_t'),'const.list.MAP_2'(s(fun('type.num.num','type.infer_t.infer_t'),'_dst_x0x1_2'(s(fun('type.num.num','type.infer_t.infer_t'),'const.infer_t.Infer_Tuvar_0'),s(fun('type.num.num','type.num.num'),'const.arithmetic.+_1'(s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'(X51),X52))))))),s('type.list.list'('type.num.num'),'const.rich_list.COUNT_LIST_1'(s('type.num.num',happ(s(fun(X43,'type.num.num'),'_dst_x0x1x0_3'(s(fun(X44,fun(X45,'type.num.num')),X46),s(fun(X43,X44),X47),s(X45,X48))),s(X43,X49)))))))) )),
  inference(superposition,[],[f192,f221])).
fof(f30898,plain,(
  ( ! [X39,X37,X35,X33,X41,X38,X36,X34,X42,X40] : (s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X38),'type.infer.infer_st'(X39)),'const.pair.,_2'(s('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X38),'const.infer.Success_1'(s('type.list.list'('type.infer_t.infer_t'),X41))),s('type.infer.infer_st'(X39),X42))) != s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X38),'type.infer.infer_st'(X39)),'const.infer.n_fresh_uvar_2'(s('type.num.num',happ(s(fun(X34,'type.num.num'),X35),s(X34,happ(s(fun(X33,X34),X36),s(X33,X37))))),s('type.infer.infer_st'(X39),X40))) | s('type.list.list'('type.infer_t.infer_t'),X41) = s('type.list.list'('type.infer_t.infer_t'),'const.list.MAP_2'(s(fun('type.num.num','type.infer_t.infer_t'),'_dst_x0x1_2'(s(fun('type.num.num','type.infer_t.infer_t'),'const.infer_t.Infer_Tuvar_0'),s(fun('type.num.num','type.num.num'),'const.arithmetic.+_1'(s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'(X39),X40))))))),s('type.list.list'('type.num.num'),'const.rich_list.COUNT_LIST_1'(s('type.num.num',happ(s(fun(X33,'type.num.num'),'_dst_x0x1_2'(s(fun(X34,'type.num.num'),X35),s(fun(X33,X34),X36))),s(X33,X37)))))))) )),
  inference(superposition,[],[f192,f206])).
fof(f30897,plain,(
  ( ! [X30,X28,X26,X24,X23,X31,X29,X27,X25,X32] : (s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X28),'type.infer.infer_st'(X29)),'const.pair.,_2'(s('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X28),'const.infer.Success_1'(s('type.list.list'('type.infer_t.infer_t'),X31))),s('type.infer.infer_st'(X29),X32))) != s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X28),'type.infer.infer_st'(X29)),'const.infer.n_fresh_uvar_2'(s('type.num.num',happ(s(fun(X25,'type.num.num'),'_dst_x0x1_2'(s(fun(X23,'type.num.num'),X24),s(fun(X25,X23),X26))),s(X25,X27))),s('type.infer.infer_st'(X29),X30))) | s('type.list.list'('type.infer_t.infer_t'),X31) = s('type.list.list'('type.infer_t.infer_t'),'const.list.MAP_2'(s(fun('type.num.num','type.infer_t.infer_t'),'_dst_x0x1_2'(s(fun('type.num.num','type.infer_t.infer_t'),'const.infer_t.Infer_Tuvar_0'),s(fun('type.num.num','type.num.num'),'const.arithmetic.+_1'(s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'(X29),X30))))))),s('type.list.list'('type.num.num'),'const.rich_list.COUNT_LIST_1'(s('type.num.num',happ(s(fun(X23,'type.num.num'),X24),s(X23,happ(s(fun(X25,X23),X26),s(X25,X27)))))))))) )),
  inference(superposition,[],[f192,f206])).
fof(f30799,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.infer_t.infer_t',X0) != s('type.infer_t.infer_t','const.unify.t_walkstar_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X1))),s('type.infer_t.infer_t',X2))) | s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X3),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.apply_subst_2'(s('type.infer_t.infer_t',X2),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X1))) = s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X3),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.infer_t.infer_t',X3),'const.infer.Success_1'(s('type.infer_t.infer_t',X0))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X1)))) )),
  inference(equality_resolution,[],[f174])).
fof(f30797,plain,(
  ( ! [X39,X37,X35,X43,X41,X38,X36,X34,X44,X42,X40] : (s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X41) != s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),happ(s(fun(X37,'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'_dst_x0x1x0_3'(s(fun(X35,fun(X34,'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),X36),s(fun(X37,X35),X38),s(X34,X40))),s(X37,X39))) | s('type.infer_t.infer_t',X42) != s('type.infer_t.infer_t','const.unify.t_walkstar_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X41))),s('type.infer_t.infer_t',X43))) | s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X44),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.apply_subst_2'(s('type.infer_t.infer_t',X43),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X41))) = s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X44),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.infer_t.infer_t',X44),'const.infer.Success_1'(s('type.infer_t.infer_t',X42))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),happ(s(fun(X34,'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),happ(s(fun(X35,fun(X34,'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),X36),s(X35,happ(s(fun(X37,X35),X38),s(X37,X39))))),s(X34,X40)))))) )),
  inference(superposition,[],[f174,f221])).
fof(f30796,plain,(
  ( ! [X30,X28,X26,X24,X33,X23,X31,X29,X27,X25,X32] : (s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X30) != s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),happ(s(fun(X25,'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),happ(s(fun(X24,fun(X25,'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),X26),s(X24,happ(s(fun(X23,X24),X27),s(X23,X29))))),s(X25,X28))) | s('type.infer_t.infer_t',X31) != s('type.infer_t.infer_t','const.unify.t_walkstar_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X30))),s('type.infer_t.infer_t',X32))) | s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X33),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.apply_subst_2'(s('type.infer_t.infer_t',X32),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X30))) = s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X33),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.infer_t.infer_t',X33),'const.infer.Success_1'(s('type.infer_t.infer_t',X31))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),happ(s(fun(X23,'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'_dst_x0x1x0_3'(s(fun(X24,fun(X25,'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),X26),s(fun(X23,X24),X27),s(X25,X28))),s(X23,X29)))))) )),
  inference(superposition,[],[f174,f221])).
fof(f30795,plain,(
  ( ! [X14,X21,X19,X17,X15,X22,X20,X18,X16] : (s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X19) != s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),happ(s(fun(X15,'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X16),s(X15,happ(s(fun(X14,X15),X17),s(X14,X18))))) | s('type.infer_t.infer_t',X20) != s('type.infer_t.infer_t','const.unify.t_walkstar_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X19))),s('type.infer_t.infer_t',X21))) | s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X22),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.apply_subst_2'(s('type.infer_t.infer_t',X21),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X19))) = s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X22),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.infer_t.infer_t',X22),'const.infer.Success_1'(s('type.infer_t.infer_t',X20))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),happ(s(fun(X14,'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'_dst_x0x1_2'(s(fun(X15,'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X16),s(fun(X14,X15),X17))),s(X14,X18)))))) )),
  inference(superposition,[],[f174,f206])).
fof(f30794,plain,(
  ( ! [X6,X12,X10,X8,X7,X5,X13,X11,X9] : (s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X10) != s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),happ(s(fun(X7,'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'_dst_x0x1_2'(s(fun(X5,'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X6),s(fun(X7,X5),X8))),s(X7,X9))) | s('type.infer_t.infer_t',X11) != s('type.infer_t.infer_t','const.unify.t_walkstar_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X10))),s('type.infer_t.infer_t',X12))) | s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X13),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.apply_subst_2'(s('type.infer_t.infer_t',X12),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X10))) = s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X13),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.infer_t.infer_t',X13),'const.infer.Success_1'(s('type.infer_t.infer_t',X11))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),happ(s(fun(X5,'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X6),s(X5,happ(s(fun(X7,X5),X8),s(X7,X9)))))))) )),
  inference(superposition,[],[f174,f206])).
fof(f30791,plain,(
  ( ! [X39,X37,X35,X43,X41,X38,X36,X34,X44,X42,X40] : (s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X41) != s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),happ(s(fun(X37,'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'_dst_x0x1x0_3'(s(fun(X35,fun(X34,'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),X36),s(fun(X37,X35),X38),s(X34,X40))),s(X37,X39))) | s('type.infer_t.infer_t',X42) != s('type.infer_t.infer_t','const.unify.t_walkstar_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),happ(s(fun(X34,'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),happ(s(fun(X35,fun(X34,'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),X36),s(X35,happ(s(fun(X37,X35),X38),s(X37,X39))))),s(X34,X40))))),s('type.infer_t.infer_t',X43))) | s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X44),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.infer_t.infer_t',X44),'const.infer.Success_1'(s('type.infer_t.infer_t',X42))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X41))) = s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X44),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.apply_subst_2'(s('type.infer_t.infer_t',X43),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),happ(s(fun(X34,'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),happ(s(fun(X35,fun(X34,'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),X36),s(X35,happ(s(fun(X37,X35),X38),s(X37,X39))))),s(X34,X40)))))) )),
  inference(superposition,[],[f174,f221])).
fof(f30790,plain,(
  ( ! [X30,X28,X26,X24,X33,X23,X31,X29,X27,X25,X32] : (s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X30) != s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),happ(s(fun(X25,'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),happ(s(fun(X24,fun(X25,'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),X26),s(X24,happ(s(fun(X23,X24),X27),s(X23,X29))))),s(X25,X28))) | s('type.infer_t.infer_t',X31) != s('type.infer_t.infer_t','const.unify.t_walkstar_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),happ(s(fun(X23,'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'_dst_x0x1x0_3'(s(fun(X24,fun(X25,'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),X26),s(fun(X23,X24),X27),s(X25,X28))),s(X23,X29))))),s('type.infer_t.infer_t',X32))) | s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X33),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.infer_t.infer_t',X33),'const.infer.Success_1'(s('type.infer_t.infer_t',X31))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X30))) = s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X33),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.apply_subst_2'(s('type.infer_t.infer_t',X32),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),happ(s(fun(X23,'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'_dst_x0x1x0_3'(s(fun(X24,fun(X25,'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),X26),s(fun(X23,X24),X27),s(X25,X28))),s(X23,X29)))))) )),
  inference(superposition,[],[f174,f221])).
fof(f30789,plain,(
  ( ! [X14,X21,X19,X17,X15,X22,X20,X18,X16] : (s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X19) != s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),happ(s(fun(X15,'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X16),s(X15,happ(s(fun(X14,X15),X17),s(X14,X18))))) | s('type.infer_t.infer_t',X20) != s('type.infer_t.infer_t','const.unify.t_walkstar_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),happ(s(fun(X14,'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'_dst_x0x1_2'(s(fun(X15,'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X16),s(fun(X14,X15),X17))),s(X14,X18))))),s('type.infer_t.infer_t',X21))) | s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X22),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.infer_t.infer_t',X22),'const.infer.Success_1'(s('type.infer_t.infer_t',X20))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X19))) = s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X22),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.apply_subst_2'(s('type.infer_t.infer_t',X21),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),happ(s(fun(X14,'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'_dst_x0x1_2'(s(fun(X15,'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X16),s(fun(X14,X15),X17))),s(X14,X18)))))) )),
  inference(superposition,[],[f174,f206])).
fof(f30788,plain,(
  ( ! [X6,X12,X10,X8,X7,X5,X13,X11,X9] : (s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X10) != s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),happ(s(fun(X7,'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'_dst_x0x1_2'(s(fun(X5,'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X6),s(fun(X7,X5),X8))),s(X7,X9))) | s('type.infer_t.infer_t',X11) != s('type.infer_t.infer_t','const.unify.t_walkstar_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),happ(s(fun(X5,'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X6),s(X5,happ(s(fun(X7,X5),X8),s(X7,X9))))))),s('type.infer_t.infer_t',X12))) | s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X13),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.infer_t.infer_t',X13),'const.infer.Success_1'(s('type.infer_t.infer_t',X11))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X10))) = s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X13),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.apply_subst_2'(s('type.infer_t.infer_t',X12),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),happ(s(fun(X5,'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X6),s(X5,happ(s(fun(X7,X5),X8),s(X7,X9)))))))) )),
  inference(superposition,[],[f174,f206])).
fof(f30809,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.apply_subst_2'(s('type.infer_t.infer_t',X1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),happ(s(fun(X2,'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X3),s(X2,happ(s(fun(X4,X2),X5),s(X4,X6))))))) = s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.infer_t.infer_t',X0),'const.infer.Success_1'(s('type.infer_t.infer_t','const.unify.t_walkstar_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),happ(s(fun(X2,'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X3),s(X2,happ(s(fun(X4,X2),X5),s(X4,X6))))))),s('type.infer_t.infer_t',X1))))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),happ(s(fun(X4,'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'_dst_x0x1_2'(s(fun(X2,'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X3),s(fun(X4,X2),X5))),s(X4,X6)))))) )),
  inference(forward_demodulation,[],[f30780,f176])).
fof(f30780,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.apply_subst_2'(s('type.infer_t.infer_t',X1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),happ(s(fun(X2,'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X3),s(X2,happ(s(fun(X4,X2),X5),s(X4,X6))))))) = s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.infer_t.infer_t',X0),'const.infer.Success_1'(s('type.infer_t.infer_t',happ(s(fun('type.infer_t.infer_t','type.infer_t.infer_t'),happ(s(fun('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),fun('type.infer_t.infer_t','type.infer_t.infer_t')),'const.unify.t_walkstar_0'),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),happ(s(fun(X2,'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X3),s(X2,happ(s(fun(X4,X2),X5),s(X4,X6))))))))),s('type.infer_t.infer_t',X1))))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),happ(s(fun(X4,'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'_dst_x0x1_2'(s(fun(X2,'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X3),s(fun(X4,X2),X5))),s(X4,X6)))))) )),
  inference(unit_resulting_resolution,[],[f206,f176,f174])).
fof(f30808,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.apply_subst_2'(s('type.infer_t.infer_t',X1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),happ(s(fun(X2,'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'_dst_x0x1x0_3'(s(fun(X3,fun(X4,'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),X5),s(fun(X2,X3),X6),s(X4,X7))),s(X2,X8))))) = s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.infer_t.infer_t',X0),'const.infer.Success_1'(s('type.infer_t.infer_t','const.unify.t_walkstar_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),happ(s(fun(X2,'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'_dst_x0x1x0_3'(s(fun(X3,fun(X4,'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),X5),s(fun(X2,X3),X6),s(X4,X7))),s(X2,X8))))),s('type.infer_t.infer_t',X1))))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),happ(s(fun(X4,'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),happ(s(fun(X3,fun(X4,'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),X5),s(X3,happ(s(fun(X2,X3),X6),s(X2,X8))))),s(X4,X7)))))) )),
  inference(forward_demodulation,[],[f30781,f176])).
fof(f30781,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.apply_subst_2'(s('type.infer_t.infer_t',X1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),happ(s(fun(X2,'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'_dst_x0x1x0_3'(s(fun(X3,fun(X4,'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),X5),s(fun(X2,X3),X6),s(X4,X7))),s(X2,X8))))) = s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.infer_t.infer_t',X0),'const.infer.Success_1'(s('type.infer_t.infer_t',happ(s(fun('type.infer_t.infer_t','type.infer_t.infer_t'),happ(s(fun('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),fun('type.infer_t.infer_t','type.infer_t.infer_t')),'const.unify.t_walkstar_0'),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),happ(s(fun(X2,'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'_dst_x0x1x0_3'(s(fun(X3,fun(X4,'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),X5),s(fun(X2,X3),X6),s(X4,X7))),s(X2,X8))))))),s('type.infer_t.infer_t',X1))))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),happ(s(fun(X4,'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),happ(s(fun(X3,fun(X4,'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),X5),s(X3,happ(s(fun(X2,X3),X6),s(X2,X8))))),s(X4,X7)))))) )),
  inference(unit_resulting_resolution,[],[f221,f176,f174])).
fof(f30805,plain,(
  ( ! [X2,X0,X1] : (s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.apply_subst_2'(s('type.infer_t.infer_t',X1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X2))))) = s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.infer_t.infer_t',X0),'const.infer.Success_1'(s('type.infer_t.infer_t','const.unify.t_walkstar_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X2))))),s('type.infer_t.infer_t',X1))))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X2)))))) )),
  inference(forward_demodulation,[],[f30804,f168])).
fof(f30804,plain,(
  ( ! [X2,X0,X1] : (s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.apply_subst_2'(s('type.infer_t.infer_t',X1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),happ(s(fun('type.infer.infer_st'('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.infer_st_subst_0'),s('type.infer.infer_st'('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X2))))) = s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.infer_t.infer_t',X0),'const.infer.Success_1'(s('type.infer_t.infer_t','const.unify.t_walkstar_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),happ(s(fun('type.infer.infer_st'('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.infer_st_subst_0'),s('type.infer.infer_st'('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X2))))),s('type.infer_t.infer_t',X1))))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X2)))))) )),
  inference(forward_demodulation,[],[f30783,f176])).
fof(f30783,plain,(
  ( ! [X2,X0,X1] : (s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.apply_subst_2'(s('type.infer_t.infer_t',X1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),happ(s(fun('type.infer.infer_st'('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.infer_st_subst_0'),s('type.infer.infer_st'('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X2))))) = s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.infer_t.infer_t',X0),'const.infer.Success_1'(s('type.infer_t.infer_t',happ(s(fun('type.infer_t.infer_t','type.infer_t.infer_t'),happ(s(fun('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),fun('type.infer_t.infer_t','type.infer_t.infer_t')),'const.unify.t_walkstar_0'),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),happ(s(fun('type.infer.infer_st'('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.infer_st_subst_0'),s('type.infer.infer_st'('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X2))))))),s('type.infer_t.infer_t',X1))))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X2)))))) )),
  inference(unit_resulting_resolution,[],[f168,f176,f174])).
fof(f30803,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.apply_subst_2'(s('type.infer_t.infer_t',X1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),happ(s(fun(X2,'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'_dst_x0x1_2'(s(fun(X3,'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X4),s(fun(X2,X3),X5))),s(X2,X6))))) = s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.infer_t.infer_t',X0),'const.infer.Success_1'(s('type.infer_t.infer_t','const.unify.t_walkstar_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),happ(s(fun(X2,'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'_dst_x0x1_2'(s(fun(X3,'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X4),s(fun(X2,X3),X5))),s(X2,X6))))),s('type.infer_t.infer_t',X1))))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),happ(s(fun(X3,'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X4),s(X3,happ(s(fun(X2,X3),X5),s(X2,X6)))))))) )),
  inference(forward_demodulation,[],[f30784,f176])).
fof(f30784,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.apply_subst_2'(s('type.infer_t.infer_t',X1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),happ(s(fun(X2,'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'_dst_x0x1_2'(s(fun(X3,'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X4),s(fun(X2,X3),X5))),s(X2,X6))))) = s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.infer_t.infer_t',X0),'const.infer.Success_1'(s('type.infer_t.infer_t',happ(s(fun('type.infer_t.infer_t','type.infer_t.infer_t'),happ(s(fun('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),fun('type.infer_t.infer_t','type.infer_t.infer_t')),'const.unify.t_walkstar_0'),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),happ(s(fun(X2,'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'_dst_x0x1_2'(s(fun(X3,'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X4),s(fun(X2,X3),X5))),s(X2,X6))))))),s('type.infer_t.infer_t',X1))))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),happ(s(fun(X3,'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X4),s(X3,happ(s(fun(X2,X3),X5),s(X2,X6)))))))) )),
  inference(unit_resulting_resolution,[],[f206,f176,f174])).
fof(f30802,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.apply_subst_2'(s('type.infer_t.infer_t',X1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),happ(s(fun(X2,'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),happ(s(fun(X3,fun(X2,'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),X4),s(X3,happ(s(fun(X5,X3),X6),s(X5,X7))))),s(X2,X8))))) = s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.infer_t.infer_t',X0),'const.infer.Success_1'(s('type.infer_t.infer_t','const.unify.t_walkstar_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),happ(s(fun(X2,'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),happ(s(fun(X3,fun(X2,'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),X4),s(X3,happ(s(fun(X5,X3),X6),s(X5,X7))))),s(X2,X8))))),s('type.infer_t.infer_t',X1))))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),happ(s(fun(X5,'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'_dst_x0x1x0_3'(s(fun(X3,fun(X2,'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),X4),s(fun(X5,X3),X6),s(X2,X8))),s(X5,X7)))))) )),
  inference(forward_demodulation,[],[f30785,f176])).
fof(f30785,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.apply_subst_2'(s('type.infer_t.infer_t',X1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),happ(s(fun(X2,'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),happ(s(fun(X3,fun(X2,'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),X4),s(X3,happ(s(fun(X5,X3),X6),s(X5,X7))))),s(X2,X8))))) = s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.infer_t.infer_t',X0),'const.infer.Success_1'(s('type.infer_t.infer_t',happ(s(fun('type.infer_t.infer_t','type.infer_t.infer_t'),happ(s(fun('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),fun('type.infer_t.infer_t','type.infer_t.infer_t')),'const.unify.t_walkstar_0'),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),happ(s(fun(X2,'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),happ(s(fun(X3,fun(X2,'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),X4),s(X3,happ(s(fun(X5,X3),X6),s(X5,X7))))),s(X2,X8))))))),s('type.infer_t.infer_t',X1))))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),happ(s(fun(X5,'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'_dst_x0x1x0_3'(s(fun(X3,fun(X2,'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),X4),s(fun(X5,X3),X6),s(X2,X8))),s(X5,X7)))))) )),
  inference(unit_resulting_resolution,[],[f221,f176,f174])).
fof(f30801,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.apply_subst_2'(s('type.infer_t.infer_t',X1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.option.option_CASE_3'(s('type.option.option'(X2),X3),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X4),s(fun(X2,'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X5))))) = s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.infer_t.infer_t',X0),'const.infer.Success_1'(s('type.infer_t.infer_t','const.unify.t_walkstar_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.option.option_CASE_3'(s('type.option.option'(X2),X3),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X4),s(fun(X2,'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X5))))),s('type.infer_t.infer_t',X1))))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.option.option_CASE_3'(s('type.option.option'(X2),X3),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X4),s(fun(X2,'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X5)))))) )),
  inference(forward_demodulation,[],[f30800,f184])).
fof(f30800,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.apply_subst_2'(s('type.infer_t.infer_t',X1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),happ(s(fun(fun(X2,'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),happ(s(fun('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),fun(fun(X2,'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),happ(s(fun('type.option.option'(X2),fun('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),fun(fun(X2,'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))))),'const.option.option_CASE_0'),s('type.option.option'(X2),X3))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X4))),s(fun(X2,'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X5))))) = s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.infer_t.infer_t',X0),'const.infer.Success_1'(s('type.infer_t.infer_t','const.unify.t_walkstar_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),happ(s(fun(fun(X2,'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),happ(s(fun('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),fun(fun(X2,'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),happ(s(fun('type.option.option'(X2),fun('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),fun(fun(X2,'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))))),'const.option.option_CASE_0'),s('type.option.option'(X2),X3))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X4))),s(fun(X2,'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X5))))),s('type.infer_t.infer_t',X1))))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.option.option_CASE_3'(s('type.option.option'(X2),X3),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X4),s(fun(X2,'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X5)))))) )),
  inference(forward_demodulation,[],[f30786,f176])).
fof(f30786,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.apply_subst_2'(s('type.infer_t.infer_t',X1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),happ(s(fun(fun(X2,'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),happ(s(fun('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),fun(fun(X2,'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),happ(s(fun('type.option.option'(X2),fun('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),fun(fun(X2,'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))))),'const.option.option_CASE_0'),s('type.option.option'(X2),X3))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X4))),s(fun(X2,'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X5))))) = s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.infer_t.infer_t',X0),'const.infer.Success_1'(s('type.infer_t.infer_t',happ(s(fun('type.infer_t.infer_t','type.infer_t.infer_t'),happ(s(fun('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),fun('type.infer_t.infer_t','type.infer_t.infer_t')),'const.unify.t_walkstar_0'),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),happ(s(fun(fun(X2,'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),happ(s(fun('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),fun(fun(X2,'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),happ(s(fun('type.option.option'(X2),fun('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),fun(fun(X2,'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))))),'const.option.option_CASE_0'),s('type.option.option'(X2),X3))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X4))),s(fun(X2,'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X5))))))),s('type.infer_t.infer_t',X1))))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.option.option_CASE_3'(s('type.option.option'(X2),X3),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X4),s(fun(X2,'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X5)))))) )),
  inference(unit_resulting_resolution,[],[f184,f176,f174])).
fof(f30174,plain,(
  ( ! [X37,X36] : (s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.failwith_2'(s('type.list.list'('type.string.char'),X36),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X37))) != s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraints_3'(s('type.list.list'('type.infer_t.infer_t'),sK0),s('type.list.list'('type.infer_t.infer_t'),sK1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2)))) ) | $spl0),
  inference(superposition,[],[f253,f29772])).
fof(f30172,plain,(
  ( ! [X33,X32] : (s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.st_ex_return_2'(s('type.one.one',X32),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X33))) != s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraints_3'(s('type.list.list'('type.infer_t.infer_t'),sK0),s('type.list.list'('type.infer_t.infer_t'),sK1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))) | s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK3) = s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X33)) ) | $spl0),
  inference(superposition,[],[f211,f29772])).
fof(f30171,plain,(
  ( ! [X6,X8,X7] : (s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.guard_3'(s(bool,X6),s('type.list.list'('type.string.char'),X7),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X8))) != s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraints_3'(s('type.list.list'('type.infer_t.infer_t'),sK0),s('type.list.list'('type.infer_t.infer_t'),sK1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))) | s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK3) = s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X8)) ) | $spl0),
  inference(superposition,[],[f197,f29772])).
fof(f30170,plain,(
  ( ! [X4,X5,X3] : (s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraints_3'(s('type.list.list'('type.infer_t.infer_t'),sK0),s('type.list.list'('type.infer_t.infer_t'),sK1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))) != s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraints_3'(s('type.list.list'('type.infer_t.infer_t'),X3),s('type.list.list'('type.infer_t.infer_t'),X4),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X5))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.infer_t.infer_t'),X3))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.infer_t.infer_t'),X4)))) ) | $spl0),
  inference(superposition,[],[f229,f29772])).
fof(f30165,plain,(
  ( ! [X0] : (s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraints_3'(s('type.list.list'('type.infer_t.infer_t'),sK0),s('type.list.list'('type.infer_t.infer_t'),sK1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))) = s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'const.infer.Success_1'(s('type.one.one',X0))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK3)))) ) | $spl0),
  inference(superposition,[],[f29772,f165])).
fof(f30463,plain,(
  ( ! [X2,X0,X1] : (s('type.pair.prod'('type.infer.exc'('type.one.one',X0),'type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.infer.guard_3'(s(bool,'T_0'),s(X0,X1),s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraints_3'(s('type.list.list'('type.infer_t.infer_t'),sK0),s('type.list.list'('type.infer_t.infer_t'),sK1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))))) = s('type.pair.prod'('type.infer.exc'('type.one.one',X0),'type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.pair.,_2'(s('type.infer.exc'('type.one.one',X0),'const.infer.Success_1'(s('type.one.one',X2))),s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraints_3'(s('type.list.list'('type.infer_t.infer_t'),sK0),s('type.list.list'('type.infer_t.infer_t'),sK1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2)))))) ) | $spl0),
  inference(forward_demodulation,[],[f30028,f29772])).
fof(f30028,plain,(
  ( ! [X2,X0,X1] : (s('type.pair.prod'('type.infer.exc'('type.one.one',X0),'type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.infer.guard_3'(s(bool,'T_0'),s(X0,X1),s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'const.infer.Success_1'(s('type.one.one','const.one.one_0'))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK3))))) = s('type.pair.prod'('type.infer.exc'('type.one.one',X0),'type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.pair.,_2'(s('type.infer.exc'('type.one.one',X0),'const.infer.Success_1'(s('type.one.one',X2))),s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraints_3'(s('type.list.list'('type.infer_t.infer_t'),sK0),s('type.list.list'('type.infer_t.infer_t'),sK1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2)))))) ) | $spl0),
  inference(unit_resulting_resolution,[],[f163,f29772,f252])).
fof(f30460,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'(X0,X1),'type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.infer.st_ex_return_2'(s(X0,happ(s(fun(X2,X0),X3),s(X2,happ(s(fun(X4,X2),X5),s(X4,X6))))),s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraints_3'(s('type.list.list'('type.infer_t.infer_t'),sK0),s('type.list.list'('type.infer_t.infer_t'),sK1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))))) = s('type.pair.prod'('type.infer.exc'(X0,X1),'type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.pair.,_2'(s('type.infer.exc'(X0,X1),'const.infer.Success_1'(s(X0,happ(s(fun(X4,X0),'_dst_x0x1_2'(s(fun(X2,X0),X3),s(fun(X4,X2),X5))),s(X4,X6))))),s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraints_3'(s('type.list.list'('type.infer_t.infer_t'),sK0),s('type.list.list'('type.infer_t.infer_t'),sK1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2)))))) ) | $spl0),
  inference(forward_demodulation,[],[f30030,f29772])).
fof(f30030,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'(X0,X1),'type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.infer.st_ex_return_2'(s(X0,happ(s(fun(X2,X0),X3),s(X2,happ(s(fun(X4,X2),X5),s(X4,X6))))),s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'const.infer.Success_1'(s('type.one.one','const.one.one_0'))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK3))))) = s('type.pair.prod'('type.infer.exc'(X0,X1),'type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.pair.,_2'(s('type.infer.exc'(X0,X1),'const.infer.Success_1'(s(X0,happ(s(fun(X4,X0),'_dst_x0x1_2'(s(fun(X2,X0),X3),s(fun(X4,X2),X5))),s(X4,X6))))),s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraints_3'(s('type.list.list'('type.infer_t.infer_t'),sK0),s('type.list.list'('type.infer_t.infer_t'),sK1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2)))))) ) | $spl0),
  inference(unit_resulting_resolution,[],[f206,f29772,f212])).
fof(f30459,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'(X0,X1),'type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.infer.st_ex_return_2'(s(X0,happ(s(fun(X2,X0),'_dst_x0x1x0_3'(s(fun(X3,fun(X4,X0)),X5),s(fun(X2,X3),X6),s(X4,X7))),s(X2,X8))),s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraints_3'(s('type.list.list'('type.infer_t.infer_t'),sK0),s('type.list.list'('type.infer_t.infer_t'),sK1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))))) = s('type.pair.prod'('type.infer.exc'(X0,X1),'type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.pair.,_2'(s('type.infer.exc'(X0,X1),'const.infer.Success_1'(s(X0,happ(s(fun(X4,X0),happ(s(fun(X3,fun(X4,X0)),X5),s(X3,happ(s(fun(X2,X3),X6),s(X2,X8))))),s(X4,X7))))),s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraints_3'(s('type.list.list'('type.infer_t.infer_t'),sK0),s('type.list.list'('type.infer_t.infer_t'),sK1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2)))))) ) | $spl0),
  inference(forward_demodulation,[],[f30031,f29772])).
fof(f30031,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'(X0,X1),'type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.infer.st_ex_return_2'(s(X0,happ(s(fun(X2,X0),'_dst_x0x1x0_3'(s(fun(X3,fun(X4,X0)),X5),s(fun(X2,X3),X6),s(X4,X7))),s(X2,X8))),s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'const.infer.Success_1'(s('type.one.one','const.one.one_0'))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK3))))) = s('type.pair.prod'('type.infer.exc'(X0,X1),'type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.pair.,_2'(s('type.infer.exc'(X0,X1),'const.infer.Success_1'(s(X0,happ(s(fun(X4,X0),happ(s(fun(X3,fun(X4,X0)),X5),s(X3,happ(s(fun(X2,X3),X6),s(X2,X8))))),s(X4,X7))))),s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraints_3'(s('type.list.list'('type.infer_t.infer_t'),sK0),s('type.list.list'('type.infer_t.infer_t'),sK1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2)))))) ) | $spl0),
  inference(unit_resulting_resolution,[],[f221,f29772,f212])).
fof(f30406,plain,(
  ( ! [X2,X0,X1] : (s('type.pair.prod'('type.infer.exc'(X0,X1),'type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.infer.st_ex_return_2'(s(X0,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(X0),X2))),s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraints_3'(s('type.list.list'('type.infer_t.infer_t'),sK0),s('type.list.list'('type.infer_t.infer_t'),sK1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))))) = s('type.pair.prod'('type.infer.exc'(X0,X1),'type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.pair.,_2'(s('type.infer.exc'(X0,X1),'const.infer.Success_1'(s(X0,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(X0),X2))))),s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraints_3'(s('type.list.list'('type.infer_t.infer_t'),sK0),s('type.list.list'('type.infer_t.infer_t'),sK1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2)))))) ) | $spl0),
  inference(forward_demodulation,[],[f30405,f168])).
fof(f30405,plain,(
  ( ! [X2,X0,X1] : (s('type.pair.prod'('type.infer.exc'(X0,X1),'type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.pair.,_2'(s('type.infer.exc'(X0,X1),'const.infer.Success_1'(s(X0,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(X0),X2))))),s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraints_3'(s('type.list.list'('type.infer_t.infer_t'),sK0),s('type.list.list'('type.infer_t.infer_t'),sK1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))))) = s('type.pair.prod'('type.infer.exc'(X0,X1),'type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.infer.st_ex_return_2'(s(X0,happ(s(fun('type.infer.infer_st'(X0),X0),'const.infer.infer_st_subst_0'),s('type.infer.infer_st'(X0),X2))),s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraints_3'(s('type.list.list'('type.infer_t.infer_t'),sK0),s('type.list.list'('type.infer_t.infer_t'),sK1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2)))))) ) | $spl0),
  inference(forward_demodulation,[],[f30063,f29772])).
fof(f30063,plain,(
  ( ! [X2,X0,X1] : (s('type.pair.prod'('type.infer.exc'(X0,X1),'type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.pair.,_2'(s('type.infer.exc'(X0,X1),'const.infer.Success_1'(s(X0,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(X0),X2))))),s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraints_3'(s('type.list.list'('type.infer_t.infer_t'),sK0),s('type.list.list'('type.infer_t.infer_t'),sK1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))))) = s('type.pair.prod'('type.infer.exc'(X0,X1),'type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.infer.st_ex_return_2'(s(X0,happ(s(fun('type.infer.infer_st'(X0),X0),'const.infer.infer_st_subst_0'),s('type.infer.infer_st'(X0),X2))),s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'const.infer.Success_1'(s('type.one.one','const.one.one_0'))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK3)))))) ) | $spl0),
  inference(unit_resulting_resolution,[],[f168,f29772,f212])).
fof(f30404,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'(X0,X1),'type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.infer.st_ex_return_2'(s(X0,happ(s(fun(X2,X0),'_dst_x0x1_2'(s(fun(X3,X0),X4),s(fun(X2,X3),X5))),s(X2,X6))),s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraints_3'(s('type.list.list'('type.infer_t.infer_t'),sK0),s('type.list.list'('type.infer_t.infer_t'),sK1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))))) = s('type.pair.prod'('type.infer.exc'(X0,X1),'type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.pair.,_2'(s('type.infer.exc'(X0,X1),'const.infer.Success_1'(s(X0,happ(s(fun(X3,X0),X4),s(X3,happ(s(fun(X2,X3),X5),s(X2,X6))))))),s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraints_3'(s('type.list.list'('type.infer_t.infer_t'),sK0),s('type.list.list'('type.infer_t.infer_t'),sK1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2)))))) ) | $spl0),
  inference(forward_demodulation,[],[f30064,f29772])).
fof(f30064,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'(X0,X1),'type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.infer.st_ex_return_2'(s(X0,happ(s(fun(X2,X0),'_dst_x0x1_2'(s(fun(X3,X0),X4),s(fun(X2,X3),X5))),s(X2,X6))),s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'const.infer.Success_1'(s('type.one.one','const.one.one_0'))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK3))))) = s('type.pair.prod'('type.infer.exc'(X0,X1),'type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.pair.,_2'(s('type.infer.exc'(X0,X1),'const.infer.Success_1'(s(X0,happ(s(fun(X3,X0),X4),s(X3,happ(s(fun(X2,X3),X5),s(X2,X6))))))),s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraints_3'(s('type.list.list'('type.infer_t.infer_t'),sK0),s('type.list.list'('type.infer_t.infer_t'),sK1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2)))))) ) | $spl0),
  inference(unit_resulting_resolution,[],[f206,f29772,f212])).
fof(f30403,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'(X0,X1),'type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.infer.st_ex_return_2'(s(X0,happ(s(fun(X2,X0),happ(s(fun(X3,fun(X2,X0)),X4),s(X3,happ(s(fun(X5,X3),X6),s(X5,X7))))),s(X2,X8))),s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraints_3'(s('type.list.list'('type.infer_t.infer_t'),sK0),s('type.list.list'('type.infer_t.infer_t'),sK1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))))) = s('type.pair.prod'('type.infer.exc'(X0,X1),'type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.pair.,_2'(s('type.infer.exc'(X0,X1),'const.infer.Success_1'(s(X0,happ(s(fun(X5,X0),'_dst_x0x1x0_3'(s(fun(X3,fun(X2,X0)),X4),s(fun(X5,X3),X6),s(X2,X8))),s(X5,X7))))),s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraints_3'(s('type.list.list'('type.infer_t.infer_t'),sK0),s('type.list.list'('type.infer_t.infer_t'),sK1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2)))))) ) | $spl0),
  inference(forward_demodulation,[],[f30065,f29772])).
fof(f30065,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'(X0,X1),'type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.infer.st_ex_return_2'(s(X0,happ(s(fun(X2,X0),happ(s(fun(X3,fun(X2,X0)),X4),s(X3,happ(s(fun(X5,X3),X6),s(X5,X7))))),s(X2,X8))),s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'const.infer.Success_1'(s('type.one.one','const.one.one_0'))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK3))))) = s('type.pair.prod'('type.infer.exc'(X0,X1),'type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.pair.,_2'(s('type.infer.exc'(X0,X1),'const.infer.Success_1'(s(X0,happ(s(fun(X5,X0),'_dst_x0x1x0_3'(s(fun(X3,fun(X2,X0)),X4),s(fun(X5,X3),X6),s(X2,X8))),s(X5,X7))))),s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraints_3'(s('type.list.list'('type.infer_t.infer_t'),sK0),s('type.list.list'('type.infer_t.infer_t'),sK1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2)))))) ) | $spl0),
  inference(unit_resulting_resolution,[],[f221,f29772,f212])).
fof(f30402,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'(X0,X1),'type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.infer.st_ex_return_2'(s(X0,'const.option.option_CASE_3'(s('type.option.option'(X2),X3),s(X0,X4),s(fun(X2,X0),X5))),s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraints_3'(s('type.list.list'('type.infer_t.infer_t'),sK0),s('type.list.list'('type.infer_t.infer_t'),sK1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))))) = s('type.pair.prod'('type.infer.exc'(X0,X1),'type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.pair.,_2'(s('type.infer.exc'(X0,X1),'const.infer.Success_1'(s(X0,'const.option.option_CASE_3'(s('type.option.option'(X2),X3),s(X0,X4),s(fun(X2,X0),X5))))),s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraints_3'(s('type.list.list'('type.infer_t.infer_t'),sK0),s('type.list.list'('type.infer_t.infer_t'),sK1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2)))))) ) | $spl0),
  inference(forward_demodulation,[],[f30401,f184])).
fof(f30401,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'(X0,X1),'type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.pair.,_2'(s('type.infer.exc'(X0,X1),'const.infer.Success_1'(s(X0,'const.option.option_CASE_3'(s('type.option.option'(X2),X3),s(X0,X4),s(fun(X2,X0),X5))))),s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraints_3'(s('type.list.list'('type.infer_t.infer_t'),sK0),s('type.list.list'('type.infer_t.infer_t'),sK1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))))) = s('type.pair.prod'('type.infer.exc'(X0,X1),'type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.infer.st_ex_return_2'(s(X0,happ(s(fun(fun(X2,X0),X0),happ(s(fun(X0,fun(fun(X2,X0),X0)),happ(s(fun('type.option.option'(X2),fun(X0,fun(fun(X2,X0),X0))),'const.option.option_CASE_0'),s('type.option.option'(X2),X3))),s(X0,X4))),s(fun(X2,X0),X5))),s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraints_3'(s('type.list.list'('type.infer_t.infer_t'),sK0),s('type.list.list'('type.infer_t.infer_t'),sK1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2)))))) ) | $spl0),
  inference(forward_demodulation,[],[f30066,f29772])).
fof(f30066,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'(X0,X1),'type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.pair.,_2'(s('type.infer.exc'(X0,X1),'const.infer.Success_1'(s(X0,'const.option.option_CASE_3'(s('type.option.option'(X2),X3),s(X0,X4),s(fun(X2,X0),X5))))),s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraints_3'(s('type.list.list'('type.infer_t.infer_t'),sK0),s('type.list.list'('type.infer_t.infer_t'),sK1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))))) = s('type.pair.prod'('type.infer.exc'(X0,X1),'type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.infer.st_ex_return_2'(s(X0,happ(s(fun(fun(X2,X0),X0),happ(s(fun(X0,fun(fun(X2,X0),X0)),happ(s(fun('type.option.option'(X2),fun(X0,fun(fun(X2,X0),X0))),'const.option.option_CASE_0'),s('type.option.option'(X2),X3))),s(X0,X4))),s(fun(X2,X0),X5))),s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'const.infer.Success_1'(s('type.one.one','const.one.one_0'))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK3)))))) ) | $spl0),
  inference(unit_resulting_resolution,[],[f184,f29772,f212])).
fof(f30398,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.pair.prod'('type.infer.exc'(fun(X0,'type.one.one'),X1),'type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.infer.st_ex_return_2'(s(fun(X0,'type.one.one'),X2),s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraints_3'(s('type.list.list'('type.infer_t.infer_t'),sK0),s('type.list.list'('type.infer_t.infer_t'),sK1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))))) = s('type.pair.prod'('type.infer.exc'(fun(X0,'type.one.one'),X1),'type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.pair.,_2'(s('type.infer.exc'(fun(X0,'type.one.one'),X1),'const.infer.Success_1'(s(fun(X0,'type.one.one'),X3))),s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraints_3'(s('type.list.list'('type.infer_t.infer_t'),sK0),s('type.list.list'('type.infer_t.infer_t'),sK1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2)))))) ) | $spl0),
  inference(forward_demodulation,[],[f30068,f29772])).
fof(f30068,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.pair.prod'('type.infer.exc'(fun(X0,'type.one.one'),X1),'type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.infer.st_ex_return_2'(s(fun(X0,'type.one.one'),X2),s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'const.infer.Success_1'(s('type.one.one','const.one.one_0'))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK3))))) = s('type.pair.prod'('type.infer.exc'(fun(X0,'type.one.one'),X1),'type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.pair.,_2'(s('type.infer.exc'(fun(X0,'type.one.one'),X1),'const.infer.Success_1'(s(fun(X0,'type.one.one'),X3))),s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraints_3'(s('type.list.list'('type.infer_t.infer_t'),sK0),s('type.list.list'('type.infer_t.infer_t'),sK1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2)))))) ) | $spl0),
  inference(unit_resulting_resolution,[],[f605,f29772,f212])).
fof(f30396,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,'type.one.one')),X2),'type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.infer.st_ex_return_2'(s(fun(X0,fun(X1,'type.one.one')),X3),s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraints_3'(s('type.list.list'('type.infer_t.infer_t'),sK0),s('type.list.list'('type.infer_t.infer_t'),sK1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))))) = s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,'type.one.one')),X2),'type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.pair.,_2'(s('type.infer.exc'(fun(X0,fun(X1,'type.one.one')),X2),'const.infer.Success_1'(s(fun(X0,fun(X1,'type.one.one')),X4))),s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraints_3'(s('type.list.list'('type.infer_t.infer_t'),sK0),s('type.list.list'('type.infer_t.infer_t'),sK1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2)))))) ) | $spl0),
  inference(forward_demodulation,[],[f30070,f29772])).
fof(f30070,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,'type.one.one')),X2),'type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.infer.st_ex_return_2'(s(fun(X0,fun(X1,'type.one.one')),X3),s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'const.infer.Success_1'(s('type.one.one','const.one.one_0'))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK3))))) = s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,'type.one.one')),X2),'type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.pair.,_2'(s('type.infer.exc'(fun(X0,fun(X1,'type.one.one')),X2),'const.infer.Success_1'(s(fun(X0,fun(X1,'type.one.one')),X4))),s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraints_3'(s('type.list.list'('type.infer_t.infer_t'),sK0),s('type.list.list'('type.infer_t.infer_t'),sK1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2)))))) ) | $spl0),
  inference(unit_resulting_resolution,[],[f724,f29772,f212])).
fof(f30395,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,fun(X2,'type.one.one'))),X3),'type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.infer.st_ex_return_2'(s(fun(X0,fun(X1,fun(X2,'type.one.one'))),X4),s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraints_3'(s('type.list.list'('type.infer_t.infer_t'),sK0),s('type.list.list'('type.infer_t.infer_t'),sK1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))))) = s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,fun(X2,'type.one.one'))),X3),'type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.pair.,_2'(s('type.infer.exc'(fun(X0,fun(X1,fun(X2,'type.one.one'))),X3),'const.infer.Success_1'(s(fun(X0,fun(X1,fun(X2,'type.one.one'))),X5))),s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraints_3'(s('type.list.list'('type.infer_t.infer_t'),sK0),s('type.list.list'('type.infer_t.infer_t'),sK1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2)))))) ) | $spl0),
  inference(forward_demodulation,[],[f30071,f29772])).
fof(f30071,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,fun(X2,'type.one.one'))),X3),'type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.infer.st_ex_return_2'(s(fun(X0,fun(X1,fun(X2,'type.one.one'))),X4),s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'const.infer.Success_1'(s('type.one.one','const.one.one_0'))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK3))))) = s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,fun(X2,'type.one.one'))),X3),'type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.pair.,_2'(s('type.infer.exc'(fun(X0,fun(X1,fun(X2,'type.one.one'))),X3),'const.infer.Success_1'(s(fun(X0,fun(X1,fun(X2,'type.one.one'))),X5))),s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraints_3'(s('type.list.list'('type.infer_t.infer_t'),sK0),s('type.list.list'('type.infer_t.infer_t'),sK1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2)))))) ) | $spl0),
  inference(unit_resulting_resolution,[],[f752,f29772,f212])).
fof(f30394,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,fun(X2,fun(X3,'type.one.one')))),X4),'type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.infer.st_ex_return_2'(s(fun(X0,fun(X1,fun(X2,fun(X3,'type.one.one')))),X5),s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraints_3'(s('type.list.list'('type.infer_t.infer_t'),sK0),s('type.list.list'('type.infer_t.infer_t'),sK1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))))) = s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,fun(X2,fun(X3,'type.one.one')))),X4),'type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.pair.,_2'(s('type.infer.exc'(fun(X0,fun(X1,fun(X2,fun(X3,'type.one.one')))),X4),'const.infer.Success_1'(s(fun(X0,fun(X1,fun(X2,fun(X3,'type.one.one')))),X6))),s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraints_3'(s('type.list.list'('type.infer_t.infer_t'),sK0),s('type.list.list'('type.infer_t.infer_t'),sK1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2)))))) ) | $spl0),
  inference(forward_demodulation,[],[f30072,f29772])).
fof(f30072,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,fun(X2,fun(X3,'type.one.one')))),X4),'type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.infer.st_ex_return_2'(s(fun(X0,fun(X1,fun(X2,fun(X3,'type.one.one')))),X5),s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'const.infer.Success_1'(s('type.one.one','const.one.one_0'))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK3))))) = s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,fun(X2,fun(X3,'type.one.one')))),X4),'type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.pair.,_2'(s('type.infer.exc'(fun(X0,fun(X1,fun(X2,fun(X3,'type.one.one')))),X4),'const.infer.Success_1'(s(fun(X0,fun(X1,fun(X2,fun(X3,'type.one.one')))),X6))),s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraints_3'(s('type.list.list'('type.infer_t.infer_t'),sK0),s('type.list.list'('type.infer_t.infer_t'),sK1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2)))))) ) | $spl0),
  inference(unit_resulting_resolution,[],[f787,f29772,f212])).
fof(f30393,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,fun(X2,fun(X3,fun(X4,'type.one.one'))))),X5),'type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.infer.st_ex_return_2'(s(fun(X0,fun(X1,fun(X2,fun(X3,fun(X4,'type.one.one'))))),X6),s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraints_3'(s('type.list.list'('type.infer_t.infer_t'),sK0),s('type.list.list'('type.infer_t.infer_t'),sK1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))))) = s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,fun(X2,fun(X3,fun(X4,'type.one.one'))))),X5),'type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.pair.,_2'(s('type.infer.exc'(fun(X0,fun(X1,fun(X2,fun(X3,fun(X4,'type.one.one'))))),X5),'const.infer.Success_1'(s(fun(X0,fun(X1,fun(X2,fun(X3,fun(X4,'type.one.one'))))),X7))),s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraints_3'(s('type.list.list'('type.infer_t.infer_t'),sK0),s('type.list.list'('type.infer_t.infer_t'),sK1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2)))))) ) | $spl0),
  inference(forward_demodulation,[],[f30073,f29772])).
fof(f30073,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,fun(X2,fun(X3,fun(X4,'type.one.one'))))),X5),'type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.infer.st_ex_return_2'(s(fun(X0,fun(X1,fun(X2,fun(X3,fun(X4,'type.one.one'))))),X6),s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'const.infer.Success_1'(s('type.one.one','const.one.one_0'))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK3))))) = s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,fun(X2,fun(X3,fun(X4,'type.one.one'))))),X5),'type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.pair.,_2'(s('type.infer.exc'(fun(X0,fun(X1,fun(X2,fun(X3,fun(X4,'type.one.one'))))),X5),'const.infer.Success_1'(s(fun(X0,fun(X1,fun(X2,fun(X3,fun(X4,'type.one.one'))))),X7))),s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraints_3'(s('type.list.list'('type.infer_t.infer_t'),sK0),s('type.list.list'('type.infer_t.infer_t'),sK1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2)))))) ) | $spl0),
  inference(unit_resulting_resolution,[],[f815,f29772,f212])).
fof(f30390,plain,(
  ( ! [X2,X0,X1] : (s('type.pair.prod'('type.infer.exc'(fun('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),X1),'type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.infer.st_ex_return_2'(s(fun('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.infer.apply_subst_list_1'(s('type.list.list'('type.infer_t.infer_t'),X2))),s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraints_3'(s('type.list.list'('type.infer_t.infer_t'),sK0),s('type.list.list'('type.infer_t.infer_t'),sK1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))))) = s('type.pair.prod'('type.infer.exc'(fun('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),X1),'type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.pair.,_2'(s('type.infer.exc'(fun('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),X1),'const.infer.Success_1'(s(fun('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.infer.apply_subst_list_1'(s('type.list.list'('type.infer_t.infer_t'),X2))))),s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraints_3'(s('type.list.list'('type.infer_t.infer_t'),sK0),s('type.list.list'('type.infer_t.infer_t'),sK1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2)))))) ) | $spl0),
  inference(forward_demodulation,[],[f30389,f169])).
fof(f30389,plain,(
  ( ! [X2,X0,X1] : (s('type.pair.prod'('type.infer.exc'(fun('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),X1),'type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.pair.,_2'(s('type.infer.exc'(fun('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),X1),'const.infer.Success_1'(s(fun('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.infer.apply_subst_list_1'(s('type.list.list'('type.infer_t.infer_t'),X2))))),s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraints_3'(s('type.list.list'('type.infer_t.infer_t'),sK0),s('type.list.list'('type.infer_t.infer_t'),sK1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))))) = s('type.pair.prod'('type.infer.exc'(fun('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),X1),'type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.infer.st_ex_return_2'(s(fun('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),happ(s(fun('type.list.list'('type.infer_t.infer_t'),fun('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))))),'const.infer.apply_subst_list_0'),s('type.list.list'('type.infer_t.infer_t'),X2))),s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraints_3'(s('type.list.list'('type.infer_t.infer_t'),sK0),s('type.list.list'('type.infer_t.infer_t'),sK1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2)))))) ) | $spl0),
  inference(forward_demodulation,[],[f30076,f29772])).
fof(f30076,plain,(
  ( ! [X2,X0,X1] : (s('type.pair.prod'('type.infer.exc'(fun('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),X1),'type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.pair.,_2'(s('type.infer.exc'(fun('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),X1),'const.infer.Success_1'(s(fun('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.infer.apply_subst_list_1'(s('type.list.list'('type.infer_t.infer_t'),X2))))),s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraints_3'(s('type.list.list'('type.infer_t.infer_t'),sK0),s('type.list.list'('type.infer_t.infer_t'),sK1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))))) = s('type.pair.prod'('type.infer.exc'(fun('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),X1),'type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.infer.st_ex_return_2'(s(fun('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),happ(s(fun('type.list.list'('type.infer_t.infer_t'),fun('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))))),'const.infer.apply_subst_list_0'),s('type.list.list'('type.infer_t.infer_t'),X2))),s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'const.infer.Success_1'(s('type.one.one','const.one.one_0'))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK3)))))) ) | $spl0),
  inference(unit_resulting_resolution,[],[f169,f29772,f212])).
fof(f30387,plain,(
  ( ! [X2,X0,X1] : (s('type.pair.prod'('type.infer.exc'('type.one.one',X0),'type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.infer.st_ex_return_2'(s('type.one.one',X1),s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraints_3'(s('type.list.list'('type.infer_t.infer_t'),sK0),s('type.list.list'('type.infer_t.infer_t'),sK1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))))) = s('type.pair.prod'('type.infer.exc'('type.one.one',X0),'type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.pair.,_2'(s('type.infer.exc'('type.one.one',X0),'const.infer.Success_1'(s('type.one.one',X2))),s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraints_3'(s('type.list.list'('type.infer_t.infer_t'),sK0),s('type.list.list'('type.infer_t.infer_t'),sK1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2)))))) ) | $spl0),
  inference(forward_demodulation,[],[f30078,f29772])).
fof(f30078,plain,(
  ( ! [X2,X0,X1] : (s('type.pair.prod'('type.infer.exc'('type.one.one',X0),'type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.infer.st_ex_return_2'(s('type.one.one',X1),s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'const.infer.Success_1'(s('type.one.one','const.one.one_0'))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK3))))) = s('type.pair.prod'('type.infer.exc'('type.one.one',X0),'type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.pair.,_2'(s('type.infer.exc'('type.one.one',X0),'const.infer.Success_1'(s('type.one.one',X2))),s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraints_3'(s('type.list.list'('type.infer_t.infer_t'),sK0),s('type.list.list'('type.infer_t.infer_t'),sK1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2)))))) ) | $spl0),
  inference(unit_resulting_resolution,[],[f258,f29772,f212])).
fof(f30386,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.list.list'(X0),X1),'type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.infer.st_ex_return_2'(s('type.list.list'(X0),'const.list.MAP_2'(s(fun(X2,X0),X3),s('type.list.list'(X2),X4))),s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraints_3'(s('type.list.list'('type.infer_t.infer_t'),sK0),s('type.list.list'('type.infer_t.infer_t'),sK1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))))) = s('type.pair.prod'('type.infer.exc'('type.list.list'(X0),X1),'type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.pair.,_2'(s('type.infer.exc'('type.list.list'(X0),X1),'const.infer.Success_1'(s('type.list.list'(X0),'const.list.MAP_2'(s(fun(X2,X0),X3),s('type.list.list'(X2),X4))))),s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraints_3'(s('type.list.list'('type.infer_t.infer_t'),sK0),s('type.list.list'('type.infer_t.infer_t'),sK1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2)))))) ) | $spl0),
  inference(forward_demodulation,[],[f30385,f180])).
fof(f30385,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.list.list'(X0),X1),'type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.pair.,_2'(s('type.infer.exc'('type.list.list'(X0),X1),'const.infer.Success_1'(s('type.list.list'(X0),'const.list.MAP_2'(s(fun(X2,X0),X3),s('type.list.list'(X2),X4))))),s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraints_3'(s('type.list.list'('type.infer_t.infer_t'),sK0),s('type.list.list'('type.infer_t.infer_t'),sK1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))))) = s('type.pair.prod'('type.infer.exc'('type.list.list'(X0),X1),'type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.infer.st_ex_return_2'(s('type.list.list'(X0),happ(s(fun('type.list.list'(X2),'type.list.list'(X0)),happ(s(fun(fun(X2,X0),fun('type.list.list'(X2),'type.list.list'(X0))),'const.list.MAP_0'),s(fun(X2,X0),X3))),s('type.list.list'(X2),X4))),s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraints_3'(s('type.list.list'('type.infer_t.infer_t'),sK0),s('type.list.list'('type.infer_t.infer_t'),sK1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2)))))) ) | $spl0),
  inference(forward_demodulation,[],[f30079,f29772])).
fof(f30079,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.list.list'(X0),X1),'type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.pair.,_2'(s('type.infer.exc'('type.list.list'(X0),X1),'const.infer.Success_1'(s('type.list.list'(X0),'const.list.MAP_2'(s(fun(X2,X0),X3),s('type.list.list'(X2),X4))))),s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraints_3'(s('type.list.list'('type.infer_t.infer_t'),sK0),s('type.list.list'('type.infer_t.infer_t'),sK1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))))) = s('type.pair.prod'('type.infer.exc'('type.list.list'(X0),X1),'type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.infer.st_ex_return_2'(s('type.list.list'(X0),happ(s(fun('type.list.list'(X2),'type.list.list'(X0)),happ(s(fun(fun(X2,X0),fun('type.list.list'(X2),'type.list.list'(X0))),'const.list.MAP_0'),s(fun(X2,X0),X3))),s('type.list.list'(X2),X4))),s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'const.infer.Success_1'(s('type.one.one','const.one.one_0'))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK3)))))) ) | $spl0),
  inference(unit_resulting_resolution,[],[f180,f29772,f212])).
fof(f30380,plain,(
  ( ! [X2,X0,X1] : (s('type.pair.prod'('type.infer.exc'('type.num.num',X0),'type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.infer.st_ex_return_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X2))),s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraints_3'(s('type.list.list'('type.infer_t.infer_t'),sK0),s('type.list.list'('type.infer_t.infer_t'),sK1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))))) = s('type.pair.prod'('type.infer.exc'('type.num.num',X0),'type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.pair.,_2'(s('type.infer.exc'('type.num.num',X0),'const.infer.Success_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X2))))),s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraints_3'(s('type.list.list'('type.infer_t.infer_t'),sK0),s('type.list.list'('type.infer_t.infer_t'),sK1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2)))))) ) | $spl0),
  inference(forward_demodulation,[],[f30379,f175])).
fof(f30379,plain,(
  ( ! [X2,X0,X1] : (s('type.pair.prod'('type.infer.exc'('type.num.num',X0),'type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.infer.st_ex_return_2'(s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.arithmetic.+_1'(s('type.num.num',X1))),s('type.num.num',X2))),s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraints_3'(s('type.list.list'('type.infer_t.infer_t'),sK0),s('type.list.list'('type.infer_t.infer_t'),sK1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))))) = s('type.pair.prod'('type.infer.exc'('type.num.num',X0),'type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.pair.,_2'(s('type.infer.exc'('type.num.num',X0),'const.infer.Success_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X2))))),s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraints_3'(s('type.list.list'('type.infer_t.infer_t'),sK0),s('type.list.list'('type.infer_t.infer_t'),sK1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2)))))) ) | $spl0),
  inference(forward_demodulation,[],[f30082,f29772])).
fof(f30082,plain,(
  ( ! [X2,X0,X1] : (s('type.pair.prod'('type.infer.exc'('type.num.num',X0),'type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.pair.,_2'(s('type.infer.exc'('type.num.num',X0),'const.infer.Success_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X2))))),s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraints_3'(s('type.list.list'('type.infer_t.infer_t'),sK0),s('type.list.list'('type.infer_t.infer_t'),sK1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))))) = s('type.pair.prod'('type.infer.exc'('type.num.num',X0),'type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.infer.st_ex_return_2'(s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.arithmetic.+_1'(s('type.num.num',X1))),s('type.num.num',X2))),s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'const.infer.Success_1'(s('type.one.one','const.one.one_0'))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK3)))))) ) | $spl0),
  inference(unit_resulting_resolution,[],[f175,f29772,f212])).
fof(f30378,plain,(
  ( ! [X0,X1] : (s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.infer.st_ex_return_2'(s('type.infer_t.infer_t','const.infer_t.Infer_Tuvar_1'(s('type.num.num',X1))),s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraints_3'(s('type.list.list'('type.infer_t.infer_t'),sK0),s('type.list.list'('type.infer_t.infer_t'),sK1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))))) = s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.pair.,_2'(s('type.infer.exc'('type.infer_t.infer_t',X0),'const.infer.Success_1'(s('type.infer_t.infer_t','const.infer_t.Infer_Tuvar_1'(s('type.num.num',X1))))),s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraints_3'(s('type.list.list'('type.infer_t.infer_t'),sK0),s('type.list.list'('type.infer_t.infer_t'),sK1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2)))))) ) | $spl0),
  inference(forward_demodulation,[],[f30377,f166])).
fof(f30377,plain,(
  ( ! [X0,X1] : (s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.infer.st_ex_return_2'(s('type.infer_t.infer_t',happ(s(fun('type.num.num','type.infer_t.infer_t'),'const.infer_t.Infer_Tuvar_0'),s('type.num.num',X1))),s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraints_3'(s('type.list.list'('type.infer_t.infer_t'),sK0),s('type.list.list'('type.infer_t.infer_t'),sK1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))))) = s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.pair.,_2'(s('type.infer.exc'('type.infer_t.infer_t',X0),'const.infer.Success_1'(s('type.infer_t.infer_t','const.infer_t.Infer_Tuvar_1'(s('type.num.num',X1))))),s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraints_3'(s('type.list.list'('type.infer_t.infer_t'),sK0),s('type.list.list'('type.infer_t.infer_t'),sK1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2)))))) ) | $spl0),
  inference(forward_demodulation,[],[f30083,f29772])).
fof(f30083,plain,(
  ( ! [X0,X1] : (s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.pair.,_2'(s('type.infer.exc'('type.infer_t.infer_t',X0),'const.infer.Success_1'(s('type.infer_t.infer_t','const.infer_t.Infer_Tuvar_1'(s('type.num.num',X1))))),s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraints_3'(s('type.list.list'('type.infer_t.infer_t'),sK0),s('type.list.list'('type.infer_t.infer_t'),sK1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))))) = s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.infer.st_ex_return_2'(s('type.infer_t.infer_t',happ(s(fun('type.num.num','type.infer_t.infer_t'),'const.infer_t.Infer_Tuvar_0'),s('type.num.num',X1))),s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'const.infer.Success_1'(s('type.one.one','const.one.one_0'))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK3)))))) ) | $spl0),
  inference(unit_resulting_resolution,[],[f166,f29772,f212])).
fof(f30376,plain,(
  ( ! [X2,X0,X1] : (s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.infer.st_ex_return_2'(s('type.infer_t.infer_t','const.unify.t_walkstar_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X1),s('type.infer_t.infer_t',X2))),s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraints_3'(s('type.list.list'('type.infer_t.infer_t'),sK0),s('type.list.list'('type.infer_t.infer_t'),sK1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))))) = s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.pair.,_2'(s('type.infer.exc'('type.infer_t.infer_t',X0),'const.infer.Success_1'(s('type.infer_t.infer_t','const.unify.t_walkstar_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X1),s('type.infer_t.infer_t',X2))))),s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraints_3'(s('type.list.list'('type.infer_t.infer_t'),sK0),s('type.list.list'('type.infer_t.infer_t'),sK1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2)))))) ) | $spl0),
  inference(forward_demodulation,[],[f30375,f176])).
fof(f30375,plain,(
  ( ! [X2,X0,X1] : (s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.pair.,_2'(s('type.infer.exc'('type.infer_t.infer_t',X0),'const.infer.Success_1'(s('type.infer_t.infer_t','const.unify.t_walkstar_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X1),s('type.infer_t.infer_t',X2))))),s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraints_3'(s('type.list.list'('type.infer_t.infer_t'),sK0),s('type.list.list'('type.infer_t.infer_t'),sK1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))))) = s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.infer.st_ex_return_2'(s('type.infer_t.infer_t',happ(s(fun('type.infer_t.infer_t','type.infer_t.infer_t'),happ(s(fun('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),fun('type.infer_t.infer_t','type.infer_t.infer_t')),'const.unify.t_walkstar_0'),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X1))),s('type.infer_t.infer_t',X2))),s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraints_3'(s('type.list.list'('type.infer_t.infer_t'),sK0),s('type.list.list'('type.infer_t.infer_t'),sK1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2)))))) ) | $spl0),
  inference(forward_demodulation,[],[f30084,f29772])).
fof(f30084,plain,(
  ( ! [X2,X0,X1] : (s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.pair.,_2'(s('type.infer.exc'('type.infer_t.infer_t',X0),'const.infer.Success_1'(s('type.infer_t.infer_t','const.unify.t_walkstar_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X1),s('type.infer_t.infer_t',X2))))),s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraints_3'(s('type.list.list'('type.infer_t.infer_t'),sK0),s('type.list.list'('type.infer_t.infer_t'),sK1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))))) = s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.infer.st_ex_return_2'(s('type.infer_t.infer_t',happ(s(fun('type.infer_t.infer_t','type.infer_t.infer_t'),happ(s(fun('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),fun('type.infer_t.infer_t','type.infer_t.infer_t')),'const.unify.t_walkstar_0'),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X1))),s('type.infer_t.infer_t',X2))),s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'const.infer.Success_1'(s('type.one.one','const.one.one_0'))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK3)))))) ) | $spl0),
  inference(unit_resulting_resolution,[],[f176,f29772,f212])).
fof(f30370,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X0),X2),'type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'(X0,X1),X0),'const.infer.read_1'(s(X0,X3))),s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraints_3'(s('type.list.list'('type.infer_t.infer_t'),sK0),s('type.list.list'('type.infer_t.infer_t'),sK1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X0),X2),'type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X0),X2),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'(X0,X1),X0),'const.infer.read_1'(s(X0,X3))))),s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraints_3'(s('type.list.list'('type.infer_t.infer_t'),sK0),s('type.list.list'('type.infer_t.infer_t'),sK1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2)))))) ) | $spl0),
  inference(forward_demodulation,[],[f30369,f178])).
fof(f30369,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X0),X2),'type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X0),X2),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'(X0,X1),X0),'const.infer.read_1'(s(X0,X3))))),s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraints_3'(s('type.list.list'('type.infer_t.infer_t'),sK0),s('type.list.list'('type.infer_t.infer_t'),sK1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X0),X2),'type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'(X0,X1),X0),happ(s(fun(X0,'type.pair.prod'('type.infer.exc'(X0,X1),X0)),'const.infer.read_0'),s(X0,X3))),s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraints_3'(s('type.list.list'('type.infer_t.infer_t'),sK0),s('type.list.list'('type.infer_t.infer_t'),sK1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2)))))) ) | $spl0),
  inference(forward_demodulation,[],[f30087,f29772])).
fof(f30087,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X0),X2),'type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X0),X2),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'(X0,X1),X0),'const.infer.read_1'(s(X0,X3))))),s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraints_3'(s('type.list.list'('type.infer_t.infer_t'),sK0),s('type.list.list'('type.infer_t.infer_t'),sK1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X0),X2),'type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'(X0,X1),X0),happ(s(fun(X0,'type.pair.prod'('type.infer.exc'(X0,X1),X0)),'const.infer.read_0'),s(X0,X3))),s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'const.infer.Success_1'(s('type.one.one','const.one.one_0'))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK3)))))) ) | $spl0),
  inference(unit_resulting_resolution,[],[f178,f29772,f212])).
fof(f30366,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),'type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'(X0,X1),X2),'const.infer.st_ex_return_2'(s(X0,X4),s(X2,X5))),s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraints_3'(s('type.list.list'('type.infer_t.infer_t'),sK0),s('type.list.list'('type.infer_t.infer_t'),sK1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),'type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'(X0,X1),X2),'const.infer.st_ex_return_2'(s(X0,X4),s(X2,X5))))),s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraints_3'(s('type.list.list'('type.infer_t.infer_t'),sK0),s('type.list.list'('type.infer_t.infer_t'),sK1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2)))))) ) | $spl0),
  inference(forward_demodulation,[],[f30365,f205])).
fof(f30365,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),'type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'(X0,X1),X2),'const.infer.st_ex_return_2'(s(X0,X4),s(X2,X5))))),s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraints_3'(s('type.list.list'('type.infer_t.infer_t'),sK0),s('type.list.list'('type.infer_t.infer_t'),sK1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),'type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'(X0,X1),X2),happ(s(fun(X2,'type.pair.prod'('type.infer.exc'(X0,X1),X2)),happ(s(fun(X0,fun(X2,'type.pair.prod'('type.infer.exc'(X0,X1),X2))),'const.infer.st_ex_return_0'),s(X0,X4))),s(X2,X5))),s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraints_3'(s('type.list.list'('type.infer_t.infer_t'),sK0),s('type.list.list'('type.infer_t.infer_t'),sK1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2)))))) ) | $spl0),
  inference(forward_demodulation,[],[f30089,f29772])).
fof(f30089,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),'type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'(X0,X1),X2),'const.infer.st_ex_return_2'(s(X0,X4),s(X2,X5))))),s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraints_3'(s('type.list.list'('type.infer_t.infer_t'),sK0),s('type.list.list'('type.infer_t.infer_t'),sK1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),'type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'(X0,X1),X2),happ(s(fun(X2,'type.pair.prod'('type.infer.exc'(X0,X1),X2)),happ(s(fun(X0,fun(X2,'type.pair.prod'('type.infer.exc'(X0,X1),X2))),'const.infer.st_ex_return_0'),s(X0,X4))),s(X2,X5))),s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'const.infer.Success_1'(s('type.one.one','const.one.one_0'))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK3)))))) ) | $spl0),
  inference(unit_resulting_resolution,[],[f205,f29772,f212])).
fof(f30364,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),'type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'(X0,X1),X2),'const.infer.st_ex_bind_3'(s(fun(X2,'type.pair.prod'('type.infer.exc'(X4,X1),X2)),X5),s(fun(X4,fun(X2,'type.pair.prod'('type.infer.exc'(X0,X1),X2))),X6),s(X2,X7))),s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraints_3'(s('type.list.list'('type.infer_t.infer_t'),sK0),s('type.list.list'('type.infer_t.infer_t'),sK1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),'type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'(X0,X1),X2),'const.infer.st_ex_bind_3'(s(fun(X2,'type.pair.prod'('type.infer.exc'(X4,X1),X2)),X5),s(fun(X4,fun(X2,'type.pair.prod'('type.infer.exc'(X0,X1),X2))),X6),s(X2,X7))))),s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraints_3'(s('type.list.list'('type.infer_t.infer_t'),sK0),s('type.list.list'('type.infer_t.infer_t'),sK1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2)))))) ) | $spl0),
  inference(forward_demodulation,[],[f30363,f254])).
fof(f30363,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),'type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'(X0,X1),X2),'const.infer.st_ex_bind_3'(s(fun(X2,'type.pair.prod'('type.infer.exc'(X4,X1),X2)),X5),s(fun(X4,fun(X2,'type.pair.prod'('type.infer.exc'(X0,X1),X2))),X6),s(X2,X7))))),s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraints_3'(s('type.list.list'('type.infer_t.infer_t'),sK0),s('type.list.list'('type.infer_t.infer_t'),sK1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),'type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'(X0,X1),X2),happ(s(fun(X2,'type.pair.prod'('type.infer.exc'(X0,X1),X2)),'const.infer.st_ex_bind_2'(s(fun(X2,'type.pair.prod'('type.infer.exc'(X4,X1),X2)),X5),s(fun(X4,fun(X2,'type.pair.prod'('type.infer.exc'(X0,X1),X2))),X6))),s(X2,X7))),s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraints_3'(s('type.list.list'('type.infer_t.infer_t'),sK0),s('type.list.list'('type.infer_t.infer_t'),sK1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2)))))) ) | $spl0),
  inference(forward_demodulation,[],[f30090,f29772])).
fof(f30090,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),'type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'(X0,X1),X2),'const.infer.st_ex_bind_3'(s(fun(X2,'type.pair.prod'('type.infer.exc'(X4,X1),X2)),X5),s(fun(X4,fun(X2,'type.pair.prod'('type.infer.exc'(X0,X1),X2))),X6),s(X2,X7))))),s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraints_3'(s('type.list.list'('type.infer_t.infer_t'),sK0),s('type.list.list'('type.infer_t.infer_t'),sK1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),'type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'(X0,X1),X2),happ(s(fun(X2,'type.pair.prod'('type.infer.exc'(X0,X1),X2)),'const.infer.st_ex_bind_2'(s(fun(X2,'type.pair.prod'('type.infer.exc'(X4,X1),X2)),X5),s(fun(X4,fun(X2,'type.pair.prod'('type.infer.exc'(X0,X1),X2))),X6))),s(X2,X7))),s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'const.infer.Success_1'(s('type.one.one','const.one.one_0'))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK3)))))) ) | $spl0),
  inference(unit_resulting_resolution,[],[f254,f29772,f212])).
fof(f30362,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),X2),'type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),'const.infer.fresh_uvar_1'(s('type.infer.infer_st'(X1),X3))),s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraints_3'(s('type.list.list'('type.infer_t.infer_t'),sK0),s('type.list.list'('type.infer_t.infer_t'),sK1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),X2),'type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),X2),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),'const.infer.fresh_uvar_1'(s('type.infer.infer_st'(X1),X3))))),s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraints_3'(s('type.list.list'('type.infer_t.infer_t'),sK0),s('type.list.list'('type.infer_t.infer_t'),sK1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2)))))) ) | $spl0),
  inference(forward_demodulation,[],[f30361,f179])).
fof(f30361,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),X2),'type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),X2),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),'const.infer.fresh_uvar_1'(s('type.infer.infer_st'(X1),X3))))),s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraints_3'(s('type.list.list'('type.infer_t.infer_t'),sK0),s('type.list.list'('type.infer_t.infer_t'),sK1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),X2),'type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),happ(s(fun('type.infer.infer_st'(X1),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1))),'const.infer.fresh_uvar_0'),s('type.infer.infer_st'(X1),X3))),s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraints_3'(s('type.list.list'('type.infer_t.infer_t'),sK0),s('type.list.list'('type.infer_t.infer_t'),sK1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2)))))) ) | $spl0),
  inference(forward_demodulation,[],[f30091,f29772])).
fof(f30091,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),X2),'type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),X2),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),'const.infer.fresh_uvar_1'(s('type.infer.infer_st'(X1),X3))))),s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraints_3'(s('type.list.list'('type.infer_t.infer_t'),sK0),s('type.list.list'('type.infer_t.infer_t'),sK1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),X2),'type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),happ(s(fun('type.infer.infer_st'(X1),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1))),'const.infer.fresh_uvar_0'),s('type.infer.infer_st'(X1),X3))),s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'const.infer.Success_1'(s('type.one.one','const.one.one_0'))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK3)))))) ) | $spl0),
  inference(unit_resulting_resolution,[],[f179,f29772,f212])).
fof(f30360,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),X2),'type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),'const.infer.n_fresh_uvar_2'(s('type.num.num',X3),s('type.infer.infer_st'(X1),X4))),s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraints_3'(s('type.list.list'('type.infer_t.infer_t'),sK0),s('type.list.list'('type.infer_t.infer_t'),sK1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),X2),'type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),X2),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),'const.infer.n_fresh_uvar_2'(s('type.num.num',X3),s('type.infer.infer_st'(X1),X4))))),s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraints_3'(s('type.list.list'('type.infer_t.infer_t'),sK0),s('type.list.list'('type.infer_t.infer_t'),sK1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2)))))) ) | $spl0),
  inference(forward_demodulation,[],[f30359,f181])).
fof(f30359,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),X2),'type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),X2),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),'const.infer.n_fresh_uvar_2'(s('type.num.num',X3),s('type.infer.infer_st'(X1),X4))))),s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraints_3'(s('type.list.list'('type.infer_t.infer_t'),sK0),s('type.list.list'('type.infer_t.infer_t'),sK1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),X2),'type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),happ(s(fun('type.infer.infer_st'(X1),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1))),happ(s(fun('type.num.num',fun('type.infer.infer_st'(X1),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)))),'const.infer.n_fresh_uvar_0'),s('type.num.num',X3))),s('type.infer.infer_st'(X1),X4))),s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraints_3'(s('type.list.list'('type.infer_t.infer_t'),sK0),s('type.list.list'('type.infer_t.infer_t'),sK1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2)))))) ) | $spl0),
  inference(forward_demodulation,[],[f30092,f29772])).
fof(f30092,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),X2),'type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),X2),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),'const.infer.n_fresh_uvar_2'(s('type.num.num',X3),s('type.infer.infer_st'(X1),X4))))),s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraints_3'(s('type.list.list'('type.infer_t.infer_t'),sK0),s('type.list.list'('type.infer_t.infer_t'),sK1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),X2),'type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),happ(s(fun('type.infer.infer_st'(X1),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1))),happ(s(fun('type.num.num',fun('type.infer.infer_st'(X1),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)))),'const.infer.n_fresh_uvar_0'),s('type.num.num',X3))),s('type.infer.infer_st'(X1),X4))),s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'const.infer.Success_1'(s('type.one.one','const.one.one_0'))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK3)))))) ) | $spl0),
  inference(unit_resulting_resolution,[],[f181,f29772,f212])).
fof(f30358,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X1),'type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.apply_subst_2'(s('type.infer_t.infer_t',X2),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X3))),s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraints_3'(s('type.list.list'('type.infer_t.infer_t'),sK0),s('type.list.list'('type.infer_t.infer_t'),sK1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X1),'type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X1),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.apply_subst_2'(s('type.infer_t.infer_t',X2),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X3))))),s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraints_3'(s('type.list.list'('type.infer_t.infer_t'),sK0),s('type.list.list'('type.infer_t.infer_t'),sK1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2)))))) ) | $spl0),
  inference(forward_demodulation,[],[f30357,f171])).
fof(f30357,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X1),'type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X1),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.apply_subst_2'(s('type.infer_t.infer_t',X2),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X3))))),s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraints_3'(s('type.list.list'('type.infer_t.infer_t'),sK0),s('type.list.list'('type.infer_t.infer_t'),sK1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X1),'type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),happ(s(fun('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.infer.apply_subst_1'(s('type.infer_t.infer_t',X2))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X3))),s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraints_3'(s('type.list.list'('type.infer_t.infer_t'),sK0),s('type.list.list'('type.infer_t.infer_t'),sK1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2)))))) ) | $spl0),
  inference(forward_demodulation,[],[f30093,f29772])).
fof(f30093,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X1),'type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X1),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.apply_subst_2'(s('type.infer_t.infer_t',X2),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X3))))),s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraints_3'(s('type.list.list'('type.infer_t.infer_t'),sK0),s('type.list.list'('type.infer_t.infer_t'),sK1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X1),'type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),happ(s(fun('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.infer.apply_subst_1'(s('type.infer_t.infer_t',X2))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X3))),s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'const.infer.Success_1'(s('type.one.one','const.one.one_0'))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK3)))))) ) | $spl0),
  inference(unit_resulting_resolution,[],[f171,f29772,f212])).
fof(f30356,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),'type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'(X0,X1),X2),'const.infer.failwith_2'(s(X1,X4),s(X2,X5))),s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraints_3'(s('type.list.list'('type.infer_t.infer_t'),sK0),s('type.list.list'('type.infer_t.infer_t'),sK1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),'type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'(X0,X1),X2),'const.infer.failwith_2'(s(X1,X4),s(X2,X5))))),s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraints_3'(s('type.list.list'('type.infer_t.infer_t'),sK0),s('type.list.list'('type.infer_t.infer_t'),sK1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2)))))) ) | $spl0),
  inference(forward_demodulation,[],[f30355,f204])).
fof(f30355,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),'type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'(X0,X1),X2),'const.infer.failwith_2'(s(X1,X4),s(X2,X5))))),s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraints_3'(s('type.list.list'('type.infer_t.infer_t'),sK0),s('type.list.list'('type.infer_t.infer_t'),sK1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),'type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'(X0,X1),X2),happ(s(fun(X2,'type.pair.prod'('type.infer.exc'(X0,X1),X2)),'const.infer.failwith_1'(s(X1,X4))),s(X2,X5))),s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraints_3'(s('type.list.list'('type.infer_t.infer_t'),sK0),s('type.list.list'('type.infer_t.infer_t'),sK1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2)))))) ) | $spl0),
  inference(forward_demodulation,[],[f30094,f29772])).
fof(f30094,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),'type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'(X0,X1),X2),'const.infer.failwith_2'(s(X1,X4),s(X2,X5))))),s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraints_3'(s('type.list.list'('type.infer_t.infer_t'),sK0),s('type.list.list'('type.infer_t.infer_t'),sK1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),'type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'(X0,X1),X2),happ(s(fun(X2,'type.pair.prod'('type.infer.exc'(X0,X1),X2)),'const.infer.failwith_1'(s(X1,X4))),s(X2,X5))),s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'const.infer.Success_1'(s('type.one.one','const.one.one_0'))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK3)))))) ) | $spl0),
  inference(unit_resulting_resolution,[],[f204,f29772,f212])).
fof(f30354,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,'type.list.list'('type.string.char')),X1),X2),'type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'(X0,'type.list.list'('type.string.char')),X1),'const.infer.lookup_st_ex_4'(s(fun(X3,'type.list.list'('type.string.char')),X4),s(X3,X5),s('type.list.list'('type.pair.prod'(X3,X0)),X6),s(X1,X7))),s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraints_3'(s('type.list.list'('type.infer_t.infer_t'),sK0),s('type.list.list'('type.infer_t.infer_t'),sK1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,'type.list.list'('type.string.char')),X1),X2),'type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,'type.list.list'('type.string.char')),X1),X2),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'(X0,'type.list.list'('type.string.char')),X1),'const.infer.lookup_st_ex_4'(s(fun(X3,'type.list.list'('type.string.char')),X4),s(X3,X5),s('type.list.list'('type.pair.prod'(X3,X0)),X6),s(X1,X7))))),s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraints_3'(s('type.list.list'('type.infer_t.infer_t'),sK0),s('type.list.list'('type.infer_t.infer_t'),sK1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2)))))) ) | $spl0),
  inference(forward_demodulation,[],[f30353,f207])).
fof(f30353,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,'type.list.list'('type.string.char')),X1),X2),'type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,'type.list.list'('type.string.char')),X1),X2),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'(X0,'type.list.list'('type.string.char')),X1),'const.infer.lookup_st_ex_4'(s(fun(X3,'type.list.list'('type.string.char')),X4),s(X3,X5),s('type.list.list'('type.pair.prod'(X3,X0)),X6),s(X1,X7))))),s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraints_3'(s('type.list.list'('type.infer_t.infer_t'),sK0),s('type.list.list'('type.infer_t.infer_t'),sK1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,'type.list.list'('type.string.char')),X1),X2),'type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'(X0,'type.list.list'('type.string.char')),X1),happ(s(fun(X1,'type.pair.prod'('type.infer.exc'(X0,'type.list.list'('type.string.char')),X1)),'const.infer.lookup_st_ex_3'(s(fun(X3,'type.list.list'('type.string.char')),X4),s(X3,X5),s('type.list.list'('type.pair.prod'(X3,X0)),X6))),s(X1,X7))),s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraints_3'(s('type.list.list'('type.infer_t.infer_t'),sK0),s('type.list.list'('type.infer_t.infer_t'),sK1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2)))))) ) | $spl0),
  inference(forward_demodulation,[],[f30095,f29772])).
fof(f30095,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,'type.list.list'('type.string.char')),X1),X2),'type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,'type.list.list'('type.string.char')),X1),X2),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'(X0,'type.list.list'('type.string.char')),X1),'const.infer.lookup_st_ex_4'(s(fun(X3,'type.list.list'('type.string.char')),X4),s(X3,X5),s('type.list.list'('type.pair.prod'(X3,X0)),X6),s(X1,X7))))),s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraints_3'(s('type.list.list'('type.infer_t.infer_t'),sK0),s('type.list.list'('type.infer_t.infer_t'),sK1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,'type.list.list'('type.string.char')),X1),X2),'type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'(X0,'type.list.list'('type.string.char')),X1),happ(s(fun(X1,'type.pair.prod'('type.infer.exc'(X0,'type.list.list'('type.string.char')),X1)),'const.infer.lookup_st_ex_3'(s(fun(X3,'type.list.list'('type.string.char')),X4),s(X3,X5),s('type.list.list'('type.pair.prod'(X3,X0)),X6))),s(X1,X7))),s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'const.infer.Success_1'(s('type.one.one','const.one.one_0'))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK3)))))) ) | $spl0),
  inference(unit_resulting_resolution,[],[f207,f29772,f212])).
fof(f30352,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),X2),'type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),'const.infer.guard_3'(s(bool,X3),s(X0,X4),s(X1,X5))),s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraints_3'(s('type.list.list'('type.infer_t.infer_t'),sK0),s('type.list.list'('type.infer_t.infer_t'),sK1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),X2),'type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),X2),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),'const.infer.guard_3'(s(bool,X3),s(X0,X4),s(X1,X5))))),s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraints_3'(s('type.list.list'('type.infer_t.infer_t'),sK0),s('type.list.list'('type.infer_t.infer_t'),sK1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2)))))) ) | $spl0),
  inference(forward_demodulation,[],[f30351,f183])).
fof(f30351,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),X2),'type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),X2),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),'const.infer.guard_3'(s(bool,X3),s(X0,X4),s(X1,X5))))),s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraints_3'(s('type.list.list'('type.infer_t.infer_t'),sK0),s('type.list.list'('type.infer_t.infer_t'),sK1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),X2),'type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),happ(s(fun(X1,'type.pair.prod'('type.infer.exc'('type.one.one',X0),X1)),'const.infer.guard_2'(s(bool,X3),s(X0,X4))),s(X1,X5))),s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraints_3'(s('type.list.list'('type.infer_t.infer_t'),sK0),s('type.list.list'('type.infer_t.infer_t'),sK1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2)))))) ) | $spl0),
  inference(forward_demodulation,[],[f30096,f29772])).
fof(f30096,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),X2),'type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),X2),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),'const.infer.guard_3'(s(bool,X3),s(X0,X4),s(X1,X5))))),s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraints_3'(s('type.list.list'('type.infer_t.infer_t'),sK0),s('type.list.list'('type.infer_t.infer_t'),sK1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),X2),'type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),happ(s(fun(X1,'type.pair.prod'('type.infer.exc'('type.one.one',X0),X1)),'const.infer.guard_2'(s(bool,X3),s(X0,X4))),s(X1,X5))),s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'const.infer.Success_1'(s('type.one.one','const.one.one_0'))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK3)))))) ) | $spl0),
  inference(unit_resulting_resolution,[],[f183,f29772,f212])).
fof(f30348,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X0),X1),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraints_3'(s('type.list.list'('type.infer_t.infer_t'),sK0),s('type.list.list'('type.infer_t.infer_t'),sK1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))),s(X1,happ(s(fun(X2,X1),X3),s(X2,happ(s(fun(X4,X2),X5),s(X4,X6))))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X0),X1),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X0),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraints_3'(s('type.list.list'('type.infer_t.infer_t'),sK0),s('type.list.list'('type.infer_t.infer_t'),sK1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))))),s(X1,happ(s(fun(X4,X1),'_dst_x0x1_2'(s(fun(X2,X1),X3),s(fun(X4,X2),X5))),s(X4,X6)))))) ) | $spl0),
  inference(forward_demodulation,[],[f30098,f29772])).
fof(f30098,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X0),X1),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'const.infer.Success_1'(s('type.one.one','const.one.one_0'))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK3))),s(X1,happ(s(fun(X2,X1),X3),s(X2,happ(s(fun(X4,X2),X5),s(X4,X6))))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X0),X1),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X0),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraints_3'(s('type.list.list'('type.infer_t.infer_t'),sK0),s('type.list.list'('type.infer_t.infer_t'),sK1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))))),s(X1,happ(s(fun(X4,X1),'_dst_x0x1_2'(s(fun(X2,X1),X3),s(fun(X4,X2),X5))),s(X4,X6)))))) ) | $spl0),
  inference(unit_resulting_resolution,[],[f206,f29772,f212])).
fof(f30347,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X0),X1),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraints_3'(s('type.list.list'('type.infer_t.infer_t'),sK0),s('type.list.list'('type.infer_t.infer_t'),sK1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))),s(X1,happ(s(fun(X2,X1),'_dst_x0x1x0_3'(s(fun(X3,fun(X4,X1)),X5),s(fun(X2,X3),X6),s(X4,X7))),s(X2,X8))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X0),X1),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X0),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraints_3'(s('type.list.list'('type.infer_t.infer_t'),sK0),s('type.list.list'('type.infer_t.infer_t'),sK1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))))),s(X1,happ(s(fun(X4,X1),happ(s(fun(X3,fun(X4,X1)),X5),s(X3,happ(s(fun(X2,X3),X6),s(X2,X8))))),s(X4,X7)))))) ) | $spl0),
  inference(forward_demodulation,[],[f30099,f29772])).
fof(f30099,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X0),X1),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'const.infer.Success_1'(s('type.one.one','const.one.one_0'))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK3))),s(X1,happ(s(fun(X2,X1),'_dst_x0x1x0_3'(s(fun(X3,fun(X4,X1)),X5),s(fun(X2,X3),X6),s(X4,X7))),s(X2,X8))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X0),X1),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X0),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraints_3'(s('type.list.list'('type.infer_t.infer_t'),sK0),s('type.list.list'('type.infer_t.infer_t'),sK1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))))),s(X1,happ(s(fun(X4,X1),happ(s(fun(X3,fun(X4,X1)),X5),s(X3,happ(s(fun(X2,X3),X6),s(X2,X8))))),s(X4,X7)))))) ) | $spl0),
  inference(unit_resulting_resolution,[],[f221,f29772,f212])).
fof(f30294,plain,(
  ( ! [X2,X0,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X0),X1),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraints_3'(s('type.list.list'('type.infer_t.infer_t'),sK0),s('type.list.list'('type.infer_t.infer_t'),sK1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))),s(X1,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(X1),X2))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X0),X1),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X0),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraints_3'(s('type.list.list'('type.infer_t.infer_t'),sK0),s('type.list.list'('type.infer_t.infer_t'),sK1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))))),s(X1,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(X1),X2)))))) ) | $spl0),
  inference(forward_demodulation,[],[f30293,f29772])).
fof(f30293,plain,(
  ( ! [X2,X0,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X0),X1),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'const.infer.Success_1'(s('type.one.one','const.one.one_0'))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK3))),s(X1,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(X1),X2))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X0),X1),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X0),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraints_3'(s('type.list.list'('type.infer_t.infer_t'),sK0),s('type.list.list'('type.infer_t.infer_t'),sK1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))))),s(X1,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(X1),X2)))))) ) | $spl0),
  inference(forward_demodulation,[],[f30131,f168])).
fof(f30131,plain,(
  ( ! [X2,X0,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X0),X1),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'const.infer.Success_1'(s('type.one.one','const.one.one_0'))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK3))),s(X1,happ(s(fun('type.infer.infer_st'(X1),X1),'const.infer.infer_st_subst_0'),s('type.infer.infer_st'(X1),X2))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X0),X1),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X0),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraints_3'(s('type.list.list'('type.infer_t.infer_t'),sK0),s('type.list.list'('type.infer_t.infer_t'),sK1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))))),s(X1,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(X1),X2)))))) ) | $spl0),
  inference(unit_resulting_resolution,[],[f168,f29772,f212])).
fof(f30292,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X0),X1),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraints_3'(s('type.list.list'('type.infer_t.infer_t'),sK0),s('type.list.list'('type.infer_t.infer_t'),sK1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))),s(X1,happ(s(fun(X2,X1),'_dst_x0x1_2'(s(fun(X3,X1),X4),s(fun(X2,X3),X5))),s(X2,X6))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X0),X1),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X0),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraints_3'(s('type.list.list'('type.infer_t.infer_t'),sK0),s('type.list.list'('type.infer_t.infer_t'),sK1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))))),s(X1,happ(s(fun(X3,X1),X4),s(X3,happ(s(fun(X2,X3),X5),s(X2,X6)))))))) ) | $spl0),
  inference(forward_demodulation,[],[f30132,f29772])).
fof(f30132,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X0),X1),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'const.infer.Success_1'(s('type.one.one','const.one.one_0'))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK3))),s(X1,happ(s(fun(X2,X1),'_dst_x0x1_2'(s(fun(X3,X1),X4),s(fun(X2,X3),X5))),s(X2,X6))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X0),X1),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X0),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraints_3'(s('type.list.list'('type.infer_t.infer_t'),sK0),s('type.list.list'('type.infer_t.infer_t'),sK1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))))),s(X1,happ(s(fun(X3,X1),X4),s(X3,happ(s(fun(X2,X3),X5),s(X2,X6)))))))) ) | $spl0),
  inference(unit_resulting_resolution,[],[f206,f29772,f212])).
fof(f30291,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X0),X1),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraints_3'(s('type.list.list'('type.infer_t.infer_t'),sK0),s('type.list.list'('type.infer_t.infer_t'),sK1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))),s(X1,happ(s(fun(X2,X1),happ(s(fun(X3,fun(X2,X1)),X4),s(X3,happ(s(fun(X5,X3),X6),s(X5,X7))))),s(X2,X8))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X0),X1),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X0),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraints_3'(s('type.list.list'('type.infer_t.infer_t'),sK0),s('type.list.list'('type.infer_t.infer_t'),sK1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))))),s(X1,happ(s(fun(X5,X1),'_dst_x0x1x0_3'(s(fun(X3,fun(X2,X1)),X4),s(fun(X5,X3),X6),s(X2,X8))),s(X5,X7)))))) ) | $spl0),
  inference(forward_demodulation,[],[f30133,f29772])).
fof(f30133,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X0),X1),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'const.infer.Success_1'(s('type.one.one','const.one.one_0'))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK3))),s(X1,happ(s(fun(X2,X1),happ(s(fun(X3,fun(X2,X1)),X4),s(X3,happ(s(fun(X5,X3),X6),s(X5,X7))))),s(X2,X8))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X0),X1),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X0),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraints_3'(s('type.list.list'('type.infer_t.infer_t'),sK0),s('type.list.list'('type.infer_t.infer_t'),sK1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))))),s(X1,happ(s(fun(X5,X1),'_dst_x0x1x0_3'(s(fun(X3,fun(X2,X1)),X4),s(fun(X5,X3),X6),s(X2,X8))),s(X5,X7)))))) ) | $spl0),
  inference(unit_resulting_resolution,[],[f221,f29772,f212])).
fof(f30290,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X0),X1),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraints_3'(s('type.list.list'('type.infer_t.infer_t'),sK0),s('type.list.list'('type.infer_t.infer_t'),sK1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))),s(X1,'const.option.option_CASE_3'(s('type.option.option'(X2),X3),s(X1,X4),s(fun(X2,X1),X5))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X0),X1),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X0),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraints_3'(s('type.list.list'('type.infer_t.infer_t'),sK0),s('type.list.list'('type.infer_t.infer_t'),sK1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))))),s(X1,'const.option.option_CASE_3'(s('type.option.option'(X2),X3),s(X1,X4),s(fun(X2,X1),X5)))))) ) | $spl0),
  inference(forward_demodulation,[],[f30289,f29772])).
fof(f30289,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X0),X1),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'const.infer.Success_1'(s('type.one.one','const.one.one_0'))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK3))),s(X1,'const.option.option_CASE_3'(s('type.option.option'(X2),X3),s(X1,X4),s(fun(X2,X1),X5))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X0),X1),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X0),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraints_3'(s('type.list.list'('type.infer_t.infer_t'),sK0),s('type.list.list'('type.infer_t.infer_t'),sK1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))))),s(X1,'const.option.option_CASE_3'(s('type.option.option'(X2),X3),s(X1,X4),s(fun(X2,X1),X5)))))) ) | $spl0),
  inference(forward_demodulation,[],[f30134,f184])).
fof(f30134,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X0),X1),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X0),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraints_3'(s('type.list.list'('type.infer_t.infer_t'),sK0),s('type.list.list'('type.infer_t.infer_t'),sK1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))))),s(X1,'const.option.option_CASE_3'(s('type.option.option'(X2),X3),s(X1,X4),s(fun(X2,X1),X5))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X0),X1),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'const.infer.Success_1'(s('type.one.one','const.one.one_0'))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK3))),s(X1,happ(s(fun(fun(X2,X1),X1),happ(s(fun(X1,fun(fun(X2,X1),X1)),happ(s(fun('type.option.option'(X2),fun(X1,fun(fun(X2,X1),X1))),'const.option.option_CASE_0'),s('type.option.option'(X2),X3))),s(X1,X4))),s(fun(X2,X1),X5)))))) ) | $spl0),
  inference(unit_resulting_resolution,[],[f184,f29772,f212])).
fof(f30286,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X0),fun(X1,'type.one.one')),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraints_3'(s('type.list.list'('type.infer_t.infer_t'),sK0),s('type.list.list'('type.infer_t.infer_t'),sK1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))),s(fun(X1,'type.one.one'),X2))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X0),fun(X1,'type.one.one')),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X0),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraints_3'(s('type.list.list'('type.infer_t.infer_t'),sK0),s('type.list.list'('type.infer_t.infer_t'),sK1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))))),s(fun(X1,'type.one.one'),X3)))) ) | $spl0),
  inference(forward_demodulation,[],[f30136,f29772])).
fof(f30136,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X0),fun(X1,'type.one.one')),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'const.infer.Success_1'(s('type.one.one','const.one.one_0'))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK3))),s(fun(X1,'type.one.one'),X2))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X0),fun(X1,'type.one.one')),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X0),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraints_3'(s('type.list.list'('type.infer_t.infer_t'),sK0),s('type.list.list'('type.infer_t.infer_t'),sK1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))))),s(fun(X1,'type.one.one'),X3)))) ) | $spl0),
  inference(unit_resulting_resolution,[],[f605,f29772,f212])).
fof(f30284,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X0),fun(X1,fun(X2,'type.one.one'))),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraints_3'(s('type.list.list'('type.infer_t.infer_t'),sK0),s('type.list.list'('type.infer_t.infer_t'),sK1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))),s(fun(X1,fun(X2,'type.one.one')),X3))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X0),fun(X1,fun(X2,'type.one.one'))),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X0),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraints_3'(s('type.list.list'('type.infer_t.infer_t'),sK0),s('type.list.list'('type.infer_t.infer_t'),sK1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))))),s(fun(X1,fun(X2,'type.one.one')),X4)))) ) | $spl0),
  inference(forward_demodulation,[],[f30138,f29772])).
fof(f30138,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X0),fun(X1,fun(X2,'type.one.one'))),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'const.infer.Success_1'(s('type.one.one','const.one.one_0'))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK3))),s(fun(X1,fun(X2,'type.one.one')),X3))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X0),fun(X1,fun(X2,'type.one.one'))),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X0),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraints_3'(s('type.list.list'('type.infer_t.infer_t'),sK0),s('type.list.list'('type.infer_t.infer_t'),sK1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))))),s(fun(X1,fun(X2,'type.one.one')),X4)))) ) | $spl0),
  inference(unit_resulting_resolution,[],[f724,f29772,f212])).
fof(f30283,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X0),fun(X1,fun(X2,fun(X3,'type.one.one')))),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraints_3'(s('type.list.list'('type.infer_t.infer_t'),sK0),s('type.list.list'('type.infer_t.infer_t'),sK1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))),s(fun(X1,fun(X2,fun(X3,'type.one.one'))),X4))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X0),fun(X1,fun(X2,fun(X3,'type.one.one')))),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X0),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraints_3'(s('type.list.list'('type.infer_t.infer_t'),sK0),s('type.list.list'('type.infer_t.infer_t'),sK1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))))),s(fun(X1,fun(X2,fun(X3,'type.one.one'))),X5)))) ) | $spl0),
  inference(forward_demodulation,[],[f30139,f29772])).
fof(f30139,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X0),fun(X1,fun(X2,fun(X3,'type.one.one')))),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'const.infer.Success_1'(s('type.one.one','const.one.one_0'))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK3))),s(fun(X1,fun(X2,fun(X3,'type.one.one'))),X4))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X0),fun(X1,fun(X2,fun(X3,'type.one.one')))),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X0),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraints_3'(s('type.list.list'('type.infer_t.infer_t'),sK0),s('type.list.list'('type.infer_t.infer_t'),sK1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))))),s(fun(X1,fun(X2,fun(X3,'type.one.one'))),X5)))) ) | $spl0),
  inference(unit_resulting_resolution,[],[f752,f29772,f212])).
fof(f30282,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X0),fun(X1,fun(X2,fun(X3,fun(X4,'type.one.one'))))),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraints_3'(s('type.list.list'('type.infer_t.infer_t'),sK0),s('type.list.list'('type.infer_t.infer_t'),sK1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))),s(fun(X1,fun(X2,fun(X3,fun(X4,'type.one.one')))),X5))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X0),fun(X1,fun(X2,fun(X3,fun(X4,'type.one.one'))))),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X0),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraints_3'(s('type.list.list'('type.infer_t.infer_t'),sK0),s('type.list.list'('type.infer_t.infer_t'),sK1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))))),s(fun(X1,fun(X2,fun(X3,fun(X4,'type.one.one')))),X6)))) ) | $spl0),
  inference(forward_demodulation,[],[f30140,f29772])).
fof(f30140,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X0),fun(X1,fun(X2,fun(X3,fun(X4,'type.one.one'))))),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'const.infer.Success_1'(s('type.one.one','const.one.one_0'))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK3))),s(fun(X1,fun(X2,fun(X3,fun(X4,'type.one.one')))),X5))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X0),fun(X1,fun(X2,fun(X3,fun(X4,'type.one.one'))))),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X0),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraints_3'(s('type.list.list'('type.infer_t.infer_t'),sK0),s('type.list.list'('type.infer_t.infer_t'),sK1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))))),s(fun(X1,fun(X2,fun(X3,fun(X4,'type.one.one')))),X6)))) ) | $spl0),
  inference(unit_resulting_resolution,[],[f787,f29772,f212])).
fof(f30281,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X0),fun(X1,fun(X2,fun(X3,fun(X4,fun(X5,'type.one.one')))))),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraints_3'(s('type.list.list'('type.infer_t.infer_t'),sK0),s('type.list.list'('type.infer_t.infer_t'),sK1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))),s(fun(X1,fun(X2,fun(X3,fun(X4,fun(X5,'type.one.one'))))),X6))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X0),fun(X1,fun(X2,fun(X3,fun(X4,fun(X5,'type.one.one')))))),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X0),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraints_3'(s('type.list.list'('type.infer_t.infer_t'),sK0),s('type.list.list'('type.infer_t.infer_t'),sK1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))))),s(fun(X1,fun(X2,fun(X3,fun(X4,fun(X5,'type.one.one'))))),X7)))) ) | $spl0),
  inference(forward_demodulation,[],[f30141,f29772])).
fof(f30141,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X0),fun(X1,fun(X2,fun(X3,fun(X4,fun(X5,'type.one.one')))))),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'const.infer.Success_1'(s('type.one.one','const.one.one_0'))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK3))),s(fun(X1,fun(X2,fun(X3,fun(X4,fun(X5,'type.one.one'))))),X6))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X0),fun(X1,fun(X2,fun(X3,fun(X4,fun(X5,'type.one.one')))))),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X0),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraints_3'(s('type.list.list'('type.infer_t.infer_t'),sK0),s('type.list.list'('type.infer_t.infer_t'),sK1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))))),s(fun(X1,fun(X2,fun(X3,fun(X4,fun(X5,'type.one.one'))))),X7)))) ) | $spl0),
  inference(unit_resulting_resolution,[],[f815,f29772,f212])).
fof(f30278,plain,(
  ( ! [X2,X0,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X0),fun('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X1),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))))),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraints_3'(s('type.list.list'('type.infer_t.infer_t'),sK0),s('type.list.list'('type.infer_t.infer_t'),sK1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))),s(fun('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X1),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.infer.apply_subst_list_1'(s('type.list.list'('type.infer_t.infer_t'),X2))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X0),fun('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X1),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))))),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X0),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraints_3'(s('type.list.list'('type.infer_t.infer_t'),sK0),s('type.list.list'('type.infer_t.infer_t'),sK1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))))),s(fun('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X1),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.infer.apply_subst_list_1'(s('type.list.list'('type.infer_t.infer_t'),X2)))))) ) | $spl0),
  inference(forward_demodulation,[],[f30277,f29772])).
fof(f30277,plain,(
  ( ! [X2,X0,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X0),fun('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X1),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))))),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'const.infer.Success_1'(s('type.one.one','const.one.one_0'))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK3))),s(fun('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X1),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.infer.apply_subst_list_1'(s('type.list.list'('type.infer_t.infer_t'),X2))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X0),fun('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X1),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))))),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X0),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraints_3'(s('type.list.list'('type.infer_t.infer_t'),sK0),s('type.list.list'('type.infer_t.infer_t'),sK1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))))),s(fun('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X1),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.infer.apply_subst_list_1'(s('type.list.list'('type.infer_t.infer_t'),X2)))))) ) | $spl0),
  inference(forward_demodulation,[],[f30144,f169])).
fof(f30144,plain,(
  ( ! [X2,X0,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X0),fun('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X1),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))))),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X0),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraints_3'(s('type.list.list'('type.infer_t.infer_t'),sK0),s('type.list.list'('type.infer_t.infer_t'),sK1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))))),s(fun('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X1),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.infer.apply_subst_list_1'(s('type.list.list'('type.infer_t.infer_t'),X2))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X0),fun('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X1),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))))),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'const.infer.Success_1'(s('type.one.one','const.one.one_0'))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK3))),s(fun('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X1),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),happ(s(fun('type.list.list'('type.infer_t.infer_t'),fun('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X1),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))))),'const.infer.apply_subst_list_0'),s('type.list.list'('type.infer_t.infer_t'),X2)))))) ) | $spl0),
  inference(unit_resulting_resolution,[],[f169,f29772,f212])).
fof(f30275,plain,(
  ( ! [X2,X0,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X0),'type.one.one'),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraints_3'(s('type.list.list'('type.infer_t.infer_t'),sK0),s('type.list.list'('type.infer_t.infer_t'),sK1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))),s('type.one.one',X1))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X0),'type.one.one'),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X0),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraints_3'(s('type.list.list'('type.infer_t.infer_t'),sK0),s('type.list.list'('type.infer_t.infer_t'),sK1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))))),s('type.one.one',X2)))) ) | $spl0),
  inference(forward_demodulation,[],[f30146,f29772])).
fof(f30146,plain,(
  ( ! [X2,X0,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X0),'type.one.one'),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'const.infer.Success_1'(s('type.one.one','const.one.one_0'))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK3))),s('type.one.one',X1))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X0),'type.one.one'),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X0),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraints_3'(s('type.list.list'('type.infer_t.infer_t'),sK0),s('type.list.list'('type.infer_t.infer_t'),sK1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))))),s('type.one.one',X2)))) ) | $spl0),
  inference(unit_resulting_resolution,[],[f258,f29772,f212])).
fof(f30274,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X0),'type.list.list'(X1)),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraints_3'(s('type.list.list'('type.infer_t.infer_t'),sK0),s('type.list.list'('type.infer_t.infer_t'),sK1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))),s('type.list.list'(X1),'const.list.MAP_2'(s(fun(X2,X1),X3),s('type.list.list'(X2),X4))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X0),'type.list.list'(X1)),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X0),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraints_3'(s('type.list.list'('type.infer_t.infer_t'),sK0),s('type.list.list'('type.infer_t.infer_t'),sK1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))))),s('type.list.list'(X1),'const.list.MAP_2'(s(fun(X2,X1),X3),s('type.list.list'(X2),X4)))))) ) | $spl0),
  inference(forward_demodulation,[],[f30273,f29772])).
fof(f30273,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X0),'type.list.list'(X1)),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'const.infer.Success_1'(s('type.one.one','const.one.one_0'))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK3))),s('type.list.list'(X1),'const.list.MAP_2'(s(fun(X2,X1),X3),s('type.list.list'(X2),X4))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X0),'type.list.list'(X1)),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X0),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraints_3'(s('type.list.list'('type.infer_t.infer_t'),sK0),s('type.list.list'('type.infer_t.infer_t'),sK1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))))),s('type.list.list'(X1),'const.list.MAP_2'(s(fun(X2,X1),X3),s('type.list.list'(X2),X4)))))) ) | $spl0),
  inference(forward_demodulation,[],[f30147,f180])).
fof(f30147,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X0),'type.list.list'(X1)),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X0),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraints_3'(s('type.list.list'('type.infer_t.infer_t'),sK0),s('type.list.list'('type.infer_t.infer_t'),sK1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))))),s('type.list.list'(X1),'const.list.MAP_2'(s(fun(X2,X1),X3),s('type.list.list'(X2),X4))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X0),'type.list.list'(X1)),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'const.infer.Success_1'(s('type.one.one','const.one.one_0'))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK3))),s('type.list.list'(X1),happ(s(fun('type.list.list'(X2),'type.list.list'(X1)),happ(s(fun(fun(X2,X1),fun('type.list.list'(X2),'type.list.list'(X1))),'const.list.MAP_0'),s(fun(X2,X1),X3))),s('type.list.list'(X2),X4)))))) ) | $spl0),
  inference(unit_resulting_resolution,[],[f180,f29772,f212])).
fof(f30268,plain,(
  ( ! [X2,X0,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X0),'type.num.num'),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraints_3'(s('type.list.list'('type.infer_t.infer_t'),sK0),s('type.list.list'('type.infer_t.infer_t'),sK1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X2))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X0),'type.num.num'),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X0),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraints_3'(s('type.list.list'('type.infer_t.infer_t'),sK0),s('type.list.list'('type.infer_t.infer_t'),sK1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X2)))))) ) | $spl0),
  inference(forward_demodulation,[],[f30267,f29772])).
fof(f30267,plain,(
  ( ! [X2,X0,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X0),'type.num.num'),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'const.infer.Success_1'(s('type.one.one','const.one.one_0'))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK3))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X2))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X0),'type.num.num'),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X0),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraints_3'(s('type.list.list'('type.infer_t.infer_t'),sK0),s('type.list.list'('type.infer_t.infer_t'),sK1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X2)))))) ) | $spl0),
  inference(forward_demodulation,[],[f30150,f175])).
fof(f30150,plain,(
  ( ! [X2,X0,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X0),'type.num.num'),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'const.infer.Success_1'(s('type.one.one','const.one.one_0'))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK3))),s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.arithmetic.+_1'(s('type.num.num',X1))),s('type.num.num',X2))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X0),'type.num.num'),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X0),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraints_3'(s('type.list.list'('type.infer_t.infer_t'),sK0),s('type.list.list'('type.infer_t.infer_t'),sK1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X2)))))) ) | $spl0),
  inference(unit_resulting_resolution,[],[f175,f29772,f212])).
fof(f30266,plain,(
  ( ! [X0,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X0),'type.infer_t.infer_t'),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraints_3'(s('type.list.list'('type.infer_t.infer_t'),sK0),s('type.list.list'('type.infer_t.infer_t'),sK1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))),s('type.infer_t.infer_t','const.infer_t.Infer_Tuvar_1'(s('type.num.num',X1))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X0),'type.infer_t.infer_t'),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X0),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraints_3'(s('type.list.list'('type.infer_t.infer_t'),sK0),s('type.list.list'('type.infer_t.infer_t'),sK1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))))),s('type.infer_t.infer_t','const.infer_t.Infer_Tuvar_1'(s('type.num.num',X1)))))) ) | $spl0),
  inference(forward_demodulation,[],[f30265,f29772])).
fof(f30265,plain,(
  ( ! [X0,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X0),'type.infer_t.infer_t'),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'const.infer.Success_1'(s('type.one.one','const.one.one_0'))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK3))),s('type.infer_t.infer_t','const.infer_t.Infer_Tuvar_1'(s('type.num.num',X1))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X0),'type.infer_t.infer_t'),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X0),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraints_3'(s('type.list.list'('type.infer_t.infer_t'),sK0),s('type.list.list'('type.infer_t.infer_t'),sK1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))))),s('type.infer_t.infer_t','const.infer_t.Infer_Tuvar_1'(s('type.num.num',X1)))))) ) | $spl0),
  inference(forward_demodulation,[],[f30151,f166])).
fof(f30151,plain,(
  ( ! [X0,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X0),'type.infer_t.infer_t'),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'const.infer.Success_1'(s('type.one.one','const.one.one_0'))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK3))),s('type.infer_t.infer_t',happ(s(fun('type.num.num','type.infer_t.infer_t'),'const.infer_t.Infer_Tuvar_0'),s('type.num.num',X1))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X0),'type.infer_t.infer_t'),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X0),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraints_3'(s('type.list.list'('type.infer_t.infer_t'),sK0),s('type.list.list'('type.infer_t.infer_t'),sK1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))))),s('type.infer_t.infer_t','const.infer_t.Infer_Tuvar_1'(s('type.num.num',X1)))))) ) | $spl0),
  inference(unit_resulting_resolution,[],[f166,f29772,f212])).
fof(f30264,plain,(
  ( ! [X2,X0,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X0),'type.infer_t.infer_t'),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraints_3'(s('type.list.list'('type.infer_t.infer_t'),sK0),s('type.list.list'('type.infer_t.infer_t'),sK1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))),s('type.infer_t.infer_t','const.unify.t_walkstar_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X1),s('type.infer_t.infer_t',X2))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X0),'type.infer_t.infer_t'),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X0),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraints_3'(s('type.list.list'('type.infer_t.infer_t'),sK0),s('type.list.list'('type.infer_t.infer_t'),sK1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))))),s('type.infer_t.infer_t','const.unify.t_walkstar_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X1),s('type.infer_t.infer_t',X2)))))) ) | $spl0),
  inference(forward_demodulation,[],[f30263,f29772])).
fof(f30263,plain,(
  ( ! [X2,X0,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X0),'type.infer_t.infer_t'),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'const.infer.Success_1'(s('type.one.one','const.one.one_0'))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK3))),s('type.infer_t.infer_t','const.unify.t_walkstar_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X1),s('type.infer_t.infer_t',X2))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X0),'type.infer_t.infer_t'),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X0),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraints_3'(s('type.list.list'('type.infer_t.infer_t'),sK0),s('type.list.list'('type.infer_t.infer_t'),sK1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))))),s('type.infer_t.infer_t','const.unify.t_walkstar_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X1),s('type.infer_t.infer_t',X2)))))) ) | $spl0),
  inference(forward_demodulation,[],[f30152,f176])).
fof(f30152,plain,(
  ( ! [X2,X0,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X0),'type.infer_t.infer_t'),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X0),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraints_3'(s('type.list.list'('type.infer_t.infer_t'),sK0),s('type.list.list'('type.infer_t.infer_t'),sK1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))))),s('type.infer_t.infer_t','const.unify.t_walkstar_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X1),s('type.infer_t.infer_t',X2))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X0),'type.infer_t.infer_t'),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'const.infer.Success_1'(s('type.one.one','const.one.one_0'))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK3))),s('type.infer_t.infer_t',happ(s(fun('type.infer_t.infer_t','type.infer_t.infer_t'),happ(s(fun('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),fun('type.infer_t.infer_t','type.infer_t.infer_t')),'const.unify.t_walkstar_0'),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X1))),s('type.infer_t.infer_t',X2)))))) ) | $spl0),
  inference(unit_resulting_resolution,[],[f176,f29772,f212])).
fof(f30262,plain,(
  ( ! [X0] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X0),'type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.infer.read_1'(s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraints_3'(s('type.list.list'('type.infer_t.infer_t'),sK0),s('type.list.list'('type.infer_t.infer_t'),sK1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X0),'type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraints_3'(s('type.list.list'('type.infer_t.infer_t'),sK0),s('type.list.list'('type.infer_t.infer_t'),sK1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))),s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraints_3'(s('type.list.list'('type.infer_t.infer_t'),sK0),s('type.list.list'('type.infer_t.infer_t'),sK1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2)))))) ) | $spl0),
  inference(forward_demodulation,[],[f30261,f29772])).
fof(f30261,plain,(
  ( ! [X0] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X0),'type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.infer.read_1'(s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraints_3'(s('type.list.list'('type.infer_t.infer_t'),sK0),s('type.list.list'('type.infer_t.infer_t'),sK1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X0),'type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'const.infer.Success_1'(s('type.one.one','const.one.one_0'))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK3))),s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'const.infer.Success_1'(s('type.one.one','const.one.one_0'))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK3)))))) ) | $spl0),
  inference(forward_demodulation,[],[f30153,f177])).
fof(f30153,plain,(
  ( ! [X0] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X0),'type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'const.infer.Success_1'(s('type.one.one','const.one.one_0'))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK3))),s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'const.infer.Success_1'(s('type.one.one','const.one.one_0'))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK3))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X0),'type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X0),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraints_3'(s('type.list.list'('type.infer_t.infer_t'),sK0),s('type.list.list'('type.infer_t.infer_t'),sK1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))))),s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraints_3'(s('type.list.list'('type.infer_t.infer_t'),sK0),s('type.list.list'('type.infer_t.infer_t'),sK1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2)))))) ) | $spl0),
  inference(unit_resulting_resolution,[],[f29772,f29772,f212])).
fof(f30258,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X0),'type.pair.prod'('type.infer.exc'(X1,X2),X1)),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraints_3'(s('type.list.list'('type.infer_t.infer_t'),sK0),s('type.list.list'('type.infer_t.infer_t'),sK1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))),s('type.pair.prod'('type.infer.exc'(X1,X2),X1),'const.infer.read_1'(s(X1,X3))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X0),'type.pair.prod'('type.infer.exc'(X1,X2),X1)),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X0),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraints_3'(s('type.list.list'('type.infer_t.infer_t'),sK0),s('type.list.list'('type.infer_t.infer_t'),sK1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))))),s('type.pair.prod'('type.infer.exc'(X1,X2),X1),'const.infer.read_1'(s(X1,X3)))))) ) | $spl0),
  inference(forward_demodulation,[],[f30257,f29772])).
fof(f30257,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X0),'type.pair.prod'('type.infer.exc'(X1,X2),X1)),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'const.infer.Success_1'(s('type.one.one','const.one.one_0'))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK3))),s('type.pair.prod'('type.infer.exc'(X1,X2),X1),'const.infer.read_1'(s(X1,X3))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X0),'type.pair.prod'('type.infer.exc'(X1,X2),X1)),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X0),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraints_3'(s('type.list.list'('type.infer_t.infer_t'),sK0),s('type.list.list'('type.infer_t.infer_t'),sK1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))))),s('type.pair.prod'('type.infer.exc'(X1,X2),X1),'const.infer.read_1'(s(X1,X3)))))) ) | $spl0),
  inference(forward_demodulation,[],[f30155,f178])).
fof(f30155,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X0),'type.pair.prod'('type.infer.exc'(X1,X2),X1)),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'const.infer.Success_1'(s('type.one.one','const.one.one_0'))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK3))),s('type.pair.prod'('type.infer.exc'(X1,X2),X1),happ(s(fun(X1,'type.pair.prod'('type.infer.exc'(X1,X2),X1)),'const.infer.read_0'),s(X1,X3))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X0),'type.pair.prod'('type.infer.exc'(X1,X2),X1)),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X0),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraints_3'(s('type.list.list'('type.infer_t.infer_t'),sK0),s('type.list.list'('type.infer_t.infer_t'),sK1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))))),s('type.pair.prod'('type.infer.exc'(X1,X2),X1),'const.infer.read_1'(s(X1,X3)))))) ) | $spl0),
  inference(unit_resulting_resolution,[],[f178,f29772,f212])).
fof(f30254,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X0),'type.pair.prod'('type.infer.exc'(X1,X2),X3)),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraints_3'(s('type.list.list'('type.infer_t.infer_t'),sK0),s('type.list.list'('type.infer_t.infer_t'),sK1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))),s('type.pair.prod'('type.infer.exc'(X1,X2),X3),'const.infer.st_ex_return_2'(s(X1,X4),s(X3,X5))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X0),'type.pair.prod'('type.infer.exc'(X1,X2),X3)),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X0),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraints_3'(s('type.list.list'('type.infer_t.infer_t'),sK0),s('type.list.list'('type.infer_t.infer_t'),sK1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))))),s('type.pair.prod'('type.infer.exc'(X1,X2),X3),'const.infer.st_ex_return_2'(s(X1,X4),s(X3,X5)))))) ) | $spl0),
  inference(forward_demodulation,[],[f30253,f29772])).
fof(f30253,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X0),'type.pair.prod'('type.infer.exc'(X1,X2),X3)),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'const.infer.Success_1'(s('type.one.one','const.one.one_0'))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK3))),s('type.pair.prod'('type.infer.exc'(X1,X2),X3),'const.infer.st_ex_return_2'(s(X1,X4),s(X3,X5))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X0),'type.pair.prod'('type.infer.exc'(X1,X2),X3)),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X0),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraints_3'(s('type.list.list'('type.infer_t.infer_t'),sK0),s('type.list.list'('type.infer_t.infer_t'),sK1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))))),s('type.pair.prod'('type.infer.exc'(X1,X2),X3),'const.infer.st_ex_return_2'(s(X1,X4),s(X3,X5)))))) ) | $spl0),
  inference(forward_demodulation,[],[f30157,f205])).
fof(f30157,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X0),'type.pair.prod'('type.infer.exc'(X1,X2),X3)),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X0),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraints_3'(s('type.list.list'('type.infer_t.infer_t'),sK0),s('type.list.list'('type.infer_t.infer_t'),sK1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))))),s('type.pair.prod'('type.infer.exc'(X1,X2),X3),'const.infer.st_ex_return_2'(s(X1,X4),s(X3,X5))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X0),'type.pair.prod'('type.infer.exc'(X1,X2),X3)),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'const.infer.Success_1'(s('type.one.one','const.one.one_0'))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK3))),s('type.pair.prod'('type.infer.exc'(X1,X2),X3),happ(s(fun(X3,'type.pair.prod'('type.infer.exc'(X1,X2),X3)),happ(s(fun(X1,fun(X3,'type.pair.prod'('type.infer.exc'(X1,X2),X3))),'const.infer.st_ex_return_0'),s(X1,X4))),s(X3,X5)))))) ) | $spl0),
  inference(unit_resulting_resolution,[],[f205,f29772,f212])).
fof(f30252,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X0),'type.pair.prod'('type.infer.exc'(X1,X2),X3)),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraints_3'(s('type.list.list'('type.infer_t.infer_t'),sK0),s('type.list.list'('type.infer_t.infer_t'),sK1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))),s('type.pair.prod'('type.infer.exc'(X1,X2),X3),'const.infer.st_ex_bind_3'(s(fun(X3,'type.pair.prod'('type.infer.exc'(X4,X2),X3)),X5),s(fun(X4,fun(X3,'type.pair.prod'('type.infer.exc'(X1,X2),X3))),X6),s(X3,X7))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X0),'type.pair.prod'('type.infer.exc'(X1,X2),X3)),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X0),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraints_3'(s('type.list.list'('type.infer_t.infer_t'),sK0),s('type.list.list'('type.infer_t.infer_t'),sK1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))))),s('type.pair.prod'('type.infer.exc'(X1,X2),X3),'const.infer.st_ex_bind_3'(s(fun(X3,'type.pair.prod'('type.infer.exc'(X4,X2),X3)),X5),s(fun(X4,fun(X3,'type.pair.prod'('type.infer.exc'(X1,X2),X3))),X6),s(X3,X7)))))) ) | $spl0),
  inference(forward_demodulation,[],[f30251,f29772])).
fof(f30251,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X0),'type.pair.prod'('type.infer.exc'(X1,X2),X3)),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'const.infer.Success_1'(s('type.one.one','const.one.one_0'))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK3))),s('type.pair.prod'('type.infer.exc'(X1,X2),X3),'const.infer.st_ex_bind_3'(s(fun(X3,'type.pair.prod'('type.infer.exc'(X4,X2),X3)),X5),s(fun(X4,fun(X3,'type.pair.prod'('type.infer.exc'(X1,X2),X3))),X6),s(X3,X7))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X0),'type.pair.prod'('type.infer.exc'(X1,X2),X3)),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X0),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraints_3'(s('type.list.list'('type.infer_t.infer_t'),sK0),s('type.list.list'('type.infer_t.infer_t'),sK1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))))),s('type.pair.prod'('type.infer.exc'(X1,X2),X3),'const.infer.st_ex_bind_3'(s(fun(X3,'type.pair.prod'('type.infer.exc'(X4,X2),X3)),X5),s(fun(X4,fun(X3,'type.pair.prod'('type.infer.exc'(X1,X2),X3))),X6),s(X3,X7)))))) ) | $spl0),
  inference(forward_demodulation,[],[f30158,f254])).
fof(f30158,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X0),'type.pair.prod'('type.infer.exc'(X1,X2),X3)),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'const.infer.Success_1'(s('type.one.one','const.one.one_0'))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK3))),s('type.pair.prod'('type.infer.exc'(X1,X2),X3),happ(s(fun(X3,'type.pair.prod'('type.infer.exc'(X1,X2),X3)),'const.infer.st_ex_bind_2'(s(fun(X3,'type.pair.prod'('type.infer.exc'(X4,X2),X3)),X5),s(fun(X4,fun(X3,'type.pair.prod'('type.infer.exc'(X1,X2),X3))),X6))),s(X3,X7))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X0),'type.pair.prod'('type.infer.exc'(X1,X2),X3)),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X0),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraints_3'(s('type.list.list'('type.infer_t.infer_t'),sK0),s('type.list.list'('type.infer_t.infer_t'),sK1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))))),s('type.pair.prod'('type.infer.exc'(X1,X2),X3),'const.infer.st_ex_bind_3'(s(fun(X3,'type.pair.prod'('type.infer.exc'(X4,X2),X3)),X5),s(fun(X4,fun(X3,'type.pair.prod'('type.infer.exc'(X1,X2),X3))),X6),s(X3,X7)))))) ) | $spl0),
  inference(unit_resulting_resolution,[],[f254,f29772,f212])).
fof(f30250,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X0),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X1),'type.infer.infer_st'(X2))),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraints_3'(s('type.list.list'('type.infer_t.infer_t'),sK0),s('type.list.list'('type.infer_t.infer_t'),sK1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))),s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X1),'type.infer.infer_st'(X2)),'const.infer.fresh_uvar_1'(s('type.infer.infer_st'(X2),X3))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X0),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X1),'type.infer.infer_st'(X2))),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X0),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraints_3'(s('type.list.list'('type.infer_t.infer_t'),sK0),s('type.list.list'('type.infer_t.infer_t'),sK1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))))),s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X1),'type.infer.infer_st'(X2)),'const.infer.fresh_uvar_1'(s('type.infer.infer_st'(X2),X3)))))) ) | $spl0),
  inference(forward_demodulation,[],[f30249,f29772])).
fof(f30249,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X0),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X1),'type.infer.infer_st'(X2))),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'const.infer.Success_1'(s('type.one.one','const.one.one_0'))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK3))),s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X1),'type.infer.infer_st'(X2)),'const.infer.fresh_uvar_1'(s('type.infer.infer_st'(X2),X3))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X0),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X1),'type.infer.infer_st'(X2))),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X0),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraints_3'(s('type.list.list'('type.infer_t.infer_t'),sK0),s('type.list.list'('type.infer_t.infer_t'),sK1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))))),s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X1),'type.infer.infer_st'(X2)),'const.infer.fresh_uvar_1'(s('type.infer.infer_st'(X2),X3)))))) ) | $spl0),
  inference(forward_demodulation,[],[f30159,f179])).
fof(f30159,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X0),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X1),'type.infer.infer_st'(X2))),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'const.infer.Success_1'(s('type.one.one','const.one.one_0'))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK3))),s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X1),'type.infer.infer_st'(X2)),happ(s(fun('type.infer.infer_st'(X2),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X1),'type.infer.infer_st'(X2))),'const.infer.fresh_uvar_0'),s('type.infer.infer_st'(X2),X3))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X0),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X1),'type.infer.infer_st'(X2))),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X0),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraints_3'(s('type.list.list'('type.infer_t.infer_t'),sK0),s('type.list.list'('type.infer_t.infer_t'),sK1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))))),s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X1),'type.infer.infer_st'(X2)),'const.infer.fresh_uvar_1'(s('type.infer.infer_st'(X2),X3)))))) ) | $spl0),
  inference(unit_resulting_resolution,[],[f179,f29772,f212])).
fof(f30248,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X0),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X1),'type.infer.infer_st'(X2))),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraints_3'(s('type.list.list'('type.infer_t.infer_t'),sK0),s('type.list.list'('type.infer_t.infer_t'),sK1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))),s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X1),'type.infer.infer_st'(X2)),'const.infer.n_fresh_uvar_2'(s('type.num.num',X3),s('type.infer.infer_st'(X2),X4))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X0),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X1),'type.infer.infer_st'(X2))),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X0),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraints_3'(s('type.list.list'('type.infer_t.infer_t'),sK0),s('type.list.list'('type.infer_t.infer_t'),sK1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))))),s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X1),'type.infer.infer_st'(X2)),'const.infer.n_fresh_uvar_2'(s('type.num.num',X3),s('type.infer.infer_st'(X2),X4)))))) ) | $spl0),
  inference(forward_demodulation,[],[f30247,f29772])).
fof(f30247,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X0),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X1),'type.infer.infer_st'(X2))),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'const.infer.Success_1'(s('type.one.one','const.one.one_0'))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK3))),s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X1),'type.infer.infer_st'(X2)),'const.infer.n_fresh_uvar_2'(s('type.num.num',X3),s('type.infer.infer_st'(X2),X4))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X0),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X1),'type.infer.infer_st'(X2))),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X0),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraints_3'(s('type.list.list'('type.infer_t.infer_t'),sK0),s('type.list.list'('type.infer_t.infer_t'),sK1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))))),s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X1),'type.infer.infer_st'(X2)),'const.infer.n_fresh_uvar_2'(s('type.num.num',X3),s('type.infer.infer_st'(X2),X4)))))) ) | $spl0),
  inference(forward_demodulation,[],[f30160,f181])).
fof(f30160,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X0),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X1),'type.infer.infer_st'(X2))),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X0),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraints_3'(s('type.list.list'('type.infer_t.infer_t'),sK0),s('type.list.list'('type.infer_t.infer_t'),sK1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))))),s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X1),'type.infer.infer_st'(X2)),'const.infer.n_fresh_uvar_2'(s('type.num.num',X3),s('type.infer.infer_st'(X2),X4))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X0),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X1),'type.infer.infer_st'(X2))),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'const.infer.Success_1'(s('type.one.one','const.one.one_0'))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK3))),s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X1),'type.infer.infer_st'(X2)),happ(s(fun('type.infer.infer_st'(X2),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X1),'type.infer.infer_st'(X2))),happ(s(fun('type.num.num',fun('type.infer.infer_st'(X2),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X1),'type.infer.infer_st'(X2)))),'const.infer.n_fresh_uvar_0'),s('type.num.num',X3))),s('type.infer.infer_st'(X2),X4)))))) ) | $spl0),
  inference(unit_resulting_resolution,[],[f181,f29772,f212])).
fof(f30246,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X0),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X1),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraints_3'(s('type.list.list'('type.infer_t.infer_t'),sK0),s('type.list.list'('type.infer_t.infer_t'),sK1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))),s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X1),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.apply_subst_2'(s('type.infer_t.infer_t',X2),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X3))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X0),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X1),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X0),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraints_3'(s('type.list.list'('type.infer_t.infer_t'),sK0),s('type.list.list'('type.infer_t.infer_t'),sK1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))))),s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X1),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.apply_subst_2'(s('type.infer_t.infer_t',X2),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X3)))))) ) | $spl0),
  inference(forward_demodulation,[],[f30245,f29772])).
fof(f30245,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X0),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X1),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'const.infer.Success_1'(s('type.one.one','const.one.one_0'))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK3))),s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X1),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.apply_subst_2'(s('type.infer_t.infer_t',X2),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X3))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X0),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X1),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X0),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraints_3'(s('type.list.list'('type.infer_t.infer_t'),sK0),s('type.list.list'('type.infer_t.infer_t'),sK1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))))),s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X1),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.apply_subst_2'(s('type.infer_t.infer_t',X2),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X3)))))) ) | $spl0),
  inference(forward_demodulation,[],[f30161,f171])).
fof(f30161,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X0),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X1),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X0),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraints_3'(s('type.list.list'('type.infer_t.infer_t'),sK0),s('type.list.list'('type.infer_t.infer_t'),sK1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))))),s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X1),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.apply_subst_2'(s('type.infer_t.infer_t',X2),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X3))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X0),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X1),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'const.infer.Success_1'(s('type.one.one','const.one.one_0'))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK3))),s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X1),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),happ(s(fun('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X1),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.infer.apply_subst_1'(s('type.infer_t.infer_t',X2))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X3)))))) ) | $spl0),
  inference(unit_resulting_resolution,[],[f171,f29772,f212])).
fof(f30244,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X0),'type.pair.prod'('type.infer.exc'(X1,X2),X3)),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraints_3'(s('type.list.list'('type.infer_t.infer_t'),sK0),s('type.list.list'('type.infer_t.infer_t'),sK1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))),s('type.pair.prod'('type.infer.exc'(X1,X2),X3),'const.infer.failwith_2'(s(X2,X4),s(X3,X5))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X0),'type.pair.prod'('type.infer.exc'(X1,X2),X3)),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X0),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraints_3'(s('type.list.list'('type.infer_t.infer_t'),sK0),s('type.list.list'('type.infer_t.infer_t'),sK1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))))),s('type.pair.prod'('type.infer.exc'(X1,X2),X3),'const.infer.failwith_2'(s(X2,X4),s(X3,X5)))))) ) | $spl0),
  inference(forward_demodulation,[],[f30243,f29772])).
fof(f30243,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X0),'type.pair.prod'('type.infer.exc'(X1,X2),X3)),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'const.infer.Success_1'(s('type.one.one','const.one.one_0'))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK3))),s('type.pair.prod'('type.infer.exc'(X1,X2),X3),'const.infer.failwith_2'(s(X2,X4),s(X3,X5))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X0),'type.pair.prod'('type.infer.exc'(X1,X2),X3)),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X0),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraints_3'(s('type.list.list'('type.infer_t.infer_t'),sK0),s('type.list.list'('type.infer_t.infer_t'),sK1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))))),s('type.pair.prod'('type.infer.exc'(X1,X2),X3),'const.infer.failwith_2'(s(X2,X4),s(X3,X5)))))) ) | $spl0),
  inference(forward_demodulation,[],[f30162,f204])).
fof(f30162,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X0),'type.pair.prod'('type.infer.exc'(X1,X2),X3)),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'const.infer.Success_1'(s('type.one.one','const.one.one_0'))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK3))),s('type.pair.prod'('type.infer.exc'(X1,X2),X3),happ(s(fun(X3,'type.pair.prod'('type.infer.exc'(X1,X2),X3)),'const.infer.failwith_1'(s(X2,X4))),s(X3,X5))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X0),'type.pair.prod'('type.infer.exc'(X1,X2),X3)),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X0),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraints_3'(s('type.list.list'('type.infer_t.infer_t'),sK0),s('type.list.list'('type.infer_t.infer_t'),sK1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))))),s('type.pair.prod'('type.infer.exc'(X1,X2),X3),'const.infer.failwith_2'(s(X2,X4),s(X3,X5)))))) ) | $spl0),
  inference(unit_resulting_resolution,[],[f204,f29772,f212])).
fof(f30242,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X0),'type.pair.prod'('type.infer.exc'(X1,'type.list.list'('type.string.char')),X2)),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraints_3'(s('type.list.list'('type.infer_t.infer_t'),sK0),s('type.list.list'('type.infer_t.infer_t'),sK1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))),s('type.pair.prod'('type.infer.exc'(X1,'type.list.list'('type.string.char')),X2),'const.infer.lookup_st_ex_4'(s(fun(X3,'type.list.list'('type.string.char')),X4),s(X3,X5),s('type.list.list'('type.pair.prod'(X3,X1)),X6),s(X2,X7))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X0),'type.pair.prod'('type.infer.exc'(X1,'type.list.list'('type.string.char')),X2)),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X0),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraints_3'(s('type.list.list'('type.infer_t.infer_t'),sK0),s('type.list.list'('type.infer_t.infer_t'),sK1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))))),s('type.pair.prod'('type.infer.exc'(X1,'type.list.list'('type.string.char')),X2),'const.infer.lookup_st_ex_4'(s(fun(X3,'type.list.list'('type.string.char')),X4),s(X3,X5),s('type.list.list'('type.pair.prod'(X3,X1)),X6),s(X2,X7)))))) ) | $spl0),
  inference(forward_demodulation,[],[f30241,f29772])).
fof(f30241,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X0),'type.pair.prod'('type.infer.exc'(X1,'type.list.list'('type.string.char')),X2)),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'const.infer.Success_1'(s('type.one.one','const.one.one_0'))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK3))),s('type.pair.prod'('type.infer.exc'(X1,'type.list.list'('type.string.char')),X2),'const.infer.lookup_st_ex_4'(s(fun(X3,'type.list.list'('type.string.char')),X4),s(X3,X5),s('type.list.list'('type.pair.prod'(X3,X1)),X6),s(X2,X7))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X0),'type.pair.prod'('type.infer.exc'(X1,'type.list.list'('type.string.char')),X2)),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X0),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraints_3'(s('type.list.list'('type.infer_t.infer_t'),sK0),s('type.list.list'('type.infer_t.infer_t'),sK1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))))),s('type.pair.prod'('type.infer.exc'(X1,'type.list.list'('type.string.char')),X2),'const.infer.lookup_st_ex_4'(s(fun(X3,'type.list.list'('type.string.char')),X4),s(X3,X5),s('type.list.list'('type.pair.prod'(X3,X1)),X6),s(X2,X7)))))) ) | $spl0),
  inference(forward_demodulation,[],[f30163,f207])).
fof(f30163,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X0),'type.pair.prod'('type.infer.exc'(X1,'type.list.list'('type.string.char')),X2)),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'const.infer.Success_1'(s('type.one.one','const.one.one_0'))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK3))),s('type.pair.prod'('type.infer.exc'(X1,'type.list.list'('type.string.char')),X2),happ(s(fun(X2,'type.pair.prod'('type.infer.exc'(X1,'type.list.list'('type.string.char')),X2)),'const.infer.lookup_st_ex_3'(s(fun(X3,'type.list.list'('type.string.char')),X4),s(X3,X5),s('type.list.list'('type.pair.prod'(X3,X1)),X6))),s(X2,X7))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X0),'type.pair.prod'('type.infer.exc'(X1,'type.list.list'('type.string.char')),X2)),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X0),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraints_3'(s('type.list.list'('type.infer_t.infer_t'),sK0),s('type.list.list'('type.infer_t.infer_t'),sK1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))))),s('type.pair.prod'('type.infer.exc'(X1,'type.list.list'('type.string.char')),X2),'const.infer.lookup_st_ex_4'(s(fun(X3,'type.list.list'('type.string.char')),X4),s(X3,X5),s('type.list.list'('type.pair.prod'(X3,X1)),X6),s(X2,X7)))))) ) | $spl0),
  inference(unit_resulting_resolution,[],[f207,f29772,f212])).
fof(f30240,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X0),'type.pair.prod'('type.infer.exc'('type.one.one',X1),X2)),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraints_3'(s('type.list.list'('type.infer_t.infer_t'),sK0),s('type.list.list'('type.infer_t.infer_t'),sK1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))),s('type.pair.prod'('type.infer.exc'('type.one.one',X1),X2),'const.infer.guard_3'(s(bool,X3),s(X1,X4),s(X2,X5))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X0),'type.pair.prod'('type.infer.exc'('type.one.one',X1),X2)),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X0),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraints_3'(s('type.list.list'('type.infer_t.infer_t'),sK0),s('type.list.list'('type.infer_t.infer_t'),sK1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))))),s('type.pair.prod'('type.infer.exc'('type.one.one',X1),X2),'const.infer.guard_3'(s(bool,X3),s(X1,X4),s(X2,X5)))))) ) | $spl0),
  inference(forward_demodulation,[],[f30239,f29772])).
fof(f30239,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X0),'type.pair.prod'('type.infer.exc'('type.one.one',X1),X2)),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'const.infer.Success_1'(s('type.one.one','const.one.one_0'))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK3))),s('type.pair.prod'('type.infer.exc'('type.one.one',X1),X2),'const.infer.guard_3'(s(bool,X3),s(X1,X4),s(X2,X5))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X0),'type.pair.prod'('type.infer.exc'('type.one.one',X1),X2)),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X0),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraints_3'(s('type.list.list'('type.infer_t.infer_t'),sK0),s('type.list.list'('type.infer_t.infer_t'),sK1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))))),s('type.pair.prod'('type.infer.exc'('type.one.one',X1),X2),'const.infer.guard_3'(s(bool,X3),s(X1,X4),s(X2,X5)))))) ) | $spl0),
  inference(forward_demodulation,[],[f30164,f183])).
fof(f30164,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X0),'type.pair.prod'('type.infer.exc'('type.one.one',X1),X2)),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'const.infer.Success_1'(s('type.one.one','const.one.one_0'))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK3))),s('type.pair.prod'('type.infer.exc'('type.one.one',X1),X2),happ(s(fun(X2,'type.pair.prod'('type.infer.exc'('type.one.one',X1),X2)),'const.infer.guard_2'(s(bool,X3),s(X1,X4))),s(X2,X5))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X0),'type.pair.prod'('type.infer.exc'('type.one.one',X1),X2)),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X0),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraints_3'(s('type.list.list'('type.infer_t.infer_t'),sK0),s('type.list.list'('type.infer_t.infer_t'),sK1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))))),s('type.pair.prod'('type.infer.exc'('type.one.one',X1),X2),'const.infer.guard_3'(s(bool,X3),s(X1,X4),s(X2,X5)))))) ) | $spl0),
  inference(unit_resulting_resolution,[],[f183,f29772,f212])).
fof(f29782,plain,(
  ( ! [X0] : (s(bool,X0) = s(bool,'const.infer.pure_add_constraints_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),'const.list.ZIP_1'(s('type.pair.prod'('type.list.list'('type.infer_t.infer_t'),'type.list.list'('type.infer_t.infer_t')),'const.pair.,_2'(s('type.list.list'('type.infer_t.infer_t'),sK0),s('type.list.list'('type.infer_t.infer_t'),sK1))))),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK3))))) | s(bool,'T_0') = s(bool,X0)) ) | $spl9),
  inference(subsumption_resolution,[],[f29776,f163])).
fof(f29776,plain,(
  ( ! [X0] : (~p(s(bool,'T_0')) | s(bool,X0) = s(bool,'const.infer.pure_add_constraints_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),'const.list.ZIP_1'(s('type.pair.prod'('type.list.list'('type.infer_t.infer_t'),'type.list.list'('type.infer_t.infer_t')),'const.pair.,_2'(s('type.list.list'('type.infer_t.infer_t'),sK0),s('type.list.list'('type.infer_t.infer_t'),sK1))))),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK3))))) | s(bool,'T_0') = s(bool,X0)) ) | $spl9),
  inference(superposition,[],[f249,f272])).
fof(f29242,plain,(
  ( ! [X397,X399,X401,X403,X396,X398,X404,X400,X402] : (s('type.option.option'(X398),'const.option.SOME_1'(s(X398,X399))) != s('type.option.option'(X398),'const.finite_map.FLOOKUP_2'(s('type.finite_map.fmap'('type.one.one',X398),X400),s('type.one.one',X397))) | s(X401,X402) != s(X401,X403) | s('type.pair.prod'('type.infer.exc'(X398,'type.list.list'('type.string.char')),X401),'const.pair.,_2'(s('type.infer.exc'(X398,'type.list.list'('type.string.char')),'const.infer.Success_1'(s(X398,X399))),s(X401,X403))) = s('type.pair.prod'('type.infer.exc'(X398,'type.list.list'('type.string.char')),X401),'const.infer.flookup_st_ex_4'(s(fun('type.one.one','type.list.list'('type.string.char')),X404),s('type.one.one',X396),s('type.finite_map.fmap'('type.one.one',X398),X400),s(X401,X402)))) )),
  inference(superposition,[],[f215,f258])).
fof(f29241,plain,(
  ( ! [X389,X391,X393,X395,X388,X390,X392,X394] : (s('type.option.option'(X389),'const.option.SOME_1'(s(X389,X390))) != s('type.option.option'(X389),'const.finite_map.FLOOKUP_2'(s('type.finite_map.fmap'('type.one.one',X389),X391),s('type.one.one',X388))) | s(X392,X393) != s(X392,X394) | s('type.pair.prod'('type.infer.exc'(X389,'type.list.list'('type.string.char')),X392),'const.pair.,_2'(s('type.infer.exc'(X389,'type.list.list'('type.string.char')),'const.infer.Success_1'(s(X389,X390))),s(X392,X394))) = s('type.pair.prod'('type.infer.exc'(X389,'type.list.list'('type.string.char')),X392),'const.infer.flookup_st_ex_4'(s(fun('type.one.one','type.list.list'('type.string.char')),X395),s('type.one.one','const.one.one_0'),s('type.finite_map.fmap'('type.one.one',X389),X391),s(X392,X393)))) )),
  inference(superposition,[],[f215,f165])).
fof(f29234,plain,(
  ( ! [X315,X325,X327,X321,X323,X316,X318,X324,X326,X320,X322,X328,X317,X319] : (s('type.option.option'(X322),'const.option.SOME_1'(s(X322,X323))) != s('type.option.option'(X322),'const.finite_map.FLOOKUP_2'(s('type.finite_map.fmap'(fun(X315,fun(X316,fun(X317,fun(X318,fun(X319,'type.one.one'))))),X322),X324),s(fun(X315,fun(X316,fun(X317,fun(X318,fun(X319,'type.one.one'))))),X321))) | s(X325,X326) != s(X325,X327) | s('type.pair.prod'('type.infer.exc'(X322,'type.list.list'('type.string.char')),X325),'const.pair.,_2'(s('type.infer.exc'(X322,'type.list.list'('type.string.char')),'const.infer.Success_1'(s(X322,X323))),s(X325,X327))) = s('type.pair.prod'('type.infer.exc'(X322,'type.list.list'('type.string.char')),X325),'const.infer.flookup_st_ex_4'(s(fun(fun(X315,fun(X316,fun(X317,fun(X318,fun(X319,'type.one.one'))))),'type.list.list'('type.string.char')),X328),s(fun(X315,fun(X316,fun(X317,fun(X318,fun(X319,'type.one.one'))))),X320),s('type.finite_map.fmap'(fun(X315,fun(X316,fun(X317,fun(X318,fun(X319,'type.one.one'))))),X322),X324),s(X325,X326)))) )),
  inference(superposition,[],[f215,f815])).
fof(f29232,plain,(
  ( ! [X292,X294,X290,X300,X296,X298,X293,X295,X289,X291,X301,X297,X299] : (s('type.option.option'(X295),'const.option.SOME_1'(s(X295,X296))) != s('type.option.option'(X295),'const.finite_map.FLOOKUP_2'(s('type.finite_map.fmap'(fun(X289,fun(X290,fun(X291,fun(X292,'type.one.one')))),X295),X297),s(fun(X289,fun(X290,fun(X291,fun(X292,'type.one.one')))),X294))) | s(X298,X299) != s(X298,X300) | s('type.pair.prod'('type.infer.exc'(X295,'type.list.list'('type.string.char')),X298),'const.pair.,_2'(s('type.infer.exc'(X295,'type.list.list'('type.string.char')),'const.infer.Success_1'(s(X295,X296))),s(X298,X300))) = s('type.pair.prod'('type.infer.exc'(X295,'type.list.list'('type.string.char')),X298),'const.infer.flookup_st_ex_4'(s(fun(fun(X289,fun(X290,fun(X291,fun(X292,'type.one.one')))),'type.list.list'('type.string.char')),X301),s(fun(X289,fun(X290,fun(X291,fun(X292,'type.one.one')))),X293),s('type.finite_map.fmap'(fun(X289,fun(X290,fun(X291,fun(X292,'type.one.one')))),X295),X297),s(X298,X299)))) )),
  inference(superposition,[],[f215,f787])).
fof(f29230,plain,(
  ( ! [X269,X271,X265,X267,X273,X275,X268,X270,X266,X276,X272,X274] : (s('type.option.option'(X270),'const.option.SOME_1'(s(X270,X271))) != s('type.option.option'(X270),'const.finite_map.FLOOKUP_2'(s('type.finite_map.fmap'(fun(X265,fun(X266,fun(X267,'type.one.one'))),X270),X272),s(fun(X265,fun(X266,fun(X267,'type.one.one'))),X269))) | s(X273,X274) != s(X273,X275) | s('type.pair.prod'('type.infer.exc'(X270,'type.list.list'('type.string.char')),X273),'const.pair.,_2'(s('type.infer.exc'(X270,'type.list.list'('type.string.char')),'const.infer.Success_1'(s(X270,X271))),s(X273,X275))) = s('type.pair.prod'('type.infer.exc'(X270,'type.list.list'('type.string.char')),X273),'const.infer.flookup_st_ex_4'(s(fun(fun(X265,fun(X266,fun(X267,'type.one.one'))),'type.list.list'('type.string.char')),X276),s(fun(X265,fun(X266,fun(X267,'type.one.one'))),X268),s('type.finite_map.fmap'(fun(X265,fun(X266,fun(X267,'type.one.one'))),X270),X272),s(X273,X274)))) )),
  inference(superposition,[],[f215,f752])).
fof(f29228,plain,(
  ( ! [X243,X253,X251,X249,X246,X244,X252,X250,X248,X247,X245] : (s('type.option.option'(X247),'const.option.SOME_1'(s(X247,X248))) != s('type.option.option'(X247),'const.finite_map.FLOOKUP_2'(s('type.finite_map.fmap'(fun(X243,fun(X244,'type.one.one')),X247),X249),s(fun(X243,fun(X244,'type.one.one')),X246))) | s(X250,X251) != s(X250,X252) | s('type.pair.prod'('type.infer.exc'(X247,'type.list.list'('type.string.char')),X250),'const.pair.,_2'(s('type.infer.exc'(X247,'type.list.list'('type.string.char')),'const.infer.Success_1'(s(X247,X248))),s(X250,X252))) = s('type.pair.prod'('type.infer.exc'(X247,'type.list.list'('type.string.char')),X250),'const.infer.flookup_st_ex_4'(s(fun(fun(X243,fun(X244,'type.one.one')),'type.list.list'('type.string.char')),X253),s(fun(X243,fun(X244,'type.one.one')),X245),s('type.finite_map.fmap'(fun(X243,fun(X244,'type.one.one')),X247),X249),s(X250,X251)))) )),
  inference(superposition,[],[f215,f724])).
fof(f29224,plain,(
  ( ! [X212,X210,X208,X206,X204,X211,X209,X207,X205,X203] : (s('type.option.option'(X206),'const.option.SOME_1'(s(X206,X207))) != s('type.option.option'(X206),'const.finite_map.FLOOKUP_2'(s('type.finite_map.fmap'(fun(X203,'type.one.one'),X206),X208),s(fun(X203,'type.one.one'),X205))) | s(X209,X210) != s(X209,X211) | s('type.pair.prod'('type.infer.exc'(X206,'type.list.list'('type.string.char')),X209),'const.pair.,_2'(s('type.infer.exc'(X206,'type.list.list'('type.string.char')),'const.infer.Success_1'(s(X206,X207))),s(X209,X211))) = s('type.pair.prod'('type.infer.exc'(X206,'type.list.list'('type.string.char')),X209),'const.infer.flookup_st_ex_4'(s(fun(fun(X203,'type.one.one'),'type.list.list'('type.string.char')),X212),s(fun(X203,'type.one.one'),X204),s('type.finite_map.fmap'(fun(X203,'type.one.one'),X206),X208),s(X209,X210)))) )),
  inference(superposition,[],[f215,f605])).
fof(f29221,plain,(
  ( ! [X185,X182,X180,X186,X184,X183,X181,X179] : (s('type.option.option'(X180),'const.option.SOME_1'(s(X180,X181))) != s('type.option.option'(X180),'const.finite_map.FLOOKUP_2'(s('type.finite_map.fmap'(bool,X180),X182),s(bool,X179))) | s(X183,X184) != s(X183,X185) | s('type.pair.prod'('type.infer.exc'(X180,'type.list.list'('type.string.char')),X183),'const.pair.,_2'(s('type.infer.exc'(X180,'type.list.list'('type.string.char')),'const.infer.Success_1'(s(X180,X181))),s(X183,X185))) = s('type.pair.prod'('type.infer.exc'(X180,'type.list.list'('type.string.char')),X183),'const.infer.flookup_st_ex_4'(s(fun(bool,'type.list.list'('type.string.char')),X186),s(bool,'F_0'),s('type.finite_map.fmap'(bool,X180),X182),s(X183,X184))) | s(bool,'T_0') = s(bool,X179)) )),
  inference(superposition,[],[f215,f167])).
fof(f29219,plain,(
  ( ! [X167,X165,X163,X161,X169,X166,X164,X162,X168] : (s('type.option.option'(X162),'const.option.SOME_1'(s(X162,X163))) != s('type.option.option'(X162),'const.finite_map.FLOOKUP_2'(s('type.finite_map.fmap'(bool,X162),X164),s(bool,X161))) | s(X165,X166) != s(X165,X167) | s('type.pair.prod'('type.infer.exc'(X162,'type.list.list'('type.string.char')),X165),'const.pair.,_2'(s('type.infer.exc'(X162,'type.list.list'('type.string.char')),'const.infer.Success_1'(s(X162,X163))),s(X165,X167))) = s('type.pair.prod'('type.infer.exc'(X162,'type.list.list'('type.string.char')),X165),'const.infer.flookup_st_ex_4'(s(fun(bool,'type.list.list'('type.string.char')),X168),s(bool,'T_0'),s('type.finite_map.fmap'(bool,X162),X164),s(X165,X166))) | s(bool,X161) = s(bool,X169) | s(bool,'T_0') = s(bool,X169)) )),
  inference(superposition,[],[f215,f272])).
fof(f29212,plain,(
  ( ! [X94,X101,X99,X97,X95,X102,X100,X98,X96] : (s('type.option.option'(X96),'const.option.SOME_1'(s(X96,X97))) != s('type.option.option'(X96),'const.finite_map.FLOOKUP_2'(s('type.finite_map.fmap'(bool,X96),X98),s(bool,X95))) | s(X99,X100) != s(X99,X101) | s('type.pair.prod'('type.infer.exc'(X96,'type.list.list'('type.string.char')),X99),'const.pair.,_2'(s('type.infer.exc'(X96,'type.list.list'('type.string.char')),'const.infer.Success_1'(s(X96,X97))),s(X99,X101))) = s('type.pair.prod'('type.infer.exc'(X96,'type.list.list'('type.string.char')),X99),'const.infer.flookup_st_ex_4'(s(fun(bool,'type.list.list'('type.string.char')),X102),s(bool,X94),s('type.finite_map.fmap'(bool,X96),X98),s(X99,X100))) | s(bool,'T_0') = s(bool,X95) | s(bool,'T_0') = s(bool,X94)) )),
  inference(superposition,[],[f215,f272])).
fof(f29211,plain,(
  ( ! [X92,X90,X88,X87,X85,X93,X91,X89,X86] : (s('type.option.option'(X86),'const.option.SOME_1'(s(X86,X87))) != s('type.option.option'(X86),'const.finite_map.FLOOKUP_2'(s('type.finite_map.fmap'(bool,X86),X88),s(bool,'T_0'))) | s(X89,X90) != s(X89,X91) | s('type.pair.prod'('type.infer.exc'(X86,'type.list.list'('type.string.char')),X89),'const.pair.,_2'(s('type.infer.exc'(X86,'type.list.list'('type.string.char')),'const.infer.Success_1'(s(X86,X87))),s(X89,X91))) = s('type.pair.prod'('type.infer.exc'(X86,'type.list.list'('type.string.char')),X89),'const.infer.flookup_st_ex_4'(s(fun(bool,'type.list.list'('type.string.char')),X92),s(bool,X85),s('type.finite_map.fmap'(bool,X86),X88),s(X89,X90))) | s(bool,X85) = s(bool,X93) | s(bool,'T_0') = s(bool,X93)) )),
  inference(superposition,[],[f215,f272])).
fof(f29210,plain,(
  ( ! [X80,X78,X83,X81,X79,X77,X84,X82] : (s('type.option.option'(X78),'const.option.SOME_1'(s(X78,X79))) != s('type.option.option'(X78),'const.finite_map.FLOOKUP_2'(s('type.finite_map.fmap'(bool,X78),X80),s(bool,'F_0'))) | s(X81,X82) != s(X81,X83) | s('type.pair.prod'('type.infer.exc'(X78,'type.list.list'('type.string.char')),X81),'const.pair.,_2'(s('type.infer.exc'(X78,'type.list.list'('type.string.char')),'const.infer.Success_1'(s(X78,X79))),s(X81,X83))) = s('type.pair.prod'('type.infer.exc'(X78,'type.list.list'('type.string.char')),X81),'const.infer.flookup_st_ex_4'(s(fun(bool,'type.list.list'('type.string.char')),X84),s(bool,X77),s('type.finite_map.fmap'(bool,X78),X80),s(X81,X82))) | s(bool,'T_0') = s(bool,X77)) )),
  inference(superposition,[],[f215,f167])).
fof(f29208,plain,(
  ( ! [X61,X59,X57,X64,X54,X52,X50,X62,X60,X58,X56,X55,X53,X51,X63] : (s('type.option.option'(X58),'const.option.SOME_1'(s(X58,X59))) != s('type.option.option'(X58),'const.finite_map.FLOOKUP_2'(s('type.finite_map.fmap'(X50,X58),X60),s(X50,happ(s(fun(X54,X50),'_dst_x0x1x0_3'(s(fun(X52,fun(X51,X50)),X53),s(fun(X54,X52),X55),s(X51,X57))),s(X54,X56))))) | s(X61,X62) != s(X61,X63) | s('type.pair.prod'('type.infer.exc'(X58,'type.list.list'('type.string.char')),X61),'const.pair.,_2'(s('type.infer.exc'(X58,'type.list.list'('type.string.char')),'const.infer.Success_1'(s(X58,X59))),s(X61,X63))) = s('type.pair.prod'('type.infer.exc'(X58,'type.list.list'('type.string.char')),X61),'const.infer.flookup_st_ex_4'(s(fun(X50,'type.list.list'('type.string.char')),X64),s(X50,happ(s(fun(X51,X50),happ(s(fun(X52,fun(X51,X50)),X53),s(X52,happ(s(fun(X54,X52),X55),s(X54,X56))))),s(X51,X57))),s('type.finite_map.fmap'(X50,X58),X60),s(X61,X62)))) )),
  inference(superposition,[],[f215,f221])).
fof(f29207,plain,(
  ( ! [X39,X37,X35,X47,X45,X43,X41,X48,X38,X36,X46,X44,X42,X40,X49] : (s('type.option.option'(X43),'const.option.SOME_1'(s(X43,X44))) != s('type.option.option'(X43),'const.finite_map.FLOOKUP_2'(s('type.finite_map.fmap'(X35,X43),X45),s(X35,happ(s(fun(X38,X35),happ(s(fun(X37,fun(X38,X35)),X39),s(X37,happ(s(fun(X36,X37),X40),s(X36,X42))))),s(X38,X41))))) | s(X46,X47) != s(X46,X48) | s('type.pair.prod'('type.infer.exc'(X43,'type.list.list'('type.string.char')),X46),'const.pair.,_2'(s('type.infer.exc'(X43,'type.list.list'('type.string.char')),'const.infer.Success_1'(s(X43,X44))),s(X46,X48))) = s('type.pair.prod'('type.infer.exc'(X43,'type.list.list'('type.string.char')),X46),'const.infer.flookup_st_ex_4'(s(fun(X35,'type.list.list'('type.string.char')),X49),s(X35,happ(s(fun(X36,X35),'_dst_x0x1x0_3'(s(fun(X37,fun(X38,X35)),X39),s(fun(X36,X37),X40),s(X38,X41))),s(X36,X42))),s('type.finite_map.fmap'(X35,X43),X45),s(X46,X47)))) )),
  inference(superposition,[],[f215,f221])).
fof(f29206,plain,(
  ( ! [X30,X28,X26,X24,X33,X23,X31,X29,X27,X25,X34,X32,X22] : (s('type.option.option'(X28),'const.option.SOME_1'(s(X28,X29))) != s('type.option.option'(X28),'const.finite_map.FLOOKUP_2'(s('type.finite_map.fmap'(X22,X28),X30),s(X22,happ(s(fun(X24,X22),X25),s(X24,happ(s(fun(X23,X24),X26),s(X23,X27))))))) | s(X31,X32) != s(X31,X33) | s('type.pair.prod'('type.infer.exc'(X28,'type.list.list'('type.string.char')),X31),'const.pair.,_2'(s('type.infer.exc'(X28,'type.list.list'('type.string.char')),'const.infer.Success_1'(s(X28,X29))),s(X31,X33))) = s('type.pair.prod'('type.infer.exc'(X28,'type.list.list'('type.string.char')),X31),'const.infer.flookup_st_ex_4'(s(fun(X22,'type.list.list'('type.string.char')),X34),s(X22,happ(s(fun(X23,X22),'_dst_x0x1_2'(s(fun(X24,X22),X25),s(fun(X23,X24),X26))),s(X23,X27))),s('type.finite_map.fmap'(X22,X28),X30),s(X31,X32)))) )),
  inference(superposition,[],[f215,f206])).
fof(f29205,plain,(
  ( ! [X14,X12,X10,X21,X19,X17,X15,X13,X11,X9,X20,X18,X16] : (s('type.option.option'(X15),'const.option.SOME_1'(s(X15,X16))) != s('type.option.option'(X15),'const.finite_map.FLOOKUP_2'(s('type.finite_map.fmap'(X9,X15),X17),s(X9,happ(s(fun(X12,X9),'_dst_x0x1_2'(s(fun(X10,X9),X11),s(fun(X12,X10),X13))),s(X12,X14))))) | s(X18,X19) != s(X18,X20) | s('type.pair.prod'('type.infer.exc'(X15,'type.list.list'('type.string.char')),X18),'const.pair.,_2'(s('type.infer.exc'(X15,'type.list.list'('type.string.char')),'const.infer.Success_1'(s(X15,X16))),s(X18,X20))) = s('type.pair.prod'('type.infer.exc'(X15,'type.list.list'('type.string.char')),X18),'const.infer.flookup_st_ex_4'(s(fun(X9,'type.list.list'('type.string.char')),X21),s(X9,happ(s(fun(X10,X9),X11),s(X10,happ(s(fun(X12,X10),X13),s(X12,X14))))),s('type.finite_map.fmap'(X9,X15),X17),s(X18,X19)))) )),
  inference(superposition,[],[f215,f206])).
fof(f29202,plain,(
  ( ! [X61,X59,X57,X64,X54,X52,X50,X62,X60,X58,X56,X55,X53,X51,X63] : (s('type.option.option'(X51),'const.option.SOME_1'(s(X51,X59))) != s('type.option.option'(X51),'const.finite_map.FLOOKUP_2'(s('type.finite_map.fmap'(X50,X51),happ(s(fun(X55,'type.finite_map.fmap'(X50,X51)),'_dst_x0x1x0_3'(s(fun(X53,fun(X52,'type.finite_map.fmap'(X50,X51))),X54),s(fun(X55,X53),X56),s(X52,X58))),s(X55,X57))),s(X50,X60))) | s(X61,X62) != s(X61,X63) | s('type.pair.prod'('type.infer.exc'(X51,'type.list.list'('type.string.char')),X61),'const.pair.,_2'(s('type.infer.exc'(X51,'type.list.list'('type.string.char')),'const.infer.Success_1'(s(X51,X59))),s(X61,X63))) = s('type.pair.prod'('type.infer.exc'(X51,'type.list.list'('type.string.char')),X61),'const.infer.flookup_st_ex_4'(s(fun(X50,'type.list.list'('type.string.char')),X64),s(X50,X60),s('type.finite_map.fmap'(X50,X51),happ(s(fun(X52,'type.finite_map.fmap'(X50,X51)),happ(s(fun(X53,fun(X52,'type.finite_map.fmap'(X50,X51))),X54),s(X53,happ(s(fun(X55,X53),X56),s(X55,X57))))),s(X52,X58))),s(X61,X62)))) )),
  inference(superposition,[],[f215,f221])).
fof(f29201,plain,(
  ( ! [X39,X37,X35,X47,X45,X43,X41,X48,X38,X36,X46,X44,X42,X40,X49] : (s('type.option.option'(X36),'const.option.SOME_1'(s(X36,X44))) != s('type.option.option'(X36),'const.finite_map.FLOOKUP_2'(s('type.finite_map.fmap'(X35,X36),happ(s(fun(X39,'type.finite_map.fmap'(X35,X36)),happ(s(fun(X38,fun(X39,'type.finite_map.fmap'(X35,X36))),X40),s(X38,happ(s(fun(X37,X38),X41),s(X37,X43))))),s(X39,X42))),s(X35,X45))) | s(X46,X47) != s(X46,X48) | s('type.pair.prod'('type.infer.exc'(X36,'type.list.list'('type.string.char')),X46),'const.pair.,_2'(s('type.infer.exc'(X36,'type.list.list'('type.string.char')),'const.infer.Success_1'(s(X36,X44))),s(X46,X48))) = s('type.pair.prod'('type.infer.exc'(X36,'type.list.list'('type.string.char')),X46),'const.infer.flookup_st_ex_4'(s(fun(X35,'type.list.list'('type.string.char')),X49),s(X35,X45),s('type.finite_map.fmap'(X35,X36),happ(s(fun(X37,'type.finite_map.fmap'(X35,X36)),'_dst_x0x1x0_3'(s(fun(X38,fun(X39,'type.finite_map.fmap'(X35,X36))),X40),s(fun(X37,X38),X41),s(X39,X42))),s(X37,X43))),s(X46,X47)))) )),
  inference(superposition,[],[f215,f221])).
fof(f29200,plain,(
  ( ! [X30,X28,X26,X24,X33,X23,X31,X29,X27,X25,X34,X32,X22] : (s('type.option.option'(X23),'const.option.SOME_1'(s(X23,X29))) != s('type.option.option'(X23),'const.finite_map.FLOOKUP_2'(s('type.finite_map.fmap'(X22,X23),happ(s(fun(X25,'type.finite_map.fmap'(X22,X23)),X26),s(X25,happ(s(fun(X24,X25),X27),s(X24,X28))))),s(X22,X30))) | s(X31,X32) != s(X31,X33) | s('type.pair.prod'('type.infer.exc'(X23,'type.list.list'('type.string.char')),X31),'const.pair.,_2'(s('type.infer.exc'(X23,'type.list.list'('type.string.char')),'const.infer.Success_1'(s(X23,X29))),s(X31,X33))) = s('type.pair.prod'('type.infer.exc'(X23,'type.list.list'('type.string.char')),X31),'const.infer.flookup_st_ex_4'(s(fun(X22,'type.list.list'('type.string.char')),X34),s(X22,X30),s('type.finite_map.fmap'(X22,X23),happ(s(fun(X24,'type.finite_map.fmap'(X22,X23)),'_dst_x0x1_2'(s(fun(X25,'type.finite_map.fmap'(X22,X23)),X26),s(fun(X24,X25),X27))),s(X24,X28))),s(X31,X32)))) )),
  inference(superposition,[],[f215,f206])).
fof(f29199,plain,(
  ( ! [X14,X12,X10,X21,X19,X17,X15,X13,X11,X9,X20,X18,X16] : (s('type.option.option'(X10),'const.option.SOME_1'(s(X10,X16))) != s('type.option.option'(X10),'const.finite_map.FLOOKUP_2'(s('type.finite_map.fmap'(X9,X10),happ(s(fun(X13,'type.finite_map.fmap'(X9,X10)),'_dst_x0x1_2'(s(fun(X11,'type.finite_map.fmap'(X9,X10)),X12),s(fun(X13,X11),X14))),s(X13,X15))),s(X9,X17))) | s(X18,X19) != s(X18,X20) | s('type.pair.prod'('type.infer.exc'(X10,'type.list.list'('type.string.char')),X18),'const.pair.,_2'(s('type.infer.exc'(X10,'type.list.list'('type.string.char')),'const.infer.Success_1'(s(X10,X16))),s(X18,X20))) = s('type.pair.prod'('type.infer.exc'(X10,'type.list.list'('type.string.char')),X18),'const.infer.flookup_st_ex_4'(s(fun(X9,'type.list.list'('type.string.char')),X21),s(X9,X17),s('type.finite_map.fmap'(X9,X10),happ(s(fun(X11,'type.finite_map.fmap'(X9,X10)),X12),s(X11,happ(s(fun(X13,X11),X14),s(X13,X15))))),s(X18,X19)))) )),
  inference(superposition,[],[f215,f206])).
fof(f29156,plain,(
  ( ! [X377,X379,X372,X374,X380,X376,X378,X373,X375] : (s('type.option.option'('type.one.one'),'const.option.SOME_1'(s('type.one.one',X373))) != s('type.option.option'('type.one.one'),'const.finite_map.FLOOKUP_2'(s('type.finite_map.fmap'(X374,'type.one.one'),X375),s(X374,X376))) | s(X377,X378) != s(X377,X379) | s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),X377),'const.pair.,_2'(s('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'const.infer.Success_1'(s('type.one.one',X372))),s(X377,X379))) = s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),X377),'const.infer.flookup_st_ex_4'(s(fun(X374,'type.list.list'('type.string.char')),X380),s(X374,X376),s('type.finite_map.fmap'(X374,'type.one.one'),X375),s(X377,X378)))) )),
  inference(superposition,[],[f215,f258])).
fof(f29149,plain,(
  ( ! [X300,X302,X296,X298,X308,X304,X306,X295,X301,X303,X297,X299,X305,X307] : (s('type.option.option'(fun(X295,fun(X296,fun(X297,fun(X298,fun(X299,'type.one.one')))))),'const.option.SOME_1'(s(fun(X295,fun(X296,fun(X297,fun(X298,fun(X299,'type.one.one'))))),X301))) != s('type.option.option'(fun(X295,fun(X296,fun(X297,fun(X298,fun(X299,'type.one.one')))))),'const.finite_map.FLOOKUP_2'(s('type.finite_map.fmap'(X302,fun(X295,fun(X296,fun(X297,fun(X298,fun(X299,'type.one.one')))))),X303),s(X302,X304))) | s(X305,X306) != s(X305,X307) | s('type.pair.prod'('type.infer.exc'(fun(X295,fun(X296,fun(X297,fun(X298,fun(X299,'type.one.one'))))),'type.list.list'('type.string.char')),X305),'const.infer.flookup_st_ex_4'(s(fun(X302,'type.list.list'('type.string.char')),X308),s(X302,X304),s('type.finite_map.fmap'(X302,fun(X295,fun(X296,fun(X297,fun(X298,fun(X299,'type.one.one')))))),X303),s(X305,X306))) = s('type.pair.prod'('type.infer.exc'(fun(X295,fun(X296,fun(X297,fun(X298,fun(X299,'type.one.one'))))),'type.list.list'('type.string.char')),X305),'const.pair.,_2'(s('type.infer.exc'(fun(X295,fun(X296,fun(X297,fun(X298,fun(X299,'type.one.one'))))),'type.list.list'('type.string.char')),'const.infer.Success_1'(s(fun(X295,fun(X296,fun(X297,fun(X298,fun(X299,'type.one.one'))))),X300))),s(X305,X307)))) )),
  inference(superposition,[],[f215,f815])).
fof(f29147,plain,(
  ( ! [X280,X269,X271,X277,X279,X273,X275,X281,X270,X276,X278,X272,X274] : (s('type.option.option'(fun(X269,fun(X270,fun(X271,fun(X272,'type.one.one'))))),'const.option.SOME_1'(s(fun(X269,fun(X270,fun(X271,fun(X272,'type.one.one')))),X274))) != s('type.option.option'(fun(X269,fun(X270,fun(X271,fun(X272,'type.one.one'))))),'const.finite_map.FLOOKUP_2'(s('type.finite_map.fmap'(X275,fun(X269,fun(X270,fun(X271,fun(X272,'type.one.one'))))),X276),s(X275,X277))) | s(X278,X279) != s(X278,X280) | s('type.pair.prod'('type.infer.exc'(fun(X269,fun(X270,fun(X271,fun(X272,'type.one.one')))),'type.list.list'('type.string.char')),X278),'const.infer.flookup_st_ex_4'(s(fun(X275,'type.list.list'('type.string.char')),X281),s(X275,X277),s('type.finite_map.fmap'(X275,fun(X269,fun(X270,fun(X271,fun(X272,'type.one.one'))))),X276),s(X278,X279))) = s('type.pair.prod'('type.infer.exc'(fun(X269,fun(X270,fun(X271,fun(X272,'type.one.one')))),'type.list.list'('type.string.char')),X278),'const.pair.,_2'(s('type.infer.exc'(fun(X269,fun(X270,fun(X271,fun(X272,'type.one.one')))),'type.list.list'('type.string.char')),'const.infer.Success_1'(s(fun(X269,fun(X270,fun(X271,fun(X272,'type.one.one')))),X273))),s(X278,X280)))) )),
  inference(superposition,[],[f215,f787])).
fof(f29145,plain,(
  ( ! [X255,X253,X251,X249,X246,X254,X252,X250,X256,X248,X247,X245] : (s('type.option.option'(fun(X245,fun(X246,fun(X247,'type.one.one')))),'const.option.SOME_1'(s(fun(X245,fun(X246,fun(X247,'type.one.one'))),X249))) != s('type.option.option'(fun(X245,fun(X246,fun(X247,'type.one.one')))),'const.finite_map.FLOOKUP_2'(s('type.finite_map.fmap'(X250,fun(X245,fun(X246,fun(X247,'type.one.one')))),X251),s(X250,X252))) | s(X253,X254) != s(X253,X255) | s('type.pair.prod'('type.infer.exc'(fun(X245,fun(X246,fun(X247,'type.one.one'))),'type.list.list'('type.string.char')),X253),'const.infer.flookup_st_ex_4'(s(fun(X250,'type.list.list'('type.string.char')),X256),s(X250,X252),s('type.finite_map.fmap'(X250,fun(X245,fun(X246,fun(X247,'type.one.one')))),X251),s(X253,X254))) = s('type.pair.prod'('type.infer.exc'(fun(X245,fun(X246,fun(X247,'type.one.one'))),'type.list.list'('type.string.char')),X253),'const.pair.,_2'(s('type.infer.exc'(fun(X245,fun(X246,fun(X247,'type.one.one'))),'type.list.list'('type.string.char')),'const.infer.Success_1'(s(fun(X245,fun(X246,fun(X247,'type.one.one'))),X248))),s(X253,X255)))) )),
  inference(superposition,[],[f215,f752])).
fof(f29143,plain,(
  ( ! [X231,X229,X227,X225,X233,X223,X230,X228,X226,X224,X232] : (s('type.option.option'(fun(X223,fun(X224,'type.one.one'))),'const.option.SOME_1'(s(fun(X223,fun(X224,'type.one.one')),X226))) != s('type.option.option'(fun(X223,fun(X224,'type.one.one'))),'const.finite_map.FLOOKUP_2'(s('type.finite_map.fmap'(X227,fun(X223,fun(X224,'type.one.one'))),X228),s(X227,X229))) | s(X230,X231) != s(X230,X232) | s('type.pair.prod'('type.infer.exc'(fun(X223,fun(X224,'type.one.one')),'type.list.list'('type.string.char')),X230),'const.pair.,_2'(s('type.infer.exc'(fun(X223,fun(X224,'type.one.one')),'type.list.list'('type.string.char')),'const.infer.Success_1'(s(fun(X223,fun(X224,'type.one.one')),X225))),s(X230,X232))) = s('type.pair.prod'('type.infer.exc'(fun(X223,fun(X224,'type.one.one')),'type.list.list'('type.string.char')),X230),'const.infer.flookup_st_ex_4'(s(fun(X227,'type.list.list'('type.string.char')),X233),s(X227,X229),s('type.finite_map.fmap'(X227,fun(X223,fun(X224,'type.one.one'))),X228),s(X230,X231)))) )),
  inference(superposition,[],[f215,f724])).
fof(f29139,plain,(
  ( ! [X191,X189,X187,X185,X192,X190,X188,X186,X184,X183] : (s('type.option.option'(fun(X183,'type.one.one')),'const.option.SOME_1'(s(fun(X183,'type.one.one'),X185))) != s('type.option.option'(fun(X183,'type.one.one')),'const.finite_map.FLOOKUP_2'(s('type.finite_map.fmap'(X186,fun(X183,'type.one.one')),X187),s(X186,X188))) | s(X189,X190) != s(X189,X191) | s('type.pair.prod'('type.infer.exc'(fun(X183,'type.one.one'),'type.list.list'('type.string.char')),X189),'const.pair.,_2'(s('type.infer.exc'(fun(X183,'type.one.one'),'type.list.list'('type.string.char')),'const.infer.Success_1'(s(fun(X183,'type.one.one'),X184))),s(X189,X191))) = s('type.pair.prod'('type.infer.exc'(fun(X183,'type.one.one'),'type.list.list'('type.string.char')),X189),'const.infer.flookup_st_ex_4'(s(fun(X186,'type.list.list'('type.string.char')),X192),s(X186,X188),s('type.finite_map.fmap'(X186,fun(X183,'type.one.one')),X187),s(X189,X190)))) )),
  inference(superposition,[],[f215,f605])).
fof(f29131,plain,(
  ( ! [X94,X101,X99,X97,X95,X102,X100,X98,X96] : (s('type.option.option'(bool),'const.option.SOME_1'(s(bool,X95))) != s('type.option.option'(bool),'const.finite_map.FLOOKUP_2'(s('type.finite_map.fmap'(X96,bool),X97),s(X96,X98))) | s(X99,X100) != s(X99,X101) | s('type.pair.prod'('type.infer.exc'(bool,'type.list.list'('type.string.char')),X99),'const.pair.,_2'(s('type.infer.exc'(bool,'type.list.list'('type.string.char')),'const.infer.Success_1'(s(bool,X94))),s(X99,X101))) = s('type.pair.prod'('type.infer.exc'(bool,'type.list.list'('type.string.char')),X99),'const.infer.flookup_st_ex_4'(s(fun(X96,'type.list.list'('type.string.char')),X102),s(X96,X98),s('type.finite_map.fmap'(X96,bool),X97),s(X99,X100))) | s(bool,'T_0') = s(bool,X95) | s(bool,'T_0') = s(bool,X94)) )),
  inference(superposition,[],[f215,f272])).
fof(f29130,plain,(
  ( ! [X92,X90,X88,X87,X85,X93,X91,X89,X86] : (s('type.option.option'(bool),'const.option.SOME_1'(s(bool,'T_0'))) != s('type.option.option'(bool),'const.finite_map.FLOOKUP_2'(s('type.finite_map.fmap'(X86,bool),X87),s(X86,X88))) | s(X89,X90) != s(X89,X91) | s('type.pair.prod'('type.infer.exc'(bool,'type.list.list'('type.string.char')),X89),'const.pair.,_2'(s('type.infer.exc'(bool,'type.list.list'('type.string.char')),'const.infer.Success_1'(s(bool,X85))),s(X89,X91))) = s('type.pair.prod'('type.infer.exc'(bool,'type.list.list'('type.string.char')),X89),'const.infer.flookup_st_ex_4'(s(fun(X86,'type.list.list'('type.string.char')),X92),s(X86,X88),s('type.finite_map.fmap'(X86,bool),X87),s(X89,X90))) | s(bool,X85) = s(bool,X93) | s(bool,'T_0') = s(bool,X93)) )),
  inference(superposition,[],[f215,f272])).
fof(f29129,plain,(
  ( ! [X80,X78,X83,X81,X79,X77,X84,X82] : (s('type.option.option'(bool),'const.option.SOME_1'(s(bool,'F_0'))) != s('type.option.option'(bool),'const.finite_map.FLOOKUP_2'(s('type.finite_map.fmap'(X78,bool),X79),s(X78,X80))) | s(X81,X82) != s(X81,X83) | s('type.pair.prod'('type.infer.exc'(bool,'type.list.list'('type.string.char')),X81),'const.pair.,_2'(s('type.infer.exc'(bool,'type.list.list'('type.string.char')),'const.infer.Success_1'(s(bool,X77))),s(X81,X83))) = s('type.pair.prod'('type.infer.exc'(bool,'type.list.list'('type.string.char')),X81),'const.infer.flookup_st_ex_4'(s(fun(X78,'type.list.list'('type.string.char')),X84),s(X78,X80),s('type.finite_map.fmap'(X78,bool),X79),s(X81,X82))) | s(bool,'T_0') = s(bool,X77)) )),
  inference(superposition,[],[f215,f167])).
fof(f29127,plain,(
  ( ! [X61,X59,X57,X64,X54,X52,X50,X62,X60,X58,X56,X55,X53,X51,X63] : (s('type.option.option'(X50),'const.finite_map.FLOOKUP_2'(s('type.finite_map.fmap'(X58,X50),X59),s(X58,X60))) != s('type.option.option'(X50),'const.option.SOME_1'(s(X50,happ(s(fun(X54,X50),'_dst_x0x1x0_3'(s(fun(X52,fun(X51,X50)),X53),s(fun(X54,X52),X55),s(X51,X57))),s(X54,X56))))) | s(X61,X62) != s(X61,X63) | s('type.pair.prod'('type.infer.exc'(X50,'type.list.list'('type.string.char')),X61),'const.infer.flookup_st_ex_4'(s(fun(X58,'type.list.list'('type.string.char')),X64),s(X58,X60),s('type.finite_map.fmap'(X58,X50),X59),s(X61,X62))) = s('type.pair.prod'('type.infer.exc'(X50,'type.list.list'('type.string.char')),X61),'const.pair.,_2'(s('type.infer.exc'(X50,'type.list.list'('type.string.char')),'const.infer.Success_1'(s(X50,happ(s(fun(X51,X50),happ(s(fun(X52,fun(X51,X50)),X53),s(X52,happ(s(fun(X54,X52),X55),s(X54,X56))))),s(X51,X57))))),s(X61,X63)))) )),
  inference(superposition,[],[f215,f221])).
fof(f29126,plain,(
  ( ! [X39,X37,X35,X47,X45,X43,X41,X48,X38,X36,X46,X44,X42,X40,X49] : (s('type.option.option'(X35),'const.finite_map.FLOOKUP_2'(s('type.finite_map.fmap'(X43,X35),X44),s(X43,X45))) != s('type.option.option'(X35),'const.option.SOME_1'(s(X35,happ(s(fun(X38,X35),happ(s(fun(X37,fun(X38,X35)),X39),s(X37,happ(s(fun(X36,X37),X40),s(X36,X42))))),s(X38,X41))))) | s(X46,X47) != s(X46,X48) | s('type.pair.prod'('type.infer.exc'(X35,'type.list.list'('type.string.char')),X46),'const.infer.flookup_st_ex_4'(s(fun(X43,'type.list.list'('type.string.char')),X49),s(X43,X45),s('type.finite_map.fmap'(X43,X35),X44),s(X46,X47))) = s('type.pair.prod'('type.infer.exc'(X35,'type.list.list'('type.string.char')),X46),'const.pair.,_2'(s('type.infer.exc'(X35,'type.list.list'('type.string.char')),'const.infer.Success_1'(s(X35,happ(s(fun(X36,X35),'_dst_x0x1x0_3'(s(fun(X37,fun(X38,X35)),X39),s(fun(X36,X37),X40),s(X38,X41))),s(X36,X42))))),s(X46,X48)))) )),
  inference(superposition,[],[f215,f221])).
fof(f29125,plain,(
  ( ! [X30,X28,X26,X24,X33,X23,X31,X29,X27,X25,X34,X32,X22] : (s('type.option.option'(X22),'const.finite_map.FLOOKUP_2'(s('type.finite_map.fmap'(X28,X22),X29),s(X28,X30))) != s('type.option.option'(X22),'const.option.SOME_1'(s(X22,happ(s(fun(X24,X22),X25),s(X24,happ(s(fun(X23,X24),X26),s(X23,X27))))))) | s(X31,X32) != s(X31,X33) | s('type.pair.prod'('type.infer.exc'(X22,'type.list.list'('type.string.char')),X31),'const.infer.flookup_st_ex_4'(s(fun(X28,'type.list.list'('type.string.char')),X34),s(X28,X30),s('type.finite_map.fmap'(X28,X22),X29),s(X31,X32))) = s('type.pair.prod'('type.infer.exc'(X22,'type.list.list'('type.string.char')),X31),'const.pair.,_2'(s('type.infer.exc'(X22,'type.list.list'('type.string.char')),'const.infer.Success_1'(s(X22,happ(s(fun(X23,X22),'_dst_x0x1_2'(s(fun(X24,X22),X25),s(fun(X23,X24),X26))),s(X23,X27))))),s(X31,X33)))) )),
  inference(superposition,[],[f215,f206])).
fof(f29124,plain,(
  ( ! [X14,X12,X10,X21,X19,X17,X15,X13,X11,X9,X20,X18,X16] : (s('type.option.option'(X9),'const.finite_map.FLOOKUP_2'(s('type.finite_map.fmap'(X15,X9),X16),s(X15,X17))) != s('type.option.option'(X9),'const.option.SOME_1'(s(X9,happ(s(fun(X12,X9),'_dst_x0x1_2'(s(fun(X10,X9),X11),s(fun(X12,X10),X13))),s(X12,X14))))) | s(X18,X19) != s(X18,X20) | s('type.pair.prod'('type.infer.exc'(X9,'type.list.list'('type.string.char')),X18),'const.infer.flookup_st_ex_4'(s(fun(X15,'type.list.list'('type.string.char')),X21),s(X15,X17),s('type.finite_map.fmap'(X15,X9),X16),s(X18,X19))) = s('type.pair.prod'('type.infer.exc'(X9,'type.list.list'('type.string.char')),X18),'const.pair.,_2'(s('type.infer.exc'(X9,'type.list.list'('type.string.char')),'const.infer.Success_1'(s(X9,happ(s(fun(X10,X9),X11),s(X10,happ(s(fun(X12,X10),X13),s(X12,X14))))))),s(X18,X20)))) )),
  inference(superposition,[],[f215,f206])).
fof(f28959,plain,(
  ( ! [X57,X54,X52,X50,X58,X56,X55,X53,X51] : (s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X55),'type.infer.infer_st'(X50)),'const.infer.n_fresh_uvar_2'(s('type.num.num',X56),s('type.infer.infer_st'(X50),X57))) != s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X55),'type.infer.infer_st'(X50)),'const.pair.,_2'(s('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X55),'const.infer.Success_1'(s('type.list.list'('type.infer_t.infer_t'),X58))),s('type.infer.infer_st'(X50),'const.option.option_CASE_3'(s('type.option.option'(X51),X52),s('type.infer.infer_st'(X50),X53),s(fun(X51,'type.infer.infer_st'(X50)),X54))))) | s('type.infer.infer_st'(X50),'const.infer.infer_st_next_uvar_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'(X50),X57))),s('type.num.num',X56))))),s('type.infer.infer_st'(X50),X57))) = s('type.infer.infer_st'(X50),happ(s(fun(fun(X51,'type.infer.infer_st'(X50)),'type.infer.infer_st'(X50)),happ(s(fun('type.infer.infer_st'(X50),fun(fun(X51,'type.infer.infer_st'(X50)),'type.infer.infer_st'(X50))),happ(s(fun('type.option.option'(X51),fun('type.infer.infer_st'(X50),fun(fun(X51,'type.infer.infer_st'(X50)),'type.infer.infer_st'(X50)))),'const.option.option_CASE_0'),s('type.option.option'(X51),X52))),s('type.infer.infer_st'(X50),X53))),s(fun(X51,'type.infer.infer_st'(X50)),X54)))) )),
  inference(superposition,[],[f251,f184])).
fof(f28958,plain,(
  ( ! [X39,X47,X45,X43,X41,X48,X38,X46,X44,X42,X40,X49] : (s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X46),'type.infer.infer_st'(X38)),'const.infer.n_fresh_uvar_2'(s('type.num.num',X47),s('type.infer.infer_st'(X38),X48))) != s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X46),'type.infer.infer_st'(X38)),'const.pair.,_2'(s('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X46),'const.infer.Success_1'(s('type.list.list'('type.infer_t.infer_t'),X49))),s('type.infer.infer_st'(X38),happ(s(fun(X42,'type.infer.infer_st'(X38)),'_dst_x0x1x0_3'(s(fun(X40,fun(X39,'type.infer.infer_st'(X38))),X41),s(fun(X42,X40),X43),s(X39,X45))),s(X42,X44))))) | s('type.infer.infer_st'(X38),'const.infer.infer_st_next_uvar_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'(X38),X48))),s('type.num.num',X47))))),s('type.infer.infer_st'(X38),X48))) = s('type.infer.infer_st'(X38),happ(s(fun(X39,'type.infer.infer_st'(X38)),happ(s(fun(X40,fun(X39,'type.infer.infer_st'(X38))),X41),s(X40,happ(s(fun(X42,X40),X43),s(X42,X44))))),s(X39,X45)))) )),
  inference(superposition,[],[f251,f221])).
fof(f28957,plain,(
  ( ! [X30,X28,X26,X37,X35,X33,X31,X29,X27,X36,X34,X32] : (s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X34),'type.infer.infer_st'(X26)),'const.infer.n_fresh_uvar_2'(s('type.num.num',X35),s('type.infer.infer_st'(X26),X36))) != s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X34),'type.infer.infer_st'(X26)),'const.pair.,_2'(s('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X34),'const.infer.Success_1'(s('type.list.list'('type.infer_t.infer_t'),X37))),s('type.infer.infer_st'(X26),happ(s(fun(X29,'type.infer.infer_st'(X26)),happ(s(fun(X28,fun(X29,'type.infer.infer_st'(X26))),X30),s(X28,happ(s(fun(X27,X28),X31),s(X27,X33))))),s(X29,X32))))) | s('type.infer.infer_st'(X26),'const.infer.infer_st_next_uvar_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'(X26),X36))),s('type.num.num',X35))))),s('type.infer.infer_st'(X26),X36))) = s('type.infer.infer_st'(X26),happ(s(fun(X27,'type.infer.infer_st'(X26)),'_dst_x0x1x0_3'(s(fun(X28,fun(X29,'type.infer.infer_st'(X26))),X30),s(fun(X27,X28),X31),s(X29,X32))),s(X27,X33)))) )),
  inference(superposition,[],[f251,f221])).
fof(f28956,plain,(
  ( ! [X24,X23,X21,X19,X17,X25,X22,X20,X18,X16] : (s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X22),'type.infer.infer_st'(X16)),'const.infer.n_fresh_uvar_2'(s('type.num.num',X23),s('type.infer.infer_st'(X16),X24))) != s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X22),'type.infer.infer_st'(X16)),'const.pair.,_2'(s('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X22),'const.infer.Success_1'(s('type.list.list'('type.infer_t.infer_t'),X25))),s('type.infer.infer_st'(X16),happ(s(fun(X18,'type.infer.infer_st'(X16)),X19),s(X18,happ(s(fun(X17,X18),X20),s(X17,X21))))))) | s('type.infer.infer_st'(X16),happ(s(fun(X17,'type.infer.infer_st'(X16)),'_dst_x0x1_2'(s(fun(X18,'type.infer.infer_st'(X16)),X19),s(fun(X17,X18),X20))),s(X17,X21))) = s('type.infer.infer_st'(X16),'const.infer.infer_st_next_uvar_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'(X16),X24))),s('type.num.num',X23))))),s('type.infer.infer_st'(X16),X24)))) )),
  inference(superposition,[],[f251,f206])).
fof(f28955,plain,(
  ( ! [X6,X14,X12,X10,X8,X7,X15,X13,X11,X9] : (s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X12),'type.infer.infer_st'(X6)),'const.infer.n_fresh_uvar_2'(s('type.num.num',X13),s('type.infer.infer_st'(X6),X14))) != s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X12),'type.infer.infer_st'(X6)),'const.pair.,_2'(s('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X12),'const.infer.Success_1'(s('type.list.list'('type.infer_t.infer_t'),X15))),s('type.infer.infer_st'(X6),happ(s(fun(X9,'type.infer.infer_st'(X6)),'_dst_x0x1_2'(s(fun(X7,'type.infer.infer_st'(X6)),X8),s(fun(X9,X7),X10))),s(X9,X11))))) | s('type.infer.infer_st'(X6),happ(s(fun(X7,'type.infer.infer_st'(X6)),X8),s(X7,happ(s(fun(X9,X7),X10),s(X9,X11))))) = s('type.infer.infer_st'(X6),'const.infer.infer_st_next_uvar_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'(X6),X14))),s('type.num.num',X13))))),s('type.infer.infer_st'(X6),X14)))) )),
  inference(superposition,[],[f251,f206])).
fof(f28954,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X2),'type.infer.infer_st'(X0)),'const.infer.n_fresh_uvar_2'(s('type.num.num',X3),s('type.infer.infer_st'(X0),X4))) != s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X2),'type.infer.infer_st'(X0)),'const.pair.,_2'(s('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X2),'const.infer.Success_1'(s('type.list.list'('type.infer_t.infer_t'),X5))),s('type.infer.infer_st'(X0),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.infer.infer_st'(X0)),X1))))) | s('type.infer.infer_st'(X0),happ(s(fun('type.infer.infer_st'('type.infer.infer_st'(X0)),'type.infer.infer_st'(X0)),'const.infer.infer_st_subst_0'),s('type.infer.infer_st'('type.infer.infer_st'(X0)),X1))) = s('type.infer.infer_st'(X0),'const.infer.infer_st_next_uvar_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'(X0),X4))),s('type.num.num',X3))))),s('type.infer.infer_st'(X0),X4)))) )),
  inference(superposition,[],[f251,f168])).
fof(f28945,plain,(
  ( ! [X39,X47,X45,X43,X41,X48,X38,X46,X44,X42,X40,X49] : (s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X46),'type.infer.infer_st'(X38)),'const.pair.,_2'(s('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X46),'const.infer.Success_1'(s('type.list.list'('type.infer_t.infer_t'),X48))),s('type.infer.infer_st'(X38),X49))) != s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X46),'type.infer.infer_st'(X38)),'const.infer.n_fresh_uvar_2'(s('type.num.num',X47),s('type.infer.infer_st'(X38),happ(s(fun(X42,'type.infer.infer_st'(X38)),'_dst_x0x1x0_3'(s(fun(X40,fun(X39,'type.infer.infer_st'(X38))),X41),s(fun(X42,X40),X43),s(X39,X45))),s(X42,X44))))) | s('type.infer.infer_st'(X38),X49) = s('type.infer.infer_st'(X38),'const.infer.infer_st_next_uvar_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'(X38),happ(s(fun(X39,'type.infer.infer_st'(X38)),happ(s(fun(X40,fun(X39,'type.infer.infer_st'(X38))),X41),s(X40,happ(s(fun(X42,X40),X43),s(X42,X44))))),s(X39,X45))))),s('type.num.num',X47))))),s('type.infer.infer_st'(X38),happ(s(fun(X39,'type.infer.infer_st'(X38)),happ(s(fun(X40,fun(X39,'type.infer.infer_st'(X38))),X41),s(X40,happ(s(fun(X42,X40),X43),s(X42,X44))))),s(X39,X45)))))) )),
  inference(superposition,[],[f251,f221])).
fof(f28944,plain,(
  ( ! [X30,X28,X26,X37,X35,X33,X31,X29,X27,X36,X34,X32] : (s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X34),'type.infer.infer_st'(X26)),'const.pair.,_2'(s('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X34),'const.infer.Success_1'(s('type.list.list'('type.infer_t.infer_t'),X36))),s('type.infer.infer_st'(X26),X37))) != s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X34),'type.infer.infer_st'(X26)),'const.infer.n_fresh_uvar_2'(s('type.num.num',X35),s('type.infer.infer_st'(X26),happ(s(fun(X29,'type.infer.infer_st'(X26)),happ(s(fun(X28,fun(X29,'type.infer.infer_st'(X26))),X30),s(X28,happ(s(fun(X27,X28),X31),s(X27,X33))))),s(X29,X32))))) | s('type.infer.infer_st'(X26),X37) = s('type.infer.infer_st'(X26),'const.infer.infer_st_next_uvar_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'(X26),happ(s(fun(X27,'type.infer.infer_st'(X26)),'_dst_x0x1x0_3'(s(fun(X28,fun(X29,'type.infer.infer_st'(X26))),X30),s(fun(X27,X28),X31),s(X29,X32))),s(X27,X33))))),s('type.num.num',X35))))),s('type.infer.infer_st'(X26),happ(s(fun(X27,'type.infer.infer_st'(X26)),'_dst_x0x1x0_3'(s(fun(X28,fun(X29,'type.infer.infer_st'(X26))),X30),s(fun(X27,X28),X31),s(X29,X32))),s(X27,X33)))))) )),
  inference(superposition,[],[f251,f221])).
fof(f28943,plain,(
  ( ! [X24,X23,X21,X19,X17,X25,X22,X20,X18,X16] : (s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X22),'type.infer.infer_st'(X16)),'const.pair.,_2'(s('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X22),'const.infer.Success_1'(s('type.list.list'('type.infer_t.infer_t'),X24))),s('type.infer.infer_st'(X16),X25))) != s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X22),'type.infer.infer_st'(X16)),'const.infer.n_fresh_uvar_2'(s('type.num.num',X23),s('type.infer.infer_st'(X16),happ(s(fun(X18,'type.infer.infer_st'(X16)),X19),s(X18,happ(s(fun(X17,X18),X20),s(X17,X21))))))) | s('type.infer.infer_st'(X16),X25) = s('type.infer.infer_st'(X16),'const.infer.infer_st_next_uvar_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'(X16),happ(s(fun(X17,'type.infer.infer_st'(X16)),'_dst_x0x1_2'(s(fun(X18,'type.infer.infer_st'(X16)),X19),s(fun(X17,X18),X20))),s(X17,X21))))),s('type.num.num',X23))))),s('type.infer.infer_st'(X16),happ(s(fun(X17,'type.infer.infer_st'(X16)),'_dst_x0x1_2'(s(fun(X18,'type.infer.infer_st'(X16)),X19),s(fun(X17,X18),X20))),s(X17,X21)))))) )),
  inference(superposition,[],[f251,f206])).
fof(f28942,plain,(
  ( ! [X6,X14,X12,X10,X8,X7,X15,X13,X11,X9] : (s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X12),'type.infer.infer_st'(X6)),'const.pair.,_2'(s('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X12),'const.infer.Success_1'(s('type.list.list'('type.infer_t.infer_t'),X14))),s('type.infer.infer_st'(X6),X15))) != s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X12),'type.infer.infer_st'(X6)),'const.infer.n_fresh_uvar_2'(s('type.num.num',X13),s('type.infer.infer_st'(X6),happ(s(fun(X9,'type.infer.infer_st'(X6)),'_dst_x0x1_2'(s(fun(X7,'type.infer.infer_st'(X6)),X8),s(fun(X9,X7),X10))),s(X9,X11))))) | s('type.infer.infer_st'(X6),X15) = s('type.infer.infer_st'(X6),'const.infer.infer_st_next_uvar_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'(X6),happ(s(fun(X7,'type.infer.infer_st'(X6)),X8),s(X7,happ(s(fun(X9,X7),X10),s(X9,X11))))))),s('type.num.num',X13))))),s('type.infer.infer_st'(X6),happ(s(fun(X7,'type.infer.infer_st'(X6)),X8),s(X7,happ(s(fun(X9,X7),X10),s(X9,X11)))))))) )),
  inference(superposition,[],[f251,f206])).
fof(f28939,plain,(
  ( ! [X61,X59,X57,X66,X64,X62,X60,X58,X56,X65,X55,X63] : (s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X62),'type.infer.infer_st'(X63)),'const.pair.,_2'(s('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X62),'const.infer.Success_1'(s('type.list.list'('type.infer_t.infer_t'),X65))),s('type.infer.infer_st'(X63),X66))) != s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X62),'type.infer.infer_st'(X63)),'const.infer.n_fresh_uvar_2'(s('type.num.num',happ(s(fun(X58,'type.num.num'),'_dst_x0x1x0_3'(s(fun(X56,fun(X55,'type.num.num')),X57),s(fun(X58,X56),X59),s(X55,X61))),s(X58,X60))),s('type.infer.infer_st'(X63),X64))) | s('type.infer.infer_st'(X63),X66) = s('type.infer.infer_st'(X63),'const.infer.infer_st_next_uvar_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'(X63),X64))),s('type.num.num',happ(s(fun(X55,'type.num.num'),happ(s(fun(X56,fun(X55,'type.num.num')),X57),s(X56,happ(s(fun(X58,X56),X59),s(X58,X60))))),s(X55,X61))))))),s('type.infer.infer_st'(X63),X64)))) )),
  inference(superposition,[],[f251,f221])).
fof(f28938,plain,(
  ( ! [X47,X45,X43,X54,X52,X50,X48,X46,X44,X53,X51,X49] : (s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X50),'type.infer.infer_st'(X51)),'const.pair.,_2'(s('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X50),'const.infer.Success_1'(s('type.list.list'('type.infer_t.infer_t'),X53))),s('type.infer.infer_st'(X51),X54))) != s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X50),'type.infer.infer_st'(X51)),'const.infer.n_fresh_uvar_2'(s('type.num.num',happ(s(fun(X45,'type.num.num'),happ(s(fun(X44,fun(X45,'type.num.num')),X46),s(X44,happ(s(fun(X43,X44),X47),s(X43,X49))))),s(X45,X48))),s('type.infer.infer_st'(X51),X52))) | s('type.infer.infer_st'(X51),X54) = s('type.infer.infer_st'(X51),'const.infer.infer_st_next_uvar_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'(X51),X52))),s('type.num.num',happ(s(fun(X43,'type.num.num'),'_dst_x0x1x0_3'(s(fun(X44,fun(X45,'type.num.num')),X46),s(fun(X43,X44),X47),s(X45,X48))),s(X43,X49))))))),s('type.infer.infer_st'(X51),X52)))) )),
  inference(superposition,[],[f251,f221])).
fof(f28937,plain,(
  ( ! [X39,X37,X35,X33,X41,X38,X36,X34,X42,X40] : (s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X38),'type.infer.infer_st'(X39)),'const.pair.,_2'(s('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X38),'const.infer.Success_1'(s('type.list.list'('type.infer_t.infer_t'),X41))),s('type.infer.infer_st'(X39),X42))) != s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X38),'type.infer.infer_st'(X39)),'const.infer.n_fresh_uvar_2'(s('type.num.num',happ(s(fun(X34,'type.num.num'),X35),s(X34,happ(s(fun(X33,X34),X36),s(X33,X37))))),s('type.infer.infer_st'(X39),X40))) | s('type.infer.infer_st'(X39),X42) = s('type.infer.infer_st'(X39),'const.infer.infer_st_next_uvar_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'(X39),X40))),s('type.num.num',happ(s(fun(X33,'type.num.num'),'_dst_x0x1_2'(s(fun(X34,'type.num.num'),X35),s(fun(X33,X34),X36))),s(X33,X37))))))),s('type.infer.infer_st'(X39),X40)))) )),
  inference(superposition,[],[f251,f206])).
fof(f28936,plain,(
  ( ! [X30,X28,X26,X24,X23,X31,X29,X27,X25,X32] : (s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X28),'type.infer.infer_st'(X29)),'const.pair.,_2'(s('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X28),'const.infer.Success_1'(s('type.list.list'('type.infer_t.infer_t'),X31))),s('type.infer.infer_st'(X29),X32))) != s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X28),'type.infer.infer_st'(X29)),'const.infer.n_fresh_uvar_2'(s('type.num.num',happ(s(fun(X25,'type.num.num'),'_dst_x0x1_2'(s(fun(X23,'type.num.num'),X24),s(fun(X25,X23),X26))),s(X25,X27))),s('type.infer.infer_st'(X29),X30))) | s('type.infer.infer_st'(X29),X32) = s('type.infer.infer_st'(X29),'const.infer.infer_st_next_uvar_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'(X29),X30))),s('type.num.num',happ(s(fun(X23,'type.num.num'),X24),s(X23,happ(s(fun(X25,X23),X26),s(X25,X27))))))))),s('type.infer.infer_st'(X29),X30)))) )),
  inference(superposition,[],[f251,f206])).
fof(f293,plain,(
  ( ! [X2] : (s(bool,'T_0') = s(bool,happ(s(fun('type.infer.infer_st'(bool),bool),'const.infer.infer_st_subst_0'),s('type.infer.infer_st'(bool),X2))) | s(bool,'F_0') = s(bool,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(bool),X2)))) )),
  inference(superposition,[],[f168,f167])).
fof(f610,plain,(
  ( ! [X17,X18,X16] : (s(X18,f(s(bool,'F_0'))) != s(X18,g(s(bool,'F_0'))) | s(fun(bool,X18),X16) = s(fun(bool,X18),X17) | s(bool,'T_0') = s(bool,sK5(X16,X17,X18,bool))) )),
  inference(superposition,[],[f182,f167])).
fof(f618,plain,(
  ( ! [X17,X18,X16] : (s(bool,'F_0') != s(bool,f(s(X16,sK5(X17,X18,bool,X16)))) | s(fun(X16,bool),X17) = s(fun(X16,bool),X18) | s(bool,'T_0') = s(bool,g(s(X16,sK5(X17,X18,bool,X16))))) )),
  inference(superposition,[],[f182,f167])).
fof(f1151,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),'const.infer.guard_3'(s(bool,'F_0'),s(X0,X2),s(X1,X3))) != s('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),'const.pair.,_2'(s('type.infer.exc'('type.one.one',X0),'const.infer.Success_1'(s('type.one.one',X4))),s(X1,X5)))) )),
  inference(unit_resulting_resolution,[],[f164,f195])).
fof(f1271,plain,(
  ( ! [X39,X37,X35,X38,X36,X40] : (s('type.pair.prod'('type.infer.exc'(bool,X36),X37),'const.infer.st_ex_return_2'(s(bool,'F_0'),s(X37,X38))) != s('type.pair.prod'('type.infer.exc'(bool,X36),X37),'const.pair.,_2'(s('type.infer.exc'(bool,X36),'const.infer.Success_1'(s(bool,X39))),s(X37,X40))) | s(bool,X35) = s(bool,X39) | s(bool,'T_0') = s(bool,X35)) )),
  inference(superposition,[],[f210,f167])).
fof(f1274,plain,(
  ( ! [X59,X57,X60,X58,X56,X55] : (s('type.pair.prod'('type.infer.exc'(bool,X56),X57),'const.infer.st_ex_return_2'(s(bool,X55),s(X57,X58))) != s('type.pair.prod'('type.infer.exc'(bool,X56),X57),'const.pair.,_2'(s('type.infer.exc'(bool,X56),'const.infer.Success_1'(s(bool,X59))),s(X57,X60))) | s(bool,'F_0') = s(bool,X59) | s(bool,'T_0') = s(bool,X55)) )),
  inference(superposition,[],[f210,f167])).
fof(f1351,plain,(
  ( ! [X39,X37,X35,X38,X36,X40] : (s('type.pair.prod'('type.infer.exc'(bool,X36),X37),'const.infer.st_ex_return_2'(s(bool,X38),s(X37,X39))) != s('type.pair.prod'('type.infer.exc'(bool,X36),X37),'const.pair.,_2'(s('type.infer.exc'(bool,X36),'const.infer.Success_1'(s(bool,'F_0'))),s(X37,X40))) | s(bool,X35) = s(bool,X38) | s(bool,'T_0') = s(bool,X35)) )),
  inference(superposition,[],[f210,f167])).
fof(f1354,plain,(
  ( ! [X59,X57,X60,X58,X56,X55] : (s('type.pair.prod'('type.infer.exc'(bool,X56),X57),'const.infer.st_ex_return_2'(s(bool,X58),s(X57,X59))) != s('type.pair.prod'('type.infer.exc'(bool,X56),X57),'const.pair.,_2'(s('type.infer.exc'(bool,X56),'const.infer.Success_1'(s(bool,X55))),s(X57,X60))) | s(bool,'F_0') = s(bool,X58) | s(bool,'T_0') = s(bool,X55)) )),
  inference(superposition,[],[f210,f167])).
fof(f1613,plain,(
  ( ! [X39,X37,X35,X38,X36,X40] : (s('type.pair.prod'('type.infer.exc'(X36,X37),bool),'const.infer.st_ex_return_2'(s(X36,X38),s(bool,'F_0'))) != s('type.pair.prod'('type.infer.exc'(X36,X37),bool),'const.pair.,_2'(s('type.infer.exc'(X36,X37),'const.infer.Success_1'(s(X36,X39))),s(bool,X40))) | s(bool,X35) = s(bool,X40) | s(bool,'T_0') = s(bool,X35)) )),
  inference(superposition,[],[f211,f167])).
fof(f1616,plain,(
  ( ! [X59,X57,X60,X58,X56,X55] : (s('type.pair.prod'('type.infer.exc'(X56,X57),bool),'const.infer.st_ex_return_2'(s(X56,X58),s(bool,X55))) != s('type.pair.prod'('type.infer.exc'(X56,X57),bool),'const.pair.,_2'(s('type.infer.exc'(X56,X57),'const.infer.Success_1'(s(X56,X59))),s(bool,X60))) | s(bool,'F_0') = s(bool,X60) | s(bool,'T_0') = s(bool,X55)) )),
  inference(superposition,[],[f211,f167])).
fof(f1701,plain,(
  ( ! [X39,X37,X35,X38,X36,X40] : (s('type.pair.prod'('type.infer.exc'(X36,X37),bool),'const.infer.st_ex_return_2'(s(X36,X38),s(bool,X39))) != s('type.pair.prod'('type.infer.exc'(X36,X37),bool),'const.pair.,_2'(s('type.infer.exc'(X36,X37),'const.infer.Success_1'(s(X36,X40))),s(bool,'F_0'))) | s(bool,X35) = s(bool,X39) | s(bool,'T_0') = s(bool,X35)) )),
  inference(superposition,[],[f211,f167])).
fof(f1704,plain,(
  ( ! [X59,X57,X60,X58,X56,X55] : (s('type.pair.prod'('type.infer.exc'(X56,X57),bool),'const.infer.st_ex_return_2'(s(X56,X58),s(bool,X59))) != s('type.pair.prod'('type.infer.exc'(X56,X57),bool),'const.pair.,_2'(s('type.infer.exc'(X56,X57),'const.infer.Success_1'(s(X56,X60))),s(bool,X55))) | s(bool,'F_0') = s(bool,X59) | s(bool,'T_0') = s(bool,X55)) )),
  inference(superposition,[],[f211,f167])).
fof(f1912,plain,(
  ( ! [X47,X45,X48,X46,X49] : (s(bool,'F_0') = s(bool,happ(s(fun(X47,bool),'_dst_x0x1_2'(s(fun(X45,bool),X46),s(fun(X47,X45),X48))),s(X47,X49))) | s(bool,'T_0') = s(bool,happ(s(fun(X45,bool),X46),s(X45,happ(s(fun(X47,X45),X48),s(X47,X49)))))) )),
  inference(superposition,[],[f206,f167])).
fof(f2073,plain,(
  ( ! [X39,X41,X38,X42,X40] : (s(bool,'F_0') = s(bool,happ(s(fun(X39,bool),X40),s(X39,happ(s(fun(X38,X39),X41),s(X38,X42))))) | s(bool,'T_0') = s(bool,happ(s(fun(X38,bool),'_dst_x0x1_2'(s(fun(X39,bool),X40),s(fun(X38,X39),X41))),s(X38,X42)))) )),
  inference(superposition,[],[f206,f167])).
fof(f2565,plain,(
  ( ! [X45,X43,X46,X44] : (s('type.pair.prod'('type.infer.exc'(bool,X44),bool),'const.infer.read_1'(s(bool,'F_0'))) != s('type.pair.prod'('type.infer.exc'(bool,X44),bool),'const.infer.st_ex_return_2'(s(bool,X45),s(bool,X46))) | s(bool,X43) = s(bool,X45) | s(bool,'T_0') = s(bool,X43)) )),
  inference(superposition,[],[f1426,f167])).
fof(f2567,plain,(
  ( ! [X64,X62,X65,X63] : (s('type.pair.prod'('type.infer.exc'(bool,X63),bool),'const.infer.read_1'(s(bool,'T_0'))) != s('type.pair.prod'('type.infer.exc'(bool,X63),bool),'const.infer.st_ex_return_2'(s(bool,X64),s(bool,X65))) | s(bool,X64) = s(bool,happ(s(fun('type.infer.infer_st'(bool),bool),'const.infer.infer_st_subst_0'),s('type.infer.infer_st'(bool),X62))) | s(bool,'F_0') = s(bool,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(bool),X62)))) )),
  inference(superposition,[],[f1426,f293])).
fof(f2616,plain,(
  ( ! [X45,X43,X46,X44] : (s('type.pair.prod'('type.infer.exc'(bool,X44),bool),'const.infer.read_1'(s(bool,X45))) != s('type.pair.prod'('type.infer.exc'(bool,X44),bool),'const.infer.st_ex_return_2'(s(bool,'F_0'),s(bool,X46))) | s(bool,X43) = s(bool,X45) | s(bool,'T_0') = s(bool,X43)) )),
  inference(superposition,[],[f1426,f167])).
fof(f2619,plain,(
  ( ! [X59,X57,X60,X58] : (s('type.pair.prod'('type.infer.exc'(bool,X58),bool),'const.infer.read_1'(s(bool,X59))) != s('type.pair.prod'('type.infer.exc'(bool,X58),bool),'const.infer.st_ex_return_2'(s(bool,X57),s(bool,X60))) | s(bool,'F_0') = s(bool,X59) | s(bool,'T_0') = s(bool,X57)) )),
  inference(superposition,[],[f1426,f167])).
fof(f2621,plain,(
  ( ! [X66,X64,X67,X65] : (s('type.pair.prod'('type.infer.exc'(bool,X65),bool),'const.infer.read_1'(s(bool,X66))) != s('type.pair.prod'('type.infer.exc'(bool,X65),bool),'const.infer.st_ex_return_2'(s(bool,'T_0'),s(bool,X67))) | s(bool,X66) = s(bool,happ(s(fun('type.infer.infer_st'(bool),bool),'const.infer.infer_st_subst_0'),s('type.infer.infer_st'(bool),X64))) | s(bool,'F_0') = s(bool,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(bool),X64)))) )),
  inference(superposition,[],[f1426,f293])).
fof(f2834,plain,(
  ( ! [X45,X43,X46,X44] : (s('type.pair.prod'('type.infer.exc'(bool,X44),bool),'const.infer.read_1'(s(bool,'F_0'))) != s('type.pair.prod'('type.infer.exc'(bool,X44),bool),'const.infer.st_ex_return_2'(s(bool,X45),s(bool,X46))) | s(bool,X43) = s(bool,X46) | s(bool,'T_0') = s(bool,X43)) )),
  inference(superposition,[],[f1740,f167])).
fof(f2836,plain,(
  ( ! [X64,X62,X65,X63] : (s('type.pair.prod'('type.infer.exc'(bool,X63),bool),'const.infer.read_1'(s(bool,'T_0'))) != s('type.pair.prod'('type.infer.exc'(bool,X63),bool),'const.infer.st_ex_return_2'(s(bool,X64),s(bool,X65))) | s(bool,X65) = s(bool,happ(s(fun('type.infer.infer_st'(bool),bool),'const.infer.infer_st_subst_0'),s('type.infer.infer_st'(bool),X62))) | s(bool,'F_0') = s(bool,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(bool),X62)))) )),
  inference(superposition,[],[f1740,f293])).
fof(f2940,plain,(
  ( ! [X45,X43,X46,X44] : (s('type.pair.prod'('type.infer.exc'(bool,X44),bool),'const.infer.read_1'(s(bool,X45))) != s('type.pair.prod'('type.infer.exc'(bool,X44),bool),'const.infer.st_ex_return_2'(s(bool,X46),s(bool,'F_0'))) | s(bool,X43) = s(bool,X45) | s(bool,'T_0') = s(bool,X43)) )),
  inference(superposition,[],[f1740,f167])).
fof(f2943,plain,(
  ( ! [X59,X57,X60,X58] : (s('type.pair.prod'('type.infer.exc'(bool,X58),bool),'const.infer.read_1'(s(bool,X59))) != s('type.pair.prod'('type.infer.exc'(bool,X58),bool),'const.infer.st_ex_return_2'(s(bool,X60),s(bool,X57))) | s(bool,'F_0') = s(bool,X59) | s(bool,'T_0') = s(bool,X57)) )),
  inference(superposition,[],[f1740,f167])).
fof(f2945,plain,(
  ( ! [X66,X64,X67,X65] : (s('type.pair.prod'('type.infer.exc'(bool,X65),bool),'const.infer.read_1'(s(bool,X66))) != s('type.pair.prod'('type.infer.exc'(bool,X65),bool),'const.infer.st_ex_return_2'(s(bool,X67),s(bool,'T_0'))) | s(bool,X66) = s(bool,happ(s(fun('type.infer.infer_st'(bool),bool),'const.infer.infer_st_subst_0'),s('type.infer.infer_st'(bool),X64))) | s(bool,'F_0') = s(bool,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(bool),X64)))) )),
  inference(superposition,[],[f1740,f293])).
fof(f3099,plain,(
  ( ! [X61,X59,X57,X62,X60,X58] : (s('type.pair.prod'('type.infer.exc'('type.one.one',X58),bool),'const.infer.guard_3'(s(bool,X59),s(X58,X60),s(bool,'F_0'))) != s('type.pair.prod'('type.infer.exc'('type.one.one',X58),bool),'const.pair.,_2'(s('type.infer.exc'('type.one.one',X58),'const.infer.Success_1'(s('type.one.one',X61))),s(bool,X62))) | s(bool,X57) = s(bool,X62) | s(bool,'T_0') = s(bool,X57)) )),
  inference(superposition,[],[f197,f167])).
fof(f3102,plain,(
  ( ! [X80,X78,X81,X79,X77,X82] : (s('type.pair.prod'('type.infer.exc'('type.one.one',X78),bool),'const.infer.guard_3'(s(bool,X79),s(X78,X80),s(bool,X77))) != s('type.pair.prod'('type.infer.exc'('type.one.one',X78),bool),'const.pair.,_2'(s('type.infer.exc'('type.one.one',X78),'const.infer.Success_1'(s('type.one.one',X81))),s(bool,X82))) | s(bool,'F_0') = s(bool,X82) | s(bool,'T_0') = s(bool,X77)) )),
  inference(superposition,[],[f197,f167])).
fof(f3161,plain,(
  ( ! [X61,X59,X57,X62,X60,X58] : (s('type.pair.prod'('type.infer.exc'('type.one.one',X58),bool),'const.infer.guard_3'(s(bool,X59),s(X58,X60),s(bool,X61))) != s('type.pair.prod'('type.infer.exc'('type.one.one',X58),bool),'const.pair.,_2'(s('type.infer.exc'('type.one.one',X58),'const.infer.Success_1'(s('type.one.one',X62))),s(bool,'F_0'))) | s(bool,X57) = s(bool,X61) | s(bool,'T_0') = s(bool,X57)) )),
  inference(superposition,[],[f197,f167])).
fof(f3164,plain,(
  ( ! [X80,X78,X81,X79,X77,X82] : (s('type.pair.prod'('type.infer.exc'('type.one.one',X78),bool),'const.infer.guard_3'(s(bool,X79),s(X78,X80),s(bool,X81))) != s('type.pair.prod'('type.infer.exc'('type.one.one',X78),bool),'const.pair.,_2'(s('type.infer.exc'('type.one.one',X78),'const.infer.Success_1'(s('type.one.one',X82))),s(bool,X77))) | s(bool,'F_0') = s(bool,X81) | s(bool,'T_0') = s(bool,X77)) )),
  inference(superposition,[],[f197,f167])).
fof(f5787,plain,(
  ( ! [X61,X59,X57,X62,X60,X58] : (s(bool,'F_0') != s(bool,X58) | s(X59,X60) != s(X59,X61) | s('type.pair.prod'('type.infer.exc'(bool,X62),X59),'const.infer.st_ex_return_2'(s(bool,X57),s(X59,X60))) = s('type.pair.prod'('type.infer.exc'(bool,X62),X59),'const.pair.,_2'(s('type.infer.exc'(bool,X62),'const.infer.Success_1'(s(bool,X58))),s(X59,X61))) | s(bool,'T_0') = s(bool,X57)) )),
  inference(superposition,[],[f212,f167])).
fof(f5790,plain,(
  ( ! [X80,X78,X81,X79,X77,X82] : (s(bool,X77) != s(bool,X78) | s(X79,X80) != s(X79,X81) | s('type.pair.prod'('type.infer.exc'(bool,X82),X79),'const.infer.st_ex_return_2'(s(bool,'F_0'),s(X79,X80))) = s('type.pair.prod'('type.infer.exc'(bool,X82),X79),'const.pair.,_2'(s('type.infer.exc'(bool,X82),'const.infer.Success_1'(s(bool,X78))),s(X79,X81))) | s(bool,'T_0') = s(bool,X77)) )),
  inference(superposition,[],[f212,f167])).
fof(f5827,plain,(
  ( ! [X61,X59,X57,X62,X60,X58] : (s(bool,'F_0') != s(bool,X58) | s(X59,X60) != s(X59,X61) | s('type.pair.prod'('type.infer.exc'(bool,X62),X59),'const.infer.st_ex_return_2'(s(bool,X58),s(X59,X60))) = s('type.pair.prod'('type.infer.exc'(bool,X62),X59),'const.pair.,_2'(s('type.infer.exc'(bool,X62),'const.infer.Success_1'(s(bool,X57))),s(X59,X61))) | s(bool,'T_0') = s(bool,X57)) )),
  inference(superposition,[],[f212,f167])).
fof(f5830,plain,(
  ( ! [X80,X78,X81,X79,X77,X82] : (s(bool,X77) != s(bool,X78) | s(X79,X80) != s(X79,X81) | s('type.pair.prod'('type.infer.exc'(bool,X82),X79),'const.infer.st_ex_return_2'(s(bool,X78),s(X79,X80))) = s('type.pair.prod'('type.infer.exc'(bool,X82),X79),'const.pair.,_2'(s('type.infer.exc'(bool,X82),'const.infer.Success_1'(s(bool,'F_0'))),s(X79,X81))) | s(bool,'T_0') = s(bool,X77)) )),
  inference(superposition,[],[f212,f167])).
fof(f616,plain,(
  ( ! [X10,X8,X11,X9] : (s(bool,X11) != s(bool,f(s(X8,sK5(X9,X10,bool,X8)))) | s(fun(X8,bool),X9) = s(fun(X8,bool),X10) | s(bool,'T_0') = s(bool,g(s(X8,sK5(X9,X10,bool,X8)))) | s(bool,'T_0') = s(bool,X11)) )),
  inference(superposition,[],[f182,f272])).
fof(f614,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'T_0') != s(bool,f(s(X0,sK5(X1,X2,bool,X0)))) | s(fun(X0,bool),X1) = s(fun(X0,bool),X2) | s(bool,X3) = s(bool,g(s(X0,sK5(X1,X2,bool,X0)))) | s(bool,'T_0') = s(bool,X3)) )),
  inference(superposition,[],[f182,f272])).
fof(f315,plain,(
  ( ! [X21,X20] : (s(bool,X21) = s(bool,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(bool),X20))) | s(bool,'T_0') = s(bool,X21) | s(bool,'T_0') = s(bool,happ(s(fun('type.infer.infer_st'(bool),bool),'const.infer.infer_st_subst_0'),s('type.infer.infer_st'(bool),X20)))) )),
  inference(superposition,[],[f272,f168])).
fof(f335,plain,(
  ( ! [X14,X15] : (s(bool,'T_0') = s(bool,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(bool),X14))) | s(bool,X15) = s(bool,happ(s(fun('type.infer.infer_st'(bool),bool),'const.infer.infer_st_subst_0'),s('type.infer.infer_st'(bool),X14))) | s(bool,'T_0') = s(bool,X15)) )),
  inference(superposition,[],[f272,f168])).
fof(f2126,plain,(
  ( ! [X241,X239,X242,X240,X238] : (~p(s(bool,happ(s(fun(X240,bool),'_dst_x0x1_2'(s(fun(X238,bool),X239),s(fun(X240,X238),X241))),s(X240,X242)))) | s(bool,'T_0') = s(bool,happ(s(fun(X238,bool),X239),s(X238,happ(s(fun(X240,X238),X241),s(X240,X242)))))) )),
  inference(superposition,[],[f274,f206])).
fof(f2127,plain,(
  ( ! [X243,X246,X244,X248,X247,X245] : (p(s(bool,happ(s(fun(X245,bool),'_dst_x0x1_2'(s(fun(X243,bool),X244),s(fun(X245,X243),X246))),s(X245,X247)))) | s(bool,X248) = s(bool,happ(s(fun(X243,bool),X244),s(X243,happ(s(fun(X245,X243),X246),s(X245,X247))))) | s(bool,'T_0') = s(bool,X248)) )),
  inference(superposition,[],[f361,f206])).
fof(f2190,plain,(
  ( ! [X231,X235,X233,X234,X232] : (~p(s(bool,happ(s(fun(X232,bool),X233),s(X232,happ(s(fun(X231,X232),X234),s(X231,X235)))))) | s(bool,'T_0') = s(bool,happ(s(fun(X231,bool),'_dst_x0x1_2'(s(fun(X232,bool),X233),s(fun(X231,X232),X234))),s(X231,X235)))) )),
  inference(superposition,[],[f274,f206])).
fof(f2191,plain,(
  ( ! [X241,X239,X237,X240,X238,X236] : (p(s(bool,happ(s(fun(X237,bool),X238),s(X237,happ(s(fun(X236,X237),X239),s(X236,X240)))))) | s(bool,X241) = s(bool,happ(s(fun(X236,bool),'_dst_x0x1_2'(s(fun(X237,bool),X238),s(fun(X236,X237),X239))),s(X236,X240))) | s(bool,'T_0') = s(bool,X241)) )),
  inference(superposition,[],[f361,f206])).
fof(f26447,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'(X0,'type.list.list'('type.string.char')),X0),'const.infer.read_1'(s(X0,X1))) != s('type.pair.prod'('type.infer.exc'(X0,'type.list.list'('type.string.char')),X0),'const.infer.lookup_st_ex_4'(s(fun(X2,'type.list.list'('type.string.char')),X3),s(X2,X4),s('type.list.list'('type.pair.prod'(X2,X0)),X5),s(X0,X6))) | s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X1))) = s('type.option.option'(X0),'const.alist.ALOOKUP_2'(s('type.list.list'('type.pair.prod'(X2,X0)),X5),s(X2,X4)))) )),
  inference(superposition,[],[f216,f177])).
fof(f26377,plain,(
  ( ! [X325,X321,X323,X318,X324,X326,X320,X322,X319] : (s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),X320),'const.pair.,_2'(s('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'const.infer.Success_1'(s('type.one.one',X319))),s(X320,X321))) != s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),X320),'const.infer.lookup_st_ex_4'(s(fun(X322,'type.list.list'('type.string.char')),X323),s(X322,X324),s('type.list.list'('type.pair.prod'(X322,'type.one.one')),X325),s(X320,X326))) | s('type.option.option'('type.one.one'),'const.option.SOME_1'(s('type.one.one',X318))) = s('type.option.option'('type.one.one'),'const.alist.ALOOKUP_2'(s('type.list.list'('type.pair.prod'(X322,'type.one.one')),X325),s(X322,X324)))) )),
  inference(superposition,[],[f216,f258])).
fof(f26376,plain,(
  ( ! [X313,X315,X310,X316,X312,X314,X311,X317] : (s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),X311),'const.pair.,_2'(s('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'const.infer.Success_1'(s('type.one.one',X310))),s(X311,X312))) != s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),X311),'const.infer.lookup_st_ex_4'(s(fun(X313,'type.list.list'('type.string.char')),X314),s(X313,X315),s('type.list.list'('type.pair.prod'(X313,'type.one.one')),X316),s(X311,X317))) | s('type.option.option'('type.one.one'),'const.option.SOME_1'(s('type.one.one','const.one.one_0'))) = s('type.option.option'('type.one.one'),'const.alist.ALOOKUP_2'(s('type.list.list'('type.pair.prod'(X313,'type.one.one')),X316),s(X313,X315)))) )),
  inference(superposition,[],[f216,f165])).
fof(f26369,plain,(
  ( ! [X94,X99,X97,X95,X93,X100,X98,X96] : (s('type.pair.prod'('type.infer.exc'(bool,'type.list.list'('type.string.char')),X94),'const.pair.,_2'(s('type.infer.exc'(bool,'type.list.list'('type.string.char')),'const.infer.Success_1'(s(bool,X93))),s(X94,X95))) != s('type.pair.prod'('type.infer.exc'(bool,'type.list.list'('type.string.char')),X94),'const.infer.lookup_st_ex_4'(s(fun(X96,'type.list.list'('type.string.char')),X97),s(X96,X98),s('type.list.list'('type.pair.prod'(X96,bool)),X99),s(X94,X100))) | s('type.option.option'(bool),'const.option.SOME_1'(s(bool,'F_0'))) = s('type.option.option'(bool),'const.alist.ALOOKUP_2'(s('type.list.list'('type.pair.prod'(X96,bool)),X99),s(X96,X98))) | s(bool,'T_0') = s(bool,X93)) )),
  inference(superposition,[],[f216,f167])).
fof(f26368,plain,(
  ( ! [X90,X88,X87,X85,X83,X89,X86,X84] : (s('type.pair.prod'('type.infer.exc'(bool,'type.list.list'('type.string.char')),X84),'const.pair.,_2'(s('type.infer.exc'(bool,'type.list.list'('type.string.char')),'const.infer.Success_1'(s(bool,'F_0'))),s(X84,X85))) != s('type.pair.prod'('type.infer.exc'(bool,'type.list.list'('type.string.char')),X84),'const.infer.lookup_st_ex_4'(s(fun(X86,'type.list.list'('type.string.char')),X87),s(X86,X88),s('type.list.list'('type.pair.prod'(X86,bool)),X89),s(X84,X90))) | s('type.option.option'(bool),'const.option.SOME_1'(s(bool,X83))) = s('type.option.option'(bool),'const.alist.ALOOKUP_2'(s('type.list.list'('type.pair.prod'(X86,bool)),X89),s(X86,X88))) | s(bool,'T_0') = s(bool,X83)) )),
  inference(superposition,[],[f216,f167])).
fof(f25041,plain,(
  ( ! [X364,X366,X372,X368,X370,X365,X367,X369,X371] : (s('type.pair.prod'('type.infer.exc'(X366,'type.list.list'('type.string.char')),X367),'const.pair.,_2'(s('type.infer.exc'(X366,'type.list.list'('type.string.char')),'const.infer.Success_1'(s(X366,X368))),s(X367,X369))) != s('type.pair.prod'('type.infer.exc'(X366,'type.list.list'('type.string.char')),X367),'const.infer.flookup_st_ex_4'(s(fun('type.one.one','type.list.list'('type.string.char')),X370),s('type.one.one',X365),s('type.finite_map.fmap'('type.one.one',X366),X371),s(X367,X372))) | s('type.option.option'(X366),'const.option.SOME_1'(s(X366,X368))) = s('type.option.option'(X366),'const.finite_map.FLOOKUP_2'(s('type.finite_map.fmap'('type.one.one',X366),X371),s('type.one.one',X364)))) )),
  inference(superposition,[],[f213,f258])).
fof(f25040,plain,(
  ( ! [X356,X358,X360,X362,X357,X359,X361,X363] : (s('type.pair.prod'('type.infer.exc'(X357,'type.list.list'('type.string.char')),X358),'const.pair.,_2'(s('type.infer.exc'(X357,'type.list.list'('type.string.char')),'const.infer.Success_1'(s(X357,X359))),s(X358,X360))) != s('type.pair.prod'('type.infer.exc'(X357,'type.list.list'('type.string.char')),X358),'const.infer.flookup_st_ex_4'(s(fun('type.one.one','type.list.list'('type.string.char')),X361),s('type.one.one',X356),s('type.finite_map.fmap'('type.one.one',X357),X362),s(X358,X363))) | s('type.option.option'(X357),'const.option.SOME_1'(s(X357,X359))) = s('type.option.option'(X357),'const.finite_map.FLOOKUP_2'(s('type.finite_map.fmap'('type.one.one',X357),X362),s('type.one.one','const.one.one_0')))) )),
  inference(superposition,[],[f213,f165])).
fof(f25001,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'(X0,'type.list.list'('type.string.char')),X0),'const.infer.read_1'(s(X0,X1))) != s('type.pair.prod'('type.infer.exc'(X0,'type.list.list'('type.string.char')),X0),'const.infer.flookup_st_ex_4'(s(fun(X2,'type.list.list'('type.string.char')),X3),s(X2,X4),s('type.finite_map.fmap'(X2,X0),X5),s(X0,X6))) | s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X1))) = s('type.option.option'(X0),'const.finite_map.FLOOKUP_2'(s('type.finite_map.fmap'(X2,X0),X5),s(X2,X4)))) )),
  inference(superposition,[],[f213,f177])).
fof(f24911,plain,(
  ( ! [X364,X366,X372,X368,X370,X365,X367,X369,X371] : (s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),X366),'const.pair.,_2'(s('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'const.infer.Success_1'(s('type.one.one',X365))),s(X366,X367))) != s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),X366),'const.infer.flookup_st_ex_4'(s(fun(X368,'type.list.list'('type.string.char')),X369),s(X368,X370),s('type.finite_map.fmap'(X368,'type.one.one'),X371),s(X366,X372))) | s('type.option.option'('type.one.one'),'const.option.SOME_1'(s('type.one.one',X364))) = s('type.option.option'('type.one.one'),'const.finite_map.FLOOKUP_2'(s('type.finite_map.fmap'(X368,'type.one.one'),X371),s(X368,X370)))) )),
  inference(superposition,[],[f213,f258])).
fof(f24910,plain,(
  ( ! [X356,X358,X360,X362,X357,X359,X361,X363] : (s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),X357),'const.pair.,_2'(s('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'const.infer.Success_1'(s('type.one.one',X356))),s(X357,X358))) != s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),X357),'const.infer.flookup_st_ex_4'(s(fun(X359,'type.list.list'('type.string.char')),X360),s(X359,X361),s('type.finite_map.fmap'(X359,'type.one.one'),X362),s(X357,X363))) | s('type.option.option'('type.one.one'),'const.option.SOME_1'(s('type.one.one','const.one.one_0'))) = s('type.option.option'('type.one.one'),'const.finite_map.FLOOKUP_2'(s('type.finite_map.fmap'(X359,'type.one.one'),X362),s(X359,X361)))) )),
  inference(superposition,[],[f213,f165])).
fof(f24900,plain,(
  ( ! [X177,X175,X173,X171,X180,X178,X176,X174,X172,X179] : (s('type.pair.prod'('type.infer.exc'(fun(X171,'type.one.one'),'type.list.list'('type.string.char')),X174),'const.pair.,_2'(s('type.infer.exc'(fun(X171,'type.one.one'),'type.list.list'('type.string.char')),'const.infer.Success_1'(s(fun(X171,'type.one.one'),X173))),s(X174,X175))) != s('type.pair.prod'('type.infer.exc'(fun(X171,'type.one.one'),'type.list.list'('type.string.char')),X174),'const.infer.flookup_st_ex_4'(s(fun(X176,'type.list.list'('type.string.char')),X177),s(X176,X178),s('type.finite_map.fmap'(X176,fun(X171,'type.one.one')),X179),s(X174,X180))) | s('type.option.option'(fun(X171,'type.one.one')),'const.option.SOME_1'(s(fun(X171,'type.one.one'),X172))) = s('type.option.option'(fun(X171,'type.one.one')),'const.finite_map.FLOOKUP_2'(s('type.finite_map.fmap'(X176,fun(X171,'type.one.one')),X179),s(X176,X178)))) )),
  inference(superposition,[],[f213,f605])).
fof(f25151,plain,(
  ( ! [X158,X156,X154,X161,X159,X157,X155,X160] : (s('type.option.option'(bool),'const.option.SOME_1'(s(bool,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(bool),X154))))) = s('type.option.option'(bool),'const.finite_map.FLOOKUP_2'(s('type.finite_map.fmap'(X157,bool),X160),s(X157,X159))) | s('type.pair.prod'('type.infer.exc'(bool,'type.list.list'('type.string.char')),X155),'const.pair.,_2'(s('type.infer.exc'(bool,'type.list.list'('type.string.char')),'const.infer.Success_1'(s(bool,'T_0'))),s(X155,X156))) != s('type.pair.prod'('type.infer.exc'(bool,'type.list.list'('type.string.char')),X155),'const.infer.flookup_st_ex_4'(s(fun(X157,'type.list.list'('type.string.char')),X158),s(X157,X159),s('type.finite_map.fmap'(X157,bool),X160),s(X155,X161))) | s(bool,'F_0') = s(bool,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(bool),X154)))) )),
  inference(forward_demodulation,[],[f24898,f168])).
fof(f24898,plain,(
  ( ! [X158,X156,X154,X161,X159,X157,X155,X160] : (s('type.pair.prod'('type.infer.exc'(bool,'type.list.list'('type.string.char')),X155),'const.pair.,_2'(s('type.infer.exc'(bool,'type.list.list'('type.string.char')),'const.infer.Success_1'(s(bool,'T_0'))),s(X155,X156))) != s('type.pair.prod'('type.infer.exc'(bool,'type.list.list'('type.string.char')),X155),'const.infer.flookup_st_ex_4'(s(fun(X157,'type.list.list'('type.string.char')),X158),s(X157,X159),s('type.finite_map.fmap'(X157,bool),X160),s(X155,X161))) | s('type.option.option'(bool),'const.finite_map.FLOOKUP_2'(s('type.finite_map.fmap'(X157,bool),X160),s(X157,X159))) = s('type.option.option'(bool),'const.option.SOME_1'(s(bool,happ(s(fun('type.infer.infer_st'(bool),bool),'const.infer.infer_st_subst_0'),s('type.infer.infer_st'(bool),X154))))) | s(bool,'F_0') = s(bool,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(bool),X154)))) )),
  inference(superposition,[],[f213,f293])).
fof(f24896,plain,(
  ( ! [X146,X144,X142,X140,X145,X143,X141,X139] : (s('type.pair.prod'('type.infer.exc'(bool,'type.list.list'('type.string.char')),X140),'const.pair.,_2'(s('type.infer.exc'(bool,'type.list.list'('type.string.char')),'const.infer.Success_1'(s(bool,X139))),s(X140,X141))) != s('type.pair.prod'('type.infer.exc'(bool,'type.list.list'('type.string.char')),X140),'const.infer.flookup_st_ex_4'(s(fun(X142,'type.list.list'('type.string.char')),X143),s(X142,X144),s('type.finite_map.fmap'(X142,bool),X145),s(X140,X146))) | s('type.option.option'(bool),'const.option.SOME_1'(s(bool,'F_0'))) = s('type.option.option'(bool),'const.finite_map.FLOOKUP_2'(s('type.finite_map.fmap'(X142,bool),X145),s(X142,X144))) | s(bool,'T_0') = s(bool,X139)) )),
  inference(superposition,[],[f213,f167])).
fof(f24894,plain,(
  ( ! [X127,X125,X123,X121,X128,X126,X124,X122,X129] : (s('type.pair.prod'('type.infer.exc'(bool,'type.list.list'('type.string.char')),X122),'const.pair.,_2'(s('type.infer.exc'(bool,'type.list.list'('type.string.char')),'const.infer.Success_1'(s(bool,X121))),s(X122,X123))) != s('type.pair.prod'('type.infer.exc'(bool,'type.list.list'('type.string.char')),X122),'const.infer.flookup_st_ex_4'(s(fun(X124,'type.list.list'('type.string.char')),X125),s(X124,X126),s('type.finite_map.fmap'(X124,bool),X127),s(X122,X128))) | s('type.option.option'(bool),'const.option.SOME_1'(s(bool,'T_0'))) = s('type.option.option'(bool),'const.finite_map.FLOOKUP_2'(s('type.finite_map.fmap'(X124,bool),X127),s(X124,X126))) | s(bool,X121) = s(bool,X129) | s(bool,'T_0') = s(bool,X129)) )),
  inference(superposition,[],[f213,f272])).
fof(f24893,plain,(
  ( ! [X118,X116,X114,X120,X119,X117,X115,X113] : (s('type.pair.prod'('type.infer.exc'(bool,'type.list.list'('type.string.char')),X114),'const.pair.,_2'(s('type.infer.exc'(bool,'type.list.list'('type.string.char')),'const.infer.Success_1'(s(bool,'F_0'))),s(X114,X115))) != s('type.pair.prod'('type.infer.exc'(bool,'type.list.list'('type.string.char')),X114),'const.infer.flookup_st_ex_4'(s(fun(X116,'type.list.list'('type.string.char')),X117),s(X116,X118),s('type.finite_map.fmap'(X116,bool),X119),s(X114,X120))) | s('type.option.option'(bool),'const.option.SOME_1'(s(bool,X113))) = s('type.option.option'(bool),'const.finite_map.FLOOKUP_2'(s('type.finite_map.fmap'(X116,bool),X119),s(X116,X118))) | s(bool,'T_0') = s(bool,X113)) )),
  inference(superposition,[],[f213,f167])).
fof(f24891,plain,(
  ( ! [X103,X101,X99,X97,X95,X102,X100,X98,X96] : (s('type.pair.prod'('type.infer.exc'(bool,'type.list.list'('type.string.char')),X97),'const.pair.,_2'(s('type.infer.exc'(bool,'type.list.list'('type.string.char')),'const.infer.Success_1'(s(bool,X96))),s(X97,X98))) != s('type.pair.prod'('type.infer.exc'(bool,'type.list.list'('type.string.char')),X97),'const.infer.flookup_st_ex_4'(s(fun(X99,'type.list.list'('type.string.char')),X100),s(X99,X101),s('type.finite_map.fmap'(X99,bool),X102),s(X97,X103))) | s('type.option.option'(bool),'const.option.SOME_1'(s(bool,X95))) = s('type.option.option'(bool),'const.finite_map.FLOOKUP_2'(s('type.finite_map.fmap'(X99,bool),X102),s(X99,X101))) | s(bool,'T_0') = s(bool,X95) | s(bool,'T_0') = s(bool,X96)) )),
  inference(superposition,[],[f213,f272])).
fof(f24889,plain,(
  ( ! [X80,X78,X85,X83,X81,X79,X77,X84,X82] : (s('type.pair.prod'('type.infer.exc'(bool,'type.list.list'('type.string.char')),X78),'const.pair.,_2'(s('type.infer.exc'(bool,'type.list.list'('type.string.char')),'const.infer.Success_1'(s(bool,'T_0'))),s(X78,X79))) != s('type.pair.prod'('type.infer.exc'(bool,'type.list.list'('type.string.char')),X78),'const.infer.flookup_st_ex_4'(s(fun(X80,'type.list.list'('type.string.char')),X81),s(X80,X82),s('type.finite_map.fmap'(X80,bool),X83),s(X78,X84))) | s('type.option.option'(bool),'const.option.SOME_1'(s(bool,X77))) = s('type.option.option'(bool),'const.finite_map.FLOOKUP_2'(s('type.finite_map.fmap'(X80,bool),X83),s(X80,X82))) | s(bool,X77) = s(bool,X85) | s(bool,'T_0') = s(bool,X85)) )),
  inference(superposition,[],[f213,f272])).
fof(f22572,plain,(
  ( ! [X118,X116,X114,X117,X115,X113] : (s('type.pair.prod'('type.infer.exc'(X114,'type.list.list'('type.string.char')),bool),'const.pair.,_2'(s('type.infer.exc'(X114,'type.list.list'('type.string.char')),'const.infer.Success_1'(s(X114,X115))),s(bool,X116))) != s('type.pair.prod'('type.infer.exc'(X114,'type.list.list'('type.string.char')),bool),'const.infer.lookup_tenvC_st_ex_3'(s('type.ast.id'('type.list.list'('type.string.char')),X117),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X114)))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X114))),X118),s(bool,X113))) | s(bool,'F_0') = s(bool,X116) | s(bool,'T_0') = s(bool,X113)) )),
  inference(superposition,[],[f200,f167])).
fof(f22569,plain,(
  ( ! [X94,X97,X95,X93,X98,X96] : (s('type.pair.prod'('type.infer.exc'(X94,'type.list.list'('type.string.char')),bool),'const.pair.,_2'(s('type.infer.exc'(X94,'type.list.list'('type.string.char')),'const.infer.Success_1'(s(X94,X95))),s(bool,X96))) != s('type.pair.prod'('type.infer.exc'(X94,'type.list.list'('type.string.char')),bool),'const.infer.lookup_tenvC_st_ex_3'(s('type.ast.id'('type.list.list'('type.string.char')),X97),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X94)))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X94))),X98),s(bool,'F_0'))) | s(bool,X93) = s(bool,X96) | s(bool,'T_0') = s(bool,X93)) )),
  inference(superposition,[],[f200,f167])).
fof(f22565,plain,(
  ( ! [X70,X68,X66,X71,X69,X67,X65] : (s('type.pair.prod'('type.infer.exc'(X66,'type.list.list'('type.string.char')),bool),'const.pair.,_2'(s('type.infer.exc'(X66,'type.list.list'('type.string.char')),'const.infer.Success_1'(s(X66,X67))),s(bool,X68))) != s('type.pair.prod'('type.infer.exc'(X66,'type.list.list'('type.string.char')),bool),'const.infer.lookup_tenvC_st_ex_3'(s('type.ast.id'('type.list.list'('type.string.char')),X69),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X66)))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X66))),X70),s(bool,'T_0'))) | s(bool,X65) = s(bool,X68) | s(bool,X65) = s(bool,X71) | s(bool,'T_0') = s(bool,X71)) )),
  inference(superposition,[],[f200,f272])).
fof(f22561,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'(X2,'type.list.list'('type.string.char')),X0),'const.pair.,_2'(s('type.infer.exc'(X2,'type.list.list'('type.string.char')),'const.infer.Success_1'(s(X2,X3))),s(X0,X4))) != s('type.pair.prod'('type.infer.exc'(X2,'type.list.list'('type.string.char')),X0),'const.infer.lookup_tenvC_st_ex_3'(s('type.ast.id'('type.list.list'('type.string.char')),X5),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X2)))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X2))),X6),s(X0,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(X0),X1))))) | s(X0,X4) = s(X0,happ(s(fun('type.infer.infer_st'(X0),X0),'const.infer.infer_st_subst_0'),s('type.infer.infer_st'(X0),X1)))) )),
  inference(superposition,[],[f200,f168])).
fof(f22549,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s('type.pair.prod'('type.infer.exc'(X0,'type.list.list'('type.string.char')),X0),'const.infer.read_1'(s(X0,X1))) != s('type.pair.prod'('type.infer.exc'(X0,'type.list.list'('type.string.char')),X0),'const.infer.lookup_tenvC_st_ex_3'(s('type.ast.id'('type.list.list'('type.string.char')),X2),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X0)))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X0))),X3),s(X0,X4))) | s(X0,X1) = s(X0,X4)) )),
  inference(superposition,[],[f200,f177])).
fof(f22503,plain,(
  ( ! [X118,X116,X114,X117,X115,X113] : (s('type.pair.prod'('type.infer.exc'(X114,'type.list.list'('type.string.char')),bool),'const.pair.,_2'(s('type.infer.exc'(X114,'type.list.list'('type.string.char')),'const.infer.Success_1'(s(X114,X115))),s(bool,X113))) != s('type.pair.prod'('type.infer.exc'(X114,'type.list.list'('type.string.char')),bool),'const.infer.lookup_tenvC_st_ex_3'(s('type.ast.id'('type.list.list'('type.string.char')),X116),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X114)))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X114))),X117),s(bool,X118))) | s(bool,'F_0') = s(bool,X118) | s(bool,'T_0') = s(bool,X113)) )),
  inference(superposition,[],[f200,f167])).
fof(f22501,plain,(
  ( ! [X103,X101,X99,X105,X102,X100,X104] : (s('type.pair.prod'('type.infer.exc'(X100,'type.list.list'('type.string.char')),bool),'const.pair.,_2'(s('type.infer.exc'(X100,'type.list.list'('type.string.char')),'const.infer.Success_1'(s(X100,X101))),s(bool,X99))) != s('type.pair.prod'('type.infer.exc'(X100,'type.list.list'('type.string.char')),bool),'const.infer.lookup_tenvC_st_ex_3'(s('type.ast.id'('type.list.list'('type.string.char')),X102),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X100)))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X100))),X103),s(bool,X104))) | s(bool,'T_0') = s(bool,X104) | s(bool,X99) = s(bool,X105) | s(bool,'T_0') = s(bool,X105)) )),
  inference(superposition,[],[f200,f272])).
fof(f22500,plain,(
  ( ! [X94,X97,X95,X93,X98,X96] : (s('type.pair.prod'('type.infer.exc'(X94,'type.list.list'('type.string.char')),bool),'const.pair.,_2'(s('type.infer.exc'(X94,'type.list.list'('type.string.char')),'const.infer.Success_1'(s(X94,X95))),s(bool,'F_0'))) != s('type.pair.prod'('type.infer.exc'(X94,'type.list.list'('type.string.char')),bool),'const.infer.lookup_tenvC_st_ex_3'(s('type.ast.id'('type.list.list'('type.string.char')),X96),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X94)))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X94))),X97),s(bool,X98))) | s(bool,X93) = s(bool,X98) | s(bool,'T_0') = s(bool,X93)) )),
  inference(superposition,[],[f200,f167])).
fof(f22498,plain,(
  ( ! [X80,X85,X83,X81,X79,X84,X82] : (s('type.pair.prod'('type.infer.exc'(X81,'type.list.list'('type.string.char')),bool),'const.pair.,_2'(s('type.infer.exc'(X81,'type.list.list'('type.string.char')),'const.infer.Success_1'(s(X81,X82))),s(bool,X80))) != s('type.pair.prod'('type.infer.exc'(X81,'type.list.list'('type.string.char')),bool),'const.infer.lookup_tenvC_st_ex_3'(s('type.ast.id'('type.list.list'('type.string.char')),X83),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X81)))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X81))),X84),s(bool,X85))) | s(bool,X79) = s(bool,X85) | s(bool,'T_0') = s(bool,X79) | s(bool,'T_0') = s(bool,X80)) )),
  inference(superposition,[],[f200,f272])).
fof(f22496,plain,(
  ( ! [X70,X68,X66,X71,X69,X67,X65] : (s('type.pair.prod'('type.infer.exc'(X66,'type.list.list'('type.string.char')),bool),'const.pair.,_2'(s('type.infer.exc'(X66,'type.list.list'('type.string.char')),'const.infer.Success_1'(s(X66,X67))),s(bool,'T_0'))) != s('type.pair.prod'('type.infer.exc'(X66,'type.list.list'('type.string.char')),bool),'const.infer.lookup_tenvC_st_ex_3'(s('type.ast.id'('type.list.list'('type.string.char')),X68),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X66)))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X66))),X69),s(bool,X70))) | s(bool,X65) = s(bool,X70) | s(bool,X65) = s(bool,X71) | s(bool,'T_0') = s(bool,X71)) )),
  inference(superposition,[],[f200,f272])).
fof(f22492,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'(X2,'type.list.list'('type.string.char')),X0),'const.pair.,_2'(s('type.infer.exc'(X2,'type.list.list'('type.string.char')),'const.infer.Success_1'(s(X2,X3))),s(X0,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(X0),X1))))) != s('type.pair.prod'('type.infer.exc'(X2,'type.list.list'('type.string.char')),X0),'const.infer.lookup_tenvC_st_ex_3'(s('type.ast.id'('type.list.list'('type.string.char')),X4),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X2)))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X2))),X5),s(X0,X6))) | s(X0,X6) = s(X0,happ(s(fun('type.infer.infer_st'(X0),X0),'const.infer.infer_st_subst_0'),s('type.infer.infer_st'(X0),X1)))) )),
  inference(superposition,[],[f200,f168])).
fof(f22422,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'(X0,'type.list.list'('type.string.char')),'type.pair.prod'('type.infer.exc'(X1,X2),X1)),'const.pair.,_2'(s('type.infer.exc'(X0,'type.list.list'('type.string.char')),'const.infer.Success_1'(s(X0,X3))),s('type.pair.prod'('type.infer.exc'(X1,X2),X1),'const.infer.failwith_2'(s(X2,X4),s(X1,X5))))) != s('type.pair.prod'('type.infer.exc'(X0,'type.list.list'('type.string.char')),'type.pair.prod'('type.infer.exc'(X1,X2),X1)),'const.infer.lookup_tenvC_st_ex_3'(s('type.ast.id'('type.list.list'('type.string.char')),X6),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X0)))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X0))),X7),s('type.pair.prod'('type.infer.exc'(X1,X2),X1),'const.infer.read_1'(s(X1,X8)))))) )),
  inference(unit_resulting_resolution,[],[f706,f200])).
fof(f22438,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'(X0,'type.list.list'('type.string.char')),'type.pair.prod'('type.infer.exc'(X1,X2),X1)),'const.pair.,_2'(s('type.infer.exc'(X0,'type.list.list'('type.string.char')),'const.infer.Success_1'(s(X0,X3))),s('type.pair.prod'('type.infer.exc'(X1,X2),X1),'const.infer.read_1'(s(X1,X4))))) != s('type.pair.prod'('type.infer.exc'(X0,'type.list.list'('type.string.char')),'type.pair.prod'('type.infer.exc'(X1,X2),X1)),'const.infer.lookup_tenvC_st_ex_3'(s('type.ast.id'('type.list.list'('type.string.char')),X5),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X0)))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X0))),X6),s('type.pair.prod'('type.infer.exc'(X1,X2),X1),'const.infer.failwith_2'(s(X2,X7),s(X1,X8)))))) )),
  inference(unit_resulting_resolution,[],[f706,f200])).
fof(f20091,plain,(
  ( ! [X1099,X1097,X1101,X1095,X1098,X1096,X1102,X1100] : (s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X1099),'type.infer.infer_st'(X1100)),'const.infer.fresh_uvar_1'(s('type.infer.infer_st'(X1100),X1101))) != s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X1099),'type.infer.infer_st'(X1100)),'const.pair.,_2'(s('type.infer.exc'('type.infer_t.infer_t',X1099),'const.infer.Success_1'(s('type.infer_t.infer_t','const.option.option_CASE_3'(s('type.option.option'(X1095),X1096),s('type.infer_t.infer_t',X1097),s(fun(X1095,'type.infer_t.infer_t'),X1098))))),s('type.infer.infer_st'(X1100),X1102))) | s('type.infer_t.infer_t','const.infer_t.Infer_Tuvar_1'(s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'(X1100),X1101))))) = s('type.infer_t.infer_t',happ(s(fun(fun(X1095,'type.infer_t.infer_t'),'type.infer_t.infer_t'),happ(s(fun('type.infer_t.infer_t',fun(fun(X1095,'type.infer_t.infer_t'),'type.infer_t.infer_t')),happ(s(fun('type.option.option'(X1095),fun('type.infer_t.infer_t',fun(fun(X1095,'type.infer_t.infer_t'),'type.infer_t.infer_t'))),'const.option.option_CASE_0'),s('type.option.option'(X1095),X1096))),s('type.infer_t.infer_t',X1097))),s(fun(X1095,'type.infer_t.infer_t'),X1098)))) )),
  inference(superposition,[],[f189,f184])).
fof(f20083,plain,(
  ( ! [X1050,X1048,X1046,X1044,X1049,X1043,X1047,X1045] : (s('type.pair.prod'('type.infer.exc'('type.num.num',X1047),'type.infer.infer_st'(X1048)),'const.infer.get_next_uvar_1'(s('type.infer.infer_st'(X1048),X1049))) != s('type.pair.prod'('type.infer.exc'('type.num.num',X1047),'type.infer.infer_st'(X1048)),'const.pair.,_2'(s('type.infer.exc'('type.num.num',X1047),'const.infer.Success_1'(s('type.num.num','const.option.option_CASE_3'(s('type.option.option'(X1043),X1044),s('type.num.num',X1045),s(fun(X1043,'type.num.num'),X1046))))),s('type.infer.infer_st'(X1048),X1050))) | s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'(X1048),X1049))) = s('type.num.num',happ(s(fun(fun(X1043,'type.num.num'),'type.num.num'),happ(s(fun('type.num.num',fun(fun(X1043,'type.num.num'),'type.num.num')),happ(s(fun('type.option.option'(X1043),fun('type.num.num',fun(fun(X1043,'type.num.num'),'type.num.num'))),'const.option.option_CASE_0'),s('type.option.option'(X1043),X1044))),s('type.num.num',X1045))),s(fun(X1043,'type.num.num'),X1046)))) )),
  inference(superposition,[],[f186,f184])).
fof(f19996,plain,(
  ( ! [X453,X455,X451,X457,X452,X454,X456,X458] : (s('type.pair.prod'('type.infer.exc'(X451,X456),X451),'const.infer.st_ex_return_2'(s(X451,X457),s(X451,X458))) != s('type.pair.prod'('type.infer.exc'(X451,X456),X451),'const.infer.read_1'(s(X451,'const.option.option_CASE_3'(s('type.option.option'(X452),X453),s(X451,X454),s(fun(X452,X451),X455))))) | s(X451,X458) = s(X451,happ(s(fun(fun(X452,X451),X451),happ(s(fun(X451,fun(fun(X452,X451),X451)),happ(s(fun('type.option.option'(X452),fun(X451,fun(fun(X452,X451),X451))),'const.option.option_CASE_0'),s('type.option.option'(X452),X453))),s(X451,X454))),s(fun(X452,X451),X455)))) )),
  inference(superposition,[],[f1740,f184])).
fof(f19994,plain,(
  ( ! [X441,X436,X438,X440,X442,X437,X439,X435] : (s('type.pair.prod'('type.infer.exc'(X435,X440),X435),'const.infer.read_1'(s(X435,X441))) != s('type.pair.prod'('type.infer.exc'(X435,X440),X435),'const.infer.st_ex_return_2'(s(X435,X442),s(X435,'const.option.option_CASE_3'(s('type.option.option'(X436),X437),s(X435,X438),s(fun(X436,X435),X439))))) | s(X435,X441) = s(X435,happ(s(fun(fun(X436,X435),X435),happ(s(fun(X435,fun(fun(X436,X435),X435)),happ(s(fun('type.option.option'(X436),fun(X435,fun(fun(X436,X435),X435))),'const.option.option_CASE_0'),s('type.option.option'(X436),X437))),s(X435,X438))),s(fun(X436,X435),X439)))) )),
  inference(superposition,[],[f1740,f184])).
fof(f19993,plain,(
  ( ! [X428,X430,X432,X434,X429,X431,X427,X433] : (s('type.pair.prod'('type.infer.exc'(X427,X432),X427),'const.infer.st_ex_return_2'(s(X427,X433),s(X427,X434))) != s('type.pair.prod'('type.infer.exc'(X427,X432),X427),'const.infer.read_1'(s(X427,'const.option.option_CASE_3'(s('type.option.option'(X428),X429),s(X427,X430),s(fun(X428,X427),X431))))) | s(X427,X433) = s(X427,happ(s(fun(fun(X428,X427),X427),happ(s(fun(X427,fun(fun(X428,X427),X427)),happ(s(fun('type.option.option'(X428),fun(X427,fun(fun(X428,X427),X427))),'const.option.option_CASE_0'),s('type.option.option'(X428),X429))),s(X427,X430))),s(fun(X428,X427),X431)))) )),
  inference(superposition,[],[f1426,f184])).
fof(f19992,plain,(
  ( ! [X420,X422,X424,X426,X421,X423,X419,X425] : (s('type.pair.prod'('type.infer.exc'(X419,X424),X419),'const.infer.read_1'(s(X419,X425))) != s('type.pair.prod'('type.infer.exc'(X419,X424),X419),'const.infer.st_ex_return_2'(s(X419,'const.option.option_CASE_3'(s('type.option.option'(X420),X421),s(X419,X422),s(fun(X420,X419),X423))),s(X419,X426))) | s(X419,X425) = s(X419,happ(s(fun(fun(X420,X419),X419),happ(s(fun(X419,fun(fun(X420,X419),X419)),happ(s(fun('type.option.option'(X420),fun(X419,fun(fun(X420,X419),X419))),'const.option.option_CASE_0'),s('type.option.option'(X420),X421))),s(X419,X422))),s(fun(X420,X419),X423)))) )),
  inference(superposition,[],[f1426,f184])).
fof(f19977,plain,(
  ( ! [X269,X271,X265,X267,X273,X275,X268,X270,X266,X276,X272,X274] : (s('type.pair.prod'('type.infer.exc'(X270,'type.list.list'('type.string.char')),X265),'const.infer.flookup_st_ex_4'(s(fun(X272,'type.list.list'('type.string.char')),X273),s(X272,X274),s('type.finite_map.fmap'(X272,X270),X275),s(X265,X276))) != s('type.pair.prod'('type.infer.exc'(X270,'type.list.list'('type.string.char')),X265),'const.pair.,_2'(s('type.infer.exc'(X270,'type.list.list'('type.string.char')),'const.infer.Success_1'(s(X270,X271))),s(X265,'const.option.option_CASE_3'(s('type.option.option'(X266),X267),s(X265,X268),s(fun(X266,X265),X269))))) | s(X265,X276) = s(X265,happ(s(fun(fun(X266,X265),X265),happ(s(fun(X265,fun(fun(X266,X265),X265)),happ(s(fun('type.option.option'(X266),fun(X265,fun(fun(X266,X265),X265))),'const.option.option_CASE_0'),s('type.option.option'(X266),X267))),s(X265,X268))),s(fun(X266,X265),X269)))) )),
  inference(superposition,[],[f214,f184])).
fof(f19975,plain,(
  ( ! [X243,X241,X251,X249,X246,X244,X242,X252,X250,X248,X247,X245] : (s('type.pair.prod'('type.infer.exc'(X246,'type.list.list'('type.string.char')),X241),'const.pair.,_2'(s('type.infer.exc'(X246,'type.list.list'('type.string.char')),'const.infer.Success_1'(s(X246,X247))),s(X241,X248))) != s('type.pair.prod'('type.infer.exc'(X246,'type.list.list'('type.string.char')),X241),'const.infer.flookup_st_ex_4'(s(fun(X249,'type.list.list'('type.string.char')),X250),s(X249,X251),s('type.finite_map.fmap'(X249,X246),X252),s(X241,'const.option.option_CASE_3'(s('type.option.option'(X242),X243),s(X241,X244),s(fun(X242,X241),X245))))) | s(X241,X248) = s(X241,happ(s(fun(fun(X242,X241),X241),happ(s(fun(X241,fun(fun(X242,X241),X241)),happ(s(fun('type.option.option'(X242),fun(X241,fun(fun(X242,X241),X241))),'const.option.option_CASE_0'),s('type.option.option'(X242),X243))),s(X241,X244))),s(fun(X242,X241),X245)))) )),
  inference(superposition,[],[f214,f184])).
fof(f19971,plain,(
  ( ! [X208,X206,X204,X202,X200,X199,X207,X205,X203,X201] : (s('type.pair.prod'('type.infer.exc'(X204,X205),X199),'const.infer.st_ex_return_2'(s(X204,X206),s(X199,X207))) != s('type.pair.prod'('type.infer.exc'(X204,X205),X199),'const.pair.,_2'(s('type.infer.exc'(X204,X205),'const.infer.Success_1'(s(X204,X208))),s(X199,'const.option.option_CASE_3'(s('type.option.option'(X200),X201),s(X199,X202),s(fun(X200,X199),X203))))) | s(X199,X207) = s(X199,happ(s(fun(fun(X200,X199),X199),happ(s(fun(X199,fun(fun(X200,X199),X199)),happ(s(fun('type.option.option'(X200),fun(X199,fun(fun(X200,X199),X199))),'const.option.option_CASE_0'),s('type.option.option'(X200),X201))),s(X199,X202))),s(fun(X200,X199),X203)))) )),
  inference(superposition,[],[f211,f184])).
fof(f19970,plain,(
  ( ! [X191,X189,X198,X196,X194,X192,X190,X197,X195,X193] : (s('type.pair.prod'('type.infer.exc'(X194,X195),X189),'const.pair.,_2'(s('type.infer.exc'(X194,X195),'const.infer.Success_1'(s(X194,X197))),s(X189,X198))) != s('type.pair.prod'('type.infer.exc'(X194,X195),X189),'const.infer.st_ex_return_2'(s(X194,X196),s(X189,'const.option.option_CASE_3'(s('type.option.option'(X190),X191),s(X189,X192),s(fun(X190,X189),X193))))) | s(X189,X198) = s(X189,happ(s(fun(fun(X190,X189),X189),happ(s(fun(X189,fun(fun(X190,X189),X189)),happ(s(fun('type.option.option'(X190),fun(X189,fun(fun(X190,X189),X189))),'const.option.option_CASE_0'),s('type.option.option'(X190),X191))),s(X189,X192))),s(fun(X190,X189),X193)))) )),
  inference(superposition,[],[f211,f184])).
fof(f19965,plain,(
  ( ! [X146,X144,X142,X140,X147,X145,X143,X141,X139,X148] : (s('type.pair.prod'('type.infer.exc'(X139,X144),X145),'const.pair.,_2'(s('type.infer.exc'(X139,X144),'const.infer.Success_1'(s(X139,X147))),s(X145,X148))) != s('type.pair.prod'('type.infer.exc'(X139,X144),X145),'const.infer.st_ex_return_2'(s(X139,'const.option.option_CASE_3'(s('type.option.option'(X140),X141),s(X139,X142),s(fun(X140,X139),X143))),s(X145,X146))) | s(X139,X147) = s(X139,happ(s(fun(fun(X140,X139),X139),happ(s(fun(X139,fun(fun(X140,X139),X139)),happ(s(fun('type.option.option'(X140),fun(X139,fun(fun(X140,X139),X139))),'const.option.option_CASE_0'),s('type.option.option'(X140),X141))),s(X139,X142))),s(fun(X140,X139),X143)))) )),
  inference(superposition,[],[f210,f184])).
fof(f19964,plain,(
  ( ! [X134,X132,X130,X138,X136,X135,X133,X131,X129,X137] : (s('type.pair.prod'('type.infer.exc'(X129,X134),X135),'const.infer.st_ex_return_2'(s(X129,X136),s(X135,X137))) != s('type.pair.prod'('type.infer.exc'(X129,X134),X135),'const.pair.,_2'(s('type.infer.exc'(X129,X134),'const.infer.Success_1'(s(X129,'const.option.option_CASE_3'(s('type.option.option'(X130),X131),s(X129,X132),s(fun(X130,X129),X133))))),s(X135,X138))) | s(X129,X136) = s(X129,happ(s(fun(fun(X130,X129),X129),happ(s(fun(X129,fun(fun(X130,X129),X129)),happ(s(fun('type.option.option'(X130),fun(X129,fun(fun(X130,X129),X129))),'const.option.option_CASE_0'),s('type.option.option'(X130),X131))),s(X129,X132))),s(fun(X130,X129),X133)))) )),
  inference(superposition,[],[f210,f184])).
fof(f19958,plain,(
  ( ! [X80,X78,X87,X85,X83,X81,X79,X86,X84,X82] : (s('type.pair.prod'('type.infer.exc'('type.one.one',X83),X78),'const.infer.guard_3'(s(bool,X84),s(X83,X85),s(X78,X86))) != s('type.pair.prod'('type.infer.exc'('type.one.one',X83),X78),'const.pair.,_2'(s('type.infer.exc'('type.one.one',X83),'const.infer.Success_1'(s('type.one.one',X87))),s(X78,'const.option.option_CASE_3'(s('type.option.option'(X79),X80),s(X78,X81),s(fun(X79,X78),X82))))) | s(X78,X86) = s(X78,happ(s(fun(fun(X79,X78),X78),happ(s(fun(X78,fun(fun(X79,X78),X78)),happ(s(fun('type.option.option'(X79),fun(X78,fun(fun(X79,X78),X78))),'const.option.option_CASE_0'),s('type.option.option'(X79),X80))),s(X78,X81))),s(fun(X79,X78),X82)))) )),
  inference(superposition,[],[f197,f184])).
fof(f19957,plain,(
  ( ! [X70,X68,X76,X74,X72,X71,X69,X77,X75,X73] : (s('type.pair.prod'('type.infer.exc'('type.one.one',X73),X68),'const.pair.,_2'(s('type.infer.exc'('type.one.one',X73),'const.infer.Success_1'(s('type.one.one',X76))),s(X68,X77))) != s('type.pair.prod'('type.infer.exc'('type.one.one',X73),X68),'const.infer.guard_3'(s(bool,X74),s(X73,X75),s(X68,'const.option.option_CASE_3'(s('type.option.option'(X69),X70),s(X68,X71),s(fun(X69,X68),X72))))) | s(X68,X77) = s(X68,happ(s(fun(fun(X69,X68),X68),happ(s(fun(X68,fun(fun(X69,X68),X68)),happ(s(fun('type.option.option'(X69),fun(X68,fun(fun(X69,X68),X68))),'const.option.option_CASE_0'),s('type.option.option'(X69),X70))),s(X68,X71))),s(fun(X69,X68),X72)))) )),
  inference(superposition,[],[f197,f184])).
fof(f19950,plain,(
  ( ! [X14,X12,X10,X8,X7,X15,X13,X11,X9] : (s(X12,happ(s(fun(X13,X12),happ(s(fun(X7,fun(X13,X12)),X14),s(X7,'const.option.option_CASE_3'(s('type.option.option'(X8),X9),s(X7,X10),s(fun(X8,X7),X11))))),s(X13,X15))) = s(X12,happ(s(fun(fun(X8,X7),X12),'_dst_x0x1x0_3'(s(fun(X7,fun(X13,X12)),X14),s(fun(fun(X8,X7),X7),happ(s(fun(X7,fun(fun(X8,X7),X7)),happ(s(fun('type.option.option'(X8),fun(X7,fun(fun(X8,X7),X7))),'const.option.option_CASE_0'),s('type.option.option'(X8),X9))),s(X7,X10))),s(X13,X15))),s(fun(X8,X7),X11)))) )),
  inference(superposition,[],[f221,f184])).
fof(f19929,plain,(
  ( ! [X39,X41,X42,X40] : (s(bool,'F_0') = s(bool,'const.option.option_CASE_3'(s('type.option.option'(X39),X40),s(bool,X41),s(fun(X39,bool),X42))) | s(bool,'T_0') = s(bool,happ(s(fun(fun(X39,bool),bool),happ(s(fun(bool,fun(fun(X39,bool),bool)),happ(s(fun('type.option.option'(X39),fun(bool,fun(fun(X39,bool),bool))),'const.option.option_CASE_0'),s('type.option.option'(X39),X40))),s(bool,X41))),s(fun(X39,bool),X42)))) )),
  inference(superposition,[],[f184,f167])).
fof(f19927,plain,(
  ( ! [X30,X33,X31,X29,X32] : (s(bool,X33) = s(bool,'const.option.option_CASE_3'(s('type.option.option'(X29),X30),s(bool,X31),s(fun(X29,bool),X32))) | s(bool,'T_0') = s(bool,happ(s(fun(fun(X29,bool),bool),happ(s(fun(bool,fun(fun(X29,bool),bool)),happ(s(fun('type.option.option'(X29),fun(bool,fun(fun(X29,bool),bool))),'const.option.option_CASE_0'),s('type.option.option'(X29),X30))),s(bool,X31))),s(fun(X29,bool),X32))) | s(bool,'T_0') = s(bool,X33)) )),
  inference(superposition,[],[f184,f272])).
fof(f19925,plain,(
  ( ! [X23,X21,X19,X22,X20] : (s(bool,'T_0') = s(bool,'const.option.option_CASE_3'(s('type.option.option'(X19),X20),s(bool,X21),s(fun(X19,bool),X22))) | s(bool,X23) = s(bool,happ(s(fun(fun(X19,bool),bool),happ(s(fun(bool,fun(fun(X19,bool),bool)),happ(s(fun('type.option.option'(X19),fun(bool,fun(fun(X19,bool),bool))),'const.option.option_CASE_0'),s('type.option.option'(X19),X20))),s(bool,X21))),s(fun(X19,bool),X22))) | s(bool,'T_0') = s(bool,X23)) )),
  inference(superposition,[],[f184,f272])).
fof(f19924,plain,(
  ( ! [X14,X12,X17,X15,X13,X18,X16] : (s(X12,'const.option.option_CASE_3'(s('type.option.option'(X13),X14),s(X12,X15),s(fun(X13,X12),happ(s(fun(X16,fun(X13,X12)),X17),s(X16,X18))))) = s(X12,happ(s(fun(X16,X12),'_dst_x0x1_2'(s(fun(fun(X13,X12),X12),happ(s(fun(X12,fun(fun(X13,X12),X12)),happ(s(fun('type.option.option'(X13),fun(X12,fun(fun(X13,X12),X12))),'const.option.option_CASE_0'),s('type.option.option'(X13),X14))),s(X12,X15))),s(fun(X16,fun(X13,X12)),X17))),s(X16,X18)))) )),
  inference(superposition,[],[f184,f206])).
fof(f19923,plain,(
  ( ! [X6,X10,X8,X7,X5,X11,X9] : (s(X5,'const.option.option_CASE_3'(s('type.option.option'(X6),X7),s(X5,happ(s(fun(X8,X5),X9),s(X8,X10))),s(fun(X6,X5),X11))) = s(X5,happ(s(fun(X8,X5),'_dst_x0x1x0_3'(s(fun(X5,fun(fun(X6,X5),X5)),happ(s(fun('type.option.option'(X6),fun(X5,fun(fun(X6,X5),X5))),'const.option.option_CASE_0'),s('type.option.option'(X6),X7))),s(fun(X8,X5),X9),s(fun(X6,X5),X11))),s(X8,X10)))) )),
  inference(superposition,[],[f184,f221])).
fof(f19900,plain,(
  ( ! [X80,X85,X83,X81,X86,X84,X82] : (s(X81,'const.option.option_CASE_3'(s('type.option.option'(X80),happ(s(fun(X82,'type.option.option'(X80)),X83),s(X82,X84))),s(X81,X85),s(fun(X80,X81),X86))) = s(X81,happ(s(fun(fun(X80,X81),X81),happ(s(fun(X82,fun(fun(X80,X81),X81)),'_dst_x0x1x0_3'(s(fun('type.option.option'(X80),fun(X81,fun(fun(X80,X81),X81))),'const.option.option_CASE_0'),s(fun(X82,'type.option.option'(X80)),X83),s(X81,X85))),s(X82,X84))),s(fun(X80,X81),X86)))) )),
  inference(superposition,[],[f184,f221])).
fof(f20302,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),'const.infer.guard_3'(s(bool,'T_0'),s(X0,X7),s(X1,'const.option.option_CASE_3'(s('type.option.option'(X3),X4),s(X1,X5),s(fun(X3,X1),X6))))) = s('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),'const.pair.,_2'(s('type.infer.exc'('type.one.one',X0),'const.infer.Success_1'(s('type.one.one',X2))),s(X1,'const.option.option_CASE_3'(s('type.option.option'(X3),X4),s(X1,X5),s(fun(X3,X1),X6)))))) )),
  inference(forward_demodulation,[],[f19644,f184])).
fof(f19644,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),'const.pair.,_2'(s('type.infer.exc'('type.one.one',X0),'const.infer.Success_1'(s('type.one.one',X2))),s(X1,'const.option.option_CASE_3'(s('type.option.option'(X3),X4),s(X1,X5),s(fun(X3,X1),X6))))) = s('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),'const.infer.guard_3'(s(bool,'T_0'),s(X0,X7),s(X1,happ(s(fun(fun(X3,X1),X1),happ(s(fun(X1,fun(fun(X3,X1),X1)),happ(s(fun('type.option.option'(X3),fun(X1,fun(fun(X3,X1),X1))),'const.option.option_CASE_0'),s('type.option.option'(X3),X4))),s(X1,X5))),s(fun(X3,X1),X6)))))) )),
  inference(unit_resulting_resolution,[],[f163,f184,f252])).
fof(f20269,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'(X0,X1),X2),'const.infer.st_ex_return_2'(s(X0,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(X0),X3))),s(X2,'const.option.option_CASE_3'(s('type.option.option'(X4),X5),s(X2,X6),s(fun(X4,X2),X7))))) = s('type.pair.prod'('type.infer.exc'(X0,X1),X2),'const.pair.,_2'(s('type.infer.exc'(X0,X1),'const.infer.Success_1'(s(X0,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(X0),X3))))),s(X2,'const.option.option_CASE_3'(s('type.option.option'(X4),X5),s(X2,X6),s(fun(X4,X2),X7)))))) )),
  inference(forward_demodulation,[],[f20268,f168])).
fof(f20268,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'(X0,X1),X2),'const.pair.,_2'(s('type.infer.exc'(X0,X1),'const.infer.Success_1'(s(X0,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(X0),X3))))),s(X2,'const.option.option_CASE_3'(s('type.option.option'(X4),X5),s(X2,X6),s(fun(X4,X2),X7))))) = s('type.pair.prod'('type.infer.exc'(X0,X1),X2),'const.infer.st_ex_return_2'(s(X0,happ(s(fun('type.infer.infer_st'(X0),X0),'const.infer.infer_st_subst_0'),s('type.infer.infer_st'(X0),X3))),s(X2,'const.option.option_CASE_3'(s('type.option.option'(X4),X5),s(X2,X6),s(fun(X4,X2),X7)))))) )),
  inference(forward_demodulation,[],[f19684,f184])).
fof(f19684,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'(X0,X1),X2),'const.pair.,_2'(s('type.infer.exc'(X0,X1),'const.infer.Success_1'(s(X0,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(X0),X3))))),s(X2,'const.option.option_CASE_3'(s('type.option.option'(X4),X5),s(X2,X6),s(fun(X4,X2),X7))))) = s('type.pair.prod'('type.infer.exc'(X0,X1),X2),'const.infer.st_ex_return_2'(s(X0,happ(s(fun('type.infer.infer_st'(X0),X0),'const.infer.infer_st_subst_0'),s('type.infer.infer_st'(X0),X3))),s(X2,happ(s(fun(fun(X4,X2),X2),happ(s(fun(X2,fun(fun(X4,X2),X2)),happ(s(fun('type.option.option'(X4),fun(X2,fun(fun(X4,X2),X2))),'const.option.option_CASE_0'),s('type.option.option'(X4),X5))),s(X2,X6))),s(fun(X4,X2),X7)))))) )),
  inference(unit_resulting_resolution,[],[f168,f184,f212])).
fof(f20263,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'(fun(X0,'type.one.one'),X1),X2),'const.infer.st_ex_return_2'(s(fun(X0,'type.one.one'),X8),s(X2,'const.option.option_CASE_3'(s('type.option.option'(X4),X5),s(X2,X6),s(fun(X4,X2),X7))))) = s('type.pair.prod'('type.infer.exc'(fun(X0,'type.one.one'),X1),X2),'const.pair.,_2'(s('type.infer.exc'(fun(X0,'type.one.one'),X1),'const.infer.Success_1'(s(fun(X0,'type.one.one'),X3))),s(X2,'const.option.option_CASE_3'(s('type.option.option'(X4),X5),s(X2,X6),s(fun(X4,X2),X7)))))) )),
  inference(forward_demodulation,[],[f19690,f184])).
fof(f19690,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'(fun(X0,'type.one.one'),X1),X2),'const.pair.,_2'(s('type.infer.exc'(fun(X0,'type.one.one'),X1),'const.infer.Success_1'(s(fun(X0,'type.one.one'),X3))),s(X2,'const.option.option_CASE_3'(s('type.option.option'(X4),X5),s(X2,X6),s(fun(X4,X2),X7))))) = s('type.pair.prod'('type.infer.exc'(fun(X0,'type.one.one'),X1),X2),'const.infer.st_ex_return_2'(s(fun(X0,'type.one.one'),X8),s(X2,happ(s(fun(fun(X4,X2),X2),happ(s(fun(X2,fun(fun(X4,X2),X2)),happ(s(fun('type.option.option'(X4),fun(X2,fun(fun(X4,X2),X2))),'const.option.option_CASE_0'),s('type.option.option'(X4),X5))),s(X2,X6))),s(fun(X4,X2),X7)))))) )),
  inference(unit_resulting_resolution,[],[f605,f184,f212])).
fof(f20261,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1,X9] : (s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,'type.one.one')),X2),X3),'const.infer.st_ex_return_2'(s(fun(X0,fun(X1,'type.one.one')),X9),s(X3,'const.option.option_CASE_3'(s('type.option.option'(X5),X6),s(X3,X7),s(fun(X5,X3),X8))))) = s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,'type.one.one')),X2),X3),'const.pair.,_2'(s('type.infer.exc'(fun(X0,fun(X1,'type.one.one')),X2),'const.infer.Success_1'(s(fun(X0,fun(X1,'type.one.one')),X4))),s(X3,'const.option.option_CASE_3'(s('type.option.option'(X5),X6),s(X3,X7),s(fun(X5,X3),X8)))))) )),
  inference(forward_demodulation,[],[f19692,f184])).
fof(f19692,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1,X9] : (s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,'type.one.one')),X2),X3),'const.pair.,_2'(s('type.infer.exc'(fun(X0,fun(X1,'type.one.one')),X2),'const.infer.Success_1'(s(fun(X0,fun(X1,'type.one.one')),X4))),s(X3,'const.option.option_CASE_3'(s('type.option.option'(X5),X6),s(X3,X7),s(fun(X5,X3),X8))))) = s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,'type.one.one')),X2),X3),'const.infer.st_ex_return_2'(s(fun(X0,fun(X1,'type.one.one')),X9),s(X3,happ(s(fun(fun(X5,X3),X3),happ(s(fun(X3,fun(fun(X5,X3),X3)),happ(s(fun('type.option.option'(X5),fun(X3,fun(fun(X5,X3),X3))),'const.option.option_CASE_0'),s('type.option.option'(X5),X6))),s(X3,X7))),s(fun(X5,X3),X8)))))) )),
  inference(unit_resulting_resolution,[],[f724,f184,f212])).
fof(f20260,plain,(
  ( ! [X6,X4,X2,X0,X10,X8,X7,X5,X3,X1,X9] : (s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,fun(X2,'type.one.one'))),X3),X4),'const.infer.st_ex_return_2'(s(fun(X0,fun(X1,fun(X2,'type.one.one'))),X10),s(X4,'const.option.option_CASE_3'(s('type.option.option'(X6),X7),s(X4,X8),s(fun(X6,X4),X9))))) = s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,fun(X2,'type.one.one'))),X3),X4),'const.pair.,_2'(s('type.infer.exc'(fun(X0,fun(X1,fun(X2,'type.one.one'))),X3),'const.infer.Success_1'(s(fun(X0,fun(X1,fun(X2,'type.one.one'))),X5))),s(X4,'const.option.option_CASE_3'(s('type.option.option'(X6),X7),s(X4,X8),s(fun(X6,X4),X9)))))) )),
  inference(forward_demodulation,[],[f19693,f184])).
fof(f19693,plain,(
  ( ! [X6,X4,X2,X0,X10,X8,X7,X5,X3,X1,X9] : (s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,fun(X2,'type.one.one'))),X3),X4),'const.pair.,_2'(s('type.infer.exc'(fun(X0,fun(X1,fun(X2,'type.one.one'))),X3),'const.infer.Success_1'(s(fun(X0,fun(X1,fun(X2,'type.one.one'))),X5))),s(X4,'const.option.option_CASE_3'(s('type.option.option'(X6),X7),s(X4,X8),s(fun(X6,X4),X9))))) = s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,fun(X2,'type.one.one'))),X3),X4),'const.infer.st_ex_return_2'(s(fun(X0,fun(X1,fun(X2,'type.one.one'))),X10),s(X4,happ(s(fun(fun(X6,X4),X4),happ(s(fun(X4,fun(fun(X6,X4),X4)),happ(s(fun('type.option.option'(X6),fun(X4,fun(fun(X6,X4),X4))),'const.option.option_CASE_0'),s('type.option.option'(X6),X7))),s(X4,X8))),s(fun(X6,X4),X9)))))) )),
  inference(unit_resulting_resolution,[],[f752,f184,f212])).
fof(f20256,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),'const.infer.st_ex_return_2'(s('type.one.one',X7),s(X1,'const.option.option_CASE_3'(s('type.option.option'(X3),X4),s(X1,X5),s(fun(X3,X1),X6))))) = s('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),'const.pair.,_2'(s('type.infer.exc'('type.one.one',X0),'const.infer.Success_1'(s('type.one.one',X2))),s(X1,'const.option.option_CASE_3'(s('type.option.option'(X3),X4),s(X1,X5),s(fun(X3,X1),X6)))))) )),
  inference(forward_demodulation,[],[f19699,f184])).
fof(f19699,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),'const.pair.,_2'(s('type.infer.exc'('type.one.one',X0),'const.infer.Success_1'(s('type.one.one',X2))),s(X1,'const.option.option_CASE_3'(s('type.option.option'(X3),X4),s(X1,X5),s(fun(X3,X1),X6))))) = s('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),'const.infer.st_ex_return_2'(s('type.one.one',X7),s(X1,happ(s(fun(fun(X3,X1),X1),happ(s(fun(X1,fun(fun(X3,X1),X1)),happ(s(fun('type.option.option'(X3),fun(X1,fun(fun(X3,X1),X1))),'const.option.option_CASE_0'),s('type.option.option'(X3),X4))),s(X1,X5))),s(fun(X3,X1),X6)))))) )),
  inference(unit_resulting_resolution,[],[f258,f184,f212])).
fof(f20251,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.num.num',X0),X1),'const.infer.st_ex_return_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X3))),s(X1,'const.option.option_CASE_3'(s('type.option.option'(X4),X5),s(X1,X6),s(fun(X4,X1),X7))))) = s('type.pair.prod'('type.infer.exc'('type.num.num',X0),X1),'const.pair.,_2'(s('type.infer.exc'('type.num.num',X0),'const.infer.Success_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X3))))),s(X1,'const.option.option_CASE_3'(s('type.option.option'(X4),X5),s(X1,X6),s(fun(X4,X1),X7)))))) )),
  inference(forward_demodulation,[],[f20250,f175])).
fof(f20250,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.num.num',X0),X1),'const.infer.st_ex_return_2'(s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.arithmetic.+_1'(s('type.num.num',X2))),s('type.num.num',X3))),s(X1,'const.option.option_CASE_3'(s('type.option.option'(X4),X5),s(X1,X6),s(fun(X4,X1),X7))))) = s('type.pair.prod'('type.infer.exc'('type.num.num',X0),X1),'const.pair.,_2'(s('type.infer.exc'('type.num.num',X0),'const.infer.Success_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X3))))),s(X1,'const.option.option_CASE_3'(s('type.option.option'(X4),X5),s(X1,X6),s(fun(X4,X1),X7)))))) )),
  inference(forward_demodulation,[],[f19703,f184])).
fof(f19703,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.num.num',X0),X1),'const.pair.,_2'(s('type.infer.exc'('type.num.num',X0),'const.infer.Success_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X3))))),s(X1,'const.option.option_CASE_3'(s('type.option.option'(X4),X5),s(X1,X6),s(fun(X4,X1),X7))))) = s('type.pair.prod'('type.infer.exc'('type.num.num',X0),X1),'const.infer.st_ex_return_2'(s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.arithmetic.+_1'(s('type.num.num',X2))),s('type.num.num',X3))),s(X1,happ(s(fun(fun(X4,X1),X1),happ(s(fun(X1,fun(fun(X4,X1),X1)),happ(s(fun('type.option.option'(X4),fun(X1,fun(fun(X4,X1),X1))),'const.option.option_CASE_0'),s('type.option.option'(X4),X5))),s(X1,X6))),s(fun(X4,X1),X7)))))) )),
  inference(unit_resulting_resolution,[],[f175,f184,f212])).
fof(f20249,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),X1),'const.infer.st_ex_return_2'(s('type.infer_t.infer_t','const.infer_t.Infer_Tuvar_1'(s('type.num.num',X2))),s(X1,'const.option.option_CASE_3'(s('type.option.option'(X3),X4),s(X1,X5),s(fun(X3,X1),X6))))) = s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),X1),'const.pair.,_2'(s('type.infer.exc'('type.infer_t.infer_t',X0),'const.infer.Success_1'(s('type.infer_t.infer_t','const.infer_t.Infer_Tuvar_1'(s('type.num.num',X2))))),s(X1,'const.option.option_CASE_3'(s('type.option.option'(X3),X4),s(X1,X5),s(fun(X3,X1),X6)))))) )),
  inference(forward_demodulation,[],[f20248,f166])).
fof(f20248,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),X1),'const.infer.st_ex_return_2'(s('type.infer_t.infer_t',happ(s(fun('type.num.num','type.infer_t.infer_t'),'const.infer_t.Infer_Tuvar_0'),s('type.num.num',X2))),s(X1,'const.option.option_CASE_3'(s('type.option.option'(X3),X4),s(X1,X5),s(fun(X3,X1),X6))))) = s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),X1),'const.pair.,_2'(s('type.infer.exc'('type.infer_t.infer_t',X0),'const.infer.Success_1'(s('type.infer_t.infer_t','const.infer_t.Infer_Tuvar_1'(s('type.num.num',X2))))),s(X1,'const.option.option_CASE_3'(s('type.option.option'(X3),X4),s(X1,X5),s(fun(X3,X1),X6)))))) )),
  inference(forward_demodulation,[],[f19704,f184])).
fof(f19704,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),X1),'const.pair.,_2'(s('type.infer.exc'('type.infer_t.infer_t',X0),'const.infer.Success_1'(s('type.infer_t.infer_t','const.infer_t.Infer_Tuvar_1'(s('type.num.num',X2))))),s(X1,'const.option.option_CASE_3'(s('type.option.option'(X3),X4),s(X1,X5),s(fun(X3,X1),X6))))) = s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),X1),'const.infer.st_ex_return_2'(s('type.infer_t.infer_t',happ(s(fun('type.num.num','type.infer_t.infer_t'),'const.infer_t.Infer_Tuvar_0'),s('type.num.num',X2))),s(X1,happ(s(fun(fun(X3,X1),X1),happ(s(fun(X1,fun(fun(X3,X1),X1)),happ(s(fun('type.option.option'(X3),fun(X1,fun(fun(X3,X1),X1))),'const.option.option_CASE_0'),s('type.option.option'(X3),X4))),s(X1,X5))),s(fun(X3,X1),X6)))))) )),
  inference(unit_resulting_resolution,[],[f166,f184,f212])).
fof(f20247,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),X1),'const.infer.st_ex_return_2'(s('type.infer_t.infer_t','const.unify.t_walkstar_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X2),s('type.infer_t.infer_t',X3))),s(X1,'const.option.option_CASE_3'(s('type.option.option'(X4),X5),s(X1,X6),s(fun(X4,X1),X7))))) = s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),X1),'const.pair.,_2'(s('type.infer.exc'('type.infer_t.infer_t',X0),'const.infer.Success_1'(s('type.infer_t.infer_t','const.unify.t_walkstar_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X2),s('type.infer_t.infer_t',X3))))),s(X1,'const.option.option_CASE_3'(s('type.option.option'(X4),X5),s(X1,X6),s(fun(X4,X1),X7)))))) )),
  inference(forward_demodulation,[],[f20246,f176])).
fof(f20246,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),X1),'const.pair.,_2'(s('type.infer.exc'('type.infer_t.infer_t',X0),'const.infer.Success_1'(s('type.infer_t.infer_t','const.unify.t_walkstar_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X2),s('type.infer_t.infer_t',X3))))),s(X1,'const.option.option_CASE_3'(s('type.option.option'(X4),X5),s(X1,X6),s(fun(X4,X1),X7))))) = s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),X1),'const.infer.st_ex_return_2'(s('type.infer_t.infer_t',happ(s(fun('type.infer_t.infer_t','type.infer_t.infer_t'),happ(s(fun('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),fun('type.infer_t.infer_t','type.infer_t.infer_t')),'const.unify.t_walkstar_0'),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X2))),s('type.infer_t.infer_t',X3))),s(X1,'const.option.option_CASE_3'(s('type.option.option'(X4),X5),s(X1,X6),s(fun(X4,X1),X7)))))) )),
  inference(forward_demodulation,[],[f19705,f184])).
fof(f19705,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),X1),'const.pair.,_2'(s('type.infer.exc'('type.infer_t.infer_t',X0),'const.infer.Success_1'(s('type.infer_t.infer_t','const.unify.t_walkstar_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X2),s('type.infer_t.infer_t',X3))))),s(X1,'const.option.option_CASE_3'(s('type.option.option'(X4),X5),s(X1,X6),s(fun(X4,X1),X7))))) = s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),X1),'const.infer.st_ex_return_2'(s('type.infer_t.infer_t',happ(s(fun('type.infer_t.infer_t','type.infer_t.infer_t'),happ(s(fun('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),fun('type.infer_t.infer_t','type.infer_t.infer_t')),'const.unify.t_walkstar_0'),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X2))),s('type.infer_t.infer_t',X3))),s(X1,happ(s(fun(fun(X4,X1),X1),happ(s(fun(X1,fun(fun(X4,X1),X1)),happ(s(fun('type.option.option'(X4),fun(X1,fun(fun(X4,X1),X1))),'const.option.option_CASE_0'),s('type.option.option'(X4),X5))),s(X1,X6))),s(fun(X4,X1),X7)))))) )),
  inference(unit_resulting_resolution,[],[f176,f184,f212])).
fof(f20243,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X0),X2),X3),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'(X0,X1),X0),'const.infer.read_1'(s(X0,X4))),s(X3,'const.option.option_CASE_3'(s('type.option.option'(X5),X6),s(X3,X7),s(fun(X5,X3),X8))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X0),X2),X3),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X0),X2),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'(X0,X1),X0),'const.infer.read_1'(s(X0,X4))))),s(X3,'const.option.option_CASE_3'(s('type.option.option'(X5),X6),s(X3,X7),s(fun(X5,X3),X8)))))) )),
  inference(forward_demodulation,[],[f20242,f178])).
fof(f20242,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X0),X2),X3),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X0),X2),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'(X0,X1),X0),'const.infer.read_1'(s(X0,X4))))),s(X3,'const.option.option_CASE_3'(s('type.option.option'(X5),X6),s(X3,X7),s(fun(X5,X3),X8))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X0),X2),X3),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'(X0,X1),X0),happ(s(fun(X0,'type.pair.prod'('type.infer.exc'(X0,X1),X0)),'const.infer.read_0'),s(X0,X4))),s(X3,'const.option.option_CASE_3'(s('type.option.option'(X5),X6),s(X3,X7),s(fun(X5,X3),X8)))))) )),
  inference(forward_demodulation,[],[f19707,f184])).
fof(f19707,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X0),X2),X3),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X0),X2),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'(X0,X1),X0),'const.infer.read_1'(s(X0,X4))))),s(X3,'const.option.option_CASE_3'(s('type.option.option'(X5),X6),s(X3,X7),s(fun(X5,X3),X8))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X0),X2),X3),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'(X0,X1),X0),happ(s(fun(X0,'type.pair.prod'('type.infer.exc'(X0,X1),X0)),'const.infer.read_0'),s(X0,X4))),s(X3,happ(s(fun(fun(X5,X3),X3),happ(s(fun(X3,fun(fun(X5,X3),X3)),happ(s(fun('type.option.option'(X5),fun(X3,fun(fun(X5,X3),X3))),'const.option.option_CASE_0'),s('type.option.option'(X5),X6))),s(X3,X7))),s(fun(X5,X3),X8)))))) )),
  inference(unit_resulting_resolution,[],[f178,f184,f212])).
fof(f20232,plain,(
  ( ! [X6,X4,X2,X0,X10,X8,X7,X5,X3,X1,X9] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),X4),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'(X0,X1),X2),'const.infer.failwith_2'(s(X1,X5),s(X2,X6))),s(X4,'const.option.option_CASE_3'(s('type.option.option'(X7),X8),s(X4,X9),s(fun(X7,X4),X10))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),X4),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'(X0,X1),X2),'const.infer.failwith_2'(s(X1,X5),s(X2,X6))))),s(X4,'const.option.option_CASE_3'(s('type.option.option'(X7),X8),s(X4,X9),s(fun(X7,X4),X10)))))) )),
  inference(forward_demodulation,[],[f20231,f204])).
fof(f20231,plain,(
  ( ! [X6,X4,X2,X0,X10,X8,X7,X5,X3,X1,X9] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),X4),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'(X0,X1),X2),'const.infer.failwith_2'(s(X1,X5),s(X2,X6))))),s(X4,'const.option.option_CASE_3'(s('type.option.option'(X7),X8),s(X4,X9),s(fun(X7,X4),X10))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),X4),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'(X0,X1),X2),happ(s(fun(X2,'type.pair.prod'('type.infer.exc'(X0,X1),X2)),'const.infer.failwith_1'(s(X1,X5))),s(X2,X6))),s(X4,'const.option.option_CASE_3'(s('type.option.option'(X7),X8),s(X4,X9),s(fun(X7,X4),X10)))))) )),
  inference(forward_demodulation,[],[f19719,f184])).
fof(f19719,plain,(
  ( ! [X6,X4,X2,X0,X10,X8,X7,X5,X3,X1,X9] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),X4),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'(X0,X1),X2),'const.infer.failwith_2'(s(X1,X5),s(X2,X6))))),s(X4,'const.option.option_CASE_3'(s('type.option.option'(X7),X8),s(X4,X9),s(fun(X7,X4),X10))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),X4),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'(X0,X1),X2),happ(s(fun(X2,'type.pair.prod'('type.infer.exc'(X0,X1),X2)),'const.infer.failwith_1'(s(X1,X5))),s(X2,X6))),s(X4,happ(s(fun(fun(X7,X4),X4),happ(s(fun(X4,fun(fun(X7,X4),X4)),happ(s(fun('type.option.option'(X7),fun(X4,fun(fun(X7,X4),X4))),'const.option.option_CASE_0'),s('type.option.option'(X7),X8))),s(X4,X9))),s(fun(X7,X4),X10)))))) )),
  inference(unit_resulting_resolution,[],[f204,f184,f212])).
fof(f20226,plain,(
  ( ! [X6,X4,X2,X0,X10,X8,X7,X5,X3,X1,X11,X9] : (s('type.pair.prod'('type.infer.exc'(X0,X1),X2),'const.infer.st_ex_return_2'(s(X0,'const.option.option_CASE_3'(s('type.option.option'(X3),X4),s(X0,X5),s(fun(X3,X0),X6))),s(X2,happ(s(fun(X8,X2),X9),s(X8,happ(s(fun(X7,X8),X10),s(X7,X11))))))) = s('type.pair.prod'('type.infer.exc'(X0,X1),X2),'const.pair.,_2'(s('type.infer.exc'(X0,X1),'const.infer.Success_1'(s(X0,'const.option.option_CASE_3'(s('type.option.option'(X3),X4),s(X0,X5),s(fun(X3,X0),X6))))),s(X2,happ(s(fun(X7,X2),'_dst_x0x1_2'(s(fun(X8,X2),X9),s(fun(X7,X8),X10))),s(X7,X11)))))) )),
  inference(forward_demodulation,[],[f19724,f184])).
fof(f19724,plain,(
  ( ! [X6,X4,X2,X0,X10,X8,X7,X5,X3,X1,X11,X9] : (s('type.pair.prod'('type.infer.exc'(X0,X1),X2),'const.pair.,_2'(s('type.infer.exc'(X0,X1),'const.infer.Success_1'(s(X0,'const.option.option_CASE_3'(s('type.option.option'(X3),X4),s(X0,X5),s(fun(X3,X0),X6))))),s(X2,happ(s(fun(X7,X2),'_dst_x0x1_2'(s(fun(X8,X2),X9),s(fun(X7,X8),X10))),s(X7,X11))))) = s('type.pair.prod'('type.infer.exc'(X0,X1),X2),'const.infer.st_ex_return_2'(s(X0,happ(s(fun(fun(X3,X0),X0),happ(s(fun(X0,fun(fun(X3,X0),X0)),happ(s(fun('type.option.option'(X3),fun(X0,fun(fun(X3,X0),X0))),'const.option.option_CASE_0'),s('type.option.option'(X3),X4))),s(X0,X5))),s(fun(X3,X0),X6))),s(X2,happ(s(fun(X8,X2),X9),s(X8,happ(s(fun(X7,X8),X10),s(X7,X11)))))))) )),
  inference(unit_resulting_resolution,[],[f206,f184,f212])).
fof(f20172,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'(X0,X1),X2),'const.infer.st_ex_return_2'(s(X0,'const.option.option_CASE_3'(s('type.option.option'(X3),X4),s(X0,X5),s(fun(X3,X0),X6))),s(X2,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(X2),X7))))) = s('type.pair.prod'('type.infer.exc'(X0,X1),X2),'const.pair.,_2'(s('type.infer.exc'(X0,X1),'const.infer.Success_1'(s(X0,'const.option.option_CASE_3'(s('type.option.option'(X3),X4),s(X0,X5),s(fun(X3,X0),X6))))),s(X2,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(X2),X7)))))) )),
  inference(forward_demodulation,[],[f20171,f184])).
fof(f20171,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'(X0,X1),X2),'const.pair.,_2'(s('type.infer.exc'(X0,X1),'const.infer.Success_1'(s(X0,'const.option.option_CASE_3'(s('type.option.option'(X3),X4),s(X0,X5),s(fun(X3,X0),X6))))),s(X2,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(X2),X7))))) = s('type.pair.prod'('type.infer.exc'(X0,X1),X2),'const.infer.st_ex_return_2'(s(X0,happ(s(fun(fun(X3,X0),X0),happ(s(fun(X0,fun(fun(X3,X0),X0)),happ(s(fun('type.option.option'(X3),fun(X0,fun(fun(X3,X0),X0))),'const.option.option_CASE_0'),s('type.option.option'(X3),X4))),s(X0,X5))),s(fun(X3,X0),X6))),s(X2,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(X2),X7)))))) )),
  inference(forward_demodulation,[],[f19762,f168])).
fof(f19762,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'(X0,X1),X2),'const.pair.,_2'(s('type.infer.exc'(X0,X1),'const.infer.Success_1'(s(X0,'const.option.option_CASE_3'(s('type.option.option'(X3),X4),s(X0,X5),s(fun(X3,X0),X6))))),s(X2,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(X2),X7))))) = s('type.pair.prod'('type.infer.exc'(X0,X1),X2),'const.infer.st_ex_return_2'(s(X0,happ(s(fun(fun(X3,X0),X0),happ(s(fun(X0,fun(fun(X3,X0),X0)),happ(s(fun('type.option.option'(X3),fun(X0,fun(fun(X3,X0),X0))),'const.option.option_CASE_0'),s('type.option.option'(X3),X4))),s(X0,X5))),s(fun(X3,X0),X6))),s(X2,happ(s(fun('type.infer.infer_st'(X2),X2),'const.infer.infer_st_subst_0'),s('type.infer.infer_st'(X2),X7)))))) )),
  inference(unit_resulting_resolution,[],[f168,f184,f212])).
fof(f20170,plain,(
  ( ! [X6,X4,X2,X0,X10,X8,X7,X5,X3,X1,X11,X9] : (s('type.pair.prod'('type.infer.exc'(X0,X1),X2),'const.infer.st_ex_return_2'(s(X0,'const.option.option_CASE_3'(s('type.option.option'(X3),X4),s(X0,X5),s(fun(X3,X0),X6))),s(X2,happ(s(fun(X9,X2),'_dst_x0x1_2'(s(fun(X7,X2),X8),s(fun(X9,X7),X10))),s(X9,X11))))) = s('type.pair.prod'('type.infer.exc'(X0,X1),X2),'const.pair.,_2'(s('type.infer.exc'(X0,X1),'const.infer.Success_1'(s(X0,'const.option.option_CASE_3'(s('type.option.option'(X3),X4),s(X0,X5),s(fun(X3,X0),X6))))),s(X2,happ(s(fun(X7,X2),X8),s(X7,happ(s(fun(X9,X7),X10),s(X9,X11)))))))) )),
  inference(forward_demodulation,[],[f19763,f184])).
fof(f19763,plain,(
  ( ! [X6,X4,X2,X0,X10,X8,X7,X5,X3,X1,X11,X9] : (s('type.pair.prod'('type.infer.exc'(X0,X1),X2),'const.pair.,_2'(s('type.infer.exc'(X0,X1),'const.infer.Success_1'(s(X0,'const.option.option_CASE_3'(s('type.option.option'(X3),X4),s(X0,X5),s(fun(X3,X0),X6))))),s(X2,happ(s(fun(X7,X2),X8),s(X7,happ(s(fun(X9,X7),X10),s(X9,X11))))))) = s('type.pair.prod'('type.infer.exc'(X0,X1),X2),'const.infer.st_ex_return_2'(s(X0,happ(s(fun(fun(X3,X0),X0),happ(s(fun(X0,fun(fun(X3,X0),X0)),happ(s(fun('type.option.option'(X3),fun(X0,fun(fun(X3,X0),X0))),'const.option.option_CASE_0'),s('type.option.option'(X3),X4))),s(X0,X5))),s(fun(X3,X0),X6))),s(X2,happ(s(fun(X9,X2),'_dst_x0x1_2'(s(fun(X7,X2),X8),s(fun(X9,X7),X10))),s(X9,X11)))))) )),
  inference(unit_resulting_resolution,[],[f206,f184,f212])).
fof(f20169,plain,(
  ( ! [X6,X4,X2,X0,X12,X10,X8,X7,X5,X3,X1,X13,X11,X9] : (s('type.pair.prod'('type.infer.exc'(X0,X1),X2),'const.infer.st_ex_return_2'(s(X0,'const.option.option_CASE_3'(s('type.option.option'(X3),X4),s(X0,X5),s(fun(X3,X0),X6))),s(X2,happ(s(fun(X9,X2),happ(s(fun(X8,fun(X9,X2)),X10),s(X8,happ(s(fun(X7,X8),X11),s(X7,X13))))),s(X9,X12))))) = s('type.pair.prod'('type.infer.exc'(X0,X1),X2),'const.pair.,_2'(s('type.infer.exc'(X0,X1),'const.infer.Success_1'(s(X0,'const.option.option_CASE_3'(s('type.option.option'(X3),X4),s(X0,X5),s(fun(X3,X0),X6))))),s(X2,happ(s(fun(X7,X2),'_dst_x0x1x0_3'(s(fun(X8,fun(X9,X2)),X10),s(fun(X7,X8),X11),s(X9,X12))),s(X7,X13)))))) )),
  inference(forward_demodulation,[],[f19764,f184])).
fof(f19764,plain,(
  ( ! [X6,X4,X2,X0,X12,X10,X8,X7,X5,X3,X1,X13,X11,X9] : (s('type.pair.prod'('type.infer.exc'(X0,X1),X2),'const.pair.,_2'(s('type.infer.exc'(X0,X1),'const.infer.Success_1'(s(X0,'const.option.option_CASE_3'(s('type.option.option'(X3),X4),s(X0,X5),s(fun(X3,X0),X6))))),s(X2,happ(s(fun(X7,X2),'_dst_x0x1x0_3'(s(fun(X8,fun(X9,X2)),X10),s(fun(X7,X8),X11),s(X9,X12))),s(X7,X13))))) = s('type.pair.prod'('type.infer.exc'(X0,X1),X2),'const.infer.st_ex_return_2'(s(X0,happ(s(fun(fun(X3,X0),X0),happ(s(fun(X0,fun(fun(X3,X0),X0)),happ(s(fun('type.option.option'(X3),fun(X0,fun(fun(X3,X0),X0))),'const.option.option_CASE_0'),s('type.option.option'(X3),X4))),s(X0,X5))),s(fun(X3,X0),X6))),s(X2,happ(s(fun(X9,X2),happ(s(fun(X8,fun(X9,X2)),X10),s(X8,happ(s(fun(X7,X8),X11),s(X7,X13))))),s(X9,X12)))))) )),
  inference(unit_resulting_resolution,[],[f221,f184,f212])).
fof(f20168,plain,(
  ( ! [X6,X4,X2,X0,X10,X8,X7,X5,X3,X1,X9] : (s('type.pair.prod'('type.infer.exc'(X0,X1),X2),'const.infer.st_ex_return_2'(s(X0,'const.option.option_CASE_3'(s('type.option.option'(X3),X4),s(X0,X5),s(fun(X3,X0),X6))),s(X2,'const.option.option_CASE_3'(s('type.option.option'(X7),X8),s(X2,X9),s(fun(X7,X2),X10))))) = s('type.pair.prod'('type.infer.exc'(X0,X1),X2),'const.pair.,_2'(s('type.infer.exc'(X0,X1),'const.infer.Success_1'(s(X0,'const.option.option_CASE_3'(s('type.option.option'(X3),X4),s(X0,X5),s(fun(X3,X0),X6))))),s(X2,'const.option.option_CASE_3'(s('type.option.option'(X7),X8),s(X2,X9),s(fun(X7,X2),X10)))))) )),
  inference(forward_demodulation,[],[f20167,f184])).
fof(f20167,plain,(
  ( ! [X6,X4,X2,X0,X10,X8,X7,X5,X3,X1,X9] : (s('type.pair.prod'('type.infer.exc'(X0,X1),X2),'const.pair.,_2'(s('type.infer.exc'(X0,X1),'const.infer.Success_1'(s(X0,'const.option.option_CASE_3'(s('type.option.option'(X3),X4),s(X0,X5),s(fun(X3,X0),X6))))),s(X2,'const.option.option_CASE_3'(s('type.option.option'(X7),X8),s(X2,X9),s(fun(X7,X2),X10))))) = s('type.pair.prod'('type.infer.exc'(X0,X1),X2),'const.infer.st_ex_return_2'(s(X0,happ(s(fun(fun(X3,X0),X0),happ(s(fun(X0,fun(fun(X3,X0),X0)),happ(s(fun('type.option.option'(X3),fun(X0,fun(fun(X3,X0),X0))),'const.option.option_CASE_0'),s('type.option.option'(X3),X4))),s(X0,X5))),s(fun(X3,X0),X6))),s(X2,'const.option.option_CASE_3'(s('type.option.option'(X7),X8),s(X2,X9),s(fun(X7,X2),X10)))))) )),
  inference(forward_demodulation,[],[f19765,f184])).
fof(f19765,plain,(
  ( ! [X6,X4,X2,X0,X10,X8,X7,X5,X3,X1,X9] : (s('type.pair.prod'('type.infer.exc'(X0,X1),X2),'const.pair.,_2'(s('type.infer.exc'(X0,X1),'const.infer.Success_1'(s(X0,'const.option.option_CASE_3'(s('type.option.option'(X3),X4),s(X0,X5),s(fun(X3,X0),X6))))),s(X2,'const.option.option_CASE_3'(s('type.option.option'(X7),X8),s(X2,X9),s(fun(X7,X2),X10))))) = s('type.pair.prod'('type.infer.exc'(X0,X1),X2),'const.infer.st_ex_return_2'(s(X0,happ(s(fun(fun(X3,X0),X0),happ(s(fun(X0,fun(fun(X3,X0),X0)),happ(s(fun('type.option.option'(X3),fun(X0,fun(fun(X3,X0),X0))),'const.option.option_CASE_0'),s('type.option.option'(X3),X4))),s(X0,X5))),s(fun(X3,X0),X6))),s(X2,happ(s(fun(fun(X7,X2),X2),happ(s(fun(X2,fun(fun(X7,X2),X2)),happ(s(fun('type.option.option'(X7),fun(X2,fun(fun(X7,X2),X2))),'const.option.option_CASE_0'),s('type.option.option'(X7),X8))),s(X2,X9))),s(fun(X7,X2),X10)))))) )),
  inference(unit_resulting_resolution,[],[f184,f184,f212])).
fof(f20162,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'(X0,X1),fun(X2,'type.one.one')),'const.infer.st_ex_return_2'(s(X0,'const.option.option_CASE_3'(s('type.option.option'(X3),X4),s(X0,X5),s(fun(X3,X0),X6))),s(fun(X2,'type.one.one'),X8))) = s('type.pair.prod'('type.infer.exc'(X0,X1),fun(X2,'type.one.one')),'const.pair.,_2'(s('type.infer.exc'(X0,X1),'const.infer.Success_1'(s(X0,'const.option.option_CASE_3'(s('type.option.option'(X3),X4),s(X0,X5),s(fun(X3,X0),X6))))),s(fun(X2,'type.one.one'),X7)))) )),
  inference(forward_demodulation,[],[f19768,f184])).
fof(f19768,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'(X0,X1),fun(X2,'type.one.one')),'const.pair.,_2'(s('type.infer.exc'(X0,X1),'const.infer.Success_1'(s(X0,'const.option.option_CASE_3'(s('type.option.option'(X3),X4),s(X0,X5),s(fun(X3,X0),X6))))),s(fun(X2,'type.one.one'),X7))) = s('type.pair.prod'('type.infer.exc'(X0,X1),fun(X2,'type.one.one')),'const.infer.st_ex_return_2'(s(X0,happ(s(fun(fun(X3,X0),X0),happ(s(fun(X0,fun(fun(X3,X0),X0)),happ(s(fun('type.option.option'(X3),fun(X0,fun(fun(X3,X0),X0))),'const.option.option_CASE_0'),s('type.option.option'(X3),X4))),s(X0,X5))),s(fun(X3,X0),X6))),s(fun(X2,'type.one.one'),X8)))) )),
  inference(unit_resulting_resolution,[],[f605,f184,f212])).
fof(f20160,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1,X9] : (s('type.pair.prod'('type.infer.exc'(X0,X1),fun(X2,fun(X3,'type.one.one'))),'const.infer.st_ex_return_2'(s(X0,'const.option.option_CASE_3'(s('type.option.option'(X4),X5),s(X0,X6),s(fun(X4,X0),X7))),s(fun(X2,fun(X3,'type.one.one')),X9))) = s('type.pair.prod'('type.infer.exc'(X0,X1),fun(X2,fun(X3,'type.one.one'))),'const.pair.,_2'(s('type.infer.exc'(X0,X1),'const.infer.Success_1'(s(X0,'const.option.option_CASE_3'(s('type.option.option'(X4),X5),s(X0,X6),s(fun(X4,X0),X7))))),s(fun(X2,fun(X3,'type.one.one')),X8)))) )),
  inference(forward_demodulation,[],[f19770,f184])).
fof(f19770,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1,X9] : (s('type.pair.prod'('type.infer.exc'(X0,X1),fun(X2,fun(X3,'type.one.one'))),'const.pair.,_2'(s('type.infer.exc'(X0,X1),'const.infer.Success_1'(s(X0,'const.option.option_CASE_3'(s('type.option.option'(X4),X5),s(X0,X6),s(fun(X4,X0),X7))))),s(fun(X2,fun(X3,'type.one.one')),X8))) = s('type.pair.prod'('type.infer.exc'(X0,X1),fun(X2,fun(X3,'type.one.one'))),'const.infer.st_ex_return_2'(s(X0,happ(s(fun(fun(X4,X0),X0),happ(s(fun(X0,fun(fun(X4,X0),X0)),happ(s(fun('type.option.option'(X4),fun(X0,fun(fun(X4,X0),X0))),'const.option.option_CASE_0'),s('type.option.option'(X4),X5))),s(X0,X6))),s(fun(X4,X0),X7))),s(fun(X2,fun(X3,'type.one.one')),X9)))) )),
  inference(unit_resulting_resolution,[],[f724,f184,f212])).
fof(f20159,plain,(
  ( ! [X6,X4,X2,X0,X10,X8,X7,X5,X3,X1,X9] : (s('type.pair.prod'('type.infer.exc'(X0,X1),fun(X2,fun(X3,fun(X4,'type.one.one')))),'const.infer.st_ex_return_2'(s(X0,'const.option.option_CASE_3'(s('type.option.option'(X5),X6),s(X0,X7),s(fun(X5,X0),X8))),s(fun(X2,fun(X3,fun(X4,'type.one.one'))),X10))) = s('type.pair.prod'('type.infer.exc'(X0,X1),fun(X2,fun(X3,fun(X4,'type.one.one')))),'const.pair.,_2'(s('type.infer.exc'(X0,X1),'const.infer.Success_1'(s(X0,'const.option.option_CASE_3'(s('type.option.option'(X5),X6),s(X0,X7),s(fun(X5,X0),X8))))),s(fun(X2,fun(X3,fun(X4,'type.one.one'))),X9)))) )),
  inference(forward_demodulation,[],[f19771,f184])).
fof(f19771,plain,(
  ( ! [X6,X4,X2,X0,X10,X8,X7,X5,X3,X1,X9] : (s('type.pair.prod'('type.infer.exc'(X0,X1),fun(X2,fun(X3,fun(X4,'type.one.one')))),'const.pair.,_2'(s('type.infer.exc'(X0,X1),'const.infer.Success_1'(s(X0,'const.option.option_CASE_3'(s('type.option.option'(X5),X6),s(X0,X7),s(fun(X5,X0),X8))))),s(fun(X2,fun(X3,fun(X4,'type.one.one'))),X9))) = s('type.pair.prod'('type.infer.exc'(X0,X1),fun(X2,fun(X3,fun(X4,'type.one.one')))),'const.infer.st_ex_return_2'(s(X0,happ(s(fun(fun(X5,X0),X0),happ(s(fun(X0,fun(fun(X5,X0),X0)),happ(s(fun('type.option.option'(X5),fun(X0,fun(fun(X5,X0),X0))),'const.option.option_CASE_0'),s('type.option.option'(X5),X6))),s(X0,X7))),s(fun(X5,X0),X8))),s(fun(X2,fun(X3,fun(X4,'type.one.one'))),X10)))) )),
  inference(unit_resulting_resolution,[],[f752,f184,f212])).
fof(f20158,plain,(
  ( ! [X6,X4,X2,X0,X10,X8,X7,X5,X3,X1,X11,X9] : (s('type.pair.prod'('type.infer.exc'(X0,X1),fun(X2,fun(X3,fun(X4,fun(X5,'type.one.one'))))),'const.infer.st_ex_return_2'(s(X0,'const.option.option_CASE_3'(s('type.option.option'(X6),X7),s(X0,X8),s(fun(X6,X0),X9))),s(fun(X2,fun(X3,fun(X4,fun(X5,'type.one.one')))),X11))) = s('type.pair.prod'('type.infer.exc'(X0,X1),fun(X2,fun(X3,fun(X4,fun(X5,'type.one.one'))))),'const.pair.,_2'(s('type.infer.exc'(X0,X1),'const.infer.Success_1'(s(X0,'const.option.option_CASE_3'(s('type.option.option'(X6),X7),s(X0,X8),s(fun(X6,X0),X9))))),s(fun(X2,fun(X3,fun(X4,fun(X5,'type.one.one')))),X10)))) )),
  inference(forward_demodulation,[],[f19772,f184])).
fof(f19772,plain,(
  ( ! [X6,X4,X2,X0,X10,X8,X7,X5,X3,X1,X11,X9] : (s('type.pair.prod'('type.infer.exc'(X0,X1),fun(X2,fun(X3,fun(X4,fun(X5,'type.one.one'))))),'const.pair.,_2'(s('type.infer.exc'(X0,X1),'const.infer.Success_1'(s(X0,'const.option.option_CASE_3'(s('type.option.option'(X6),X7),s(X0,X8),s(fun(X6,X0),X9))))),s(fun(X2,fun(X3,fun(X4,fun(X5,'type.one.one')))),X10))) = s('type.pair.prod'('type.infer.exc'(X0,X1),fun(X2,fun(X3,fun(X4,fun(X5,'type.one.one'))))),'const.infer.st_ex_return_2'(s(X0,happ(s(fun(fun(X6,X0),X0),happ(s(fun(X0,fun(fun(X6,X0),X0)),happ(s(fun('type.option.option'(X6),fun(X0,fun(fun(X6,X0),X0))),'const.option.option_CASE_0'),s('type.option.option'(X6),X7))),s(X0,X8))),s(fun(X6,X0),X9))),s(fun(X2,fun(X3,fun(X4,fun(X5,'type.one.one')))),X11)))) )),
  inference(unit_resulting_resolution,[],[f787,f184,f212])).
fof(f20157,plain,(
  ( ! [X6,X4,X2,X0,X12,X10,X8,X7,X5,X3,X1,X11,X9] : (s('type.pair.prod'('type.infer.exc'(X0,X1),fun(X2,fun(X3,fun(X4,fun(X5,fun(X6,'type.one.one')))))),'const.infer.st_ex_return_2'(s(X0,'const.option.option_CASE_3'(s('type.option.option'(X7),X8),s(X0,X9),s(fun(X7,X0),X10))),s(fun(X2,fun(X3,fun(X4,fun(X5,fun(X6,'type.one.one'))))),X12))) = s('type.pair.prod'('type.infer.exc'(X0,X1),fun(X2,fun(X3,fun(X4,fun(X5,fun(X6,'type.one.one')))))),'const.pair.,_2'(s('type.infer.exc'(X0,X1),'const.infer.Success_1'(s(X0,'const.option.option_CASE_3'(s('type.option.option'(X7),X8),s(X0,X9),s(fun(X7,X0),X10))))),s(fun(X2,fun(X3,fun(X4,fun(X5,fun(X6,'type.one.one'))))),X11)))) )),
  inference(forward_demodulation,[],[f19773,f184])).
fof(f19773,plain,(
  ( ! [X6,X4,X2,X0,X12,X10,X8,X7,X5,X3,X1,X11,X9] : (s('type.pair.prod'('type.infer.exc'(X0,X1),fun(X2,fun(X3,fun(X4,fun(X5,fun(X6,'type.one.one')))))),'const.pair.,_2'(s('type.infer.exc'(X0,X1),'const.infer.Success_1'(s(X0,'const.option.option_CASE_3'(s('type.option.option'(X7),X8),s(X0,X9),s(fun(X7,X0),X10))))),s(fun(X2,fun(X3,fun(X4,fun(X5,fun(X6,'type.one.one'))))),X11))) = s('type.pair.prod'('type.infer.exc'(X0,X1),fun(X2,fun(X3,fun(X4,fun(X5,fun(X6,'type.one.one')))))),'const.infer.st_ex_return_2'(s(X0,happ(s(fun(fun(X7,X0),X0),happ(s(fun(X0,fun(fun(X7,X0),X0)),happ(s(fun('type.option.option'(X7),fun(X0,fun(fun(X7,X0),X0))),'const.option.option_CASE_0'),s('type.option.option'(X7),X8))),s(X0,X9))),s(fun(X7,X0),X10))),s(fun(X2,fun(X3,fun(X4,fun(X5,fun(X6,'type.one.one'))))),X12)))) )),
  inference(unit_resulting_resolution,[],[f815,f184,f212])).
fof(f20153,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'(X0,X1),'type.one.one'),'const.infer.st_ex_return_2'(s(X0,'const.option.option_CASE_3'(s('type.option.option'(X2),X3),s(X0,X4),s(fun(X2,X0),X5))),s('type.one.one',X7))) = s('type.pair.prod'('type.infer.exc'(X0,X1),'type.one.one'),'const.pair.,_2'(s('type.infer.exc'(X0,X1),'const.infer.Success_1'(s(X0,'const.option.option_CASE_3'(s('type.option.option'(X2),X3),s(X0,X4),s(fun(X2,X0),X5))))),s('type.one.one',X6)))) )),
  inference(forward_demodulation,[],[f19777,f184])).
fof(f19777,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'(X0,X1),'type.one.one'),'const.pair.,_2'(s('type.infer.exc'(X0,X1),'const.infer.Success_1'(s(X0,'const.option.option_CASE_3'(s('type.option.option'(X2),X3),s(X0,X4),s(fun(X2,X0),X5))))),s('type.one.one',X6))) = s('type.pair.prod'('type.infer.exc'(X0,X1),'type.one.one'),'const.infer.st_ex_return_2'(s(X0,happ(s(fun(fun(X2,X0),X0),happ(s(fun(X0,fun(fun(X2,X0),X0)),happ(s(fun('type.option.option'(X2),fun(X0,fun(fun(X2,X0),X0))),'const.option.option_CASE_0'),s('type.option.option'(X2),X3))),s(X0,X4))),s(fun(X2,X0),X5))),s('type.one.one',X7)))) )),
  inference(unit_resulting_resolution,[],[f258,f184,f212])).
fof(f20152,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1,X9] : (s('type.pair.prod'('type.infer.exc'(X0,X1),'type.list.list'(X2)),'const.infer.st_ex_return_2'(s(X0,'const.option.option_CASE_3'(s('type.option.option'(X3),X4),s(X0,X5),s(fun(X3,X0),X6))),s('type.list.list'(X2),'const.list.MAP_2'(s(fun(X7,X2),X8),s('type.list.list'(X7),X9))))) = s('type.pair.prod'('type.infer.exc'(X0,X1),'type.list.list'(X2)),'const.pair.,_2'(s('type.infer.exc'(X0,X1),'const.infer.Success_1'(s(X0,'const.option.option_CASE_3'(s('type.option.option'(X3),X4),s(X0,X5),s(fun(X3,X0),X6))))),s('type.list.list'(X2),'const.list.MAP_2'(s(fun(X7,X2),X8),s('type.list.list'(X7),X9)))))) )),
  inference(forward_demodulation,[],[f20151,f184])).
fof(f20151,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1,X9] : (s('type.pair.prod'('type.infer.exc'(X0,X1),'type.list.list'(X2)),'const.pair.,_2'(s('type.infer.exc'(X0,X1),'const.infer.Success_1'(s(X0,'const.option.option_CASE_3'(s('type.option.option'(X3),X4),s(X0,X5),s(fun(X3,X0),X6))))),s('type.list.list'(X2),'const.list.MAP_2'(s(fun(X7,X2),X8),s('type.list.list'(X7),X9))))) = s('type.pair.prod'('type.infer.exc'(X0,X1),'type.list.list'(X2)),'const.infer.st_ex_return_2'(s(X0,happ(s(fun(fun(X3,X0),X0),happ(s(fun(X0,fun(fun(X3,X0),X0)),happ(s(fun('type.option.option'(X3),fun(X0,fun(fun(X3,X0),X0))),'const.option.option_CASE_0'),s('type.option.option'(X3),X4))),s(X0,X5))),s(fun(X3,X0),X6))),s('type.list.list'(X2),'const.list.MAP_2'(s(fun(X7,X2),X8),s('type.list.list'(X7),X9)))))) )),
  inference(forward_demodulation,[],[f19778,f180])).
fof(f19778,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1,X9] : (s('type.pair.prod'('type.infer.exc'(X0,X1),'type.list.list'(X2)),'const.pair.,_2'(s('type.infer.exc'(X0,X1),'const.infer.Success_1'(s(X0,'const.option.option_CASE_3'(s('type.option.option'(X3),X4),s(X0,X5),s(fun(X3,X0),X6))))),s('type.list.list'(X2),'const.list.MAP_2'(s(fun(X7,X2),X8),s('type.list.list'(X7),X9))))) = s('type.pair.prod'('type.infer.exc'(X0,X1),'type.list.list'(X2)),'const.infer.st_ex_return_2'(s(X0,happ(s(fun(fun(X3,X0),X0),happ(s(fun(X0,fun(fun(X3,X0),X0)),happ(s(fun('type.option.option'(X3),fun(X0,fun(fun(X3,X0),X0))),'const.option.option_CASE_0'),s('type.option.option'(X3),X4))),s(X0,X5))),s(fun(X3,X0),X6))),s('type.list.list'(X2),happ(s(fun('type.list.list'(X7),'type.list.list'(X2)),happ(s(fun(fun(X7,X2),fun('type.list.list'(X7),'type.list.list'(X2))),'const.list.MAP_0'),s(fun(X7,X2),X8))),s('type.list.list'(X7),X9)))))) )),
  inference(unit_resulting_resolution,[],[f180,f184,f212])).
fof(f20146,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'(X0,X1),'type.num.num'),'const.infer.st_ex_return_2'(s(X0,'const.option.option_CASE_3'(s('type.option.option'(X2),X3),s(X0,X4),s(fun(X2,X0),X5))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X6),s('type.num.num',X7))))) = s('type.pair.prod'('type.infer.exc'(X0,X1),'type.num.num'),'const.pair.,_2'(s('type.infer.exc'(X0,X1),'const.infer.Success_1'(s(X0,'const.option.option_CASE_3'(s('type.option.option'(X2),X3),s(X0,X4),s(fun(X2,X0),X5))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X6),s('type.num.num',X7)))))) )),
  inference(forward_demodulation,[],[f20145,f184])).
fof(f20145,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'(X0,X1),'type.num.num'),'const.pair.,_2'(s('type.infer.exc'(X0,X1),'const.infer.Success_1'(s(X0,'const.option.option_CASE_3'(s('type.option.option'(X2),X3),s(X0,X4),s(fun(X2,X0),X5))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X6),s('type.num.num',X7))))) = s('type.pair.prod'('type.infer.exc'(X0,X1),'type.num.num'),'const.infer.st_ex_return_2'(s(X0,happ(s(fun(fun(X2,X0),X0),happ(s(fun(X0,fun(fun(X2,X0),X0)),happ(s(fun('type.option.option'(X2),fun(X0,fun(fun(X2,X0),X0))),'const.option.option_CASE_0'),s('type.option.option'(X2),X3))),s(X0,X4))),s(fun(X2,X0),X5))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X6),s('type.num.num',X7)))))) )),
  inference(forward_demodulation,[],[f19781,f175])).
fof(f19781,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'(X0,X1),'type.num.num'),'const.pair.,_2'(s('type.infer.exc'(X0,X1),'const.infer.Success_1'(s(X0,'const.option.option_CASE_3'(s('type.option.option'(X2),X3),s(X0,X4),s(fun(X2,X0),X5))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X6),s('type.num.num',X7))))) = s('type.pair.prod'('type.infer.exc'(X0,X1),'type.num.num'),'const.infer.st_ex_return_2'(s(X0,happ(s(fun(fun(X2,X0),X0),happ(s(fun(X0,fun(fun(X2,X0),X0)),happ(s(fun('type.option.option'(X2),fun(X0,fun(fun(X2,X0),X0))),'const.option.option_CASE_0'),s('type.option.option'(X2),X3))),s(X0,X4))),s(fun(X2,X0),X5))),s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.arithmetic.+_1'(s('type.num.num',X6))),s('type.num.num',X7)))))) )),
  inference(unit_resulting_resolution,[],[f175,f184,f212])).
fof(f20144,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'(X0,X1),'type.infer_t.infer_t'),'const.infer.st_ex_return_2'(s(X0,'const.option.option_CASE_3'(s('type.option.option'(X2),X3),s(X0,X4),s(fun(X2,X0),X5))),s('type.infer_t.infer_t','const.infer_t.Infer_Tuvar_1'(s('type.num.num',X6))))) = s('type.pair.prod'('type.infer.exc'(X0,X1),'type.infer_t.infer_t'),'const.pair.,_2'(s('type.infer.exc'(X0,X1),'const.infer.Success_1'(s(X0,'const.option.option_CASE_3'(s('type.option.option'(X2),X3),s(X0,X4),s(fun(X2,X0),X5))))),s('type.infer_t.infer_t','const.infer_t.Infer_Tuvar_1'(s('type.num.num',X6)))))) )),
  inference(forward_demodulation,[],[f20143,f184])).
fof(f20143,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'(X0,X1),'type.infer_t.infer_t'),'const.pair.,_2'(s('type.infer.exc'(X0,X1),'const.infer.Success_1'(s(X0,'const.option.option_CASE_3'(s('type.option.option'(X2),X3),s(X0,X4),s(fun(X2,X0),X5))))),s('type.infer_t.infer_t','const.infer_t.Infer_Tuvar_1'(s('type.num.num',X6))))) = s('type.pair.prod'('type.infer.exc'(X0,X1),'type.infer_t.infer_t'),'const.infer.st_ex_return_2'(s(X0,happ(s(fun(fun(X2,X0),X0),happ(s(fun(X0,fun(fun(X2,X0),X0)),happ(s(fun('type.option.option'(X2),fun(X0,fun(fun(X2,X0),X0))),'const.option.option_CASE_0'),s('type.option.option'(X2),X3))),s(X0,X4))),s(fun(X2,X0),X5))),s('type.infer_t.infer_t','const.infer_t.Infer_Tuvar_1'(s('type.num.num',X6)))))) )),
  inference(forward_demodulation,[],[f19782,f166])).
fof(f19782,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'(X0,X1),'type.infer_t.infer_t'),'const.pair.,_2'(s('type.infer.exc'(X0,X1),'const.infer.Success_1'(s(X0,'const.option.option_CASE_3'(s('type.option.option'(X2),X3),s(X0,X4),s(fun(X2,X0),X5))))),s('type.infer_t.infer_t','const.infer_t.Infer_Tuvar_1'(s('type.num.num',X6))))) = s('type.pair.prod'('type.infer.exc'(X0,X1),'type.infer_t.infer_t'),'const.infer.st_ex_return_2'(s(X0,happ(s(fun(fun(X2,X0),X0),happ(s(fun(X0,fun(fun(X2,X0),X0)),happ(s(fun('type.option.option'(X2),fun(X0,fun(fun(X2,X0),X0))),'const.option.option_CASE_0'),s('type.option.option'(X2),X3))),s(X0,X4))),s(fun(X2,X0),X5))),s('type.infer_t.infer_t',happ(s(fun('type.num.num','type.infer_t.infer_t'),'const.infer_t.Infer_Tuvar_0'),s('type.num.num',X6)))))) )),
  inference(unit_resulting_resolution,[],[f166,f184,f212])).
fof(f20142,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'(X0,X1),'type.infer_t.infer_t'),'const.infer.st_ex_return_2'(s(X0,'const.option.option_CASE_3'(s('type.option.option'(X2),X3),s(X0,X4),s(fun(X2,X0),X5))),s('type.infer_t.infer_t','const.unify.t_walkstar_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X6),s('type.infer_t.infer_t',X7))))) = s('type.pair.prod'('type.infer.exc'(X0,X1),'type.infer_t.infer_t'),'const.pair.,_2'(s('type.infer.exc'(X0,X1),'const.infer.Success_1'(s(X0,'const.option.option_CASE_3'(s('type.option.option'(X2),X3),s(X0,X4),s(fun(X2,X0),X5))))),s('type.infer_t.infer_t','const.unify.t_walkstar_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X6),s('type.infer_t.infer_t',X7)))))) )),
  inference(forward_demodulation,[],[f20141,f184])).
fof(f20141,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'(X0,X1),'type.infer_t.infer_t'),'const.pair.,_2'(s('type.infer.exc'(X0,X1),'const.infer.Success_1'(s(X0,'const.option.option_CASE_3'(s('type.option.option'(X2),X3),s(X0,X4),s(fun(X2,X0),X5))))),s('type.infer_t.infer_t','const.unify.t_walkstar_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X6),s('type.infer_t.infer_t',X7))))) = s('type.pair.prod'('type.infer.exc'(X0,X1),'type.infer_t.infer_t'),'const.infer.st_ex_return_2'(s(X0,happ(s(fun(fun(X2,X0),X0),happ(s(fun(X0,fun(fun(X2,X0),X0)),happ(s(fun('type.option.option'(X2),fun(X0,fun(fun(X2,X0),X0))),'const.option.option_CASE_0'),s('type.option.option'(X2),X3))),s(X0,X4))),s(fun(X2,X0),X5))),s('type.infer_t.infer_t','const.unify.t_walkstar_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X6),s('type.infer_t.infer_t',X7)))))) )),
  inference(forward_demodulation,[],[f19783,f176])).
fof(f19783,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'(X0,X1),'type.infer_t.infer_t'),'const.pair.,_2'(s('type.infer.exc'(X0,X1),'const.infer.Success_1'(s(X0,'const.option.option_CASE_3'(s('type.option.option'(X2),X3),s(X0,X4),s(fun(X2,X0),X5))))),s('type.infer_t.infer_t','const.unify.t_walkstar_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X6),s('type.infer_t.infer_t',X7))))) = s('type.pair.prod'('type.infer.exc'(X0,X1),'type.infer_t.infer_t'),'const.infer.st_ex_return_2'(s(X0,happ(s(fun(fun(X2,X0),X0),happ(s(fun(X0,fun(fun(X2,X0),X0)),happ(s(fun('type.option.option'(X2),fun(X0,fun(fun(X2,X0),X0))),'const.option.option_CASE_0'),s('type.option.option'(X2),X3))),s(X0,X4))),s(fun(X2,X0),X5))),s('type.infer_t.infer_t',happ(s(fun('type.infer_t.infer_t','type.infer_t.infer_t'),happ(s(fun('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),fun('type.infer_t.infer_t','type.infer_t.infer_t')),'const.unify.t_walkstar_0'),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X6))),s('type.infer_t.infer_t',X7)))))) )),
  inference(unit_resulting_resolution,[],[f176,f184,f212])).
fof(f20138,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'(X0,X1),'type.pair.prod'('type.infer.exc'(X2,X3),X2)),'const.infer.st_ex_return_2'(s(X0,'const.option.option_CASE_3'(s('type.option.option'(X4),X5),s(X0,X6),s(fun(X4,X0),X7))),s('type.pair.prod'('type.infer.exc'(X2,X3),X2),'const.infer.read_1'(s(X2,X8))))) = s('type.pair.prod'('type.infer.exc'(X0,X1),'type.pair.prod'('type.infer.exc'(X2,X3),X2)),'const.pair.,_2'(s('type.infer.exc'(X0,X1),'const.infer.Success_1'(s(X0,'const.option.option_CASE_3'(s('type.option.option'(X4),X5),s(X0,X6),s(fun(X4,X0),X7))))),s('type.pair.prod'('type.infer.exc'(X2,X3),X2),'const.infer.read_1'(s(X2,X8)))))) )),
  inference(forward_demodulation,[],[f20137,f184])).
fof(f20137,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'(X0,X1),'type.pair.prod'('type.infer.exc'(X2,X3),X2)),'const.pair.,_2'(s('type.infer.exc'(X0,X1),'const.infer.Success_1'(s(X0,'const.option.option_CASE_3'(s('type.option.option'(X4),X5),s(X0,X6),s(fun(X4,X0),X7))))),s('type.pair.prod'('type.infer.exc'(X2,X3),X2),'const.infer.read_1'(s(X2,X8))))) = s('type.pair.prod'('type.infer.exc'(X0,X1),'type.pair.prod'('type.infer.exc'(X2,X3),X2)),'const.infer.st_ex_return_2'(s(X0,happ(s(fun(fun(X4,X0),X0),happ(s(fun(X0,fun(fun(X4,X0),X0)),happ(s(fun('type.option.option'(X4),fun(X0,fun(fun(X4,X0),X0))),'const.option.option_CASE_0'),s('type.option.option'(X4),X5))),s(X0,X6))),s(fun(X4,X0),X7))),s('type.pair.prod'('type.infer.exc'(X2,X3),X2),'const.infer.read_1'(s(X2,X8)))))) )),
  inference(forward_demodulation,[],[f19785,f178])).
fof(f19785,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'(X0,X1),'type.pair.prod'('type.infer.exc'(X2,X3),X2)),'const.pair.,_2'(s('type.infer.exc'(X0,X1),'const.infer.Success_1'(s(X0,'const.option.option_CASE_3'(s('type.option.option'(X4),X5),s(X0,X6),s(fun(X4,X0),X7))))),s('type.pair.prod'('type.infer.exc'(X2,X3),X2),'const.infer.read_1'(s(X2,X8))))) = s('type.pair.prod'('type.infer.exc'(X0,X1),'type.pair.prod'('type.infer.exc'(X2,X3),X2)),'const.infer.st_ex_return_2'(s(X0,happ(s(fun(fun(X4,X0),X0),happ(s(fun(X0,fun(fun(X4,X0),X0)),happ(s(fun('type.option.option'(X4),fun(X0,fun(fun(X4,X0),X0))),'const.option.option_CASE_0'),s('type.option.option'(X4),X5))),s(X0,X6))),s(fun(X4,X0),X7))),s('type.pair.prod'('type.infer.exc'(X2,X3),X2),happ(s(fun(X2,'type.pair.prod'('type.infer.exc'(X2,X3),X2)),'const.infer.read_0'),s(X2,X8)))))) )),
  inference(unit_resulting_resolution,[],[f178,f184,f212])).
fof(f20128,plain,(
  ( ! [X6,X4,X2,X0,X10,X8,X7,X5,X3,X1,X9] : (s('type.pair.prod'('type.infer.exc'(X0,X1),'type.pair.prod'('type.infer.exc'(X2,X3),X4)),'const.infer.st_ex_return_2'(s(X0,'const.option.option_CASE_3'(s('type.option.option'(X5),X6),s(X0,X7),s(fun(X5,X0),X8))),s('type.pair.prod'('type.infer.exc'(X2,X3),X4),'const.infer.st_ex_return_2'(s(X2,X9),s(X4,X10))))) = s('type.pair.prod'('type.infer.exc'(X0,X1),'type.pair.prod'('type.infer.exc'(X2,X3),X4)),'const.pair.,_2'(s('type.infer.exc'(X0,X1),'const.infer.Success_1'(s(X0,'const.option.option_CASE_3'(s('type.option.option'(X5),X6),s(X0,X7),s(fun(X5,X0),X8))))),s('type.pair.prod'('type.infer.exc'(X2,X3),X4),'const.infer.st_ex_return_2'(s(X2,X9),s(X4,X10)))))) )),
  inference(forward_demodulation,[],[f20127,f184])).
fof(f20127,plain,(
  ( ! [X6,X4,X2,X0,X10,X8,X7,X5,X3,X1,X9] : (s('type.pair.prod'('type.infer.exc'(X0,X1),'type.pair.prod'('type.infer.exc'(X2,X3),X4)),'const.pair.,_2'(s('type.infer.exc'(X0,X1),'const.infer.Success_1'(s(X0,'const.option.option_CASE_3'(s('type.option.option'(X5),X6),s(X0,X7),s(fun(X5,X0),X8))))),s('type.pair.prod'('type.infer.exc'(X2,X3),X4),'const.infer.st_ex_return_2'(s(X2,X9),s(X4,X10))))) = s('type.pair.prod'('type.infer.exc'(X0,X1),'type.pair.prod'('type.infer.exc'(X2,X3),X4)),'const.infer.st_ex_return_2'(s(X0,happ(s(fun(fun(X5,X0),X0),happ(s(fun(X0,fun(fun(X5,X0),X0)),happ(s(fun('type.option.option'(X5),fun(X0,fun(fun(X5,X0),X0))),'const.option.option_CASE_0'),s('type.option.option'(X5),X6))),s(X0,X7))),s(fun(X5,X0),X8))),s('type.pair.prod'('type.infer.exc'(X2,X3),X4),'const.infer.st_ex_return_2'(s(X2,X9),s(X4,X10)))))) )),
  inference(forward_demodulation,[],[f19792,f205])).
fof(f19792,plain,(
  ( ! [X6,X4,X2,X0,X10,X8,X7,X5,X3,X1,X9] : (s('type.pair.prod'('type.infer.exc'(X0,X1),'type.pair.prod'('type.infer.exc'(X2,X3),X4)),'const.pair.,_2'(s('type.infer.exc'(X0,X1),'const.infer.Success_1'(s(X0,'const.option.option_CASE_3'(s('type.option.option'(X5),X6),s(X0,X7),s(fun(X5,X0),X8))))),s('type.pair.prod'('type.infer.exc'(X2,X3),X4),'const.infer.st_ex_return_2'(s(X2,X9),s(X4,X10))))) = s('type.pair.prod'('type.infer.exc'(X0,X1),'type.pair.prod'('type.infer.exc'(X2,X3),X4)),'const.infer.st_ex_return_2'(s(X0,happ(s(fun(fun(X5,X0),X0),happ(s(fun(X0,fun(fun(X5,X0),X0)),happ(s(fun('type.option.option'(X5),fun(X0,fun(fun(X5,X0),X0))),'const.option.option_CASE_0'),s('type.option.option'(X5),X6))),s(X0,X7))),s(fun(X5,X0),X8))),s('type.pair.prod'('type.infer.exc'(X2,X3),X4),happ(s(fun(X4,'type.pair.prod'('type.infer.exc'(X2,X3),X4)),happ(s(fun(X2,fun(X4,'type.pair.prod'('type.infer.exc'(X2,X3),X4))),'const.infer.st_ex_return_0'),s(X2,X9))),s(X4,X10)))))) )),
  inference(unit_resulting_resolution,[],[f205,f184,f212])).
fof(f20125,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'(X0,X1),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X2),'type.infer.infer_st'(X3))),'const.infer.st_ex_return_2'(s(X0,'const.option.option_CASE_3'(s('type.option.option'(X4),X5),s(X0,X6),s(fun(X4,X0),X7))),s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X2),'type.infer.infer_st'(X3)),'const.infer.fresh_uvar_1'(s('type.infer.infer_st'(X3),X8))))) = s('type.pair.prod'('type.infer.exc'(X0,X1),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X2),'type.infer.infer_st'(X3))),'const.pair.,_2'(s('type.infer.exc'(X0,X1),'const.infer.Success_1'(s(X0,'const.option.option_CASE_3'(s('type.option.option'(X4),X5),s(X0,X6),s(fun(X4,X0),X7))))),s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X2),'type.infer.infer_st'(X3)),'const.infer.fresh_uvar_1'(s('type.infer.infer_st'(X3),X8)))))) )),
  inference(forward_demodulation,[],[f20124,f184])).
fof(f20124,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'(X0,X1),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X2),'type.infer.infer_st'(X3))),'const.pair.,_2'(s('type.infer.exc'(X0,X1),'const.infer.Success_1'(s(X0,'const.option.option_CASE_3'(s('type.option.option'(X4),X5),s(X0,X6),s(fun(X4,X0),X7))))),s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X2),'type.infer.infer_st'(X3)),'const.infer.fresh_uvar_1'(s('type.infer.infer_st'(X3),X8))))) = s('type.pair.prod'('type.infer.exc'(X0,X1),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X2),'type.infer.infer_st'(X3))),'const.infer.st_ex_return_2'(s(X0,happ(s(fun(fun(X4,X0),X0),happ(s(fun(X0,fun(fun(X4,X0),X0)),happ(s(fun('type.option.option'(X4),fun(X0,fun(fun(X4,X0),X0))),'const.option.option_CASE_0'),s('type.option.option'(X4),X5))),s(X0,X6))),s(fun(X4,X0),X7))),s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X2),'type.infer.infer_st'(X3)),'const.infer.fresh_uvar_1'(s('type.infer.infer_st'(X3),X8)))))) )),
  inference(forward_demodulation,[],[f19794,f179])).
fof(f19794,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'(X0,X1),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X2),'type.infer.infer_st'(X3))),'const.pair.,_2'(s('type.infer.exc'(X0,X1),'const.infer.Success_1'(s(X0,'const.option.option_CASE_3'(s('type.option.option'(X4),X5),s(X0,X6),s(fun(X4,X0),X7))))),s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X2),'type.infer.infer_st'(X3)),'const.infer.fresh_uvar_1'(s('type.infer.infer_st'(X3),X8))))) = s('type.pair.prod'('type.infer.exc'(X0,X1),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X2),'type.infer.infer_st'(X3))),'const.infer.st_ex_return_2'(s(X0,happ(s(fun(fun(X4,X0),X0),happ(s(fun(X0,fun(fun(X4,X0),X0)),happ(s(fun('type.option.option'(X4),fun(X0,fun(fun(X4,X0),X0))),'const.option.option_CASE_0'),s('type.option.option'(X4),X5))),s(X0,X6))),s(fun(X4,X0),X7))),s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X2),'type.infer.infer_st'(X3)),happ(s(fun('type.infer.infer_st'(X3),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X2),'type.infer.infer_st'(X3))),'const.infer.fresh_uvar_0'),s('type.infer.infer_st'(X3),X8)))))) )),
  inference(unit_resulting_resolution,[],[f179,f184,f212])).
fof(f20123,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1,X9] : (s('type.pair.prod'('type.infer.exc'(X0,X1),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X2),'type.infer.infer_st'(X3))),'const.infer.st_ex_return_2'(s(X0,'const.option.option_CASE_3'(s('type.option.option'(X4),X5),s(X0,X6),s(fun(X4,X0),X7))),s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X2),'type.infer.infer_st'(X3)),'const.infer.n_fresh_uvar_2'(s('type.num.num',X8),s('type.infer.infer_st'(X3),X9))))) = s('type.pair.prod'('type.infer.exc'(X0,X1),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X2),'type.infer.infer_st'(X3))),'const.pair.,_2'(s('type.infer.exc'(X0,X1),'const.infer.Success_1'(s(X0,'const.option.option_CASE_3'(s('type.option.option'(X4),X5),s(X0,X6),s(fun(X4,X0),X7))))),s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X2),'type.infer.infer_st'(X3)),'const.infer.n_fresh_uvar_2'(s('type.num.num',X8),s('type.infer.infer_st'(X3),X9)))))) )),
  inference(forward_demodulation,[],[f20122,f184])).
fof(f20122,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1,X9] : (s('type.pair.prod'('type.infer.exc'(X0,X1),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X2),'type.infer.infer_st'(X3))),'const.pair.,_2'(s('type.infer.exc'(X0,X1),'const.infer.Success_1'(s(X0,'const.option.option_CASE_3'(s('type.option.option'(X4),X5),s(X0,X6),s(fun(X4,X0),X7))))),s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X2),'type.infer.infer_st'(X3)),'const.infer.n_fresh_uvar_2'(s('type.num.num',X8),s('type.infer.infer_st'(X3),X9))))) = s('type.pair.prod'('type.infer.exc'(X0,X1),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X2),'type.infer.infer_st'(X3))),'const.infer.st_ex_return_2'(s(X0,happ(s(fun(fun(X4,X0),X0),happ(s(fun(X0,fun(fun(X4,X0),X0)),happ(s(fun('type.option.option'(X4),fun(X0,fun(fun(X4,X0),X0))),'const.option.option_CASE_0'),s('type.option.option'(X4),X5))),s(X0,X6))),s(fun(X4,X0),X7))),s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X2),'type.infer.infer_st'(X3)),'const.infer.n_fresh_uvar_2'(s('type.num.num',X8),s('type.infer.infer_st'(X3),X9)))))) )),
  inference(forward_demodulation,[],[f19795,f181])).
fof(f19795,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1,X9] : (s('type.pair.prod'('type.infer.exc'(X0,X1),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X2),'type.infer.infer_st'(X3))),'const.pair.,_2'(s('type.infer.exc'(X0,X1),'const.infer.Success_1'(s(X0,'const.option.option_CASE_3'(s('type.option.option'(X4),X5),s(X0,X6),s(fun(X4,X0),X7))))),s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X2),'type.infer.infer_st'(X3)),'const.infer.n_fresh_uvar_2'(s('type.num.num',X8),s('type.infer.infer_st'(X3),X9))))) = s('type.pair.prod'('type.infer.exc'(X0,X1),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X2),'type.infer.infer_st'(X3))),'const.infer.st_ex_return_2'(s(X0,happ(s(fun(fun(X4,X0),X0),happ(s(fun(X0,fun(fun(X4,X0),X0)),happ(s(fun('type.option.option'(X4),fun(X0,fun(fun(X4,X0),X0))),'const.option.option_CASE_0'),s('type.option.option'(X4),X5))),s(X0,X6))),s(fun(X4,X0),X7))),s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X2),'type.infer.infer_st'(X3)),happ(s(fun('type.infer.infer_st'(X3),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X2),'type.infer.infer_st'(X3))),happ(s(fun('type.num.num',fun('type.infer.infer_st'(X3),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X2),'type.infer.infer_st'(X3)))),'const.infer.n_fresh_uvar_0'),s('type.num.num',X8))),s('type.infer.infer_st'(X3),X9)))))) )),
  inference(unit_resulting_resolution,[],[f181,f184,f212])).
fof(f20121,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'(X0,X1),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X2),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.infer.st_ex_return_2'(s(X0,'const.option.option_CASE_3'(s('type.option.option'(X3),X4),s(X0,X5),s(fun(X3,X0),X6))),s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X2),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.apply_subst_2'(s('type.infer_t.infer_t',X7),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X8))))) = s('type.pair.prod'('type.infer.exc'(X0,X1),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X2),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.pair.,_2'(s('type.infer.exc'(X0,X1),'const.infer.Success_1'(s(X0,'const.option.option_CASE_3'(s('type.option.option'(X3),X4),s(X0,X5),s(fun(X3,X0),X6))))),s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X2),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.apply_subst_2'(s('type.infer_t.infer_t',X7),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X8)))))) )),
  inference(forward_demodulation,[],[f20120,f184])).
fof(f20120,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'(X0,X1),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X2),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.pair.,_2'(s('type.infer.exc'(X0,X1),'const.infer.Success_1'(s(X0,'const.option.option_CASE_3'(s('type.option.option'(X3),X4),s(X0,X5),s(fun(X3,X0),X6))))),s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X2),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.apply_subst_2'(s('type.infer_t.infer_t',X7),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X8))))) = s('type.pair.prod'('type.infer.exc'(X0,X1),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X2),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.infer.st_ex_return_2'(s(X0,happ(s(fun(fun(X3,X0),X0),happ(s(fun(X0,fun(fun(X3,X0),X0)),happ(s(fun('type.option.option'(X3),fun(X0,fun(fun(X3,X0),X0))),'const.option.option_CASE_0'),s('type.option.option'(X3),X4))),s(X0,X5))),s(fun(X3,X0),X6))),s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X2),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.apply_subst_2'(s('type.infer_t.infer_t',X7),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X8)))))) )),
  inference(forward_demodulation,[],[f19796,f171])).
fof(f19796,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'(X0,X1),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X2),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.pair.,_2'(s('type.infer.exc'(X0,X1),'const.infer.Success_1'(s(X0,'const.option.option_CASE_3'(s('type.option.option'(X3),X4),s(X0,X5),s(fun(X3,X0),X6))))),s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X2),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.apply_subst_2'(s('type.infer_t.infer_t',X7),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X8))))) = s('type.pair.prod'('type.infer.exc'(X0,X1),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X2),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.infer.st_ex_return_2'(s(X0,happ(s(fun(fun(X3,X0),X0),happ(s(fun(X0,fun(fun(X3,X0),X0)),happ(s(fun('type.option.option'(X3),fun(X0,fun(fun(X3,X0),X0))),'const.option.option_CASE_0'),s('type.option.option'(X3),X4))),s(X0,X5))),s(fun(X3,X0),X6))),s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X2),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),happ(s(fun('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X2),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.infer.apply_subst_1'(s('type.infer_t.infer_t',X7))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X8)))))) )),
  inference(unit_resulting_resolution,[],[f171,f184,f212])).
fof(f20119,plain,(
  ( ! [X6,X4,X2,X0,X10,X8,X7,X5,X3,X1,X9] : (s('type.pair.prod'('type.infer.exc'(X0,X1),'type.pair.prod'('type.infer.exc'(X2,X3),X4)),'const.infer.st_ex_return_2'(s(X0,'const.option.option_CASE_3'(s('type.option.option'(X5),X6),s(X0,X7),s(fun(X5,X0),X8))),s('type.pair.prod'('type.infer.exc'(X2,X3),X4),'const.infer.failwith_2'(s(X3,X9),s(X4,X10))))) = s('type.pair.prod'('type.infer.exc'(X0,X1),'type.pair.prod'('type.infer.exc'(X2,X3),X4)),'const.pair.,_2'(s('type.infer.exc'(X0,X1),'const.infer.Success_1'(s(X0,'const.option.option_CASE_3'(s('type.option.option'(X5),X6),s(X0,X7),s(fun(X5,X0),X8))))),s('type.pair.prod'('type.infer.exc'(X2,X3),X4),'const.infer.failwith_2'(s(X3,X9),s(X4,X10)))))) )),
  inference(forward_demodulation,[],[f20118,f184])).
fof(f20118,plain,(
  ( ! [X6,X4,X2,X0,X10,X8,X7,X5,X3,X1,X9] : (s('type.pair.prod'('type.infer.exc'(X0,X1),'type.pair.prod'('type.infer.exc'(X2,X3),X4)),'const.pair.,_2'(s('type.infer.exc'(X0,X1),'const.infer.Success_1'(s(X0,'const.option.option_CASE_3'(s('type.option.option'(X5),X6),s(X0,X7),s(fun(X5,X0),X8))))),s('type.pair.prod'('type.infer.exc'(X2,X3),X4),'const.infer.failwith_2'(s(X3,X9),s(X4,X10))))) = s('type.pair.prod'('type.infer.exc'(X0,X1),'type.pair.prod'('type.infer.exc'(X2,X3),X4)),'const.infer.st_ex_return_2'(s(X0,happ(s(fun(fun(X5,X0),X0),happ(s(fun(X0,fun(fun(X5,X0),X0)),happ(s(fun('type.option.option'(X5),fun(X0,fun(fun(X5,X0),X0))),'const.option.option_CASE_0'),s('type.option.option'(X5),X6))),s(X0,X7))),s(fun(X5,X0),X8))),s('type.pair.prod'('type.infer.exc'(X2,X3),X4),'const.infer.failwith_2'(s(X3,X9),s(X4,X10)))))) )),
  inference(forward_demodulation,[],[f19797,f204])).
fof(f19797,plain,(
  ( ! [X6,X4,X2,X0,X10,X8,X7,X5,X3,X1,X9] : (s('type.pair.prod'('type.infer.exc'(X0,X1),'type.pair.prod'('type.infer.exc'(X2,X3),X4)),'const.pair.,_2'(s('type.infer.exc'(X0,X1),'const.infer.Success_1'(s(X0,'const.option.option_CASE_3'(s('type.option.option'(X5),X6),s(X0,X7),s(fun(X5,X0),X8))))),s('type.pair.prod'('type.infer.exc'(X2,X3),X4),'const.infer.failwith_2'(s(X3,X9),s(X4,X10))))) = s('type.pair.prod'('type.infer.exc'(X0,X1),'type.pair.prod'('type.infer.exc'(X2,X3),X4)),'const.infer.st_ex_return_2'(s(X0,happ(s(fun(fun(X5,X0),X0),happ(s(fun(X0,fun(fun(X5,X0),X0)),happ(s(fun('type.option.option'(X5),fun(X0,fun(fun(X5,X0),X0))),'const.option.option_CASE_0'),s('type.option.option'(X5),X6))),s(X0,X7))),s(fun(X5,X0),X8))),s('type.pair.prod'('type.infer.exc'(X2,X3),X4),happ(s(fun(X4,'type.pair.prod'('type.infer.exc'(X2,X3),X4)),'const.infer.failwith_1'(s(X3,X9))),s(X4,X10)))))) )),
  inference(unit_resulting_resolution,[],[f204,f184,f212])).
fof(f20117,plain,(
  ( ! [X6,X4,X2,X0,X10,X8,X7,X5,X3,X1,X9] : (s('type.pair.prod'('type.infer.exc'(X0,X1),'type.pair.prod'('type.infer.exc'('type.one.one',X2),X3)),'const.infer.st_ex_return_2'(s(X0,'const.option.option_CASE_3'(s('type.option.option'(X4),X5),s(X0,X6),s(fun(X4,X0),X7))),s('type.pair.prod'('type.infer.exc'('type.one.one',X2),X3),'const.infer.guard_3'(s(bool,X8),s(X2,X9),s(X3,X10))))) = s('type.pair.prod'('type.infer.exc'(X0,X1),'type.pair.prod'('type.infer.exc'('type.one.one',X2),X3)),'const.pair.,_2'(s('type.infer.exc'(X0,X1),'const.infer.Success_1'(s(X0,'const.option.option_CASE_3'(s('type.option.option'(X4),X5),s(X0,X6),s(fun(X4,X0),X7))))),s('type.pair.prod'('type.infer.exc'('type.one.one',X2),X3),'const.infer.guard_3'(s(bool,X8),s(X2,X9),s(X3,X10)))))) )),
  inference(forward_demodulation,[],[f20116,f184])).
fof(f20116,plain,(
  ( ! [X6,X4,X2,X0,X10,X8,X7,X5,X3,X1,X9] : (s('type.pair.prod'('type.infer.exc'(X0,X1),'type.pair.prod'('type.infer.exc'('type.one.one',X2),X3)),'const.pair.,_2'(s('type.infer.exc'(X0,X1),'const.infer.Success_1'(s(X0,'const.option.option_CASE_3'(s('type.option.option'(X4),X5),s(X0,X6),s(fun(X4,X0),X7))))),s('type.pair.prod'('type.infer.exc'('type.one.one',X2),X3),'const.infer.guard_3'(s(bool,X8),s(X2,X9),s(X3,X10))))) = s('type.pair.prod'('type.infer.exc'(X0,X1),'type.pair.prod'('type.infer.exc'('type.one.one',X2),X3)),'const.infer.st_ex_return_2'(s(X0,happ(s(fun(fun(X4,X0),X0),happ(s(fun(X0,fun(fun(X4,X0),X0)),happ(s(fun('type.option.option'(X4),fun(X0,fun(fun(X4,X0),X0))),'const.option.option_CASE_0'),s('type.option.option'(X4),X5))),s(X0,X6))),s(fun(X4,X0),X7))),s('type.pair.prod'('type.infer.exc'('type.one.one',X2),X3),'const.infer.guard_3'(s(bool,X8),s(X2,X9),s(X3,X10)))))) )),
  inference(forward_demodulation,[],[f19798,f183])).
fof(f19798,plain,(
  ( ! [X6,X4,X2,X0,X10,X8,X7,X5,X3,X1,X9] : (s('type.pair.prod'('type.infer.exc'(X0,X1),'type.pair.prod'('type.infer.exc'('type.one.one',X2),X3)),'const.pair.,_2'(s('type.infer.exc'(X0,X1),'const.infer.Success_1'(s(X0,'const.option.option_CASE_3'(s('type.option.option'(X4),X5),s(X0,X6),s(fun(X4,X0),X7))))),s('type.pair.prod'('type.infer.exc'('type.one.one',X2),X3),'const.infer.guard_3'(s(bool,X8),s(X2,X9),s(X3,X10))))) = s('type.pair.prod'('type.infer.exc'(X0,X1),'type.pair.prod'('type.infer.exc'('type.one.one',X2),X3)),'const.infer.st_ex_return_2'(s(X0,happ(s(fun(fun(X4,X0),X0),happ(s(fun(X0,fun(fun(X4,X0),X0)),happ(s(fun('type.option.option'(X4),fun(X0,fun(fun(X4,X0),X0))),'const.option.option_CASE_0'),s('type.option.option'(X4),X5))),s(X0,X6))),s(fun(X4,X0),X7))),s('type.pair.prod'('type.infer.exc'('type.one.one',X2),X3),happ(s(fun(X3,'type.pair.prod'('type.infer.exc'('type.one.one',X2),X3)),'const.infer.guard_2'(s(bool,X8),s(X2,X9))),s(X3,X10)))))) )),
  inference(unit_resulting_resolution,[],[f183,f184,f212])).
fof(f17493,plain,(
  ( ! [X408,X405,X407,X403,X409,X404,X406] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X403),'type.infer.infer_st'(X404)),X407),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X403),'type.infer.infer_st'(X404))),'const.infer.read_1'(s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X403),'type.infer.infer_st'(X404)),'const.infer.n_fresh_uvar_2'(s('type.num.num',X405),s('type.infer.infer_st'(X404),X406))))) != s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X403),'type.infer.infer_st'(X404)),X407),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X403),'type.infer.infer_st'(X404))),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X403),'type.infer.infer_st'(X404)),X408),s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X403),'type.infer.infer_st'(X404)),X409))) | s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X403),'type.infer.infer_st'(X404)),X409) = s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X403),'type.infer.infer_st'(X404)),happ(s(fun('type.infer.infer_st'(X404),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X403),'type.infer.infer_st'(X404))),happ(s(fun('type.num.num',fun('type.infer.infer_st'(X404),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X403),'type.infer.infer_st'(X404)))),'const.infer.n_fresh_uvar_0'),s('type.num.num',X405))),s('type.infer.infer_st'(X404),X406)))) )),
  inference(superposition,[],[f1740,f181])).
fof(f17491,plain,(
  ( ! [X389,X391,X393,X395,X390,X392,X394] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X389),'type.infer.infer_st'(X390)),X393),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X389),'type.infer.infer_st'(X390))),'const.infer.read_1'(s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X389),'type.infer.infer_st'(X390)),X394))) != s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X389),'type.infer.infer_st'(X390)),X393),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X389),'type.infer.infer_st'(X390))),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X389),'type.infer.infer_st'(X390)),X395),s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X389),'type.infer.infer_st'(X390)),'const.infer.n_fresh_uvar_2'(s('type.num.num',X391),s('type.infer.infer_st'(X390),X392))))) | s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X389),'type.infer.infer_st'(X390)),X394) = s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X389),'type.infer.infer_st'(X390)),happ(s(fun('type.infer.infer_st'(X390),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X389),'type.infer.infer_st'(X390))),happ(s(fun('type.num.num',fun('type.infer.infer_st'(X390),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X389),'type.infer.infer_st'(X390)))),'const.infer.n_fresh_uvar_0'),s('type.num.num',X391))),s('type.infer.infer_st'(X390),X392)))) )),
  inference(superposition,[],[f1740,f181])).
fof(f17490,plain,(
  ( ! [X383,X385,X387,X382,X388,X384,X386] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X382),'type.infer.infer_st'(X383)),X386),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X382),'type.infer.infer_st'(X383))),'const.infer.read_1'(s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X382),'type.infer.infer_st'(X383)),'const.infer.n_fresh_uvar_2'(s('type.num.num',X384),s('type.infer.infer_st'(X383),X385))))) != s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X382),'type.infer.infer_st'(X383)),X386),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X382),'type.infer.infer_st'(X383))),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X382),'type.infer.infer_st'(X383)),X387),s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X382),'type.infer.infer_st'(X383)),X388))) | s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X382),'type.infer.infer_st'(X383)),X387) = s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X382),'type.infer.infer_st'(X383)),happ(s(fun('type.infer.infer_st'(X383),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X382),'type.infer.infer_st'(X383))),happ(s(fun('type.num.num',fun('type.infer.infer_st'(X383),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X382),'type.infer.infer_st'(X383)))),'const.infer.n_fresh_uvar_0'),s('type.num.num',X384))),s('type.infer.infer_st'(X383),X385)))) )),
  inference(superposition,[],[f1426,f181])).
fof(f17489,plain,(
  ( ! [X377,X379,X380,X376,X378,X375,X381] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X375),'type.infer.infer_st'(X376)),X379),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X375),'type.infer.infer_st'(X376))),'const.infer.read_1'(s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X375),'type.infer.infer_st'(X376)),X380))) != s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X375),'type.infer.infer_st'(X376)),X379),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X375),'type.infer.infer_st'(X376))),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X375),'type.infer.infer_st'(X376)),'const.infer.n_fresh_uvar_2'(s('type.num.num',X377),s('type.infer.infer_st'(X376),X378))),s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X375),'type.infer.infer_st'(X376)),X381))) | s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X375),'type.infer.infer_st'(X376)),X380) = s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X375),'type.infer.infer_st'(X376)),happ(s(fun('type.infer.infer_st'(X376),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X375),'type.infer.infer_st'(X376))),happ(s(fun('type.num.num',fun('type.infer.infer_st'(X376),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X375),'type.infer.infer_st'(X376)))),'const.infer.n_fresh_uvar_0'),s('type.num.num',X377))),s('type.infer.infer_st'(X376),X378)))) )),
  inference(superposition,[],[f1426,f181])).
fof(f17478,plain,(
  ( ! [X280,X282,X288,X290,X285,X287,X281,X283,X289,X284,X286] : (s('type.pair.prod'('type.infer.exc'(X284,'type.list.list'('type.string.char')),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X280),'type.infer.infer_st'(X281))),'const.infer.lookup_st_ex_4'(s(fun(X286,'type.list.list'('type.string.char')),X287),s(X286,X288),s('type.list.list'('type.pair.prod'(X286,X284)),X289),s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X280),'type.infer.infer_st'(X281)),X290))) != s('type.pair.prod'('type.infer.exc'(X284,'type.list.list'('type.string.char')),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X280),'type.infer.infer_st'(X281))),'const.pair.,_2'(s('type.infer.exc'(X284,'type.list.list'('type.string.char')),'const.infer.Success_1'(s(X284,X285))),s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X280),'type.infer.infer_st'(X281)),'const.infer.n_fresh_uvar_2'(s('type.num.num',X282),s('type.infer.infer_st'(X281),X283))))) | s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X280),'type.infer.infer_st'(X281)),X290) = s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X280),'type.infer.infer_st'(X281)),happ(s(fun('type.infer.infer_st'(X281),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X280),'type.infer.infer_st'(X281))),happ(s(fun('type.num.num',fun('type.infer.infer_st'(X281),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X280),'type.infer.infer_st'(X281)))),'const.infer.n_fresh_uvar_0'),s('type.num.num',X282))),s('type.infer.infer_st'(X281),X283)))) )),
  inference(superposition,[],[f217,f181])).
fof(f17476,plain,(
  ( ! [X261,X263,X259,X265,X267,X260,X262,X258,X268,X264,X266] : (s('type.pair.prod'('type.infer.exc'(X262,'type.list.list'('type.string.char')),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X258),'type.infer.infer_st'(X259))),'const.pair.,_2'(s('type.infer.exc'(X262,'type.list.list'('type.string.char')),'const.infer.Success_1'(s(X262,X263))),s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X258),'type.infer.infer_st'(X259)),X264))) != s('type.pair.prod'('type.infer.exc'(X262,'type.list.list'('type.string.char')),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X258),'type.infer.infer_st'(X259))),'const.infer.lookup_st_ex_4'(s(fun(X265,'type.list.list'('type.string.char')),X266),s(X265,X267),s('type.list.list'('type.pair.prod'(X265,X262)),X268),s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X258),'type.infer.infer_st'(X259)),'const.infer.n_fresh_uvar_2'(s('type.num.num',X260),s('type.infer.infer_st'(X259),X261))))) | s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X258),'type.infer.infer_st'(X259)),X264) = s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X258),'type.infer.infer_st'(X259)),happ(s(fun('type.infer.infer_st'(X259),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X258),'type.infer.infer_st'(X259))),happ(s(fun('type.num.num',fun('type.infer.infer_st'(X259),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X258),'type.infer.infer_st'(X259)))),'const.infer.n_fresh_uvar_0'),s('type.num.num',X260))),s('type.infer.infer_st'(X259),X261)))) )),
  inference(superposition,[],[f217,f181])).
fof(f17474,plain,(
  ( ! [X243,X241,X239,X237,X246,X244,X242,X240,X238,X236,X245] : (s('type.pair.prod'('type.infer.exc'(X240,'type.list.list'('type.string.char')),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X236),'type.infer.infer_st'(X237))),'const.infer.flookup_st_ex_4'(s(fun(X242,'type.list.list'('type.string.char')),X243),s(X242,X244),s('type.finite_map.fmap'(X242,X240),X245),s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X236),'type.infer.infer_st'(X237)),X246))) != s('type.pair.prod'('type.infer.exc'(X240,'type.list.list'('type.string.char')),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X236),'type.infer.infer_st'(X237))),'const.pair.,_2'(s('type.infer.exc'(X240,'type.list.list'('type.string.char')),'const.infer.Success_1'(s(X240,X241))),s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X236),'type.infer.infer_st'(X237)),'const.infer.n_fresh_uvar_2'(s('type.num.num',X238),s('type.infer.infer_st'(X237),X239))))) | s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X236),'type.infer.infer_st'(X237)),X246) = s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X236),'type.infer.infer_st'(X237)),happ(s(fun('type.infer.infer_st'(X237),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X236),'type.infer.infer_st'(X237))),happ(s(fun('type.num.num',fun('type.infer.infer_st'(X237),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X236),'type.infer.infer_st'(X237)))),'const.infer.n_fresh_uvar_0'),s('type.num.num',X238))),s('type.infer.infer_st'(X237),X239)))) )),
  inference(superposition,[],[f214,f181])).
fof(f17472,plain,(
  ( ! [X218,X216,X222,X220,X215,X219,X217,X223,X221,X224,X214] : (s('type.pair.prod'('type.infer.exc'(X218,'type.list.list'('type.string.char')),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X214),'type.infer.infer_st'(X215))),'const.pair.,_2'(s('type.infer.exc'(X218,'type.list.list'('type.string.char')),'const.infer.Success_1'(s(X218,X219))),s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X214),'type.infer.infer_st'(X215)),X220))) != s('type.pair.prod'('type.infer.exc'(X218,'type.list.list'('type.string.char')),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X214),'type.infer.infer_st'(X215))),'const.infer.flookup_st_ex_4'(s(fun(X221,'type.list.list'('type.string.char')),X222),s(X221,X223),s('type.finite_map.fmap'(X221,X218),X224),s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X214),'type.infer.infer_st'(X215)),'const.infer.n_fresh_uvar_2'(s('type.num.num',X216),s('type.infer.infer_st'(X215),X217))))) | s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X214),'type.infer.infer_st'(X215)),X220) = s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X214),'type.infer.infer_st'(X215)),happ(s(fun('type.infer.infer_st'(X215),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X214),'type.infer.infer_st'(X215))),happ(s(fun('type.num.num',fun('type.infer.infer_st'(X215),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X214),'type.infer.infer_st'(X215)))),'const.infer.n_fresh_uvar_0'),s('type.num.num',X216))),s('type.infer.infer_st'(X215),X217)))) )),
  inference(superposition,[],[f214,f181])).
fof(f17468,plain,(
  ( ! [X177,X182,X180,X178,X176,X184,X183,X181,X179] : (s('type.pair.prod'('type.infer.exc'(X180,X181),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X176),'type.infer.infer_st'(X177))),'const.infer.st_ex_return_2'(s(X180,X182),s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X176),'type.infer.infer_st'(X177)),X183))) != s('type.pair.prod'('type.infer.exc'(X180,X181),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X176),'type.infer.infer_st'(X177))),'const.pair.,_2'(s('type.infer.exc'(X180,X181),'const.infer.Success_1'(s(X180,X184))),s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X176),'type.infer.infer_st'(X177)),'const.infer.n_fresh_uvar_2'(s('type.num.num',X178),s('type.infer.infer_st'(X177),X179))))) | s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X176),'type.infer.infer_st'(X177)),X183) = s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X176),'type.infer.infer_st'(X177)),happ(s(fun('type.infer.infer_st'(X177),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X176),'type.infer.infer_st'(X177))),happ(s(fun('type.num.num',fun('type.infer.infer_st'(X177),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X176),'type.infer.infer_st'(X177)))),'const.infer.n_fresh_uvar_0'),s('type.num.num',X178))),s('type.infer.infer_st'(X177),X179)))) )),
  inference(superposition,[],[f211,f181])).
fof(f17467,plain,(
  ( ! [X167,X175,X173,X171,X169,X174,X172,X170,X168] : (s('type.pair.prod'('type.infer.exc'(X171,X172),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X167),'type.infer.infer_st'(X168))),'const.pair.,_2'(s('type.infer.exc'(X171,X172),'const.infer.Success_1'(s(X171,X174))),s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X167),'type.infer.infer_st'(X168)),X175))) != s('type.pair.prod'('type.infer.exc'(X171,X172),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X167),'type.infer.infer_st'(X168))),'const.infer.st_ex_return_2'(s(X171,X173),s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X167),'type.infer.infer_st'(X168)),'const.infer.n_fresh_uvar_2'(s('type.num.num',X169),s('type.infer.infer_st'(X168),X170))))) | s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X167),'type.infer.infer_st'(X168)),X175) = s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X167),'type.infer.infer_st'(X168)),happ(s(fun('type.infer.infer_st'(X168),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X167),'type.infer.infer_st'(X168))),happ(s(fun('type.num.num',fun('type.infer.infer_st'(X168),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X167),'type.infer.infer_st'(X168)))),'const.infer.n_fresh_uvar_0'),s('type.num.num',X169))),s('type.infer.infer_st'(X168),X170)))) )),
  inference(superposition,[],[f211,f181])).
fof(f17462,plain,(
  ( ! [X127,X125,X123,X130,X128,X126,X124,X122,X129] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X122),'type.infer.infer_st'(X123)),X126),X127),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X122),'type.infer.infer_st'(X123)),'const.infer.n_fresh_uvar_2'(s('type.num.num',X124),s('type.infer.infer_st'(X123),X125))),s(X127,X128))) != s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X122),'type.infer.infer_st'(X123)),X126),X127),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X122),'type.infer.infer_st'(X123)),X126),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X122),'type.infer.infer_st'(X123)),X129))),s(X127,X130))) | s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X122),'type.infer.infer_st'(X123)),X129) = s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X122),'type.infer.infer_st'(X123)),happ(s(fun('type.infer.infer_st'(X123),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X122),'type.infer.infer_st'(X123))),happ(s(fun('type.num.num',fun('type.infer.infer_st'(X123),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X122),'type.infer.infer_st'(X123)))),'const.infer.n_fresh_uvar_0'),s('type.num.num',X124))),s('type.infer.infer_st'(X123),X125)))) )),
  inference(superposition,[],[f210,f181])).
fof(f17461,plain,(
  ( ! [X121,X118,X116,X114,X120,X119,X117,X115,X113] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X113),'type.infer.infer_st'(X114)),X117),X118),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X113),'type.infer.infer_st'(X114)),X119),s(X118,X120))) != s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X113),'type.infer.infer_st'(X114)),X117),X118),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X113),'type.infer.infer_st'(X114)),X117),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X113),'type.infer.infer_st'(X114)),'const.infer.n_fresh_uvar_2'(s('type.num.num',X115),s('type.infer.infer_st'(X114),X116))))),s(X118,X121))) | s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X113),'type.infer.infer_st'(X114)),X119) = s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X113),'type.infer.infer_st'(X114)),happ(s(fun('type.infer.infer_st'(X114),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X113),'type.infer.infer_st'(X114))),happ(s(fun('type.num.num',fun('type.infer.infer_st'(X114),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X113),'type.infer.infer_st'(X114)))),'const.infer.n_fresh_uvar_0'),s('type.num.num',X115))),s('type.infer.infer_st'(X114),X116)))) )),
  inference(superposition,[],[f210,f181])).
fof(f17455,plain,(
  ( ! [X70,X68,X76,X74,X72,X71,X69,X75,X73] : (s('type.pair.prod'('type.infer.exc'('type.one.one',X72),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X68),'type.infer.infer_st'(X69))),'const.infer.guard_3'(s(bool,X73),s(X72,X74),s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X68),'type.infer.infer_st'(X69)),X75))) != s('type.pair.prod'('type.infer.exc'('type.one.one',X72),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X68),'type.infer.infer_st'(X69))),'const.pair.,_2'(s('type.infer.exc'('type.one.one',X72),'const.infer.Success_1'(s('type.one.one',X76))),s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X68),'type.infer.infer_st'(X69)),'const.infer.n_fresh_uvar_2'(s('type.num.num',X70),s('type.infer.infer_st'(X69),X71))))) | s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X68),'type.infer.infer_st'(X69)),X75) = s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X68),'type.infer.infer_st'(X69)),happ(s(fun('type.infer.infer_st'(X69),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X68),'type.infer.infer_st'(X69))),happ(s(fun('type.num.num',fun('type.infer.infer_st'(X69),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X68),'type.infer.infer_st'(X69)))),'const.infer.n_fresh_uvar_0'),s('type.num.num',X70))),s('type.infer.infer_st'(X69),X71)))) )),
  inference(superposition,[],[f197,f181])).
fof(f17454,plain,(
  ( ! [X61,X59,X66,X64,X62,X60,X67,X65,X63] : (s('type.pair.prod'('type.infer.exc'('type.one.one',X63),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X59),'type.infer.infer_st'(X60))),'const.pair.,_2'(s('type.infer.exc'('type.one.one',X63),'const.infer.Success_1'(s('type.one.one',X66))),s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X59),'type.infer.infer_st'(X60)),X67))) != s('type.pair.prod'('type.infer.exc'('type.one.one',X63),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X59),'type.infer.infer_st'(X60))),'const.infer.guard_3'(s(bool,X64),s(X63,X65),s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X59),'type.infer.infer_st'(X60)),'const.infer.n_fresh_uvar_2'(s('type.num.num',X61),s('type.infer.infer_st'(X60),X62))))) | s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X59),'type.infer.infer_st'(X60)),X67) = s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X59),'type.infer.infer_st'(X60)),happ(s(fun('type.infer.infer_st'(X60),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X59),'type.infer.infer_st'(X60))),happ(s(fun('type.num.num',fun('type.infer.infer_st'(X60),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X59),'type.infer.infer_st'(X60)))),'const.infer.n_fresh_uvar_0'),s('type.num.num',X61))),s('type.infer.infer_st'(X60),X62)))) )),
  inference(superposition,[],[f197,f181])).
fof(f17448,plain,(
  ( ! [X14,X19,X17,X15,X18,X16] : (s(X18,happ(s(fun('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X14),'type.infer.infer_st'(X15)),X18),X19),s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X14),'type.infer.infer_st'(X15)),'const.infer.n_fresh_uvar_2'(s('type.num.num',X16),s('type.infer.infer_st'(X15),X17))))) = s(X18,happ(s(fun('type.infer.infer_st'(X15),X18),'_dst_x0x1_2'(s(fun('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X14),'type.infer.infer_st'(X15)),X18),X19),s(fun('type.infer.infer_st'(X15),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X14),'type.infer.infer_st'(X15))),happ(s(fun('type.num.num',fun('type.infer.infer_st'(X15),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X14),'type.infer.infer_st'(X15)))),'const.infer.n_fresh_uvar_0'),s('type.num.num',X16))))),s('type.infer.infer_st'(X15),X17)))) )),
  inference(superposition,[],[f206,f181])).
fof(f17447,plain,(
  ( ! [X6,X12,X10,X8,X7,X13,X11,X9] : (s(X10,happ(s(fun(X11,X10),happ(s(fun('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X6),'type.infer.infer_st'(X7)),fun(X11,X10)),X12),s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X6),'type.infer.infer_st'(X7)),'const.infer.n_fresh_uvar_2'(s('type.num.num',X8),s('type.infer.infer_st'(X7),X9))))),s(X11,X13))) = s(X10,happ(s(fun('type.infer.infer_st'(X7),X10),'_dst_x0x1x0_3'(s(fun('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X6),'type.infer.infer_st'(X7)),fun(X11,X10)),X12),s(fun('type.infer.infer_st'(X7),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X6),'type.infer.infer_st'(X7))),happ(s(fun('type.num.num',fun('type.infer.infer_st'(X7),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X6),'type.infer.infer_st'(X7)))),'const.infer.n_fresh_uvar_0'),s('type.num.num',X8))),s(X11,X13))),s('type.infer.infer_st'(X7),X9)))) )),
  inference(superposition,[],[f221,f181])).
fof(f17445,plain,(
  ( ! [X6,X4,X8,X7,X5,X9] : (s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X4),'type.infer.infer_st'(X5)),'const.infer.n_fresh_uvar_2'(s('type.num.num',happ(s(fun(X6,'type.num.num'),X7),s(X6,X8))),s('type.infer.infer_st'(X5),X9))) = s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X4),'type.infer.infer_st'(X5)),happ(s(fun(X6,'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X4),'type.infer.infer_st'(X5))),'_dst_x0x1x0_3'(s(fun('type.num.num',fun('type.infer.infer_st'(X5),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X4),'type.infer.infer_st'(X5)))),'const.infer.n_fresh_uvar_0'),s(fun(X6,'type.num.num'),X7),s('type.infer.infer_st'(X5),X9))),s(X6,X8)))) )),
  inference(superposition,[],[f181,f221])).
fof(f17717,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.one.one',X0),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X1),'type.infer.infer_st'(X2))),'const.infer.guard_3'(s(bool,'T_0'),s(X0,X6),s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X1),'type.infer.infer_st'(X2)),'const.infer.n_fresh_uvar_2'(s('type.num.num',X4),s('type.infer.infer_st'(X2),X5))))) = s('type.pair.prod'('type.infer.exc'('type.one.one',X0),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X1),'type.infer.infer_st'(X2))),'const.pair.,_2'(s('type.infer.exc'('type.one.one',X0),'const.infer.Success_1'(s('type.one.one',X3))),s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X1),'type.infer.infer_st'(X2)),'const.infer.n_fresh_uvar_2'(s('type.num.num',X4),s('type.infer.infer_st'(X2),X5)))))) )),
  inference(forward_demodulation,[],[f17287,f181])).
fof(f17287,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.one.one',X0),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X1),'type.infer.infer_st'(X2))),'const.pair.,_2'(s('type.infer.exc'('type.one.one',X0),'const.infer.Success_1'(s('type.one.one',X3))),s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X1),'type.infer.infer_st'(X2)),'const.infer.n_fresh_uvar_2'(s('type.num.num',X4),s('type.infer.infer_st'(X2),X5))))) = s('type.pair.prod'('type.infer.exc'('type.one.one',X0),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X1),'type.infer.infer_st'(X2))),'const.infer.guard_3'(s(bool,'T_0'),s(X0,X6),s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X1),'type.infer.infer_st'(X2)),happ(s(fun('type.infer.infer_st'(X2),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X1),'type.infer.infer_st'(X2))),happ(s(fun('type.num.num',fun('type.infer.infer_st'(X2),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X1),'type.infer.infer_st'(X2)))),'const.infer.n_fresh_uvar_0'),s('type.num.num',X4))),s('type.infer.infer_st'(X2),X5)))))) )),
  inference(unit_resulting_resolution,[],[f163,f181,f252])).
fof(f17714,plain,(
  ( ! [X6,X4,X2,X0,X10,X8,X7,X5,X3,X1,X9] : (s('type.pair.prod'('type.infer.exc'(X0,X1),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X2),'type.infer.infer_st'(X3))),'const.infer.st_ex_return_2'(s(X0,happ(s(fun(X5,X0),X6),s(X5,happ(s(fun(X4,X5),X7),s(X4,X8))))),s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X2),'type.infer.infer_st'(X3)),'const.infer.n_fresh_uvar_2'(s('type.num.num',X9),s('type.infer.infer_st'(X3),X10))))) = s('type.pair.prod'('type.infer.exc'(X0,X1),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X2),'type.infer.infer_st'(X3))),'const.pair.,_2'(s('type.infer.exc'(X0,X1),'const.infer.Success_1'(s(X0,happ(s(fun(X4,X0),'_dst_x0x1_2'(s(fun(X5,X0),X6),s(fun(X4,X5),X7))),s(X4,X8))))),s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X2),'type.infer.infer_st'(X3)),'const.infer.n_fresh_uvar_2'(s('type.num.num',X9),s('type.infer.infer_st'(X3),X10)))))) )),
  inference(forward_demodulation,[],[f17289,f181])).
fof(f17289,plain,(
  ( ! [X6,X4,X2,X0,X10,X8,X7,X5,X3,X1,X9] : (s('type.pair.prod'('type.infer.exc'(X0,X1),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X2),'type.infer.infer_st'(X3))),'const.pair.,_2'(s('type.infer.exc'(X0,X1),'const.infer.Success_1'(s(X0,happ(s(fun(X4,X0),'_dst_x0x1_2'(s(fun(X5,X0),X6),s(fun(X4,X5),X7))),s(X4,X8))))),s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X2),'type.infer.infer_st'(X3)),'const.infer.n_fresh_uvar_2'(s('type.num.num',X9),s('type.infer.infer_st'(X3),X10))))) = s('type.pair.prod'('type.infer.exc'(X0,X1),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X2),'type.infer.infer_st'(X3))),'const.infer.st_ex_return_2'(s(X0,happ(s(fun(X5,X0),X6),s(X5,happ(s(fun(X4,X5),X7),s(X4,X8))))),s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X2),'type.infer.infer_st'(X3)),happ(s(fun('type.infer.infer_st'(X3),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X2),'type.infer.infer_st'(X3))),happ(s(fun('type.num.num',fun('type.infer.infer_st'(X3),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X2),'type.infer.infer_st'(X3)))),'const.infer.n_fresh_uvar_0'),s('type.num.num',X9))),s('type.infer.infer_st'(X3),X10)))))) )),
  inference(unit_resulting_resolution,[],[f206,f181,f212])).
fof(f17713,plain,(
  ( ! [X6,X4,X2,X0,X12,X10,X8,X7,X5,X3,X1,X11,X9] : (s('type.pair.prod'('type.infer.exc'(X0,X1),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X2),'type.infer.infer_st'(X3))),'const.infer.st_ex_return_2'(s(X0,happ(s(fun(X7,X0),'_dst_x0x1x0_3'(s(fun(X5,fun(X4,X0)),X6),s(fun(X7,X5),X8),s(X4,X10))),s(X7,X9))),s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X2),'type.infer.infer_st'(X3)),'const.infer.n_fresh_uvar_2'(s('type.num.num',X11),s('type.infer.infer_st'(X3),X12))))) = s('type.pair.prod'('type.infer.exc'(X0,X1),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X2),'type.infer.infer_st'(X3))),'const.pair.,_2'(s('type.infer.exc'(X0,X1),'const.infer.Success_1'(s(X0,happ(s(fun(X4,X0),happ(s(fun(X5,fun(X4,X0)),X6),s(X5,happ(s(fun(X7,X5),X8),s(X7,X9))))),s(X4,X10))))),s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X2),'type.infer.infer_st'(X3)),'const.infer.n_fresh_uvar_2'(s('type.num.num',X11),s('type.infer.infer_st'(X3),X12)))))) )),
  inference(forward_demodulation,[],[f17290,f181])).
fof(f17290,plain,(
  ( ! [X6,X4,X2,X0,X12,X10,X8,X7,X5,X3,X1,X11,X9] : (s('type.pair.prod'('type.infer.exc'(X0,X1),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X2),'type.infer.infer_st'(X3))),'const.pair.,_2'(s('type.infer.exc'(X0,X1),'const.infer.Success_1'(s(X0,happ(s(fun(X4,X0),happ(s(fun(X5,fun(X4,X0)),X6),s(X5,happ(s(fun(X7,X5),X8),s(X7,X9))))),s(X4,X10))))),s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X2),'type.infer.infer_st'(X3)),'const.infer.n_fresh_uvar_2'(s('type.num.num',X11),s('type.infer.infer_st'(X3),X12))))) = s('type.pair.prod'('type.infer.exc'(X0,X1),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X2),'type.infer.infer_st'(X3))),'const.infer.st_ex_return_2'(s(X0,happ(s(fun(X7,X0),'_dst_x0x1x0_3'(s(fun(X5,fun(X4,X0)),X6),s(fun(X7,X5),X8),s(X4,X10))),s(X7,X9))),s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X2),'type.infer.infer_st'(X3)),happ(s(fun('type.infer.infer_st'(X3),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X2),'type.infer.infer_st'(X3))),happ(s(fun('type.num.num',fun('type.infer.infer_st'(X3),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X2),'type.infer.infer_st'(X3)))),'const.infer.n_fresh_uvar_0'),s('type.num.num',X11))),s('type.infer.infer_st'(X3),X12)))))) )),
  inference(unit_resulting_resolution,[],[f221,f181,f212])).
fof(f17662,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'(X0,X1),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X2),'type.infer.infer_st'(X3))),'const.infer.st_ex_return_2'(s(X0,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(X0),X4))),s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X2),'type.infer.infer_st'(X3)),'const.infer.n_fresh_uvar_2'(s('type.num.num',X5),s('type.infer.infer_st'(X3),X6))))) = s('type.pair.prod'('type.infer.exc'(X0,X1),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X2),'type.infer.infer_st'(X3))),'const.pair.,_2'(s('type.infer.exc'(X0,X1),'const.infer.Success_1'(s(X0,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(X0),X4))))),s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X2),'type.infer.infer_st'(X3)),'const.infer.n_fresh_uvar_2'(s('type.num.num',X5),s('type.infer.infer_st'(X3),X6)))))) )),
  inference(forward_demodulation,[],[f17661,f168])).
fof(f17661,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'(X0,X1),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X2),'type.infer.infer_st'(X3))),'const.pair.,_2'(s('type.infer.exc'(X0,X1),'const.infer.Success_1'(s(X0,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(X0),X4))))),s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X2),'type.infer.infer_st'(X3)),'const.infer.n_fresh_uvar_2'(s('type.num.num',X5),s('type.infer.infer_st'(X3),X6))))) = s('type.pair.prod'('type.infer.exc'(X0,X1),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X2),'type.infer.infer_st'(X3))),'const.infer.st_ex_return_2'(s(X0,happ(s(fun('type.infer.infer_st'(X0),X0),'const.infer.infer_st_subst_0'),s('type.infer.infer_st'(X0),X4))),s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X2),'type.infer.infer_st'(X3)),'const.infer.n_fresh_uvar_2'(s('type.num.num',X5),s('type.infer.infer_st'(X3),X6)))))) )),
  inference(forward_demodulation,[],[f17324,f181])).
fof(f17324,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'(X0,X1),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X2),'type.infer.infer_st'(X3))),'const.pair.,_2'(s('type.infer.exc'(X0,X1),'const.infer.Success_1'(s(X0,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(X0),X4))))),s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X2),'type.infer.infer_st'(X3)),'const.infer.n_fresh_uvar_2'(s('type.num.num',X5),s('type.infer.infer_st'(X3),X6))))) = s('type.pair.prod'('type.infer.exc'(X0,X1),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X2),'type.infer.infer_st'(X3))),'const.infer.st_ex_return_2'(s(X0,happ(s(fun('type.infer.infer_st'(X0),X0),'const.infer.infer_st_subst_0'),s('type.infer.infer_st'(X0),X4))),s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X2),'type.infer.infer_st'(X3)),happ(s(fun('type.infer.infer_st'(X3),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X2),'type.infer.infer_st'(X3))),happ(s(fun('type.num.num',fun('type.infer.infer_st'(X3),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X2),'type.infer.infer_st'(X3)))),'const.infer.n_fresh_uvar_0'),s('type.num.num',X5))),s('type.infer.infer_st'(X3),X6)))))) )),
  inference(unit_resulting_resolution,[],[f168,f181,f212])).
fof(f17660,plain,(
  ( ! [X6,X4,X2,X0,X10,X8,X7,X5,X3,X1,X9] : (s('type.pair.prod'('type.infer.exc'(X0,X1),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X2),'type.infer.infer_st'(X3))),'const.infer.st_ex_return_2'(s(X0,happ(s(fun(X6,X0),'_dst_x0x1_2'(s(fun(X4,X0),X5),s(fun(X6,X4),X7))),s(X6,X8))),s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X2),'type.infer.infer_st'(X3)),'const.infer.n_fresh_uvar_2'(s('type.num.num',X9),s('type.infer.infer_st'(X3),X10))))) = s('type.pair.prod'('type.infer.exc'(X0,X1),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X2),'type.infer.infer_st'(X3))),'const.pair.,_2'(s('type.infer.exc'(X0,X1),'const.infer.Success_1'(s(X0,happ(s(fun(X4,X0),X5),s(X4,happ(s(fun(X6,X4),X7),s(X6,X8))))))),s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X2),'type.infer.infer_st'(X3)),'const.infer.n_fresh_uvar_2'(s('type.num.num',X9),s('type.infer.infer_st'(X3),X10)))))) )),
  inference(forward_demodulation,[],[f17325,f181])).
fof(f17325,plain,(
  ( ! [X6,X4,X2,X0,X10,X8,X7,X5,X3,X1,X9] : (s('type.pair.prod'('type.infer.exc'(X0,X1),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X2),'type.infer.infer_st'(X3))),'const.pair.,_2'(s('type.infer.exc'(X0,X1),'const.infer.Success_1'(s(X0,happ(s(fun(X4,X0),X5),s(X4,happ(s(fun(X6,X4),X7),s(X6,X8))))))),s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X2),'type.infer.infer_st'(X3)),'const.infer.n_fresh_uvar_2'(s('type.num.num',X9),s('type.infer.infer_st'(X3),X10))))) = s('type.pair.prod'('type.infer.exc'(X0,X1),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X2),'type.infer.infer_st'(X3))),'const.infer.st_ex_return_2'(s(X0,happ(s(fun(X6,X0),'_dst_x0x1_2'(s(fun(X4,X0),X5),s(fun(X6,X4),X7))),s(X6,X8))),s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X2),'type.infer.infer_st'(X3)),happ(s(fun('type.infer.infer_st'(X3),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X2),'type.infer.infer_st'(X3))),happ(s(fun('type.num.num',fun('type.infer.infer_st'(X3),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X2),'type.infer.infer_st'(X3)))),'const.infer.n_fresh_uvar_0'),s('type.num.num',X9))),s('type.infer.infer_st'(X3),X10)))))) )),
  inference(unit_resulting_resolution,[],[f206,f181,f212])).
fof(f17659,plain,(
  ( ! [X6,X4,X2,X0,X12,X10,X8,X7,X5,X3,X1,X11,X9] : (s('type.pair.prod'('type.infer.exc'(X0,X1),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X2),'type.infer.infer_st'(X3))),'const.infer.st_ex_return_2'(s(X0,happ(s(fun(X6,X0),happ(s(fun(X5,fun(X6,X0)),X7),s(X5,happ(s(fun(X4,X5),X8),s(X4,X10))))),s(X6,X9))),s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X2),'type.infer.infer_st'(X3)),'const.infer.n_fresh_uvar_2'(s('type.num.num',X11),s('type.infer.infer_st'(X3),X12))))) = s('type.pair.prod'('type.infer.exc'(X0,X1),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X2),'type.infer.infer_st'(X3))),'const.pair.,_2'(s('type.infer.exc'(X0,X1),'const.infer.Success_1'(s(X0,happ(s(fun(X4,X0),'_dst_x0x1x0_3'(s(fun(X5,fun(X6,X0)),X7),s(fun(X4,X5),X8),s(X6,X9))),s(X4,X10))))),s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X2),'type.infer.infer_st'(X3)),'const.infer.n_fresh_uvar_2'(s('type.num.num',X11),s('type.infer.infer_st'(X3),X12)))))) )),
  inference(forward_demodulation,[],[f17326,f181])).
fof(f17326,plain,(
  ( ! [X6,X4,X2,X0,X12,X10,X8,X7,X5,X3,X1,X11,X9] : (s('type.pair.prod'('type.infer.exc'(X0,X1),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X2),'type.infer.infer_st'(X3))),'const.pair.,_2'(s('type.infer.exc'(X0,X1),'const.infer.Success_1'(s(X0,happ(s(fun(X4,X0),'_dst_x0x1x0_3'(s(fun(X5,fun(X6,X0)),X7),s(fun(X4,X5),X8),s(X6,X9))),s(X4,X10))))),s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X2),'type.infer.infer_st'(X3)),'const.infer.n_fresh_uvar_2'(s('type.num.num',X11),s('type.infer.infer_st'(X3),X12))))) = s('type.pair.prod'('type.infer.exc'(X0,X1),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X2),'type.infer.infer_st'(X3))),'const.infer.st_ex_return_2'(s(X0,happ(s(fun(X6,X0),happ(s(fun(X5,fun(X6,X0)),X7),s(X5,happ(s(fun(X4,X5),X8),s(X4,X10))))),s(X6,X9))),s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X2),'type.infer.infer_st'(X3)),happ(s(fun('type.infer.infer_st'(X3),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X2),'type.infer.infer_st'(X3))),happ(s(fun('type.num.num',fun('type.infer.infer_st'(X3),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X2),'type.infer.infer_st'(X3)))),'const.infer.n_fresh_uvar_0'),s('type.num.num',X11))),s('type.infer.infer_st'(X3),X12)))))) )),
  inference(unit_resulting_resolution,[],[f221,f181,f212])).
fof(f17654,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'(fun(X0,'type.one.one'),X1),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X2),'type.infer.infer_st'(X3))),'const.infer.st_ex_return_2'(s(fun(X0,'type.one.one'),X7),s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X2),'type.infer.infer_st'(X3)),'const.infer.n_fresh_uvar_2'(s('type.num.num',X5),s('type.infer.infer_st'(X3),X6))))) = s('type.pair.prod'('type.infer.exc'(fun(X0,'type.one.one'),X1),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X2),'type.infer.infer_st'(X3))),'const.pair.,_2'(s('type.infer.exc'(fun(X0,'type.one.one'),X1),'const.infer.Success_1'(s(fun(X0,'type.one.one'),X4))),s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X2),'type.infer.infer_st'(X3)),'const.infer.n_fresh_uvar_2'(s('type.num.num',X5),s('type.infer.infer_st'(X3),X6)))))) )),
  inference(forward_demodulation,[],[f17329,f181])).
fof(f17329,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'(fun(X0,'type.one.one'),X1),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X2),'type.infer.infer_st'(X3))),'const.pair.,_2'(s('type.infer.exc'(fun(X0,'type.one.one'),X1),'const.infer.Success_1'(s(fun(X0,'type.one.one'),X4))),s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X2),'type.infer.infer_st'(X3)),'const.infer.n_fresh_uvar_2'(s('type.num.num',X5),s('type.infer.infer_st'(X3),X6))))) = s('type.pair.prod'('type.infer.exc'(fun(X0,'type.one.one'),X1),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X2),'type.infer.infer_st'(X3))),'const.infer.st_ex_return_2'(s(fun(X0,'type.one.one'),X7),s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X2),'type.infer.infer_st'(X3)),happ(s(fun('type.infer.infer_st'(X3),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X2),'type.infer.infer_st'(X3))),happ(s(fun('type.num.num',fun('type.infer.infer_st'(X3),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X2),'type.infer.infer_st'(X3)))),'const.infer.n_fresh_uvar_0'),s('type.num.num',X5))),s('type.infer.infer_st'(X3),X6)))))) )),
  inference(unit_resulting_resolution,[],[f605,f181,f212])).
fof(f17652,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,'type.one.one')),X2),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X3),'type.infer.infer_st'(X4))),'const.infer.st_ex_return_2'(s(fun(X0,fun(X1,'type.one.one')),X8),s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X3),'type.infer.infer_st'(X4)),'const.infer.n_fresh_uvar_2'(s('type.num.num',X6),s('type.infer.infer_st'(X4),X7))))) = s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,'type.one.one')),X2),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X3),'type.infer.infer_st'(X4))),'const.pair.,_2'(s('type.infer.exc'(fun(X0,fun(X1,'type.one.one')),X2),'const.infer.Success_1'(s(fun(X0,fun(X1,'type.one.one')),X5))),s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X3),'type.infer.infer_st'(X4)),'const.infer.n_fresh_uvar_2'(s('type.num.num',X6),s('type.infer.infer_st'(X4),X7)))))) )),
  inference(forward_demodulation,[],[f17331,f181])).
fof(f17331,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,'type.one.one')),X2),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X3),'type.infer.infer_st'(X4))),'const.pair.,_2'(s('type.infer.exc'(fun(X0,fun(X1,'type.one.one')),X2),'const.infer.Success_1'(s(fun(X0,fun(X1,'type.one.one')),X5))),s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X3),'type.infer.infer_st'(X4)),'const.infer.n_fresh_uvar_2'(s('type.num.num',X6),s('type.infer.infer_st'(X4),X7))))) = s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,'type.one.one')),X2),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X3),'type.infer.infer_st'(X4))),'const.infer.st_ex_return_2'(s(fun(X0,fun(X1,'type.one.one')),X8),s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X3),'type.infer.infer_st'(X4)),happ(s(fun('type.infer.infer_st'(X4),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X3),'type.infer.infer_st'(X4))),happ(s(fun('type.num.num',fun('type.infer.infer_st'(X4),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X3),'type.infer.infer_st'(X4)))),'const.infer.n_fresh_uvar_0'),s('type.num.num',X6))),s('type.infer.infer_st'(X4),X7)))))) )),
  inference(unit_resulting_resolution,[],[f724,f181,f212])).
fof(f17651,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1,X9] : (s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,fun(X2,'type.one.one'))),X3),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X4),'type.infer.infer_st'(X5))),'const.infer.st_ex_return_2'(s(fun(X0,fun(X1,fun(X2,'type.one.one'))),X9),s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X4),'type.infer.infer_st'(X5)),'const.infer.n_fresh_uvar_2'(s('type.num.num',X7),s('type.infer.infer_st'(X5),X8))))) = s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,fun(X2,'type.one.one'))),X3),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X4),'type.infer.infer_st'(X5))),'const.pair.,_2'(s('type.infer.exc'(fun(X0,fun(X1,fun(X2,'type.one.one'))),X3),'const.infer.Success_1'(s(fun(X0,fun(X1,fun(X2,'type.one.one'))),X6))),s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X4),'type.infer.infer_st'(X5)),'const.infer.n_fresh_uvar_2'(s('type.num.num',X7),s('type.infer.infer_st'(X5),X8)))))) )),
  inference(forward_demodulation,[],[f17332,f181])).
fof(f17332,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1,X9] : (s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,fun(X2,'type.one.one'))),X3),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X4),'type.infer.infer_st'(X5))),'const.pair.,_2'(s('type.infer.exc'(fun(X0,fun(X1,fun(X2,'type.one.one'))),X3),'const.infer.Success_1'(s(fun(X0,fun(X1,fun(X2,'type.one.one'))),X6))),s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X4),'type.infer.infer_st'(X5)),'const.infer.n_fresh_uvar_2'(s('type.num.num',X7),s('type.infer.infer_st'(X5),X8))))) = s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,fun(X2,'type.one.one'))),X3),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X4),'type.infer.infer_st'(X5))),'const.infer.st_ex_return_2'(s(fun(X0,fun(X1,fun(X2,'type.one.one'))),X9),s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X4),'type.infer.infer_st'(X5)),happ(s(fun('type.infer.infer_st'(X5),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X4),'type.infer.infer_st'(X5))),happ(s(fun('type.num.num',fun('type.infer.infer_st'(X5),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X4),'type.infer.infer_st'(X5)))),'const.infer.n_fresh_uvar_0'),s('type.num.num',X7))),s('type.infer.infer_st'(X5),X8)))))) )),
  inference(unit_resulting_resolution,[],[f752,f181,f212])).
fof(f17650,plain,(
  ( ! [X6,X4,X2,X0,X10,X8,X7,X5,X3,X1,X9] : (s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,fun(X2,fun(X3,'type.one.one')))),X4),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X5),'type.infer.infer_st'(X6))),'const.infer.st_ex_return_2'(s(fun(X0,fun(X1,fun(X2,fun(X3,'type.one.one')))),X10),s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X5),'type.infer.infer_st'(X6)),'const.infer.n_fresh_uvar_2'(s('type.num.num',X8),s('type.infer.infer_st'(X6),X9))))) = s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,fun(X2,fun(X3,'type.one.one')))),X4),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X5),'type.infer.infer_st'(X6))),'const.pair.,_2'(s('type.infer.exc'(fun(X0,fun(X1,fun(X2,fun(X3,'type.one.one')))),X4),'const.infer.Success_1'(s(fun(X0,fun(X1,fun(X2,fun(X3,'type.one.one')))),X7))),s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X5),'type.infer.infer_st'(X6)),'const.infer.n_fresh_uvar_2'(s('type.num.num',X8),s('type.infer.infer_st'(X6),X9)))))) )),
  inference(forward_demodulation,[],[f17333,f181])).
fof(f17333,plain,(
  ( ! [X6,X4,X2,X0,X10,X8,X7,X5,X3,X1,X9] : (s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,fun(X2,fun(X3,'type.one.one')))),X4),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X5),'type.infer.infer_st'(X6))),'const.pair.,_2'(s('type.infer.exc'(fun(X0,fun(X1,fun(X2,fun(X3,'type.one.one')))),X4),'const.infer.Success_1'(s(fun(X0,fun(X1,fun(X2,fun(X3,'type.one.one')))),X7))),s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X5),'type.infer.infer_st'(X6)),'const.infer.n_fresh_uvar_2'(s('type.num.num',X8),s('type.infer.infer_st'(X6),X9))))) = s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,fun(X2,fun(X3,'type.one.one')))),X4),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X5),'type.infer.infer_st'(X6))),'const.infer.st_ex_return_2'(s(fun(X0,fun(X1,fun(X2,fun(X3,'type.one.one')))),X10),s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X5),'type.infer.infer_st'(X6)),happ(s(fun('type.infer.infer_st'(X6),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X5),'type.infer.infer_st'(X6))),happ(s(fun('type.num.num',fun('type.infer.infer_st'(X6),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X5),'type.infer.infer_st'(X6)))),'const.infer.n_fresh_uvar_0'),s('type.num.num',X8))),s('type.infer.infer_st'(X6),X9)))))) )),
  inference(unit_resulting_resolution,[],[f787,f181,f212])).
fof(f17649,plain,(
  ( ! [X6,X4,X2,X0,X10,X8,X7,X5,X3,X1,X11,X9] : (s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,fun(X2,fun(X3,fun(X4,'type.one.one'))))),X5),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X6),'type.infer.infer_st'(X7))),'const.infer.st_ex_return_2'(s(fun(X0,fun(X1,fun(X2,fun(X3,fun(X4,'type.one.one'))))),X11),s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X6),'type.infer.infer_st'(X7)),'const.infer.n_fresh_uvar_2'(s('type.num.num',X9),s('type.infer.infer_st'(X7),X10))))) = s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,fun(X2,fun(X3,fun(X4,'type.one.one'))))),X5),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X6),'type.infer.infer_st'(X7))),'const.pair.,_2'(s('type.infer.exc'(fun(X0,fun(X1,fun(X2,fun(X3,fun(X4,'type.one.one'))))),X5),'const.infer.Success_1'(s(fun(X0,fun(X1,fun(X2,fun(X3,fun(X4,'type.one.one'))))),X8))),s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X6),'type.infer.infer_st'(X7)),'const.infer.n_fresh_uvar_2'(s('type.num.num',X9),s('type.infer.infer_st'(X7),X10)))))) )),
  inference(forward_demodulation,[],[f17334,f181])).
fof(f17334,plain,(
  ( ! [X6,X4,X2,X0,X10,X8,X7,X5,X3,X1,X11,X9] : (s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,fun(X2,fun(X3,fun(X4,'type.one.one'))))),X5),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X6),'type.infer.infer_st'(X7))),'const.pair.,_2'(s('type.infer.exc'(fun(X0,fun(X1,fun(X2,fun(X3,fun(X4,'type.one.one'))))),X5),'const.infer.Success_1'(s(fun(X0,fun(X1,fun(X2,fun(X3,fun(X4,'type.one.one'))))),X8))),s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X6),'type.infer.infer_st'(X7)),'const.infer.n_fresh_uvar_2'(s('type.num.num',X9),s('type.infer.infer_st'(X7),X10))))) = s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,fun(X2,fun(X3,fun(X4,'type.one.one'))))),X5),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X6),'type.infer.infer_st'(X7))),'const.infer.st_ex_return_2'(s(fun(X0,fun(X1,fun(X2,fun(X3,fun(X4,'type.one.one'))))),X11),s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X6),'type.infer.infer_st'(X7)),happ(s(fun('type.infer.infer_st'(X7),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X6),'type.infer.infer_st'(X7))),happ(s(fun('type.num.num',fun('type.infer.infer_st'(X7),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X6),'type.infer.infer_st'(X7)))),'const.infer.n_fresh_uvar_0'),s('type.num.num',X9))),s('type.infer.infer_st'(X7),X10)))))) )),
  inference(unit_resulting_resolution,[],[f815,f181,f212])).
fof(f17645,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.one.one',X0),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X1),'type.infer.infer_st'(X2))),'const.infer.st_ex_return_2'(s('type.one.one',X6),s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X1),'type.infer.infer_st'(X2)),'const.infer.n_fresh_uvar_2'(s('type.num.num',X4),s('type.infer.infer_st'(X2),X5))))) = s('type.pair.prod'('type.infer.exc'('type.one.one',X0),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X1),'type.infer.infer_st'(X2))),'const.pair.,_2'(s('type.infer.exc'('type.one.one',X0),'const.infer.Success_1'(s('type.one.one',X3))),s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X1),'type.infer.infer_st'(X2)),'const.infer.n_fresh_uvar_2'(s('type.num.num',X4),s('type.infer.infer_st'(X2),X5)))))) )),
  inference(forward_demodulation,[],[f17338,f181])).
fof(f17338,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.one.one',X0),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X1),'type.infer.infer_st'(X2))),'const.pair.,_2'(s('type.infer.exc'('type.one.one',X0),'const.infer.Success_1'(s('type.one.one',X3))),s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X1),'type.infer.infer_st'(X2)),'const.infer.n_fresh_uvar_2'(s('type.num.num',X4),s('type.infer.infer_st'(X2),X5))))) = s('type.pair.prod'('type.infer.exc'('type.one.one',X0),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X1),'type.infer.infer_st'(X2))),'const.infer.st_ex_return_2'(s('type.one.one',X6),s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X1),'type.infer.infer_st'(X2)),happ(s(fun('type.infer.infer_st'(X2),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X1),'type.infer.infer_st'(X2))),happ(s(fun('type.num.num',fun('type.infer.infer_st'(X2),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X1),'type.infer.infer_st'(X2)))),'const.infer.n_fresh_uvar_0'),s('type.num.num',X4))),s('type.infer.infer_st'(X2),X5)))))) )),
  inference(unit_resulting_resolution,[],[f258,f181,f212])).
fof(f17644,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.list.list'(X0),X1),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X2),'type.infer.infer_st'(X3))),'const.infer.st_ex_return_2'(s('type.list.list'(X0),'const.list.MAP_2'(s(fun(X4,X0),X5),s('type.list.list'(X4),X6))),s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X2),'type.infer.infer_st'(X3)),'const.infer.n_fresh_uvar_2'(s('type.num.num',X7),s('type.infer.infer_st'(X3),X8))))) = s('type.pair.prod'('type.infer.exc'('type.list.list'(X0),X1),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X2),'type.infer.infer_st'(X3))),'const.pair.,_2'(s('type.infer.exc'('type.list.list'(X0),X1),'const.infer.Success_1'(s('type.list.list'(X0),'const.list.MAP_2'(s(fun(X4,X0),X5),s('type.list.list'(X4),X6))))),s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X2),'type.infer.infer_st'(X3)),'const.infer.n_fresh_uvar_2'(s('type.num.num',X7),s('type.infer.infer_st'(X3),X8)))))) )),
  inference(forward_demodulation,[],[f17643,f180])).
fof(f17643,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.list.list'(X0),X1),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X2),'type.infer.infer_st'(X3))),'const.pair.,_2'(s('type.infer.exc'('type.list.list'(X0),X1),'const.infer.Success_1'(s('type.list.list'(X0),'const.list.MAP_2'(s(fun(X4,X0),X5),s('type.list.list'(X4),X6))))),s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X2),'type.infer.infer_st'(X3)),'const.infer.n_fresh_uvar_2'(s('type.num.num',X7),s('type.infer.infer_st'(X3),X8))))) = s('type.pair.prod'('type.infer.exc'('type.list.list'(X0),X1),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X2),'type.infer.infer_st'(X3))),'const.infer.st_ex_return_2'(s('type.list.list'(X0),happ(s(fun('type.list.list'(X4),'type.list.list'(X0)),happ(s(fun(fun(X4,X0),fun('type.list.list'(X4),'type.list.list'(X0))),'const.list.MAP_0'),s(fun(X4,X0),X5))),s('type.list.list'(X4),X6))),s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X2),'type.infer.infer_st'(X3)),'const.infer.n_fresh_uvar_2'(s('type.num.num',X7),s('type.infer.infer_st'(X3),X8)))))) )),
  inference(forward_demodulation,[],[f17339,f181])).
fof(f17339,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.list.list'(X0),X1),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X2),'type.infer.infer_st'(X3))),'const.pair.,_2'(s('type.infer.exc'('type.list.list'(X0),X1),'const.infer.Success_1'(s('type.list.list'(X0),'const.list.MAP_2'(s(fun(X4,X0),X5),s('type.list.list'(X4),X6))))),s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X2),'type.infer.infer_st'(X3)),'const.infer.n_fresh_uvar_2'(s('type.num.num',X7),s('type.infer.infer_st'(X3),X8))))) = s('type.pair.prod'('type.infer.exc'('type.list.list'(X0),X1),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X2),'type.infer.infer_st'(X3))),'const.infer.st_ex_return_2'(s('type.list.list'(X0),happ(s(fun('type.list.list'(X4),'type.list.list'(X0)),happ(s(fun(fun(X4,X0),fun('type.list.list'(X4),'type.list.list'(X0))),'const.list.MAP_0'),s(fun(X4,X0),X5))),s('type.list.list'(X4),X6))),s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X2),'type.infer.infer_st'(X3)),happ(s(fun('type.infer.infer_st'(X3),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X2),'type.infer.infer_st'(X3))),happ(s(fun('type.num.num',fun('type.infer.infer_st'(X3),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X2),'type.infer.infer_st'(X3)))),'const.infer.n_fresh_uvar_0'),s('type.num.num',X7))),s('type.infer.infer_st'(X3),X8)))))) )),
  inference(unit_resulting_resolution,[],[f180,f181,f212])).
fof(f17638,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.num.num',X0),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X1),'type.infer.infer_st'(X2))),'const.infer.st_ex_return_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X3),s('type.num.num',X4))),s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X1),'type.infer.infer_st'(X2)),'const.infer.n_fresh_uvar_2'(s('type.num.num',X5),s('type.infer.infer_st'(X2),X6))))) = s('type.pair.prod'('type.infer.exc'('type.num.num',X0),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X1),'type.infer.infer_st'(X2))),'const.pair.,_2'(s('type.infer.exc'('type.num.num',X0),'const.infer.Success_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X3),s('type.num.num',X4))))),s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X1),'type.infer.infer_st'(X2)),'const.infer.n_fresh_uvar_2'(s('type.num.num',X5),s('type.infer.infer_st'(X2),X6)))))) )),
  inference(forward_demodulation,[],[f17637,f175])).
fof(f17637,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.num.num',X0),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X1),'type.infer.infer_st'(X2))),'const.infer.st_ex_return_2'(s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.arithmetic.+_1'(s('type.num.num',X3))),s('type.num.num',X4))),s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X1),'type.infer.infer_st'(X2)),'const.infer.n_fresh_uvar_2'(s('type.num.num',X5),s('type.infer.infer_st'(X2),X6))))) = s('type.pair.prod'('type.infer.exc'('type.num.num',X0),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X1),'type.infer.infer_st'(X2))),'const.pair.,_2'(s('type.infer.exc'('type.num.num',X0),'const.infer.Success_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X3),s('type.num.num',X4))))),s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X1),'type.infer.infer_st'(X2)),'const.infer.n_fresh_uvar_2'(s('type.num.num',X5),s('type.infer.infer_st'(X2),X6)))))) )),
  inference(forward_demodulation,[],[f17342,f181])).
fof(f17342,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.num.num',X0),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X1),'type.infer.infer_st'(X2))),'const.pair.,_2'(s('type.infer.exc'('type.num.num',X0),'const.infer.Success_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X3),s('type.num.num',X4))))),s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X1),'type.infer.infer_st'(X2)),'const.infer.n_fresh_uvar_2'(s('type.num.num',X5),s('type.infer.infer_st'(X2),X6))))) = s('type.pair.prod'('type.infer.exc'('type.num.num',X0),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X1),'type.infer.infer_st'(X2))),'const.infer.st_ex_return_2'(s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.arithmetic.+_1'(s('type.num.num',X3))),s('type.num.num',X4))),s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X1),'type.infer.infer_st'(X2)),happ(s(fun('type.infer.infer_st'(X2),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X1),'type.infer.infer_st'(X2))),happ(s(fun('type.num.num',fun('type.infer.infer_st'(X2),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X1),'type.infer.infer_st'(X2)))),'const.infer.n_fresh_uvar_0'),s('type.num.num',X5))),s('type.infer.infer_st'(X2),X6)))))) )),
  inference(unit_resulting_resolution,[],[f175,f181,f212])).
fof(f17636,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X1),'type.infer.infer_st'(X2))),'const.infer.st_ex_return_2'(s('type.infer_t.infer_t','const.infer_t.Infer_Tuvar_1'(s('type.num.num',X3))),s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X1),'type.infer.infer_st'(X2)),'const.infer.n_fresh_uvar_2'(s('type.num.num',X4),s('type.infer.infer_st'(X2),X5))))) = s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X1),'type.infer.infer_st'(X2))),'const.pair.,_2'(s('type.infer.exc'('type.infer_t.infer_t',X0),'const.infer.Success_1'(s('type.infer_t.infer_t','const.infer_t.Infer_Tuvar_1'(s('type.num.num',X3))))),s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X1),'type.infer.infer_st'(X2)),'const.infer.n_fresh_uvar_2'(s('type.num.num',X4),s('type.infer.infer_st'(X2),X5)))))) )),
  inference(forward_demodulation,[],[f17635,f166])).
fof(f17635,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X1),'type.infer.infer_st'(X2))),'const.infer.st_ex_return_2'(s('type.infer_t.infer_t',happ(s(fun('type.num.num','type.infer_t.infer_t'),'const.infer_t.Infer_Tuvar_0'),s('type.num.num',X3))),s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X1),'type.infer.infer_st'(X2)),'const.infer.n_fresh_uvar_2'(s('type.num.num',X4),s('type.infer.infer_st'(X2),X5))))) = s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X1),'type.infer.infer_st'(X2))),'const.pair.,_2'(s('type.infer.exc'('type.infer_t.infer_t',X0),'const.infer.Success_1'(s('type.infer_t.infer_t','const.infer_t.Infer_Tuvar_1'(s('type.num.num',X3))))),s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X1),'type.infer.infer_st'(X2)),'const.infer.n_fresh_uvar_2'(s('type.num.num',X4),s('type.infer.infer_st'(X2),X5)))))) )),
  inference(forward_demodulation,[],[f17343,f181])).
fof(f17343,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X1),'type.infer.infer_st'(X2))),'const.pair.,_2'(s('type.infer.exc'('type.infer_t.infer_t',X0),'const.infer.Success_1'(s('type.infer_t.infer_t','const.infer_t.Infer_Tuvar_1'(s('type.num.num',X3))))),s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X1),'type.infer.infer_st'(X2)),'const.infer.n_fresh_uvar_2'(s('type.num.num',X4),s('type.infer.infer_st'(X2),X5))))) = s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X1),'type.infer.infer_st'(X2))),'const.infer.st_ex_return_2'(s('type.infer_t.infer_t',happ(s(fun('type.num.num','type.infer_t.infer_t'),'const.infer_t.Infer_Tuvar_0'),s('type.num.num',X3))),s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X1),'type.infer.infer_st'(X2)),happ(s(fun('type.infer.infer_st'(X2),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X1),'type.infer.infer_st'(X2))),happ(s(fun('type.num.num',fun('type.infer.infer_st'(X2),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X1),'type.infer.infer_st'(X2)))),'const.infer.n_fresh_uvar_0'),s('type.num.num',X4))),s('type.infer.infer_st'(X2),X5)))))) )),
  inference(unit_resulting_resolution,[],[f166,f181,f212])).
fof(f17634,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X1),'type.infer.infer_st'(X2))),'const.infer.st_ex_return_2'(s('type.infer_t.infer_t','const.unify.t_walkstar_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X3),s('type.infer_t.infer_t',X4))),s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X1),'type.infer.infer_st'(X2)),'const.infer.n_fresh_uvar_2'(s('type.num.num',X5),s('type.infer.infer_st'(X2),X6))))) = s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X1),'type.infer.infer_st'(X2))),'const.pair.,_2'(s('type.infer.exc'('type.infer_t.infer_t',X0),'const.infer.Success_1'(s('type.infer_t.infer_t','const.unify.t_walkstar_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X3),s('type.infer_t.infer_t',X4))))),s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X1),'type.infer.infer_st'(X2)),'const.infer.n_fresh_uvar_2'(s('type.num.num',X5),s('type.infer.infer_st'(X2),X6)))))) )),
  inference(forward_demodulation,[],[f17633,f176])).
fof(f17633,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X1),'type.infer.infer_st'(X2))),'const.pair.,_2'(s('type.infer.exc'('type.infer_t.infer_t',X0),'const.infer.Success_1'(s('type.infer_t.infer_t','const.unify.t_walkstar_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X3),s('type.infer_t.infer_t',X4))))),s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X1),'type.infer.infer_st'(X2)),'const.infer.n_fresh_uvar_2'(s('type.num.num',X5),s('type.infer.infer_st'(X2),X6))))) = s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X1),'type.infer.infer_st'(X2))),'const.infer.st_ex_return_2'(s('type.infer_t.infer_t',happ(s(fun('type.infer_t.infer_t','type.infer_t.infer_t'),happ(s(fun('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),fun('type.infer_t.infer_t','type.infer_t.infer_t')),'const.unify.t_walkstar_0'),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X3))),s('type.infer_t.infer_t',X4))),s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X1),'type.infer.infer_st'(X2)),'const.infer.n_fresh_uvar_2'(s('type.num.num',X5),s('type.infer.infer_st'(X2),X6)))))) )),
  inference(forward_demodulation,[],[f17344,f181])).
fof(f17344,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X1),'type.infer.infer_st'(X2))),'const.pair.,_2'(s('type.infer.exc'('type.infer_t.infer_t',X0),'const.infer.Success_1'(s('type.infer_t.infer_t','const.unify.t_walkstar_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X3),s('type.infer_t.infer_t',X4))))),s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X1),'type.infer.infer_st'(X2)),'const.infer.n_fresh_uvar_2'(s('type.num.num',X5),s('type.infer.infer_st'(X2),X6))))) = s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X1),'type.infer.infer_st'(X2))),'const.infer.st_ex_return_2'(s('type.infer_t.infer_t',happ(s(fun('type.infer_t.infer_t','type.infer_t.infer_t'),happ(s(fun('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),fun('type.infer_t.infer_t','type.infer_t.infer_t')),'const.unify.t_walkstar_0'),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X3))),s('type.infer_t.infer_t',X4))),s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X1),'type.infer.infer_st'(X2)),happ(s(fun('type.infer.infer_st'(X2),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X1),'type.infer.infer_st'(X2))),happ(s(fun('type.num.num',fun('type.infer.infer_st'(X2),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X1),'type.infer.infer_st'(X2)))),'const.infer.n_fresh_uvar_0'),s('type.num.num',X5))),s('type.infer.infer_st'(X2),X6)))))) )),
  inference(unit_resulting_resolution,[],[f176,f181,f212])).
fof(f17630,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X0),X2),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X3),'type.infer.infer_st'(X4))),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'(X0,X1),X0),'const.infer.read_1'(s(X0,X5))),s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X3),'type.infer.infer_st'(X4)),'const.infer.n_fresh_uvar_2'(s('type.num.num',X6),s('type.infer.infer_st'(X4),X7))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X0),X2),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X3),'type.infer.infer_st'(X4))),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X0),X2),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'(X0,X1),X0),'const.infer.read_1'(s(X0,X5))))),s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X3),'type.infer.infer_st'(X4)),'const.infer.n_fresh_uvar_2'(s('type.num.num',X6),s('type.infer.infer_st'(X4),X7)))))) )),
  inference(forward_demodulation,[],[f17629,f178])).
fof(f17629,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X0),X2),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X3),'type.infer.infer_st'(X4))),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X0),X2),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'(X0,X1),X0),'const.infer.read_1'(s(X0,X5))))),s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X3),'type.infer.infer_st'(X4)),'const.infer.n_fresh_uvar_2'(s('type.num.num',X6),s('type.infer.infer_st'(X4),X7))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X0),X2),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X3),'type.infer.infer_st'(X4))),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'(X0,X1),X0),happ(s(fun(X0,'type.pair.prod'('type.infer.exc'(X0,X1),X0)),'const.infer.read_0'),s(X0,X5))),s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X3),'type.infer.infer_st'(X4)),'const.infer.n_fresh_uvar_2'(s('type.num.num',X6),s('type.infer.infer_st'(X4),X7)))))) )),
  inference(forward_demodulation,[],[f17346,f181])).
fof(f17346,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X0),X2),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X3),'type.infer.infer_st'(X4))),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X0),X2),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'(X0,X1),X0),'const.infer.read_1'(s(X0,X5))))),s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X3),'type.infer.infer_st'(X4)),'const.infer.n_fresh_uvar_2'(s('type.num.num',X6),s('type.infer.infer_st'(X4),X7))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X0),X2),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X3),'type.infer.infer_st'(X4))),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'(X0,X1),X0),happ(s(fun(X0,'type.pair.prod'('type.infer.exc'(X0,X1),X0)),'const.infer.read_0'),s(X0,X5))),s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X3),'type.infer.infer_st'(X4)),happ(s(fun('type.infer.infer_st'(X4),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X3),'type.infer.infer_st'(X4))),happ(s(fun('type.num.num',fun('type.infer.infer_st'(X4),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X3),'type.infer.infer_st'(X4)))),'const.infer.n_fresh_uvar_0'),s('type.num.num',X6))),s('type.infer.infer_st'(X4),X7)))))) )),
  inference(unit_resulting_resolution,[],[f178,f181,f212])).
fof(f17622,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1,X9] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X4),'type.infer.infer_st'(X5))),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'(X0,X1),X2),'const.infer.st_ex_return_2'(s(X0,X6),s(X2,X7))),s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X4),'type.infer.infer_st'(X5)),'const.infer.n_fresh_uvar_2'(s('type.num.num',X8),s('type.infer.infer_st'(X5),X9))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X4),'type.infer.infer_st'(X5))),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'(X0,X1),X2),'const.infer.st_ex_return_2'(s(X0,X6),s(X2,X7))))),s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X4),'type.infer.infer_st'(X5)),'const.infer.n_fresh_uvar_2'(s('type.num.num',X8),s('type.infer.infer_st'(X5),X9)))))) )),
  inference(forward_demodulation,[],[f17621,f205])).
fof(f17621,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1,X9] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X4),'type.infer.infer_st'(X5))),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'(X0,X1),X2),'const.infer.st_ex_return_2'(s(X0,X6),s(X2,X7))))),s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X4),'type.infer.infer_st'(X5)),'const.infer.n_fresh_uvar_2'(s('type.num.num',X8),s('type.infer.infer_st'(X5),X9))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X4),'type.infer.infer_st'(X5))),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'(X0,X1),X2),happ(s(fun(X2,'type.pair.prod'('type.infer.exc'(X0,X1),X2)),happ(s(fun(X0,fun(X2,'type.pair.prod'('type.infer.exc'(X0,X1),X2))),'const.infer.st_ex_return_0'),s(X0,X6))),s(X2,X7))),s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X4),'type.infer.infer_st'(X5)),'const.infer.n_fresh_uvar_2'(s('type.num.num',X8),s('type.infer.infer_st'(X5),X9)))))) )),
  inference(forward_demodulation,[],[f17352,f181])).
fof(f17352,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1,X9] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X4),'type.infer.infer_st'(X5))),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'(X0,X1),X2),'const.infer.st_ex_return_2'(s(X0,X6),s(X2,X7))))),s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X4),'type.infer.infer_st'(X5)),'const.infer.n_fresh_uvar_2'(s('type.num.num',X8),s('type.infer.infer_st'(X5),X9))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X4),'type.infer.infer_st'(X5))),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'(X0,X1),X2),happ(s(fun(X2,'type.pair.prod'('type.infer.exc'(X0,X1),X2)),happ(s(fun(X0,fun(X2,'type.pair.prod'('type.infer.exc'(X0,X1),X2))),'const.infer.st_ex_return_0'),s(X0,X6))),s(X2,X7))),s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X4),'type.infer.infer_st'(X5)),happ(s(fun('type.infer.infer_st'(X5),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X4),'type.infer.infer_st'(X5))),happ(s(fun('type.num.num',fun('type.infer.infer_st'(X5),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X4),'type.infer.infer_st'(X5)))),'const.infer.n_fresh_uvar_0'),s('type.num.num',X8))),s('type.infer.infer_st'(X5),X9)))))) )),
  inference(unit_resulting_resolution,[],[f205,f181,f212])).
fof(f17619,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),X2),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X3),'type.infer.infer_st'(X4))),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),'const.infer.fresh_uvar_1'(s('type.infer.infer_st'(X1),X5))),s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X3),'type.infer.infer_st'(X4)),'const.infer.n_fresh_uvar_2'(s('type.num.num',X6),s('type.infer.infer_st'(X4),X7))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),X2),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X3),'type.infer.infer_st'(X4))),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),X2),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),'const.infer.fresh_uvar_1'(s('type.infer.infer_st'(X1),X5))))),s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X3),'type.infer.infer_st'(X4)),'const.infer.n_fresh_uvar_2'(s('type.num.num',X6),s('type.infer.infer_st'(X4),X7)))))) )),
  inference(forward_demodulation,[],[f17618,f179])).
fof(f17618,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),X2),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X3),'type.infer.infer_st'(X4))),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),X2),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),'const.infer.fresh_uvar_1'(s('type.infer.infer_st'(X1),X5))))),s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X3),'type.infer.infer_st'(X4)),'const.infer.n_fresh_uvar_2'(s('type.num.num',X6),s('type.infer.infer_st'(X4),X7))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),X2),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X3),'type.infer.infer_st'(X4))),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),happ(s(fun('type.infer.infer_st'(X1),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1))),'const.infer.fresh_uvar_0'),s('type.infer.infer_st'(X1),X5))),s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X3),'type.infer.infer_st'(X4)),'const.infer.n_fresh_uvar_2'(s('type.num.num',X6),s('type.infer.infer_st'(X4),X7)))))) )),
  inference(forward_demodulation,[],[f17354,f181])).
fof(f17354,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),X2),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X3),'type.infer.infer_st'(X4))),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),X2),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),'const.infer.fresh_uvar_1'(s('type.infer.infer_st'(X1),X5))))),s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X3),'type.infer.infer_st'(X4)),'const.infer.n_fresh_uvar_2'(s('type.num.num',X6),s('type.infer.infer_st'(X4),X7))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),X2),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X3),'type.infer.infer_st'(X4))),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),happ(s(fun('type.infer.infer_st'(X1),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1))),'const.infer.fresh_uvar_0'),s('type.infer.infer_st'(X1),X5))),s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X3),'type.infer.infer_st'(X4)),happ(s(fun('type.infer.infer_st'(X4),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X3),'type.infer.infer_st'(X4))),happ(s(fun('type.num.num',fun('type.infer.infer_st'(X4),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X3),'type.infer.infer_st'(X4)))),'const.infer.n_fresh_uvar_0'),s('type.num.num',X6))),s('type.infer.infer_st'(X4),X7)))))) )),
  inference(unit_resulting_resolution,[],[f179,f181,f212])).
fof(f17615,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X1),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X2),'type.infer.infer_st'(X3))),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.apply_subst_2'(s('type.infer_t.infer_t',X4),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X5))),s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X2),'type.infer.infer_st'(X3)),'const.infer.n_fresh_uvar_2'(s('type.num.num',X6),s('type.infer.infer_st'(X3),X7))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X1),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X2),'type.infer.infer_st'(X3))),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X1),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.apply_subst_2'(s('type.infer_t.infer_t',X4),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X5))))),s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X2),'type.infer.infer_st'(X3)),'const.infer.n_fresh_uvar_2'(s('type.num.num',X6),s('type.infer.infer_st'(X3),X7)))))) )),
  inference(forward_demodulation,[],[f17614,f171])).
fof(f17614,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X1),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X2),'type.infer.infer_st'(X3))),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X1),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.apply_subst_2'(s('type.infer_t.infer_t',X4),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X5))))),s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X2),'type.infer.infer_st'(X3)),'const.infer.n_fresh_uvar_2'(s('type.num.num',X6),s('type.infer.infer_st'(X3),X7))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X1),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X2),'type.infer.infer_st'(X3))),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),happ(s(fun('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.infer.apply_subst_1'(s('type.infer_t.infer_t',X4))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X5))),s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X2),'type.infer.infer_st'(X3)),'const.infer.n_fresh_uvar_2'(s('type.num.num',X6),s('type.infer.infer_st'(X3),X7)))))) )),
  inference(forward_demodulation,[],[f17356,f181])).
fof(f17356,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X1),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X2),'type.infer.infer_st'(X3))),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X1),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.apply_subst_2'(s('type.infer_t.infer_t',X4),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X5))))),s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X2),'type.infer.infer_st'(X3)),'const.infer.n_fresh_uvar_2'(s('type.num.num',X6),s('type.infer.infer_st'(X3),X7))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X1),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X2),'type.infer.infer_st'(X3))),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),happ(s(fun('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.infer.apply_subst_1'(s('type.infer_t.infer_t',X4))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X5))),s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X2),'type.infer.infer_st'(X3)),happ(s(fun('type.infer.infer_st'(X3),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X2),'type.infer.infer_st'(X3))),happ(s(fun('type.num.num',fun('type.infer.infer_st'(X3),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X2),'type.infer.infer_st'(X3)))),'const.infer.n_fresh_uvar_0'),s('type.num.num',X6))),s('type.infer.infer_st'(X3),X7)))))) )),
  inference(unit_resulting_resolution,[],[f171,f181,f212])).
fof(f17613,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1,X9] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X4),'type.infer.infer_st'(X5))),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'(X0,X1),X2),'const.infer.failwith_2'(s(X1,X6),s(X2,X7))),s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X4),'type.infer.infer_st'(X5)),'const.infer.n_fresh_uvar_2'(s('type.num.num',X8),s('type.infer.infer_st'(X5),X9))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X4),'type.infer.infer_st'(X5))),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'(X0,X1),X2),'const.infer.failwith_2'(s(X1,X6),s(X2,X7))))),s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X4),'type.infer.infer_st'(X5)),'const.infer.n_fresh_uvar_2'(s('type.num.num',X8),s('type.infer.infer_st'(X5),X9)))))) )),
  inference(forward_demodulation,[],[f17612,f204])).
fof(f17612,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1,X9] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X4),'type.infer.infer_st'(X5))),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'(X0,X1),X2),'const.infer.failwith_2'(s(X1,X6),s(X2,X7))))),s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X4),'type.infer.infer_st'(X5)),'const.infer.n_fresh_uvar_2'(s('type.num.num',X8),s('type.infer.infer_st'(X5),X9))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X4),'type.infer.infer_st'(X5))),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'(X0,X1),X2),happ(s(fun(X2,'type.pair.prod'('type.infer.exc'(X0,X1),X2)),'const.infer.failwith_1'(s(X1,X6))),s(X2,X7))),s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X4),'type.infer.infer_st'(X5)),'const.infer.n_fresh_uvar_2'(s('type.num.num',X8),s('type.infer.infer_st'(X5),X9)))))) )),
  inference(forward_demodulation,[],[f17357,f181])).
fof(f17357,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1,X9] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X4),'type.infer.infer_st'(X5))),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'(X0,X1),X2),'const.infer.failwith_2'(s(X1,X6),s(X2,X7))))),s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X4),'type.infer.infer_st'(X5)),'const.infer.n_fresh_uvar_2'(s('type.num.num',X8),s('type.infer.infer_st'(X5),X9))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X4),'type.infer.infer_st'(X5))),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'(X0,X1),X2),happ(s(fun(X2,'type.pair.prod'('type.infer.exc'(X0,X1),X2)),'const.infer.failwith_1'(s(X1,X6))),s(X2,X7))),s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X4),'type.infer.infer_st'(X5)),happ(s(fun('type.infer.infer_st'(X5),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X4),'type.infer.infer_st'(X5))),happ(s(fun('type.num.num',fun('type.infer.infer_st'(X5),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X4),'type.infer.infer_st'(X5)))),'const.infer.n_fresh_uvar_0'),s('type.num.num',X8))),s('type.infer.infer_st'(X5),X9)))))) )),
  inference(unit_resulting_resolution,[],[f204,f181,f212])).
fof(f17611,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1,X9] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),X2),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X3),'type.infer.infer_st'(X4))),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),'const.infer.guard_3'(s(bool,X5),s(X0,X6),s(X1,X7))),s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X3),'type.infer.infer_st'(X4)),'const.infer.n_fresh_uvar_2'(s('type.num.num',X8),s('type.infer.infer_st'(X4),X9))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),X2),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X3),'type.infer.infer_st'(X4))),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),X2),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),'const.infer.guard_3'(s(bool,X5),s(X0,X6),s(X1,X7))))),s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X3),'type.infer.infer_st'(X4)),'const.infer.n_fresh_uvar_2'(s('type.num.num',X8),s('type.infer.infer_st'(X4),X9)))))) )),
  inference(forward_demodulation,[],[f17610,f183])).
fof(f17610,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1,X9] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),X2),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X3),'type.infer.infer_st'(X4))),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),X2),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),'const.infer.guard_3'(s(bool,X5),s(X0,X6),s(X1,X7))))),s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X3),'type.infer.infer_st'(X4)),'const.infer.n_fresh_uvar_2'(s('type.num.num',X8),s('type.infer.infer_st'(X4),X9))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),X2),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X3),'type.infer.infer_st'(X4))),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),happ(s(fun(X1,'type.pair.prod'('type.infer.exc'('type.one.one',X0),X1)),'const.infer.guard_2'(s(bool,X5),s(X0,X6))),s(X1,X7))),s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X3),'type.infer.infer_st'(X4)),'const.infer.n_fresh_uvar_2'(s('type.num.num',X8),s('type.infer.infer_st'(X4),X9)))))) )),
  inference(forward_demodulation,[],[f17358,f181])).
fof(f17358,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1,X9] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),X2),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X3),'type.infer.infer_st'(X4))),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),X2),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),'const.infer.guard_3'(s(bool,X5),s(X0,X6),s(X1,X7))))),s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X3),'type.infer.infer_st'(X4)),'const.infer.n_fresh_uvar_2'(s('type.num.num',X8),s('type.infer.infer_st'(X4),X9))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),X2),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X3),'type.infer.infer_st'(X4))),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),happ(s(fun(X1,'type.pair.prod'('type.infer.exc'('type.one.one',X0),X1)),'const.infer.guard_2'(s(bool,X5),s(X0,X6))),s(X1,X7))),s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X3),'type.infer.infer_st'(X4)),happ(s(fun('type.infer.infer_st'(X4),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X3),'type.infer.infer_st'(X4))),happ(s(fun('type.num.num',fun('type.infer.infer_st'(X4),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X3),'type.infer.infer_st'(X4)))),'const.infer.n_fresh_uvar_0'),s('type.num.num',X8))),s('type.infer.infer_st'(X4),X9)))))) )),
  inference(unit_resulting_resolution,[],[f183,f181,f212])).
fof(f17606,plain,(
  ( ! [X6,X4,X2,X0,X10,X8,X7,X5,X3,X1,X9] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),X2),X3),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),'const.infer.n_fresh_uvar_2'(s('type.num.num',X4),s('type.infer.infer_st'(X1),X5))),s(X3,happ(s(fun(X7,X3),X8),s(X7,happ(s(fun(X6,X7),X9),s(X6,X10))))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),X2),X3),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),X2),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),'const.infer.n_fresh_uvar_2'(s('type.num.num',X4),s('type.infer.infer_st'(X1),X5))))),s(X3,happ(s(fun(X6,X3),'_dst_x0x1_2'(s(fun(X7,X3),X8),s(fun(X6,X7),X9))),s(X6,X10)))))) )),
  inference(forward_demodulation,[],[f17361,f181])).
fof(f17361,plain,(
  ( ! [X6,X4,X2,X0,X10,X8,X7,X5,X3,X1,X9] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),X2),X3),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),X2),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),'const.infer.n_fresh_uvar_2'(s('type.num.num',X4),s('type.infer.infer_st'(X1),X5))))),s(X3,happ(s(fun(X6,X3),'_dst_x0x1_2'(s(fun(X7,X3),X8),s(fun(X6,X7),X9))),s(X6,X10))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),X2),X3),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),happ(s(fun('type.infer.infer_st'(X1),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1))),happ(s(fun('type.num.num',fun('type.infer.infer_st'(X1),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)))),'const.infer.n_fresh_uvar_0'),s('type.num.num',X4))),s('type.infer.infer_st'(X1),X5))),s(X3,happ(s(fun(X7,X3),X8),s(X7,happ(s(fun(X6,X7),X9),s(X6,X10)))))))) )),
  inference(unit_resulting_resolution,[],[f206,f181,f212])).
fof(f17605,plain,(
  ( ! [X6,X4,X2,X0,X12,X10,X8,X7,X5,X3,X1,X11,X9] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),X2),X3),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),'const.infer.n_fresh_uvar_2'(s('type.num.num',X4),s('type.infer.infer_st'(X1),X5))),s(X3,happ(s(fun(X9,X3),'_dst_x0x1x0_3'(s(fun(X7,fun(X6,X3)),X8),s(fun(X9,X7),X10),s(X6,X12))),s(X9,X11))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),X2),X3),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),X2),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),'const.infer.n_fresh_uvar_2'(s('type.num.num',X4),s('type.infer.infer_st'(X1),X5))))),s(X3,happ(s(fun(X6,X3),happ(s(fun(X7,fun(X6,X3)),X8),s(X7,happ(s(fun(X9,X7),X10),s(X9,X11))))),s(X6,X12)))))) )),
  inference(forward_demodulation,[],[f17362,f181])).
fof(f17362,plain,(
  ( ! [X6,X4,X2,X0,X12,X10,X8,X7,X5,X3,X1,X11,X9] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),X2),X3),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),X2),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),'const.infer.n_fresh_uvar_2'(s('type.num.num',X4),s('type.infer.infer_st'(X1),X5))))),s(X3,happ(s(fun(X6,X3),happ(s(fun(X7,fun(X6,X3)),X8),s(X7,happ(s(fun(X9,X7),X10),s(X9,X11))))),s(X6,X12))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),X2),X3),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),happ(s(fun('type.infer.infer_st'(X1),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1))),happ(s(fun('type.num.num',fun('type.infer.infer_st'(X1),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)))),'const.infer.n_fresh_uvar_0'),s('type.num.num',X4))),s('type.infer.infer_st'(X1),X5))),s(X3,happ(s(fun(X9,X3),'_dst_x0x1x0_3'(s(fun(X7,fun(X6,X3)),X8),s(fun(X9,X7),X10),s(X6,X12))),s(X9,X11)))))) )),
  inference(unit_resulting_resolution,[],[f221,f181,f212])).
fof(f17554,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),X2),X3),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),'const.infer.n_fresh_uvar_2'(s('type.num.num',X4),s('type.infer.infer_st'(X1),X5))),s(X3,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(X3),X6))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),X2),X3),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),X2),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),'const.infer.n_fresh_uvar_2'(s('type.num.num',X4),s('type.infer.infer_st'(X1),X5))))),s(X3,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(X3),X6)))))) )),
  inference(forward_demodulation,[],[f17553,f181])).
fof(f17553,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),X2),X3),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),X2),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),'const.infer.n_fresh_uvar_2'(s('type.num.num',X4),s('type.infer.infer_st'(X1),X5))))),s(X3,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(X3),X6))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),X2),X3),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),happ(s(fun('type.infer.infer_st'(X1),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1))),happ(s(fun('type.num.num',fun('type.infer.infer_st'(X1),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)))),'const.infer.n_fresh_uvar_0'),s('type.num.num',X4))),s('type.infer.infer_st'(X1),X5))),s(X3,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(X3),X6)))))) )),
  inference(forward_demodulation,[],[f17396,f168])).
fof(f17396,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),X2),X3),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),X2),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),'const.infer.n_fresh_uvar_2'(s('type.num.num',X4),s('type.infer.infer_st'(X1),X5))))),s(X3,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(X3),X6))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),X2),X3),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),happ(s(fun('type.infer.infer_st'(X1),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1))),happ(s(fun('type.num.num',fun('type.infer.infer_st'(X1),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)))),'const.infer.n_fresh_uvar_0'),s('type.num.num',X4))),s('type.infer.infer_st'(X1),X5))),s(X3,happ(s(fun('type.infer.infer_st'(X3),X3),'const.infer.infer_st_subst_0'),s('type.infer.infer_st'(X3),X6)))))) )),
  inference(unit_resulting_resolution,[],[f168,f181,f212])).
fof(f17552,plain,(
  ( ! [X6,X4,X2,X0,X10,X8,X7,X5,X3,X1,X9] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),X2),X3),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),'const.infer.n_fresh_uvar_2'(s('type.num.num',X4),s('type.infer.infer_st'(X1),X5))),s(X3,happ(s(fun(X8,X3),'_dst_x0x1_2'(s(fun(X6,X3),X7),s(fun(X8,X6),X9))),s(X8,X10))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),X2),X3),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),X2),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),'const.infer.n_fresh_uvar_2'(s('type.num.num',X4),s('type.infer.infer_st'(X1),X5))))),s(X3,happ(s(fun(X6,X3),X7),s(X6,happ(s(fun(X8,X6),X9),s(X8,X10)))))))) )),
  inference(forward_demodulation,[],[f17397,f181])).
fof(f17397,plain,(
  ( ! [X6,X4,X2,X0,X10,X8,X7,X5,X3,X1,X9] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),X2),X3),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),X2),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),'const.infer.n_fresh_uvar_2'(s('type.num.num',X4),s('type.infer.infer_st'(X1),X5))))),s(X3,happ(s(fun(X6,X3),X7),s(X6,happ(s(fun(X8,X6),X9),s(X8,X10))))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),X2),X3),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),happ(s(fun('type.infer.infer_st'(X1),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1))),happ(s(fun('type.num.num',fun('type.infer.infer_st'(X1),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)))),'const.infer.n_fresh_uvar_0'),s('type.num.num',X4))),s('type.infer.infer_st'(X1),X5))),s(X3,happ(s(fun(X8,X3),'_dst_x0x1_2'(s(fun(X6,X3),X7),s(fun(X8,X6),X9))),s(X8,X10)))))) )),
  inference(unit_resulting_resolution,[],[f206,f181,f212])).
fof(f17551,plain,(
  ( ! [X6,X4,X2,X0,X12,X10,X8,X7,X5,X3,X1,X11,X9] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),X2),X3),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),'const.infer.n_fresh_uvar_2'(s('type.num.num',X4),s('type.infer.infer_st'(X1),X5))),s(X3,happ(s(fun(X8,X3),happ(s(fun(X7,fun(X8,X3)),X9),s(X7,happ(s(fun(X6,X7),X10),s(X6,X12))))),s(X8,X11))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),X2),X3),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),X2),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),'const.infer.n_fresh_uvar_2'(s('type.num.num',X4),s('type.infer.infer_st'(X1),X5))))),s(X3,happ(s(fun(X6,X3),'_dst_x0x1x0_3'(s(fun(X7,fun(X8,X3)),X9),s(fun(X6,X7),X10),s(X8,X11))),s(X6,X12)))))) )),
  inference(forward_demodulation,[],[f17398,f181])).
fof(f17398,plain,(
  ( ! [X6,X4,X2,X0,X12,X10,X8,X7,X5,X3,X1,X11,X9] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),X2),X3),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),X2),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),'const.infer.n_fresh_uvar_2'(s('type.num.num',X4),s('type.infer.infer_st'(X1),X5))))),s(X3,happ(s(fun(X6,X3),'_dst_x0x1x0_3'(s(fun(X7,fun(X8,X3)),X9),s(fun(X6,X7),X10),s(X8,X11))),s(X6,X12))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),X2),X3),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),happ(s(fun('type.infer.infer_st'(X1),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1))),happ(s(fun('type.num.num',fun('type.infer.infer_st'(X1),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)))),'const.infer.n_fresh_uvar_0'),s('type.num.num',X4))),s('type.infer.infer_st'(X1),X5))),s(X3,happ(s(fun(X8,X3),happ(s(fun(X7,fun(X8,X3)),X9),s(X7,happ(s(fun(X6,X7),X10),s(X6,X12))))),s(X8,X11)))))) )),
  inference(unit_resulting_resolution,[],[f221,f181,f212])).
fof(f17546,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),X2),fun(X3,'type.one.one')),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),'const.infer.n_fresh_uvar_2'(s('type.num.num',X4),s('type.infer.infer_st'(X1),X5))),s(fun(X3,'type.one.one'),X7))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),X2),fun(X3,'type.one.one')),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),X2),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),'const.infer.n_fresh_uvar_2'(s('type.num.num',X4),s('type.infer.infer_st'(X1),X5))))),s(fun(X3,'type.one.one'),X6)))) )),
  inference(forward_demodulation,[],[f17401,f181])).
fof(f17401,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),X2),fun(X3,'type.one.one')),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),X2),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),'const.infer.n_fresh_uvar_2'(s('type.num.num',X4),s('type.infer.infer_st'(X1),X5))))),s(fun(X3,'type.one.one'),X6))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),X2),fun(X3,'type.one.one')),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),happ(s(fun('type.infer.infer_st'(X1),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1))),happ(s(fun('type.num.num',fun('type.infer.infer_st'(X1),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)))),'const.infer.n_fresh_uvar_0'),s('type.num.num',X4))),s('type.infer.infer_st'(X1),X5))),s(fun(X3,'type.one.one'),X7)))) )),
  inference(unit_resulting_resolution,[],[f605,f181,f212])).
fof(f17544,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),X2),fun(X3,fun(X4,'type.one.one'))),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),'const.infer.n_fresh_uvar_2'(s('type.num.num',X5),s('type.infer.infer_st'(X1),X6))),s(fun(X3,fun(X4,'type.one.one')),X8))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),X2),fun(X3,fun(X4,'type.one.one'))),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),X2),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),'const.infer.n_fresh_uvar_2'(s('type.num.num',X5),s('type.infer.infer_st'(X1),X6))))),s(fun(X3,fun(X4,'type.one.one')),X7)))) )),
  inference(forward_demodulation,[],[f17403,f181])).
fof(f17403,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),X2),fun(X3,fun(X4,'type.one.one'))),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),X2),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),'const.infer.n_fresh_uvar_2'(s('type.num.num',X5),s('type.infer.infer_st'(X1),X6))))),s(fun(X3,fun(X4,'type.one.one')),X7))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),X2),fun(X3,fun(X4,'type.one.one'))),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),happ(s(fun('type.infer.infer_st'(X1),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1))),happ(s(fun('type.num.num',fun('type.infer.infer_st'(X1),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)))),'const.infer.n_fresh_uvar_0'),s('type.num.num',X5))),s('type.infer.infer_st'(X1),X6))),s(fun(X3,fun(X4,'type.one.one')),X8)))) )),
  inference(unit_resulting_resolution,[],[f724,f181,f212])).
fof(f17543,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1,X9] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),X2),fun(X3,fun(X4,fun(X5,'type.one.one')))),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),'const.infer.n_fresh_uvar_2'(s('type.num.num',X6),s('type.infer.infer_st'(X1),X7))),s(fun(X3,fun(X4,fun(X5,'type.one.one'))),X9))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),X2),fun(X3,fun(X4,fun(X5,'type.one.one')))),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),X2),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),'const.infer.n_fresh_uvar_2'(s('type.num.num',X6),s('type.infer.infer_st'(X1),X7))))),s(fun(X3,fun(X4,fun(X5,'type.one.one'))),X8)))) )),
  inference(forward_demodulation,[],[f17404,f181])).
fof(f17404,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1,X9] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),X2),fun(X3,fun(X4,fun(X5,'type.one.one')))),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),X2),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),'const.infer.n_fresh_uvar_2'(s('type.num.num',X6),s('type.infer.infer_st'(X1),X7))))),s(fun(X3,fun(X4,fun(X5,'type.one.one'))),X8))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),X2),fun(X3,fun(X4,fun(X5,'type.one.one')))),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),happ(s(fun('type.infer.infer_st'(X1),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1))),happ(s(fun('type.num.num',fun('type.infer.infer_st'(X1),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)))),'const.infer.n_fresh_uvar_0'),s('type.num.num',X6))),s('type.infer.infer_st'(X1),X7))),s(fun(X3,fun(X4,fun(X5,'type.one.one'))),X9)))) )),
  inference(unit_resulting_resolution,[],[f752,f181,f212])).
fof(f17542,plain,(
  ( ! [X6,X4,X2,X0,X10,X8,X7,X5,X3,X1,X9] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),X2),fun(X3,fun(X4,fun(X5,fun(X6,'type.one.one'))))),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),'const.infer.n_fresh_uvar_2'(s('type.num.num',X7),s('type.infer.infer_st'(X1),X8))),s(fun(X3,fun(X4,fun(X5,fun(X6,'type.one.one')))),X10))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),X2),fun(X3,fun(X4,fun(X5,fun(X6,'type.one.one'))))),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),X2),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),'const.infer.n_fresh_uvar_2'(s('type.num.num',X7),s('type.infer.infer_st'(X1),X8))))),s(fun(X3,fun(X4,fun(X5,fun(X6,'type.one.one')))),X9)))) )),
  inference(forward_demodulation,[],[f17405,f181])).
fof(f17405,plain,(
  ( ! [X6,X4,X2,X0,X10,X8,X7,X5,X3,X1,X9] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),X2),fun(X3,fun(X4,fun(X5,fun(X6,'type.one.one'))))),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),X2),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),'const.infer.n_fresh_uvar_2'(s('type.num.num',X7),s('type.infer.infer_st'(X1),X8))))),s(fun(X3,fun(X4,fun(X5,fun(X6,'type.one.one')))),X9))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),X2),fun(X3,fun(X4,fun(X5,fun(X6,'type.one.one'))))),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),happ(s(fun('type.infer.infer_st'(X1),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1))),happ(s(fun('type.num.num',fun('type.infer.infer_st'(X1),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)))),'const.infer.n_fresh_uvar_0'),s('type.num.num',X7))),s('type.infer.infer_st'(X1),X8))),s(fun(X3,fun(X4,fun(X5,fun(X6,'type.one.one')))),X10)))) )),
  inference(unit_resulting_resolution,[],[f787,f181,f212])).
fof(f17541,plain,(
  ( ! [X6,X4,X2,X0,X10,X8,X7,X5,X3,X1,X11,X9] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),X2),fun(X3,fun(X4,fun(X5,fun(X6,fun(X7,'type.one.one')))))),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),'const.infer.n_fresh_uvar_2'(s('type.num.num',X8),s('type.infer.infer_st'(X1),X9))),s(fun(X3,fun(X4,fun(X5,fun(X6,fun(X7,'type.one.one'))))),X11))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),X2),fun(X3,fun(X4,fun(X5,fun(X6,fun(X7,'type.one.one')))))),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),X2),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),'const.infer.n_fresh_uvar_2'(s('type.num.num',X8),s('type.infer.infer_st'(X1),X9))))),s(fun(X3,fun(X4,fun(X5,fun(X6,fun(X7,'type.one.one'))))),X10)))) )),
  inference(forward_demodulation,[],[f17406,f181])).
fof(f17406,plain,(
  ( ! [X6,X4,X2,X0,X10,X8,X7,X5,X3,X1,X11,X9] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),X2),fun(X3,fun(X4,fun(X5,fun(X6,fun(X7,'type.one.one')))))),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),X2),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),'const.infer.n_fresh_uvar_2'(s('type.num.num',X8),s('type.infer.infer_st'(X1),X9))))),s(fun(X3,fun(X4,fun(X5,fun(X6,fun(X7,'type.one.one'))))),X10))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),X2),fun(X3,fun(X4,fun(X5,fun(X6,fun(X7,'type.one.one')))))),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),happ(s(fun('type.infer.infer_st'(X1),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1))),happ(s(fun('type.num.num',fun('type.infer.infer_st'(X1),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)))),'const.infer.n_fresh_uvar_0'),s('type.num.num',X8))),s('type.infer.infer_st'(X1),X9))),s(fun(X3,fun(X4,fun(X5,fun(X6,fun(X7,'type.one.one'))))),X11)))) )),
  inference(unit_resulting_resolution,[],[f815,f181,f212])).
fof(f17537,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),X2),'type.one.one'),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),'const.infer.n_fresh_uvar_2'(s('type.num.num',X3),s('type.infer.infer_st'(X1),X4))),s('type.one.one',X6))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),X2),'type.one.one'),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),X2),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),'const.infer.n_fresh_uvar_2'(s('type.num.num',X3),s('type.infer.infer_st'(X1),X4))))),s('type.one.one',X5)))) )),
  inference(forward_demodulation,[],[f17410,f181])).
fof(f17410,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),X2),'type.one.one'),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),X2),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),'const.infer.n_fresh_uvar_2'(s('type.num.num',X3),s('type.infer.infer_st'(X1),X4))))),s('type.one.one',X5))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),X2),'type.one.one'),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),happ(s(fun('type.infer.infer_st'(X1),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1))),happ(s(fun('type.num.num',fun('type.infer.infer_st'(X1),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)))),'const.infer.n_fresh_uvar_0'),s('type.num.num',X3))),s('type.infer.infer_st'(X1),X4))),s('type.one.one',X6)))) )),
  inference(unit_resulting_resolution,[],[f258,f181,f212])).
fof(f17536,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),X2),'type.list.list'(X3)),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),'const.infer.n_fresh_uvar_2'(s('type.num.num',X4),s('type.infer.infer_st'(X1),X5))),s('type.list.list'(X3),'const.list.MAP_2'(s(fun(X6,X3),X7),s('type.list.list'(X6),X8))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),X2),'type.list.list'(X3)),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),X2),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),'const.infer.n_fresh_uvar_2'(s('type.num.num',X4),s('type.infer.infer_st'(X1),X5))))),s('type.list.list'(X3),'const.list.MAP_2'(s(fun(X6,X3),X7),s('type.list.list'(X6),X8)))))) )),
  inference(forward_demodulation,[],[f17535,f181])).
fof(f17535,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),X2),'type.list.list'(X3)),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),X2),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),'const.infer.n_fresh_uvar_2'(s('type.num.num',X4),s('type.infer.infer_st'(X1),X5))))),s('type.list.list'(X3),'const.list.MAP_2'(s(fun(X6,X3),X7),s('type.list.list'(X6),X8))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),X2),'type.list.list'(X3)),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),happ(s(fun('type.infer.infer_st'(X1),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1))),happ(s(fun('type.num.num',fun('type.infer.infer_st'(X1),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)))),'const.infer.n_fresh_uvar_0'),s('type.num.num',X4))),s('type.infer.infer_st'(X1),X5))),s('type.list.list'(X3),'const.list.MAP_2'(s(fun(X6,X3),X7),s('type.list.list'(X6),X8)))))) )),
  inference(forward_demodulation,[],[f17411,f180])).
fof(f17411,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),X2),'type.list.list'(X3)),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),X2),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),'const.infer.n_fresh_uvar_2'(s('type.num.num',X4),s('type.infer.infer_st'(X1),X5))))),s('type.list.list'(X3),'const.list.MAP_2'(s(fun(X6,X3),X7),s('type.list.list'(X6),X8))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),X2),'type.list.list'(X3)),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),happ(s(fun('type.infer.infer_st'(X1),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1))),happ(s(fun('type.num.num',fun('type.infer.infer_st'(X1),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)))),'const.infer.n_fresh_uvar_0'),s('type.num.num',X4))),s('type.infer.infer_st'(X1),X5))),s('type.list.list'(X3),happ(s(fun('type.list.list'(X6),'type.list.list'(X3)),happ(s(fun(fun(X6,X3),fun('type.list.list'(X6),'type.list.list'(X3))),'const.list.MAP_0'),s(fun(X6,X3),X7))),s('type.list.list'(X6),X8)))))) )),
  inference(unit_resulting_resolution,[],[f180,f181,f212])).
fof(f17530,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),X2),'type.num.num'),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),'const.infer.n_fresh_uvar_2'(s('type.num.num',X3),s('type.infer.infer_st'(X1),X4))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X5),s('type.num.num',X6))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),X2),'type.num.num'),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),X2),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),'const.infer.n_fresh_uvar_2'(s('type.num.num',X3),s('type.infer.infer_st'(X1),X4))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X5),s('type.num.num',X6)))))) )),
  inference(forward_demodulation,[],[f17529,f181])).
fof(f17529,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),X2),'type.num.num'),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),X2),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),'const.infer.n_fresh_uvar_2'(s('type.num.num',X3),s('type.infer.infer_st'(X1),X4))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X5),s('type.num.num',X6))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),X2),'type.num.num'),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),happ(s(fun('type.infer.infer_st'(X1),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1))),happ(s(fun('type.num.num',fun('type.infer.infer_st'(X1),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)))),'const.infer.n_fresh_uvar_0'),s('type.num.num',X3))),s('type.infer.infer_st'(X1),X4))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X5),s('type.num.num',X6)))))) )),
  inference(forward_demodulation,[],[f17414,f175])).
fof(f17414,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),X2),'type.num.num'),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),X2),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),'const.infer.n_fresh_uvar_2'(s('type.num.num',X3),s('type.infer.infer_st'(X1),X4))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X5),s('type.num.num',X6))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),X2),'type.num.num'),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),happ(s(fun('type.infer.infer_st'(X1),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1))),happ(s(fun('type.num.num',fun('type.infer.infer_st'(X1),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)))),'const.infer.n_fresh_uvar_0'),s('type.num.num',X3))),s('type.infer.infer_st'(X1),X4))),s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.arithmetic.+_1'(s('type.num.num',X5))),s('type.num.num',X6)))))) )),
  inference(unit_resulting_resolution,[],[f175,f181,f212])).
fof(f17528,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),X2),'type.infer_t.infer_t'),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),'const.infer.n_fresh_uvar_2'(s('type.num.num',X3),s('type.infer.infer_st'(X1),X4))),s('type.infer_t.infer_t','const.infer_t.Infer_Tuvar_1'(s('type.num.num',X5))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),X2),'type.infer_t.infer_t'),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),X2),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),'const.infer.n_fresh_uvar_2'(s('type.num.num',X3),s('type.infer.infer_st'(X1),X4))))),s('type.infer_t.infer_t','const.infer_t.Infer_Tuvar_1'(s('type.num.num',X5)))))) )),
  inference(forward_demodulation,[],[f17527,f181])).
fof(f17527,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),X2),'type.infer_t.infer_t'),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),X2),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),'const.infer.n_fresh_uvar_2'(s('type.num.num',X3),s('type.infer.infer_st'(X1),X4))))),s('type.infer_t.infer_t','const.infer_t.Infer_Tuvar_1'(s('type.num.num',X5))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),X2),'type.infer_t.infer_t'),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),happ(s(fun('type.infer.infer_st'(X1),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1))),happ(s(fun('type.num.num',fun('type.infer.infer_st'(X1),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)))),'const.infer.n_fresh_uvar_0'),s('type.num.num',X3))),s('type.infer.infer_st'(X1),X4))),s('type.infer_t.infer_t','const.infer_t.Infer_Tuvar_1'(s('type.num.num',X5)))))) )),
  inference(forward_demodulation,[],[f17415,f166])).
fof(f17415,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),X2),'type.infer_t.infer_t'),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),X2),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),'const.infer.n_fresh_uvar_2'(s('type.num.num',X3),s('type.infer.infer_st'(X1),X4))))),s('type.infer_t.infer_t','const.infer_t.Infer_Tuvar_1'(s('type.num.num',X5))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),X2),'type.infer_t.infer_t'),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),happ(s(fun('type.infer.infer_st'(X1),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1))),happ(s(fun('type.num.num',fun('type.infer.infer_st'(X1),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)))),'const.infer.n_fresh_uvar_0'),s('type.num.num',X3))),s('type.infer.infer_st'(X1),X4))),s('type.infer_t.infer_t',happ(s(fun('type.num.num','type.infer_t.infer_t'),'const.infer_t.Infer_Tuvar_0'),s('type.num.num',X5)))))) )),
  inference(unit_resulting_resolution,[],[f166,f181,f212])).
fof(f17526,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),X2),'type.infer_t.infer_t'),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),'const.infer.n_fresh_uvar_2'(s('type.num.num',X3),s('type.infer.infer_st'(X1),X4))),s('type.infer_t.infer_t','const.unify.t_walkstar_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X5),s('type.infer_t.infer_t',X6))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),X2),'type.infer_t.infer_t'),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),X2),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),'const.infer.n_fresh_uvar_2'(s('type.num.num',X3),s('type.infer.infer_st'(X1),X4))))),s('type.infer_t.infer_t','const.unify.t_walkstar_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X5),s('type.infer_t.infer_t',X6)))))) )),
  inference(forward_demodulation,[],[f17525,f181])).
fof(f17525,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),X2),'type.infer_t.infer_t'),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),X2),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),'const.infer.n_fresh_uvar_2'(s('type.num.num',X3),s('type.infer.infer_st'(X1),X4))))),s('type.infer_t.infer_t','const.unify.t_walkstar_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X5),s('type.infer_t.infer_t',X6))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),X2),'type.infer_t.infer_t'),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),happ(s(fun('type.infer.infer_st'(X1),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1))),happ(s(fun('type.num.num',fun('type.infer.infer_st'(X1),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)))),'const.infer.n_fresh_uvar_0'),s('type.num.num',X3))),s('type.infer.infer_st'(X1),X4))),s('type.infer_t.infer_t','const.unify.t_walkstar_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X5),s('type.infer_t.infer_t',X6)))))) )),
  inference(forward_demodulation,[],[f17416,f176])).
fof(f17416,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),X2),'type.infer_t.infer_t'),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),X2),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),'const.infer.n_fresh_uvar_2'(s('type.num.num',X3),s('type.infer.infer_st'(X1),X4))))),s('type.infer_t.infer_t','const.unify.t_walkstar_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X5),s('type.infer_t.infer_t',X6))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),X2),'type.infer_t.infer_t'),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),happ(s(fun('type.infer.infer_st'(X1),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1))),happ(s(fun('type.num.num',fun('type.infer.infer_st'(X1),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)))),'const.infer.n_fresh_uvar_0'),s('type.num.num',X3))),s('type.infer.infer_st'(X1),X4))),s('type.infer_t.infer_t',happ(s(fun('type.infer_t.infer_t','type.infer_t.infer_t'),happ(s(fun('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),fun('type.infer_t.infer_t','type.infer_t.infer_t')),'const.unify.t_walkstar_0'),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X5))),s('type.infer_t.infer_t',X6)))))) )),
  inference(unit_resulting_resolution,[],[f176,f181,f212])).
fof(f17522,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),X2),'type.pair.prod'('type.infer.exc'(X3,X4),X3)),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),'const.infer.n_fresh_uvar_2'(s('type.num.num',X5),s('type.infer.infer_st'(X1),X6))),s('type.pair.prod'('type.infer.exc'(X3,X4),X3),'const.infer.read_1'(s(X3,X7))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),X2),'type.pair.prod'('type.infer.exc'(X3,X4),X3)),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),X2),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),'const.infer.n_fresh_uvar_2'(s('type.num.num',X5),s('type.infer.infer_st'(X1),X6))))),s('type.pair.prod'('type.infer.exc'(X3,X4),X3),'const.infer.read_1'(s(X3,X7)))))) )),
  inference(forward_demodulation,[],[f17521,f181])).
fof(f17521,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),X2),'type.pair.prod'('type.infer.exc'(X3,X4),X3)),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),X2),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),'const.infer.n_fresh_uvar_2'(s('type.num.num',X5),s('type.infer.infer_st'(X1),X6))))),s('type.pair.prod'('type.infer.exc'(X3,X4),X3),'const.infer.read_1'(s(X3,X7))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),X2),'type.pair.prod'('type.infer.exc'(X3,X4),X3)),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),happ(s(fun('type.infer.infer_st'(X1),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1))),happ(s(fun('type.num.num',fun('type.infer.infer_st'(X1),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)))),'const.infer.n_fresh_uvar_0'),s('type.num.num',X5))),s('type.infer.infer_st'(X1),X6))),s('type.pair.prod'('type.infer.exc'(X3,X4),X3),'const.infer.read_1'(s(X3,X7)))))) )),
  inference(forward_demodulation,[],[f17418,f178])).
fof(f17418,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),X2),'type.pair.prod'('type.infer.exc'(X3,X4),X3)),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),X2),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),'const.infer.n_fresh_uvar_2'(s('type.num.num',X5),s('type.infer.infer_st'(X1),X6))))),s('type.pair.prod'('type.infer.exc'(X3,X4),X3),'const.infer.read_1'(s(X3,X7))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),X2),'type.pair.prod'('type.infer.exc'(X3,X4),X3)),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),happ(s(fun('type.infer.infer_st'(X1),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1))),happ(s(fun('type.num.num',fun('type.infer.infer_st'(X1),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)))),'const.infer.n_fresh_uvar_0'),s('type.num.num',X5))),s('type.infer.infer_st'(X1),X6))),s('type.pair.prod'('type.infer.exc'(X3,X4),X3),happ(s(fun(X3,'type.pair.prod'('type.infer.exc'(X3,X4),X3)),'const.infer.read_0'),s(X3,X7)))))) )),
  inference(unit_resulting_resolution,[],[f178,f181,f212])).
fof(f17514,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1,X9] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),X2),'type.pair.prod'('type.infer.exc'(X3,X4),X5)),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),'const.infer.n_fresh_uvar_2'(s('type.num.num',X6),s('type.infer.infer_st'(X1),X7))),s('type.pair.prod'('type.infer.exc'(X3,X4),X5),'const.infer.st_ex_return_2'(s(X3,X8),s(X5,X9))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),X2),'type.pair.prod'('type.infer.exc'(X3,X4),X5)),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),X2),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),'const.infer.n_fresh_uvar_2'(s('type.num.num',X6),s('type.infer.infer_st'(X1),X7))))),s('type.pair.prod'('type.infer.exc'(X3,X4),X5),'const.infer.st_ex_return_2'(s(X3,X8),s(X5,X9)))))) )),
  inference(forward_demodulation,[],[f17513,f181])).
fof(f17513,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1,X9] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),X2),'type.pair.prod'('type.infer.exc'(X3,X4),X5)),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),X2),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),'const.infer.n_fresh_uvar_2'(s('type.num.num',X6),s('type.infer.infer_st'(X1),X7))))),s('type.pair.prod'('type.infer.exc'(X3,X4),X5),'const.infer.st_ex_return_2'(s(X3,X8),s(X5,X9))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),X2),'type.pair.prod'('type.infer.exc'(X3,X4),X5)),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),happ(s(fun('type.infer.infer_st'(X1),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1))),happ(s(fun('type.num.num',fun('type.infer.infer_st'(X1),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)))),'const.infer.n_fresh_uvar_0'),s('type.num.num',X6))),s('type.infer.infer_st'(X1),X7))),s('type.pair.prod'('type.infer.exc'(X3,X4),X5),'const.infer.st_ex_return_2'(s(X3,X8),s(X5,X9)))))) )),
  inference(forward_demodulation,[],[f17424,f205])).
fof(f17424,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1,X9] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),X2),'type.pair.prod'('type.infer.exc'(X3,X4),X5)),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),X2),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),'const.infer.n_fresh_uvar_2'(s('type.num.num',X6),s('type.infer.infer_st'(X1),X7))))),s('type.pair.prod'('type.infer.exc'(X3,X4),X5),'const.infer.st_ex_return_2'(s(X3,X8),s(X5,X9))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),X2),'type.pair.prod'('type.infer.exc'(X3,X4),X5)),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),happ(s(fun('type.infer.infer_st'(X1),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1))),happ(s(fun('type.num.num',fun('type.infer.infer_st'(X1),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)))),'const.infer.n_fresh_uvar_0'),s('type.num.num',X6))),s('type.infer.infer_st'(X1),X7))),s('type.pair.prod'('type.infer.exc'(X3,X4),X5),happ(s(fun(X5,'type.pair.prod'('type.infer.exc'(X3,X4),X5)),happ(s(fun(X3,fun(X5,'type.pair.prod'('type.infer.exc'(X3,X4),X5))),'const.infer.st_ex_return_0'),s(X3,X8))),s(X5,X9)))))) )),
  inference(unit_resulting_resolution,[],[f205,f181,f212])).
fof(f17511,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),X2),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X3),'type.infer.infer_st'(X4))),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),'const.infer.n_fresh_uvar_2'(s('type.num.num',X5),s('type.infer.infer_st'(X1),X6))),s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X3),'type.infer.infer_st'(X4)),'const.infer.fresh_uvar_1'(s('type.infer.infer_st'(X4),X7))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),X2),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X3),'type.infer.infer_st'(X4))),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),X2),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),'const.infer.n_fresh_uvar_2'(s('type.num.num',X5),s('type.infer.infer_st'(X1),X6))))),s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X3),'type.infer.infer_st'(X4)),'const.infer.fresh_uvar_1'(s('type.infer.infer_st'(X4),X7)))))) )),
  inference(forward_demodulation,[],[f17510,f181])).
fof(f17510,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),X2),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X3),'type.infer.infer_st'(X4))),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),X2),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),'const.infer.n_fresh_uvar_2'(s('type.num.num',X5),s('type.infer.infer_st'(X1),X6))))),s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X3),'type.infer.infer_st'(X4)),'const.infer.fresh_uvar_1'(s('type.infer.infer_st'(X4),X7))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),X2),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X3),'type.infer.infer_st'(X4))),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),happ(s(fun('type.infer.infer_st'(X1),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1))),happ(s(fun('type.num.num',fun('type.infer.infer_st'(X1),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)))),'const.infer.n_fresh_uvar_0'),s('type.num.num',X5))),s('type.infer.infer_st'(X1),X6))),s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X3),'type.infer.infer_st'(X4)),'const.infer.fresh_uvar_1'(s('type.infer.infer_st'(X4),X7)))))) )),
  inference(forward_demodulation,[],[f17426,f179])).
fof(f17426,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),X2),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X3),'type.infer.infer_st'(X4))),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),X2),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),'const.infer.n_fresh_uvar_2'(s('type.num.num',X5),s('type.infer.infer_st'(X1),X6))))),s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X3),'type.infer.infer_st'(X4)),'const.infer.fresh_uvar_1'(s('type.infer.infer_st'(X4),X7))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),X2),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X3),'type.infer.infer_st'(X4))),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),happ(s(fun('type.infer.infer_st'(X1),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1))),happ(s(fun('type.num.num',fun('type.infer.infer_st'(X1),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)))),'const.infer.n_fresh_uvar_0'),s('type.num.num',X5))),s('type.infer.infer_st'(X1),X6))),s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X3),'type.infer.infer_st'(X4)),happ(s(fun('type.infer.infer_st'(X4),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X3),'type.infer.infer_st'(X4))),'const.infer.fresh_uvar_0'),s('type.infer.infer_st'(X4),X7)))))) )),
  inference(unit_resulting_resolution,[],[f179,f181,f212])).
fof(f17509,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),X2),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X3),'type.infer.infer_st'(X4))),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),'const.infer.n_fresh_uvar_2'(s('type.num.num',X5),s('type.infer.infer_st'(X1),X6))),s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X3),'type.infer.infer_st'(X4)),'const.infer.n_fresh_uvar_2'(s('type.num.num',X7),s('type.infer.infer_st'(X4),X8))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),X2),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X3),'type.infer.infer_st'(X4))),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),X2),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),'const.infer.n_fresh_uvar_2'(s('type.num.num',X5),s('type.infer.infer_st'(X1),X6))))),s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X3),'type.infer.infer_st'(X4)),'const.infer.n_fresh_uvar_2'(s('type.num.num',X7),s('type.infer.infer_st'(X4),X8)))))) )),
  inference(forward_demodulation,[],[f17508,f181])).
fof(f17508,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),X2),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X3),'type.infer.infer_st'(X4))),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),X2),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),'const.infer.n_fresh_uvar_2'(s('type.num.num',X5),s('type.infer.infer_st'(X1),X6))))),s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X3),'type.infer.infer_st'(X4)),'const.infer.n_fresh_uvar_2'(s('type.num.num',X7),s('type.infer.infer_st'(X4),X8))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),X2),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X3),'type.infer.infer_st'(X4))),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),happ(s(fun('type.infer.infer_st'(X1),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1))),happ(s(fun('type.num.num',fun('type.infer.infer_st'(X1),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)))),'const.infer.n_fresh_uvar_0'),s('type.num.num',X5))),s('type.infer.infer_st'(X1),X6))),s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X3),'type.infer.infer_st'(X4)),'const.infer.n_fresh_uvar_2'(s('type.num.num',X7),s('type.infer.infer_st'(X4),X8)))))) )),
  inference(forward_demodulation,[],[f17427,f181])).
fof(f17427,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),X2),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X3),'type.infer.infer_st'(X4))),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),X2),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),'const.infer.n_fresh_uvar_2'(s('type.num.num',X5),s('type.infer.infer_st'(X1),X6))))),s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X3),'type.infer.infer_st'(X4)),'const.infer.n_fresh_uvar_2'(s('type.num.num',X7),s('type.infer.infer_st'(X4),X8))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),X2),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X3),'type.infer.infer_st'(X4))),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),happ(s(fun('type.infer.infer_st'(X1),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1))),happ(s(fun('type.num.num',fun('type.infer.infer_st'(X1),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)))),'const.infer.n_fresh_uvar_0'),s('type.num.num',X5))),s('type.infer.infer_st'(X1),X6))),s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X3),'type.infer.infer_st'(X4)),happ(s(fun('type.infer.infer_st'(X4),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X3),'type.infer.infer_st'(X4))),happ(s(fun('type.num.num',fun('type.infer.infer_st'(X4),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X3),'type.infer.infer_st'(X4)))),'const.infer.n_fresh_uvar_0'),s('type.num.num',X7))),s('type.infer.infer_st'(X4),X8)))))) )),
  inference(unit_resulting_resolution,[],[f181,f181,f212])).
fof(f17507,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),X2),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X3),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),'const.infer.n_fresh_uvar_2'(s('type.num.num',X4),s('type.infer.infer_st'(X1),X5))),s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X3),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.apply_subst_2'(s('type.infer_t.infer_t',X6),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X7))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),X2),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X3),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),X2),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),'const.infer.n_fresh_uvar_2'(s('type.num.num',X4),s('type.infer.infer_st'(X1),X5))))),s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X3),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.apply_subst_2'(s('type.infer_t.infer_t',X6),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X7)))))) )),
  inference(forward_demodulation,[],[f17506,f181])).
fof(f17506,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),X2),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X3),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),X2),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),'const.infer.n_fresh_uvar_2'(s('type.num.num',X4),s('type.infer.infer_st'(X1),X5))))),s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X3),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.apply_subst_2'(s('type.infer_t.infer_t',X6),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X7))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),X2),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X3),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),happ(s(fun('type.infer.infer_st'(X1),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1))),happ(s(fun('type.num.num',fun('type.infer.infer_st'(X1),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)))),'const.infer.n_fresh_uvar_0'),s('type.num.num',X4))),s('type.infer.infer_st'(X1),X5))),s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X3),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.apply_subst_2'(s('type.infer_t.infer_t',X6),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X7)))))) )),
  inference(forward_demodulation,[],[f17428,f171])).
fof(f17428,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),X2),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X3),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),X2),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),'const.infer.n_fresh_uvar_2'(s('type.num.num',X4),s('type.infer.infer_st'(X1),X5))))),s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X3),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.apply_subst_2'(s('type.infer_t.infer_t',X6),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X7))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),X2),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X3),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),happ(s(fun('type.infer.infer_st'(X1),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1))),happ(s(fun('type.num.num',fun('type.infer.infer_st'(X1),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)))),'const.infer.n_fresh_uvar_0'),s('type.num.num',X4))),s('type.infer.infer_st'(X1),X5))),s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X3),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),happ(s(fun('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X3),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.infer.apply_subst_1'(s('type.infer_t.infer_t',X6))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X7)))))) )),
  inference(unit_resulting_resolution,[],[f171,f181,f212])).
fof(f17505,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1,X9] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),X2),'type.pair.prod'('type.infer.exc'(X3,X4),X5)),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),'const.infer.n_fresh_uvar_2'(s('type.num.num',X6),s('type.infer.infer_st'(X1),X7))),s('type.pair.prod'('type.infer.exc'(X3,X4),X5),'const.infer.failwith_2'(s(X4,X8),s(X5,X9))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),X2),'type.pair.prod'('type.infer.exc'(X3,X4),X5)),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),X2),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),'const.infer.n_fresh_uvar_2'(s('type.num.num',X6),s('type.infer.infer_st'(X1),X7))))),s('type.pair.prod'('type.infer.exc'(X3,X4),X5),'const.infer.failwith_2'(s(X4,X8),s(X5,X9)))))) )),
  inference(forward_demodulation,[],[f17504,f181])).
fof(f17504,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1,X9] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),X2),'type.pair.prod'('type.infer.exc'(X3,X4),X5)),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),X2),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),'const.infer.n_fresh_uvar_2'(s('type.num.num',X6),s('type.infer.infer_st'(X1),X7))))),s('type.pair.prod'('type.infer.exc'(X3,X4),X5),'const.infer.failwith_2'(s(X4,X8),s(X5,X9))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),X2),'type.pair.prod'('type.infer.exc'(X3,X4),X5)),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),happ(s(fun('type.infer.infer_st'(X1),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1))),happ(s(fun('type.num.num',fun('type.infer.infer_st'(X1),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)))),'const.infer.n_fresh_uvar_0'),s('type.num.num',X6))),s('type.infer.infer_st'(X1),X7))),s('type.pair.prod'('type.infer.exc'(X3,X4),X5),'const.infer.failwith_2'(s(X4,X8),s(X5,X9)))))) )),
  inference(forward_demodulation,[],[f17429,f204])).
fof(f17429,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1,X9] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),X2),'type.pair.prod'('type.infer.exc'(X3,X4),X5)),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),X2),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),'const.infer.n_fresh_uvar_2'(s('type.num.num',X6),s('type.infer.infer_st'(X1),X7))))),s('type.pair.prod'('type.infer.exc'(X3,X4),X5),'const.infer.failwith_2'(s(X4,X8),s(X5,X9))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),X2),'type.pair.prod'('type.infer.exc'(X3,X4),X5)),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),happ(s(fun('type.infer.infer_st'(X1),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1))),happ(s(fun('type.num.num',fun('type.infer.infer_st'(X1),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)))),'const.infer.n_fresh_uvar_0'),s('type.num.num',X6))),s('type.infer.infer_st'(X1),X7))),s('type.pair.prod'('type.infer.exc'(X3,X4),X5),happ(s(fun(X5,'type.pair.prod'('type.infer.exc'(X3,X4),X5)),'const.infer.failwith_1'(s(X4,X8))),s(X5,X9)))))) )),
  inference(unit_resulting_resolution,[],[f204,f181,f212])).
fof(f17503,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1,X9] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),X2),'type.pair.prod'('type.infer.exc'('type.one.one',X3),X4)),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),'const.infer.n_fresh_uvar_2'(s('type.num.num',X5),s('type.infer.infer_st'(X1),X6))),s('type.pair.prod'('type.infer.exc'('type.one.one',X3),X4),'const.infer.guard_3'(s(bool,X7),s(X3,X8),s(X4,X9))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),X2),'type.pair.prod'('type.infer.exc'('type.one.one',X3),X4)),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),X2),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),'const.infer.n_fresh_uvar_2'(s('type.num.num',X5),s('type.infer.infer_st'(X1),X6))))),s('type.pair.prod'('type.infer.exc'('type.one.one',X3),X4),'const.infer.guard_3'(s(bool,X7),s(X3,X8),s(X4,X9)))))) )),
  inference(forward_demodulation,[],[f17502,f181])).
fof(f17502,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1,X9] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),X2),'type.pair.prod'('type.infer.exc'('type.one.one',X3),X4)),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),X2),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),'const.infer.n_fresh_uvar_2'(s('type.num.num',X5),s('type.infer.infer_st'(X1),X6))))),s('type.pair.prod'('type.infer.exc'('type.one.one',X3),X4),'const.infer.guard_3'(s(bool,X7),s(X3,X8),s(X4,X9))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),X2),'type.pair.prod'('type.infer.exc'('type.one.one',X3),X4)),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),happ(s(fun('type.infer.infer_st'(X1),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1))),happ(s(fun('type.num.num',fun('type.infer.infer_st'(X1),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)))),'const.infer.n_fresh_uvar_0'),s('type.num.num',X5))),s('type.infer.infer_st'(X1),X6))),s('type.pair.prod'('type.infer.exc'('type.one.one',X3),X4),'const.infer.guard_3'(s(bool,X7),s(X3,X8),s(X4,X9)))))) )),
  inference(forward_demodulation,[],[f17430,f183])).
fof(f17430,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1,X9] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),X2),'type.pair.prod'('type.infer.exc'('type.one.one',X3),X4)),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),X2),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),'const.infer.n_fresh_uvar_2'(s('type.num.num',X5),s('type.infer.infer_st'(X1),X6))))),s('type.pair.prod'('type.infer.exc'('type.one.one',X3),X4),'const.infer.guard_3'(s(bool,X7),s(X3,X8),s(X4,X9))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),X2),'type.pair.prod'('type.infer.exc'('type.one.one',X3),X4)),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),happ(s(fun('type.infer.infer_st'(X1),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1))),happ(s(fun('type.num.num',fun('type.infer.infer_st'(X1),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)))),'const.infer.n_fresh_uvar_0'),s('type.num.num',X5))),s('type.infer.infer_st'(X1),X6))),s('type.pair.prod'('type.infer.exc'('type.one.one',X3),X4),happ(s(fun(X4,'type.pair.prod'('type.infer.exc'('type.one.one',X3),X4)),'const.infer.guard_2'(s(bool,X7),s(X3,X8))),s(X4,X9)))))) )),
  inference(unit_resulting_resolution,[],[f183,f181,f212])).
fof(f16859,plain,(
  ( ! [X39,X37,X35,X43,X41,X38,X36,X34,X44,X42,X40] : (s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X41),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.apply_subst_2'(s('type.infer_t.infer_t',X42),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X43))) != s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X41),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.infer_t.infer_t',X41),'const.infer.Success_1'(s('type.infer_t.infer_t',X44))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),happ(s(fun(X37,'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'_dst_x0x1x0_3'(s(fun(X35,fun(X34,'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),X36),s(fun(X37,X35),X38),s(X34,X40))),s(X37,X39))))) | s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X43) = s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),happ(s(fun(X34,'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),happ(s(fun(X35,fun(X34,'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),X36),s(X35,happ(s(fun(X37,X35),X38),s(X37,X39))))),s(X34,X40)))) )),
  inference(superposition,[],[f172,f221])).
fof(f16858,plain,(
  ( ! [X30,X28,X26,X24,X33,X23,X31,X29,X27,X25,X32] : (s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X30),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.apply_subst_2'(s('type.infer_t.infer_t',X31),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X32))) != s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X30),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.infer_t.infer_t',X30),'const.infer.Success_1'(s('type.infer_t.infer_t',X33))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),happ(s(fun(X25,'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),happ(s(fun(X24,fun(X25,'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),X26),s(X24,happ(s(fun(X23,X24),X27),s(X23,X29))))),s(X25,X28))))) | s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X32) = s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),happ(s(fun(X23,'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'_dst_x0x1x0_3'(s(fun(X24,fun(X25,'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),X26),s(fun(X23,X24),X27),s(X25,X28))),s(X23,X29)))) )),
  inference(superposition,[],[f172,f221])).
fof(f16857,plain,(
  ( ! [X14,X21,X19,X17,X15,X22,X20,X18,X16] : (s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X19),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.apply_subst_2'(s('type.infer_t.infer_t',X20),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X21))) != s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X19),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.infer_t.infer_t',X19),'const.infer.Success_1'(s('type.infer_t.infer_t',X22))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),happ(s(fun(X15,'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X16),s(X15,happ(s(fun(X14,X15),X17),s(X14,X18))))))) | s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X21) = s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),happ(s(fun(X14,'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'_dst_x0x1_2'(s(fun(X15,'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X16),s(fun(X14,X15),X17))),s(X14,X18)))) )),
  inference(superposition,[],[f172,f206])).
fof(f16856,plain,(
  ( ! [X6,X12,X10,X8,X7,X5,X13,X11,X9] : (s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X10),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.apply_subst_2'(s('type.infer_t.infer_t',X11),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X12))) != s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X10),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.infer_t.infer_t',X10),'const.infer.Success_1'(s('type.infer_t.infer_t',X13))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),happ(s(fun(X7,'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'_dst_x0x1_2'(s(fun(X5,'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X6),s(fun(X7,X5),X8))),s(X7,X9))))) | s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X12) = s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),happ(s(fun(X5,'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X6),s(X5,happ(s(fun(X7,X5),X8),s(X7,X9)))))) )),
  inference(superposition,[],[f172,f206])).
fof(f16847,plain,(
  ( ! [X39,X37,X35,X43,X41,X38,X36,X34,X44,X42,X40] : (s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X41),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.infer_t.infer_t',X41),'const.infer.Success_1'(s('type.infer_t.infer_t',X43))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X44))) != s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X41),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.apply_subst_2'(s('type.infer_t.infer_t',X42),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),happ(s(fun(X37,'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'_dst_x0x1x0_3'(s(fun(X35,fun(X34,'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),X36),s(fun(X37,X35),X38),s(X34,X40))),s(X37,X39))))) | s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X44) = s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),happ(s(fun(X34,'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),happ(s(fun(X35,fun(X34,'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),X36),s(X35,happ(s(fun(X37,X35),X38),s(X37,X39))))),s(X34,X40)))) )),
  inference(superposition,[],[f172,f221])).
fof(f16846,plain,(
  ( ! [X30,X28,X26,X24,X33,X23,X31,X29,X27,X25,X32] : (s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X30),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.infer_t.infer_t',X30),'const.infer.Success_1'(s('type.infer_t.infer_t',X32))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X33))) != s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X30),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.apply_subst_2'(s('type.infer_t.infer_t',X31),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),happ(s(fun(X25,'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),happ(s(fun(X24,fun(X25,'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),X26),s(X24,happ(s(fun(X23,X24),X27),s(X23,X29))))),s(X25,X28))))) | s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X33) = s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),happ(s(fun(X23,'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'_dst_x0x1x0_3'(s(fun(X24,fun(X25,'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),X26),s(fun(X23,X24),X27),s(X25,X28))),s(X23,X29)))) )),
  inference(superposition,[],[f172,f221])).
fof(f16845,plain,(
  ( ! [X14,X21,X19,X17,X15,X22,X20,X18,X16] : (s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X19),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.infer_t.infer_t',X19),'const.infer.Success_1'(s('type.infer_t.infer_t',X21))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X22))) != s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X19),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.apply_subst_2'(s('type.infer_t.infer_t',X20),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),happ(s(fun(X15,'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X16),s(X15,happ(s(fun(X14,X15),X17),s(X14,X18))))))) | s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X22) = s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),happ(s(fun(X14,'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'_dst_x0x1_2'(s(fun(X15,'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X16),s(fun(X14,X15),X17))),s(X14,X18)))) )),
  inference(superposition,[],[f172,f206])).
fof(f16844,plain,(
  ( ! [X6,X12,X10,X8,X7,X5,X13,X11,X9] : (s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X10),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.infer_t.infer_t',X10),'const.infer.Success_1'(s('type.infer_t.infer_t',X12))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X13))) != s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X10),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.apply_subst_2'(s('type.infer_t.infer_t',X11),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),happ(s(fun(X7,'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'_dst_x0x1_2'(s(fun(X5,'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X6),s(fun(X7,X5),X8))),s(X7,X9))))) | s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X13) = s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),happ(s(fun(X5,'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X6),s(X5,happ(s(fun(X7,X5),X8),s(X7,X9)))))) )),
  inference(superposition,[],[f172,f206])).
fof(f15478,plain,(
  ( ! [X1457,X1459,X1461,X1463,X1464,X1466,X1458,X1460,X1462,X1465,X1467] : (s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X1465),'type.infer.infer_st'(X1457)),'const.pair.,_2'(s('type.infer.exc'('type.infer_t.infer_t',X1465),'const.infer.Success_1'(s('type.infer_t.infer_t',X1466))),s('type.infer.infer_st'(X1457),X1467))) != s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X1465),'type.infer.infer_st'(X1457)),'const.infer.fresh_uvar_1'(s('type.infer.infer_st'(X1457),happ(s(fun(X1461,'type.infer.infer_st'(X1457)),'_dst_x0x1x0_3'(s(fun(X1459,fun(X1458,'type.infer.infer_st'(X1457))),X1460),s(fun(X1461,X1459),X1462),s(X1458,X1464))),s(X1461,X1463))))) | s('type.infer_t.infer_t',X1466) = s('type.infer_t.infer_t','const.infer_t.Infer_Tuvar_1'(s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'(X1457),happ(s(fun(X1458,'type.infer.infer_st'(X1457)),happ(s(fun(X1459,fun(X1458,'type.infer.infer_st'(X1457))),X1460),s(X1459,happ(s(fun(X1461,X1459),X1462),s(X1461,X1463))))),s(X1458,X1464)))))))) )),
  inference(superposition,[],[f189,f221])).
fof(f15477,plain,(
  ( ! [X1449,X1451,X1453,X1455,X1447,X1456,X1448,X1450,X1452,X1454,X1446] : (s('type.infer.infer_st'(X1446),X1454) != s('type.infer.infer_st'(X1446),happ(s(fun(X1450,'type.infer.infer_st'(X1446)),'_dst_x0x1x0_3'(s(fun(X1448,fun(X1447,'type.infer.infer_st'(X1446))),X1449),s(fun(X1450,X1448),X1451),s(X1447,X1453))),s(X1450,X1452))) | s('type.pair.prod'('type.infer.exc'('type.num.num',X1455),'type.infer.infer_st'(X1446)),'const.infer.get_next_uvar_1'(s('type.infer.infer_st'(X1446),X1454))) = s('type.pair.prod'('type.infer.exc'('type.num.num',X1455),'type.infer.infer_st'(X1446)),'const.pair.,_2'(s('type.infer.exc'('type.num.num',X1455),'const.infer.Success_1'(s('type.num.num',X1456))),s('type.infer.infer_st'(X1446),happ(s(fun(X1447,'type.infer.infer_st'(X1446)),happ(s(fun(X1448,fun(X1447,'type.infer.infer_st'(X1446))),X1449),s(X1448,happ(s(fun(X1450,X1448),X1451),s(X1450,X1452))))),s(X1447,X1453))))) | s('type.num.num',X1456) != s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'(X1446),X1454)))) )),
  inference(superposition,[],[f188,f221])).
fof(f15476,plain,(
  ( ! [X1436,X1438,X1441,X1443,X1445,X1435,X1437,X1439,X1440,X1442,X1444] : (s('type.infer.infer_st'(X1435),X1443) != s('type.infer.infer_st'(X1435),happ(s(fun(X1439,'type.infer.infer_st'(X1435)),'_dst_x0x1x0_3'(s(fun(X1437,fun(X1436,'type.infer.infer_st'(X1435))),X1438),s(fun(X1439,X1437),X1440),s(X1436,X1442))),s(X1439,X1441))) | s('type.pair.prod'('type.infer.exc'('type.num.num',X1444),'type.infer.infer_st'(X1435)),'const.pair.,_2'(s('type.infer.exc'('type.num.num',X1444),'const.infer.Success_1'(s('type.num.num',X1445))),s('type.infer.infer_st'(X1435),X1443))) = s('type.pair.prod'('type.infer.exc'('type.num.num',X1444),'type.infer.infer_st'(X1435)),'const.infer.get_next_uvar_1'(s('type.infer.infer_st'(X1435),happ(s(fun(X1436,'type.infer.infer_st'(X1435)),happ(s(fun(X1437,fun(X1436,'type.infer.infer_st'(X1435))),X1438),s(X1437,happ(s(fun(X1439,X1437),X1440),s(X1439,X1441))))),s(X1436,X1442))))) | s('type.num.num',X1445) != s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'(X1435),happ(s(fun(X1436,'type.infer.infer_st'(X1435)),happ(s(fun(X1437,fun(X1436,'type.infer.infer_st'(X1435))),X1438),s(X1437,happ(s(fun(X1439,X1437),X1440),s(X1439,X1441))))),s(X1436,X1442)))))) )),
  inference(superposition,[],[f188,f221])).
fof(f15475,plain,(
  ( ! [X1434,X1428,X1430,X1424,X1426,X1433,X1427,X1429,X1431,X1425,X1432] : (s('type.pair.prod'('type.infer.exc'('type.num.num',X1432),'type.infer.infer_st'(X1424)),'const.infer.get_next_uvar_1'(s('type.infer.infer_st'(X1424),X1433))) != s('type.pair.prod'('type.infer.exc'('type.num.num',X1432),'type.infer.infer_st'(X1424)),'const.pair.,_2'(s('type.infer.exc'('type.num.num',X1432),'const.infer.Success_1'(s('type.num.num',X1434))),s('type.infer.infer_st'(X1424),happ(s(fun(X1428,'type.infer.infer_st'(X1424)),'_dst_x0x1x0_3'(s(fun(X1426,fun(X1425,'type.infer.infer_st'(X1424))),X1427),s(fun(X1428,X1426),X1429),s(X1425,X1431))),s(X1428,X1430))))) | s('type.infer.infer_st'(X1424),X1433) = s('type.infer.infer_st'(X1424),happ(s(fun(X1425,'type.infer.infer_st'(X1424)),happ(s(fun(X1426,fun(X1425,'type.infer.infer_st'(X1424))),X1427),s(X1426,happ(s(fun(X1428,X1426),X1429),s(X1428,X1430))))),s(X1425,X1431)))) )),
  inference(superposition,[],[f187,f221])).
fof(f15474,plain,(
  ( ! [X1416,X1418,X1420,X1422,X1414,X1417,X1419,X1421,X1423,X1413,X1415] : (s('type.pair.prod'('type.infer.exc'('type.num.num',X1421),'type.infer.infer_st'(X1413)),'const.pair.,_2'(s('type.infer.exc'('type.num.num',X1421),'const.infer.Success_1'(s('type.num.num',X1422))),s('type.infer.infer_st'(X1413),X1423))) != s('type.pair.prod'('type.infer.exc'('type.num.num',X1421),'type.infer.infer_st'(X1413)),'const.infer.get_next_uvar_1'(s('type.infer.infer_st'(X1413),happ(s(fun(X1417,'type.infer.infer_st'(X1413)),'_dst_x0x1x0_3'(s(fun(X1415,fun(X1414,'type.infer.infer_st'(X1413))),X1416),s(fun(X1417,X1415),X1418),s(X1414,X1420))),s(X1417,X1419))))) | s('type.infer.infer_st'(X1413),X1423) = s('type.infer.infer_st'(X1413),happ(s(fun(X1414,'type.infer.infer_st'(X1413)),happ(s(fun(X1415,fun(X1414,'type.infer.infer_st'(X1413))),X1416),s(X1415,happ(s(fun(X1417,X1415),X1418),s(X1417,X1419))))),s(X1414,X1420)))) )),
  inference(superposition,[],[f187,f221])).
fof(f15472,plain,(
  ( ! [X1393,X1395,X1397,X1399,X1391,X1400,X1392,X1394,X1396,X1398,X1401] : (s('type.pair.prod'('type.infer.exc'('type.num.num',X1399),'type.infer.infer_st'(X1391)),'const.pair.,_2'(s('type.infer.exc'('type.num.num',X1399),'const.infer.Success_1'(s('type.num.num',X1400))),s('type.infer.infer_st'(X1391),X1401))) != s('type.pair.prod'('type.infer.exc'('type.num.num',X1399),'type.infer.infer_st'(X1391)),'const.infer.get_next_uvar_1'(s('type.infer.infer_st'(X1391),happ(s(fun(X1395,'type.infer.infer_st'(X1391)),'_dst_x0x1x0_3'(s(fun(X1393,fun(X1392,'type.infer.infer_st'(X1391))),X1394),s(fun(X1395,X1393),X1396),s(X1392,X1398))),s(X1395,X1397))))) | s('type.num.num',X1400) = s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'(X1391),happ(s(fun(X1392,'type.infer.infer_st'(X1391)),happ(s(fun(X1393,fun(X1392,'type.infer.infer_st'(X1391))),X1394),s(X1393,happ(s(fun(X1395,X1393),X1396),s(X1395,X1397))))),s(X1392,X1398)))))) )),
  inference(superposition,[],[f186,f221])).
fof(f15468,plain,(
  ( ! [X1360,X1362,X1364,X1358,X1361,X1363,X1359] : (s(bool,'T_0') = s(bool,happ(s(fun('type.infer.infer_st'(bool),bool),'const.infer.infer_st_subst_0'),s('type.infer.infer_st'(bool),happ(s(fun(X1361,'type.infer.infer_st'(bool)),'_dst_x0x1x0_3'(s(fun(X1359,fun(X1358,'type.infer.infer_st'(bool))),X1360),s(fun(X1361,X1359),X1362),s(X1358,X1364))),s(X1361,X1363))))) | s(bool,'F_0') = s(bool,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(bool),happ(s(fun(X1358,'type.infer.infer_st'(bool)),happ(s(fun(X1359,fun(X1358,'type.infer.infer_st'(bool))),X1360),s(X1359,happ(s(fun(X1361,X1359),X1362),s(X1361,X1363))))),s(X1358,X1364)))))) )),
  inference(superposition,[],[f293,f221])).
fof(f15464,plain,(
  ( ! [X1321,X1323,X1325,X1317,X1319,X1320,X1322,X1324,X1326,X1316,X1318] : (s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X1323),'type.infer.infer_st'(X1324)),'const.infer.fresh_uvar_1'(s('type.infer.infer_st'(X1324),X1325))) != s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X1323),'type.infer.infer_st'(X1324)),'const.pair.,_2'(s('type.infer.exc'('type.infer_t.infer_t',X1323),'const.infer.Success_1'(s('type.infer_t.infer_t',happ(s(fun(X1319,'type.infer_t.infer_t'),'_dst_x0x1x0_3'(s(fun(X1317,fun(X1316,'type.infer_t.infer_t')),X1318),s(fun(X1319,X1317),X1320),s(X1316,X1322))),s(X1319,X1321))))),s('type.infer.infer_st'(X1324),X1326))) | s('type.infer_t.infer_t','const.infer_t.Infer_Tuvar_1'(s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'(X1324),X1325))))) = s('type.infer_t.infer_t',happ(s(fun(X1316,'type.infer_t.infer_t'),happ(s(fun(X1317,fun(X1316,'type.infer_t.infer_t')),X1318),s(X1317,happ(s(fun(X1319,X1317),X1320),s(X1319,X1321))))),s(X1316,X1322)))) )),
  inference(superposition,[],[f189,f221])).
fof(f15457,plain,(
  ( ! [X1267,X1265,X1258,X1262,X1260,X1266,X1264,X1259,X1268,X1263,X1261] : (s('type.pair.prod'('type.infer.exc'('type.num.num',X1265),'type.infer.infer_st'(X1266)),'const.infer.get_next_uvar_1'(s('type.infer.infer_st'(X1266),X1267))) != s('type.pair.prod'('type.infer.exc'('type.num.num',X1265),'type.infer.infer_st'(X1266)),'const.pair.,_2'(s('type.infer.exc'('type.num.num',X1265),'const.infer.Success_1'(s('type.num.num',happ(s(fun(X1261,'type.num.num'),'_dst_x0x1x0_3'(s(fun(X1259,fun(X1258,'type.num.num')),X1260),s(fun(X1261,X1259),X1262),s(X1258,X1264))),s(X1261,X1263))))),s('type.infer.infer_st'(X1266),X1268))) | s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'(X1266),X1267))) = s('type.num.num',happ(s(fun(X1258,'type.num.num'),happ(s(fun(X1259,fun(X1258,'type.num.num')),X1260),s(X1259,happ(s(fun(X1261,X1259),X1262),s(X1261,X1263))))),s(X1258,X1264)))) )),
  inference(superposition,[],[f186,f221])).
fof(f15397,plain,(
  ( ! [X685,X681,X683,X679,X684,X680,X682,X678] : (p(s(bool,happ(s(fun(X681,bool),'_dst_x0x1x0_3'(s(fun(X679,fun(X678,bool)),X680),s(fun(X681,X679),X682),s(X678,X684))),s(X681,X683)))) | s(bool,X685) = s(bool,happ(s(fun(X678,bool),happ(s(fun(X679,fun(X678,bool)),X680),s(X679,happ(s(fun(X681,X679),X682),s(X681,X683))))),s(X678,X684))) | s(bool,'T_0') = s(bool,X685)) )),
  inference(superposition,[],[f361,f221])).
fof(f15396,plain,(
  ( ! [X677,X673,X675,X671,X676,X672,X674] : (~p(s(bool,happ(s(fun(X674,bool),'_dst_x0x1x0_3'(s(fun(X672,fun(X671,bool)),X673),s(fun(X674,X672),X675),s(X671,X677))),s(X674,X676)))) | s(bool,'T_0') = s(bool,happ(s(fun(X671,bool),happ(s(fun(X672,fun(X671,bool)),X673),s(X672,happ(s(fun(X674,X672),X675),s(X674,X676))))),s(X671,X677)))) )),
  inference(superposition,[],[f274,f221])).
fof(f15391,plain,(
  ( ! [X633,X635,X629,X631,X627,X636,X638,X632,X634,X628,X630,X626,X637] : (~p(s(bool,happ(s(fun(X629,bool),'_dst_x0x1x0_3'(s(fun(X627,fun(X626,bool)),X628),s(fun(X629,X627),X630),s(X626,X632))),s(X629,X631)))) | s(X633,X634) != s(X633,X635) | s('type.pair.prod'('type.infer.exc'('type.one.one',X636),X633),'const.pair.,_2'(s('type.infer.exc'('type.one.one',X636),'const.infer.Success_1'(s('type.one.one',X638))),s(X633,X635))) = s('type.pair.prod'('type.infer.exc'('type.one.one',X636),X633),'const.infer.guard_3'(s(bool,happ(s(fun(X626,bool),happ(s(fun(X627,fun(X626,bool)),X628),s(X627,happ(s(fun(X629,X627),X630),s(X629,X631))))),s(X626,X632))),s(X636,X637),s(X633,X634)))) )),
  inference(superposition,[],[f252,f221])).
fof(f15389,plain,(
  ( ! [X606,X600,X602,X610,X609,X605,X607,X601,X603,X611,X612,X608,X604] : (p(s(bool,happ(s(fun(X603,bool),'_dst_x0x1x0_3'(s(fun(X601,fun(X600,bool)),X602),s(fun(X603,X601),X604),s(X600,X606))),s(X603,X605)))) | s('type.pair.prod'('type.infer.exc'('type.one.one',X607),X608),'const.pair.,_2'(s('type.infer.exc'('type.one.one',X607),'const.infer.Success_1'(s('type.one.one',X611))),s(X608,X612))) != s('type.pair.prod'('type.infer.exc'('type.one.one',X607),X608),'const.infer.guard_3'(s(bool,happ(s(fun(X600,bool),happ(s(fun(X601,fun(X600,bool)),X602),s(X601,happ(s(fun(X603,X601),X604),s(X603,X605))))),s(X600,X606))),s(X607,X609),s(X608,X610)))) )),
  inference(superposition,[],[f195,f221])).
fof(f15383,plain,(
  ( ! [X546,X553,X555,X549,X551,X545,X547,X552,X554,X548,X550] : (s('type.pair.prod'('type.infer.exc'(X545,X553),X545),'const.infer.st_ex_return_2'(s(X545,X554),s(X545,X555))) != s('type.pair.prod'('type.infer.exc'(X545,X553),X545),'const.infer.read_1'(s(X545,happ(s(fun(X549,X545),'_dst_x0x1x0_3'(s(fun(X547,fun(X546,X545)),X548),s(fun(X549,X547),X550),s(X546,X552))),s(X549,X551))))) | s(X545,X555) = s(X545,happ(s(fun(X546,X545),happ(s(fun(X547,fun(X546,X545)),X548),s(X547,happ(s(fun(X549,X547),X550),s(X549,X551))))),s(X546,X552)))) )),
  inference(superposition,[],[f1740,f221])).
fof(f15381,plain,(
  ( ! [X532,X528,X530,X524,X526,X533,X529,X531,X525,X527,X523] : (s('type.pair.prod'('type.infer.exc'(X523,X531),X523),'const.infer.read_1'(s(X523,X532))) != s('type.pair.prod'('type.infer.exc'(X523,X531),X523),'const.infer.st_ex_return_2'(s(X523,X533),s(X523,happ(s(fun(X527,X523),'_dst_x0x1x0_3'(s(fun(X525,fun(X524,X523)),X526),s(fun(X527,X525),X528),s(X524,X530))),s(X527,X529))))) | s(X523,X532) = s(X523,happ(s(fun(X524,X523),happ(s(fun(X525,fun(X524,X523)),X526),s(X525,happ(s(fun(X527,X525),X528),s(X527,X529))))),s(X524,X530)))) )),
  inference(superposition,[],[f1740,f221])).
fof(f15380,plain,(
  ( ! [X520,X522,X516,X518,X512,X514,X521,X517,X519,X513,X515] : (s('type.pair.prod'('type.infer.exc'(X512,X520),X512),'const.infer.st_ex_return_2'(s(X512,X521),s(X512,X522))) != s('type.pair.prod'('type.infer.exc'(X512,X520),X512),'const.infer.read_1'(s(X512,happ(s(fun(X516,X512),'_dst_x0x1x0_3'(s(fun(X514,fun(X513,X512)),X515),s(fun(X516,X514),X517),s(X513,X519))),s(X516,X518))))) | s(X512,X521) = s(X512,happ(s(fun(X513,X512),happ(s(fun(X514,fun(X513,X512)),X515),s(X514,happ(s(fun(X516,X514),X517),s(X516,X518))))),s(X513,X519)))) )),
  inference(superposition,[],[f1426,f221])).
fof(f15379,plain,(
  ( ! [X509,X511,X505,X507,X502,X508,X510,X504,X506,X501,X503] : (s('type.pair.prod'('type.infer.exc'(X501,X509),X501),'const.infer.read_1'(s(X501,X510))) != s('type.pair.prod'('type.infer.exc'(X501,X509),X501),'const.infer.st_ex_return_2'(s(X501,happ(s(fun(X505,X501),'_dst_x0x1x0_3'(s(fun(X503,fun(X502,X501)),X504),s(fun(X505,X503),X506),s(X502,X508))),s(X505,X507))),s(X501,X511))) | s(X501,X510) = s(X501,happ(s(fun(X502,X501),happ(s(fun(X503,fun(X502,X501)),X504),s(X503,happ(s(fun(X505,X503),X506),s(X505,X507))))),s(X502,X508)))) )),
  inference(superposition,[],[f1426,f221])).
fof(f15370,plain,(
  ( ! [X391,X397,X399,X393,X395,X401,X403,X390,X396,X398,X392,X394,X404,X400,X402] : (s('type.pair.prod'('type.infer.exc'(X398,'type.list.list'('type.string.char')),X390),'const.infer.lookup_st_ex_4'(s(fun(X400,'type.list.list'('type.string.char')),X401),s(X400,X402),s('type.list.list'('type.pair.prod'(X400,X398)),X403),s(X390,X404))) != s('type.pair.prod'('type.infer.exc'(X398,'type.list.list'('type.string.char')),X390),'const.pair.,_2'(s('type.infer.exc'(X398,'type.list.list'('type.string.char')),'const.infer.Success_1'(s(X398,X399))),s(X390,happ(s(fun(X394,X390),'_dst_x0x1x0_3'(s(fun(X392,fun(X391,X390)),X393),s(fun(X394,X392),X395),s(X391,X397))),s(X394,X396))))) | s(X390,X404) = s(X390,happ(s(fun(X391,X390),happ(s(fun(X392,fun(X391,X390)),X393),s(X392,happ(s(fun(X394,X392),X395),s(X394,X396))))),s(X391,X397)))) )),
  inference(superposition,[],[f217,f221])).
fof(f15368,plain,(
  ( ! [X364,X366,X360,X362,X372,X374,X368,X370,X365,X367,X361,X363,X373,X369,X371] : (s('type.pair.prod'('type.infer.exc'(X368,'type.list.list'('type.string.char')),X360),'const.pair.,_2'(s('type.infer.exc'(X368,'type.list.list'('type.string.char')),'const.infer.Success_1'(s(X368,X369))),s(X360,X370))) != s('type.pair.prod'('type.infer.exc'(X368,'type.list.list'('type.string.char')),X360),'const.infer.lookup_st_ex_4'(s(fun(X371,'type.list.list'('type.string.char')),X372),s(X371,X373),s('type.list.list'('type.pair.prod'(X371,X368)),X374),s(X360,happ(s(fun(X364,X360),'_dst_x0x1x0_3'(s(fun(X362,fun(X361,X360)),X363),s(fun(X364,X362),X365),s(X361,X367))),s(X364,X366))))) | s(X360,X370) = s(X360,happ(s(fun(X361,X360),happ(s(fun(X362,fun(X361,X360)),X363),s(X362,happ(s(fun(X364,X362),X365),s(X364,X366))))),s(X361,X367)))) )),
  inference(superposition,[],[f217,f221])).
fof(f15366,plain,(
  ( ! [X344,X333,X335,X331,X341,X343,X337,X339,X332,X334,X330,X340,X342,X336,X338] : (s('type.pair.prod'('type.infer.exc'(X338,'type.list.list'('type.string.char')),X330),'const.infer.flookup_st_ex_4'(s(fun(X340,'type.list.list'('type.string.char')),X341),s(X340,X342),s('type.finite_map.fmap'(X340,X338),X343),s(X330,X344))) != s('type.pair.prod'('type.infer.exc'(X338,'type.list.list'('type.string.char')),X330),'const.pair.,_2'(s('type.infer.exc'(X338,'type.list.list'('type.string.char')),'const.infer.Success_1'(s(X338,X339))),s(X330,happ(s(fun(X334,X330),'_dst_x0x1x0_3'(s(fun(X332,fun(X331,X330)),X333),s(fun(X334,X332),X335),s(X331,X337))),s(X334,X336))))) | s(X330,X344) = s(X330,happ(s(fun(X331,X330),happ(s(fun(X332,fun(X331,X330)),X333),s(X332,happ(s(fun(X334,X332),X335),s(X334,X336))))),s(X331,X337)))) )),
  inference(superposition,[],[f214,f221])).
fof(f15364,plain,(
  ( ! [X313,X300,X302,X308,X310,X304,X306,X312,X314,X301,X303,X309,X311,X305,X307] : (s('type.pair.prod'('type.infer.exc'(X308,'type.list.list'('type.string.char')),X300),'const.pair.,_2'(s('type.infer.exc'(X308,'type.list.list'('type.string.char')),'const.infer.Success_1'(s(X308,X309))),s(X300,X310))) != s('type.pair.prod'('type.infer.exc'(X308,'type.list.list'('type.string.char')),X300),'const.infer.flookup_st_ex_4'(s(fun(X311,'type.list.list'('type.string.char')),X312),s(X311,X313),s('type.finite_map.fmap'(X311,X308),X314),s(X300,happ(s(fun(X304,X300),'_dst_x0x1x0_3'(s(fun(X302,fun(X301,X300)),X303),s(fun(X304,X302),X305),s(X301,X307))),s(X304,X306))))) | s(X300,X310) = s(X300,happ(s(fun(X301,X300),happ(s(fun(X302,fun(X301,X300)),X303),s(X302,happ(s(fun(X304,X302),X305),s(X304,X306))))),s(X301,X307)))) )),
  inference(superposition,[],[f214,f221])).
fof(f15362,plain,(
  ( ! [X280,X282,X277,X279,X273,X275,X281,X283,X276,X278,X272,X274,X284] : (s(X272,X280) != s(X272,happ(s(fun(X276,X272),'_dst_x0x1x0_3'(s(fun(X274,fun(X273,X272)),X275),s(fun(X276,X274),X277),s(X273,X279))),s(X276,X278))) | s(X281,X282) != s(X281,X283) | s('type.pair.prod'('type.infer.exc'(X272,X284),X281),'const.pair.,_2'(s('type.infer.exc'(X272,X284),'const.infer.Success_1'(s(X272,X280))),s(X281,X283))) = s('type.pair.prod'('type.infer.exc'(X272,X284),X281),'const.infer.st_ex_return_2'(s(X272,happ(s(fun(X273,X272),happ(s(fun(X274,fun(X273,X272)),X275),s(X274,happ(s(fun(X276,X274),X277),s(X276,X278))))),s(X273,X279))),s(X281,X282)))) )),
  inference(superposition,[],[f212,f221])).
fof(f15361,plain,(
  ( ! [X261,X263,X259,X269,X271,X265,X267,X260,X262,X268,X270,X264,X266] : (s(X259,X267) != s(X259,happ(s(fun(X263,X259),'_dst_x0x1x0_3'(s(fun(X261,fun(X260,X259)),X262),s(fun(X263,X261),X264),s(X260,X266))),s(X263,X265))) | s(X268,X269) != s(X268,X270) | s('type.pair.prod'('type.infer.exc'(X259,X271),X268),'const.infer.st_ex_return_2'(s(X259,X267),s(X268,X269))) = s('type.pair.prod'('type.infer.exc'(X259,X271),X268),'const.pair.,_2'(s('type.infer.exc'(X259,X271),'const.infer.Success_1'(s(X259,happ(s(fun(X260,X259),happ(s(fun(X261,fun(X260,X259)),X262),s(X261,happ(s(fun(X263,X261),X264),s(X263,X265))))),s(X260,X266))))),s(X268,X270)))) )),
  inference(superposition,[],[f212,f221])).
fof(f15360,plain,(
  ( ! [X255,X253,X257,X249,X251,X246,X254,X256,X258,X250,X248,X252,X247] : (s('type.pair.prod'('type.infer.exc'(X254,X255),X246),'const.infer.st_ex_return_2'(s(X254,X256),s(X246,X257))) != s('type.pair.prod'('type.infer.exc'(X254,X255),X246),'const.pair.,_2'(s('type.infer.exc'(X254,X255),'const.infer.Success_1'(s(X254,X258))),s(X246,happ(s(fun(X250,X246),'_dst_x0x1x0_3'(s(fun(X248,fun(X247,X246)),X249),s(fun(X250,X248),X251),s(X247,X253))),s(X250,X252))))) | s(X246,X257) = s(X246,happ(s(fun(X247,X246),happ(s(fun(X248,fun(X247,X246)),X249),s(X248,happ(s(fun(X250,X248),X251),s(X250,X252))))),s(X247,X253)))) )),
  inference(superposition,[],[f211,f221])).
fof(f15359,plain,(
  ( ! [X243,X241,X239,X237,X235,X233,X244,X242,X240,X238,X236,X234,X245] : (s('type.pair.prod'('type.infer.exc'(X241,X242),X233),'const.pair.,_2'(s('type.infer.exc'(X241,X242),'const.infer.Success_1'(s(X241,X244))),s(X233,X245))) != s('type.pair.prod'('type.infer.exc'(X241,X242),X233),'const.infer.st_ex_return_2'(s(X241,X243),s(X233,happ(s(fun(X237,X233),'_dst_x0x1x0_3'(s(fun(X235,fun(X234,X233)),X236),s(fun(X237,X235),X238),s(X234,X240))),s(X237,X239))))) | s(X233,X245) = s(X233,happ(s(fun(X234,X233),happ(s(fun(X235,fun(X234,X233)),X236),s(X235,happ(s(fun(X237,X235),X238),s(X237,X239))))),s(X234,X240)))) )),
  inference(superposition,[],[f211,f221])).
fof(f15354,plain,(
  ( ! [X177,X175,X173,X171,X169,X180,X178,X176,X174,X172,X170,X168,X179] : (s('type.pair.prod'('type.infer.exc'(X168,X176),X177),'const.pair.,_2'(s('type.infer.exc'(X168,X176),'const.infer.Success_1'(s(X168,X179))),s(X177,X180))) != s('type.pair.prod'('type.infer.exc'(X168,X176),X177),'const.infer.st_ex_return_2'(s(X168,happ(s(fun(X172,X168),'_dst_x0x1x0_3'(s(fun(X170,fun(X169,X168)),X171),s(fun(X172,X170),X173),s(X169,X175))),s(X172,X174))),s(X177,X178))) | s(X168,X179) = s(X168,happ(s(fun(X169,X168),happ(s(fun(X170,fun(X169,X168)),X171),s(X170,happ(s(fun(X172,X170),X173),s(X172,X174))))),s(X169,X175)))) )),
  inference(superposition,[],[f210,f221])).
fof(f15353,plain,(
  ( ! [X158,X156,X167,X165,X163,X161,X159,X157,X155,X166,X164,X162,X160] : (s('type.pair.prod'('type.infer.exc'(X155,X163),X164),'const.infer.st_ex_return_2'(s(X155,X165),s(X164,X166))) != s('type.pair.prod'('type.infer.exc'(X155,X163),X164),'const.pair.,_2'(s('type.infer.exc'(X155,X163),'const.infer.Success_1'(s(X155,happ(s(fun(X159,X155),'_dst_x0x1x0_3'(s(fun(X157,fun(X156,X155)),X158),s(fun(X159,X157),X160),s(X156,X162))),s(X159,X161))))),s(X164,X167))) | s(X155,X165) = s(X155,happ(s(fun(X156,X155),happ(s(fun(X157,fun(X156,X155)),X158),s(X157,happ(s(fun(X159,X157),X160),s(X159,X161))))),s(X156,X162)))) )),
  inference(superposition,[],[f210,f221])).
fof(f15347,plain,(
  ( ! [X94,X92,X90,X88,X97,X87,X95,X93,X91,X89,X98,X96,X86] : (s('type.pair.prod'('type.infer.exc'('type.one.one',X94),X86),'const.infer.guard_3'(s(bool,X95),s(X94,X96),s(X86,X97))) != s('type.pair.prod'('type.infer.exc'('type.one.one',X94),X86),'const.pair.,_2'(s('type.infer.exc'('type.one.one',X94),'const.infer.Success_1'(s('type.one.one',X98))),s(X86,happ(s(fun(X90,X86),'_dst_x0x1x0_3'(s(fun(X88,fun(X87,X86)),X89),s(fun(X90,X88),X91),s(X87,X93))),s(X90,X92))))) | s(X86,X97) = s(X86,happ(s(fun(X87,X86),happ(s(fun(X88,fun(X87,X86)),X89),s(X88,happ(s(fun(X90,X88),X91),s(X90,X92))))),s(X87,X93)))) )),
  inference(superposition,[],[f197,f221])).
fof(f15346,plain,(
  ( ! [X80,X78,X76,X74,X85,X83,X81,X79,X77,X75,X73,X84,X82] : (s('type.pair.prod'('type.infer.exc'('type.one.one',X81),X73),'const.pair.,_2'(s('type.infer.exc'('type.one.one',X81),'const.infer.Success_1'(s('type.one.one',X84))),s(X73,X85))) != s('type.pair.prod'('type.infer.exc'('type.one.one',X81),X73),'const.infer.guard_3'(s(bool,X82),s(X81,X83),s(X73,happ(s(fun(X77,X73),'_dst_x0x1x0_3'(s(fun(X75,fun(X74,X73)),X76),s(fun(X77,X75),X78),s(X74,X80))),s(X77,X79))))) | s(X73,X85) = s(X73,happ(s(fun(X74,X73),happ(s(fun(X75,fun(X74,X73)),X76),s(X75,happ(s(fun(X77,X75),X78),s(X77,X79))))),s(X74,X80)))) )),
  inference(superposition,[],[f197,f221])).
fof(f15339,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1,X9] : (s(X8,happ(s(fun(X0,X8),X9),s(X0,happ(s(fun(X4,X0),'_dst_x0x1x0_3'(s(fun(X2,fun(X1,X0)),X3),s(fun(X4,X2),X5),s(X1,X7))),s(X4,X6))))) = s(X8,happ(s(fun(X1,X8),'_dst_x0x1_2'(s(fun(X0,X8),X9),s(fun(X1,X0),happ(s(fun(X2,fun(X1,X0)),X3),s(X2,happ(s(fun(X4,X2),X5),s(X4,X6))))))),s(X1,X7)))) )),
  inference(superposition,[],[f206,f221])).
fof(f15337,plain,(
  ( ! [X1457,X1449,X1451,X1453,X1455,X1447,X1456,X1448,X1450,X1452,X1454] : (s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X1455),'type.infer.infer_st'(X1447)),'const.pair.,_2'(s('type.infer.exc'('type.infer_t.infer_t',X1455),'const.infer.Success_1'(s('type.infer_t.infer_t',X1456))),s('type.infer.infer_st'(X1447),X1457))) != s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X1455),'type.infer.infer_st'(X1447)),'const.infer.fresh_uvar_1'(s('type.infer.infer_st'(X1447),happ(s(fun(X1450,'type.infer.infer_st'(X1447)),happ(s(fun(X1449,fun(X1450,'type.infer.infer_st'(X1447))),X1451),s(X1449,happ(s(fun(X1448,X1449),X1452),s(X1448,X1454))))),s(X1450,X1453))))) | s('type.infer_t.infer_t',X1456) = s('type.infer_t.infer_t','const.infer_t.Infer_Tuvar_1'(s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'(X1447),happ(s(fun(X1448,'type.infer.infer_st'(X1447)),'_dst_x0x1x0_3'(s(fun(X1449,fun(X1450,'type.infer.infer_st'(X1447))),X1451),s(fun(X1448,X1449),X1452),s(X1450,X1453))),s(X1448,X1454)))))))) )),
  inference(superposition,[],[f189,f221])).
fof(f15336,plain,(
  ( ! [X1436,X1438,X1441,X1443,X1445,X1437,X1439,X1440,X1442,X1444,X1446] : (s('type.infer.infer_st'(X1436),X1444) != s('type.infer.infer_st'(X1436),happ(s(fun(X1439,'type.infer.infer_st'(X1436)),happ(s(fun(X1438,fun(X1439,'type.infer.infer_st'(X1436))),X1440),s(X1438,happ(s(fun(X1437,X1438),X1441),s(X1437,X1443))))),s(X1439,X1442))) | s('type.pair.prod'('type.infer.exc'('type.num.num',X1445),'type.infer.infer_st'(X1436)),'const.infer.get_next_uvar_1'(s('type.infer.infer_st'(X1436),X1444))) = s('type.pair.prod'('type.infer.exc'('type.num.num',X1445),'type.infer.infer_st'(X1436)),'const.pair.,_2'(s('type.infer.exc'('type.num.num',X1445),'const.infer.Success_1'(s('type.num.num',X1446))),s('type.infer.infer_st'(X1436),happ(s(fun(X1437,'type.infer.infer_st'(X1436)),'_dst_x0x1x0_3'(s(fun(X1438,fun(X1439,'type.infer.infer_st'(X1436))),X1440),s(fun(X1437,X1438),X1441),s(X1439,X1442))),s(X1437,X1443))))) | s('type.num.num',X1446) != s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'(X1436),X1444)))) )),
  inference(superposition,[],[f188,f221])).
fof(f15335,plain,(
  ( ! [X1434,X1428,X1430,X1426,X1433,X1427,X1429,X1431,X1425,X1435,X1432] : (s('type.infer.infer_st'(X1425),X1433) != s('type.infer.infer_st'(X1425),happ(s(fun(X1428,'type.infer.infer_st'(X1425)),happ(s(fun(X1427,fun(X1428,'type.infer.infer_st'(X1425))),X1429),s(X1427,happ(s(fun(X1426,X1427),X1430),s(X1426,X1432))))),s(X1428,X1431))) | s('type.pair.prod'('type.infer.exc'('type.num.num',X1434),'type.infer.infer_st'(X1425)),'const.pair.,_2'(s('type.infer.exc'('type.num.num',X1434),'const.infer.Success_1'(s('type.num.num',X1435))),s('type.infer.infer_st'(X1425),X1433))) = s('type.pair.prod'('type.infer.exc'('type.num.num',X1434),'type.infer.infer_st'(X1425)),'const.infer.get_next_uvar_1'(s('type.infer.infer_st'(X1425),happ(s(fun(X1426,'type.infer.infer_st'(X1425)),'_dst_x0x1x0_3'(s(fun(X1427,fun(X1428,'type.infer.infer_st'(X1425))),X1429),s(fun(X1426,X1427),X1430),s(X1428,X1431))),s(X1426,X1432))))) | s('type.num.num',X1435) != s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'(X1425),happ(s(fun(X1426,'type.infer.infer_st'(X1425)),'_dst_x0x1x0_3'(s(fun(X1427,fun(X1428,'type.infer.infer_st'(X1425))),X1429),s(fun(X1426,X1427),X1430),s(X1428,X1431))),s(X1426,X1432)))))) )),
  inference(superposition,[],[f188,f221])).
fof(f15334,plain,(
  ( ! [X1424,X1416,X1418,X1422,X1420,X1414,X1417,X1419,X1421,X1423,X1415] : (s('type.pair.prod'('type.infer.exc'('type.num.num',X1422),'type.infer.infer_st'(X1414)),'const.infer.get_next_uvar_1'(s('type.infer.infer_st'(X1414),X1423))) != s('type.pair.prod'('type.infer.exc'('type.num.num',X1422),'type.infer.infer_st'(X1414)),'const.pair.,_2'(s('type.infer.exc'('type.num.num',X1422),'const.infer.Success_1'(s('type.num.num',X1424))),s('type.infer.infer_st'(X1414),happ(s(fun(X1417,'type.infer.infer_st'(X1414)),happ(s(fun(X1416,fun(X1417,'type.infer.infer_st'(X1414))),X1418),s(X1416,happ(s(fun(X1415,X1416),X1419),s(X1415,X1421))))),s(X1417,X1420))))) | s('type.infer.infer_st'(X1414),X1423) = s('type.infer.infer_st'(X1414),happ(s(fun(X1415,'type.infer.infer_st'(X1414)),'_dst_x0x1x0_3'(s(fun(X1416,fun(X1417,'type.infer.infer_st'(X1414))),X1418),s(fun(X1415,X1416),X1419),s(X1417,X1420))),s(X1415,X1421)))) )),
  inference(superposition,[],[f187,f221])).
fof(f15333,plain,(
  ( ! [X1407,X1408,X1410,X1412,X1404,X1406,X1409,X1411,X1413,X1403,X1405] : (s('type.pair.prod'('type.infer.exc'('type.num.num',X1411),'type.infer.infer_st'(X1403)),'const.pair.,_2'(s('type.infer.exc'('type.num.num',X1411),'const.infer.Success_1'(s('type.num.num',X1412))),s('type.infer.infer_st'(X1403),X1413))) != s('type.pair.prod'('type.infer.exc'('type.num.num',X1411),'type.infer.infer_st'(X1403)),'const.infer.get_next_uvar_1'(s('type.infer.infer_st'(X1403),happ(s(fun(X1406,'type.infer.infer_st'(X1403)),happ(s(fun(X1405,fun(X1406,'type.infer.infer_st'(X1403))),X1407),s(X1405,happ(s(fun(X1404,X1405),X1408),s(X1404,X1410))))),s(X1406,X1409))))) | s('type.infer.infer_st'(X1403),X1413) = s('type.infer.infer_st'(X1403),happ(s(fun(X1404,'type.infer.infer_st'(X1403)),'_dst_x0x1x0_3'(s(fun(X1405,fun(X1406,'type.infer.infer_st'(X1403))),X1407),s(fun(X1404,X1405),X1408),s(X1406,X1409))),s(X1404,X1410)))) )),
  inference(superposition,[],[f187,f221])).
fof(f15331,plain,(
  ( ! [X1385,X1387,X1389,X1391,X1381,X1383,X1384,X1386,X1388,X1390,X1382] : (s('type.pair.prod'('type.infer.exc'('type.num.num',X1389),'type.infer.infer_st'(X1381)),'const.pair.,_2'(s('type.infer.exc'('type.num.num',X1389),'const.infer.Success_1'(s('type.num.num',X1390))),s('type.infer.infer_st'(X1381),X1391))) != s('type.pair.prod'('type.infer.exc'('type.num.num',X1389),'type.infer.infer_st'(X1381)),'const.infer.get_next_uvar_1'(s('type.infer.infer_st'(X1381),happ(s(fun(X1384,'type.infer.infer_st'(X1381)),happ(s(fun(X1383,fun(X1384,'type.infer.infer_st'(X1381))),X1385),s(X1383,happ(s(fun(X1382,X1383),X1386),s(X1382,X1388))))),s(X1384,X1387))))) | s('type.num.num',X1390) = s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'(X1381),happ(s(fun(X1382,'type.infer.infer_st'(X1381)),'_dst_x0x1x0_3'(s(fun(X1383,fun(X1384,'type.infer.infer_st'(X1381))),X1385),s(fun(X1382,X1383),X1386),s(X1384,X1387))),s(X1382,X1388)))))) )),
  inference(superposition,[],[f186,f221])).
fof(f15327,plain,(
  ( ! [X1352,X1354,X1348,X1350,X1353,X1349,X1351] : (s(bool,'T_0') = s(bool,happ(s(fun('type.infer.infer_st'(bool),bool),'const.infer.infer_st_subst_0'),s('type.infer.infer_st'(bool),happ(s(fun(X1350,'type.infer.infer_st'(bool)),happ(s(fun(X1349,fun(X1350,'type.infer.infer_st'(bool))),X1351),s(X1349,happ(s(fun(X1348,X1349),X1352),s(X1348,X1354))))),s(X1350,X1353))))) | s(bool,'F_0') = s(bool,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(bool),happ(s(fun(X1348,'type.infer.infer_st'(bool)),'_dst_x0x1x0_3'(s(fun(X1349,fun(X1350,'type.infer.infer_st'(bool))),X1351),s(fun(X1348,X1349),X1352),s(X1350,X1353))),s(X1348,X1354)))))) )),
  inference(superposition,[],[f293,f221])).
fof(f15323,plain,(
  ( ! [X1310,X1313,X1315,X1307,X1309,X1311,X1312,X1314,X1316,X1306,X1308] : (s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X1313),'type.infer.infer_st'(X1314)),'const.infer.fresh_uvar_1'(s('type.infer.infer_st'(X1314),X1315))) != s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X1313),'type.infer.infer_st'(X1314)),'const.pair.,_2'(s('type.infer.exc'('type.infer_t.infer_t',X1313),'const.infer.Success_1'(s('type.infer_t.infer_t',happ(s(fun(X1308,'type.infer_t.infer_t'),happ(s(fun(X1307,fun(X1308,'type.infer_t.infer_t')),X1309),s(X1307,happ(s(fun(X1306,X1307),X1310),s(X1306,X1312))))),s(X1308,X1311))))),s('type.infer.infer_st'(X1314),X1316))) | s('type.infer_t.infer_t','const.infer_t.Infer_Tuvar_1'(s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'(X1314),X1315))))) = s('type.infer_t.infer_t',happ(s(fun(X1306,'type.infer_t.infer_t'),'_dst_x0x1x0_3'(s(fun(X1307,fun(X1308,'type.infer_t.infer_t')),X1309),s(fun(X1306,X1307),X1310),s(X1308,X1311))),s(X1306,X1312)))) )),
  inference(superposition,[],[f189,f221])).
fof(f15317,plain,(
  ( ! [X1258,X1256,X1262,X1260,X1254,X1252,X1259,X1257,X1261,X1255,X1253] : (s('type.pair.prod'('type.infer.exc'('type.num.num',X1259),'type.infer.infer_st'(X1260)),'const.infer.get_next_uvar_1'(s('type.infer.infer_st'(X1260),X1261))) != s('type.pair.prod'('type.infer.exc'('type.num.num',X1259),'type.infer.infer_st'(X1260)),'const.pair.,_2'(s('type.infer.exc'('type.num.num',X1259),'const.infer.Success_1'(s('type.num.num',happ(s(fun(X1254,'type.num.num'),happ(s(fun(X1253,fun(X1254,'type.num.num')),X1255),s(X1253,happ(s(fun(X1252,X1253),X1256),s(X1252,X1258))))),s(X1254,X1257))))),s('type.infer.infer_st'(X1260),X1262))) | s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'(X1260),X1261))) = s('type.num.num',happ(s(fun(X1252,'type.num.num'),'_dst_x0x1x0_3'(s(fun(X1253,fun(X1254,'type.num.num')),X1255),s(fun(X1252,X1253),X1256),s(X1254,X1257))),s(X1252,X1258)))) )),
  inference(superposition,[],[f186,f221])).
fof(f15258,plain,(
  ( ! [X685,X681,X683,X679,X684,X680,X682,X678] : (p(s(bool,happ(s(fun(X680,bool),happ(s(fun(X679,fun(X680,bool)),X681),s(X679,happ(s(fun(X678,X679),X682),s(X678,X684))))),s(X680,X683)))) | s(bool,X685) = s(bool,happ(s(fun(X678,bool),'_dst_x0x1x0_3'(s(fun(X679,fun(X680,bool)),X681),s(fun(X678,X679),X682),s(X680,X683))),s(X678,X684))) | s(bool,'T_0') = s(bool,X685)) )),
  inference(superposition,[],[f361,f221])).
fof(f15257,plain,(
  ( ! [X677,X673,X675,X671,X676,X672,X674] : (~p(s(bool,happ(s(fun(X673,bool),happ(s(fun(X672,fun(X673,bool)),X674),s(X672,happ(s(fun(X671,X672),X675),s(X671,X677))))),s(X673,X676)))) | s(bool,'T_0') = s(bool,happ(s(fun(X671,bool),'_dst_x0x1x0_3'(s(fun(X672,fun(X673,bool)),X674),s(fun(X671,X672),X675),s(X673,X676))),s(X671,X677)))) )),
  inference(superposition,[],[f274,f221])).
fof(f15252,plain,(
  ( ! [X633,X635,X629,X631,X627,X636,X638,X632,X634,X628,X630,X626,X637] : (~p(s(bool,happ(s(fun(X628,bool),happ(s(fun(X627,fun(X628,bool)),X629),s(X627,happ(s(fun(X626,X627),X630),s(X626,X632))))),s(X628,X631)))) | s(X633,X634) != s(X633,X635) | s('type.pair.prod'('type.infer.exc'('type.one.one',X636),X633),'const.pair.,_2'(s('type.infer.exc'('type.one.one',X636),'const.infer.Success_1'(s('type.one.one',X638))),s(X633,X635))) = s('type.pair.prod'('type.infer.exc'('type.one.one',X636),X633),'const.infer.guard_3'(s(bool,happ(s(fun(X626,bool),'_dst_x0x1x0_3'(s(fun(X627,fun(X628,bool)),X629),s(fun(X626,X627),X630),s(X628,X631))),s(X626,X632))),s(X636,X637),s(X633,X634)))) )),
  inference(superposition,[],[f252,f221])).
fof(f15250,plain,(
  ( ! [X606,X600,X602,X610,X609,X605,X607,X601,X603,X611,X612,X608,X604] : (p(s(bool,happ(s(fun(X602,bool),happ(s(fun(X601,fun(X602,bool)),X603),s(X601,happ(s(fun(X600,X601),X604),s(X600,X606))))),s(X602,X605)))) | s('type.pair.prod'('type.infer.exc'('type.one.one',X607),X608),'const.pair.,_2'(s('type.infer.exc'('type.one.one',X607),'const.infer.Success_1'(s('type.one.one',X611))),s(X608,X612))) != s('type.pair.prod'('type.infer.exc'('type.one.one',X607),X608),'const.infer.guard_3'(s(bool,happ(s(fun(X600,bool),'_dst_x0x1x0_3'(s(fun(X601,fun(X602,bool)),X603),s(fun(X600,X601),X604),s(X602,X605))),s(X600,X606))),s(X607,X609),s(X608,X610)))) )),
  inference(superposition,[],[f195,f221])).
fof(f15245,plain,(
  ( ! [X546,X553,X555,X549,X551,X545,X547,X552,X554,X548,X550] : (s('type.pair.prod'('type.infer.exc'(X545,X553),X545),'const.infer.st_ex_return_2'(s(X545,X554),s(X545,X555))) != s('type.pair.prod'('type.infer.exc'(X545,X553),X545),'const.infer.read_1'(s(X545,happ(s(fun(X548,X545),happ(s(fun(X547,fun(X548,X545)),X549),s(X547,happ(s(fun(X546,X547),X550),s(X546,X552))))),s(X548,X551))))) | s(X545,X555) = s(X545,happ(s(fun(X546,X545),'_dst_x0x1x0_3'(s(fun(X547,fun(X548,X545)),X549),s(fun(X546,X547),X550),s(X548,X551))),s(X546,X552)))) )),
  inference(superposition,[],[f1740,f221])).
fof(f15243,plain,(
  ( ! [X532,X528,X530,X524,X526,X533,X529,X531,X525,X527,X523] : (s('type.pair.prod'('type.infer.exc'(X523,X531),X523),'const.infer.read_1'(s(X523,X532))) != s('type.pair.prod'('type.infer.exc'(X523,X531),X523),'const.infer.st_ex_return_2'(s(X523,X533),s(X523,happ(s(fun(X526,X523),happ(s(fun(X525,fun(X526,X523)),X527),s(X525,happ(s(fun(X524,X525),X528),s(X524,X530))))),s(X526,X529))))) | s(X523,X532) = s(X523,happ(s(fun(X524,X523),'_dst_x0x1x0_3'(s(fun(X525,fun(X526,X523)),X527),s(fun(X524,X525),X528),s(X526,X529))),s(X524,X530)))) )),
  inference(superposition,[],[f1740,f221])).
fof(f15242,plain,(
  ( ! [X520,X522,X516,X518,X512,X514,X521,X517,X519,X513,X515] : (s('type.pair.prod'('type.infer.exc'(X512,X520),X512),'const.infer.st_ex_return_2'(s(X512,X521),s(X512,X522))) != s('type.pair.prod'('type.infer.exc'(X512,X520),X512),'const.infer.read_1'(s(X512,happ(s(fun(X515,X512),happ(s(fun(X514,fun(X515,X512)),X516),s(X514,happ(s(fun(X513,X514),X517),s(X513,X519))))),s(X515,X518))))) | s(X512,X521) = s(X512,happ(s(fun(X513,X512),'_dst_x0x1x0_3'(s(fun(X514,fun(X515,X512)),X516),s(fun(X513,X514),X517),s(X515,X518))),s(X513,X519)))) )),
  inference(superposition,[],[f1426,f221])).
fof(f15241,plain,(
  ( ! [X509,X511,X505,X507,X502,X508,X510,X504,X506,X501,X503] : (s('type.pair.prod'('type.infer.exc'(X501,X509),X501),'const.infer.read_1'(s(X501,X510))) != s('type.pair.prod'('type.infer.exc'(X501,X509),X501),'const.infer.st_ex_return_2'(s(X501,happ(s(fun(X504,X501),happ(s(fun(X503,fun(X504,X501)),X505),s(X503,happ(s(fun(X502,X503),X506),s(X502,X508))))),s(X504,X507))),s(X501,X511))) | s(X501,X510) = s(X501,happ(s(fun(X502,X501),'_dst_x0x1x0_3'(s(fun(X503,fun(X504,X501)),X505),s(fun(X502,X503),X506),s(X504,X507))),s(X502,X508)))) )),
  inference(superposition,[],[f1426,f221])).
fof(f15232,plain,(
  ( ! [X391,X397,X399,X393,X395,X401,X403,X390,X396,X398,X392,X394,X404,X400,X402] : (s('type.pair.prod'('type.infer.exc'(X398,'type.list.list'('type.string.char')),X390),'const.infer.lookup_st_ex_4'(s(fun(X400,'type.list.list'('type.string.char')),X401),s(X400,X402),s('type.list.list'('type.pair.prod'(X400,X398)),X403),s(X390,X404))) != s('type.pair.prod'('type.infer.exc'(X398,'type.list.list'('type.string.char')),X390),'const.pair.,_2'(s('type.infer.exc'(X398,'type.list.list'('type.string.char')),'const.infer.Success_1'(s(X398,X399))),s(X390,happ(s(fun(X393,X390),happ(s(fun(X392,fun(X393,X390)),X394),s(X392,happ(s(fun(X391,X392),X395),s(X391,X397))))),s(X393,X396))))) | s(X390,X404) = s(X390,happ(s(fun(X391,X390),'_dst_x0x1x0_3'(s(fun(X392,fun(X393,X390)),X394),s(fun(X391,X392),X395),s(X393,X396))),s(X391,X397)))) )),
  inference(superposition,[],[f217,f221])).
fof(f15230,plain,(
  ( ! [X364,X366,X360,X362,X372,X374,X368,X370,X365,X367,X361,X363,X373,X369,X371] : (s('type.pair.prod'('type.infer.exc'(X368,'type.list.list'('type.string.char')),X360),'const.pair.,_2'(s('type.infer.exc'(X368,'type.list.list'('type.string.char')),'const.infer.Success_1'(s(X368,X369))),s(X360,X370))) != s('type.pair.prod'('type.infer.exc'(X368,'type.list.list'('type.string.char')),X360),'const.infer.lookup_st_ex_4'(s(fun(X371,'type.list.list'('type.string.char')),X372),s(X371,X373),s('type.list.list'('type.pair.prod'(X371,X368)),X374),s(X360,happ(s(fun(X363,X360),happ(s(fun(X362,fun(X363,X360)),X364),s(X362,happ(s(fun(X361,X362),X365),s(X361,X367))))),s(X363,X366))))) | s(X360,X370) = s(X360,happ(s(fun(X361,X360),'_dst_x0x1x0_3'(s(fun(X362,fun(X363,X360)),X364),s(fun(X361,X362),X365),s(X363,X366))),s(X361,X367)))) )),
  inference(superposition,[],[f217,f221])).
fof(f15228,plain,(
  ( ! [X344,X333,X335,X331,X341,X343,X337,X339,X332,X334,X330,X340,X342,X336,X338] : (s('type.pair.prod'('type.infer.exc'(X338,'type.list.list'('type.string.char')),X330),'const.infer.flookup_st_ex_4'(s(fun(X340,'type.list.list'('type.string.char')),X341),s(X340,X342),s('type.finite_map.fmap'(X340,X338),X343),s(X330,X344))) != s('type.pair.prod'('type.infer.exc'(X338,'type.list.list'('type.string.char')),X330),'const.pair.,_2'(s('type.infer.exc'(X338,'type.list.list'('type.string.char')),'const.infer.Success_1'(s(X338,X339))),s(X330,happ(s(fun(X333,X330),happ(s(fun(X332,fun(X333,X330)),X334),s(X332,happ(s(fun(X331,X332),X335),s(X331,X337))))),s(X333,X336))))) | s(X330,X344) = s(X330,happ(s(fun(X331,X330),'_dst_x0x1x0_3'(s(fun(X332,fun(X333,X330)),X334),s(fun(X331,X332),X335),s(X333,X336))),s(X331,X337)))) )),
  inference(superposition,[],[f214,f221])).
fof(f15226,plain,(
  ( ! [X313,X300,X302,X308,X310,X304,X306,X312,X314,X301,X303,X309,X311,X305,X307] : (s('type.pair.prod'('type.infer.exc'(X308,'type.list.list'('type.string.char')),X300),'const.pair.,_2'(s('type.infer.exc'(X308,'type.list.list'('type.string.char')),'const.infer.Success_1'(s(X308,X309))),s(X300,X310))) != s('type.pair.prod'('type.infer.exc'(X308,'type.list.list'('type.string.char')),X300),'const.infer.flookup_st_ex_4'(s(fun(X311,'type.list.list'('type.string.char')),X312),s(X311,X313),s('type.finite_map.fmap'(X311,X308),X314),s(X300,happ(s(fun(X303,X300),happ(s(fun(X302,fun(X303,X300)),X304),s(X302,happ(s(fun(X301,X302),X305),s(X301,X307))))),s(X303,X306))))) | s(X300,X310) = s(X300,happ(s(fun(X301,X300),'_dst_x0x1x0_3'(s(fun(X302,fun(X303,X300)),X304),s(fun(X301,X302),X305),s(X303,X306))),s(X301,X307)))) )),
  inference(superposition,[],[f214,f221])).
fof(f15224,plain,(
  ( ! [X280,X282,X277,X279,X273,X275,X281,X283,X276,X278,X272,X274,X284] : (s(X272,X280) != s(X272,happ(s(fun(X275,X272),happ(s(fun(X274,fun(X275,X272)),X276),s(X274,happ(s(fun(X273,X274),X277),s(X273,X279))))),s(X275,X278))) | s(X281,X282) != s(X281,X283) | s('type.pair.prod'('type.infer.exc'(X272,X284),X281),'const.pair.,_2'(s('type.infer.exc'(X272,X284),'const.infer.Success_1'(s(X272,X280))),s(X281,X283))) = s('type.pair.prod'('type.infer.exc'(X272,X284),X281),'const.infer.st_ex_return_2'(s(X272,happ(s(fun(X273,X272),'_dst_x0x1x0_3'(s(fun(X274,fun(X275,X272)),X276),s(fun(X273,X274),X277),s(X275,X278))),s(X273,X279))),s(X281,X282)))) )),
  inference(superposition,[],[f212,f221])).
fof(f15223,plain,(
  ( ! [X261,X263,X259,X269,X271,X265,X267,X260,X262,X268,X270,X264,X266] : (s(X259,X267) != s(X259,happ(s(fun(X262,X259),happ(s(fun(X261,fun(X262,X259)),X263),s(X261,happ(s(fun(X260,X261),X264),s(X260,X266))))),s(X262,X265))) | s(X268,X269) != s(X268,X270) | s('type.pair.prod'('type.infer.exc'(X259,X271),X268),'const.infer.st_ex_return_2'(s(X259,X267),s(X268,X269))) = s('type.pair.prod'('type.infer.exc'(X259,X271),X268),'const.pair.,_2'(s('type.infer.exc'(X259,X271),'const.infer.Success_1'(s(X259,happ(s(fun(X260,X259),'_dst_x0x1x0_3'(s(fun(X261,fun(X262,X259)),X263),s(fun(X260,X261),X264),s(X262,X265))),s(X260,X266))))),s(X268,X270)))) )),
  inference(superposition,[],[f212,f221])).
fof(f15222,plain,(
  ( ! [X255,X253,X257,X249,X251,X246,X254,X256,X258,X248,X250,X252,X247] : (s('type.pair.prod'('type.infer.exc'(X254,X255),X246),'const.infer.st_ex_return_2'(s(X254,X256),s(X246,X257))) != s('type.pair.prod'('type.infer.exc'(X254,X255),X246),'const.pair.,_2'(s('type.infer.exc'(X254,X255),'const.infer.Success_1'(s(X254,X258))),s(X246,happ(s(fun(X249,X246),happ(s(fun(X248,fun(X249,X246)),X250),s(X248,happ(s(fun(X247,X248),X251),s(X247,X253))))),s(X249,X252))))) | s(X246,X257) = s(X246,happ(s(fun(X247,X246),'_dst_x0x1x0_3'(s(fun(X248,fun(X249,X246)),X250),s(fun(X247,X248),X251),s(X249,X252))),s(X247,X253)))) )),
  inference(superposition,[],[f211,f221])).
fof(f15221,plain,(
  ( ! [X243,X241,X239,X237,X235,X233,X244,X242,X240,X238,X236,X234,X245] : (s('type.pair.prod'('type.infer.exc'(X241,X242),X233),'const.pair.,_2'(s('type.infer.exc'(X241,X242),'const.infer.Success_1'(s(X241,X244))),s(X233,X245))) != s('type.pair.prod'('type.infer.exc'(X241,X242),X233),'const.infer.st_ex_return_2'(s(X241,X243),s(X233,happ(s(fun(X236,X233),happ(s(fun(X235,fun(X236,X233)),X237),s(X235,happ(s(fun(X234,X235),X238),s(X234,X240))))),s(X236,X239))))) | s(X233,X245) = s(X233,happ(s(fun(X234,X233),'_dst_x0x1x0_3'(s(fun(X235,fun(X236,X233)),X237),s(fun(X234,X235),X238),s(X236,X239))),s(X234,X240)))) )),
  inference(superposition,[],[f211,f221])).
fof(f15216,plain,(
  ( ! [X177,X175,X173,X171,X169,X180,X178,X176,X174,X172,X170,X168,X179] : (s('type.pair.prod'('type.infer.exc'(X168,X176),X177),'const.pair.,_2'(s('type.infer.exc'(X168,X176),'const.infer.Success_1'(s(X168,X179))),s(X177,X180))) != s('type.pair.prod'('type.infer.exc'(X168,X176),X177),'const.infer.st_ex_return_2'(s(X168,happ(s(fun(X171,X168),happ(s(fun(X170,fun(X171,X168)),X172),s(X170,happ(s(fun(X169,X170),X173),s(X169,X175))))),s(X171,X174))),s(X177,X178))) | s(X168,X179) = s(X168,happ(s(fun(X169,X168),'_dst_x0x1x0_3'(s(fun(X170,fun(X171,X168)),X172),s(fun(X169,X170),X173),s(X171,X174))),s(X169,X175)))) )),
  inference(superposition,[],[f210,f221])).
fof(f15215,plain,(
  ( ! [X158,X156,X167,X165,X163,X161,X159,X157,X155,X166,X164,X162,X160] : (s('type.pair.prod'('type.infer.exc'(X155,X163),X164),'const.infer.st_ex_return_2'(s(X155,X165),s(X164,X166))) != s('type.pair.prod'('type.infer.exc'(X155,X163),X164),'const.pair.,_2'(s('type.infer.exc'(X155,X163),'const.infer.Success_1'(s(X155,happ(s(fun(X158,X155),happ(s(fun(X157,fun(X158,X155)),X159),s(X157,happ(s(fun(X156,X157),X160),s(X156,X162))))),s(X158,X161))))),s(X164,X167))) | s(X155,X165) = s(X155,happ(s(fun(X156,X155),'_dst_x0x1x0_3'(s(fun(X157,fun(X158,X155)),X159),s(fun(X156,X157),X160),s(X158,X161))),s(X156,X162)))) )),
  inference(superposition,[],[f210,f221])).
fof(f15209,plain,(
  ( ! [X94,X92,X90,X88,X97,X87,X95,X93,X91,X89,X98,X96,X86] : (s('type.pair.prod'('type.infer.exc'('type.one.one',X94),X86),'const.infer.guard_3'(s(bool,X95),s(X94,X96),s(X86,X97))) != s('type.pair.prod'('type.infer.exc'('type.one.one',X94),X86),'const.pair.,_2'(s('type.infer.exc'('type.one.one',X94),'const.infer.Success_1'(s('type.one.one',X98))),s(X86,happ(s(fun(X89,X86),happ(s(fun(X88,fun(X89,X86)),X90),s(X88,happ(s(fun(X87,X88),X91),s(X87,X93))))),s(X89,X92))))) | s(X86,X97) = s(X86,happ(s(fun(X87,X86),'_dst_x0x1x0_3'(s(fun(X88,fun(X89,X86)),X90),s(fun(X87,X88),X91),s(X89,X92))),s(X87,X93)))) )),
  inference(superposition,[],[f197,f221])).
fof(f15208,plain,(
  ( ! [X80,X78,X76,X74,X85,X83,X81,X79,X77,X75,X73,X84,X82] : (s('type.pair.prod'('type.infer.exc'('type.one.one',X81),X73),'const.pair.,_2'(s('type.infer.exc'('type.one.one',X81),'const.infer.Success_1'(s('type.one.one',X84))),s(X73,X85))) != s('type.pair.prod'('type.infer.exc'('type.one.one',X81),X73),'const.infer.guard_3'(s(bool,X82),s(X81,X83),s(X73,happ(s(fun(X76,X73),happ(s(fun(X75,fun(X76,X73)),X77),s(X75,happ(s(fun(X74,X75),X78),s(X74,X80))))),s(X76,X79))))) | s(X73,X85) = s(X73,happ(s(fun(X74,X73),'_dst_x0x1x0_3'(s(fun(X75,fun(X76,X73)),X77),s(fun(X74,X75),X78),s(X76,X79))),s(X74,X80)))) )),
  inference(superposition,[],[f197,f221])).
fof(f15201,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1,X9] : (s(X8,happ(s(fun(X1,X8),'_dst_x0x1_2'(s(fun(X0,X8),X9),s(fun(X1,X0),'_dst_x0x1x0_3'(s(fun(X2,fun(X3,X0)),X4),s(fun(X1,X2),X5),s(X3,X6))))),s(X1,X7))) = s(X8,happ(s(fun(X0,X8),X9),s(X0,happ(s(fun(X3,X0),happ(s(fun(X2,fun(X3,X0)),X4),s(X2,happ(s(fun(X1,X2),X5),s(X1,X7))))),s(X3,X6)))))) )),
  inference(superposition,[],[f206,f221])).
fof(f15200,plain,(
  ( ! [X261,X257,X259,X260,X262,X256,X258] : (s('type.pair.prod'('type.infer.exc'(X256,X257),X258),'const.infer.st_ex_return_2'(s(X256,happ(s(fun(X259,X256),X260),s(X259,X261))),s(X258,X262))) = s('type.pair.prod'('type.infer.exc'(X256,X257),X258),happ(s(fun(X259,'type.pair.prod'('type.infer.exc'(X256,X257),X258)),'_dst_x0x1x0_3'(s(fun(X256,fun(X258,'type.pair.prod'('type.infer.exc'(X256,X257),X258))),'const.infer.st_ex_return_0'),s(fun(X259,X256),X260),s(X258,X262))),s(X259,X261)))) )),
  inference(superposition,[],[f221,f205])).
fof(f15199,plain,(
  ( ! [X255,X253,X254,X252] : (s('type.infer_t.infer_t','const.unify.t_walkstar_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),happ(s(fun(X252,'type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X253),s(X252,X254))),s('type.infer_t.infer_t',X255))) = s('type.infer_t.infer_t',happ(s(fun(X252,'type.infer_t.infer_t'),'_dst_x0x1x0_3'(s(fun('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),fun('type.infer_t.infer_t','type.infer_t.infer_t')),'const.unify.t_walkstar_0'),s(fun(X252,'type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X253),s('type.infer_t.infer_t',X255))),s(X252,X254)))) )),
  inference(superposition,[],[f221,f176])).
fof(f15198,plain,(
  ( ! [X251,X249,X246,X250,X248,X247] : (s('type.list.list'(X246),'const.list.MAP_2'(s(fun(X247,X246),happ(s(fun(X248,fun(X247,X246)),X249),s(X248,X250))),s('type.list.list'(X247),X251))) = s('type.list.list'(X246),happ(s(fun(X248,'type.list.list'(X246)),'_dst_x0x1x0_3'(s(fun(fun(X247,X246),fun('type.list.list'(X247),'type.list.list'(X246))),'const.list.MAP_0'),s(fun(X248,fun(X247,X246)),X249),s('type.list.list'(X247),X251))),s(X248,X250)))) )),
  inference(superposition,[],[f221,f180])).
fof(f15178,plain,(
  ( ! [X61,X59,X57,X62,X60,X58,X56] : (s(bool,'F_0') = s(bool,happ(s(fun(X59,bool),'_dst_x0x1x0_3'(s(fun(X57,fun(X56,bool)),X58),s(fun(X59,X57),X60),s(X56,X62))),s(X59,X61))) | s(bool,'T_0') = s(bool,happ(s(fun(X56,bool),happ(s(fun(X57,fun(X56,bool)),X58),s(X57,happ(s(fun(X59,X57),X60),s(X59,X61))))),s(X56,X62)))) )),
  inference(superposition,[],[f221,f167])).
fof(f15172,plain,(
  ( ! [X14,X12,X10,X8,X17,X15,X13,X11,X9,X16] : (s(X8,happ(s(fun(X12,X8),'_dst_x0x1x0_3'(s(fun(X10,fun(X9,X8)),X11),s(fun(X12,X10),X13),s(X9,happ(s(fun(X15,X9),X16),s(X15,X17))))),s(X12,X14))) = s(X8,happ(s(fun(X15,X8),'_dst_x0x1_2'(s(fun(X9,X8),happ(s(fun(X10,fun(X9,X8)),X11),s(X10,happ(s(fun(X12,X10),X13),s(X12,X14))))),s(fun(X15,X9),X16))),s(X15,X17)))) )),
  inference(superposition,[],[f221,f206])).
fof(f15113,plain,(
  ( ! [X191,X189,X187,X185,X182,X180,X190,X188,X186,X184,X183,X181] : (s(X181,happ(s(fun(X180,X181),happ(s(fun(X185,fun(X180,X181)),'_dst_x0x1x0_3'(s(fun(X183,fun(X182,fun(X180,X181))),X184),s(fun(X185,X183),X186),s(X182,happ(s(fun(X188,X182),X189),s(X188,X190))))),s(X185,X187))),s(X180,X191))) = s(X181,happ(s(fun(X188,X181),'_dst_x0x1x0_3'(s(fun(X182,fun(X180,X181)),happ(s(fun(X183,fun(X182,fun(X180,X181))),X184),s(X183,happ(s(fun(X185,X183),X186),s(X185,X187))))),s(fun(X188,X182),X189),s(X180,X191))),s(X188,X190)))) )),
  inference(superposition,[],[f221,f221])).
fof(f15112,plain,(
  ( ! [X177,X175,X173,X171,X169,X178,X176,X174,X172,X170,X168,X179] : (s(X169,happ(s(fun(X176,X169),'_dst_x0x1x0_3'(s(fun(X170,fun(X168,X169)),'_dst_x0x1x0_3'(s(fun(X171,fun(X172,fun(X168,X169))),X173),s(fun(X170,X171),X174),s(X172,X175))),s(fun(X176,X170),X177),s(X168,X179))),s(X176,X178))) = s(X169,happ(s(fun(X168,X169),happ(s(fun(X172,fun(X168,X169)),happ(s(fun(X171,fun(X172,fun(X168,X169))),X173),s(X171,happ(s(fun(X170,X171),X174),s(X170,happ(s(fun(X176,X170),X177),s(X176,X178))))))),s(X172,X175))),s(X168,X179)))) )),
  inference(superposition,[],[f221,f221])).
fof(f15111,plain,(
  ( ! [X158,X167,X165,X163,X161,X159,X166,X164,X162,X160] : (s(X159,happ(s(fun(X158,X159),happ(s(fun(X161,fun(X158,X159)),X162),s(X161,happ(s(fun(X160,X161),X163),s(X160,happ(s(fun(X164,X160),X165),s(X164,X166))))))),s(X158,X167))) = s(X159,happ(s(fun(X164,X159),'_dst_x0x1x0_3'(s(fun(X160,fun(X158,X159)),'_dst_x0x1_2'(s(fun(X161,fun(X158,X159)),X162),s(fun(X160,X161),X163))),s(fun(X164,X160),X165),s(X158,X167))),s(X164,X166)))) )),
  inference(superposition,[],[f221,f206])).
fof(f15110,plain,(
  ( ! [X156,X154,X152,X151,X157,X155,X153,X150] : (s(X151,happ(s(fun(X154,X151),'_dst_x0x1x0_3'(s(fun(X152,fun(X150,X151)),X153),s(fun(X154,X152),X155),s(X150,X157))),s(X154,X156))) = s(X151,happ(s(fun(X150,X151),happ(s(fun(X154,fun(X150,X151)),'_dst_x0x1_2'(s(fun(X152,fun(X150,X151)),X153),s(fun(X154,X152),X155))),s(X154,X156))),s(X150,X157)))) )),
  inference(superposition,[],[f221,f206])).
fof(f15109,plain,(
  ( ! [X146,X144,X149,X147,X145,X148] : (s(X145,happ(s(fun(X144,X145),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(fun(X144,X145)),happ(s(fun(X146,'type.infer.infer_st'(fun(X144,X145))),X147),s(X146,X148))))),s(X144,X149))) = s(X145,happ(s(fun(X146,X145),'_dst_x0x1x0_3'(s(fun('type.infer.infer_st'(fun(X144,X145)),fun(X144,X145)),'const.infer.infer_st_subst_0'),s(fun(X146,'type.infer.infer_st'(fun(X144,X145))),X147),s(X144,X149))),s(X146,X148)))) )),
  inference(superposition,[],[f221,f168])).
fof(f15092,plain,(
  ( ! [X350,X352,X354,X349,X351,X353,X355] : (s(X352,happ(s(fun(X353,X352),happ(s(fun('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X349),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),fun(X353,X352)),X354),s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X349),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.apply_subst_2'(s('type.infer_t.infer_t',X350),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X351))))),s(X353,X355))) = s(X352,happ(s(fun('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X352),'_dst_x0x1x0_3'(s(fun('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X349),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),fun(X353,X352)),X354),s(fun('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X349),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.infer.apply_subst_1'(s('type.infer_t.infer_t',X350))),s(X353,X355))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X351)))) )),
  inference(superposition,[],[f221,f171])).
fof(f15091,plain,(
  ( ! [X344,X346,X343,X345,X347,X342,X348] : (s(X345,happ(s(fun(X346,X345),happ(s(fun('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X342),'type.infer.infer_st'(X343)),fun(X346,X345)),X347),s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X342),'type.infer.infer_st'(X343)),'const.infer.fresh_uvar_1'(s('type.infer.infer_st'(X343),X344))))),s(X346,X348))) = s(X345,happ(s(fun('type.infer.infer_st'(X343),X345),'_dst_x0x1x0_3'(s(fun('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X342),'type.infer.infer_st'(X343)),fun(X346,X345)),X347),s(fun('type.infer.infer_st'(X343),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X342),'type.infer.infer_st'(X343))),'const.infer.fresh_uvar_0'),s(X346,X348))),s('type.infer.infer_st'(X343),X344)))) )),
  inference(superposition,[],[f221,f179])).
fof(f15090,plain,(
  ( ! [X333,X335,X341,X337,X339,X334,X340,X336,X338] : (s(X338,happ(s(fun(X339,X338),happ(s(fun('type.pair.prod'('type.infer.exc'('type.one.one',X333),X334),fun(X339,X338)),X340),s('type.pair.prod'('type.infer.exc'('type.one.one',X333),X334),'const.infer.guard_3'(s(bool,X335),s(X333,X336),s(X334,X337))))),s(X339,X341))) = s(X338,happ(s(fun(X334,X338),'_dst_x0x1x0_3'(s(fun('type.pair.prod'('type.infer.exc'('type.one.one',X333),X334),fun(X339,X338)),X340),s(fun(X334,'type.pair.prod'('type.infer.exc'('type.one.one',X333),X334)),'const.infer.guard_2'(s(bool,X335),s(X333,X336))),s(X339,X341))),s(X334,X337)))) )),
  inference(superposition,[],[f221,f183])).
fof(f15089,plain,(
  ( ! [X325,X327,X329,X331,X324,X326,X332,X328,X330] : (s(X329,happ(s(fun(X330,X329),happ(s(fun('type.pair.prod'('type.infer.exc'(X324,X325),X326),fun(X330,X329)),X331),s('type.pair.prod'('type.infer.exc'(X324,X325),X326),'const.infer.st_ex_return_2'(s(X324,X327),s(X326,X328))))),s(X330,X332))) = s(X329,happ(s(fun(X326,X329),'_dst_x0x1x0_3'(s(fun('type.pair.prod'('type.infer.exc'(X324,X325),X326),fun(X330,X329)),X331),s(fun(X326,'type.pair.prod'('type.infer.exc'(X324,X325),X326)),happ(s(fun(X324,fun(X326,'type.pair.prod'('type.infer.exc'(X324,X325),X326))),'const.infer.st_ex_return_0'),s(X324,X327))),s(X330,X332))),s(X326,X328)))) )),
  inference(superposition,[],[f221,f205])).
fof(f15088,plain,(
  ( ! [X315,X321,X323,X316,X318,X320,X322,X317,X319] : (s(X320,happ(s(fun(X321,X320),happ(s(fun('type.pair.prod'('type.infer.exc'(X315,X316),X317),fun(X321,X320)),X322),s('type.pair.prod'('type.infer.exc'(X315,X316),X317),'const.infer.failwith_2'(s(X316,X318),s(X317,X319))))),s(X321,X323))) = s(X320,happ(s(fun(X317,X320),'_dst_x0x1x0_3'(s(fun('type.pair.prod'('type.infer.exc'(X315,X316),X317),fun(X321,X320)),X322),s(fun(X317,'type.pair.prod'('type.infer.exc'(X315,X316),X317)),'const.infer.failwith_1'(s(X316,X318))),s(X321,X323))),s(X317,X319)))) )),
  inference(superposition,[],[f221,f204])).
fof(f15087,plain,(
  ( ! [X313,X308,X310,X312,X314,X309,X311] : (s(X311,happ(s(fun(X312,X311),happ(s(fun('type.pair.prod'('type.infer.exc'(X308,X309),X308),fun(X312,X311)),X313),s('type.pair.prod'('type.infer.exc'(X308,X309),X308),'const.infer.read_1'(s(X308,X310))))),s(X312,X314))) = s(X311,happ(s(fun(X308,X311),'_dst_x0x1x0_3'(s(fun('type.pair.prod'('type.infer.exc'(X308,X309),X308),fun(X312,X311)),X313),s(fun(X308,'type.pair.prod'('type.infer.exc'(X308,X309),X308)),'const.infer.read_0'),s(X312,X314))),s(X308,X310)))) )),
  inference(superposition,[],[f221,f178])).
fof(f15086,plain,(
  ( ! [X302,X304,X306,X303,X305,X307] : (s(X304,happ(s(fun(X305,X304),happ(s(fun('type.infer_t.infer_t',fun(X305,X304)),X306),s('type.infer_t.infer_t','const.unify.t_walkstar_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X302),s('type.infer_t.infer_t',X303))))),s(X305,X307))) = s(X304,happ(s(fun('type.infer_t.infer_t',X304),'_dst_x0x1x0_3'(s(fun('type.infer_t.infer_t',fun(X305,X304)),X306),s(fun('type.infer_t.infer_t','type.infer_t.infer_t'),happ(s(fun('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),fun('type.infer_t.infer_t','type.infer_t.infer_t')),'const.unify.t_walkstar_0'),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X302))),s(X305,X307))),s('type.infer_t.infer_t',X303)))) )),
  inference(superposition,[],[f221,f176])).
fof(f15085,plain,(
  ( ! [X300,X298,X301,X297,X299] : (s(X298,happ(s(fun(X299,X298),happ(s(fun('type.infer_t.infer_t',fun(X299,X298)),X300),s('type.infer_t.infer_t','const.infer_t.Infer_Tuvar_1'(s('type.num.num',X297))))),s(X299,X301))) = s(X298,happ(s(fun('type.num.num',X298),'_dst_x0x1x0_3'(s(fun('type.infer_t.infer_t',fun(X299,X298)),X300),s(fun('type.num.num','type.infer_t.infer_t'),'const.infer_t.Infer_Tuvar_0'),s(X299,X301))),s('type.num.num',X297)))) )),
  inference(superposition,[],[f221,f166])).
fof(f15084,plain,(
  ( ! [X292,X294,X296,X293,X295,X291] : (s(X293,happ(s(fun(X294,X293),happ(s(fun('type.num.num',fun(X294,X293)),X295),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X291),s('type.num.num',X292))))),s(X294,X296))) = s(X293,happ(s(fun('type.num.num',X293),'_dst_x0x1x0_3'(s(fun('type.num.num',fun(X294,X293)),X295),s(fun('type.num.num','type.num.num'),'const.arithmetic.+_1'(s('type.num.num',X291))),s(X294,X296))),s('type.num.num',X292)))) )),
  inference(superposition,[],[f221,f175])).
fof(f15083,plain,(
  ( ! [X288,X290,X285,X287,X283,X289,X284,X286] : (s(X287,happ(s(fun(X288,X287),happ(s(fun('type.list.list'(X283),fun(X288,X287)),X289),s('type.list.list'(X283),'const.list.MAP_2'(s(fun(X284,X283),X285),s('type.list.list'(X284),X286))))),s(X288,X290))) = s(X287,happ(s(fun('type.list.list'(X284),X287),'_dst_x0x1x0_3'(s(fun('type.list.list'(X283),fun(X288,X287)),X289),s(fun('type.list.list'(X284),'type.list.list'(X283)),happ(s(fun(fun(X284,X283),fun('type.list.list'(X284),'type.list.list'(X283))),'const.list.MAP_0'),s(fun(X284,X283),X285))),s(X288,X290))),s('type.list.list'(X284),X286)))) )),
  inference(superposition,[],[f221,f180])).
fof(f15080,plain,(
  ( ! [X261,X263,X265,X267,X260,X262,X264,X266] : (s(X264,happ(s(fun(X265,X264),happ(s(fun('type.one.one',fun(X265,X264)),X266),s('type.one.one',X263))),s(X265,X267))) = s(X264,happ(s(fun(X260,X264),'_dst_x0x1x0_3'(s(fun('type.one.one',fun(X265,X264)),X266),s(fun(X260,'type.one.one'),X261),s(X265,X267))),s(X260,X262)))) )),
  inference(superposition,[],[f221,f258])).
fof(f15074,plain,(
  ( ! [X212,X210,X208,X206,X204,X202,X213,X211,X209,X207,X205,X203,X214] : (s(X211,happ(s(fun(X212,X211),happ(s(fun(fun(X202,fun(X203,fun(X204,fun(X205,fun(X206,'type.one.one'))))),fun(X212,X211)),X213),s(fun(X202,fun(X203,fun(X204,fun(X205,fun(X206,'type.one.one'))))),X210))),s(X212,X214))) = s(X211,happ(s(fun(X207,X211),'_dst_x0x1x0_3'(s(fun(fun(X202,fun(X203,fun(X204,fun(X205,fun(X206,'type.one.one'))))),fun(X212,X211)),X213),s(fun(X207,fun(X202,fun(X203,fun(X204,fun(X205,fun(X206,'type.one.one')))))),X208),s(X212,X214))),s(X207,X209)))) )),
  inference(superposition,[],[f221,f815])).
fof(f15072,plain,(
  ( ! [X189,X187,X185,X182,X180,X178,X188,X186,X184,X183,X181,X179] : (s(X186,happ(s(fun(X187,X186),happ(s(fun(fun(X178,fun(X179,fun(X180,fun(X181,'type.one.one')))),fun(X187,X186)),X188),s(fun(X178,fun(X179,fun(X180,fun(X181,'type.one.one')))),X185))),s(X187,X189))) = s(X186,happ(s(fun(X182,X186),'_dst_x0x1x0_3'(s(fun(fun(X178,fun(X179,fun(X180,fun(X181,'type.one.one')))),fun(X187,X186)),X188),s(fun(X182,fun(X178,fun(X179,fun(X180,fun(X181,'type.one.one'))))),X183),s(X187,X189))),s(X182,X184)))) )),
  inference(superposition,[],[f221,f787])).
fof(f15070,plain,(
  ( ! [X158,X156,X165,X163,X161,X159,X157,X166,X164,X162,X160] : (s(X163,happ(s(fun(X164,X163),happ(s(fun(fun(X156,fun(X157,fun(X158,'type.one.one'))),fun(X164,X163)),X165),s(fun(X156,fun(X157,fun(X158,'type.one.one'))),X162))),s(X164,X166))) = s(X163,happ(s(fun(X159,X163),'_dst_x0x1x0_3'(s(fun(fun(X156,fun(X157,fun(X158,'type.one.one'))),fun(X164,X163)),X165),s(fun(X159,fun(X156,fun(X157,fun(X158,'type.one.one')))),X160),s(X164,X166))),s(X159,X161)))) )),
  inference(superposition,[],[f221,f752])).
fof(f15068,plain,(
  ( ! [X144,X142,X140,X138,X136,X145,X143,X141,X139,X137] : (s(X142,happ(s(fun(X143,X142),happ(s(fun(fun(X136,fun(X137,'type.one.one')),fun(X143,X142)),X144),s(fun(X136,fun(X137,'type.one.one')),X141))),s(X143,X145))) = s(X142,happ(s(fun(X138,X142),'_dst_x0x1x0_3'(s(fun(fun(X136,fun(X137,'type.one.one')),fun(X143,X142)),X144),s(fun(X138,fun(X136,fun(X137,'type.one.one'))),X139),s(X143,X145))),s(X138,X140)))) )),
  inference(superposition,[],[f221,f724])).
fof(f15064,plain,(
  ( ! [X103,X101,X107,X105,X102,X100,X108,X106,X104] : (s(X105,happ(s(fun(X106,X105),happ(s(fun(fun(X100,'type.one.one'),fun(X106,X105)),X107),s(fun(X100,'type.one.one'),X104))),s(X106,X108))) = s(X105,happ(s(fun(X101,X105),'_dst_x0x1x0_3'(s(fun(fun(X100,'type.one.one'),fun(X106,X105)),X107),s(fun(X101,fun(X100,'type.one.one')),X102),s(X106,X108))),s(X101,X103)))) )),
  inference(superposition,[],[f221,f605])).
fof(f15063,plain,(
  ( ! [X94,X99,X97,X95,X93,X98,X96] : (s(X96,happ(s(fun(X97,X96),happ(s(fun(bool,fun(X97,X96)),X98),s(bool,'F_0'))),s(X97,X99))) = s(X96,happ(s(fun(X93,X96),'_dst_x0x1x0_3'(s(fun(bool,fun(X97,X96)),X98),s(fun(X93,bool),X94),s(X97,X99))),s(X93,X95))) | s(bool,'T_0') = s(bool,happ(s(fun(X93,bool),X94),s(X93,X95)))) )),
  inference(superposition,[],[f221,f167])).
fof(f15061,plain,(
  ( ! [X80,X78,X83,X81,X79,X77,X84,X82] : (s(X81,happ(s(fun(X82,X81),happ(s(fun(bool,fun(X82,X81)),X83),s(bool,X80))),s(X82,X84))) = s(X81,happ(s(fun(X77,X81),'_dst_x0x1x0_3'(s(fun(bool,fun(X82,X81)),X83),s(fun(X77,bool),X78),s(X82,X84))),s(X77,X79))) | s(bool,'T_0') = s(bool,happ(s(fun(X77,bool),X78),s(X77,X79))) | s(bool,'T_0') = s(bool,X80)) )),
  inference(superposition,[],[f221,f272])).
fof(f15059,plain,(
  ( ! [X61,X68,X66,X64,X62,X67,X65,X63] : (s(X64,happ(s(fun(X65,X64),happ(s(fun(bool,fun(X65,X64)),X66),s(bool,'T_0'))),s(X65,X67))) = s(X64,happ(s(fun(X61,X64),'_dst_x0x1x0_3'(s(fun(bool,fun(X65,X64)),X66),s(fun(X61,bool),X62),s(X65,X67))),s(X61,X63))) | s(bool,X68) = s(bool,happ(s(fun(X61,bool),X62),s(X61,X63))) | s(bool,'T_0') = s(bool,X68)) )),
  inference(superposition,[],[f221,f272])).
fof(f15057,plain,(
  ( ! [X54,X52,X50,X53,X51] : (s(X51,happ(s(fun(X52,X51),happ(s(fun(bool,fun(X52,X51)),X53),s(bool,'T_0'))),s(X52,X54))) = s(X51,happ(s(fun('type.infer.infer_st'(bool),X51),'_dst_x0x1x0_3'(s(fun(bool,fun(X52,X51)),X53),s(fun('type.infer.infer_st'(bool),bool),'const.infer.infer_st_subst_0'),s(X52,X54))),s('type.infer.infer_st'(bool),X50))) | s(bool,'F_0') = s(bool,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(bool),X50)))) )),
  inference(superposition,[],[f221,f293])).
fof(f15056,plain,(
  ( ! [X39,X47,X45,X43,X41,X48,X38,X46,X44,X42,X40,X49] : (s(X46,happ(s(fun(X39,X46),'_dst_x0x1x0_3'(s(fun(X38,fun(X47,X46)),X48),s(fun(X39,X38),happ(s(fun(X40,fun(X39,X38)),X41),s(X40,happ(s(fun(X42,X40),X43),s(X42,X44))))),s(X47,X49))),s(X39,X45))) = s(X46,happ(s(fun(X47,X46),happ(s(fun(X38,fun(X47,X46)),X48),s(X38,happ(s(fun(X42,X38),'_dst_x0x1x0_3'(s(fun(X40,fun(X39,X38)),X41),s(fun(X42,X40),X43),s(X39,X45))),s(X42,X44))))),s(X47,X49)))) )),
  inference(superposition,[],[f221,f221])).
fof(f15055,plain,(
  ( ! [X30,X28,X26,X37,X35,X33,X31,X29,X27,X36,X34,X32] : (s(X34,happ(s(fun(X27,X34),'_dst_x0x1x0_3'(s(fun(X26,fun(X35,X34)),X36),s(fun(X27,X26),'_dst_x0x1x0_3'(s(fun(X28,fun(X29,X26)),X30),s(fun(X27,X28),X31),s(X29,X32))),s(X35,X37))),s(X27,X33))) = s(X34,happ(s(fun(X35,X34),happ(s(fun(X26,fun(X35,X34)),X36),s(X26,happ(s(fun(X29,X26),happ(s(fun(X28,fun(X29,X26)),X30),s(X28,happ(s(fun(X27,X28),X31),s(X27,X33))))),s(X29,X32))))),s(X35,X37)))) )),
  inference(superposition,[],[f221,f221])).
fof(f15054,plain,(
  ( ! [X24,X23,X21,X19,X17,X25,X22,X20,X18,X16] : (s(X22,happ(s(fun(X17,X22),'_dst_x0x1x0_3'(s(fun(X16,fun(X23,X22)),X24),s(fun(X17,X16),'_dst_x0x1_2'(s(fun(X18,X16),X19),s(fun(X17,X18),X20))),s(X23,X25))),s(X17,X21))) = s(X22,happ(s(fun(X23,X22),happ(s(fun(X16,fun(X23,X22)),X24),s(X16,happ(s(fun(X18,X16),X19),s(X18,happ(s(fun(X17,X18),X20),s(X17,X21))))))),s(X23,X25)))) )),
  inference(superposition,[],[f221,f206])).
fof(f15053,plain,(
  ( ! [X6,X14,X12,X10,X8,X7,X15,X13,X11,X9] : (s(X12,happ(s(fun(X7,X12),'_dst_x0x1x0_3'(s(fun(X6,fun(X13,X12)),X14),s(fun(X7,X6),X8),s(X13,X15))),s(X7,happ(s(fun(X9,X7),X10),s(X9,X11))))) = s(X12,happ(s(fun(X13,X12),happ(s(fun(X6,fun(X13,X12)),X14),s(X6,happ(s(fun(X9,X6),'_dst_x0x1_2'(s(fun(X7,X6),X8),s(fun(X9,X7),X10))),s(X9,X11))))),s(X13,X15)))) )),
  inference(superposition,[],[f221,f206])).
fof(f15052,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s(X2,happ(s(fun(X3,X2),happ(s(fun(X0,fun(X3,X2)),X4),s(X0,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(X0),X1))))),s(X3,X5))) = s(X2,happ(s(fun('type.infer.infer_st'(X0),X2),'_dst_x0x1x0_3'(s(fun(X0,fun(X3,X2)),X4),s(fun('type.infer.infer_st'(X0),X0),'const.infer.infer_st_subst_0'),s(X3,X5))),s('type.infer.infer_st'(X0),X1)))) )),
  inference(superposition,[],[f221,f168])).
fof(f14936,plain,(
  ( ! [X61,X59,X57,X62,X60,X58,X56] : (s(bool,'F_0') = s(bool,happ(s(fun(X58,bool),happ(s(fun(X57,fun(X58,bool)),X59),s(X57,happ(s(fun(X56,X57),X60),s(X56,X62))))),s(X58,X61))) | s(bool,'T_0') = s(bool,happ(s(fun(X56,bool),'_dst_x0x1x0_3'(s(fun(X57,fun(X58,bool)),X59),s(fun(X56,X57),X60),s(X58,X61))),s(X56,X62)))) )),
  inference(superposition,[],[f221,f167])).
fof(f14934,plain,(
  ( ! [X47,X45,X43,X41,X46,X44,X42,X40] : (s(bool,X47) = s(bool,happ(s(fun(X42,bool),happ(s(fun(X41,fun(X42,bool)),X43),s(X41,happ(s(fun(X40,X41),X44),s(X40,X46))))),s(X42,X45))) | s(bool,'T_0') = s(bool,happ(s(fun(X40,bool),'_dst_x0x1x0_3'(s(fun(X41,fun(X42,bool)),X43),s(fun(X40,X41),X44),s(X42,X45))),s(X40,X46))) | s(bool,'T_0') = s(bool,X47)) )),
  inference(superposition,[],[f221,f272])).
fof(f14932,plain,(
  ( ! [X30,X28,X26,X24,X31,X29,X27,X25] : (s(bool,'T_0') = s(bool,happ(s(fun(X26,bool),happ(s(fun(X25,fun(X26,bool)),X27),s(X25,happ(s(fun(X24,X25),X28),s(X24,X30))))),s(X26,X29))) | s(bool,X31) = s(bool,happ(s(fun(X24,bool),'_dst_x0x1x0_3'(s(fun(X25,fun(X26,bool)),X27),s(fun(X24,X25),X28),s(X26,X29))),s(X24,X30))) | s(bool,'T_0') = s(bool,X31)) )),
  inference(superposition,[],[f221,f272])).
fof(f14931,plain,(
  ( ! [X14,X12,X10,X8,X17,X15,X13,X11,X9,X16] : (s(X8,happ(s(fun(X15,X8),'_dst_x0x1_2'(s(fun(X9,X8),'_dst_x0x1x0_3'(s(fun(X10,fun(X11,X8)),X12),s(fun(X9,X10),X13),s(X11,X14))),s(fun(X15,X9),X16))),s(X15,X17))) = s(X8,happ(s(fun(X11,X8),happ(s(fun(X10,fun(X11,X8)),X12),s(X10,happ(s(fun(X9,X10),X13),s(X9,happ(s(fun(X15,X9),X16),s(X15,X17))))))),s(X11,X14)))) )),
  inference(superposition,[],[f221,f206])).
fof(f14653,plain,(
  ( ! [X6,X4,X2,X0,X10,X8,X7,X5,X3,X1,X9] : (s('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),'const.infer.guard_3'(s(bool,'T_0'),s(X0,X2),s(X1,happ(s(fun(X3,X1),'_dst_x0x1x0_3'(s(fun(X4,fun(X5,X1)),X6),s(fun(X3,X4),X7),s(X5,X8))),s(X3,X9))))) = s('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),'const.pair.,_2'(s('type.infer.exc'('type.one.one',X0),'const.infer.Success_1'(s('type.one.one',X10))),s(X1,happ(s(fun(X5,X1),happ(s(fun(X4,fun(X5,X1)),X6),s(X4,happ(s(fun(X3,X4),X7),s(X3,X9))))),s(X5,X8)))))) )),
  inference(unit_resulting_resolution,[],[f163,f221,f252])).
fof(f14655,plain,(
  ( ! [X6,X4,X2,X0,X14,X12,X10,X8,X7,X5,X3,X1,X13,X11,X9] : (s('type.pair.prod'('type.infer.exc'(X0,X1),X2),'const.infer.st_ex_return_2'(s(X0,happ(s(fun(X3,X0),X4),s(X3,happ(s(fun(X5,X3),X6),s(X5,X7))))),s(X2,happ(s(fun(X8,X2),'_dst_x0x1x0_3'(s(fun(X9,fun(X10,X2)),X11),s(fun(X8,X9),X12),s(X10,X13))),s(X8,X14))))) = s('type.pair.prod'('type.infer.exc'(X0,X1),X2),'const.pair.,_2'(s('type.infer.exc'(X0,X1),'const.infer.Success_1'(s(X0,happ(s(fun(X5,X0),'_dst_x0x1_2'(s(fun(X3,X0),X4),s(fun(X5,X3),X6))),s(X5,X7))))),s(X2,happ(s(fun(X10,X2),happ(s(fun(X9,fun(X10,X2)),X11),s(X9,happ(s(fun(X8,X9),X12),s(X8,X14))))),s(X10,X13)))))) )),
  inference(unit_resulting_resolution,[],[f206,f221,f212])).
fof(f15607,plain,(
  ( ! [X6,X4,X2,X0,X10,X8,X7,X5,X3,X1,X9] : (s('type.pair.prod'('type.infer.exc'(X0,X1),X2),'const.infer.st_ex_return_2'(s(X0,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(X0),X3))),s(X2,happ(s(fun(X4,X2),'_dst_x0x1x0_3'(s(fun(X5,fun(X6,X2)),X7),s(fun(X4,X5),X8),s(X6,X9))),s(X4,X10))))) = s('type.pair.prod'('type.infer.exc'(X0,X1),X2),'const.pair.,_2'(s('type.infer.exc'(X0,X1),'const.infer.Success_1'(s(X0,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(X0),X3))))),s(X2,happ(s(fun(X6,X2),happ(s(fun(X5,fun(X6,X2)),X7),s(X5,happ(s(fun(X4,X5),X8),s(X4,X10))))),s(X6,X9)))))) )),
  inference(forward_demodulation,[],[f14687,f168])).
fof(f14687,plain,(
  ( ! [X6,X4,X2,X0,X10,X8,X7,X5,X3,X1,X9] : (s('type.pair.prod'('type.infer.exc'(X0,X1),X2),'const.infer.st_ex_return_2'(s(X0,happ(s(fun('type.infer.infer_st'(X0),X0),'const.infer.infer_st_subst_0'),s('type.infer.infer_st'(X0),X3))),s(X2,happ(s(fun(X4,X2),'_dst_x0x1x0_3'(s(fun(X5,fun(X6,X2)),X7),s(fun(X4,X5),X8),s(X6,X9))),s(X4,X10))))) = s('type.pair.prod'('type.infer.exc'(X0,X1),X2),'const.pair.,_2'(s('type.infer.exc'(X0,X1),'const.infer.Success_1'(s(X0,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(X0),X3))))),s(X2,happ(s(fun(X6,X2),happ(s(fun(X5,fun(X6,X2)),X7),s(X5,happ(s(fun(X4,X5),X8),s(X4,X10))))),s(X6,X9)))))) )),
  inference(unit_resulting_resolution,[],[f168,f221,f212])).
fof(f14688,plain,(
  ( ! [X6,X4,X2,X0,X14,X12,X10,X8,X7,X5,X3,X1,X13,X11,X9] : (s('type.pair.prod'('type.infer.exc'(X0,X1),X2),'const.infer.st_ex_return_2'(s(X0,happ(s(fun(X3,X0),'_dst_x0x1_2'(s(fun(X4,X0),X5),s(fun(X3,X4),X6))),s(X3,X7))),s(X2,happ(s(fun(X8,X2),'_dst_x0x1x0_3'(s(fun(X9,fun(X10,X2)),X11),s(fun(X8,X9),X12),s(X10,X13))),s(X8,X14))))) = s('type.pair.prod'('type.infer.exc'(X0,X1),X2),'const.pair.,_2'(s('type.infer.exc'(X0,X1),'const.infer.Success_1'(s(X0,happ(s(fun(X4,X0),X5),s(X4,happ(s(fun(X3,X4),X6),s(X3,X7))))))),s(X2,happ(s(fun(X10,X2),happ(s(fun(X9,fun(X10,X2)),X11),s(X9,happ(s(fun(X8,X9),X12),s(X8,X14))))),s(X10,X13)))))) )),
  inference(unit_resulting_resolution,[],[f206,f221,f212])).
fof(f14692,plain,(
  ( ! [X6,X4,X2,X0,X10,X8,X7,X5,X3,X1,X11,X9] : (s('type.pair.prod'('type.infer.exc'(fun(X0,'type.one.one'),X1),X2),'const.infer.st_ex_return_2'(s(fun(X0,'type.one.one'),X3),s(X2,happ(s(fun(X4,X2),'_dst_x0x1x0_3'(s(fun(X5,fun(X6,X2)),X7),s(fun(X4,X5),X8),s(X6,X9))),s(X4,X10))))) = s('type.pair.prod'('type.infer.exc'(fun(X0,'type.one.one'),X1),X2),'const.pair.,_2'(s('type.infer.exc'(fun(X0,'type.one.one'),X1),'const.infer.Success_1'(s(fun(X0,'type.one.one'),X11))),s(X2,happ(s(fun(X6,X2),happ(s(fun(X5,fun(X6,X2)),X7),s(X5,happ(s(fun(X4,X5),X8),s(X4,X10))))),s(X6,X9)))))) )),
  inference(unit_resulting_resolution,[],[f605,f221,f212])).
fof(f14694,plain,(
  ( ! [X6,X4,X2,X0,X12,X10,X8,X7,X5,X3,X1,X11,X9] : (s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,'type.one.one')),X2),X3),'const.infer.st_ex_return_2'(s(fun(X0,fun(X1,'type.one.one')),X4),s(X3,happ(s(fun(X5,X3),'_dst_x0x1x0_3'(s(fun(X6,fun(X7,X3)),X8),s(fun(X5,X6),X9),s(X7,X10))),s(X5,X11))))) = s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,'type.one.one')),X2),X3),'const.pair.,_2'(s('type.infer.exc'(fun(X0,fun(X1,'type.one.one')),X2),'const.infer.Success_1'(s(fun(X0,fun(X1,'type.one.one')),X12))),s(X3,happ(s(fun(X7,X3),happ(s(fun(X6,fun(X7,X3)),X8),s(X6,happ(s(fun(X5,X6),X9),s(X5,X11))))),s(X7,X10)))))) )),
  inference(unit_resulting_resolution,[],[f724,f221,f212])).
fof(f14695,plain,(
  ( ! [X6,X4,X2,X0,X12,X10,X8,X7,X5,X3,X1,X13,X11,X9] : (s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,fun(X2,'type.one.one'))),X3),X4),'const.infer.st_ex_return_2'(s(fun(X0,fun(X1,fun(X2,'type.one.one'))),X5),s(X4,happ(s(fun(X6,X4),'_dst_x0x1x0_3'(s(fun(X7,fun(X8,X4)),X9),s(fun(X6,X7),X10),s(X8,X11))),s(X6,X12))))) = s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,fun(X2,'type.one.one'))),X3),X4),'const.pair.,_2'(s('type.infer.exc'(fun(X0,fun(X1,fun(X2,'type.one.one'))),X3),'const.infer.Success_1'(s(fun(X0,fun(X1,fun(X2,'type.one.one'))),X13))),s(X4,happ(s(fun(X8,X4),happ(s(fun(X7,fun(X8,X4)),X9),s(X7,happ(s(fun(X6,X7),X10),s(X6,X12))))),s(X8,X11)))))) )),
  inference(unit_resulting_resolution,[],[f752,f221,f212])).
fof(f14696,plain,(
  ( ! [X6,X4,X2,X0,X14,X12,X10,X8,X7,X5,X3,X1,X13,X11,X9] : (s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,fun(X2,fun(X3,'type.one.one')))),X4),X5),'const.infer.st_ex_return_2'(s(fun(X0,fun(X1,fun(X2,fun(X3,'type.one.one')))),X6),s(X5,happ(s(fun(X7,X5),'_dst_x0x1x0_3'(s(fun(X8,fun(X9,X5)),X10),s(fun(X7,X8),X11),s(X9,X12))),s(X7,X13))))) = s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,fun(X2,fun(X3,'type.one.one')))),X4),X5),'const.pair.,_2'(s('type.infer.exc'(fun(X0,fun(X1,fun(X2,fun(X3,'type.one.one')))),X4),'const.infer.Success_1'(s(fun(X0,fun(X1,fun(X2,fun(X3,'type.one.one')))),X14))),s(X5,happ(s(fun(X9,X5),happ(s(fun(X8,fun(X9,X5)),X10),s(X8,happ(s(fun(X7,X8),X11),s(X7,X13))))),s(X9,X12)))))) )),
  inference(unit_resulting_resolution,[],[f787,f221,f212])).
fof(f14697,plain,(
  ( ! [X6,X4,X2,X0,X14,X12,X10,X8,X7,X5,X3,X1,X15,X13,X11,X9] : (s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,fun(X2,fun(X3,fun(X4,'type.one.one'))))),X5),X6),'const.infer.st_ex_return_2'(s(fun(X0,fun(X1,fun(X2,fun(X3,fun(X4,'type.one.one'))))),X7),s(X6,happ(s(fun(X8,X6),'_dst_x0x1x0_3'(s(fun(X9,fun(X10,X6)),X11),s(fun(X8,X9),X12),s(X10,X13))),s(X8,X14))))) = s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,fun(X2,fun(X3,fun(X4,'type.one.one'))))),X5),X6),'const.pair.,_2'(s('type.infer.exc'(fun(X0,fun(X1,fun(X2,fun(X3,fun(X4,'type.one.one'))))),X5),'const.infer.Success_1'(s(fun(X0,fun(X1,fun(X2,fun(X3,fun(X4,'type.one.one'))))),X15))),s(X6,happ(s(fun(X10,X6),happ(s(fun(X9,fun(X10,X6)),X11),s(X9,happ(s(fun(X8,X9),X12),s(X8,X14))))),s(X10,X13)))))) )),
  inference(unit_resulting_resolution,[],[f815,f221,f212])).
fof(f14701,plain,(
  ( ! [X6,X4,X2,X0,X10,X8,X7,X5,X3,X1,X9] : (s('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),'const.infer.st_ex_return_2'(s('type.one.one',X2),s(X1,happ(s(fun(X3,X1),'_dst_x0x1x0_3'(s(fun(X4,fun(X5,X1)),X6),s(fun(X3,X4),X7),s(X5,X8))),s(X3,X9))))) = s('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),'const.pair.,_2'(s('type.infer.exc'('type.one.one',X0),'const.infer.Success_1'(s('type.one.one',X10))),s(X1,happ(s(fun(X5,X1),happ(s(fun(X4,fun(X5,X1)),X6),s(X4,happ(s(fun(X3,X4),X7),s(X3,X9))))),s(X5,X8)))))) )),
  inference(unit_resulting_resolution,[],[f258,f221,f212])).
fof(f15604,plain,(
  ( ! [X6,X4,X2,X0,X12,X10,X8,X7,X5,X3,X1,X11,X9] : (s('type.pair.prod'('type.infer.exc'('type.list.list'(X0),X1),X2),'const.infer.st_ex_return_2'(s('type.list.list'(X0),'const.list.MAP_2'(s(fun(X3,X0),X4),s('type.list.list'(X3),X5))),s(X2,happ(s(fun(X9,X2),'_dst_x0x1x0_3'(s(fun(X7,fun(X6,X2)),X8),s(fun(X9,X7),X10),s(X6,X12))),s(X9,X11))))) = s('type.pair.prod'('type.infer.exc'('type.list.list'(X0),X1),X2),'const.pair.,_2'(s('type.infer.exc'('type.list.list'(X0),X1),'const.infer.Success_1'(s('type.list.list'(X0),'const.list.MAP_2'(s(fun(X3,X0),X4),s('type.list.list'(X3),X5))))),s(X2,happ(s(fun(X6,X2),happ(s(fun(X7,fun(X6,X2)),X8),s(X7,happ(s(fun(X9,X7),X10),s(X9,X11))))),s(X6,X12)))))) )),
  inference(forward_demodulation,[],[f14702,f180])).
fof(f14702,plain,(
  ( ! [X6,X4,X2,X0,X12,X10,X8,X7,X5,X3,X1,X11,X9] : (s('type.pair.prod'('type.infer.exc'('type.list.list'(X0),X1),X2),'const.pair.,_2'(s('type.infer.exc'('type.list.list'(X0),X1),'const.infer.Success_1'(s('type.list.list'(X0),'const.list.MAP_2'(s(fun(X3,X0),X4),s('type.list.list'(X3),X5))))),s(X2,happ(s(fun(X6,X2),happ(s(fun(X7,fun(X6,X2)),X8),s(X7,happ(s(fun(X9,X7),X10),s(X9,X11))))),s(X6,X12))))) = s('type.pair.prod'('type.infer.exc'('type.list.list'(X0),X1),X2),'const.infer.st_ex_return_2'(s('type.list.list'(X0),happ(s(fun('type.list.list'(X3),'type.list.list'(X0)),happ(s(fun(fun(X3,X0),fun('type.list.list'(X3),'type.list.list'(X0))),'const.list.MAP_0'),s(fun(X3,X0),X4))),s('type.list.list'(X3),X5))),s(X2,happ(s(fun(X9,X2),'_dst_x0x1x0_3'(s(fun(X7,fun(X6,X2)),X8),s(fun(X9,X7),X10),s(X6,X12))),s(X9,X11)))))) )),
  inference(unit_resulting_resolution,[],[f180,f221,f212])).
fof(f15601,plain,(
  ( ! [X6,X4,X2,X0,X10,X8,X7,X5,X3,X1,X9] : (s('type.pair.prod'('type.infer.exc'('type.num.num',X0),X1),'const.infer.st_ex_return_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X3))),s(X1,happ(s(fun(X4,X1),'_dst_x0x1x0_3'(s(fun(X5,fun(X6,X1)),X7),s(fun(X4,X5),X8),s(X6,X9))),s(X4,X10))))) = s('type.pair.prod'('type.infer.exc'('type.num.num',X0),X1),'const.pair.,_2'(s('type.infer.exc'('type.num.num',X0),'const.infer.Success_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X3))))),s(X1,happ(s(fun(X6,X1),happ(s(fun(X5,fun(X6,X1)),X7),s(X5,happ(s(fun(X4,X5),X8),s(X4,X10))))),s(X6,X9)))))) )),
  inference(forward_demodulation,[],[f14705,f175])).
fof(f14705,plain,(
  ( ! [X6,X4,X2,X0,X10,X8,X7,X5,X3,X1,X9] : (s('type.pair.prod'('type.infer.exc'('type.num.num',X0),X1),'const.infer.st_ex_return_2'(s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.arithmetic.+_1'(s('type.num.num',X2))),s('type.num.num',X3))),s(X1,happ(s(fun(X4,X1),'_dst_x0x1x0_3'(s(fun(X5,fun(X6,X1)),X7),s(fun(X4,X5),X8),s(X6,X9))),s(X4,X10))))) = s('type.pair.prod'('type.infer.exc'('type.num.num',X0),X1),'const.pair.,_2'(s('type.infer.exc'('type.num.num',X0),'const.infer.Success_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X3))))),s(X1,happ(s(fun(X6,X1),happ(s(fun(X5,fun(X6,X1)),X7),s(X5,happ(s(fun(X4,X5),X8),s(X4,X10))))),s(X6,X9)))))) )),
  inference(unit_resulting_resolution,[],[f175,f221,f212])).
fof(f15600,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1,X9] : (s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),X1),'const.infer.st_ex_return_2'(s('type.infer_t.infer_t','const.infer_t.Infer_Tuvar_1'(s('type.num.num',X2))),s(X1,happ(s(fun(X3,X1),'_dst_x0x1x0_3'(s(fun(X4,fun(X5,X1)),X6),s(fun(X3,X4),X7),s(X5,X8))),s(X3,X9))))) = s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),X1),'const.pair.,_2'(s('type.infer.exc'('type.infer_t.infer_t',X0),'const.infer.Success_1'(s('type.infer_t.infer_t','const.infer_t.Infer_Tuvar_1'(s('type.num.num',X2))))),s(X1,happ(s(fun(X5,X1),happ(s(fun(X4,fun(X5,X1)),X6),s(X4,happ(s(fun(X3,X4),X7),s(X3,X9))))),s(X5,X8)))))) )),
  inference(forward_demodulation,[],[f14706,f166])).
fof(f14706,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1,X9] : (s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),X1),'const.infer.st_ex_return_2'(s('type.infer_t.infer_t',happ(s(fun('type.num.num','type.infer_t.infer_t'),'const.infer_t.Infer_Tuvar_0'),s('type.num.num',X2))),s(X1,happ(s(fun(X3,X1),'_dst_x0x1x0_3'(s(fun(X4,fun(X5,X1)),X6),s(fun(X3,X4),X7),s(X5,X8))),s(X3,X9))))) = s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),X1),'const.pair.,_2'(s('type.infer.exc'('type.infer_t.infer_t',X0),'const.infer.Success_1'(s('type.infer_t.infer_t','const.infer_t.Infer_Tuvar_1'(s('type.num.num',X2))))),s(X1,happ(s(fun(X5,X1),happ(s(fun(X4,fun(X5,X1)),X6),s(X4,happ(s(fun(X3,X4),X7),s(X3,X9))))),s(X5,X8)))))) )),
  inference(unit_resulting_resolution,[],[f166,f221,f212])).
fof(f15599,plain,(
  ( ! [X6,X4,X2,X0,X10,X8,X7,X5,X3,X1,X9] : (s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),X1),'const.infer.st_ex_return_2'(s('type.infer_t.infer_t','const.unify.t_walkstar_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X2),s('type.infer_t.infer_t',X3))),s(X1,happ(s(fun(X7,X1),'_dst_x0x1x0_3'(s(fun(X5,fun(X4,X1)),X6),s(fun(X7,X5),X8),s(X4,X10))),s(X7,X9))))) = s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),X1),'const.pair.,_2'(s('type.infer.exc'('type.infer_t.infer_t',X0),'const.infer.Success_1'(s('type.infer_t.infer_t','const.unify.t_walkstar_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X2),s('type.infer_t.infer_t',X3))))),s(X1,happ(s(fun(X4,X1),happ(s(fun(X5,fun(X4,X1)),X6),s(X5,happ(s(fun(X7,X5),X8),s(X7,X9))))),s(X4,X10)))))) )),
  inference(forward_demodulation,[],[f14707,f176])).
fof(f14707,plain,(
  ( ! [X6,X4,X2,X0,X10,X8,X7,X5,X3,X1,X9] : (s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),X1),'const.pair.,_2'(s('type.infer.exc'('type.infer_t.infer_t',X0),'const.infer.Success_1'(s('type.infer_t.infer_t','const.unify.t_walkstar_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X2),s('type.infer_t.infer_t',X3))))),s(X1,happ(s(fun(X4,X1),happ(s(fun(X5,fun(X4,X1)),X6),s(X5,happ(s(fun(X7,X5),X8),s(X7,X9))))),s(X4,X10))))) = s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),X1),'const.infer.st_ex_return_2'(s('type.infer_t.infer_t',happ(s(fun('type.infer_t.infer_t','type.infer_t.infer_t'),happ(s(fun('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),fun('type.infer_t.infer_t','type.infer_t.infer_t')),'const.unify.t_walkstar_0'),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X2))),s('type.infer_t.infer_t',X3))),s(X1,happ(s(fun(X7,X1),'_dst_x0x1x0_3'(s(fun(X5,fun(X4,X1)),X6),s(fun(X7,X5),X8),s(X4,X10))),s(X7,X9)))))) )),
  inference(unit_resulting_resolution,[],[f176,f221,f212])).
fof(f15597,plain,(
  ( ! [X6,X4,X2,X0,X10,X8,X7,X5,X3,X1,X11,X9] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X0),X2),X3),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'(X0,X1),X0),'const.infer.read_1'(s(X0,X4))),s(X3,happ(s(fun(X5,X3),'_dst_x0x1x0_3'(s(fun(X6,fun(X7,X3)),X8),s(fun(X5,X6),X9),s(X7,X10))),s(X5,X11))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X0),X2),X3),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X0),X2),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'(X0,X1),X0),'const.infer.read_1'(s(X0,X4))))),s(X3,happ(s(fun(X7,X3),happ(s(fun(X6,fun(X7,X3)),X8),s(X6,happ(s(fun(X5,X6),X9),s(X5,X11))))),s(X7,X10)))))) )),
  inference(forward_demodulation,[],[f14709,f178])).
fof(f14709,plain,(
  ( ! [X6,X4,X2,X0,X10,X8,X7,X5,X3,X1,X11,X9] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X0),X2),X3),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'(X0,X1),X0),happ(s(fun(X0,'type.pair.prod'('type.infer.exc'(X0,X1),X0)),'const.infer.read_0'),s(X0,X4))),s(X3,happ(s(fun(X5,X3),'_dst_x0x1x0_3'(s(fun(X6,fun(X7,X3)),X8),s(fun(X5,X6),X9),s(X7,X10))),s(X5,X11))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X0),X2),X3),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X0),X2),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'(X0,X1),X0),'const.infer.read_1'(s(X0,X4))))),s(X3,happ(s(fun(X7,X3),happ(s(fun(X6,fun(X7,X3)),X8),s(X6,happ(s(fun(X5,X6),X9),s(X5,X11))))),s(X7,X10)))))) )),
  inference(unit_resulting_resolution,[],[f178,f221,f212])).
fof(f15595,plain,(
  ( ! [X6,X4,X2,X0,X12,X10,X8,X7,X5,X3,X1,X13,X11,X9] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),X4),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'(X0,X1),X2),'const.infer.st_ex_return_2'(s(X0,X5),s(X2,X6))),s(X4,happ(s(fun(X10,X4),'_dst_x0x1x0_3'(s(fun(X8,fun(X7,X4)),X9),s(fun(X10,X8),X11),s(X7,X13))),s(X10,X12))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),X4),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'(X0,X1),X2),'const.infer.st_ex_return_2'(s(X0,X5),s(X2,X6))))),s(X4,happ(s(fun(X7,X4),happ(s(fun(X8,fun(X7,X4)),X9),s(X8,happ(s(fun(X10,X8),X11),s(X10,X12))))),s(X7,X13)))))) )),
  inference(forward_demodulation,[],[f14711,f205])).
fof(f14711,plain,(
  ( ! [X6,X4,X2,X0,X12,X10,X8,X7,X5,X3,X1,X13,X11,X9] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),X4),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'(X0,X1),X2),'const.infer.st_ex_return_2'(s(X0,X5),s(X2,X6))))),s(X4,happ(s(fun(X7,X4),happ(s(fun(X8,fun(X7,X4)),X9),s(X8,happ(s(fun(X10,X8),X11),s(X10,X12))))),s(X7,X13))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),X4),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'(X0,X1),X2),happ(s(fun(X2,'type.pair.prod'('type.infer.exc'(X0,X1),X2)),happ(s(fun(X0,fun(X2,'type.pair.prod'('type.infer.exc'(X0,X1),X2))),'const.infer.st_ex_return_0'),s(X0,X5))),s(X2,X6))),s(X4,happ(s(fun(X10,X4),'_dst_x0x1x0_3'(s(fun(X8,fun(X7,X4)),X9),s(fun(X10,X8),X11),s(X7,X13))),s(X10,X12)))))) )),
  inference(unit_resulting_resolution,[],[f205,f221,f212])).
fof(f15594,plain,(
  ( ! [X6,X4,X2,X0,X10,X8,X7,X5,X3,X1,X11,X9] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),X2),X3),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),'const.infer.fresh_uvar_1'(s('type.infer.infer_st'(X1),X4))),s(X3,happ(s(fun(X5,X3),'_dst_x0x1x0_3'(s(fun(X6,fun(X7,X3)),X8),s(fun(X5,X6),X9),s(X7,X10))),s(X5,X11))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),X2),X3),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),X2),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),'const.infer.fresh_uvar_1'(s('type.infer.infer_st'(X1),X4))))),s(X3,happ(s(fun(X7,X3),happ(s(fun(X6,fun(X7,X3)),X8),s(X6,happ(s(fun(X5,X6),X9),s(X5,X11))))),s(X7,X10)))))) )),
  inference(forward_demodulation,[],[f14716,f179])).
fof(f14716,plain,(
  ( ! [X6,X4,X2,X0,X10,X8,X7,X5,X3,X1,X11,X9] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),X2),X3),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),happ(s(fun('type.infer.infer_st'(X1),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1))),'const.infer.fresh_uvar_0'),s('type.infer.infer_st'(X1),X4))),s(X3,happ(s(fun(X5,X3),'_dst_x0x1x0_3'(s(fun(X6,fun(X7,X3)),X8),s(fun(X5,X6),X9),s(X7,X10))),s(X5,X11))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),X2),X3),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),X2),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),'const.infer.fresh_uvar_1'(s('type.infer.infer_st'(X1),X4))))),s(X3,happ(s(fun(X7,X3),happ(s(fun(X6,fun(X7,X3)),X8),s(X6,happ(s(fun(X5,X6),X9),s(X5,X11))))),s(X7,X10)))))) )),
  inference(unit_resulting_resolution,[],[f179,f221,f212])).
fof(f15593,plain,(
  ( ! [X6,X4,X2,X0,X10,X8,X7,X5,X3,X1,X11,X9] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X1),X2),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.apply_subst_2'(s('type.infer_t.infer_t',X3),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X4))),s(X2,happ(s(fun(X5,X2),'_dst_x0x1x0_3'(s(fun(X6,fun(X7,X2)),X8),s(fun(X5,X6),X9),s(X7,X10))),s(X5,X11))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X1),X2),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X1),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.apply_subst_2'(s('type.infer_t.infer_t',X3),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X4))))),s(X2,happ(s(fun(X7,X2),happ(s(fun(X6,fun(X7,X2)),X8),s(X6,happ(s(fun(X5,X6),X9),s(X5,X11))))),s(X7,X10)))))) )),
  inference(forward_demodulation,[],[f14717,f171])).
fof(f14717,plain,(
  ( ! [X6,X4,X2,X0,X10,X8,X7,X5,X3,X1,X11,X9] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X1),X2),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),happ(s(fun('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.infer.apply_subst_1'(s('type.infer_t.infer_t',X3))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X4))),s(X2,happ(s(fun(X5,X2),'_dst_x0x1x0_3'(s(fun(X6,fun(X7,X2)),X8),s(fun(X5,X6),X9),s(X7,X10))),s(X5,X11))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X1),X2),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X1),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.apply_subst_2'(s('type.infer_t.infer_t',X3),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X4))))),s(X2,happ(s(fun(X7,X2),happ(s(fun(X6,fun(X7,X2)),X8),s(X6,happ(s(fun(X5,X6),X9),s(X5,X11))))),s(X7,X10)))))) )),
  inference(unit_resulting_resolution,[],[f171,f221,f212])).
fof(f15592,plain,(
  ( ! [X6,X4,X2,X0,X12,X10,X8,X7,X5,X3,X1,X13,X11,X9] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),X4),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'(X0,X1),X2),'const.infer.failwith_2'(s(X1,X5),s(X2,X6))),s(X4,happ(s(fun(X7,X4),'_dst_x0x1x0_3'(s(fun(X8,fun(X9,X4)),X10),s(fun(X7,X8),X11),s(X9,X12))),s(X7,X13))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),X4),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'(X0,X1),X2),'const.infer.failwith_2'(s(X1,X5),s(X2,X6))))),s(X4,happ(s(fun(X9,X4),happ(s(fun(X8,fun(X9,X4)),X10),s(X8,happ(s(fun(X7,X8),X11),s(X7,X13))))),s(X9,X12)))))) )),
  inference(forward_demodulation,[],[f14718,f204])).
fof(f14718,plain,(
  ( ! [X6,X4,X2,X0,X12,X10,X8,X7,X5,X3,X1,X13,X11,X9] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),X4),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'(X0,X1),X2),happ(s(fun(X2,'type.pair.prod'('type.infer.exc'(X0,X1),X2)),'const.infer.failwith_1'(s(X1,X5))),s(X2,X6))),s(X4,happ(s(fun(X7,X4),'_dst_x0x1x0_3'(s(fun(X8,fun(X9,X4)),X10),s(fun(X7,X8),X11),s(X9,X12))),s(X7,X13))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),X4),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'(X0,X1),X2),'const.infer.failwith_2'(s(X1,X5),s(X2,X6))))),s(X4,happ(s(fun(X9,X4),happ(s(fun(X8,fun(X9,X4)),X10),s(X8,happ(s(fun(X7,X8),X11),s(X7,X13))))),s(X9,X12)))))) )),
  inference(unit_resulting_resolution,[],[f204,f221,f212])).
fof(f15591,plain,(
  ( ! [X6,X4,X2,X0,X12,X10,X8,X7,X5,X3,X1,X13,X11,X9] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),X2),X3),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),'const.infer.guard_3'(s(bool,X4),s(X0,X5),s(X1,X6))),s(X3,happ(s(fun(X7,X3),'_dst_x0x1x0_3'(s(fun(X8,fun(X9,X3)),X10),s(fun(X7,X8),X11),s(X9,X12))),s(X7,X13))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),X2),X3),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),X2),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),'const.infer.guard_3'(s(bool,X4),s(X0,X5),s(X1,X6))))),s(X3,happ(s(fun(X9,X3),happ(s(fun(X8,fun(X9,X3)),X10),s(X8,happ(s(fun(X7,X8),X11),s(X7,X13))))),s(X9,X12)))))) )),
  inference(forward_demodulation,[],[f14719,f183])).
fof(f14719,plain,(
  ( ! [X6,X4,X2,X0,X12,X10,X8,X7,X5,X3,X1,X13,X11,X9] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),X2),X3),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),happ(s(fun(X1,'type.pair.prod'('type.infer.exc'('type.one.one',X0),X1)),'const.infer.guard_2'(s(bool,X4),s(X0,X5))),s(X1,X6))),s(X3,happ(s(fun(X7,X3),'_dst_x0x1x0_3'(s(fun(X8,fun(X9,X3)),X10),s(fun(X7,X8),X11),s(X9,X12))),s(X7,X13))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),X2),X3),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),X2),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),'const.infer.guard_3'(s(bool,X4),s(X0,X5),s(X1,X6))))),s(X3,happ(s(fun(X9,X3),happ(s(fun(X8,fun(X9,X3)),X10),s(X8,happ(s(fun(X7,X8),X11),s(X7,X13))))),s(X9,X12)))))) )),
  inference(unit_resulting_resolution,[],[f183,f221,f212])).
fof(f14721,plain,(
  ( ! [X6,X4,X2,X0,X14,X12,X10,X8,X7,X5,X3,X1,X13,X11,X9] : (s('type.pair.prod'('type.infer.exc'(X0,X1),X2),'const.infer.st_ex_return_2'(s(X0,happ(s(fun(X3,X0),'_dst_x0x1x0_3'(s(fun(X4,fun(X5,X0)),X6),s(fun(X3,X4),X7),s(X5,X8))),s(X3,X9))),s(X2,happ(s(fun(X10,X2),X11),s(X10,happ(s(fun(X12,X10),X13),s(X12,X14))))))) = s('type.pair.prod'('type.infer.exc'(X0,X1),X2),'const.pair.,_2'(s('type.infer.exc'(X0,X1),'const.infer.Success_1'(s(X0,happ(s(fun(X5,X0),happ(s(fun(X4,fun(X5,X0)),X6),s(X4,happ(s(fun(X3,X4),X7),s(X3,X9))))),s(X5,X8))))),s(X2,happ(s(fun(X12,X2),'_dst_x0x1_2'(s(fun(X10,X2),X11),s(fun(X12,X10),X13))),s(X12,X14)))))) )),
  inference(unit_resulting_resolution,[],[f206,f221,f212])).
fof(f14722,plain,(
  ( ! [X6,X4,X2,X0,X14,X12,X10,X8,X7,X5,X3,X1,X15,X13,X11,X9,X16] : (s('type.pair.prod'('type.infer.exc'(X0,X1),X2),'const.infer.st_ex_return_2'(s(X0,happ(s(fun(X3,X0),'_dst_x0x1x0_3'(s(fun(X4,fun(X5,X0)),X6),s(fun(X3,X4),X7),s(X5,X8))),s(X3,X9))),s(X2,happ(s(fun(X10,X2),'_dst_x0x1x0_3'(s(fun(X11,fun(X12,X2)),X13),s(fun(X10,X11),X14),s(X12,X15))),s(X10,X16))))) = s('type.pair.prod'('type.infer.exc'(X0,X1),X2),'const.pair.,_2'(s('type.infer.exc'(X0,X1),'const.infer.Success_1'(s(X0,happ(s(fun(X5,X0),happ(s(fun(X4,fun(X5,X0)),X6),s(X4,happ(s(fun(X3,X4),X7),s(X3,X9))))),s(X5,X8))))),s(X2,happ(s(fun(X12,X2),happ(s(fun(X11,fun(X12,X2)),X13),s(X11,happ(s(fun(X10,X11),X14),s(X10,X16))))),s(X12,X15)))))) )),
  inference(unit_resulting_resolution,[],[f221,f221,f212])).
fof(f15573,plain,(
  ( ! [X6,X4,X2,X0,X10,X8,X7,X5,X3,X1,X9] : (s('type.pair.prod'('type.infer.exc'(X0,X1),X2),'const.infer.st_ex_return_2'(s(X0,happ(s(fun(X3,X0),'_dst_x0x1x0_3'(s(fun(X4,fun(X5,X0)),X6),s(fun(X3,X4),X7),s(X5,X8))),s(X3,X9))),s(X2,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(X2),X10))))) = s('type.pair.prod'('type.infer.exc'(X0,X1),X2),'const.pair.,_2'(s('type.infer.exc'(X0,X1),'const.infer.Success_1'(s(X0,happ(s(fun(X5,X0),happ(s(fun(X4,fun(X5,X0)),X6),s(X4,happ(s(fun(X3,X4),X7),s(X3,X9))))),s(X5,X8))))),s(X2,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(X2),X10)))))) )),
  inference(forward_demodulation,[],[f14753,f168])).
fof(f14753,plain,(
  ( ! [X6,X4,X2,X0,X10,X8,X7,X5,X3,X1,X9] : (s('type.pair.prod'('type.infer.exc'(X0,X1),X2),'const.infer.st_ex_return_2'(s(X0,happ(s(fun(X3,X0),'_dst_x0x1x0_3'(s(fun(X4,fun(X5,X0)),X6),s(fun(X3,X4),X7),s(X5,X8))),s(X3,X9))),s(X2,happ(s(fun('type.infer.infer_st'(X2),X2),'const.infer.infer_st_subst_0'),s('type.infer.infer_st'(X2),X10))))) = s('type.pair.prod'('type.infer.exc'(X0,X1),X2),'const.pair.,_2'(s('type.infer.exc'(X0,X1),'const.infer.Success_1'(s(X0,happ(s(fun(X5,X0),happ(s(fun(X4,fun(X5,X0)),X6),s(X4,happ(s(fun(X3,X4),X7),s(X3,X9))))),s(X5,X8))))),s(X2,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(X2),X10)))))) )),
  inference(unit_resulting_resolution,[],[f168,f221,f212])).
fof(f14754,plain,(
  ( ! [X6,X4,X2,X0,X14,X12,X10,X8,X7,X5,X3,X1,X13,X11,X9] : (s('type.pair.prod'('type.infer.exc'(X0,X1),X2),'const.infer.st_ex_return_2'(s(X0,happ(s(fun(X3,X0),'_dst_x0x1x0_3'(s(fun(X4,fun(X5,X0)),X6),s(fun(X3,X4),X7),s(X5,X8))),s(X3,X9))),s(X2,happ(s(fun(X10,X2),'_dst_x0x1_2'(s(fun(X11,X2),X12),s(fun(X10,X11),X13))),s(X10,X14))))) = s('type.pair.prod'('type.infer.exc'(X0,X1),X2),'const.pair.,_2'(s('type.infer.exc'(X0,X1),'const.infer.Success_1'(s(X0,happ(s(fun(X5,X0),happ(s(fun(X4,fun(X5,X0)),X6),s(X4,happ(s(fun(X3,X4),X7),s(X3,X9))))),s(X5,X8))))),s(X2,happ(s(fun(X11,X2),X12),s(X11,happ(s(fun(X10,X11),X13),s(X10,X14)))))))) )),
  inference(unit_resulting_resolution,[],[f206,f221,f212])).
fof(f14758,plain,(
  ( ! [X6,X4,X2,X0,X10,X8,X7,X5,X3,X1,X11,X9] : (s('type.pair.prod'('type.infer.exc'(X0,X1),fun(X2,'type.one.one')),'const.infer.st_ex_return_2'(s(X0,happ(s(fun(X3,X0),'_dst_x0x1x0_3'(s(fun(X4,fun(X5,X0)),X6),s(fun(X3,X4),X7),s(X5,X8))),s(X3,X9))),s(fun(X2,'type.one.one'),X10))) = s('type.pair.prod'('type.infer.exc'(X0,X1),fun(X2,'type.one.one')),'const.pair.,_2'(s('type.infer.exc'(X0,X1),'const.infer.Success_1'(s(X0,happ(s(fun(X5,X0),happ(s(fun(X4,fun(X5,X0)),X6),s(X4,happ(s(fun(X3,X4),X7),s(X3,X9))))),s(X5,X8))))),s(fun(X2,'type.one.one'),X11)))) )),
  inference(unit_resulting_resolution,[],[f605,f221,f212])).
fof(f14760,plain,(
  ( ! [X6,X4,X2,X0,X12,X10,X8,X7,X5,X3,X1,X11,X9] : (s('type.pair.prod'('type.infer.exc'(X0,X1),fun(X2,fun(X3,'type.one.one'))),'const.infer.st_ex_return_2'(s(X0,happ(s(fun(X4,X0),'_dst_x0x1x0_3'(s(fun(X5,fun(X6,X0)),X7),s(fun(X4,X5),X8),s(X6,X9))),s(X4,X10))),s(fun(X2,fun(X3,'type.one.one')),X11))) = s('type.pair.prod'('type.infer.exc'(X0,X1),fun(X2,fun(X3,'type.one.one'))),'const.pair.,_2'(s('type.infer.exc'(X0,X1),'const.infer.Success_1'(s(X0,happ(s(fun(X6,X0),happ(s(fun(X5,fun(X6,X0)),X7),s(X5,happ(s(fun(X4,X5),X8),s(X4,X10))))),s(X6,X9))))),s(fun(X2,fun(X3,'type.one.one')),X12)))) )),
  inference(unit_resulting_resolution,[],[f724,f221,f212])).
fof(f14761,plain,(
  ( ! [X6,X4,X2,X0,X12,X10,X8,X7,X5,X3,X1,X13,X11,X9] : (s('type.pair.prod'('type.infer.exc'(X0,X1),fun(X2,fun(X3,fun(X4,'type.one.one')))),'const.infer.st_ex_return_2'(s(X0,happ(s(fun(X5,X0),'_dst_x0x1x0_3'(s(fun(X6,fun(X7,X0)),X8),s(fun(X5,X6),X9),s(X7,X10))),s(X5,X11))),s(fun(X2,fun(X3,fun(X4,'type.one.one'))),X12))) = s('type.pair.prod'('type.infer.exc'(X0,X1),fun(X2,fun(X3,fun(X4,'type.one.one')))),'const.pair.,_2'(s('type.infer.exc'(X0,X1),'const.infer.Success_1'(s(X0,happ(s(fun(X7,X0),happ(s(fun(X6,fun(X7,X0)),X8),s(X6,happ(s(fun(X5,X6),X9),s(X5,X11))))),s(X7,X10))))),s(fun(X2,fun(X3,fun(X4,'type.one.one'))),X13)))) )),
  inference(unit_resulting_resolution,[],[f752,f221,f212])).
fof(f14762,plain,(
  ( ! [X6,X4,X2,X0,X14,X12,X10,X8,X7,X5,X3,X1,X13,X11,X9] : (s('type.pair.prod'('type.infer.exc'(X0,X1),fun(X2,fun(X3,fun(X4,fun(X5,'type.one.one'))))),'const.infer.st_ex_return_2'(s(X0,happ(s(fun(X6,X0),'_dst_x0x1x0_3'(s(fun(X7,fun(X8,X0)),X9),s(fun(X6,X7),X10),s(X8,X11))),s(X6,X12))),s(fun(X2,fun(X3,fun(X4,fun(X5,'type.one.one')))),X13))) = s('type.pair.prod'('type.infer.exc'(X0,X1),fun(X2,fun(X3,fun(X4,fun(X5,'type.one.one'))))),'const.pair.,_2'(s('type.infer.exc'(X0,X1),'const.infer.Success_1'(s(X0,happ(s(fun(X8,X0),happ(s(fun(X7,fun(X8,X0)),X9),s(X7,happ(s(fun(X6,X7),X10),s(X6,X12))))),s(X8,X11))))),s(fun(X2,fun(X3,fun(X4,fun(X5,'type.one.one')))),X14)))) )),
  inference(unit_resulting_resolution,[],[f787,f221,f212])).
fof(f14763,plain,(
  ( ! [X6,X4,X2,X0,X14,X12,X10,X8,X7,X5,X3,X1,X15,X13,X11,X9] : (s('type.pair.prod'('type.infer.exc'(X0,X1),fun(X2,fun(X3,fun(X4,fun(X5,fun(X6,'type.one.one')))))),'const.infer.st_ex_return_2'(s(X0,happ(s(fun(X7,X0),'_dst_x0x1x0_3'(s(fun(X8,fun(X9,X0)),X10),s(fun(X7,X8),X11),s(X9,X12))),s(X7,X13))),s(fun(X2,fun(X3,fun(X4,fun(X5,fun(X6,'type.one.one'))))),X14))) = s('type.pair.prod'('type.infer.exc'(X0,X1),fun(X2,fun(X3,fun(X4,fun(X5,fun(X6,'type.one.one')))))),'const.pair.,_2'(s('type.infer.exc'(X0,X1),'const.infer.Success_1'(s(X0,happ(s(fun(X9,X0),happ(s(fun(X8,fun(X9,X0)),X10),s(X8,happ(s(fun(X7,X8),X11),s(X7,X13))))),s(X9,X12))))),s(fun(X2,fun(X3,fun(X4,fun(X5,fun(X6,'type.one.one'))))),X15)))) )),
  inference(unit_resulting_resolution,[],[f815,f221,f212])).
fof(f14767,plain,(
  ( ! [X6,X4,X2,X0,X10,X8,X7,X5,X3,X1,X9] : (s('type.pair.prod'('type.infer.exc'(X0,X1),'type.one.one'),'const.infer.st_ex_return_2'(s(X0,happ(s(fun(X2,X0),'_dst_x0x1x0_3'(s(fun(X3,fun(X4,X0)),X5),s(fun(X2,X3),X6),s(X4,X7))),s(X2,X8))),s('type.one.one',X9))) = s('type.pair.prod'('type.infer.exc'(X0,X1),'type.one.one'),'const.pair.,_2'(s('type.infer.exc'(X0,X1),'const.infer.Success_1'(s(X0,happ(s(fun(X4,X0),happ(s(fun(X3,fun(X4,X0)),X5),s(X3,happ(s(fun(X2,X3),X6),s(X2,X8))))),s(X4,X7))))),s('type.one.one',X10)))) )),
  inference(unit_resulting_resolution,[],[f258,f221,f212])).
fof(f15570,plain,(
  ( ! [X6,X4,X2,X0,X12,X10,X8,X7,X5,X3,X1,X11,X9] : (s('type.pair.prod'('type.infer.exc'(X0,X1),'type.list.list'(X2)),'const.infer.st_ex_return_2'(s(X0,happ(s(fun(X6,X0),'_dst_x0x1x0_3'(s(fun(X4,fun(X3,X0)),X5),s(fun(X6,X4),X7),s(X3,X9))),s(X6,X8))),s('type.list.list'(X2),'const.list.MAP_2'(s(fun(X10,X2),X11),s('type.list.list'(X10),X12))))) = s('type.pair.prod'('type.infer.exc'(X0,X1),'type.list.list'(X2)),'const.pair.,_2'(s('type.infer.exc'(X0,X1),'const.infer.Success_1'(s(X0,happ(s(fun(X3,X0),happ(s(fun(X4,fun(X3,X0)),X5),s(X4,happ(s(fun(X6,X4),X7),s(X6,X8))))),s(X3,X9))))),s('type.list.list'(X2),'const.list.MAP_2'(s(fun(X10,X2),X11),s('type.list.list'(X10),X12)))))) )),
  inference(forward_demodulation,[],[f14768,f180])).
fof(f14768,plain,(
  ( ! [X6,X4,X2,X0,X12,X10,X8,X7,X5,X3,X1,X11,X9] : (s('type.pair.prod'('type.infer.exc'(X0,X1),'type.list.list'(X2)),'const.pair.,_2'(s('type.infer.exc'(X0,X1),'const.infer.Success_1'(s(X0,happ(s(fun(X3,X0),happ(s(fun(X4,fun(X3,X0)),X5),s(X4,happ(s(fun(X6,X4),X7),s(X6,X8))))),s(X3,X9))))),s('type.list.list'(X2),'const.list.MAP_2'(s(fun(X10,X2),X11),s('type.list.list'(X10),X12))))) = s('type.pair.prod'('type.infer.exc'(X0,X1),'type.list.list'(X2)),'const.infer.st_ex_return_2'(s(X0,happ(s(fun(X6,X0),'_dst_x0x1x0_3'(s(fun(X4,fun(X3,X0)),X5),s(fun(X6,X4),X7),s(X3,X9))),s(X6,X8))),s('type.list.list'(X2),happ(s(fun('type.list.list'(X10),'type.list.list'(X2)),happ(s(fun(fun(X10,X2),fun('type.list.list'(X10),'type.list.list'(X2))),'const.list.MAP_0'),s(fun(X10,X2),X11))),s('type.list.list'(X10),X12)))))) )),
  inference(unit_resulting_resolution,[],[f180,f221,f212])).
fof(f15567,plain,(
  ( ! [X6,X4,X2,X0,X10,X8,X7,X5,X3,X1,X9] : (s('type.pair.prod'('type.infer.exc'(X0,X1),'type.num.num'),'const.infer.st_ex_return_2'(s(X0,happ(s(fun(X2,X0),'_dst_x0x1x0_3'(s(fun(X3,fun(X4,X0)),X5),s(fun(X2,X3),X6),s(X4,X7))),s(X2,X8))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X9),s('type.num.num',X10))))) = s('type.pair.prod'('type.infer.exc'(X0,X1),'type.num.num'),'const.pair.,_2'(s('type.infer.exc'(X0,X1),'const.infer.Success_1'(s(X0,happ(s(fun(X4,X0),happ(s(fun(X3,fun(X4,X0)),X5),s(X3,happ(s(fun(X2,X3),X6),s(X2,X8))))),s(X4,X7))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X9),s('type.num.num',X10)))))) )),
  inference(forward_demodulation,[],[f14771,f175])).
fof(f14771,plain,(
  ( ! [X6,X4,X2,X0,X10,X8,X7,X5,X3,X1,X9] : (s('type.pair.prod'('type.infer.exc'(X0,X1),'type.num.num'),'const.infer.st_ex_return_2'(s(X0,happ(s(fun(X2,X0),'_dst_x0x1x0_3'(s(fun(X3,fun(X4,X0)),X5),s(fun(X2,X3),X6),s(X4,X7))),s(X2,X8))),s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.arithmetic.+_1'(s('type.num.num',X9))),s('type.num.num',X10))))) = s('type.pair.prod'('type.infer.exc'(X0,X1),'type.num.num'),'const.pair.,_2'(s('type.infer.exc'(X0,X1),'const.infer.Success_1'(s(X0,happ(s(fun(X4,X0),happ(s(fun(X3,fun(X4,X0)),X5),s(X3,happ(s(fun(X2,X3),X6),s(X2,X8))))),s(X4,X7))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X9),s('type.num.num',X10)))))) )),
  inference(unit_resulting_resolution,[],[f175,f221,f212])).
fof(f15566,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1,X9] : (s('type.pair.prod'('type.infer.exc'(X0,X1),'type.infer_t.infer_t'),'const.infer.st_ex_return_2'(s(X0,happ(s(fun(X2,X0),'_dst_x0x1x0_3'(s(fun(X3,fun(X4,X0)),X5),s(fun(X2,X3),X6),s(X4,X7))),s(X2,X8))),s('type.infer_t.infer_t','const.infer_t.Infer_Tuvar_1'(s('type.num.num',X9))))) = s('type.pair.prod'('type.infer.exc'(X0,X1),'type.infer_t.infer_t'),'const.pair.,_2'(s('type.infer.exc'(X0,X1),'const.infer.Success_1'(s(X0,happ(s(fun(X4,X0),happ(s(fun(X3,fun(X4,X0)),X5),s(X3,happ(s(fun(X2,X3),X6),s(X2,X8))))),s(X4,X7))))),s('type.infer_t.infer_t','const.infer_t.Infer_Tuvar_1'(s('type.num.num',X9)))))) )),
  inference(forward_demodulation,[],[f14772,f166])).
fof(f14772,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1,X9] : (s('type.pair.prod'('type.infer.exc'(X0,X1),'type.infer_t.infer_t'),'const.infer.st_ex_return_2'(s(X0,happ(s(fun(X2,X0),'_dst_x0x1x0_3'(s(fun(X3,fun(X4,X0)),X5),s(fun(X2,X3),X6),s(X4,X7))),s(X2,X8))),s('type.infer_t.infer_t',happ(s(fun('type.num.num','type.infer_t.infer_t'),'const.infer_t.Infer_Tuvar_0'),s('type.num.num',X9))))) = s('type.pair.prod'('type.infer.exc'(X0,X1),'type.infer_t.infer_t'),'const.pair.,_2'(s('type.infer.exc'(X0,X1),'const.infer.Success_1'(s(X0,happ(s(fun(X4,X0),happ(s(fun(X3,fun(X4,X0)),X5),s(X3,happ(s(fun(X2,X3),X6),s(X2,X8))))),s(X4,X7))))),s('type.infer_t.infer_t','const.infer_t.Infer_Tuvar_1'(s('type.num.num',X9)))))) )),
  inference(unit_resulting_resolution,[],[f166,f221,f212])).
fof(f15565,plain,(
  ( ! [X6,X4,X2,X0,X10,X8,X7,X5,X3,X1,X9] : (s('type.pair.prod'('type.infer.exc'(X0,X1),'type.infer_t.infer_t'),'const.infer.st_ex_return_2'(s(X0,happ(s(fun(X5,X0),'_dst_x0x1x0_3'(s(fun(X3,fun(X2,X0)),X4),s(fun(X5,X3),X6),s(X2,X8))),s(X5,X7))),s('type.infer_t.infer_t','const.unify.t_walkstar_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X9),s('type.infer_t.infer_t',X10))))) = s('type.pair.prod'('type.infer.exc'(X0,X1),'type.infer_t.infer_t'),'const.pair.,_2'(s('type.infer.exc'(X0,X1),'const.infer.Success_1'(s(X0,happ(s(fun(X2,X0),happ(s(fun(X3,fun(X2,X0)),X4),s(X3,happ(s(fun(X5,X3),X6),s(X5,X7))))),s(X2,X8))))),s('type.infer_t.infer_t','const.unify.t_walkstar_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X9),s('type.infer_t.infer_t',X10)))))) )),
  inference(forward_demodulation,[],[f14773,f176])).
fof(f14773,plain,(
  ( ! [X6,X4,X2,X0,X10,X8,X7,X5,X3,X1,X9] : (s('type.pair.prod'('type.infer.exc'(X0,X1),'type.infer_t.infer_t'),'const.pair.,_2'(s('type.infer.exc'(X0,X1),'const.infer.Success_1'(s(X0,happ(s(fun(X2,X0),happ(s(fun(X3,fun(X2,X0)),X4),s(X3,happ(s(fun(X5,X3),X6),s(X5,X7))))),s(X2,X8))))),s('type.infer_t.infer_t','const.unify.t_walkstar_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X9),s('type.infer_t.infer_t',X10))))) = s('type.pair.prod'('type.infer.exc'(X0,X1),'type.infer_t.infer_t'),'const.infer.st_ex_return_2'(s(X0,happ(s(fun(X5,X0),'_dst_x0x1x0_3'(s(fun(X3,fun(X2,X0)),X4),s(fun(X5,X3),X6),s(X2,X8))),s(X5,X7))),s('type.infer_t.infer_t',happ(s(fun('type.infer_t.infer_t','type.infer_t.infer_t'),happ(s(fun('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),fun('type.infer_t.infer_t','type.infer_t.infer_t')),'const.unify.t_walkstar_0'),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X9))),s('type.infer_t.infer_t',X10)))))) )),
  inference(unit_resulting_resolution,[],[f176,f221,f212])).
fof(f15563,plain,(
  ( ! [X6,X4,X2,X0,X10,X8,X7,X5,X3,X1,X11,X9] : (s('type.pair.prod'('type.infer.exc'(X0,X1),'type.pair.prod'('type.infer.exc'(X2,X3),X2)),'const.infer.st_ex_return_2'(s(X0,happ(s(fun(X7,X0),'_dst_x0x1x0_3'(s(fun(X5,fun(X4,X0)),X6),s(fun(X7,X5),X8),s(X4,X10))),s(X7,X9))),s('type.pair.prod'('type.infer.exc'(X2,X3),X2),'const.infer.read_1'(s(X2,X11))))) = s('type.pair.prod'('type.infer.exc'(X0,X1),'type.pair.prod'('type.infer.exc'(X2,X3),X2)),'const.pair.,_2'(s('type.infer.exc'(X0,X1),'const.infer.Success_1'(s(X0,happ(s(fun(X4,X0),happ(s(fun(X5,fun(X4,X0)),X6),s(X5,happ(s(fun(X7,X5),X8),s(X7,X9))))),s(X4,X10))))),s('type.pair.prod'('type.infer.exc'(X2,X3),X2),'const.infer.read_1'(s(X2,X11)))))) )),
  inference(forward_demodulation,[],[f14775,f178])).
fof(f14775,plain,(
  ( ! [X6,X4,X2,X0,X10,X8,X7,X5,X3,X1,X11,X9] : (s('type.pair.prod'('type.infer.exc'(X0,X1),'type.pair.prod'('type.infer.exc'(X2,X3),X2)),'const.pair.,_2'(s('type.infer.exc'(X0,X1),'const.infer.Success_1'(s(X0,happ(s(fun(X4,X0),happ(s(fun(X5,fun(X4,X0)),X6),s(X5,happ(s(fun(X7,X5),X8),s(X7,X9))))),s(X4,X10))))),s('type.pair.prod'('type.infer.exc'(X2,X3),X2),'const.infer.read_1'(s(X2,X11))))) = s('type.pair.prod'('type.infer.exc'(X0,X1),'type.pair.prod'('type.infer.exc'(X2,X3),X2)),'const.infer.st_ex_return_2'(s(X0,happ(s(fun(X7,X0),'_dst_x0x1x0_3'(s(fun(X5,fun(X4,X0)),X6),s(fun(X7,X5),X8),s(X4,X10))),s(X7,X9))),s('type.pair.prod'('type.infer.exc'(X2,X3),X2),happ(s(fun(X2,'type.pair.prod'('type.infer.exc'(X2,X3),X2)),'const.infer.read_0'),s(X2,X11)))))) )),
  inference(unit_resulting_resolution,[],[f178,f221,f212])).
fof(f15561,plain,(
  ( ! [X6,X4,X2,X0,X12,X10,X8,X7,X5,X3,X1,X13,X11,X9] : (s('type.pair.prod'('type.infer.exc'(X0,X1),'type.pair.prod'('type.infer.exc'(X2,X3),X4)),'const.infer.st_ex_return_2'(s(X0,happ(s(fun(X8,X0),'_dst_x0x1x0_3'(s(fun(X6,fun(X5,X0)),X7),s(fun(X8,X6),X9),s(X5,X11))),s(X8,X10))),s('type.pair.prod'('type.infer.exc'(X2,X3),X4),'const.infer.st_ex_return_2'(s(X2,X12),s(X4,X13))))) = s('type.pair.prod'('type.infer.exc'(X0,X1),'type.pair.prod'('type.infer.exc'(X2,X3),X4)),'const.pair.,_2'(s('type.infer.exc'(X0,X1),'const.infer.Success_1'(s(X0,happ(s(fun(X5,X0),happ(s(fun(X6,fun(X5,X0)),X7),s(X6,happ(s(fun(X8,X6),X9),s(X8,X10))))),s(X5,X11))))),s('type.pair.prod'('type.infer.exc'(X2,X3),X4),'const.infer.st_ex_return_2'(s(X2,X12),s(X4,X13)))))) )),
  inference(forward_demodulation,[],[f14777,f205])).
fof(f14777,plain,(
  ( ! [X6,X4,X2,X0,X12,X10,X8,X7,X5,X3,X1,X13,X11,X9] : (s('type.pair.prod'('type.infer.exc'(X0,X1),'type.pair.prod'('type.infer.exc'(X2,X3),X4)),'const.pair.,_2'(s('type.infer.exc'(X0,X1),'const.infer.Success_1'(s(X0,happ(s(fun(X5,X0),happ(s(fun(X6,fun(X5,X0)),X7),s(X6,happ(s(fun(X8,X6),X9),s(X8,X10))))),s(X5,X11))))),s('type.pair.prod'('type.infer.exc'(X2,X3),X4),'const.infer.st_ex_return_2'(s(X2,X12),s(X4,X13))))) = s('type.pair.prod'('type.infer.exc'(X0,X1),'type.pair.prod'('type.infer.exc'(X2,X3),X4)),'const.infer.st_ex_return_2'(s(X0,happ(s(fun(X8,X0),'_dst_x0x1x0_3'(s(fun(X6,fun(X5,X0)),X7),s(fun(X8,X6),X9),s(X5,X11))),s(X8,X10))),s('type.pair.prod'('type.infer.exc'(X2,X3),X4),happ(s(fun(X4,'type.pair.prod'('type.infer.exc'(X2,X3),X4)),happ(s(fun(X2,fun(X4,'type.pair.prod'('type.infer.exc'(X2,X3),X4))),'const.infer.st_ex_return_0'),s(X2,X12))),s(X4,X13)))))) )),
  inference(unit_resulting_resolution,[],[f205,f221,f212])).
fof(f15560,plain,(
  ( ! [X6,X4,X2,X0,X10,X8,X7,X5,X3,X1,X11,X9] : (s('type.pair.prod'('type.infer.exc'(X0,X1),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X2),'type.infer.infer_st'(X3))),'const.infer.st_ex_return_2'(s(X0,happ(s(fun(X7,X0),'_dst_x0x1x0_3'(s(fun(X5,fun(X4,X0)),X6),s(fun(X7,X5),X8),s(X4,X10))),s(X7,X9))),s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X2),'type.infer.infer_st'(X3)),'const.infer.fresh_uvar_1'(s('type.infer.infer_st'(X3),X11))))) = s('type.pair.prod'('type.infer.exc'(X0,X1),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X2),'type.infer.infer_st'(X3))),'const.pair.,_2'(s('type.infer.exc'(X0,X1),'const.infer.Success_1'(s(X0,happ(s(fun(X4,X0),happ(s(fun(X5,fun(X4,X0)),X6),s(X5,happ(s(fun(X7,X5),X8),s(X7,X9))))),s(X4,X10))))),s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X2),'type.infer.infer_st'(X3)),'const.infer.fresh_uvar_1'(s('type.infer.infer_st'(X3),X11)))))) )),
  inference(forward_demodulation,[],[f14782,f179])).
fof(f14782,plain,(
  ( ! [X6,X4,X2,X0,X10,X8,X7,X5,X3,X1,X11,X9] : (s('type.pair.prod'('type.infer.exc'(X0,X1),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X2),'type.infer.infer_st'(X3))),'const.pair.,_2'(s('type.infer.exc'(X0,X1),'const.infer.Success_1'(s(X0,happ(s(fun(X4,X0),happ(s(fun(X5,fun(X4,X0)),X6),s(X5,happ(s(fun(X7,X5),X8),s(X7,X9))))),s(X4,X10))))),s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X2),'type.infer.infer_st'(X3)),'const.infer.fresh_uvar_1'(s('type.infer.infer_st'(X3),X11))))) = s('type.pair.prod'('type.infer.exc'(X0,X1),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X2),'type.infer.infer_st'(X3))),'const.infer.st_ex_return_2'(s(X0,happ(s(fun(X7,X0),'_dst_x0x1x0_3'(s(fun(X5,fun(X4,X0)),X6),s(fun(X7,X5),X8),s(X4,X10))),s(X7,X9))),s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X2),'type.infer.infer_st'(X3)),happ(s(fun('type.infer.infer_st'(X3),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X2),'type.infer.infer_st'(X3))),'const.infer.fresh_uvar_0'),s('type.infer.infer_st'(X3),X11)))))) )),
  inference(unit_resulting_resolution,[],[f179,f221,f212])).
fof(f15559,plain,(
  ( ! [X6,X4,X2,X0,X10,X8,X7,X5,X3,X1,X11,X9] : (s('type.pair.prod'('type.infer.exc'(X0,X1),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X2),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.infer.st_ex_return_2'(s(X0,happ(s(fun(X6,X0),'_dst_x0x1x0_3'(s(fun(X4,fun(X3,X0)),X5),s(fun(X6,X4),X7),s(X3,X9))),s(X6,X8))),s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X2),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.apply_subst_2'(s('type.infer_t.infer_t',X10),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X11))))) = s('type.pair.prod'('type.infer.exc'(X0,X1),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X2),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.pair.,_2'(s('type.infer.exc'(X0,X1),'const.infer.Success_1'(s(X0,happ(s(fun(X3,X0),happ(s(fun(X4,fun(X3,X0)),X5),s(X4,happ(s(fun(X6,X4),X7),s(X6,X8))))),s(X3,X9))))),s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X2),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.apply_subst_2'(s('type.infer_t.infer_t',X10),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X11)))))) )),
  inference(forward_demodulation,[],[f14783,f171])).
fof(f14783,plain,(
  ( ! [X6,X4,X2,X0,X10,X8,X7,X5,X3,X1,X11,X9] : (s('type.pair.prod'('type.infer.exc'(X0,X1),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X2),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.pair.,_2'(s('type.infer.exc'(X0,X1),'const.infer.Success_1'(s(X0,happ(s(fun(X3,X0),happ(s(fun(X4,fun(X3,X0)),X5),s(X4,happ(s(fun(X6,X4),X7),s(X6,X8))))),s(X3,X9))))),s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X2),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.apply_subst_2'(s('type.infer_t.infer_t',X10),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X11))))) = s('type.pair.prod'('type.infer.exc'(X0,X1),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X2),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.infer.st_ex_return_2'(s(X0,happ(s(fun(X6,X0),'_dst_x0x1x0_3'(s(fun(X4,fun(X3,X0)),X5),s(fun(X6,X4),X7),s(X3,X9))),s(X6,X8))),s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X2),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),happ(s(fun('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X2),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.infer.apply_subst_1'(s('type.infer_t.infer_t',X10))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X11)))))) )),
  inference(unit_resulting_resolution,[],[f171,f221,f212])).
fof(f15558,plain,(
  ( ! [X6,X4,X2,X0,X12,X10,X8,X7,X5,X3,X1,X13,X11,X9] : (s('type.pair.prod'('type.infer.exc'(X0,X1),'type.pair.prod'('type.infer.exc'(X2,X3),X4)),'const.infer.st_ex_return_2'(s(X0,happ(s(fun(X8,X0),'_dst_x0x1x0_3'(s(fun(X6,fun(X5,X0)),X7),s(fun(X8,X6),X9),s(X5,X11))),s(X8,X10))),s('type.pair.prod'('type.infer.exc'(X2,X3),X4),'const.infer.failwith_2'(s(X3,X12),s(X4,X13))))) = s('type.pair.prod'('type.infer.exc'(X0,X1),'type.pair.prod'('type.infer.exc'(X2,X3),X4)),'const.pair.,_2'(s('type.infer.exc'(X0,X1),'const.infer.Success_1'(s(X0,happ(s(fun(X5,X0),happ(s(fun(X6,fun(X5,X0)),X7),s(X6,happ(s(fun(X8,X6),X9),s(X8,X10))))),s(X5,X11))))),s('type.pair.prod'('type.infer.exc'(X2,X3),X4),'const.infer.failwith_2'(s(X3,X12),s(X4,X13)))))) )),
  inference(forward_demodulation,[],[f14784,f204])).
fof(f14784,plain,(
  ( ! [X6,X4,X2,X0,X12,X10,X8,X7,X5,X3,X1,X13,X11,X9] : (s('type.pair.prod'('type.infer.exc'(X0,X1),'type.pair.prod'('type.infer.exc'(X2,X3),X4)),'const.pair.,_2'(s('type.infer.exc'(X0,X1),'const.infer.Success_1'(s(X0,happ(s(fun(X5,X0),happ(s(fun(X6,fun(X5,X0)),X7),s(X6,happ(s(fun(X8,X6),X9),s(X8,X10))))),s(X5,X11))))),s('type.pair.prod'('type.infer.exc'(X2,X3),X4),'const.infer.failwith_2'(s(X3,X12),s(X4,X13))))) = s('type.pair.prod'('type.infer.exc'(X0,X1),'type.pair.prod'('type.infer.exc'(X2,X3),X4)),'const.infer.st_ex_return_2'(s(X0,happ(s(fun(X8,X0),'_dst_x0x1x0_3'(s(fun(X6,fun(X5,X0)),X7),s(fun(X8,X6),X9),s(X5,X11))),s(X8,X10))),s('type.pair.prod'('type.infer.exc'(X2,X3),X4),happ(s(fun(X4,'type.pair.prod'('type.infer.exc'(X2,X3),X4)),'const.infer.failwith_1'(s(X3,X12))),s(X4,X13)))))) )),
  inference(unit_resulting_resolution,[],[f204,f221,f212])).
fof(f15557,plain,(
  ( ! [X6,X4,X2,X0,X12,X10,X8,X7,X5,X3,X1,X13,X11,X9] : (s('type.pair.prod'('type.infer.exc'(X0,X1),'type.pair.prod'('type.infer.exc'('type.one.one',X2),X3)),'const.infer.st_ex_return_2'(s(X0,happ(s(fun(X7,X0),'_dst_x0x1x0_3'(s(fun(X5,fun(X4,X0)),X6),s(fun(X7,X5),X8),s(X4,X10))),s(X7,X9))),s('type.pair.prod'('type.infer.exc'('type.one.one',X2),X3),'const.infer.guard_3'(s(bool,X11),s(X2,X12),s(X3,X13))))) = s('type.pair.prod'('type.infer.exc'(X0,X1),'type.pair.prod'('type.infer.exc'('type.one.one',X2),X3)),'const.pair.,_2'(s('type.infer.exc'(X0,X1),'const.infer.Success_1'(s(X0,happ(s(fun(X4,X0),happ(s(fun(X5,fun(X4,X0)),X6),s(X5,happ(s(fun(X7,X5),X8),s(X7,X9))))),s(X4,X10))))),s('type.pair.prod'('type.infer.exc'('type.one.one',X2),X3),'const.infer.guard_3'(s(bool,X11),s(X2,X12),s(X3,X13)))))) )),
  inference(forward_demodulation,[],[f14785,f183])).
fof(f14785,plain,(
  ( ! [X6,X4,X2,X0,X12,X10,X8,X7,X5,X3,X1,X13,X11,X9] : (s('type.pair.prod'('type.infer.exc'(X0,X1),'type.pair.prod'('type.infer.exc'('type.one.one',X2),X3)),'const.pair.,_2'(s('type.infer.exc'(X0,X1),'const.infer.Success_1'(s(X0,happ(s(fun(X4,X0),happ(s(fun(X5,fun(X4,X0)),X6),s(X5,happ(s(fun(X7,X5),X8),s(X7,X9))))),s(X4,X10))))),s('type.pair.prod'('type.infer.exc'('type.one.one',X2),X3),'const.infer.guard_3'(s(bool,X11),s(X2,X12),s(X3,X13))))) = s('type.pair.prod'('type.infer.exc'(X0,X1),'type.pair.prod'('type.infer.exc'('type.one.one',X2),X3)),'const.infer.st_ex_return_2'(s(X0,happ(s(fun(X7,X0),'_dst_x0x1x0_3'(s(fun(X5,fun(X4,X0)),X6),s(fun(X7,X5),X8),s(X4,X10))),s(X7,X9))),s('type.pair.prod'('type.infer.exc'('type.one.one',X2),X3),happ(s(fun(X3,'type.pair.prod'('type.infer.exc'('type.one.one',X2),X3)),'const.infer.guard_2'(s(bool,X11),s(X2,X12))),s(X3,X13)))))) )),
  inference(unit_resulting_resolution,[],[f183,f221,f212])).
fof(f14786,plain,(
  ( ! [X6,X4,X2,X0,X10,X8,X7,X5,X3,X1,X9] : (s('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),'const.pair.,_2'(s('type.infer.exc'('type.one.one',X0),'const.infer.Success_1'(s('type.one.one',X2))),s(X1,happ(s(fun(X3,X1),'_dst_x0x1x0_3'(s(fun(X4,fun(X5,X1)),X6),s(fun(X3,X4),X7),s(X5,X8))),s(X3,X9))))) = s('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),'const.infer.guard_3'(s(bool,'T_0'),s(X0,X10),s(X1,happ(s(fun(X5,X1),happ(s(fun(X4,fun(X5,X1)),X6),s(X4,happ(s(fun(X3,X4),X7),s(X3,X9))))),s(X5,X8)))))) )),
  inference(unit_resulting_resolution,[],[f163,f221,f252])).
fof(f14788,plain,(
  ( ! [X6,X4,X2,X0,X14,X12,X10,X8,X7,X5,X3,X1,X13,X11,X9] : (s('type.pair.prod'('type.infer.exc'(X0,X1),X2),'const.infer.st_ex_return_2'(s(X0,happ(s(fun(X3,X0),X4),s(X3,happ(s(fun(X5,X3),X6),s(X5,X7))))),s(X2,happ(s(fun(X8,X2),happ(s(fun(X9,fun(X8,X2)),X10),s(X9,happ(s(fun(X11,X9),X12),s(X11,X13))))),s(X8,X14))))) = s('type.pair.prod'('type.infer.exc'(X0,X1),X2),'const.pair.,_2'(s('type.infer.exc'(X0,X1),'const.infer.Success_1'(s(X0,happ(s(fun(X5,X0),'_dst_x0x1_2'(s(fun(X3,X0),X4),s(fun(X5,X3),X6))),s(X5,X7))))),s(X2,happ(s(fun(X11,X2),'_dst_x0x1x0_3'(s(fun(X9,fun(X8,X2)),X10),s(fun(X11,X9),X12),s(X8,X14))),s(X11,X13)))))) )),
  inference(unit_resulting_resolution,[],[f206,f221,f212])).
fof(f14789,plain,(
  ( ! [X6,X4,X2,X0,X14,X12,X10,X8,X7,X5,X3,X1,X15,X13,X11,X9,X16] : (s('type.pair.prod'('type.infer.exc'(X0,X1),X2),'const.infer.st_ex_return_2'(s(X0,happ(s(fun(X3,X0),'_dst_x0x1x0_3'(s(fun(X4,fun(X5,X0)),X6),s(fun(X3,X4),X7),s(X5,X8))),s(X3,X9))),s(X2,happ(s(fun(X10,X2),happ(s(fun(X11,fun(X10,X2)),X12),s(X11,happ(s(fun(X13,X11),X14),s(X13,X15))))),s(X10,X16))))) = s('type.pair.prod'('type.infer.exc'(X0,X1),X2),'const.pair.,_2'(s('type.infer.exc'(X0,X1),'const.infer.Success_1'(s(X0,happ(s(fun(X5,X0),happ(s(fun(X4,fun(X5,X0)),X6),s(X4,happ(s(fun(X3,X4),X7),s(X3,X9))))),s(X5,X8))))),s(X2,happ(s(fun(X13,X2),'_dst_x0x1x0_3'(s(fun(X11,fun(X10,X2)),X12),s(fun(X13,X11),X14),s(X10,X16))),s(X13,X15)))))) )),
  inference(unit_resulting_resolution,[],[f221,f221,f212])).
fof(f15539,plain,(
  ( ! [X6,X4,X2,X0,X10,X8,X7,X5,X3,X1,X9] : (s('type.pair.prod'('type.infer.exc'(X0,X1),X2),'const.infer.st_ex_return_2'(s(X0,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(X0),X3))),s(X2,happ(s(fun(X6,X2),happ(s(fun(X5,fun(X6,X2)),X7),s(X5,happ(s(fun(X4,X5),X8),s(X4,X10))))),s(X6,X9))))) = s('type.pair.prod'('type.infer.exc'(X0,X1),X2),'const.pair.,_2'(s('type.infer.exc'(X0,X1),'const.infer.Success_1'(s(X0,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(X0),X3))))),s(X2,happ(s(fun(X4,X2),'_dst_x0x1x0_3'(s(fun(X5,fun(X6,X2)),X7),s(fun(X4,X5),X8),s(X6,X9))),s(X4,X10)))))) )),
  inference(forward_demodulation,[],[f14820,f168])).
fof(f14820,plain,(
  ( ! [X6,X4,X2,X0,X10,X8,X7,X5,X3,X1,X9] : (s('type.pair.prod'('type.infer.exc'(X0,X1),X2),'const.pair.,_2'(s('type.infer.exc'(X0,X1),'const.infer.Success_1'(s(X0,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(X0),X3))))),s(X2,happ(s(fun(X4,X2),'_dst_x0x1x0_3'(s(fun(X5,fun(X6,X2)),X7),s(fun(X4,X5),X8),s(X6,X9))),s(X4,X10))))) = s('type.pair.prod'('type.infer.exc'(X0,X1),X2),'const.infer.st_ex_return_2'(s(X0,happ(s(fun('type.infer.infer_st'(X0),X0),'const.infer.infer_st_subst_0'),s('type.infer.infer_st'(X0),X3))),s(X2,happ(s(fun(X6,X2),happ(s(fun(X5,fun(X6,X2)),X7),s(X5,happ(s(fun(X4,X5),X8),s(X4,X10))))),s(X6,X9)))))) )),
  inference(unit_resulting_resolution,[],[f168,f221,f212])).
fof(f14821,plain,(
  ( ! [X6,X4,X2,X0,X14,X12,X10,X8,X7,X5,X3,X1,X13,X11,X9] : (s('type.pair.prod'('type.infer.exc'(X0,X1),X2),'const.pair.,_2'(s('type.infer.exc'(X0,X1),'const.infer.Success_1'(s(X0,happ(s(fun(X3,X0),X4),s(X3,happ(s(fun(X5,X3),X6),s(X5,X7))))))),s(X2,happ(s(fun(X8,X2),'_dst_x0x1x0_3'(s(fun(X9,fun(X10,X2)),X11),s(fun(X8,X9),X12),s(X10,X13))),s(X8,X14))))) = s('type.pair.prod'('type.infer.exc'(X0,X1),X2),'const.infer.st_ex_return_2'(s(X0,happ(s(fun(X5,X0),'_dst_x0x1_2'(s(fun(X3,X0),X4),s(fun(X5,X3),X6))),s(X5,X7))),s(X2,happ(s(fun(X10,X2),happ(s(fun(X9,fun(X10,X2)),X11),s(X9,happ(s(fun(X8,X9),X12),s(X8,X14))))),s(X10,X13)))))) )),
  inference(unit_resulting_resolution,[],[f206,f221,f212])).
fof(f14825,plain,(
  ( ! [X6,X4,X2,X0,X10,X8,X7,X5,X3,X1,X11,X9] : (s('type.pair.prod'('type.infer.exc'(fun(X0,'type.one.one'),X1),X2),'const.infer.st_ex_return_2'(s(fun(X0,'type.one.one'),X3),s(X2,happ(s(fun(X4,X2),happ(s(fun(X5,fun(X4,X2)),X6),s(X5,happ(s(fun(X7,X5),X8),s(X7,X9))))),s(X4,X10))))) = s('type.pair.prod'('type.infer.exc'(fun(X0,'type.one.one'),X1),X2),'const.pair.,_2'(s('type.infer.exc'(fun(X0,'type.one.one'),X1),'const.infer.Success_1'(s(fun(X0,'type.one.one'),X11))),s(X2,happ(s(fun(X7,X2),'_dst_x0x1x0_3'(s(fun(X5,fun(X4,X2)),X6),s(fun(X7,X5),X8),s(X4,X10))),s(X7,X9)))))) )),
  inference(unit_resulting_resolution,[],[f605,f221,f212])).
fof(f14827,plain,(
  ( ! [X6,X4,X2,X0,X12,X10,X8,X7,X5,X3,X1,X11,X9] : (s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,'type.one.one')),X2),X3),'const.infer.st_ex_return_2'(s(fun(X0,fun(X1,'type.one.one')),X4),s(X3,happ(s(fun(X5,X3),happ(s(fun(X6,fun(X5,X3)),X7),s(X6,happ(s(fun(X8,X6),X9),s(X8,X10))))),s(X5,X11))))) = s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,'type.one.one')),X2),X3),'const.pair.,_2'(s('type.infer.exc'(fun(X0,fun(X1,'type.one.one')),X2),'const.infer.Success_1'(s(fun(X0,fun(X1,'type.one.one')),X12))),s(X3,happ(s(fun(X8,X3),'_dst_x0x1x0_3'(s(fun(X6,fun(X5,X3)),X7),s(fun(X8,X6),X9),s(X5,X11))),s(X8,X10)))))) )),
  inference(unit_resulting_resolution,[],[f724,f221,f212])).
fof(f14828,plain,(
  ( ! [X6,X4,X2,X0,X12,X10,X8,X7,X5,X3,X1,X13,X11,X9] : (s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,fun(X2,'type.one.one'))),X3),X4),'const.infer.st_ex_return_2'(s(fun(X0,fun(X1,fun(X2,'type.one.one'))),X5),s(X4,happ(s(fun(X6,X4),happ(s(fun(X7,fun(X6,X4)),X8),s(X7,happ(s(fun(X9,X7),X10),s(X9,X11))))),s(X6,X12))))) = s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,fun(X2,'type.one.one'))),X3),X4),'const.pair.,_2'(s('type.infer.exc'(fun(X0,fun(X1,fun(X2,'type.one.one'))),X3),'const.infer.Success_1'(s(fun(X0,fun(X1,fun(X2,'type.one.one'))),X13))),s(X4,happ(s(fun(X9,X4),'_dst_x0x1x0_3'(s(fun(X7,fun(X6,X4)),X8),s(fun(X9,X7),X10),s(X6,X12))),s(X9,X11)))))) )),
  inference(unit_resulting_resolution,[],[f752,f221,f212])).
fof(f14829,plain,(
  ( ! [X6,X4,X2,X0,X14,X12,X10,X8,X7,X5,X3,X1,X13,X11,X9] : (s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,fun(X2,fun(X3,'type.one.one')))),X4),X5),'const.infer.st_ex_return_2'(s(fun(X0,fun(X1,fun(X2,fun(X3,'type.one.one')))),X6),s(X5,happ(s(fun(X7,X5),happ(s(fun(X8,fun(X7,X5)),X9),s(X8,happ(s(fun(X10,X8),X11),s(X10,X12))))),s(X7,X13))))) = s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,fun(X2,fun(X3,'type.one.one')))),X4),X5),'const.pair.,_2'(s('type.infer.exc'(fun(X0,fun(X1,fun(X2,fun(X3,'type.one.one')))),X4),'const.infer.Success_1'(s(fun(X0,fun(X1,fun(X2,fun(X3,'type.one.one')))),X14))),s(X5,happ(s(fun(X10,X5),'_dst_x0x1x0_3'(s(fun(X8,fun(X7,X5)),X9),s(fun(X10,X8),X11),s(X7,X13))),s(X10,X12)))))) )),
  inference(unit_resulting_resolution,[],[f787,f221,f212])).
fof(f14830,plain,(
  ( ! [X6,X4,X2,X0,X14,X12,X10,X8,X7,X5,X3,X1,X15,X13,X11,X9] : (s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,fun(X2,fun(X3,fun(X4,'type.one.one'))))),X5),X6),'const.infer.st_ex_return_2'(s(fun(X0,fun(X1,fun(X2,fun(X3,fun(X4,'type.one.one'))))),X7),s(X6,happ(s(fun(X8,X6),happ(s(fun(X9,fun(X8,X6)),X10),s(X9,happ(s(fun(X11,X9),X12),s(X11,X13))))),s(X8,X14))))) = s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,fun(X2,fun(X3,fun(X4,'type.one.one'))))),X5),X6),'const.pair.,_2'(s('type.infer.exc'(fun(X0,fun(X1,fun(X2,fun(X3,fun(X4,'type.one.one'))))),X5),'const.infer.Success_1'(s(fun(X0,fun(X1,fun(X2,fun(X3,fun(X4,'type.one.one'))))),X15))),s(X6,happ(s(fun(X11,X6),'_dst_x0x1x0_3'(s(fun(X9,fun(X8,X6)),X10),s(fun(X11,X9),X12),s(X8,X14))),s(X11,X13)))))) )),
  inference(unit_resulting_resolution,[],[f815,f221,f212])).
fof(f14834,plain,(
  ( ! [X6,X4,X2,X0,X10,X8,X7,X5,X3,X1,X9] : (s('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),'const.infer.st_ex_return_2'(s('type.one.one',X2),s(X1,happ(s(fun(X3,X1),happ(s(fun(X4,fun(X3,X1)),X5),s(X4,happ(s(fun(X6,X4),X7),s(X6,X8))))),s(X3,X9))))) = s('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),'const.pair.,_2'(s('type.infer.exc'('type.one.one',X0),'const.infer.Success_1'(s('type.one.one',X10))),s(X1,happ(s(fun(X6,X1),'_dst_x0x1x0_3'(s(fun(X4,fun(X3,X1)),X5),s(fun(X6,X4),X7),s(X3,X9))),s(X6,X8)))))) )),
  inference(unit_resulting_resolution,[],[f258,f221,f212])).
fof(f15536,plain,(
  ( ! [X6,X4,X2,X0,X12,X10,X8,X7,X5,X3,X1,X11,X9] : (s('type.pair.prod'('type.infer.exc'('type.list.list'(X0),X1),X2),'const.infer.st_ex_return_2'(s('type.list.list'(X0),'const.list.MAP_2'(s(fun(X3,X0),X4),s('type.list.list'(X3),X5))),s(X2,happ(s(fun(X8,X2),happ(s(fun(X7,fun(X8,X2)),X9),s(X7,happ(s(fun(X6,X7),X10),s(X6,X12))))),s(X8,X11))))) = s('type.pair.prod'('type.infer.exc'('type.list.list'(X0),X1),X2),'const.pair.,_2'(s('type.infer.exc'('type.list.list'(X0),X1),'const.infer.Success_1'(s('type.list.list'(X0),'const.list.MAP_2'(s(fun(X3,X0),X4),s('type.list.list'(X3),X5))))),s(X2,happ(s(fun(X6,X2),'_dst_x0x1x0_3'(s(fun(X7,fun(X8,X2)),X9),s(fun(X6,X7),X10),s(X8,X11))),s(X6,X12)))))) )),
  inference(forward_demodulation,[],[f14835,f180])).
fof(f14835,plain,(
  ( ! [X6,X4,X2,X0,X12,X10,X8,X7,X5,X3,X1,X11,X9] : (s('type.pair.prod'('type.infer.exc'('type.list.list'(X0),X1),X2),'const.pair.,_2'(s('type.infer.exc'('type.list.list'(X0),X1),'const.infer.Success_1'(s('type.list.list'(X0),'const.list.MAP_2'(s(fun(X3,X0),X4),s('type.list.list'(X3),X5))))),s(X2,happ(s(fun(X6,X2),'_dst_x0x1x0_3'(s(fun(X7,fun(X8,X2)),X9),s(fun(X6,X7),X10),s(X8,X11))),s(X6,X12))))) = s('type.pair.prod'('type.infer.exc'('type.list.list'(X0),X1),X2),'const.infer.st_ex_return_2'(s('type.list.list'(X0),happ(s(fun('type.list.list'(X3),'type.list.list'(X0)),happ(s(fun(fun(X3,X0),fun('type.list.list'(X3),'type.list.list'(X0))),'const.list.MAP_0'),s(fun(X3,X0),X4))),s('type.list.list'(X3),X5))),s(X2,happ(s(fun(X8,X2),happ(s(fun(X7,fun(X8,X2)),X9),s(X7,happ(s(fun(X6,X7),X10),s(X6,X12))))),s(X8,X11)))))) )),
  inference(unit_resulting_resolution,[],[f180,f221,f212])).
fof(f15533,plain,(
  ( ! [X6,X4,X2,X0,X10,X8,X7,X5,X3,X1,X9] : (s('type.pair.prod'('type.infer.exc'('type.num.num',X0),X1),'const.infer.st_ex_return_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X3))),s(X1,happ(s(fun(X6,X1),happ(s(fun(X5,fun(X6,X1)),X7),s(X5,happ(s(fun(X4,X5),X8),s(X4,X10))))),s(X6,X9))))) = s('type.pair.prod'('type.infer.exc'('type.num.num',X0),X1),'const.pair.,_2'(s('type.infer.exc'('type.num.num',X0),'const.infer.Success_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X3))))),s(X1,happ(s(fun(X4,X1),'_dst_x0x1x0_3'(s(fun(X5,fun(X6,X1)),X7),s(fun(X4,X5),X8),s(X6,X9))),s(X4,X10)))))) )),
  inference(forward_demodulation,[],[f14838,f175])).
fof(f14838,plain,(
  ( ! [X6,X4,X2,X0,X10,X8,X7,X5,X3,X1,X9] : (s('type.pair.prod'('type.infer.exc'('type.num.num',X0),X1),'const.pair.,_2'(s('type.infer.exc'('type.num.num',X0),'const.infer.Success_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X3))))),s(X1,happ(s(fun(X4,X1),'_dst_x0x1x0_3'(s(fun(X5,fun(X6,X1)),X7),s(fun(X4,X5),X8),s(X6,X9))),s(X4,X10))))) = s('type.pair.prod'('type.infer.exc'('type.num.num',X0),X1),'const.infer.st_ex_return_2'(s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.arithmetic.+_1'(s('type.num.num',X2))),s('type.num.num',X3))),s(X1,happ(s(fun(X6,X1),happ(s(fun(X5,fun(X6,X1)),X7),s(X5,happ(s(fun(X4,X5),X8),s(X4,X10))))),s(X6,X9)))))) )),
  inference(unit_resulting_resolution,[],[f175,f221,f212])).
fof(f15532,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1,X9] : (s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),X1),'const.infer.st_ex_return_2'(s('type.infer_t.infer_t','const.infer_t.Infer_Tuvar_1'(s('type.num.num',X2))),s(X1,happ(s(fun(X5,X1),happ(s(fun(X4,fun(X5,X1)),X6),s(X4,happ(s(fun(X3,X4),X7),s(X3,X9))))),s(X5,X8))))) = s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),X1),'const.pair.,_2'(s('type.infer.exc'('type.infer_t.infer_t',X0),'const.infer.Success_1'(s('type.infer_t.infer_t','const.infer_t.Infer_Tuvar_1'(s('type.num.num',X2))))),s(X1,happ(s(fun(X3,X1),'_dst_x0x1x0_3'(s(fun(X4,fun(X5,X1)),X6),s(fun(X3,X4),X7),s(X5,X8))),s(X3,X9)))))) )),
  inference(forward_demodulation,[],[f14839,f166])).
fof(f14839,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1,X9] : (s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),X1),'const.pair.,_2'(s('type.infer.exc'('type.infer_t.infer_t',X0),'const.infer.Success_1'(s('type.infer_t.infer_t','const.infer_t.Infer_Tuvar_1'(s('type.num.num',X2))))),s(X1,happ(s(fun(X3,X1),'_dst_x0x1x0_3'(s(fun(X4,fun(X5,X1)),X6),s(fun(X3,X4),X7),s(X5,X8))),s(X3,X9))))) = s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),X1),'const.infer.st_ex_return_2'(s('type.infer_t.infer_t',happ(s(fun('type.num.num','type.infer_t.infer_t'),'const.infer_t.Infer_Tuvar_0'),s('type.num.num',X2))),s(X1,happ(s(fun(X5,X1),happ(s(fun(X4,fun(X5,X1)),X6),s(X4,happ(s(fun(X3,X4),X7),s(X3,X9))))),s(X5,X8)))))) )),
  inference(unit_resulting_resolution,[],[f166,f221,f212])).
fof(f15531,plain,(
  ( ! [X6,X4,X2,X0,X10,X8,X7,X5,X3,X1,X9] : (s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),X1),'const.infer.st_ex_return_2'(s('type.infer_t.infer_t','const.unify.t_walkstar_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X2),s('type.infer_t.infer_t',X3))),s(X1,happ(s(fun(X6,X1),happ(s(fun(X5,fun(X6,X1)),X7),s(X5,happ(s(fun(X4,X5),X8),s(X4,X10))))),s(X6,X9))))) = s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),X1),'const.pair.,_2'(s('type.infer.exc'('type.infer_t.infer_t',X0),'const.infer.Success_1'(s('type.infer_t.infer_t','const.unify.t_walkstar_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X2),s('type.infer_t.infer_t',X3))))),s(X1,happ(s(fun(X4,X1),'_dst_x0x1x0_3'(s(fun(X5,fun(X6,X1)),X7),s(fun(X4,X5),X8),s(X6,X9))),s(X4,X10)))))) )),
  inference(forward_demodulation,[],[f14840,f176])).
fof(f14840,plain,(
  ( ! [X6,X4,X2,X0,X10,X8,X7,X5,X3,X1,X9] : (s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),X1),'const.pair.,_2'(s('type.infer.exc'('type.infer_t.infer_t',X0),'const.infer.Success_1'(s('type.infer_t.infer_t','const.unify.t_walkstar_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X2),s('type.infer_t.infer_t',X3))))),s(X1,happ(s(fun(X4,X1),'_dst_x0x1x0_3'(s(fun(X5,fun(X6,X1)),X7),s(fun(X4,X5),X8),s(X6,X9))),s(X4,X10))))) = s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),X1),'const.infer.st_ex_return_2'(s('type.infer_t.infer_t',happ(s(fun('type.infer_t.infer_t','type.infer_t.infer_t'),happ(s(fun('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),fun('type.infer_t.infer_t','type.infer_t.infer_t')),'const.unify.t_walkstar_0'),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X2))),s('type.infer_t.infer_t',X3))),s(X1,happ(s(fun(X6,X1),happ(s(fun(X5,fun(X6,X1)),X7),s(X5,happ(s(fun(X4,X5),X8),s(X4,X10))))),s(X6,X9)))))) )),
  inference(unit_resulting_resolution,[],[f176,f221,f212])).
fof(f15529,plain,(
  ( ! [X6,X4,X2,X0,X10,X8,X7,X5,X3,X1,X11,X9] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X0),X2),X3),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'(X0,X1),X0),'const.infer.read_1'(s(X0,X4))),s(X3,happ(s(fun(X7,X3),happ(s(fun(X6,fun(X7,X3)),X8),s(X6,happ(s(fun(X5,X6),X9),s(X5,X11))))),s(X7,X10))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X0),X2),X3),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X0),X2),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'(X0,X1),X0),'const.infer.read_1'(s(X0,X4))))),s(X3,happ(s(fun(X5,X3),'_dst_x0x1x0_3'(s(fun(X6,fun(X7,X3)),X8),s(fun(X5,X6),X9),s(X7,X10))),s(X5,X11)))))) )),
  inference(forward_demodulation,[],[f14842,f178])).
fof(f14842,plain,(
  ( ! [X6,X4,X2,X0,X10,X8,X7,X5,X3,X1,X11,X9] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X0),X2),X3),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X0),X2),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'(X0,X1),X0),'const.infer.read_1'(s(X0,X4))))),s(X3,happ(s(fun(X5,X3),'_dst_x0x1x0_3'(s(fun(X6,fun(X7,X3)),X8),s(fun(X5,X6),X9),s(X7,X10))),s(X5,X11))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X0),X2),X3),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'(X0,X1),X0),happ(s(fun(X0,'type.pair.prod'('type.infer.exc'(X0,X1),X0)),'const.infer.read_0'),s(X0,X4))),s(X3,happ(s(fun(X7,X3),happ(s(fun(X6,fun(X7,X3)),X8),s(X6,happ(s(fun(X5,X6),X9),s(X5,X11))))),s(X7,X10)))))) )),
  inference(unit_resulting_resolution,[],[f178,f221,f212])).
fof(f15527,plain,(
  ( ! [X6,X4,X2,X0,X12,X10,X8,X7,X5,X3,X1,X13,X11,X9] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),X4),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'(X0,X1),X2),'const.infer.st_ex_return_2'(s(X0,X5),s(X2,X6))),s(X4,happ(s(fun(X9,X4),happ(s(fun(X8,fun(X9,X4)),X10),s(X8,happ(s(fun(X7,X8),X11),s(X7,X13))))),s(X9,X12))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),X4),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'(X0,X1),X2),'const.infer.st_ex_return_2'(s(X0,X5),s(X2,X6))))),s(X4,happ(s(fun(X7,X4),'_dst_x0x1x0_3'(s(fun(X8,fun(X9,X4)),X10),s(fun(X7,X8),X11),s(X9,X12))),s(X7,X13)))))) )),
  inference(forward_demodulation,[],[f14844,f205])).
fof(f14844,plain,(
  ( ! [X6,X4,X2,X0,X12,X10,X8,X7,X5,X3,X1,X13,X11,X9] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),X4),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'(X0,X1),X2),'const.infer.st_ex_return_2'(s(X0,X5),s(X2,X6))))),s(X4,happ(s(fun(X7,X4),'_dst_x0x1x0_3'(s(fun(X8,fun(X9,X4)),X10),s(fun(X7,X8),X11),s(X9,X12))),s(X7,X13))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),X4),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'(X0,X1),X2),happ(s(fun(X2,'type.pair.prod'('type.infer.exc'(X0,X1),X2)),happ(s(fun(X0,fun(X2,'type.pair.prod'('type.infer.exc'(X0,X1),X2))),'const.infer.st_ex_return_0'),s(X0,X5))),s(X2,X6))),s(X4,happ(s(fun(X9,X4),happ(s(fun(X8,fun(X9,X4)),X10),s(X8,happ(s(fun(X7,X8),X11),s(X7,X13))))),s(X9,X12)))))) )),
  inference(unit_resulting_resolution,[],[f205,f221,f212])).
fof(f15526,plain,(
  ( ! [X6,X4,X2,X0,X10,X8,X7,X5,X3,X1,X11,X9] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),X2),X3),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),'const.infer.fresh_uvar_1'(s('type.infer.infer_st'(X1),X4))),s(X3,happ(s(fun(X7,X3),happ(s(fun(X6,fun(X7,X3)),X8),s(X6,happ(s(fun(X5,X6),X9),s(X5,X11))))),s(X7,X10))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),X2),X3),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),X2),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),'const.infer.fresh_uvar_1'(s('type.infer.infer_st'(X1),X4))))),s(X3,happ(s(fun(X5,X3),'_dst_x0x1x0_3'(s(fun(X6,fun(X7,X3)),X8),s(fun(X5,X6),X9),s(X7,X10))),s(X5,X11)))))) )),
  inference(forward_demodulation,[],[f14849,f179])).
fof(f14849,plain,(
  ( ! [X6,X4,X2,X0,X10,X8,X7,X5,X3,X1,X11,X9] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),X2),X3),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),X2),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),'const.infer.fresh_uvar_1'(s('type.infer.infer_st'(X1),X4))))),s(X3,happ(s(fun(X5,X3),'_dst_x0x1x0_3'(s(fun(X6,fun(X7,X3)),X8),s(fun(X5,X6),X9),s(X7,X10))),s(X5,X11))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),X2),X3),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),happ(s(fun('type.infer.infer_st'(X1),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1))),'const.infer.fresh_uvar_0'),s('type.infer.infer_st'(X1),X4))),s(X3,happ(s(fun(X7,X3),happ(s(fun(X6,fun(X7,X3)),X8),s(X6,happ(s(fun(X5,X6),X9),s(X5,X11))))),s(X7,X10)))))) )),
  inference(unit_resulting_resolution,[],[f179,f221,f212])).
fof(f15525,plain,(
  ( ! [X6,X4,X2,X0,X10,X8,X7,X5,X3,X1,X11,X9] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X1),X2),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.apply_subst_2'(s('type.infer_t.infer_t',X3),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X4))),s(X2,happ(s(fun(X7,X2),happ(s(fun(X6,fun(X7,X2)),X8),s(X6,happ(s(fun(X5,X6),X9),s(X5,X11))))),s(X7,X10))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X1),X2),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X1),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.apply_subst_2'(s('type.infer_t.infer_t',X3),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X4))))),s(X2,happ(s(fun(X5,X2),'_dst_x0x1x0_3'(s(fun(X6,fun(X7,X2)),X8),s(fun(X5,X6),X9),s(X7,X10))),s(X5,X11)))))) )),
  inference(forward_demodulation,[],[f14850,f171])).
fof(f14850,plain,(
  ( ! [X6,X4,X2,X0,X10,X8,X7,X5,X3,X1,X11,X9] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X1),X2),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X1),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.apply_subst_2'(s('type.infer_t.infer_t',X3),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X4))))),s(X2,happ(s(fun(X5,X2),'_dst_x0x1x0_3'(s(fun(X6,fun(X7,X2)),X8),s(fun(X5,X6),X9),s(X7,X10))),s(X5,X11))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X1),X2),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),happ(s(fun('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.infer.apply_subst_1'(s('type.infer_t.infer_t',X3))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X4))),s(X2,happ(s(fun(X7,X2),happ(s(fun(X6,fun(X7,X2)),X8),s(X6,happ(s(fun(X5,X6),X9),s(X5,X11))))),s(X7,X10)))))) )),
  inference(unit_resulting_resolution,[],[f171,f221,f212])).
fof(f15524,plain,(
  ( ! [X6,X4,X2,X0,X12,X10,X8,X7,X5,X3,X1,X13,X11,X9] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),X4),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'(X0,X1),X2),'const.infer.failwith_2'(s(X1,X5),s(X2,X6))),s(X4,happ(s(fun(X9,X4),happ(s(fun(X8,fun(X9,X4)),X10),s(X8,happ(s(fun(X7,X8),X11),s(X7,X13))))),s(X9,X12))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),X4),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'(X0,X1),X2),'const.infer.failwith_2'(s(X1,X5),s(X2,X6))))),s(X4,happ(s(fun(X7,X4),'_dst_x0x1x0_3'(s(fun(X8,fun(X9,X4)),X10),s(fun(X7,X8),X11),s(X9,X12))),s(X7,X13)))))) )),
  inference(forward_demodulation,[],[f14851,f204])).
fof(f14851,plain,(
  ( ! [X6,X4,X2,X0,X12,X10,X8,X7,X5,X3,X1,X13,X11,X9] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),X4),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'(X0,X1),X2),'const.infer.failwith_2'(s(X1,X5),s(X2,X6))))),s(X4,happ(s(fun(X7,X4),'_dst_x0x1x0_3'(s(fun(X8,fun(X9,X4)),X10),s(fun(X7,X8),X11),s(X9,X12))),s(X7,X13))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),X4),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'(X0,X1),X2),happ(s(fun(X2,'type.pair.prod'('type.infer.exc'(X0,X1),X2)),'const.infer.failwith_1'(s(X1,X5))),s(X2,X6))),s(X4,happ(s(fun(X9,X4),happ(s(fun(X8,fun(X9,X4)),X10),s(X8,happ(s(fun(X7,X8),X11),s(X7,X13))))),s(X9,X12)))))) )),
  inference(unit_resulting_resolution,[],[f204,f221,f212])).
fof(f15523,plain,(
  ( ! [X6,X4,X2,X0,X12,X10,X8,X7,X5,X3,X1,X13,X11,X9] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),X2),X3),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),'const.infer.guard_3'(s(bool,X4),s(X0,X5),s(X1,X6))),s(X3,happ(s(fun(X9,X3),happ(s(fun(X8,fun(X9,X3)),X10),s(X8,happ(s(fun(X7,X8),X11),s(X7,X13))))),s(X9,X12))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),X2),X3),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),X2),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),'const.infer.guard_3'(s(bool,X4),s(X0,X5),s(X1,X6))))),s(X3,happ(s(fun(X7,X3),'_dst_x0x1x0_3'(s(fun(X8,fun(X9,X3)),X10),s(fun(X7,X8),X11),s(X9,X12))),s(X7,X13)))))) )),
  inference(forward_demodulation,[],[f14852,f183])).
fof(f14852,plain,(
  ( ! [X6,X4,X2,X0,X12,X10,X8,X7,X5,X3,X1,X13,X11,X9] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),X2),X3),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),X2),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),'const.infer.guard_3'(s(bool,X4),s(X0,X5),s(X1,X6))))),s(X3,happ(s(fun(X7,X3),'_dst_x0x1x0_3'(s(fun(X8,fun(X9,X3)),X10),s(fun(X7,X8),X11),s(X9,X12))),s(X7,X13))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),X2),X3),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),happ(s(fun(X1,'type.pair.prod'('type.infer.exc'('type.one.one',X0),X1)),'const.infer.guard_2'(s(bool,X4),s(X0,X5))),s(X1,X6))),s(X3,happ(s(fun(X9,X3),happ(s(fun(X8,fun(X9,X3)),X10),s(X8,happ(s(fun(X7,X8),X11),s(X7,X13))))),s(X9,X12)))))) )),
  inference(unit_resulting_resolution,[],[f183,f221,f212])).
fof(f14854,plain,(
  ( ! [X6,X4,X2,X0,X14,X12,X10,X8,X7,X5,X3,X1,X13,X11,X9] : (s('type.pair.prod'('type.infer.exc'(X0,X1),X2),'const.infer.st_ex_return_2'(s(X0,happ(s(fun(X3,X0),happ(s(fun(X4,fun(X3,X0)),X5),s(X4,happ(s(fun(X6,X4),X7),s(X6,X8))))),s(X3,X9))),s(X2,happ(s(fun(X10,X2),X11),s(X10,happ(s(fun(X12,X10),X13),s(X12,X14))))))) = s('type.pair.prod'('type.infer.exc'(X0,X1),X2),'const.pair.,_2'(s('type.infer.exc'(X0,X1),'const.infer.Success_1'(s(X0,happ(s(fun(X6,X0),'_dst_x0x1x0_3'(s(fun(X4,fun(X3,X0)),X5),s(fun(X6,X4),X7),s(X3,X9))),s(X6,X8))))),s(X2,happ(s(fun(X12,X2),'_dst_x0x1_2'(s(fun(X10,X2),X11),s(fun(X12,X10),X13))),s(X12,X14)))))) )),
  inference(unit_resulting_resolution,[],[f206,f221,f212])).
fof(f14855,plain,(
  ( ! [X6,X4,X2,X0,X14,X12,X10,X8,X7,X5,X3,X1,X15,X13,X11,X9,X16] : (s('type.pair.prod'('type.infer.exc'(X0,X1),X2),'const.infer.st_ex_return_2'(s(X0,happ(s(fun(X3,X0),happ(s(fun(X4,fun(X3,X0)),X5),s(X4,happ(s(fun(X6,X4),X7),s(X6,X8))))),s(X3,X9))),s(X2,happ(s(fun(X10,X2),'_dst_x0x1x0_3'(s(fun(X11,fun(X12,X2)),X13),s(fun(X10,X11),X14),s(X12,X15))),s(X10,X16))))) = s('type.pair.prod'('type.infer.exc'(X0,X1),X2),'const.pair.,_2'(s('type.infer.exc'(X0,X1),'const.infer.Success_1'(s(X0,happ(s(fun(X6,X0),'_dst_x0x1x0_3'(s(fun(X4,fun(X3,X0)),X5),s(fun(X6,X4),X7),s(X3,X9))),s(X6,X8))))),s(X2,happ(s(fun(X12,X2),happ(s(fun(X11,fun(X12,X2)),X13),s(X11,happ(s(fun(X10,X11),X14),s(X10,X16))))),s(X12,X15)))))) )),
  inference(unit_resulting_resolution,[],[f221,f221,f212])).
fof(f15505,plain,(
  ( ! [X6,X4,X2,X0,X10,X8,X7,X5,X3,X1,X9] : (s('type.pair.prod'('type.infer.exc'(X0,X1),X2),'const.infer.st_ex_return_2'(s(X0,happ(s(fun(X5,X0),happ(s(fun(X4,fun(X5,X0)),X6),s(X4,happ(s(fun(X3,X4),X7),s(X3,X9))))),s(X5,X8))),s(X2,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(X2),X10))))) = s('type.pair.prod'('type.infer.exc'(X0,X1),X2),'const.pair.,_2'(s('type.infer.exc'(X0,X1),'const.infer.Success_1'(s(X0,happ(s(fun(X3,X0),'_dst_x0x1x0_3'(s(fun(X4,fun(X5,X0)),X6),s(fun(X3,X4),X7),s(X5,X8))),s(X3,X9))))),s(X2,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(X2),X10)))))) )),
  inference(forward_demodulation,[],[f14886,f168])).
fof(f14886,plain,(
  ( ! [X6,X4,X2,X0,X10,X8,X7,X5,X3,X1,X9] : (s('type.pair.prod'('type.infer.exc'(X0,X1),X2),'const.pair.,_2'(s('type.infer.exc'(X0,X1),'const.infer.Success_1'(s(X0,happ(s(fun(X3,X0),'_dst_x0x1x0_3'(s(fun(X4,fun(X5,X0)),X6),s(fun(X3,X4),X7),s(X5,X8))),s(X3,X9))))),s(X2,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(X2),X10))))) = s('type.pair.prod'('type.infer.exc'(X0,X1),X2),'const.infer.st_ex_return_2'(s(X0,happ(s(fun(X5,X0),happ(s(fun(X4,fun(X5,X0)),X6),s(X4,happ(s(fun(X3,X4),X7),s(X3,X9))))),s(X5,X8))),s(X2,happ(s(fun('type.infer.infer_st'(X2),X2),'const.infer.infer_st_subst_0'),s('type.infer.infer_st'(X2),X10)))))) )),
  inference(unit_resulting_resolution,[],[f168,f221,f212])).
fof(f14887,plain,(
  ( ! [X6,X4,X2,X0,X14,X12,X10,X8,X7,X5,X3,X1,X13,X11,X9] : (s('type.pair.prod'('type.infer.exc'(X0,X1),X2),'const.pair.,_2'(s('type.infer.exc'(X0,X1),'const.infer.Success_1'(s(X0,happ(s(fun(X3,X0),'_dst_x0x1x0_3'(s(fun(X4,fun(X5,X0)),X6),s(fun(X3,X4),X7),s(X5,X8))),s(X3,X9))))),s(X2,happ(s(fun(X10,X2),X11),s(X10,happ(s(fun(X12,X10),X13),s(X12,X14))))))) = s('type.pair.prod'('type.infer.exc'(X0,X1),X2),'const.infer.st_ex_return_2'(s(X0,happ(s(fun(X5,X0),happ(s(fun(X4,fun(X5,X0)),X6),s(X4,happ(s(fun(X3,X4),X7),s(X3,X9))))),s(X5,X8))),s(X2,happ(s(fun(X12,X2),'_dst_x0x1_2'(s(fun(X10,X2),X11),s(fun(X12,X10),X13))),s(X12,X14)))))) )),
  inference(unit_resulting_resolution,[],[f206,f221,f212])).
fof(f14888,plain,(
  ( ! [X6,X4,X2,X0,X14,X12,X10,X8,X7,X5,X3,X1,X15,X13,X11,X9,X16] : (s('type.pair.prod'('type.infer.exc'(X0,X1),X2),'const.pair.,_2'(s('type.infer.exc'(X0,X1),'const.infer.Success_1'(s(X0,happ(s(fun(X3,X0),'_dst_x0x1x0_3'(s(fun(X4,fun(X5,X0)),X6),s(fun(X3,X4),X7),s(X5,X8))),s(X3,X9))))),s(X2,happ(s(fun(X10,X2),'_dst_x0x1x0_3'(s(fun(X11,fun(X12,X2)),X13),s(fun(X10,X11),X14),s(X12,X15))),s(X10,X16))))) = s('type.pair.prod'('type.infer.exc'(X0,X1),X2),'const.infer.st_ex_return_2'(s(X0,happ(s(fun(X5,X0),happ(s(fun(X4,fun(X5,X0)),X6),s(X4,happ(s(fun(X3,X4),X7),s(X3,X9))))),s(X5,X8))),s(X2,happ(s(fun(X12,X2),happ(s(fun(X11,fun(X12,X2)),X13),s(X11,happ(s(fun(X10,X11),X14),s(X10,X16))))),s(X12,X15)))))) )),
  inference(unit_resulting_resolution,[],[f221,f221,f212])).
fof(f14891,plain,(
  ( ! [X6,X4,X2,X0,X10,X8,X7,X5,X3,X1,X11,X9] : (s('type.pair.prod'('type.infer.exc'(X0,X1),fun(X2,'type.one.one')),'const.infer.st_ex_return_2'(s(X0,happ(s(fun(X3,X0),happ(s(fun(X4,fun(X3,X0)),X5),s(X4,happ(s(fun(X6,X4),X7),s(X6,X8))))),s(X3,X9))),s(fun(X2,'type.one.one'),X10))) = s('type.pair.prod'('type.infer.exc'(X0,X1),fun(X2,'type.one.one')),'const.pair.,_2'(s('type.infer.exc'(X0,X1),'const.infer.Success_1'(s(X0,happ(s(fun(X6,X0),'_dst_x0x1x0_3'(s(fun(X4,fun(X3,X0)),X5),s(fun(X6,X4),X7),s(X3,X9))),s(X6,X8))))),s(fun(X2,'type.one.one'),X11)))) )),
  inference(unit_resulting_resolution,[],[f605,f221,f212])).
fof(f14893,plain,(
  ( ! [X6,X4,X2,X0,X12,X10,X8,X7,X5,X3,X1,X11,X9] : (s('type.pair.prod'('type.infer.exc'(X0,X1),fun(X2,fun(X3,'type.one.one'))),'const.infer.st_ex_return_2'(s(X0,happ(s(fun(X4,X0),happ(s(fun(X5,fun(X4,X0)),X6),s(X5,happ(s(fun(X7,X5),X8),s(X7,X9))))),s(X4,X10))),s(fun(X2,fun(X3,'type.one.one')),X11))) = s('type.pair.prod'('type.infer.exc'(X0,X1),fun(X2,fun(X3,'type.one.one'))),'const.pair.,_2'(s('type.infer.exc'(X0,X1),'const.infer.Success_1'(s(X0,happ(s(fun(X7,X0),'_dst_x0x1x0_3'(s(fun(X5,fun(X4,X0)),X6),s(fun(X7,X5),X8),s(X4,X10))),s(X7,X9))))),s(fun(X2,fun(X3,'type.one.one')),X12)))) )),
  inference(unit_resulting_resolution,[],[f724,f221,f212])).
fof(f14894,plain,(
  ( ! [X6,X4,X2,X0,X12,X10,X8,X7,X5,X3,X1,X13,X11,X9] : (s('type.pair.prod'('type.infer.exc'(X0,X1),fun(X2,fun(X3,fun(X4,'type.one.one')))),'const.infer.st_ex_return_2'(s(X0,happ(s(fun(X5,X0),happ(s(fun(X6,fun(X5,X0)),X7),s(X6,happ(s(fun(X8,X6),X9),s(X8,X10))))),s(X5,X11))),s(fun(X2,fun(X3,fun(X4,'type.one.one'))),X12))) = s('type.pair.prod'('type.infer.exc'(X0,X1),fun(X2,fun(X3,fun(X4,'type.one.one')))),'const.pair.,_2'(s('type.infer.exc'(X0,X1),'const.infer.Success_1'(s(X0,happ(s(fun(X8,X0),'_dst_x0x1x0_3'(s(fun(X6,fun(X5,X0)),X7),s(fun(X8,X6),X9),s(X5,X11))),s(X8,X10))))),s(fun(X2,fun(X3,fun(X4,'type.one.one'))),X13)))) )),
  inference(unit_resulting_resolution,[],[f752,f221,f212])).
fof(f14895,plain,(
  ( ! [X6,X4,X2,X0,X14,X12,X10,X8,X7,X5,X3,X1,X13,X11,X9] : (s('type.pair.prod'('type.infer.exc'(X0,X1),fun(X2,fun(X3,fun(X4,fun(X5,'type.one.one'))))),'const.infer.st_ex_return_2'(s(X0,happ(s(fun(X6,X0),happ(s(fun(X7,fun(X6,X0)),X8),s(X7,happ(s(fun(X9,X7),X10),s(X9,X11))))),s(X6,X12))),s(fun(X2,fun(X3,fun(X4,fun(X5,'type.one.one')))),X13))) = s('type.pair.prod'('type.infer.exc'(X0,X1),fun(X2,fun(X3,fun(X4,fun(X5,'type.one.one'))))),'const.pair.,_2'(s('type.infer.exc'(X0,X1),'const.infer.Success_1'(s(X0,happ(s(fun(X9,X0),'_dst_x0x1x0_3'(s(fun(X7,fun(X6,X0)),X8),s(fun(X9,X7),X10),s(X6,X12))),s(X9,X11))))),s(fun(X2,fun(X3,fun(X4,fun(X5,'type.one.one')))),X14)))) )),
  inference(unit_resulting_resolution,[],[f787,f221,f212])).
fof(f14896,plain,(
  ( ! [X6,X4,X2,X0,X14,X12,X10,X8,X7,X5,X3,X1,X15,X13,X11,X9] : (s('type.pair.prod'('type.infer.exc'(X0,X1),fun(X2,fun(X3,fun(X4,fun(X5,fun(X6,'type.one.one')))))),'const.infer.st_ex_return_2'(s(X0,happ(s(fun(X7,X0),happ(s(fun(X8,fun(X7,X0)),X9),s(X8,happ(s(fun(X10,X8),X11),s(X10,X12))))),s(X7,X13))),s(fun(X2,fun(X3,fun(X4,fun(X5,fun(X6,'type.one.one'))))),X14))) = s('type.pair.prod'('type.infer.exc'(X0,X1),fun(X2,fun(X3,fun(X4,fun(X5,fun(X6,'type.one.one')))))),'const.pair.,_2'(s('type.infer.exc'(X0,X1),'const.infer.Success_1'(s(X0,happ(s(fun(X10,X0),'_dst_x0x1x0_3'(s(fun(X8,fun(X7,X0)),X9),s(fun(X10,X8),X11),s(X7,X13))),s(X10,X12))))),s(fun(X2,fun(X3,fun(X4,fun(X5,fun(X6,'type.one.one'))))),X15)))) )),
  inference(unit_resulting_resolution,[],[f815,f221,f212])).
fof(f14900,plain,(
  ( ! [X6,X4,X2,X0,X10,X8,X7,X5,X3,X1,X9] : (s('type.pair.prod'('type.infer.exc'(X0,X1),'type.one.one'),'const.infer.st_ex_return_2'(s(X0,happ(s(fun(X2,X0),happ(s(fun(X3,fun(X2,X0)),X4),s(X3,happ(s(fun(X5,X3),X6),s(X5,X7))))),s(X2,X8))),s('type.one.one',X9))) = s('type.pair.prod'('type.infer.exc'(X0,X1),'type.one.one'),'const.pair.,_2'(s('type.infer.exc'(X0,X1),'const.infer.Success_1'(s(X0,happ(s(fun(X5,X0),'_dst_x0x1x0_3'(s(fun(X3,fun(X2,X0)),X4),s(fun(X5,X3),X6),s(X2,X8))),s(X5,X7))))),s('type.one.one',X10)))) )),
  inference(unit_resulting_resolution,[],[f258,f221,f212])).
fof(f15502,plain,(
  ( ! [X6,X4,X2,X0,X12,X10,X8,X7,X5,X3,X1,X11,X9] : (s('type.pair.prod'('type.infer.exc'(X0,X1),'type.list.list'(X2)),'const.infer.st_ex_return_2'(s(X0,happ(s(fun(X5,X0),happ(s(fun(X4,fun(X5,X0)),X6),s(X4,happ(s(fun(X3,X4),X7),s(X3,X9))))),s(X5,X8))),s('type.list.list'(X2),'const.list.MAP_2'(s(fun(X10,X2),X11),s('type.list.list'(X10),X12))))) = s('type.pair.prod'('type.infer.exc'(X0,X1),'type.list.list'(X2)),'const.pair.,_2'(s('type.infer.exc'(X0,X1),'const.infer.Success_1'(s(X0,happ(s(fun(X3,X0),'_dst_x0x1x0_3'(s(fun(X4,fun(X5,X0)),X6),s(fun(X3,X4),X7),s(X5,X8))),s(X3,X9))))),s('type.list.list'(X2),'const.list.MAP_2'(s(fun(X10,X2),X11),s('type.list.list'(X10),X12)))))) )),
  inference(forward_demodulation,[],[f14901,f180])).
fof(f14901,plain,(
  ( ! [X6,X4,X2,X0,X12,X10,X8,X7,X5,X3,X1,X11,X9] : (s('type.pair.prod'('type.infer.exc'(X0,X1),'type.list.list'(X2)),'const.pair.,_2'(s('type.infer.exc'(X0,X1),'const.infer.Success_1'(s(X0,happ(s(fun(X3,X0),'_dst_x0x1x0_3'(s(fun(X4,fun(X5,X0)),X6),s(fun(X3,X4),X7),s(X5,X8))),s(X3,X9))))),s('type.list.list'(X2),'const.list.MAP_2'(s(fun(X10,X2),X11),s('type.list.list'(X10),X12))))) = s('type.pair.prod'('type.infer.exc'(X0,X1),'type.list.list'(X2)),'const.infer.st_ex_return_2'(s(X0,happ(s(fun(X5,X0),happ(s(fun(X4,fun(X5,X0)),X6),s(X4,happ(s(fun(X3,X4),X7),s(X3,X9))))),s(X5,X8))),s('type.list.list'(X2),happ(s(fun('type.list.list'(X10),'type.list.list'(X2)),happ(s(fun(fun(X10,X2),fun('type.list.list'(X10),'type.list.list'(X2))),'const.list.MAP_0'),s(fun(X10,X2),X11))),s('type.list.list'(X10),X12)))))) )),
  inference(unit_resulting_resolution,[],[f180,f221,f212])).
fof(f15499,plain,(
  ( ! [X6,X4,X2,X0,X10,X8,X7,X5,X3,X1,X9] : (s('type.pair.prod'('type.infer.exc'(X0,X1),'type.num.num'),'const.infer.st_ex_return_2'(s(X0,happ(s(fun(X4,X0),happ(s(fun(X3,fun(X4,X0)),X5),s(X3,happ(s(fun(X2,X3),X6),s(X2,X8))))),s(X4,X7))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X9),s('type.num.num',X10))))) = s('type.pair.prod'('type.infer.exc'(X0,X1),'type.num.num'),'const.pair.,_2'(s('type.infer.exc'(X0,X1),'const.infer.Success_1'(s(X0,happ(s(fun(X2,X0),'_dst_x0x1x0_3'(s(fun(X3,fun(X4,X0)),X5),s(fun(X2,X3),X6),s(X4,X7))),s(X2,X8))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X9),s('type.num.num',X10)))))) )),
  inference(forward_demodulation,[],[f14904,f175])).
fof(f14904,plain,(
  ( ! [X6,X4,X2,X0,X10,X8,X7,X5,X3,X1,X9] : (s('type.pair.prod'('type.infer.exc'(X0,X1),'type.num.num'),'const.pair.,_2'(s('type.infer.exc'(X0,X1),'const.infer.Success_1'(s(X0,happ(s(fun(X2,X0),'_dst_x0x1x0_3'(s(fun(X3,fun(X4,X0)),X5),s(fun(X2,X3),X6),s(X4,X7))),s(X2,X8))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X9),s('type.num.num',X10))))) = s('type.pair.prod'('type.infer.exc'(X0,X1),'type.num.num'),'const.infer.st_ex_return_2'(s(X0,happ(s(fun(X4,X0),happ(s(fun(X3,fun(X4,X0)),X5),s(X3,happ(s(fun(X2,X3),X6),s(X2,X8))))),s(X4,X7))),s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.arithmetic.+_1'(s('type.num.num',X9))),s('type.num.num',X10)))))) )),
  inference(unit_resulting_resolution,[],[f175,f221,f212])).
fof(f15498,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1,X9] : (s('type.pair.prod'('type.infer.exc'(X0,X1),'type.infer_t.infer_t'),'const.infer.st_ex_return_2'(s(X0,happ(s(fun(X4,X0),happ(s(fun(X3,fun(X4,X0)),X5),s(X3,happ(s(fun(X2,X3),X6),s(X2,X8))))),s(X4,X7))),s('type.infer_t.infer_t','const.infer_t.Infer_Tuvar_1'(s('type.num.num',X9))))) = s('type.pair.prod'('type.infer.exc'(X0,X1),'type.infer_t.infer_t'),'const.pair.,_2'(s('type.infer.exc'(X0,X1),'const.infer.Success_1'(s(X0,happ(s(fun(X2,X0),'_dst_x0x1x0_3'(s(fun(X3,fun(X4,X0)),X5),s(fun(X2,X3),X6),s(X4,X7))),s(X2,X8))))),s('type.infer_t.infer_t','const.infer_t.Infer_Tuvar_1'(s('type.num.num',X9)))))) )),
  inference(forward_demodulation,[],[f14905,f166])).
fof(f14905,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1,X9] : (s('type.pair.prod'('type.infer.exc'(X0,X1),'type.infer_t.infer_t'),'const.pair.,_2'(s('type.infer.exc'(X0,X1),'const.infer.Success_1'(s(X0,happ(s(fun(X2,X0),'_dst_x0x1x0_3'(s(fun(X3,fun(X4,X0)),X5),s(fun(X2,X3),X6),s(X4,X7))),s(X2,X8))))),s('type.infer_t.infer_t','const.infer_t.Infer_Tuvar_1'(s('type.num.num',X9))))) = s('type.pair.prod'('type.infer.exc'(X0,X1),'type.infer_t.infer_t'),'const.infer.st_ex_return_2'(s(X0,happ(s(fun(X4,X0),happ(s(fun(X3,fun(X4,X0)),X5),s(X3,happ(s(fun(X2,X3),X6),s(X2,X8))))),s(X4,X7))),s('type.infer_t.infer_t',happ(s(fun('type.num.num','type.infer_t.infer_t'),'const.infer_t.Infer_Tuvar_0'),s('type.num.num',X9)))))) )),
  inference(unit_resulting_resolution,[],[f166,f221,f212])).
fof(f15497,plain,(
  ( ! [X6,X4,X2,X0,X10,X8,X7,X5,X3,X1,X9] : (s('type.pair.prod'('type.infer.exc'(X0,X1),'type.infer_t.infer_t'),'const.infer.st_ex_return_2'(s(X0,happ(s(fun(X4,X0),happ(s(fun(X3,fun(X4,X0)),X5),s(X3,happ(s(fun(X2,X3),X6),s(X2,X8))))),s(X4,X7))),s('type.infer_t.infer_t','const.unify.t_walkstar_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X9),s('type.infer_t.infer_t',X10))))) = s('type.pair.prod'('type.infer.exc'(X0,X1),'type.infer_t.infer_t'),'const.pair.,_2'(s('type.infer.exc'(X0,X1),'const.infer.Success_1'(s(X0,happ(s(fun(X2,X0),'_dst_x0x1x0_3'(s(fun(X3,fun(X4,X0)),X5),s(fun(X2,X3),X6),s(X4,X7))),s(X2,X8))))),s('type.infer_t.infer_t','const.unify.t_walkstar_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X9),s('type.infer_t.infer_t',X10)))))) )),
  inference(forward_demodulation,[],[f14906,f176])).
fof(f14906,plain,(
  ( ! [X6,X4,X2,X0,X10,X8,X7,X5,X3,X1,X9] : (s('type.pair.prod'('type.infer.exc'(X0,X1),'type.infer_t.infer_t'),'const.pair.,_2'(s('type.infer.exc'(X0,X1),'const.infer.Success_1'(s(X0,happ(s(fun(X2,X0),'_dst_x0x1x0_3'(s(fun(X3,fun(X4,X0)),X5),s(fun(X2,X3),X6),s(X4,X7))),s(X2,X8))))),s('type.infer_t.infer_t','const.unify.t_walkstar_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X9),s('type.infer_t.infer_t',X10))))) = s('type.pair.prod'('type.infer.exc'(X0,X1),'type.infer_t.infer_t'),'const.infer.st_ex_return_2'(s(X0,happ(s(fun(X4,X0),happ(s(fun(X3,fun(X4,X0)),X5),s(X3,happ(s(fun(X2,X3),X6),s(X2,X8))))),s(X4,X7))),s('type.infer_t.infer_t',happ(s(fun('type.infer_t.infer_t','type.infer_t.infer_t'),happ(s(fun('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),fun('type.infer_t.infer_t','type.infer_t.infer_t')),'const.unify.t_walkstar_0'),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X9))),s('type.infer_t.infer_t',X10)))))) )),
  inference(unit_resulting_resolution,[],[f176,f221,f212])).
fof(f15495,plain,(
  ( ! [X6,X4,X2,X0,X10,X8,X7,X5,X3,X1,X11,X9] : (s('type.pair.prod'('type.infer.exc'(X0,X1),'type.pair.prod'('type.infer.exc'(X2,X3),X2)),'const.infer.st_ex_return_2'(s(X0,happ(s(fun(X6,X0),happ(s(fun(X5,fun(X6,X0)),X7),s(X5,happ(s(fun(X4,X5),X8),s(X4,X10))))),s(X6,X9))),s('type.pair.prod'('type.infer.exc'(X2,X3),X2),'const.infer.read_1'(s(X2,X11))))) = s('type.pair.prod'('type.infer.exc'(X0,X1),'type.pair.prod'('type.infer.exc'(X2,X3),X2)),'const.pair.,_2'(s('type.infer.exc'(X0,X1),'const.infer.Success_1'(s(X0,happ(s(fun(X4,X0),'_dst_x0x1x0_3'(s(fun(X5,fun(X6,X0)),X7),s(fun(X4,X5),X8),s(X6,X9))),s(X4,X10))))),s('type.pair.prod'('type.infer.exc'(X2,X3),X2),'const.infer.read_1'(s(X2,X11)))))) )),
  inference(forward_demodulation,[],[f14908,f178])).
fof(f14908,plain,(
  ( ! [X6,X4,X2,X0,X10,X8,X7,X5,X3,X1,X11,X9] : (s('type.pair.prod'('type.infer.exc'(X0,X1),'type.pair.prod'('type.infer.exc'(X2,X3),X2)),'const.pair.,_2'(s('type.infer.exc'(X0,X1),'const.infer.Success_1'(s(X0,happ(s(fun(X4,X0),'_dst_x0x1x0_3'(s(fun(X5,fun(X6,X0)),X7),s(fun(X4,X5),X8),s(X6,X9))),s(X4,X10))))),s('type.pair.prod'('type.infer.exc'(X2,X3),X2),'const.infer.read_1'(s(X2,X11))))) = s('type.pair.prod'('type.infer.exc'(X0,X1),'type.pair.prod'('type.infer.exc'(X2,X3),X2)),'const.infer.st_ex_return_2'(s(X0,happ(s(fun(X6,X0),happ(s(fun(X5,fun(X6,X0)),X7),s(X5,happ(s(fun(X4,X5),X8),s(X4,X10))))),s(X6,X9))),s('type.pair.prod'('type.infer.exc'(X2,X3),X2),happ(s(fun(X2,'type.pair.prod'('type.infer.exc'(X2,X3),X2)),'const.infer.read_0'),s(X2,X11)))))) )),
  inference(unit_resulting_resolution,[],[f178,f221,f212])).
fof(f15493,plain,(
  ( ! [X6,X4,X2,X0,X12,X10,X8,X7,X5,X3,X1,X13,X11,X9] : (s('type.pair.prod'('type.infer.exc'(X0,X1),'type.pair.prod'('type.infer.exc'(X2,X3),X4)),'const.infer.st_ex_return_2'(s(X0,happ(s(fun(X7,X0),happ(s(fun(X6,fun(X7,X0)),X8),s(X6,happ(s(fun(X5,X6),X9),s(X5,X11))))),s(X7,X10))),s('type.pair.prod'('type.infer.exc'(X2,X3),X4),'const.infer.st_ex_return_2'(s(X2,X12),s(X4,X13))))) = s('type.pair.prod'('type.infer.exc'(X0,X1),'type.pair.prod'('type.infer.exc'(X2,X3),X4)),'const.pair.,_2'(s('type.infer.exc'(X0,X1),'const.infer.Success_1'(s(X0,happ(s(fun(X5,X0),'_dst_x0x1x0_3'(s(fun(X6,fun(X7,X0)),X8),s(fun(X5,X6),X9),s(X7,X10))),s(X5,X11))))),s('type.pair.prod'('type.infer.exc'(X2,X3),X4),'const.infer.st_ex_return_2'(s(X2,X12),s(X4,X13)))))) )),
  inference(forward_demodulation,[],[f14910,f205])).
fof(f14910,plain,(
  ( ! [X6,X4,X2,X0,X12,X10,X8,X7,X5,X3,X1,X13,X11,X9] : (s('type.pair.prod'('type.infer.exc'(X0,X1),'type.pair.prod'('type.infer.exc'(X2,X3),X4)),'const.pair.,_2'(s('type.infer.exc'(X0,X1),'const.infer.Success_1'(s(X0,happ(s(fun(X5,X0),'_dst_x0x1x0_3'(s(fun(X6,fun(X7,X0)),X8),s(fun(X5,X6),X9),s(X7,X10))),s(X5,X11))))),s('type.pair.prod'('type.infer.exc'(X2,X3),X4),'const.infer.st_ex_return_2'(s(X2,X12),s(X4,X13))))) = s('type.pair.prod'('type.infer.exc'(X0,X1),'type.pair.prod'('type.infer.exc'(X2,X3),X4)),'const.infer.st_ex_return_2'(s(X0,happ(s(fun(X7,X0),happ(s(fun(X6,fun(X7,X0)),X8),s(X6,happ(s(fun(X5,X6),X9),s(X5,X11))))),s(X7,X10))),s('type.pair.prod'('type.infer.exc'(X2,X3),X4),happ(s(fun(X4,'type.pair.prod'('type.infer.exc'(X2,X3),X4)),happ(s(fun(X2,fun(X4,'type.pair.prod'('type.infer.exc'(X2,X3),X4))),'const.infer.st_ex_return_0'),s(X2,X12))),s(X4,X13)))))) )),
  inference(unit_resulting_resolution,[],[f205,f221,f212])).
fof(f15492,plain,(
  ( ! [X6,X4,X2,X0,X10,X8,X7,X5,X3,X1,X11,X9] : (s('type.pair.prod'('type.infer.exc'(X0,X1),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X2),'type.infer.infer_st'(X3))),'const.infer.st_ex_return_2'(s(X0,happ(s(fun(X6,X0),happ(s(fun(X5,fun(X6,X0)),X7),s(X5,happ(s(fun(X4,X5),X8),s(X4,X10))))),s(X6,X9))),s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X2),'type.infer.infer_st'(X3)),'const.infer.fresh_uvar_1'(s('type.infer.infer_st'(X3),X11))))) = s('type.pair.prod'('type.infer.exc'(X0,X1),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X2),'type.infer.infer_st'(X3))),'const.pair.,_2'(s('type.infer.exc'(X0,X1),'const.infer.Success_1'(s(X0,happ(s(fun(X4,X0),'_dst_x0x1x0_3'(s(fun(X5,fun(X6,X0)),X7),s(fun(X4,X5),X8),s(X6,X9))),s(X4,X10))))),s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X2),'type.infer.infer_st'(X3)),'const.infer.fresh_uvar_1'(s('type.infer.infer_st'(X3),X11)))))) )),
  inference(forward_demodulation,[],[f14915,f179])).
fof(f14915,plain,(
  ( ! [X6,X4,X2,X0,X10,X8,X7,X5,X3,X1,X11,X9] : (s('type.pair.prod'('type.infer.exc'(X0,X1),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X2),'type.infer.infer_st'(X3))),'const.pair.,_2'(s('type.infer.exc'(X0,X1),'const.infer.Success_1'(s(X0,happ(s(fun(X4,X0),'_dst_x0x1x0_3'(s(fun(X5,fun(X6,X0)),X7),s(fun(X4,X5),X8),s(X6,X9))),s(X4,X10))))),s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X2),'type.infer.infer_st'(X3)),'const.infer.fresh_uvar_1'(s('type.infer.infer_st'(X3),X11))))) = s('type.pair.prod'('type.infer.exc'(X0,X1),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X2),'type.infer.infer_st'(X3))),'const.infer.st_ex_return_2'(s(X0,happ(s(fun(X6,X0),happ(s(fun(X5,fun(X6,X0)),X7),s(X5,happ(s(fun(X4,X5),X8),s(X4,X10))))),s(X6,X9))),s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X2),'type.infer.infer_st'(X3)),happ(s(fun('type.infer.infer_st'(X3),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X2),'type.infer.infer_st'(X3))),'const.infer.fresh_uvar_0'),s('type.infer.infer_st'(X3),X11)))))) )),
  inference(unit_resulting_resolution,[],[f179,f221,f212])).
fof(f15491,plain,(
  ( ! [X6,X4,X2,X0,X10,X8,X7,X5,X3,X1,X11,X9] : (s('type.pair.prod'('type.infer.exc'(X0,X1),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X2),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.infer.st_ex_return_2'(s(X0,happ(s(fun(X5,X0),happ(s(fun(X4,fun(X5,X0)),X6),s(X4,happ(s(fun(X3,X4),X7),s(X3,X9))))),s(X5,X8))),s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X2),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.apply_subst_2'(s('type.infer_t.infer_t',X10),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X11))))) = s('type.pair.prod'('type.infer.exc'(X0,X1),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X2),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.pair.,_2'(s('type.infer.exc'(X0,X1),'const.infer.Success_1'(s(X0,happ(s(fun(X3,X0),'_dst_x0x1x0_3'(s(fun(X4,fun(X5,X0)),X6),s(fun(X3,X4),X7),s(X5,X8))),s(X3,X9))))),s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X2),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.apply_subst_2'(s('type.infer_t.infer_t',X10),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X11)))))) )),
  inference(forward_demodulation,[],[f14916,f171])).
fof(f14916,plain,(
  ( ! [X6,X4,X2,X0,X10,X8,X7,X5,X3,X1,X11,X9] : (s('type.pair.prod'('type.infer.exc'(X0,X1),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X2),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.pair.,_2'(s('type.infer.exc'(X0,X1),'const.infer.Success_1'(s(X0,happ(s(fun(X3,X0),'_dst_x0x1x0_3'(s(fun(X4,fun(X5,X0)),X6),s(fun(X3,X4),X7),s(X5,X8))),s(X3,X9))))),s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X2),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.apply_subst_2'(s('type.infer_t.infer_t',X10),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X11))))) = s('type.pair.prod'('type.infer.exc'(X0,X1),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X2),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.infer.st_ex_return_2'(s(X0,happ(s(fun(X5,X0),happ(s(fun(X4,fun(X5,X0)),X6),s(X4,happ(s(fun(X3,X4),X7),s(X3,X9))))),s(X5,X8))),s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X2),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),happ(s(fun('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X2),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.infer.apply_subst_1'(s('type.infer_t.infer_t',X10))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X11)))))) )),
  inference(unit_resulting_resolution,[],[f171,f221,f212])).
fof(f15490,plain,(
  ( ! [X6,X4,X2,X0,X12,X10,X8,X7,X5,X3,X1,X13,X11,X9] : (s('type.pair.prod'('type.infer.exc'(X0,X1),'type.pair.prod'('type.infer.exc'(X2,X3),X4)),'const.infer.st_ex_return_2'(s(X0,happ(s(fun(X7,X0),happ(s(fun(X6,fun(X7,X0)),X8),s(X6,happ(s(fun(X5,X6),X9),s(X5,X11))))),s(X7,X10))),s('type.pair.prod'('type.infer.exc'(X2,X3),X4),'const.infer.failwith_2'(s(X3,X12),s(X4,X13))))) = s('type.pair.prod'('type.infer.exc'(X0,X1),'type.pair.prod'('type.infer.exc'(X2,X3),X4)),'const.pair.,_2'(s('type.infer.exc'(X0,X1),'const.infer.Success_1'(s(X0,happ(s(fun(X5,X0),'_dst_x0x1x0_3'(s(fun(X6,fun(X7,X0)),X8),s(fun(X5,X6),X9),s(X7,X10))),s(X5,X11))))),s('type.pair.prod'('type.infer.exc'(X2,X3),X4),'const.infer.failwith_2'(s(X3,X12),s(X4,X13)))))) )),
  inference(forward_demodulation,[],[f14917,f204])).
fof(f14917,plain,(
  ( ! [X6,X4,X2,X0,X12,X10,X8,X7,X5,X3,X1,X13,X11,X9] : (s('type.pair.prod'('type.infer.exc'(X0,X1),'type.pair.prod'('type.infer.exc'(X2,X3),X4)),'const.pair.,_2'(s('type.infer.exc'(X0,X1),'const.infer.Success_1'(s(X0,happ(s(fun(X5,X0),'_dst_x0x1x0_3'(s(fun(X6,fun(X7,X0)),X8),s(fun(X5,X6),X9),s(X7,X10))),s(X5,X11))))),s('type.pair.prod'('type.infer.exc'(X2,X3),X4),'const.infer.failwith_2'(s(X3,X12),s(X4,X13))))) = s('type.pair.prod'('type.infer.exc'(X0,X1),'type.pair.prod'('type.infer.exc'(X2,X3),X4)),'const.infer.st_ex_return_2'(s(X0,happ(s(fun(X7,X0),happ(s(fun(X6,fun(X7,X0)),X8),s(X6,happ(s(fun(X5,X6),X9),s(X5,X11))))),s(X7,X10))),s('type.pair.prod'('type.infer.exc'(X2,X3),X4),happ(s(fun(X4,'type.pair.prod'('type.infer.exc'(X2,X3),X4)),'const.infer.failwith_1'(s(X3,X12))),s(X4,X13)))))) )),
  inference(unit_resulting_resolution,[],[f204,f221,f212])).
fof(f15489,plain,(
  ( ! [X6,X4,X2,X0,X12,X10,X8,X7,X5,X3,X1,X13,X11,X9] : (s('type.pair.prod'('type.infer.exc'(X0,X1),'type.pair.prod'('type.infer.exc'('type.one.one',X2),X3)),'const.infer.st_ex_return_2'(s(X0,happ(s(fun(X6,X0),happ(s(fun(X5,fun(X6,X0)),X7),s(X5,happ(s(fun(X4,X5),X8),s(X4,X10))))),s(X6,X9))),s('type.pair.prod'('type.infer.exc'('type.one.one',X2),X3),'const.infer.guard_3'(s(bool,X11),s(X2,X12),s(X3,X13))))) = s('type.pair.prod'('type.infer.exc'(X0,X1),'type.pair.prod'('type.infer.exc'('type.one.one',X2),X3)),'const.pair.,_2'(s('type.infer.exc'(X0,X1),'const.infer.Success_1'(s(X0,happ(s(fun(X4,X0),'_dst_x0x1x0_3'(s(fun(X5,fun(X6,X0)),X7),s(fun(X4,X5),X8),s(X6,X9))),s(X4,X10))))),s('type.pair.prod'('type.infer.exc'('type.one.one',X2),X3),'const.infer.guard_3'(s(bool,X11),s(X2,X12),s(X3,X13)))))) )),
  inference(forward_demodulation,[],[f14918,f183])).
fof(f14918,plain,(
  ( ! [X6,X4,X2,X0,X12,X10,X8,X7,X5,X3,X1,X13,X11,X9] : (s('type.pair.prod'('type.infer.exc'(X0,X1),'type.pair.prod'('type.infer.exc'('type.one.one',X2),X3)),'const.pair.,_2'(s('type.infer.exc'(X0,X1),'const.infer.Success_1'(s(X0,happ(s(fun(X4,X0),'_dst_x0x1x0_3'(s(fun(X5,fun(X6,X0)),X7),s(fun(X4,X5),X8),s(X6,X9))),s(X4,X10))))),s('type.pair.prod'('type.infer.exc'('type.one.one',X2),X3),'const.infer.guard_3'(s(bool,X11),s(X2,X12),s(X3,X13))))) = s('type.pair.prod'('type.infer.exc'(X0,X1),'type.pair.prod'('type.infer.exc'('type.one.one',X2),X3)),'const.infer.st_ex_return_2'(s(X0,happ(s(fun(X6,X0),happ(s(fun(X5,fun(X6,X0)),X7),s(X5,happ(s(fun(X4,X5),X8),s(X4,X10))))),s(X6,X9))),s('type.pair.prod'('type.infer.exc'('type.one.one',X2),X3),happ(s(fun(X3,'type.pair.prod'('type.infer.exc'('type.one.one',X2),X3)),'const.infer.guard_2'(s(bool,X11),s(X2,X12))),s(X3,X13)))))) )),
  inference(unit_resulting_resolution,[],[f183,f221,f212])).
fof(f14530,plain,(
  ( ! [X540,X542,X536,X538,X534,X541,X543,X537,X539,X535] : (s('type.pair.prod'('type.infer.exc'(X537,'type.list.list'('type.string.char')),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X534),'type.infer.infer_st'(X535))),'const.pair.,_2'(s('type.infer.exc'(X537,'type.list.list'('type.string.char')),'const.infer.Success_1'(s(X537,X538))),s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X534),'type.infer.infer_st'(X535)),X539))) != s('type.pair.prod'('type.infer.exc'(X537,'type.list.list'('type.string.char')),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X534),'type.infer.infer_st'(X535))),'const.infer.lookup_st_ex_4'(s(fun(X540,'type.list.list'('type.string.char')),X541),s(X540,X542),s('type.list.list'('type.pair.prod'(X540,X537)),X543),s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X534),'type.infer.infer_st'(X535)),'const.infer.fresh_uvar_1'(s('type.infer.infer_st'(X535),X536))))) | s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X534),'type.infer.infer_st'(X535)),X539) = s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X534),'type.infer.infer_st'(X535)),happ(s(fun('type.infer.infer_st'(X535),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X534),'type.infer.infer_st'(X535))),'const.infer.fresh_uvar_0'),s('type.infer.infer_st'(X535),X536)))) )),
  inference(superposition,[],[f217,f179])).
fof(f14525,plain,(
  ( ! [X484,X486,X482,X492,X488,X490,X485,X487,X483,X493,X489,X491] : (s('type.pair.prod'('type.infer.exc'(X487,'type.list.list'('type.string.char')),'type.pair.prod'('type.infer.exc'('type.one.one',X482),X483)),'const.pair.,_2'(s('type.infer.exc'(X487,'type.list.list'('type.string.char')),'const.infer.Success_1'(s(X487,X488))),s('type.pair.prod'('type.infer.exc'('type.one.one',X482),X483),X489))) != s('type.pair.prod'('type.infer.exc'(X487,'type.list.list'('type.string.char')),'type.pair.prod'('type.infer.exc'('type.one.one',X482),X483)),'const.infer.lookup_st_ex_4'(s(fun(X490,'type.list.list'('type.string.char')),X491),s(X490,X492),s('type.list.list'('type.pair.prod'(X490,X487)),X493),s('type.pair.prod'('type.infer.exc'('type.one.one',X482),X483),'const.infer.guard_3'(s(bool,X484),s(X482,X485),s(X483,X486))))) | s('type.pair.prod'('type.infer.exc'('type.one.one',X482),X483),X489) = s('type.pair.prod'('type.infer.exc'('type.one.one',X482),X483),happ(s(fun(X483,'type.pair.prod'('type.infer.exc'('type.one.one',X482),X483)),'const.infer.guard_2'(s(bool,X484),s(X482,X485))),s(X483,X486)))) )),
  inference(superposition,[],[f217,f183])).
fof(f14519,plain,(
  ( ! [X422,X428,X430,X424,X426,X432,X423,X429,X431,X425,X427,X433] : (s('type.pair.prod'('type.infer.exc'(X427,'type.list.list'('type.string.char')),'type.pair.prod'('type.infer.exc'(X422,X423),X424)),'const.pair.,_2'(s('type.infer.exc'(X427,'type.list.list'('type.string.char')),'const.infer.Success_1'(s(X427,X428))),s('type.pair.prod'('type.infer.exc'(X422,X423),X424),X429))) != s('type.pair.prod'('type.infer.exc'(X427,'type.list.list'('type.string.char')),'type.pair.prod'('type.infer.exc'(X422,X423),X424)),'const.infer.lookup_st_ex_4'(s(fun(X430,'type.list.list'('type.string.char')),X431),s(X430,X432),s('type.list.list'('type.pair.prod'(X430,X427)),X433),s('type.pair.prod'('type.infer.exc'(X422,X423),X424),'const.infer.st_ex_return_2'(s(X422,X425),s(X424,X426))))) | s('type.pair.prod'('type.infer.exc'(X422,X423),X424),X429) = s('type.pair.prod'('type.infer.exc'(X422,X423),X424),happ(s(fun(X424,'type.pair.prod'('type.infer.exc'(X422,X423),X424)),happ(s(fun(X422,fun(X424,'type.pair.prod'('type.infer.exc'(X422,X423),X424))),'const.infer.st_ex_return_0'),s(X422,X425))),s(X424,X426)))) )),
  inference(superposition,[],[f217,f205])).
fof(f14518,plain,(
  ( ! [X412,X414,X410,X420,X416,X418,X413,X415,X411,X421,X417,X419] : (s('type.pair.prod'('type.infer.exc'(X415,'type.list.list'('type.string.char')),'type.pair.prod'('type.infer.exc'(X410,X411),X412)),'const.pair.,_2'(s('type.infer.exc'(X415,'type.list.list'('type.string.char')),'const.infer.Success_1'(s(X415,X416))),s('type.pair.prod'('type.infer.exc'(X410,X411),X412),X417))) != s('type.pair.prod'('type.infer.exc'(X415,'type.list.list'('type.string.char')),'type.pair.prod'('type.infer.exc'(X410,X411),X412)),'const.infer.lookup_st_ex_4'(s(fun(X418,'type.list.list'('type.string.char')),X419),s(X418,X420),s('type.list.list'('type.pair.prod'(X418,X415)),X421),s('type.pair.prod'('type.infer.exc'(X410,X411),X412),'const.infer.failwith_2'(s(X411,X413),s(X412,X414))))) | s('type.pair.prod'('type.infer.exc'(X410,X411),X412),X417) = s('type.pair.prod'('type.infer.exc'(X410,X411),X412),happ(s(fun(X412,'type.pair.prod'('type.infer.exc'(X410,X411),X412)),'const.infer.failwith_1'(s(X411,X413))),s(X412,X414)))) )),
  inference(superposition,[],[f217,f204])).
fof(f14517,plain,(
  ( ! [X408,X405,X407,X401,X403,X409,X404,X406,X400,X402] : (s('type.pair.prod'('type.infer.exc'(X403,'type.list.list'('type.string.char')),'type.pair.prod'('type.infer.exc'(X400,X401),X400)),'const.pair.,_2'(s('type.infer.exc'(X403,'type.list.list'('type.string.char')),'const.infer.Success_1'(s(X403,X404))),s('type.pair.prod'('type.infer.exc'(X400,X401),X400),X405))) != s('type.pair.prod'('type.infer.exc'(X403,'type.list.list'('type.string.char')),'type.pair.prod'('type.infer.exc'(X400,X401),X400)),'const.infer.lookup_st_ex_4'(s(fun(X406,'type.list.list'('type.string.char')),X407),s(X406,X408),s('type.list.list'('type.pair.prod'(X406,X403)),X409),s('type.pair.prod'('type.infer.exc'(X400,X401),X400),'const.infer.read_1'(s(X400,X402))))) | s('type.pair.prod'('type.infer.exc'(X400,X401),X400),X405) = s('type.pair.prod'('type.infer.exc'(X400,X401),X400),happ(s(fun(X400,'type.pair.prod'('type.infer.exc'(X400,X401),X400)),'const.infer.read_0'),s(X400,X402)))) )),
  inference(superposition,[],[f217,f178])).
fof(f14516,plain,(
  ( ! [X391,X397,X399,X393,X395,X390,X396,X398,X392,X394] : (s('type.pair.prod'('type.infer.exc'(X393,'type.list.list'('type.string.char')),'type.pair.prod'('type.infer.exc'(X390,X391),X390)),'const.pair.,_2'(s('type.infer.exc'(X393,'type.list.list'('type.string.char')),'const.infer.Success_1'(s(X393,X394))),s('type.pair.prod'('type.infer.exc'(X390,X391),X390),X395))) != s('type.pair.prod'('type.infer.exc'(X393,'type.list.list'('type.string.char')),'type.pair.prod'('type.infer.exc'(X390,X391),X390)),'const.infer.lookup_st_ex_4'(s(fun(X396,'type.list.list'('type.string.char')),X397),s(X396,X398),s('type.list.list'('type.pair.prod'(X396,X393)),X399),s('type.pair.prod'('type.infer.exc'(X390,X391),X390),'const.infer.read_1'(s(X390,X392))))) | s('type.pair.prod'('type.infer.exc'(X390,X391),X390),X395) = s('type.pair.prod'('type.infer.exc'(X390,X391),X390),'const.pair.,_2'(s('type.infer.exc'(X390,X391),'const.infer.Success_1'(s(X390,X392))),s(X390,X392)))) )),
  inference(superposition,[],[f217,f177])).
fof(f14510,plain,(
  ( ! [X344,X346,X341,X343,X339,X349,X345,X347,X340,X342,X348] : (s('type.pair.prod'('type.infer.exc'(X343,'type.list.list'('type.string.char')),'type.list.list'(X339)),'const.pair.,_2'(s('type.infer.exc'(X343,'type.list.list'('type.string.char')),'const.infer.Success_1'(s(X343,X344))),s('type.list.list'(X339),X345))) != s('type.pair.prod'('type.infer.exc'(X343,'type.list.list'('type.string.char')),'type.list.list'(X339)),'const.infer.lookup_st_ex_4'(s(fun(X346,'type.list.list'('type.string.char')),X347),s(X346,X348),s('type.list.list'('type.pair.prod'(X346,X343)),X349),s('type.list.list'(X339),'const.list.MAP_2'(s(fun(X340,X339),X341),s('type.list.list'(X340),X342))))) | s('type.list.list'(X339),X345) = s('type.list.list'(X339),happ(s(fun('type.list.list'(X340),'type.list.list'(X339)),happ(s(fun(fun(X340,X339),fun('type.list.list'(X340),'type.list.list'(X339))),'const.list.MAP_0'),s(fun(X340,X339),X341))),s('type.list.list'(X340),X342)))) )),
  inference(superposition,[],[f217,f180])).
fof(f14488,plain,(
  ( ! [X118,X116,X114,X112,X119,X117,X115,X113] : (s('type.pair.prod'('type.infer.exc'(X113,'type.list.list'('type.string.char')),bool),'const.pair.,_2'(s('type.infer.exc'(X113,'type.list.list'('type.string.char')),'const.infer.Success_1'(s(X113,X114))),s(bool,X115))) != s('type.pair.prod'('type.infer.exc'(X113,'type.list.list'('type.string.char')),bool),'const.infer.lookup_st_ex_4'(s(fun(X116,'type.list.list'('type.string.char')),X117),s(X116,X118),s('type.list.list'('type.pair.prod'(X116,X113)),X119),s(bool,'T_0'))) | s(bool,X115) = s(bool,happ(s(fun('type.infer.infer_st'(bool),bool),'const.infer.infer_st_subst_0'),s('type.infer.infer_st'(bool),X112))) | s(bool,'F_0') = s(bool,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(bool),X112)))) )),
  inference(superposition,[],[f217,f293])).
fof(f14486,plain,(
  ( ! [X103,X101,X99,X97,X102,X100,X98,X104] : (s('type.pair.prod'('type.infer.exc'(X98,'type.list.list'('type.string.char')),bool),'const.pair.,_2'(s('type.infer.exc'(X98,'type.list.list'('type.string.char')),'const.infer.Success_1'(s(X98,X99))),s(bool,X100))) != s('type.pair.prod'('type.infer.exc'(X98,'type.list.list'('type.string.char')),bool),'const.infer.lookup_st_ex_4'(s(fun(X101,'type.list.list'('type.string.char')),X102),s(X101,X103),s('type.list.list'('type.pair.prod'(X101,X98)),X104),s(bool,X97))) | s(bool,'F_0') = s(bool,X100) | s(bool,'T_0') = s(bool,X97)) )),
  inference(superposition,[],[f217,f167])).
fof(f14483,plain,(
  ( ! [X78,X76,X74,X72,X71,X77,X75,X73] : (s('type.pair.prod'('type.infer.exc'(X72,'type.list.list'('type.string.char')),bool),'const.pair.,_2'(s('type.infer.exc'(X72,'type.list.list'('type.string.char')),'const.infer.Success_1'(s(X72,X73))),s(bool,X74))) != s('type.pair.prod'('type.infer.exc'(X72,'type.list.list'('type.string.char')),bool),'const.infer.lookup_st_ex_4'(s(fun(X75,'type.list.list'('type.string.char')),X76),s(X75,X77),s('type.list.list'('type.pair.prod'(X75,X72)),X78),s(bool,'F_0'))) | s(bool,X71) = s(bool,X74) | s(bool,'T_0') = s(bool,X71)) )),
  inference(superposition,[],[f217,f167])).
fof(f14479,plain,(
  ( ! [X39,X37,X35,X43,X41,X38,X36,X42,X40] : (s('type.pair.prod'('type.infer.exc'(X36,'type.list.list'('type.string.char')),bool),'const.pair.,_2'(s('type.infer.exc'(X36,'type.list.list'('type.string.char')),'const.infer.Success_1'(s(X36,X37))),s(bool,X38))) != s('type.pair.prod'('type.infer.exc'(X36,'type.list.list'('type.string.char')),bool),'const.infer.lookup_st_ex_4'(s(fun(X39,'type.list.list'('type.string.char')),X40),s(X39,X41),s('type.list.list'('type.pair.prod'(X39,X36)),X42),s(bool,'T_0'))) | s(bool,X35) = s(bool,X38) | s(bool,X35) = s(bool,X43) | s(bool,'T_0') = s(bool,X43)) )),
  inference(superposition,[],[f217,f272])).
fof(f14478,plain,(
  ( ! [X30,X28,X26,X24,X33,X23,X31,X29,X27,X25,X34,X32,X22] : (s('type.pair.prod'('type.infer.exc'(X28,'type.list.list'('type.string.char')),X22),'const.pair.,_2'(s('type.infer.exc'(X28,'type.list.list'('type.string.char')),'const.infer.Success_1'(s(X28,X29))),s(X22,X30))) != s('type.pair.prod'('type.infer.exc'(X28,'type.list.list'('type.string.char')),X22),'const.infer.lookup_st_ex_4'(s(fun(X31,'type.list.list'('type.string.char')),X32),s(X31,X33),s('type.list.list'('type.pair.prod'(X31,X28)),X34),s(X22,happ(s(fun(X24,X22),X25),s(X24,happ(s(fun(X23,X24),X26),s(X23,X27))))))) | s(X22,X30) = s(X22,happ(s(fun(X23,X22),'_dst_x0x1_2'(s(fun(X24,X22),X25),s(fun(X23,X24),X26))),s(X23,X27)))) )),
  inference(superposition,[],[f217,f206])).
fof(f14477,plain,(
  ( ! [X14,X12,X10,X21,X19,X17,X15,X13,X11,X9,X20,X18,X16] : (s('type.pair.prod'('type.infer.exc'(X15,'type.list.list'('type.string.char')),X9),'const.pair.,_2'(s('type.infer.exc'(X15,'type.list.list'('type.string.char')),'const.infer.Success_1'(s(X15,X16))),s(X9,X17))) != s('type.pair.prod'('type.infer.exc'(X15,'type.list.list'('type.string.char')),X9),'const.infer.lookup_st_ex_4'(s(fun(X18,'type.list.list'('type.string.char')),X19),s(X18,X20),s('type.list.list'('type.pair.prod'(X18,X15)),X21),s(X9,happ(s(fun(X12,X9),'_dst_x0x1_2'(s(fun(X10,X9),X11),s(fun(X12,X10),X13))),s(X12,X14))))) | s(X9,X17) = s(X9,happ(s(fun(X10,X9),X11),s(X10,happ(s(fun(X12,X10),X13),s(X12,X14)))))) )),
  inference(superposition,[],[f217,f206])).
fof(f14476,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'(X2,'type.list.list'('type.string.char')),X0),'const.pair.,_2'(s('type.infer.exc'(X2,'type.list.list'('type.string.char')),'const.infer.Success_1'(s(X2,X3))),s(X0,X4))) != s('type.pair.prod'('type.infer.exc'(X2,'type.list.list'('type.string.char')),X0),'const.infer.lookup_st_ex_4'(s(fun(X5,'type.list.list'('type.string.char')),X6),s(X5,X7),s('type.list.list'('type.pair.prod'(X5,X2)),X8),s(X0,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(X0),X1))))) | s(X0,X4) = s(X0,happ(s(fun('type.infer.infer_st'(X0),X0),'const.infer.infer_st_subst_0'),s('type.infer.infer_st'(X0),X1)))) )),
  inference(superposition,[],[f217,f168])).
fof(f14410,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'(X0,'type.list.list'('type.string.char')),X0),'const.infer.read_1'(s(X0,X1))) != s('type.pair.prod'('type.infer.exc'(X0,'type.list.list'('type.string.char')),X0),'const.infer.lookup_st_ex_4'(s(fun(X2,'type.list.list'('type.string.char')),X3),s(X2,X4),s('type.list.list'('type.pair.prod'(X2,X0)),X5),s(X0,X6))) | s(X0,X1) = s(X0,X6)) )),
  inference(superposition,[],[f217,f177])).
fof(f14408,plain,(
  ( ! [X540,X542,X536,X538,X534,X541,X543,X537,X539,X535] : (s('type.pair.prod'('type.infer.exc'(X537,'type.list.list'('type.string.char')),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X534),'type.infer.infer_st'(X535))),'const.pair.,_2'(s('type.infer.exc'(X537,'type.list.list'('type.string.char')),'const.infer.Success_1'(s(X537,X538))),s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X534),'type.infer.infer_st'(X535)),'const.infer.fresh_uvar_1'(s('type.infer.infer_st'(X535),X536))))) != s('type.pair.prod'('type.infer.exc'(X537,'type.list.list'('type.string.char')),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X534),'type.infer.infer_st'(X535))),'const.infer.lookup_st_ex_4'(s(fun(X539,'type.list.list'('type.string.char')),X540),s(X539,X541),s('type.list.list'('type.pair.prod'(X539,X537)),X542),s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X534),'type.infer.infer_st'(X535)),X543))) | s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X534),'type.infer.infer_st'(X535)),X543) = s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X534),'type.infer.infer_st'(X535)),happ(s(fun('type.infer.infer_st'(X535),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X534),'type.infer.infer_st'(X535))),'const.infer.fresh_uvar_0'),s('type.infer.infer_st'(X535),X536)))) )),
  inference(superposition,[],[f217,f179])).
fof(f14403,plain,(
  ( ! [X484,X486,X482,X492,X488,X490,X485,X487,X483,X493,X489,X491] : (s('type.pair.prod'('type.infer.exc'(X487,'type.list.list'('type.string.char')),'type.pair.prod'('type.infer.exc'('type.one.one',X482),X483)),'const.infer.lookup_st_ex_4'(s(fun(X489,'type.list.list'('type.string.char')),X490),s(X489,X491),s('type.list.list'('type.pair.prod'(X489,X487)),X492),s('type.pair.prod'('type.infer.exc'('type.one.one',X482),X483),X493))) != s('type.pair.prod'('type.infer.exc'(X487,'type.list.list'('type.string.char')),'type.pair.prod'('type.infer.exc'('type.one.one',X482),X483)),'const.pair.,_2'(s('type.infer.exc'(X487,'type.list.list'('type.string.char')),'const.infer.Success_1'(s(X487,X488))),s('type.pair.prod'('type.infer.exc'('type.one.one',X482),X483),'const.infer.guard_3'(s(bool,X484),s(X482,X485),s(X483,X486))))) | s('type.pair.prod'('type.infer.exc'('type.one.one',X482),X483),X493) = s('type.pair.prod'('type.infer.exc'('type.one.one',X482),X483),happ(s(fun(X483,'type.pair.prod'('type.infer.exc'('type.one.one',X482),X483)),'const.infer.guard_2'(s(bool,X484),s(X482,X485))),s(X483,X486)))) )),
  inference(superposition,[],[f217,f183])).
fof(f14397,plain,(
  ( ! [X422,X428,X430,X424,X426,X432,X423,X429,X431,X425,X427,X433] : (s('type.pair.prod'('type.infer.exc'(X427,'type.list.list'('type.string.char')),'type.pair.prod'('type.infer.exc'(X422,X423),X424)),'const.pair.,_2'(s('type.infer.exc'(X427,'type.list.list'('type.string.char')),'const.infer.Success_1'(s(X427,X428))),s('type.pair.prod'('type.infer.exc'(X422,X423),X424),'const.infer.st_ex_return_2'(s(X422,X425),s(X424,X426))))) != s('type.pair.prod'('type.infer.exc'(X427,'type.list.list'('type.string.char')),'type.pair.prod'('type.infer.exc'(X422,X423),X424)),'const.infer.lookup_st_ex_4'(s(fun(X429,'type.list.list'('type.string.char')),X430),s(X429,X431),s('type.list.list'('type.pair.prod'(X429,X427)),X432),s('type.pair.prod'('type.infer.exc'(X422,X423),X424),X433))) | s('type.pair.prod'('type.infer.exc'(X422,X423),X424),X433) = s('type.pair.prod'('type.infer.exc'(X422,X423),X424),happ(s(fun(X424,'type.pair.prod'('type.infer.exc'(X422,X423),X424)),happ(s(fun(X422,fun(X424,'type.pair.prod'('type.infer.exc'(X422,X423),X424))),'const.infer.st_ex_return_0'),s(X422,X425))),s(X424,X426)))) )),
  inference(superposition,[],[f217,f205])).
fof(f14396,plain,(
  ( ! [X412,X414,X410,X420,X416,X418,X413,X415,X411,X421,X417,X419] : (s('type.pair.prod'('type.infer.exc'(X415,'type.list.list'('type.string.char')),'type.pair.prod'('type.infer.exc'(X410,X411),X412)),'const.pair.,_2'(s('type.infer.exc'(X415,'type.list.list'('type.string.char')),'const.infer.Success_1'(s(X415,X416))),s('type.pair.prod'('type.infer.exc'(X410,X411),X412),'const.infer.failwith_2'(s(X411,X413),s(X412,X414))))) != s('type.pair.prod'('type.infer.exc'(X415,'type.list.list'('type.string.char')),'type.pair.prod'('type.infer.exc'(X410,X411),X412)),'const.infer.lookup_st_ex_4'(s(fun(X417,'type.list.list'('type.string.char')),X418),s(X417,X419),s('type.list.list'('type.pair.prod'(X417,X415)),X420),s('type.pair.prod'('type.infer.exc'(X410,X411),X412),X421))) | s('type.pair.prod'('type.infer.exc'(X410,X411),X412),X421) = s('type.pair.prod'('type.infer.exc'(X410,X411),X412),happ(s(fun(X412,'type.pair.prod'('type.infer.exc'(X410,X411),X412)),'const.infer.failwith_1'(s(X411,X413))),s(X412,X414)))) )),
  inference(superposition,[],[f217,f204])).
fof(f14395,plain,(
  ( ! [X408,X405,X407,X401,X403,X409,X404,X406,X400,X402] : (s('type.pair.prod'('type.infer.exc'(X403,'type.list.list'('type.string.char')),'type.pair.prod'('type.infer.exc'(X400,X401),X400)),'const.pair.,_2'(s('type.infer.exc'(X403,'type.list.list'('type.string.char')),'const.infer.Success_1'(s(X403,X404))),s('type.pair.prod'('type.infer.exc'(X400,X401),X400),'const.infer.read_1'(s(X400,X402))))) != s('type.pair.prod'('type.infer.exc'(X403,'type.list.list'('type.string.char')),'type.pair.prod'('type.infer.exc'(X400,X401),X400)),'const.infer.lookup_st_ex_4'(s(fun(X405,'type.list.list'('type.string.char')),X406),s(X405,X407),s('type.list.list'('type.pair.prod'(X405,X403)),X408),s('type.pair.prod'('type.infer.exc'(X400,X401),X400),X409))) | s('type.pair.prod'('type.infer.exc'(X400,X401),X400),X409) = s('type.pair.prod'('type.infer.exc'(X400,X401),X400),happ(s(fun(X400,'type.pair.prod'('type.infer.exc'(X400,X401),X400)),'const.infer.read_0'),s(X400,X402)))) )),
  inference(superposition,[],[f217,f178])).
fof(f14394,plain,(
  ( ! [X391,X397,X399,X393,X395,X390,X396,X398,X392,X394] : (s('type.pair.prod'('type.infer.exc'(X393,'type.list.list'('type.string.char')),'type.pair.prod'('type.infer.exc'(X390,X391),X390)),'const.pair.,_2'(s('type.infer.exc'(X393,'type.list.list'('type.string.char')),'const.infer.Success_1'(s(X393,X394))),s('type.pair.prod'('type.infer.exc'(X390,X391),X390),'const.infer.read_1'(s(X390,X392))))) != s('type.pair.prod'('type.infer.exc'(X393,'type.list.list'('type.string.char')),'type.pair.prod'('type.infer.exc'(X390,X391),X390)),'const.infer.lookup_st_ex_4'(s(fun(X395,'type.list.list'('type.string.char')),X396),s(X395,X397),s('type.list.list'('type.pair.prod'(X395,X393)),X398),s('type.pair.prod'('type.infer.exc'(X390,X391),X390),X399))) | s('type.pair.prod'('type.infer.exc'(X390,X391),X390),X399) = s('type.pair.prod'('type.infer.exc'(X390,X391),X390),'const.pair.,_2'(s('type.infer.exc'(X390,X391),'const.infer.Success_1'(s(X390,X392))),s(X390,X392)))) )),
  inference(superposition,[],[f217,f177])).
fof(f14388,plain,(
  ( ! [X344,X346,X341,X343,X339,X349,X345,X347,X340,X342,X348] : (s('type.pair.prod'('type.infer.exc'(X343,'type.list.list'('type.string.char')),'type.list.list'(X339)),'const.infer.lookup_st_ex_4'(s(fun(X345,'type.list.list'('type.string.char')),X346),s(X345,X347),s('type.list.list'('type.pair.prod'(X345,X343)),X348),s('type.list.list'(X339),X349))) != s('type.pair.prod'('type.infer.exc'(X343,'type.list.list'('type.string.char')),'type.list.list'(X339)),'const.pair.,_2'(s('type.infer.exc'(X343,'type.list.list'('type.string.char')),'const.infer.Success_1'(s(X343,X344))),s('type.list.list'(X339),'const.list.MAP_2'(s(fun(X340,X339),X341),s('type.list.list'(X340),X342))))) | s('type.list.list'(X339),X349) = s('type.list.list'(X339),happ(s(fun('type.list.list'(X340),'type.list.list'(X339)),happ(s(fun(fun(X340,X339),fun('type.list.list'(X340),'type.list.list'(X339))),'const.list.MAP_0'),s(fun(X340,X339),X341))),s('type.list.list'(X340),X342)))) )),
  inference(superposition,[],[f217,f180])).
fof(f14366,plain,(
  ( ! [X118,X116,X114,X112,X119,X117,X115,X113] : (s('type.pair.prod'('type.infer.exc'(X113,'type.list.list'('type.string.char')),bool),'const.pair.,_2'(s('type.infer.exc'(X113,'type.list.list'('type.string.char')),'const.infer.Success_1'(s(X113,X114))),s(bool,'T_0'))) != s('type.pair.prod'('type.infer.exc'(X113,'type.list.list'('type.string.char')),bool),'const.infer.lookup_st_ex_4'(s(fun(X115,'type.list.list'('type.string.char')),X116),s(X115,X117),s('type.list.list'('type.pair.prod'(X115,X113)),X118),s(bool,X119))) | s(bool,X119) = s(bool,happ(s(fun('type.infer.infer_st'(bool),bool),'const.infer.infer_st_subst_0'),s('type.infer.infer_st'(bool),X112))) | s(bool,'F_0') = s(bool,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(bool),X112)))) )),
  inference(superposition,[],[f217,f293])).
fof(f14364,plain,(
  ( ! [X103,X101,X99,X97,X102,X100,X98,X104] : (s('type.pair.prod'('type.infer.exc'(X98,'type.list.list'('type.string.char')),bool),'const.pair.,_2'(s('type.infer.exc'(X98,'type.list.list'('type.string.char')),'const.infer.Success_1'(s(X98,X99))),s(bool,X97))) != s('type.pair.prod'('type.infer.exc'(X98,'type.list.list'('type.string.char')),bool),'const.infer.lookup_st_ex_4'(s(fun(X100,'type.list.list'('type.string.char')),X101),s(X100,X102),s('type.list.list'('type.pair.prod'(X100,X98)),X103),s(bool,X104))) | s(bool,'F_0') = s(bool,X104) | s(bool,'T_0') = s(bool,X97)) )),
  inference(superposition,[],[f217,f167])).
fof(f14362,plain,(
  ( ! [X80,X87,X85,X83,X81,X79,X86,X84,X82] : (s('type.pair.prod'('type.infer.exc'(X80,'type.list.list'('type.string.char')),bool),'const.pair.,_2'(s('type.infer.exc'(X80,'type.list.list'('type.string.char')),'const.infer.Success_1'(s(X80,X81))),s(bool,X79))) != s('type.pair.prod'('type.infer.exc'(X80,'type.list.list'('type.string.char')),bool),'const.infer.lookup_st_ex_4'(s(fun(X82,'type.list.list'('type.string.char')),X83),s(X82,X84),s('type.list.list'('type.pair.prod'(X82,X80)),X85),s(bool,X86))) | s(bool,'T_0') = s(bool,X86) | s(bool,X79) = s(bool,X87) | s(bool,'T_0') = s(bool,X87)) )),
  inference(superposition,[],[f217,f272])).
fof(f14361,plain,(
  ( ! [X78,X76,X74,X72,X71,X77,X75,X73] : (s('type.pair.prod'('type.infer.exc'(X72,'type.list.list'('type.string.char')),bool),'const.pair.,_2'(s('type.infer.exc'(X72,'type.list.list'('type.string.char')),'const.infer.Success_1'(s(X72,X73))),s(bool,'F_0'))) != s('type.pair.prod'('type.infer.exc'(X72,'type.list.list'('type.string.char')),bool),'const.infer.lookup_st_ex_4'(s(fun(X74,'type.list.list'('type.string.char')),X75),s(X74,X76),s('type.list.list'('type.pair.prod'(X74,X72)),X77),s(bool,X78))) | s(bool,X71) = s(bool,X78) | s(bool,'T_0') = s(bool,X71)) )),
  inference(superposition,[],[f217,f167])).
fof(f14359,plain,(
  ( ! [X61,X59,X57,X54,X60,X58,X56,X55,X53] : (s('type.pair.prod'('type.infer.exc'(X55,'type.list.list'('type.string.char')),bool),'const.pair.,_2'(s('type.infer.exc'(X55,'type.list.list'('type.string.char')),'const.infer.Success_1'(s(X55,X56))),s(bool,X54))) != s('type.pair.prod'('type.infer.exc'(X55,'type.list.list'('type.string.char')),bool),'const.infer.lookup_st_ex_4'(s(fun(X57,'type.list.list'('type.string.char')),X58),s(X57,X59),s('type.list.list'('type.pair.prod'(X57,X55)),X60),s(bool,X61))) | s(bool,X53) = s(bool,X61) | s(bool,'T_0') = s(bool,X53) | s(bool,'T_0') = s(bool,X54)) )),
  inference(superposition,[],[f217,f272])).
fof(f14357,plain,(
  ( ! [X39,X37,X35,X43,X41,X38,X36,X42,X40] : (s('type.pair.prod'('type.infer.exc'(X36,'type.list.list'('type.string.char')),bool),'const.pair.,_2'(s('type.infer.exc'(X36,'type.list.list'('type.string.char')),'const.infer.Success_1'(s(X36,X37))),s(bool,'T_0'))) != s('type.pair.prod'('type.infer.exc'(X36,'type.list.list'('type.string.char')),bool),'const.infer.lookup_st_ex_4'(s(fun(X38,'type.list.list'('type.string.char')),X39),s(X38,X40),s('type.list.list'('type.pair.prod'(X38,X36)),X41),s(bool,X42))) | s(bool,X35) = s(bool,X42) | s(bool,X35) = s(bool,X43) | s(bool,'T_0') = s(bool,X43)) )),
  inference(superposition,[],[f217,f272])).
fof(f14356,plain,(
  ( ! [X30,X28,X26,X24,X33,X23,X31,X29,X27,X25,X34,X32,X22] : (s('type.pair.prod'('type.infer.exc'(X28,'type.list.list'('type.string.char')),X22),'const.infer.lookup_st_ex_4'(s(fun(X30,'type.list.list'('type.string.char')),X31),s(X30,X32),s('type.list.list'('type.pair.prod'(X30,X28)),X33),s(X22,X34))) != s('type.pair.prod'('type.infer.exc'(X28,'type.list.list'('type.string.char')),X22),'const.pair.,_2'(s('type.infer.exc'(X28,'type.list.list'('type.string.char')),'const.infer.Success_1'(s(X28,X29))),s(X22,happ(s(fun(X24,X22),X25),s(X24,happ(s(fun(X23,X24),X26),s(X23,X27))))))) | s(X22,X34) = s(X22,happ(s(fun(X23,X22),'_dst_x0x1_2'(s(fun(X24,X22),X25),s(fun(X23,X24),X26))),s(X23,X27)))) )),
  inference(superposition,[],[f217,f206])).
fof(f14355,plain,(
  ( ! [X14,X12,X10,X21,X19,X17,X15,X13,X11,X9,X20,X18,X16] : (s('type.pair.prod'('type.infer.exc'(X15,'type.list.list'('type.string.char')),X9),'const.infer.lookup_st_ex_4'(s(fun(X17,'type.list.list'('type.string.char')),X18),s(X17,X19),s('type.list.list'('type.pair.prod'(X17,X15)),X20),s(X9,X21))) != s('type.pair.prod'('type.infer.exc'(X15,'type.list.list'('type.string.char')),X9),'const.pair.,_2'(s('type.infer.exc'(X15,'type.list.list'('type.string.char')),'const.infer.Success_1'(s(X15,X16))),s(X9,happ(s(fun(X12,X9),'_dst_x0x1_2'(s(fun(X10,X9),X11),s(fun(X12,X10),X13))),s(X12,X14))))) | s(X9,X21) = s(X9,happ(s(fun(X10,X9),X11),s(X10,happ(s(fun(X12,X10),X13),s(X12,X14)))))) )),
  inference(superposition,[],[f217,f206])).
fof(f14354,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'(X2,'type.list.list'('type.string.char')),X0),'const.pair.,_2'(s('type.infer.exc'(X2,'type.list.list'('type.string.char')),'const.infer.Success_1'(s(X2,X3))),s(X0,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(X0),X1))))) != s('type.pair.prod'('type.infer.exc'(X2,'type.list.list'('type.string.char')),X0),'const.infer.lookup_st_ex_4'(s(fun(X4,'type.list.list'('type.string.char')),X5),s(X4,X6),s('type.list.list'('type.pair.prod'(X4,X2)),X7),s(X0,X8))) | s(X0,X8) = s(X0,happ(s(fun('type.infer.infer_st'(X0),X0),'const.infer.infer_st_subst_0'),s('type.infer.infer_st'(X0),X1)))) )),
  inference(superposition,[],[f217,f168])).
fof(f14275,plain,(
  ( ! [X6,X4,X2,X0,X12,X10,X8,X7,X5,X3,X1,X11,X9] : (s('type.pair.prod'('type.infer.exc'(X0,'type.list.list'('type.string.char')),'type.pair.prod'('type.infer.exc'(X1,X2),X3)),'const.pair.,_2'(s('type.infer.exc'(X0,'type.list.list'('type.string.char')),'const.infer.Success_1'(s(X0,X4))),s('type.pair.prod'('type.infer.exc'(X1,X2),X3),'const.pair.,_2'(s('type.infer.exc'(X1,X2),'const.infer.Success_1'(s(X1,X5))),s(X3,X6))))) != s('type.pair.prod'('type.infer.exc'(X0,'type.list.list'('type.string.char')),'type.pair.prod'('type.infer.exc'(X1,X2),X3)),'const.infer.lookup_st_ex_4'(s(fun(X7,'type.list.list'('type.string.char')),X8),s(X7,X9),s('type.list.list'('type.pair.prod'(X7,X0)),X10),s('type.pair.prod'('type.infer.exc'(X1,X2),X3),'const.infer.failwith_2'(s(X2,X11),s(X3,X12)))))) )),
  inference(unit_resulting_resolution,[],[f253,f217])).
fof(f14282,plain,(
  ( ! [X6,X4,X2,X0,X10,X8,X7,X5,X3,X1,X9] : (s('type.pair.prod'('type.infer.exc'(X0,'type.list.list'('type.string.char')),'type.pair.prod'('type.infer.exc'(X1,X2),X1)),'const.pair.,_2'(s('type.infer.exc'(X0,'type.list.list'('type.string.char')),'const.infer.Success_1'(s(X0,X3))),s('type.pair.prod'('type.infer.exc'(X1,X2),X1),'const.infer.failwith_2'(s(X2,X4),s(X1,X5))))) != s('type.pair.prod'('type.infer.exc'(X0,'type.list.list'('type.string.char')),'type.pair.prod'('type.infer.exc'(X1,X2),X1)),'const.infer.lookup_st_ex_4'(s(fun(X6,'type.list.list'('type.string.char')),X7),s(X6,X8),s('type.list.list'('type.pair.prod'(X6,X0)),X9),s('type.pair.prod'('type.infer.exc'(X1,X2),X1),'const.infer.read_1'(s(X1,X10)))))) )),
  inference(unit_resulting_resolution,[],[f706,f217])).
fof(f14288,plain,(
  ( ! [X6,X4,X2,X0,X12,X10,X8,X7,X5,X3,X1,X11,X9] : (s('type.pair.prod'('type.infer.exc'(X0,'type.list.list'('type.string.char')),'type.pair.prod'('type.infer.exc'(X1,X2),X3)),'const.pair.,_2'(s('type.infer.exc'(X0,'type.list.list'('type.string.char')),'const.infer.Success_1'(s(X0,X4))),s('type.pair.prod'('type.infer.exc'(X1,X2),X3),'const.infer.failwith_2'(s(X2,X5),s(X3,X6))))) != s('type.pair.prod'('type.infer.exc'(X0,'type.list.list'('type.string.char')),'type.pair.prod'('type.infer.exc'(X1,X2),X3)),'const.infer.lookup_st_ex_4'(s(fun(X7,'type.list.list'('type.string.char')),X8),s(X7,X9),s('type.list.list'('type.pair.prod'(X7,X0)),X10),s('type.pair.prod'('type.infer.exc'(X1,X2),X3),'const.pair.,_2'(s('type.infer.exc'(X1,X2),'const.infer.Success_1'(s(X1,X11))),s(X3,X12)))))) )),
  inference(unit_resulting_resolution,[],[f253,f217])).
fof(f14295,plain,(
  ( ! [X6,X4,X2,X0,X10,X8,X7,X5,X3,X1,X9] : (s('type.pair.prod'('type.infer.exc'(X0,'type.list.list'('type.string.char')),'type.pair.prod'('type.infer.exc'(X1,X2),X1)),'const.pair.,_2'(s('type.infer.exc'(X0,'type.list.list'('type.string.char')),'const.infer.Success_1'(s(X0,X3))),s('type.pair.prod'('type.infer.exc'(X1,X2),X1),'const.infer.read_1'(s(X1,X4))))) != s('type.pair.prod'('type.infer.exc'(X0,'type.list.list'('type.string.char')),'type.pair.prod'('type.infer.exc'(X1,X2),X1)),'const.infer.lookup_st_ex_4'(s(fun(X5,'type.list.list'('type.string.char')),X6),s(X5,X7),s('type.list.list'('type.pair.prod'(X5,X0)),X8),s('type.pair.prod'('type.infer.exc'(X1,X2),X1),'const.infer.failwith_2'(s(X2,X9),s(X1,X10)))))) )),
  inference(unit_resulting_resolution,[],[f706,f217])).
fof(f13726,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s(X3,happ(s(fun('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X3),X4),s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.apply_subst_2'(s('type.infer_t.infer_t',X1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X2))))) = s(X3,happ(s(fun('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X3),'_dst_x0x1_2'(s(fun('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X3),X4),s(fun('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.infer.apply_subst_1'(s('type.infer_t.infer_t',X1))))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X2)))) )),
  inference(superposition,[],[f206,f171])).
fof(f13964,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.one.one',X0),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X1),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.infer.guard_3'(s(bool,'T_0'),s(X0,X5),s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X1),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.apply_subst_2'(s('type.infer_t.infer_t',X3),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X4))))) = s('type.pair.prod'('type.infer.exc'('type.one.one',X0),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X1),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.pair.,_2'(s('type.infer.exc'('type.one.one',X0),'const.infer.Success_1'(s('type.one.one',X2))),s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X1),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.apply_subst_2'(s('type.infer_t.infer_t',X3),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X4)))))) )),
  inference(forward_demodulation,[],[f13589,f171])).
fof(f13589,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.one.one',X0),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X1),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.pair.,_2'(s('type.infer.exc'('type.one.one',X0),'const.infer.Success_1'(s('type.one.one',X2))),s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X1),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.apply_subst_2'(s('type.infer_t.infer_t',X3),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X4))))) = s('type.pair.prod'('type.infer.exc'('type.one.one',X0),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X1),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.infer.guard_3'(s(bool,'T_0'),s(X0,X5),s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X1),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),happ(s(fun('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X1),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.infer.apply_subst_1'(s('type.infer_t.infer_t',X3))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X4)))))) )),
  inference(unit_resulting_resolution,[],[f163,f171,f252])).
fof(f13961,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1,X9] : (s('type.pair.prod'('type.infer.exc'(X0,X1),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X2),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.infer.st_ex_return_2'(s(X0,happ(s(fun(X4,X0),X5),s(X4,happ(s(fun(X3,X4),X6),s(X3,X7))))),s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X2),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.apply_subst_2'(s('type.infer_t.infer_t',X8),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X9))))) = s('type.pair.prod'('type.infer.exc'(X0,X1),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X2),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.pair.,_2'(s('type.infer.exc'(X0,X1),'const.infer.Success_1'(s(X0,happ(s(fun(X3,X0),'_dst_x0x1_2'(s(fun(X4,X0),X5),s(fun(X3,X4),X6))),s(X3,X7))))),s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X2),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.apply_subst_2'(s('type.infer_t.infer_t',X8),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X9)))))) )),
  inference(forward_demodulation,[],[f13591,f171])).
fof(f13591,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1,X9] : (s('type.pair.prod'('type.infer.exc'(X0,X1),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X2),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.pair.,_2'(s('type.infer.exc'(X0,X1),'const.infer.Success_1'(s(X0,happ(s(fun(X3,X0),'_dst_x0x1_2'(s(fun(X4,X0),X5),s(fun(X3,X4),X6))),s(X3,X7))))),s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X2),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.apply_subst_2'(s('type.infer_t.infer_t',X8),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X9))))) = s('type.pair.prod'('type.infer.exc'(X0,X1),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X2),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.infer.st_ex_return_2'(s(X0,happ(s(fun(X4,X0),X5),s(X4,happ(s(fun(X3,X4),X6),s(X3,X7))))),s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X2),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),happ(s(fun('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X2),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.infer.apply_subst_1'(s('type.infer_t.infer_t',X8))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X9)))))) )),
  inference(unit_resulting_resolution,[],[f206,f171,f212])).
fof(f13914,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'(X0,X1),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X2),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.infer.st_ex_return_2'(s(X0,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(X0),X3))),s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X2),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.apply_subst_2'(s('type.infer_t.infer_t',X4),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X5))))) = s('type.pair.prod'('type.infer.exc'(X0,X1),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X2),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.pair.,_2'(s('type.infer.exc'(X0,X1),'const.infer.Success_1'(s(X0,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(X0),X3))))),s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X2),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.apply_subst_2'(s('type.infer_t.infer_t',X4),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X5)))))) )),
  inference(forward_demodulation,[],[f13913,f168])).
fof(f13913,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'(X0,X1),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X2),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.pair.,_2'(s('type.infer.exc'(X0,X1),'const.infer.Success_1'(s(X0,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(X0),X3))))),s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X2),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.apply_subst_2'(s('type.infer_t.infer_t',X4),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X5))))) = s('type.pair.prod'('type.infer.exc'(X0,X1),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X2),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.infer.st_ex_return_2'(s(X0,happ(s(fun('type.infer.infer_st'(X0),X0),'const.infer.infer_st_subst_0'),s('type.infer.infer_st'(X0),X3))),s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X2),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.apply_subst_2'(s('type.infer_t.infer_t',X4),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X5)))))) )),
  inference(forward_demodulation,[],[f13622,f171])).
fof(f13622,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'(X0,X1),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X2),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.pair.,_2'(s('type.infer.exc'(X0,X1),'const.infer.Success_1'(s(X0,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(X0),X3))))),s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X2),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.apply_subst_2'(s('type.infer_t.infer_t',X4),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X5))))) = s('type.pair.prod'('type.infer.exc'(X0,X1),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X2),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.infer.st_ex_return_2'(s(X0,happ(s(fun('type.infer.infer_st'(X0),X0),'const.infer.infer_st_subst_0'),s('type.infer.infer_st'(X0),X3))),s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X2),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),happ(s(fun('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X2),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.infer.apply_subst_1'(s('type.infer_t.infer_t',X4))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X5)))))) )),
  inference(unit_resulting_resolution,[],[f168,f171,f212])).
fof(f13912,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1,X9] : (s('type.pair.prod'('type.infer.exc'(X0,X1),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X2),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.infer.st_ex_return_2'(s(X0,happ(s(fun(X5,X0),'_dst_x0x1_2'(s(fun(X3,X0),X4),s(fun(X5,X3),X6))),s(X5,X7))),s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X2),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.apply_subst_2'(s('type.infer_t.infer_t',X8),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X9))))) = s('type.pair.prod'('type.infer.exc'(X0,X1),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X2),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.pair.,_2'(s('type.infer.exc'(X0,X1),'const.infer.Success_1'(s(X0,happ(s(fun(X3,X0),X4),s(X3,happ(s(fun(X5,X3),X6),s(X5,X7))))))),s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X2),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.apply_subst_2'(s('type.infer_t.infer_t',X8),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X9)))))) )),
  inference(forward_demodulation,[],[f13623,f171])).
fof(f13623,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1,X9] : (s('type.pair.prod'('type.infer.exc'(X0,X1),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X2),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.pair.,_2'(s('type.infer.exc'(X0,X1),'const.infer.Success_1'(s(X0,happ(s(fun(X3,X0),X4),s(X3,happ(s(fun(X5,X3),X6),s(X5,X7))))))),s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X2),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.apply_subst_2'(s('type.infer_t.infer_t',X8),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X9))))) = s('type.pair.prod'('type.infer.exc'(X0,X1),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X2),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.infer.st_ex_return_2'(s(X0,happ(s(fun(X5,X0),'_dst_x0x1_2'(s(fun(X3,X0),X4),s(fun(X5,X3),X6))),s(X5,X7))),s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X2),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),happ(s(fun('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X2),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.infer.apply_subst_1'(s('type.infer_t.infer_t',X8))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X9)))))) )),
  inference(unit_resulting_resolution,[],[f206,f171,f212])).
fof(f13907,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'(fun(X0,'type.one.one'),X1),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X2),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.infer.st_ex_return_2'(s(fun(X0,'type.one.one'),X6),s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X2),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.apply_subst_2'(s('type.infer_t.infer_t',X4),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X5))))) = s('type.pair.prod'('type.infer.exc'(fun(X0,'type.one.one'),X1),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X2),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.pair.,_2'(s('type.infer.exc'(fun(X0,'type.one.one'),X1),'const.infer.Success_1'(s(fun(X0,'type.one.one'),X3))),s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X2),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.apply_subst_2'(s('type.infer_t.infer_t',X4),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X5)))))) )),
  inference(forward_demodulation,[],[f13626,f171])).
fof(f13626,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'(fun(X0,'type.one.one'),X1),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X2),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.pair.,_2'(s('type.infer.exc'(fun(X0,'type.one.one'),X1),'const.infer.Success_1'(s(fun(X0,'type.one.one'),X3))),s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X2),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.apply_subst_2'(s('type.infer_t.infer_t',X4),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X5))))) = s('type.pair.prod'('type.infer.exc'(fun(X0,'type.one.one'),X1),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X2),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.infer.st_ex_return_2'(s(fun(X0,'type.one.one'),X6),s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X2),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),happ(s(fun('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X2),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.infer.apply_subst_1'(s('type.infer_t.infer_t',X4))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X5)))))) )),
  inference(unit_resulting_resolution,[],[f605,f171,f212])).
fof(f13905,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,'type.one.one')),X2),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X3),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.infer.st_ex_return_2'(s(fun(X0,fun(X1,'type.one.one')),X7),s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X3),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.apply_subst_2'(s('type.infer_t.infer_t',X5),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X6))))) = s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,'type.one.one')),X2),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X3),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.pair.,_2'(s('type.infer.exc'(fun(X0,fun(X1,'type.one.one')),X2),'const.infer.Success_1'(s(fun(X0,fun(X1,'type.one.one')),X4))),s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X3),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.apply_subst_2'(s('type.infer_t.infer_t',X5),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X6)))))) )),
  inference(forward_demodulation,[],[f13628,f171])).
fof(f13628,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,'type.one.one')),X2),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X3),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.pair.,_2'(s('type.infer.exc'(fun(X0,fun(X1,'type.one.one')),X2),'const.infer.Success_1'(s(fun(X0,fun(X1,'type.one.one')),X4))),s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X3),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.apply_subst_2'(s('type.infer_t.infer_t',X5),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X6))))) = s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,'type.one.one')),X2),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X3),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.infer.st_ex_return_2'(s(fun(X0,fun(X1,'type.one.one')),X7),s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X3),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),happ(s(fun('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X3),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.infer.apply_subst_1'(s('type.infer_t.infer_t',X5))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X6)))))) )),
  inference(unit_resulting_resolution,[],[f724,f171,f212])).
fof(f13904,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,fun(X2,'type.one.one'))),X3),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X4),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.infer.st_ex_return_2'(s(fun(X0,fun(X1,fun(X2,'type.one.one'))),X8),s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X4),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.apply_subst_2'(s('type.infer_t.infer_t',X6),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X7))))) = s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,fun(X2,'type.one.one'))),X3),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X4),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.pair.,_2'(s('type.infer.exc'(fun(X0,fun(X1,fun(X2,'type.one.one'))),X3),'const.infer.Success_1'(s(fun(X0,fun(X1,fun(X2,'type.one.one'))),X5))),s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X4),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.apply_subst_2'(s('type.infer_t.infer_t',X6),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X7)))))) )),
  inference(forward_demodulation,[],[f13629,f171])).
fof(f13629,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,fun(X2,'type.one.one'))),X3),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X4),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.pair.,_2'(s('type.infer.exc'(fun(X0,fun(X1,fun(X2,'type.one.one'))),X3),'const.infer.Success_1'(s(fun(X0,fun(X1,fun(X2,'type.one.one'))),X5))),s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X4),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.apply_subst_2'(s('type.infer_t.infer_t',X6),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X7))))) = s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,fun(X2,'type.one.one'))),X3),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X4),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.infer.st_ex_return_2'(s(fun(X0,fun(X1,fun(X2,'type.one.one'))),X8),s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X4),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),happ(s(fun('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X4),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.infer.apply_subst_1'(s('type.infer_t.infer_t',X6))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X7)))))) )),
  inference(unit_resulting_resolution,[],[f752,f171,f212])).
fof(f13903,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1,X9] : (s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,fun(X2,fun(X3,'type.one.one')))),X4),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X5),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.infer.st_ex_return_2'(s(fun(X0,fun(X1,fun(X2,fun(X3,'type.one.one')))),X9),s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X5),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.apply_subst_2'(s('type.infer_t.infer_t',X7),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X8))))) = s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,fun(X2,fun(X3,'type.one.one')))),X4),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X5),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.pair.,_2'(s('type.infer.exc'(fun(X0,fun(X1,fun(X2,fun(X3,'type.one.one')))),X4),'const.infer.Success_1'(s(fun(X0,fun(X1,fun(X2,fun(X3,'type.one.one')))),X6))),s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X5),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.apply_subst_2'(s('type.infer_t.infer_t',X7),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X8)))))) )),
  inference(forward_demodulation,[],[f13630,f171])).
fof(f13630,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1,X9] : (s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,fun(X2,fun(X3,'type.one.one')))),X4),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X5),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.pair.,_2'(s('type.infer.exc'(fun(X0,fun(X1,fun(X2,fun(X3,'type.one.one')))),X4),'const.infer.Success_1'(s(fun(X0,fun(X1,fun(X2,fun(X3,'type.one.one')))),X6))),s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X5),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.apply_subst_2'(s('type.infer_t.infer_t',X7),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X8))))) = s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,fun(X2,fun(X3,'type.one.one')))),X4),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X5),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.infer.st_ex_return_2'(s(fun(X0,fun(X1,fun(X2,fun(X3,'type.one.one')))),X9),s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X5),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),happ(s(fun('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X5),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.infer.apply_subst_1'(s('type.infer_t.infer_t',X7))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X8)))))) )),
  inference(unit_resulting_resolution,[],[f787,f171,f212])).
fof(f13902,plain,(
  ( ! [X6,X4,X2,X0,X10,X8,X7,X5,X3,X1,X9] : (s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,fun(X2,fun(X3,fun(X4,'type.one.one'))))),X5),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X6),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.infer.st_ex_return_2'(s(fun(X0,fun(X1,fun(X2,fun(X3,fun(X4,'type.one.one'))))),X7),s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X6),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.apply_subst_2'(s('type.infer_t.infer_t',X8),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X9))))) = s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,fun(X2,fun(X3,fun(X4,'type.one.one'))))),X5),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X6),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.pair.,_2'(s('type.infer.exc'(fun(X0,fun(X1,fun(X2,fun(X3,fun(X4,'type.one.one'))))),X5),'const.infer.Success_1'(s(fun(X0,fun(X1,fun(X2,fun(X3,fun(X4,'type.one.one'))))),X10))),s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X6),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.apply_subst_2'(s('type.infer_t.infer_t',X8),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X9)))))) )),
  inference(forward_demodulation,[],[f13631,f171])).
fof(f13631,plain,(
  ( ! [X6,X4,X2,X0,X10,X8,X7,X5,X3,X1,X9] : (s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,fun(X2,fun(X3,fun(X4,'type.one.one'))))),X5),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X6),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.infer.st_ex_return_2'(s(fun(X0,fun(X1,fun(X2,fun(X3,fun(X4,'type.one.one'))))),X7),s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X6),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),happ(s(fun('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X6),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.infer.apply_subst_1'(s('type.infer_t.infer_t',X8))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X9))))) = s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,fun(X2,fun(X3,fun(X4,'type.one.one'))))),X5),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X6),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.pair.,_2'(s('type.infer.exc'(fun(X0,fun(X1,fun(X2,fun(X3,fun(X4,'type.one.one'))))),X5),'const.infer.Success_1'(s(fun(X0,fun(X1,fun(X2,fun(X3,fun(X4,'type.one.one'))))),X10))),s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X6),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.apply_subst_2'(s('type.infer_t.infer_t',X8),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X9)))))) )),
  inference(unit_resulting_resolution,[],[f815,f171,f212])).
fof(f13898,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.one.one',X0),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X1),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.infer.st_ex_return_2'(s('type.one.one',X5),s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X1),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.apply_subst_2'(s('type.infer_t.infer_t',X3),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X4))))) = s('type.pair.prod'('type.infer.exc'('type.one.one',X0),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X1),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.pair.,_2'(s('type.infer.exc'('type.one.one',X0),'const.infer.Success_1'(s('type.one.one',X2))),s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X1),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.apply_subst_2'(s('type.infer_t.infer_t',X3),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X4)))))) )),
  inference(forward_demodulation,[],[f13635,f171])).
fof(f13635,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.one.one',X0),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X1),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.pair.,_2'(s('type.infer.exc'('type.one.one',X0),'const.infer.Success_1'(s('type.one.one',X2))),s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X1),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.apply_subst_2'(s('type.infer_t.infer_t',X3),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X4))))) = s('type.pair.prod'('type.infer.exc'('type.one.one',X0),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X1),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.infer.st_ex_return_2'(s('type.one.one',X5),s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X1),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),happ(s(fun('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X1),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.infer.apply_subst_1'(s('type.infer_t.infer_t',X3))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X4)))))) )),
  inference(unit_resulting_resolution,[],[f258,f171,f212])).
fof(f13897,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.list.list'(X0),X1),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X2),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.infer.st_ex_return_2'(s('type.list.list'(X0),'const.list.MAP_2'(s(fun(X3,X0),X4),s('type.list.list'(X3),X5))),s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X2),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.apply_subst_2'(s('type.infer_t.infer_t',X6),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X7))))) = s('type.pair.prod'('type.infer.exc'('type.list.list'(X0),X1),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X2),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.pair.,_2'(s('type.infer.exc'('type.list.list'(X0),X1),'const.infer.Success_1'(s('type.list.list'(X0),'const.list.MAP_2'(s(fun(X3,X0),X4),s('type.list.list'(X3),X5))))),s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X2),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.apply_subst_2'(s('type.infer_t.infer_t',X6),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X7)))))) )),
  inference(forward_demodulation,[],[f13896,f180])).
fof(f13896,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.list.list'(X0),X1),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X2),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.pair.,_2'(s('type.infer.exc'('type.list.list'(X0),X1),'const.infer.Success_1'(s('type.list.list'(X0),'const.list.MAP_2'(s(fun(X3,X0),X4),s('type.list.list'(X3),X5))))),s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X2),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.apply_subst_2'(s('type.infer_t.infer_t',X6),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X7))))) = s('type.pair.prod'('type.infer.exc'('type.list.list'(X0),X1),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X2),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.infer.st_ex_return_2'(s('type.list.list'(X0),happ(s(fun('type.list.list'(X3),'type.list.list'(X0)),happ(s(fun(fun(X3,X0),fun('type.list.list'(X3),'type.list.list'(X0))),'const.list.MAP_0'),s(fun(X3,X0),X4))),s('type.list.list'(X3),X5))),s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X2),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.apply_subst_2'(s('type.infer_t.infer_t',X6),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X7)))))) )),
  inference(forward_demodulation,[],[f13636,f171])).
fof(f13636,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.list.list'(X0),X1),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X2),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.pair.,_2'(s('type.infer.exc'('type.list.list'(X0),X1),'const.infer.Success_1'(s('type.list.list'(X0),'const.list.MAP_2'(s(fun(X3,X0),X4),s('type.list.list'(X3),X5))))),s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X2),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.apply_subst_2'(s('type.infer_t.infer_t',X6),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X7))))) = s('type.pair.prod'('type.infer.exc'('type.list.list'(X0),X1),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X2),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.infer.st_ex_return_2'(s('type.list.list'(X0),happ(s(fun('type.list.list'(X3),'type.list.list'(X0)),happ(s(fun(fun(X3,X0),fun('type.list.list'(X3),'type.list.list'(X0))),'const.list.MAP_0'),s(fun(X3,X0),X4))),s('type.list.list'(X3),X5))),s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X2),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),happ(s(fun('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X2),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.infer.apply_subst_1'(s('type.infer_t.infer_t',X6))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X7)))))) )),
  inference(unit_resulting_resolution,[],[f180,f171,f212])).
fof(f13891,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.num.num',X0),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X1),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.infer.st_ex_return_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X3))),s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X1),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.apply_subst_2'(s('type.infer_t.infer_t',X4),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X5))))) = s('type.pair.prod'('type.infer.exc'('type.num.num',X0),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X1),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.pair.,_2'(s('type.infer.exc'('type.num.num',X0),'const.infer.Success_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X3))))),s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X1),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.apply_subst_2'(s('type.infer_t.infer_t',X4),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X5)))))) )),
  inference(forward_demodulation,[],[f13890,f175])).
fof(f13890,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.num.num',X0),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X1),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.infer.st_ex_return_2'(s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.arithmetic.+_1'(s('type.num.num',X2))),s('type.num.num',X3))),s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X1),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.apply_subst_2'(s('type.infer_t.infer_t',X4),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X5))))) = s('type.pair.prod'('type.infer.exc'('type.num.num',X0),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X1),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.pair.,_2'(s('type.infer.exc'('type.num.num',X0),'const.infer.Success_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X3))))),s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X1),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.apply_subst_2'(s('type.infer_t.infer_t',X4),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X5)))))) )),
  inference(forward_demodulation,[],[f13639,f171])).
fof(f13639,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.num.num',X0),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X1),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.pair.,_2'(s('type.infer.exc'('type.num.num',X0),'const.infer.Success_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X3))))),s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X1),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.apply_subst_2'(s('type.infer_t.infer_t',X4),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X5))))) = s('type.pair.prod'('type.infer.exc'('type.num.num',X0),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X1),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.infer.st_ex_return_2'(s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.arithmetic.+_1'(s('type.num.num',X2))),s('type.num.num',X3))),s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X1),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),happ(s(fun('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X1),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.infer.apply_subst_1'(s('type.infer_t.infer_t',X4))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X5)))))) )),
  inference(unit_resulting_resolution,[],[f175,f171,f212])).
fof(f13889,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X1),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.infer.st_ex_return_2'(s('type.infer_t.infer_t','const.infer_t.Infer_Tuvar_1'(s('type.num.num',X2))),s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X1),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.apply_subst_2'(s('type.infer_t.infer_t',X3),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X4))))) = s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X1),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.pair.,_2'(s('type.infer.exc'('type.infer_t.infer_t',X0),'const.infer.Success_1'(s('type.infer_t.infer_t','const.infer_t.Infer_Tuvar_1'(s('type.num.num',X2))))),s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X1),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.apply_subst_2'(s('type.infer_t.infer_t',X3),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X4)))))) )),
  inference(forward_demodulation,[],[f13888,f166])).
fof(f13888,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X1),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.infer.st_ex_return_2'(s('type.infer_t.infer_t',happ(s(fun('type.num.num','type.infer_t.infer_t'),'const.infer_t.Infer_Tuvar_0'),s('type.num.num',X2))),s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X1),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.apply_subst_2'(s('type.infer_t.infer_t',X3),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X4))))) = s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X1),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.pair.,_2'(s('type.infer.exc'('type.infer_t.infer_t',X0),'const.infer.Success_1'(s('type.infer_t.infer_t','const.infer_t.Infer_Tuvar_1'(s('type.num.num',X2))))),s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X1),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.apply_subst_2'(s('type.infer_t.infer_t',X3),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X4)))))) )),
  inference(forward_demodulation,[],[f13640,f171])).
fof(f13640,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X1),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.pair.,_2'(s('type.infer.exc'('type.infer_t.infer_t',X0),'const.infer.Success_1'(s('type.infer_t.infer_t','const.infer_t.Infer_Tuvar_1'(s('type.num.num',X2))))),s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X1),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.apply_subst_2'(s('type.infer_t.infer_t',X3),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X4))))) = s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X1),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.infer.st_ex_return_2'(s('type.infer_t.infer_t',happ(s(fun('type.num.num','type.infer_t.infer_t'),'const.infer_t.Infer_Tuvar_0'),s('type.num.num',X2))),s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X1),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),happ(s(fun('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X1),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.infer.apply_subst_1'(s('type.infer_t.infer_t',X3))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X4)))))) )),
  inference(unit_resulting_resolution,[],[f166,f171,f212])).
fof(f13887,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X1),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.infer.st_ex_return_2'(s('type.infer_t.infer_t','const.unify.t_walkstar_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X2),s('type.infer_t.infer_t',X3))),s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X1),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.apply_subst_2'(s('type.infer_t.infer_t',X4),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X5))))) = s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X1),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.pair.,_2'(s('type.infer.exc'('type.infer_t.infer_t',X0),'const.infer.Success_1'(s('type.infer_t.infer_t','const.unify.t_walkstar_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X2),s('type.infer_t.infer_t',X3))))),s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X1),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.apply_subst_2'(s('type.infer_t.infer_t',X4),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X5)))))) )),
  inference(forward_demodulation,[],[f13886,f176])).
fof(f13886,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X1),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.pair.,_2'(s('type.infer.exc'('type.infer_t.infer_t',X0),'const.infer.Success_1'(s('type.infer_t.infer_t','const.unify.t_walkstar_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X2),s('type.infer_t.infer_t',X3))))),s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X1),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.apply_subst_2'(s('type.infer_t.infer_t',X4),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X5))))) = s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X1),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.infer.st_ex_return_2'(s('type.infer_t.infer_t',happ(s(fun('type.infer_t.infer_t','type.infer_t.infer_t'),happ(s(fun('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),fun('type.infer_t.infer_t','type.infer_t.infer_t')),'const.unify.t_walkstar_0'),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X2))),s('type.infer_t.infer_t',X3))),s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X1),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.apply_subst_2'(s('type.infer_t.infer_t',X4),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X5)))))) )),
  inference(forward_demodulation,[],[f13641,f171])).
fof(f13641,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X1),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.pair.,_2'(s('type.infer.exc'('type.infer_t.infer_t',X0),'const.infer.Success_1'(s('type.infer_t.infer_t','const.unify.t_walkstar_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X2),s('type.infer_t.infer_t',X3))))),s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X1),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.apply_subst_2'(s('type.infer_t.infer_t',X4),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X5))))) = s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X1),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.infer.st_ex_return_2'(s('type.infer_t.infer_t',happ(s(fun('type.infer_t.infer_t','type.infer_t.infer_t'),happ(s(fun('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),fun('type.infer_t.infer_t','type.infer_t.infer_t')),'const.unify.t_walkstar_0'),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X2))),s('type.infer_t.infer_t',X3))),s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X1),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),happ(s(fun('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X1),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.infer.apply_subst_1'(s('type.infer_t.infer_t',X4))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X5)))))) )),
  inference(unit_resulting_resolution,[],[f176,f171,f212])).
fof(f13883,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X0),X2),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X3),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'(X0,X1),X0),'const.infer.read_1'(s(X0,X4))),s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X3),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.apply_subst_2'(s('type.infer_t.infer_t',X5),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X6))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X0),X2),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X3),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X0),X2),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'(X0,X1),X0),'const.infer.read_1'(s(X0,X4))))),s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X3),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.apply_subst_2'(s('type.infer_t.infer_t',X5),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X6)))))) )),
  inference(forward_demodulation,[],[f13882,f178])).
fof(f13882,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X0),X2),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X3),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X0),X2),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'(X0,X1),X0),'const.infer.read_1'(s(X0,X4))))),s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X3),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.apply_subst_2'(s('type.infer_t.infer_t',X5),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X6))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X0),X2),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X3),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'(X0,X1),X0),happ(s(fun(X0,'type.pair.prod'('type.infer.exc'(X0,X1),X0)),'const.infer.read_0'),s(X0,X4))),s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X3),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.apply_subst_2'(s('type.infer_t.infer_t',X5),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X6)))))) )),
  inference(forward_demodulation,[],[f13643,f171])).
fof(f13643,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X0),X2),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X3),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X0),X2),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'(X0,X1),X0),'const.infer.read_1'(s(X0,X4))))),s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X3),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.apply_subst_2'(s('type.infer_t.infer_t',X5),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X6))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X0),X2),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X3),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'(X0,X1),X0),happ(s(fun(X0,'type.pair.prod'('type.infer.exc'(X0,X1),X0)),'const.infer.read_0'),s(X0,X4))),s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X3),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),happ(s(fun('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X3),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.infer.apply_subst_1'(s('type.infer_t.infer_t',X5))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X6)))))) )),
  inference(unit_resulting_resolution,[],[f178,f171,f212])).
fof(f13879,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X4),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'(X0,X1),X2),'const.infer.st_ex_return_2'(s(X0,X5),s(X2,X6))),s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X4),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.apply_subst_2'(s('type.infer_t.infer_t',X7),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X8))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X4),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'(X0,X1),X2),'const.infer.st_ex_return_2'(s(X0,X5),s(X2,X6))))),s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X4),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.apply_subst_2'(s('type.infer_t.infer_t',X7),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X8)))))) )),
  inference(forward_demodulation,[],[f13878,f205])).
fof(f13878,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X4),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'(X0,X1),X2),'const.infer.st_ex_return_2'(s(X0,X5),s(X2,X6))))),s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X4),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.apply_subst_2'(s('type.infer_t.infer_t',X7),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X8))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X4),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'(X0,X1),X2),happ(s(fun(X2,'type.pair.prod'('type.infer.exc'(X0,X1),X2)),happ(s(fun(X0,fun(X2,'type.pair.prod'('type.infer.exc'(X0,X1),X2))),'const.infer.st_ex_return_0'),s(X0,X5))),s(X2,X6))),s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X4),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.apply_subst_2'(s('type.infer_t.infer_t',X7),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X8)))))) )),
  inference(forward_demodulation,[],[f13645,f171])).
fof(f13645,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X4),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'(X0,X1),X2),'const.infer.st_ex_return_2'(s(X0,X5),s(X2,X6))))),s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X4),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.apply_subst_2'(s('type.infer_t.infer_t',X7),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X8))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X4),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'(X0,X1),X2),happ(s(fun(X2,'type.pair.prod'('type.infer.exc'(X0,X1),X2)),happ(s(fun(X0,fun(X2,'type.pair.prod'('type.infer.exc'(X0,X1),X2))),'const.infer.st_ex_return_0'),s(X0,X5))),s(X2,X6))),s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X4),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),happ(s(fun('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X4),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.infer.apply_subst_1'(s('type.infer_t.infer_t',X7))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X8)))))) )),
  inference(unit_resulting_resolution,[],[f205,f171,f212])).
fof(f13873,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),X2),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X3),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),'const.infer.fresh_uvar_1'(s('type.infer.infer_st'(X1),X4))),s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X3),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.apply_subst_2'(s('type.infer_t.infer_t',X5),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X6))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),X2),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X3),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),X2),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),'const.infer.fresh_uvar_1'(s('type.infer.infer_st'(X1),X4))))),s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X3),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.apply_subst_2'(s('type.infer_t.infer_t',X5),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X6)))))) )),
  inference(forward_demodulation,[],[f13872,f179])).
fof(f13872,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),X2),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X3),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),X2),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),'const.infer.fresh_uvar_1'(s('type.infer.infer_st'(X1),X4))))),s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X3),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.apply_subst_2'(s('type.infer_t.infer_t',X5),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X6))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),X2),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X3),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),happ(s(fun('type.infer.infer_st'(X1),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1))),'const.infer.fresh_uvar_0'),s('type.infer.infer_st'(X1),X4))),s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X3),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.apply_subst_2'(s('type.infer_t.infer_t',X5),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X6)))))) )),
  inference(forward_demodulation,[],[f13650,f171])).
fof(f13650,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),X2),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X3),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),X2),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),'const.infer.fresh_uvar_1'(s('type.infer.infer_st'(X1),X4))))),s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X3),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.apply_subst_2'(s('type.infer_t.infer_t',X5),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X6))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),X2),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X3),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),happ(s(fun('type.infer.infer_st'(X1),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1))),'const.infer.fresh_uvar_0'),s('type.infer.infer_st'(X1),X4))),s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X3),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),happ(s(fun('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X3),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.infer.apply_subst_1'(s('type.infer_t.infer_t',X5))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X6)))))) )),
  inference(unit_resulting_resolution,[],[f179,f171,f212])).
fof(f13869,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X4),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'(X0,X1),X2),'const.infer.failwith_2'(s(X1,X5),s(X2,X6))),s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X4),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.apply_subst_2'(s('type.infer_t.infer_t',X7),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X8))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X4),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'(X0,X1),X2),'const.infer.failwith_2'(s(X1,X5),s(X2,X6))))),s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X4),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.apply_subst_2'(s('type.infer_t.infer_t',X7),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X8)))))) )),
  inference(forward_demodulation,[],[f13868,f204])).
fof(f13868,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X4),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'(X0,X1),X2),'const.infer.failwith_2'(s(X1,X5),s(X2,X6))))),s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X4),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.apply_subst_2'(s('type.infer_t.infer_t',X7),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X8))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X4),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'(X0,X1),X2),happ(s(fun(X2,'type.pair.prod'('type.infer.exc'(X0,X1),X2)),'const.infer.failwith_1'(s(X1,X5))),s(X2,X6))),s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X4),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.apply_subst_2'(s('type.infer_t.infer_t',X7),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X8)))))) )),
  inference(forward_demodulation,[],[f13652,f171])).
fof(f13652,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X4),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'(X0,X1),X2),'const.infer.failwith_2'(s(X1,X5),s(X2,X6))))),s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X4),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.apply_subst_2'(s('type.infer_t.infer_t',X7),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X8))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X4),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'(X0,X1),X2),happ(s(fun(X2,'type.pair.prod'('type.infer.exc'(X0,X1),X2)),'const.infer.failwith_1'(s(X1,X5))),s(X2,X6))),s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X4),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),happ(s(fun('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X4),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.infer.apply_subst_1'(s('type.infer_t.infer_t',X7))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X8)))))) )),
  inference(unit_resulting_resolution,[],[f204,f171,f212])).
fof(f13867,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),X2),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X3),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),'const.infer.guard_3'(s(bool,X4),s(X0,X5),s(X1,X6))),s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X3),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.apply_subst_2'(s('type.infer_t.infer_t',X7),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X8))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),X2),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X3),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),X2),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),'const.infer.guard_3'(s(bool,X4),s(X0,X5),s(X1,X6))))),s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X3),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.apply_subst_2'(s('type.infer_t.infer_t',X7),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X8)))))) )),
  inference(forward_demodulation,[],[f13866,f183])).
fof(f13866,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),X2),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X3),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),X2),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),'const.infer.guard_3'(s(bool,X4),s(X0,X5),s(X1,X6))))),s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X3),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.apply_subst_2'(s('type.infer_t.infer_t',X7),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X8))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),X2),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X3),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),happ(s(fun(X1,'type.pair.prod'('type.infer.exc'('type.one.one',X0),X1)),'const.infer.guard_2'(s(bool,X4),s(X0,X5))),s(X1,X6))),s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X3),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.apply_subst_2'(s('type.infer_t.infer_t',X7),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X8)))))) )),
  inference(forward_demodulation,[],[f13653,f171])).
fof(f13653,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),X2),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X3),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),X2),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),'const.infer.guard_3'(s(bool,X4),s(X0,X5),s(X1,X6))))),s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X3),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.apply_subst_2'(s('type.infer_t.infer_t',X7),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X8))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),X2),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X3),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),happ(s(fun(X1,'type.pair.prod'('type.infer.exc'('type.one.one',X0),X1)),'const.infer.guard_2'(s(bool,X4),s(X0,X5))),s(X1,X6))),s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X3),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),happ(s(fun('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X3),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.infer.apply_subst_1'(s('type.infer_t.infer_t',X7))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X8)))))) )),
  inference(unit_resulting_resolution,[],[f183,f171,f212])).
fof(f13863,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1,X9] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X1),X2),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.apply_subst_2'(s('type.infer_t.infer_t',X3),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X4))),s(X2,happ(s(fun(X6,X2),X7),s(X6,happ(s(fun(X5,X6),X8),s(X5,X9))))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X1),X2),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X1),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.apply_subst_2'(s('type.infer_t.infer_t',X3),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X4))))),s(X2,happ(s(fun(X5,X2),'_dst_x0x1_2'(s(fun(X6,X2),X7),s(fun(X5,X6),X8))),s(X5,X9)))))) )),
  inference(forward_demodulation,[],[f13655,f171])).
fof(f13655,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1,X9] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X1),X2),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X1),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.apply_subst_2'(s('type.infer_t.infer_t',X3),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X4))))),s(X2,happ(s(fun(X5,X2),'_dst_x0x1_2'(s(fun(X6,X2),X7),s(fun(X5,X6),X8))),s(X5,X9))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X1),X2),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),happ(s(fun('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.infer.apply_subst_1'(s('type.infer_t.infer_t',X3))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X4))),s(X2,happ(s(fun(X6,X2),X7),s(X6,happ(s(fun(X5,X6),X8),s(X5,X9)))))))) )),
  inference(unit_resulting_resolution,[],[f206,f171,f212])).
fof(f13816,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X1),X2),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.apply_subst_2'(s('type.infer_t.infer_t',X3),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X4))),s(X2,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(X2),X5))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X1),X2),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X1),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.apply_subst_2'(s('type.infer_t.infer_t',X3),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X4))))),s(X2,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(X2),X5)))))) )),
  inference(forward_demodulation,[],[f13815,f171])).
fof(f13815,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X1),X2),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X1),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.apply_subst_2'(s('type.infer_t.infer_t',X3),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X4))))),s(X2,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(X2),X5))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X1),X2),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),happ(s(fun('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.infer.apply_subst_1'(s('type.infer_t.infer_t',X3))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X4))),s(X2,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(X2),X5)))))) )),
  inference(forward_demodulation,[],[f13686,f168])).
fof(f13686,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X1),X2),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X1),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.apply_subst_2'(s('type.infer_t.infer_t',X3),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X4))))),s(X2,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(X2),X5))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X1),X2),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),happ(s(fun('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.infer.apply_subst_1'(s('type.infer_t.infer_t',X3))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X4))),s(X2,happ(s(fun('type.infer.infer_st'(X2),X2),'const.infer.infer_st_subst_0'),s('type.infer.infer_st'(X2),X5)))))) )),
  inference(unit_resulting_resolution,[],[f168,f171,f212])).
fof(f13814,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1,X9] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X1),X2),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.apply_subst_2'(s('type.infer_t.infer_t',X3),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X4))),s(X2,happ(s(fun(X7,X2),'_dst_x0x1_2'(s(fun(X5,X2),X6),s(fun(X7,X5),X8))),s(X7,X9))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X1),X2),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X1),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.apply_subst_2'(s('type.infer_t.infer_t',X3),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X4))))),s(X2,happ(s(fun(X5,X2),X6),s(X5,happ(s(fun(X7,X5),X8),s(X7,X9)))))))) )),
  inference(forward_demodulation,[],[f13687,f171])).
fof(f13687,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1,X9] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X1),X2),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X1),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.apply_subst_2'(s('type.infer_t.infer_t',X3),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X4))))),s(X2,happ(s(fun(X5,X2),X6),s(X5,happ(s(fun(X7,X5),X8),s(X7,X9))))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X1),X2),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),happ(s(fun('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.infer.apply_subst_1'(s('type.infer_t.infer_t',X3))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X4))),s(X2,happ(s(fun(X7,X2),'_dst_x0x1_2'(s(fun(X5,X2),X6),s(fun(X7,X5),X8))),s(X7,X9)))))) )),
  inference(unit_resulting_resolution,[],[f206,f171,f212])).
fof(f13809,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X1),fun(X2,'type.one.one')),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.apply_subst_2'(s('type.infer_t.infer_t',X3),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X4))),s(fun(X2,'type.one.one'),X6))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X1),fun(X2,'type.one.one')),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X1),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.apply_subst_2'(s('type.infer_t.infer_t',X3),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X4))))),s(fun(X2,'type.one.one'),X5)))) )),
  inference(forward_demodulation,[],[f13690,f171])).
fof(f13690,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X1),fun(X2,'type.one.one')),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X1),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.apply_subst_2'(s('type.infer_t.infer_t',X3),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X4))))),s(fun(X2,'type.one.one'),X5))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X1),fun(X2,'type.one.one')),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),happ(s(fun('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.infer.apply_subst_1'(s('type.infer_t.infer_t',X3))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X4))),s(fun(X2,'type.one.one'),X6)))) )),
  inference(unit_resulting_resolution,[],[f605,f171,f212])).
fof(f13807,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X1),fun(X2,fun(X3,'type.one.one'))),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.apply_subst_2'(s('type.infer_t.infer_t',X4),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X5))),s(fun(X2,fun(X3,'type.one.one')),X7))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X1),fun(X2,fun(X3,'type.one.one'))),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X1),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.apply_subst_2'(s('type.infer_t.infer_t',X4),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X5))))),s(fun(X2,fun(X3,'type.one.one')),X6)))) )),
  inference(forward_demodulation,[],[f13692,f171])).
fof(f13692,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X1),fun(X2,fun(X3,'type.one.one'))),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X1),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.apply_subst_2'(s('type.infer_t.infer_t',X4),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X5))))),s(fun(X2,fun(X3,'type.one.one')),X6))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X1),fun(X2,fun(X3,'type.one.one'))),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),happ(s(fun('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.infer.apply_subst_1'(s('type.infer_t.infer_t',X4))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X5))),s(fun(X2,fun(X3,'type.one.one')),X7)))) )),
  inference(unit_resulting_resolution,[],[f724,f171,f212])).
fof(f13806,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X1),fun(X2,fun(X3,fun(X4,'type.one.one')))),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.apply_subst_2'(s('type.infer_t.infer_t',X5),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X6))),s(fun(X2,fun(X3,fun(X4,'type.one.one'))),X8))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X1),fun(X2,fun(X3,fun(X4,'type.one.one')))),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X1),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.apply_subst_2'(s('type.infer_t.infer_t',X5),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X6))))),s(fun(X2,fun(X3,fun(X4,'type.one.one'))),X7)))) )),
  inference(forward_demodulation,[],[f13693,f171])).
fof(f13693,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X1),fun(X2,fun(X3,fun(X4,'type.one.one')))),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X1),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.apply_subst_2'(s('type.infer_t.infer_t',X5),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X6))))),s(fun(X2,fun(X3,fun(X4,'type.one.one'))),X7))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X1),fun(X2,fun(X3,fun(X4,'type.one.one')))),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),happ(s(fun('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.infer.apply_subst_1'(s('type.infer_t.infer_t',X5))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X6))),s(fun(X2,fun(X3,fun(X4,'type.one.one'))),X8)))) )),
  inference(unit_resulting_resolution,[],[f752,f171,f212])).
fof(f13805,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1,X9] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X1),fun(X2,fun(X3,fun(X4,fun(X5,'type.one.one'))))),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.apply_subst_2'(s('type.infer_t.infer_t',X6),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X7))),s(fun(X2,fun(X3,fun(X4,fun(X5,'type.one.one')))),X9))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X1),fun(X2,fun(X3,fun(X4,fun(X5,'type.one.one'))))),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X1),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.apply_subst_2'(s('type.infer_t.infer_t',X6),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X7))))),s(fun(X2,fun(X3,fun(X4,fun(X5,'type.one.one')))),X8)))) )),
  inference(forward_demodulation,[],[f13694,f171])).
fof(f13694,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1,X9] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X1),fun(X2,fun(X3,fun(X4,fun(X5,'type.one.one'))))),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X1),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.apply_subst_2'(s('type.infer_t.infer_t',X6),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X7))))),s(fun(X2,fun(X3,fun(X4,fun(X5,'type.one.one')))),X8))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X1),fun(X2,fun(X3,fun(X4,fun(X5,'type.one.one'))))),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),happ(s(fun('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.infer.apply_subst_1'(s('type.infer_t.infer_t',X6))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X7))),s(fun(X2,fun(X3,fun(X4,fun(X5,'type.one.one')))),X9)))) )),
  inference(unit_resulting_resolution,[],[f787,f171,f212])).
fof(f13804,plain,(
  ( ! [X6,X4,X2,X0,X10,X8,X7,X5,X3,X1,X9] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X1),fun(X2,fun(X3,fun(X4,fun(X5,fun(X6,'type.one.one')))))),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.apply_subst_2'(s('type.infer_t.infer_t',X7),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X8))),s(fun(X2,fun(X3,fun(X4,fun(X5,fun(X6,'type.one.one'))))),X10))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X1),fun(X2,fun(X3,fun(X4,fun(X5,fun(X6,'type.one.one')))))),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X1),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.apply_subst_2'(s('type.infer_t.infer_t',X7),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X8))))),s(fun(X2,fun(X3,fun(X4,fun(X5,fun(X6,'type.one.one'))))),X9)))) )),
  inference(forward_demodulation,[],[f13695,f171])).
fof(f13695,plain,(
  ( ! [X6,X4,X2,X0,X10,X8,X7,X5,X3,X1,X9] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X1),fun(X2,fun(X3,fun(X4,fun(X5,fun(X6,'type.one.one')))))),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X1),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.apply_subst_2'(s('type.infer_t.infer_t',X7),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X8))))),s(fun(X2,fun(X3,fun(X4,fun(X5,fun(X6,'type.one.one'))))),X9))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X1),fun(X2,fun(X3,fun(X4,fun(X5,fun(X6,'type.one.one')))))),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),happ(s(fun('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.infer.apply_subst_1'(s('type.infer_t.infer_t',X7))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X8))),s(fun(X2,fun(X3,fun(X4,fun(X5,fun(X6,'type.one.one'))))),X10)))) )),
  inference(unit_resulting_resolution,[],[f815,f171,f212])).
fof(f13800,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X1),'type.one.one'),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.apply_subst_2'(s('type.infer_t.infer_t',X2),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X3))),s('type.one.one',X5))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X1),'type.one.one'),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X1),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.apply_subst_2'(s('type.infer_t.infer_t',X2),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X3))))),s('type.one.one',X4)))) )),
  inference(forward_demodulation,[],[f13699,f171])).
fof(f13699,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X1),'type.one.one'),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X1),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.apply_subst_2'(s('type.infer_t.infer_t',X2),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X3))))),s('type.one.one',X4))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X1),'type.one.one'),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),happ(s(fun('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.infer.apply_subst_1'(s('type.infer_t.infer_t',X2))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X3))),s('type.one.one',X5)))) )),
  inference(unit_resulting_resolution,[],[f258,f171,f212])).
fof(f13799,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X1),'type.list.list'(X2)),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.apply_subst_2'(s('type.infer_t.infer_t',X3),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X4))),s('type.list.list'(X2),'const.list.MAP_2'(s(fun(X5,X2),X6),s('type.list.list'(X5),X7))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X1),'type.list.list'(X2)),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X1),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.apply_subst_2'(s('type.infer_t.infer_t',X3),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X4))))),s('type.list.list'(X2),'const.list.MAP_2'(s(fun(X5,X2),X6),s('type.list.list'(X5),X7)))))) )),
  inference(forward_demodulation,[],[f13798,f171])).
fof(f13798,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X1),'type.list.list'(X2)),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X1),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.apply_subst_2'(s('type.infer_t.infer_t',X3),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X4))))),s('type.list.list'(X2),'const.list.MAP_2'(s(fun(X5,X2),X6),s('type.list.list'(X5),X7))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X1),'type.list.list'(X2)),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),happ(s(fun('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.infer.apply_subst_1'(s('type.infer_t.infer_t',X3))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X4))),s('type.list.list'(X2),'const.list.MAP_2'(s(fun(X5,X2),X6),s('type.list.list'(X5),X7)))))) )),
  inference(forward_demodulation,[],[f13700,f180])).
fof(f13700,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X1),'type.list.list'(X2)),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X1),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.apply_subst_2'(s('type.infer_t.infer_t',X3),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X4))))),s('type.list.list'(X2),'const.list.MAP_2'(s(fun(X5,X2),X6),s('type.list.list'(X5),X7))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X1),'type.list.list'(X2)),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),happ(s(fun('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.infer.apply_subst_1'(s('type.infer_t.infer_t',X3))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X4))),s('type.list.list'(X2),happ(s(fun('type.list.list'(X5),'type.list.list'(X2)),happ(s(fun(fun(X5,X2),fun('type.list.list'(X5),'type.list.list'(X2))),'const.list.MAP_0'),s(fun(X5,X2),X6))),s('type.list.list'(X5),X7)))))) )),
  inference(unit_resulting_resolution,[],[f180,f171,f212])).
fof(f13793,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X1),'type.num.num'),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.apply_subst_2'(s('type.infer_t.infer_t',X2),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X3))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X4),s('type.num.num',X5))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X1),'type.num.num'),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X1),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.apply_subst_2'(s('type.infer_t.infer_t',X2),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X3))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X4),s('type.num.num',X5)))))) )),
  inference(forward_demodulation,[],[f13792,f171])).
fof(f13792,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X1),'type.num.num'),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X1),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.apply_subst_2'(s('type.infer_t.infer_t',X2),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X3))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X4),s('type.num.num',X5))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X1),'type.num.num'),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),happ(s(fun('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.infer.apply_subst_1'(s('type.infer_t.infer_t',X2))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X3))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X4),s('type.num.num',X5)))))) )),
  inference(forward_demodulation,[],[f13703,f175])).
fof(f13703,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X1),'type.num.num'),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X1),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.apply_subst_2'(s('type.infer_t.infer_t',X2),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X3))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X4),s('type.num.num',X5))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X1),'type.num.num'),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),happ(s(fun('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.infer.apply_subst_1'(s('type.infer_t.infer_t',X2))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X3))),s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.arithmetic.+_1'(s('type.num.num',X4))),s('type.num.num',X5)))))) )),
  inference(unit_resulting_resolution,[],[f175,f171,f212])).
fof(f13791,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X1),'type.infer_t.infer_t'),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.apply_subst_2'(s('type.infer_t.infer_t',X2),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X3))),s('type.infer_t.infer_t','const.infer_t.Infer_Tuvar_1'(s('type.num.num',X4))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X1),'type.infer_t.infer_t'),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X1),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.apply_subst_2'(s('type.infer_t.infer_t',X2),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X3))))),s('type.infer_t.infer_t','const.infer_t.Infer_Tuvar_1'(s('type.num.num',X4)))))) )),
  inference(forward_demodulation,[],[f13790,f171])).
fof(f13790,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X1),'type.infer_t.infer_t'),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X1),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.apply_subst_2'(s('type.infer_t.infer_t',X2),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X3))))),s('type.infer_t.infer_t','const.infer_t.Infer_Tuvar_1'(s('type.num.num',X4))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X1),'type.infer_t.infer_t'),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),happ(s(fun('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.infer.apply_subst_1'(s('type.infer_t.infer_t',X2))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X3))),s('type.infer_t.infer_t','const.infer_t.Infer_Tuvar_1'(s('type.num.num',X4)))))) )),
  inference(forward_demodulation,[],[f13704,f166])).
fof(f13704,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X1),'type.infer_t.infer_t'),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X1),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.apply_subst_2'(s('type.infer_t.infer_t',X2),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X3))))),s('type.infer_t.infer_t','const.infer_t.Infer_Tuvar_1'(s('type.num.num',X4))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X1),'type.infer_t.infer_t'),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),happ(s(fun('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.infer.apply_subst_1'(s('type.infer_t.infer_t',X2))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X3))),s('type.infer_t.infer_t',happ(s(fun('type.num.num','type.infer_t.infer_t'),'const.infer_t.Infer_Tuvar_0'),s('type.num.num',X4)))))) )),
  inference(unit_resulting_resolution,[],[f166,f171,f212])).
fof(f13789,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X1),'type.infer_t.infer_t'),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.apply_subst_2'(s('type.infer_t.infer_t',X2),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X3))),s('type.infer_t.infer_t','const.unify.t_walkstar_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X4),s('type.infer_t.infer_t',X5))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X1),'type.infer_t.infer_t'),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X1),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.apply_subst_2'(s('type.infer_t.infer_t',X2),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X3))))),s('type.infer_t.infer_t','const.unify.t_walkstar_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X4),s('type.infer_t.infer_t',X5)))))) )),
  inference(forward_demodulation,[],[f13788,f171])).
fof(f13788,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X1),'type.infer_t.infer_t'),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X1),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.apply_subst_2'(s('type.infer_t.infer_t',X2),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X3))))),s('type.infer_t.infer_t','const.unify.t_walkstar_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X4),s('type.infer_t.infer_t',X5))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X1),'type.infer_t.infer_t'),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),happ(s(fun('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.infer.apply_subst_1'(s('type.infer_t.infer_t',X2))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X3))),s('type.infer_t.infer_t','const.unify.t_walkstar_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X4),s('type.infer_t.infer_t',X5)))))) )),
  inference(forward_demodulation,[],[f13705,f176])).
fof(f13705,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X1),'type.infer_t.infer_t'),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X1),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.apply_subst_2'(s('type.infer_t.infer_t',X2),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X3))))),s('type.infer_t.infer_t','const.unify.t_walkstar_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X4),s('type.infer_t.infer_t',X5))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X1),'type.infer_t.infer_t'),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),happ(s(fun('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.infer.apply_subst_1'(s('type.infer_t.infer_t',X2))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X3))),s('type.infer_t.infer_t',happ(s(fun('type.infer_t.infer_t','type.infer_t.infer_t'),happ(s(fun('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),fun('type.infer_t.infer_t','type.infer_t.infer_t')),'const.unify.t_walkstar_0'),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X4))),s('type.infer_t.infer_t',X5)))))) )),
  inference(unit_resulting_resolution,[],[f176,f171,f212])).
fof(f13785,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X1),'type.pair.prod'('type.infer.exc'(X2,X3),X2)),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.apply_subst_2'(s('type.infer_t.infer_t',X4),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X5))),s('type.pair.prod'('type.infer.exc'(X2,X3),X2),'const.infer.read_1'(s(X2,X6))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X1),'type.pair.prod'('type.infer.exc'(X2,X3),X2)),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X1),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.apply_subst_2'(s('type.infer_t.infer_t',X4),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X5))))),s('type.pair.prod'('type.infer.exc'(X2,X3),X2),'const.infer.read_1'(s(X2,X6)))))) )),
  inference(forward_demodulation,[],[f13784,f171])).
fof(f13784,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X1),'type.pair.prod'('type.infer.exc'(X2,X3),X2)),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X1),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.apply_subst_2'(s('type.infer_t.infer_t',X4),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X5))))),s('type.pair.prod'('type.infer.exc'(X2,X3),X2),'const.infer.read_1'(s(X2,X6))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X1),'type.pair.prod'('type.infer.exc'(X2,X3),X2)),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),happ(s(fun('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.infer.apply_subst_1'(s('type.infer_t.infer_t',X4))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X5))),s('type.pair.prod'('type.infer.exc'(X2,X3),X2),'const.infer.read_1'(s(X2,X6)))))) )),
  inference(forward_demodulation,[],[f13707,f178])).
fof(f13707,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X1),'type.pair.prod'('type.infer.exc'(X2,X3),X2)),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X1),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.apply_subst_2'(s('type.infer_t.infer_t',X4),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X5))))),s('type.pair.prod'('type.infer.exc'(X2,X3),X2),'const.infer.read_1'(s(X2,X6))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X1),'type.pair.prod'('type.infer.exc'(X2,X3),X2)),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),happ(s(fun('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.infer.apply_subst_1'(s('type.infer_t.infer_t',X4))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X5))),s('type.pair.prod'('type.infer.exc'(X2,X3),X2),happ(s(fun(X2,'type.pair.prod'('type.infer.exc'(X2,X3),X2)),'const.infer.read_0'),s(X2,X6)))))) )),
  inference(unit_resulting_resolution,[],[f178,f171,f212])).
fof(f13781,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X1),'type.pair.prod'('type.infer.exc'(X2,X3),X4)),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.apply_subst_2'(s('type.infer_t.infer_t',X5),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X6))),s('type.pair.prod'('type.infer.exc'(X2,X3),X4),'const.infer.st_ex_return_2'(s(X2,X7),s(X4,X8))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X1),'type.pair.prod'('type.infer.exc'(X2,X3),X4)),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X1),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.apply_subst_2'(s('type.infer_t.infer_t',X5),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X6))))),s('type.pair.prod'('type.infer.exc'(X2,X3),X4),'const.infer.st_ex_return_2'(s(X2,X7),s(X4,X8)))))) )),
  inference(forward_demodulation,[],[f13780,f171])).
fof(f13780,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X1),'type.pair.prod'('type.infer.exc'(X2,X3),X4)),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X1),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.apply_subst_2'(s('type.infer_t.infer_t',X5),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X6))))),s('type.pair.prod'('type.infer.exc'(X2,X3),X4),'const.infer.st_ex_return_2'(s(X2,X7),s(X4,X8))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X1),'type.pair.prod'('type.infer.exc'(X2,X3),X4)),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),happ(s(fun('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.infer.apply_subst_1'(s('type.infer_t.infer_t',X5))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X6))),s('type.pair.prod'('type.infer.exc'(X2,X3),X4),'const.infer.st_ex_return_2'(s(X2,X7),s(X4,X8)))))) )),
  inference(forward_demodulation,[],[f13709,f205])).
fof(f13709,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X1),'type.pair.prod'('type.infer.exc'(X2,X3),X4)),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X1),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.apply_subst_2'(s('type.infer_t.infer_t',X5),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X6))))),s('type.pair.prod'('type.infer.exc'(X2,X3),X4),'const.infer.st_ex_return_2'(s(X2,X7),s(X4,X8))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X1),'type.pair.prod'('type.infer.exc'(X2,X3),X4)),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),happ(s(fun('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.infer.apply_subst_1'(s('type.infer_t.infer_t',X5))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X6))),s('type.pair.prod'('type.infer.exc'(X2,X3),X4),happ(s(fun(X4,'type.pair.prod'('type.infer.exc'(X2,X3),X4)),happ(s(fun(X2,fun(X4,'type.pair.prod'('type.infer.exc'(X2,X3),X4))),'const.infer.st_ex_return_0'),s(X2,X7))),s(X4,X8)))))) )),
  inference(unit_resulting_resolution,[],[f205,f171,f212])).
fof(f13775,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X1),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X2),'type.infer.infer_st'(X3))),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.apply_subst_2'(s('type.infer_t.infer_t',X4),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X5))),s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X2),'type.infer.infer_st'(X3)),'const.infer.fresh_uvar_1'(s('type.infer.infer_st'(X3),X6))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X1),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X2),'type.infer.infer_st'(X3))),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X1),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.apply_subst_2'(s('type.infer_t.infer_t',X4),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X5))))),s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X2),'type.infer.infer_st'(X3)),'const.infer.fresh_uvar_1'(s('type.infer.infer_st'(X3),X6)))))) )),
  inference(forward_demodulation,[],[f13774,f171])).
fof(f13774,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X1),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X2),'type.infer.infer_st'(X3))),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X1),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.apply_subst_2'(s('type.infer_t.infer_t',X4),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X5))))),s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X2),'type.infer.infer_st'(X3)),'const.infer.fresh_uvar_1'(s('type.infer.infer_st'(X3),X6))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X1),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X2),'type.infer.infer_st'(X3))),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),happ(s(fun('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.infer.apply_subst_1'(s('type.infer_t.infer_t',X4))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X5))),s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X2),'type.infer.infer_st'(X3)),'const.infer.fresh_uvar_1'(s('type.infer.infer_st'(X3),X6)))))) )),
  inference(forward_demodulation,[],[f13714,f179])).
fof(f13714,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X1),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X2),'type.infer.infer_st'(X3))),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X1),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.apply_subst_2'(s('type.infer_t.infer_t',X4),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X5))))),s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X2),'type.infer.infer_st'(X3)),'const.infer.fresh_uvar_1'(s('type.infer.infer_st'(X3),X6))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X1),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X2),'type.infer.infer_st'(X3))),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),happ(s(fun('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.infer.apply_subst_1'(s('type.infer_t.infer_t',X4))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X5))),s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X2),'type.infer.infer_st'(X3)),happ(s(fun('type.infer.infer_st'(X3),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X2),'type.infer.infer_st'(X3))),'const.infer.fresh_uvar_0'),s('type.infer.infer_st'(X3),X6)))))) )),
  inference(unit_resulting_resolution,[],[f179,f171,f212])).
fof(f13773,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X1),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X2),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.apply_subst_2'(s('type.infer_t.infer_t',X3),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X4))),s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X2),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.apply_subst_2'(s('type.infer_t.infer_t',X5),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X6))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X1),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X2),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X1),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.apply_subst_2'(s('type.infer_t.infer_t',X3),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X4))))),s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X2),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.apply_subst_2'(s('type.infer_t.infer_t',X5),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X6)))))) )),
  inference(forward_demodulation,[],[f13772,f171])).
fof(f13772,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X1),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X2),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X1),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.apply_subst_2'(s('type.infer_t.infer_t',X3),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X4))))),s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X2),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.apply_subst_2'(s('type.infer_t.infer_t',X5),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X6))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X1),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X2),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),happ(s(fun('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.infer.apply_subst_1'(s('type.infer_t.infer_t',X3))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X4))),s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X2),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.apply_subst_2'(s('type.infer_t.infer_t',X5),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X6)))))) )),
  inference(forward_demodulation,[],[f13715,f171])).
fof(f13715,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X1),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X2),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X1),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.apply_subst_2'(s('type.infer_t.infer_t',X3),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X4))))),s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X2),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.apply_subst_2'(s('type.infer_t.infer_t',X5),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X6))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X1),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X2),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),happ(s(fun('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.infer.apply_subst_1'(s('type.infer_t.infer_t',X3))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X4))),s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X2),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),happ(s(fun('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X2),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.infer.apply_subst_1'(s('type.infer_t.infer_t',X5))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X6)))))) )),
  inference(unit_resulting_resolution,[],[f171,f171,f212])).
fof(f13771,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X1),'type.pair.prod'('type.infer.exc'(X2,X3),X4)),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.apply_subst_2'(s('type.infer_t.infer_t',X5),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X6))),s('type.pair.prod'('type.infer.exc'(X2,X3),X4),'const.infer.failwith_2'(s(X3,X7),s(X4,X8))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X1),'type.pair.prod'('type.infer.exc'(X2,X3),X4)),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X1),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.apply_subst_2'(s('type.infer_t.infer_t',X5),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X6))))),s('type.pair.prod'('type.infer.exc'(X2,X3),X4),'const.infer.failwith_2'(s(X3,X7),s(X4,X8)))))) )),
  inference(forward_demodulation,[],[f13770,f171])).
fof(f13770,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X1),'type.pair.prod'('type.infer.exc'(X2,X3),X4)),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X1),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.apply_subst_2'(s('type.infer_t.infer_t',X5),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X6))))),s('type.pair.prod'('type.infer.exc'(X2,X3),X4),'const.infer.failwith_2'(s(X3,X7),s(X4,X8))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X1),'type.pair.prod'('type.infer.exc'(X2,X3),X4)),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),happ(s(fun('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.infer.apply_subst_1'(s('type.infer_t.infer_t',X5))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X6))),s('type.pair.prod'('type.infer.exc'(X2,X3),X4),'const.infer.failwith_2'(s(X3,X7),s(X4,X8)))))) )),
  inference(forward_demodulation,[],[f13716,f204])).
fof(f13716,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X1),'type.pair.prod'('type.infer.exc'(X2,X3),X4)),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X1),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.apply_subst_2'(s('type.infer_t.infer_t',X5),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X6))))),s('type.pair.prod'('type.infer.exc'(X2,X3),X4),'const.infer.failwith_2'(s(X3,X7),s(X4,X8))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X1),'type.pair.prod'('type.infer.exc'(X2,X3),X4)),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),happ(s(fun('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.infer.apply_subst_1'(s('type.infer_t.infer_t',X5))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X6))),s('type.pair.prod'('type.infer.exc'(X2,X3),X4),happ(s(fun(X4,'type.pair.prod'('type.infer.exc'(X2,X3),X4)),'const.infer.failwith_1'(s(X3,X7))),s(X4,X8)))))) )),
  inference(unit_resulting_resolution,[],[f204,f171,f212])).
fof(f13769,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X1),'type.pair.prod'('type.infer.exc'('type.one.one',X2),X3)),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.apply_subst_2'(s('type.infer_t.infer_t',X4),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X5))),s('type.pair.prod'('type.infer.exc'('type.one.one',X2),X3),'const.infer.guard_3'(s(bool,X6),s(X2,X7),s(X3,X8))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X1),'type.pair.prod'('type.infer.exc'('type.one.one',X2),X3)),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X1),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.apply_subst_2'(s('type.infer_t.infer_t',X4),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X5))))),s('type.pair.prod'('type.infer.exc'('type.one.one',X2),X3),'const.infer.guard_3'(s(bool,X6),s(X2,X7),s(X3,X8)))))) )),
  inference(forward_demodulation,[],[f13768,f171])).
fof(f13768,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X1),'type.pair.prod'('type.infer.exc'('type.one.one',X2),X3)),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X1),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.apply_subst_2'(s('type.infer_t.infer_t',X4),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X5))))),s('type.pair.prod'('type.infer.exc'('type.one.one',X2),X3),'const.infer.guard_3'(s(bool,X6),s(X2,X7),s(X3,X8))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X1),'type.pair.prod'('type.infer.exc'('type.one.one',X2),X3)),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),happ(s(fun('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.infer.apply_subst_1'(s('type.infer_t.infer_t',X4))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X5))),s('type.pair.prod'('type.infer.exc'('type.one.one',X2),X3),'const.infer.guard_3'(s(bool,X6),s(X2,X7),s(X3,X8)))))) )),
  inference(forward_demodulation,[],[f13717,f183])).
fof(f13717,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X1),'type.pair.prod'('type.infer.exc'('type.one.one',X2),X3)),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X1),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.apply_subst_2'(s('type.infer_t.infer_t',X4),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X5))))),s('type.pair.prod'('type.infer.exc'('type.one.one',X2),X3),'const.infer.guard_3'(s(bool,X6),s(X2,X7),s(X3,X8))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),X1),'type.pair.prod'('type.infer.exc'('type.one.one',X2),X3)),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),happ(s(fun('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.infer.apply_subst_1'(s('type.infer_t.infer_t',X4))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X5))),s('type.pair.prod'('type.infer.exc'('type.one.one',X2),X3),happ(s(fun(X3,'type.pair.prod'('type.infer.exc'('type.one.one',X2),X3)),'const.infer.guard_2'(s(bool,X6),s(X2,X7))),s(X3,X8)))))) )),
  inference(unit_resulting_resolution,[],[f183,f171,f212])).
fof(f12841,plain,(
  ( ! [X520,X522,X516,X518,X514,X521,X523,X517,X519,X515] : (s('type.pair.prod'('type.infer.exc'(X517,'type.list.list'('type.string.char')),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X514),'type.infer.infer_st'(X515))),'const.pair.,_2'(s('type.infer.exc'(X517,'type.list.list'('type.string.char')),'const.infer.Success_1'(s(X517,X518))),s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X514),'type.infer.infer_st'(X515)),X519))) != s('type.pair.prod'('type.infer.exc'(X517,'type.list.list'('type.string.char')),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X514),'type.infer.infer_st'(X515))),'const.infer.flookup_st_ex_4'(s(fun(X520,'type.list.list'('type.string.char')),X521),s(X520,X522),s('type.finite_map.fmap'(X520,X517),X523),s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X514),'type.infer.infer_st'(X515)),'const.infer.fresh_uvar_1'(s('type.infer.infer_st'(X515),X516))))) | s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X514),'type.infer.infer_st'(X515)),X519) = s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X514),'type.infer.infer_st'(X515)),happ(s(fun('type.infer.infer_st'(X515),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X514),'type.infer.infer_st'(X515))),'const.infer.fresh_uvar_0'),s('type.infer.infer_st'(X515),X516)))) )),
  inference(superposition,[],[f214,f179])).
fof(f12838,plain,(
  ( ! [X484,X486,X482,X492,X488,X490,X485,X487,X483,X493,X489,X491] : (s('type.pair.prod'('type.infer.exc'(X487,'type.list.list'('type.string.char')),'type.pair.prod'('type.infer.exc'('type.one.one',X482),X483)),'const.pair.,_2'(s('type.infer.exc'(X487,'type.list.list'('type.string.char')),'const.infer.Success_1'(s(X487,X488))),s('type.pair.prod'('type.infer.exc'('type.one.one',X482),X483),X489))) != s('type.pair.prod'('type.infer.exc'(X487,'type.list.list'('type.string.char')),'type.pair.prod'('type.infer.exc'('type.one.one',X482),X483)),'const.infer.flookup_st_ex_4'(s(fun(X490,'type.list.list'('type.string.char')),X491),s(X490,X492),s('type.finite_map.fmap'(X490,X487),X493),s('type.pair.prod'('type.infer.exc'('type.one.one',X482),X483),'const.infer.guard_3'(s(bool,X484),s(X482,X485),s(X483,X486))))) | s('type.pair.prod'('type.infer.exc'('type.one.one',X482),X483),X489) = s('type.pair.prod'('type.infer.exc'('type.one.one',X482),X483),happ(s(fun(X483,'type.pair.prod'('type.infer.exc'('type.one.one',X482),X483)),'const.infer.guard_2'(s(bool,X484),s(X482,X485))),s(X483,X486)))) )),
  inference(superposition,[],[f214,f183])).
fof(f12832,plain,(
  ( ! [X422,X428,X430,X424,X426,X432,X423,X429,X431,X425,X427,X433] : (s('type.pair.prod'('type.infer.exc'(X427,'type.list.list'('type.string.char')),'type.pair.prod'('type.infer.exc'(X422,X423),X424)),'const.pair.,_2'(s('type.infer.exc'(X427,'type.list.list'('type.string.char')),'const.infer.Success_1'(s(X427,X428))),s('type.pair.prod'('type.infer.exc'(X422,X423),X424),X429))) != s('type.pair.prod'('type.infer.exc'(X427,'type.list.list'('type.string.char')),'type.pair.prod'('type.infer.exc'(X422,X423),X424)),'const.infer.flookup_st_ex_4'(s(fun(X430,'type.list.list'('type.string.char')),X431),s(X430,X432),s('type.finite_map.fmap'(X430,X427),X433),s('type.pair.prod'('type.infer.exc'(X422,X423),X424),'const.infer.st_ex_return_2'(s(X422,X425),s(X424,X426))))) | s('type.pair.prod'('type.infer.exc'(X422,X423),X424),X429) = s('type.pair.prod'('type.infer.exc'(X422,X423),X424),happ(s(fun(X424,'type.pair.prod'('type.infer.exc'(X422,X423),X424)),happ(s(fun(X422,fun(X424,'type.pair.prod'('type.infer.exc'(X422,X423),X424))),'const.infer.st_ex_return_0'),s(X422,X425))),s(X424,X426)))) )),
  inference(superposition,[],[f214,f205])).
fof(f12831,plain,(
  ( ! [X412,X414,X410,X420,X416,X418,X413,X415,X411,X421,X417,X419] : (s('type.pair.prod'('type.infer.exc'(X415,'type.list.list'('type.string.char')),'type.pair.prod'('type.infer.exc'(X410,X411),X412)),'const.pair.,_2'(s('type.infer.exc'(X415,'type.list.list'('type.string.char')),'const.infer.Success_1'(s(X415,X416))),s('type.pair.prod'('type.infer.exc'(X410,X411),X412),X417))) != s('type.pair.prod'('type.infer.exc'(X415,'type.list.list'('type.string.char')),'type.pair.prod'('type.infer.exc'(X410,X411),X412)),'const.infer.flookup_st_ex_4'(s(fun(X418,'type.list.list'('type.string.char')),X419),s(X418,X420),s('type.finite_map.fmap'(X418,X415),X421),s('type.pair.prod'('type.infer.exc'(X410,X411),X412),'const.infer.failwith_2'(s(X411,X413),s(X412,X414))))) | s('type.pair.prod'('type.infer.exc'(X410,X411),X412),X417) = s('type.pair.prod'('type.infer.exc'(X410,X411),X412),happ(s(fun(X412,'type.pair.prod'('type.infer.exc'(X410,X411),X412)),'const.infer.failwith_1'(s(X411,X413))),s(X412,X414)))) )),
  inference(superposition,[],[f214,f204])).
fof(f12830,plain,(
  ( ! [X408,X405,X407,X401,X403,X409,X404,X406,X400,X402] : (s('type.pair.prod'('type.infer.exc'(X403,'type.list.list'('type.string.char')),'type.pair.prod'('type.infer.exc'(X400,X401),X400)),'const.pair.,_2'(s('type.infer.exc'(X403,'type.list.list'('type.string.char')),'const.infer.Success_1'(s(X403,X404))),s('type.pair.prod'('type.infer.exc'(X400,X401),X400),X405))) != s('type.pair.prod'('type.infer.exc'(X403,'type.list.list'('type.string.char')),'type.pair.prod'('type.infer.exc'(X400,X401),X400)),'const.infer.flookup_st_ex_4'(s(fun(X406,'type.list.list'('type.string.char')),X407),s(X406,X408),s('type.finite_map.fmap'(X406,X403),X409),s('type.pair.prod'('type.infer.exc'(X400,X401),X400),'const.infer.read_1'(s(X400,X402))))) | s('type.pair.prod'('type.infer.exc'(X400,X401),X400),X405) = s('type.pair.prod'('type.infer.exc'(X400,X401),X400),happ(s(fun(X400,'type.pair.prod'('type.infer.exc'(X400,X401),X400)),'const.infer.read_0'),s(X400,X402)))) )),
  inference(superposition,[],[f214,f178])).
fof(f12829,plain,(
  ( ! [X391,X397,X399,X393,X395,X390,X396,X398,X392,X394] : (s('type.pair.prod'('type.infer.exc'(X393,'type.list.list'('type.string.char')),'type.pair.prod'('type.infer.exc'(X390,X391),X390)),'const.pair.,_2'(s('type.infer.exc'(X393,'type.list.list'('type.string.char')),'const.infer.Success_1'(s(X393,X394))),s('type.pair.prod'('type.infer.exc'(X390,X391),X390),X395))) != s('type.pair.prod'('type.infer.exc'(X393,'type.list.list'('type.string.char')),'type.pair.prod'('type.infer.exc'(X390,X391),X390)),'const.infer.flookup_st_ex_4'(s(fun(X396,'type.list.list'('type.string.char')),X397),s(X396,X398),s('type.finite_map.fmap'(X396,X393),X399),s('type.pair.prod'('type.infer.exc'(X390,X391),X390),'const.infer.read_1'(s(X390,X392))))) | s('type.pair.prod'('type.infer.exc'(X390,X391),X390),X395) = s('type.pair.prod'('type.infer.exc'(X390,X391),X390),'const.pair.,_2'(s('type.infer.exc'(X390,X391),'const.infer.Success_1'(s(X390,X392))),s(X390,X392)))) )),
  inference(superposition,[],[f214,f177])).
fof(f12823,plain,(
  ( ! [X344,X346,X341,X343,X339,X349,X345,X347,X340,X342,X348] : (s('type.pair.prod'('type.infer.exc'(X343,'type.list.list'('type.string.char')),'type.list.list'(X339)),'const.pair.,_2'(s('type.infer.exc'(X343,'type.list.list'('type.string.char')),'const.infer.Success_1'(s(X343,X344))),s('type.list.list'(X339),X345))) != s('type.pair.prod'('type.infer.exc'(X343,'type.list.list'('type.string.char')),'type.list.list'(X339)),'const.infer.flookup_st_ex_4'(s(fun(X346,'type.list.list'('type.string.char')),X347),s(X346,X348),s('type.finite_map.fmap'(X346,X343),X349),s('type.list.list'(X339),'const.list.MAP_2'(s(fun(X340,X339),X341),s('type.list.list'(X340),X342))))) | s('type.list.list'(X339),X345) = s('type.list.list'(X339),happ(s(fun('type.list.list'(X340),'type.list.list'(X339)),happ(s(fun(fun(X340,X339),fun('type.list.list'(X340),'type.list.list'(X339))),'const.list.MAP_0'),s(fun(X340,X339),X341))),s('type.list.list'(X340),X342)))) )),
  inference(superposition,[],[f214,f180])).
fof(f12801,plain,(
  ( ! [X118,X116,X114,X112,X119,X117,X115,X113] : (s('type.pair.prod'('type.infer.exc'(X113,'type.list.list'('type.string.char')),bool),'const.pair.,_2'(s('type.infer.exc'(X113,'type.list.list'('type.string.char')),'const.infer.Success_1'(s(X113,X114))),s(bool,X115))) != s('type.pair.prod'('type.infer.exc'(X113,'type.list.list'('type.string.char')),bool),'const.infer.flookup_st_ex_4'(s(fun(X116,'type.list.list'('type.string.char')),X117),s(X116,X118),s('type.finite_map.fmap'(X116,X113),X119),s(bool,'T_0'))) | s(bool,X115) = s(bool,happ(s(fun('type.infer.infer_st'(bool),bool),'const.infer.infer_st_subst_0'),s('type.infer.infer_st'(bool),X112))) | s(bool,'F_0') = s(bool,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(bool),X112)))) )),
  inference(superposition,[],[f214,f293])).
fof(f12799,plain,(
  ( ! [X103,X101,X99,X97,X102,X100,X98,X104] : (s('type.pair.prod'('type.infer.exc'(X98,'type.list.list'('type.string.char')),bool),'const.pair.,_2'(s('type.infer.exc'(X98,'type.list.list'('type.string.char')),'const.infer.Success_1'(s(X98,X99))),s(bool,X100))) != s('type.pair.prod'('type.infer.exc'(X98,'type.list.list'('type.string.char')),bool),'const.infer.flookup_st_ex_4'(s(fun(X101,'type.list.list'('type.string.char')),X102),s(X101,X103),s('type.finite_map.fmap'(X101,X98),X104),s(bool,X97))) | s(bool,'F_0') = s(bool,X100) | s(bool,'T_0') = s(bool,X97)) )),
  inference(superposition,[],[f214,f167])).
fof(f12796,plain,(
  ( ! [X78,X76,X74,X72,X71,X77,X75,X73] : (s('type.pair.prod'('type.infer.exc'(X72,'type.list.list'('type.string.char')),bool),'const.pair.,_2'(s('type.infer.exc'(X72,'type.list.list'('type.string.char')),'const.infer.Success_1'(s(X72,X73))),s(bool,X74))) != s('type.pair.prod'('type.infer.exc'(X72,'type.list.list'('type.string.char')),bool),'const.infer.flookup_st_ex_4'(s(fun(X75,'type.list.list'('type.string.char')),X76),s(X75,X77),s('type.finite_map.fmap'(X75,X72),X78),s(bool,'F_0'))) | s(bool,X71) = s(bool,X74) | s(bool,'T_0') = s(bool,X71)) )),
  inference(superposition,[],[f214,f167])).
fof(f12792,plain,(
  ( ! [X39,X37,X35,X43,X41,X38,X36,X42,X40] : (s('type.pair.prod'('type.infer.exc'(X36,'type.list.list'('type.string.char')),bool),'const.pair.,_2'(s('type.infer.exc'(X36,'type.list.list'('type.string.char')),'const.infer.Success_1'(s(X36,X37))),s(bool,X38))) != s('type.pair.prod'('type.infer.exc'(X36,'type.list.list'('type.string.char')),bool),'const.infer.flookup_st_ex_4'(s(fun(X39,'type.list.list'('type.string.char')),X40),s(X39,X41),s('type.finite_map.fmap'(X39,X36),X42),s(bool,'T_0'))) | s(bool,X35) = s(bool,X38) | s(bool,X35) = s(bool,X43) | s(bool,'T_0') = s(bool,X43)) )),
  inference(superposition,[],[f214,f272])).
fof(f12791,plain,(
  ( ! [X30,X28,X26,X24,X33,X23,X31,X29,X27,X25,X34,X32,X22] : (s('type.pair.prod'('type.infer.exc'(X28,'type.list.list'('type.string.char')),X22),'const.pair.,_2'(s('type.infer.exc'(X28,'type.list.list'('type.string.char')),'const.infer.Success_1'(s(X28,X29))),s(X22,X30))) != s('type.pair.prod'('type.infer.exc'(X28,'type.list.list'('type.string.char')),X22),'const.infer.flookup_st_ex_4'(s(fun(X31,'type.list.list'('type.string.char')),X32),s(X31,X33),s('type.finite_map.fmap'(X31,X28),X34),s(X22,happ(s(fun(X24,X22),X25),s(X24,happ(s(fun(X23,X24),X26),s(X23,X27))))))) | s(X22,X30) = s(X22,happ(s(fun(X23,X22),'_dst_x0x1_2'(s(fun(X24,X22),X25),s(fun(X23,X24),X26))),s(X23,X27)))) )),
  inference(superposition,[],[f214,f206])).
fof(f12790,plain,(
  ( ! [X14,X12,X10,X21,X19,X17,X15,X13,X11,X9,X20,X18,X16] : (s('type.pair.prod'('type.infer.exc'(X15,'type.list.list'('type.string.char')),X9),'const.pair.,_2'(s('type.infer.exc'(X15,'type.list.list'('type.string.char')),'const.infer.Success_1'(s(X15,X16))),s(X9,X17))) != s('type.pair.prod'('type.infer.exc'(X15,'type.list.list'('type.string.char')),X9),'const.infer.flookup_st_ex_4'(s(fun(X18,'type.list.list'('type.string.char')),X19),s(X18,X20),s('type.finite_map.fmap'(X18,X15),X21),s(X9,happ(s(fun(X12,X9),'_dst_x0x1_2'(s(fun(X10,X9),X11),s(fun(X12,X10),X13))),s(X12,X14))))) | s(X9,X17) = s(X9,happ(s(fun(X10,X9),X11),s(X10,happ(s(fun(X12,X10),X13),s(X12,X14)))))) )),
  inference(superposition,[],[f214,f206])).
fof(f12789,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'(X2,'type.list.list'('type.string.char')),X0),'const.pair.,_2'(s('type.infer.exc'(X2,'type.list.list'('type.string.char')),'const.infer.Success_1'(s(X2,X3))),s(X0,X4))) != s('type.pair.prod'('type.infer.exc'(X2,'type.list.list'('type.string.char')),X0),'const.infer.flookup_st_ex_4'(s(fun(X5,'type.list.list'('type.string.char')),X6),s(X5,X7),s('type.finite_map.fmap'(X5,X2),X8),s(X0,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(X0),X1))))) | s(X0,X4) = s(X0,happ(s(fun('type.infer.infer_st'(X0),X0),'const.infer.infer_st_subst_0'),s('type.infer.infer_st'(X0),X1)))) )),
  inference(superposition,[],[f214,f168])).
fof(f12727,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'(X0,'type.list.list'('type.string.char')),X0),'const.infer.read_1'(s(X0,X1))) != s('type.pair.prod'('type.infer.exc'(X0,'type.list.list'('type.string.char')),X0),'const.infer.flookup_st_ex_4'(s(fun(X2,'type.list.list'('type.string.char')),X3),s(X2,X4),s('type.finite_map.fmap'(X2,X0),X5),s(X0,X6))) | s(X0,X1) = s(X0,X6)) )),
  inference(superposition,[],[f214,f177])).
fof(f12726,plain,(
  ( ! [X520,X522,X516,X518,X514,X521,X523,X517,X519,X515] : (s('type.pair.prod'('type.infer.exc'(X517,'type.list.list'('type.string.char')),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X514),'type.infer.infer_st'(X515))),'const.pair.,_2'(s('type.infer.exc'(X517,'type.list.list'('type.string.char')),'const.infer.Success_1'(s(X517,X518))),s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X514),'type.infer.infer_st'(X515)),'const.infer.fresh_uvar_1'(s('type.infer.infer_st'(X515),X516))))) != s('type.pair.prod'('type.infer.exc'(X517,'type.list.list'('type.string.char')),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X514),'type.infer.infer_st'(X515))),'const.infer.flookup_st_ex_4'(s(fun(X519,'type.list.list'('type.string.char')),X520),s(X519,X521),s('type.finite_map.fmap'(X519,X517),X522),s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X514),'type.infer.infer_st'(X515)),X523))) | s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X514),'type.infer.infer_st'(X515)),X523) = s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X514),'type.infer.infer_st'(X515)),happ(s(fun('type.infer.infer_st'(X515),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X514),'type.infer.infer_st'(X515))),'const.infer.fresh_uvar_0'),s('type.infer.infer_st'(X515),X516)))) )),
  inference(superposition,[],[f214,f179])).
fof(f12723,plain,(
  ( ! [X484,X486,X482,X492,X488,X490,X485,X487,X483,X493,X489,X491] : (s('type.pair.prod'('type.infer.exc'(X487,'type.list.list'('type.string.char')),'type.pair.prod'('type.infer.exc'('type.one.one',X482),X483)),'const.infer.flookup_st_ex_4'(s(fun(X489,'type.list.list'('type.string.char')),X490),s(X489,X491),s('type.finite_map.fmap'(X489,X487),X492),s('type.pair.prod'('type.infer.exc'('type.one.one',X482),X483),X493))) != s('type.pair.prod'('type.infer.exc'(X487,'type.list.list'('type.string.char')),'type.pair.prod'('type.infer.exc'('type.one.one',X482),X483)),'const.pair.,_2'(s('type.infer.exc'(X487,'type.list.list'('type.string.char')),'const.infer.Success_1'(s(X487,X488))),s('type.pair.prod'('type.infer.exc'('type.one.one',X482),X483),'const.infer.guard_3'(s(bool,X484),s(X482,X485),s(X483,X486))))) | s('type.pair.prod'('type.infer.exc'('type.one.one',X482),X483),X493) = s('type.pair.prod'('type.infer.exc'('type.one.one',X482),X483),happ(s(fun(X483,'type.pair.prod'('type.infer.exc'('type.one.one',X482),X483)),'const.infer.guard_2'(s(bool,X484),s(X482,X485))),s(X483,X486)))) )),
  inference(superposition,[],[f214,f183])).
fof(f12717,plain,(
  ( ! [X422,X428,X430,X424,X426,X432,X423,X429,X431,X425,X427,X433] : (s('type.pair.prod'('type.infer.exc'(X427,'type.list.list'('type.string.char')),'type.pair.prod'('type.infer.exc'(X422,X423),X424)),'const.infer.flookup_st_ex_4'(s(fun(X429,'type.list.list'('type.string.char')),X430),s(X429,X431),s('type.finite_map.fmap'(X429,X427),X432),s('type.pair.prod'('type.infer.exc'(X422,X423),X424),X433))) != s('type.pair.prod'('type.infer.exc'(X427,'type.list.list'('type.string.char')),'type.pair.prod'('type.infer.exc'(X422,X423),X424)),'const.pair.,_2'(s('type.infer.exc'(X427,'type.list.list'('type.string.char')),'const.infer.Success_1'(s(X427,X428))),s('type.pair.prod'('type.infer.exc'(X422,X423),X424),'const.infer.st_ex_return_2'(s(X422,X425),s(X424,X426))))) | s('type.pair.prod'('type.infer.exc'(X422,X423),X424),X433) = s('type.pair.prod'('type.infer.exc'(X422,X423),X424),happ(s(fun(X424,'type.pair.prod'('type.infer.exc'(X422,X423),X424)),happ(s(fun(X422,fun(X424,'type.pair.prod'('type.infer.exc'(X422,X423),X424))),'const.infer.st_ex_return_0'),s(X422,X425))),s(X424,X426)))) )),
  inference(superposition,[],[f214,f205])).
fof(f12716,plain,(
  ( ! [X412,X414,X410,X420,X416,X418,X413,X415,X411,X421,X417,X419] : (s('type.pair.prod'('type.infer.exc'(X415,'type.list.list'('type.string.char')),'type.pair.prod'('type.infer.exc'(X410,X411),X412)),'const.infer.flookup_st_ex_4'(s(fun(X417,'type.list.list'('type.string.char')),X418),s(X417,X419),s('type.finite_map.fmap'(X417,X415),X420),s('type.pair.prod'('type.infer.exc'(X410,X411),X412),X421))) != s('type.pair.prod'('type.infer.exc'(X415,'type.list.list'('type.string.char')),'type.pair.prod'('type.infer.exc'(X410,X411),X412)),'const.pair.,_2'(s('type.infer.exc'(X415,'type.list.list'('type.string.char')),'const.infer.Success_1'(s(X415,X416))),s('type.pair.prod'('type.infer.exc'(X410,X411),X412),'const.infer.failwith_2'(s(X411,X413),s(X412,X414))))) | s('type.pair.prod'('type.infer.exc'(X410,X411),X412),X421) = s('type.pair.prod'('type.infer.exc'(X410,X411),X412),happ(s(fun(X412,'type.pair.prod'('type.infer.exc'(X410,X411),X412)),'const.infer.failwith_1'(s(X411,X413))),s(X412,X414)))) )),
  inference(superposition,[],[f214,f204])).
fof(f12715,plain,(
  ( ! [X408,X405,X407,X401,X403,X409,X404,X406,X400,X402] : (s('type.pair.prod'('type.infer.exc'(X403,'type.list.list'('type.string.char')),'type.pair.prod'('type.infer.exc'(X400,X401),X400)),'const.pair.,_2'(s('type.infer.exc'(X403,'type.list.list'('type.string.char')),'const.infer.Success_1'(s(X403,X404))),s('type.pair.prod'('type.infer.exc'(X400,X401),X400),'const.infer.read_1'(s(X400,X402))))) != s('type.pair.prod'('type.infer.exc'(X403,'type.list.list'('type.string.char')),'type.pair.prod'('type.infer.exc'(X400,X401),X400)),'const.infer.flookup_st_ex_4'(s(fun(X405,'type.list.list'('type.string.char')),X406),s(X405,X407),s('type.finite_map.fmap'(X405,X403),X408),s('type.pair.prod'('type.infer.exc'(X400,X401),X400),X409))) | s('type.pair.prod'('type.infer.exc'(X400,X401),X400),X409) = s('type.pair.prod'('type.infer.exc'(X400,X401),X400),happ(s(fun(X400,'type.pair.prod'('type.infer.exc'(X400,X401),X400)),'const.infer.read_0'),s(X400,X402)))) )),
  inference(superposition,[],[f214,f178])).
fof(f12714,plain,(
  ( ! [X391,X397,X399,X393,X395,X390,X396,X398,X392,X394] : (s('type.pair.prod'('type.infer.exc'(X393,'type.list.list'('type.string.char')),'type.pair.prod'('type.infer.exc'(X390,X391),X390)),'const.pair.,_2'(s('type.infer.exc'(X393,'type.list.list'('type.string.char')),'const.infer.Success_1'(s(X393,X394))),s('type.pair.prod'('type.infer.exc'(X390,X391),X390),'const.infer.read_1'(s(X390,X392))))) != s('type.pair.prod'('type.infer.exc'(X393,'type.list.list'('type.string.char')),'type.pair.prod'('type.infer.exc'(X390,X391),X390)),'const.infer.flookup_st_ex_4'(s(fun(X395,'type.list.list'('type.string.char')),X396),s(X395,X397),s('type.finite_map.fmap'(X395,X393),X398),s('type.pair.prod'('type.infer.exc'(X390,X391),X390),X399))) | s('type.pair.prod'('type.infer.exc'(X390,X391),X390),X399) = s('type.pair.prod'('type.infer.exc'(X390,X391),X390),'const.pair.,_2'(s('type.infer.exc'(X390,X391),'const.infer.Success_1'(s(X390,X392))),s(X390,X392)))) )),
  inference(superposition,[],[f214,f177])).
fof(f12708,plain,(
  ( ! [X344,X346,X341,X343,X339,X349,X345,X347,X340,X342,X348] : (s('type.pair.prod'('type.infer.exc'(X343,'type.list.list'('type.string.char')),'type.list.list'(X339)),'const.infer.flookup_st_ex_4'(s(fun(X345,'type.list.list'('type.string.char')),X346),s(X345,X347),s('type.finite_map.fmap'(X345,X343),X348),s('type.list.list'(X339),X349))) != s('type.pair.prod'('type.infer.exc'(X343,'type.list.list'('type.string.char')),'type.list.list'(X339)),'const.pair.,_2'(s('type.infer.exc'(X343,'type.list.list'('type.string.char')),'const.infer.Success_1'(s(X343,X344))),s('type.list.list'(X339),'const.list.MAP_2'(s(fun(X340,X339),X341),s('type.list.list'(X340),X342))))) | s('type.list.list'(X339),X349) = s('type.list.list'(X339),happ(s(fun('type.list.list'(X340),'type.list.list'(X339)),happ(s(fun(fun(X340,X339),fun('type.list.list'(X340),'type.list.list'(X339))),'const.list.MAP_0'),s(fun(X340,X339),X341))),s('type.list.list'(X340),X342)))) )),
  inference(superposition,[],[f214,f180])).
fof(f12686,plain,(
  ( ! [X118,X116,X114,X112,X119,X117,X115,X113] : (s('type.pair.prod'('type.infer.exc'(X113,'type.list.list'('type.string.char')),bool),'const.pair.,_2'(s('type.infer.exc'(X113,'type.list.list'('type.string.char')),'const.infer.Success_1'(s(X113,X114))),s(bool,'T_0'))) != s('type.pair.prod'('type.infer.exc'(X113,'type.list.list'('type.string.char')),bool),'const.infer.flookup_st_ex_4'(s(fun(X115,'type.list.list'('type.string.char')),X116),s(X115,X117),s('type.finite_map.fmap'(X115,X113),X118),s(bool,X119))) | s(bool,X119) = s(bool,happ(s(fun('type.infer.infer_st'(bool),bool),'const.infer.infer_st_subst_0'),s('type.infer.infer_st'(bool),X112))) | s(bool,'F_0') = s(bool,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(bool),X112)))) )),
  inference(superposition,[],[f214,f293])).
fof(f12684,plain,(
  ( ! [X103,X101,X99,X97,X102,X100,X98,X104] : (s('type.pair.prod'('type.infer.exc'(X98,'type.list.list'('type.string.char')),bool),'const.pair.,_2'(s('type.infer.exc'(X98,'type.list.list'('type.string.char')),'const.infer.Success_1'(s(X98,X99))),s(bool,X97))) != s('type.pair.prod'('type.infer.exc'(X98,'type.list.list'('type.string.char')),bool),'const.infer.flookup_st_ex_4'(s(fun(X100,'type.list.list'('type.string.char')),X101),s(X100,X102),s('type.finite_map.fmap'(X100,X98),X103),s(bool,X104))) | s(bool,'F_0') = s(bool,X104) | s(bool,'T_0') = s(bool,X97)) )),
  inference(superposition,[],[f214,f167])).
fof(f12682,plain,(
  ( ! [X80,X87,X85,X83,X81,X79,X86,X84,X82] : (s('type.pair.prod'('type.infer.exc'(X80,'type.list.list'('type.string.char')),bool),'const.pair.,_2'(s('type.infer.exc'(X80,'type.list.list'('type.string.char')),'const.infer.Success_1'(s(X80,X81))),s(bool,X79))) != s('type.pair.prod'('type.infer.exc'(X80,'type.list.list'('type.string.char')),bool),'const.infer.flookup_st_ex_4'(s(fun(X82,'type.list.list'('type.string.char')),X83),s(X82,X84),s('type.finite_map.fmap'(X82,X80),X85),s(bool,X86))) | s(bool,'T_0') = s(bool,X86) | s(bool,X79) = s(bool,X87) | s(bool,'T_0') = s(bool,X87)) )),
  inference(superposition,[],[f214,f272])).
fof(f12681,plain,(
  ( ! [X78,X76,X74,X72,X71,X77,X75,X73] : (s('type.pair.prod'('type.infer.exc'(X72,'type.list.list'('type.string.char')),bool),'const.pair.,_2'(s('type.infer.exc'(X72,'type.list.list'('type.string.char')),'const.infer.Success_1'(s(X72,X73))),s(bool,'F_0'))) != s('type.pair.prod'('type.infer.exc'(X72,'type.list.list'('type.string.char')),bool),'const.infer.flookup_st_ex_4'(s(fun(X74,'type.list.list'('type.string.char')),X75),s(X74,X76),s('type.finite_map.fmap'(X74,X72),X77),s(bool,X78))) | s(bool,X71) = s(bool,X78) | s(bool,'T_0') = s(bool,X71)) )),
  inference(superposition,[],[f214,f167])).
fof(f12679,plain,(
  ( ! [X61,X59,X57,X54,X60,X58,X56,X55,X53] : (s('type.pair.prod'('type.infer.exc'(X55,'type.list.list'('type.string.char')),bool),'const.pair.,_2'(s('type.infer.exc'(X55,'type.list.list'('type.string.char')),'const.infer.Success_1'(s(X55,X56))),s(bool,X54))) != s('type.pair.prod'('type.infer.exc'(X55,'type.list.list'('type.string.char')),bool),'const.infer.flookup_st_ex_4'(s(fun(X57,'type.list.list'('type.string.char')),X58),s(X57,X59),s('type.finite_map.fmap'(X57,X55),X60),s(bool,X61))) | s(bool,X53) = s(bool,X61) | s(bool,'T_0') = s(bool,X53) | s(bool,'T_0') = s(bool,X54)) )),
  inference(superposition,[],[f214,f272])).
fof(f12677,plain,(
  ( ! [X39,X37,X35,X43,X41,X38,X36,X42,X40] : (s('type.pair.prod'('type.infer.exc'(X36,'type.list.list'('type.string.char')),bool),'const.pair.,_2'(s('type.infer.exc'(X36,'type.list.list'('type.string.char')),'const.infer.Success_1'(s(X36,X37))),s(bool,'T_0'))) != s('type.pair.prod'('type.infer.exc'(X36,'type.list.list'('type.string.char')),bool),'const.infer.flookup_st_ex_4'(s(fun(X38,'type.list.list'('type.string.char')),X39),s(X38,X40),s('type.finite_map.fmap'(X38,X36),X41),s(bool,X42))) | s(bool,X35) = s(bool,X42) | s(bool,X35) = s(bool,X43) | s(bool,'T_0') = s(bool,X43)) )),
  inference(superposition,[],[f214,f272])).
fof(f12676,plain,(
  ( ! [X30,X28,X26,X24,X33,X23,X31,X29,X27,X25,X34,X32,X22] : (s('type.pair.prod'('type.infer.exc'(X28,'type.list.list'('type.string.char')),X22),'const.infer.flookup_st_ex_4'(s(fun(X30,'type.list.list'('type.string.char')),X31),s(X30,X32),s('type.finite_map.fmap'(X30,X28),X33),s(X22,X34))) != s('type.pair.prod'('type.infer.exc'(X28,'type.list.list'('type.string.char')),X22),'const.pair.,_2'(s('type.infer.exc'(X28,'type.list.list'('type.string.char')),'const.infer.Success_1'(s(X28,X29))),s(X22,happ(s(fun(X24,X22),X25),s(X24,happ(s(fun(X23,X24),X26),s(X23,X27))))))) | s(X22,X34) = s(X22,happ(s(fun(X23,X22),'_dst_x0x1_2'(s(fun(X24,X22),X25),s(fun(X23,X24),X26))),s(X23,X27)))) )),
  inference(superposition,[],[f214,f206])).
fof(f12675,plain,(
  ( ! [X14,X12,X10,X21,X19,X17,X15,X13,X11,X9,X20,X18,X16] : (s('type.pair.prod'('type.infer.exc'(X15,'type.list.list'('type.string.char')),X9),'const.infer.flookup_st_ex_4'(s(fun(X17,'type.list.list'('type.string.char')),X18),s(X17,X19),s('type.finite_map.fmap'(X17,X15),X20),s(X9,X21))) != s('type.pair.prod'('type.infer.exc'(X15,'type.list.list'('type.string.char')),X9),'const.pair.,_2'(s('type.infer.exc'(X15,'type.list.list'('type.string.char')),'const.infer.Success_1'(s(X15,X16))),s(X9,happ(s(fun(X12,X9),'_dst_x0x1_2'(s(fun(X10,X9),X11),s(fun(X12,X10),X13))),s(X12,X14))))) | s(X9,X21) = s(X9,happ(s(fun(X10,X9),X11),s(X10,happ(s(fun(X12,X10),X13),s(X12,X14)))))) )),
  inference(superposition,[],[f214,f206])).
fof(f12674,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'(X2,'type.list.list'('type.string.char')),X0),'const.pair.,_2'(s('type.infer.exc'(X2,'type.list.list'('type.string.char')),'const.infer.Success_1'(s(X2,X3))),s(X0,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(X0),X1))))) != s('type.pair.prod'('type.infer.exc'(X2,'type.list.list'('type.string.char')),X0),'const.infer.flookup_st_ex_4'(s(fun(X4,'type.list.list'('type.string.char')),X5),s(X4,X6),s('type.finite_map.fmap'(X4,X2),X7),s(X0,X8))) | s(X0,X8) = s(X0,happ(s(fun('type.infer.infer_st'(X0),X0),'const.infer.infer_st_subst_0'),s('type.infer.infer_st'(X0),X1)))) )),
  inference(superposition,[],[f214,f168])).
fof(f12602,plain,(
  ( ! [X6,X4,X2,X0,X12,X10,X8,X7,X5,X3,X1,X11,X9] : (s('type.pair.prod'('type.infer.exc'(X0,'type.list.list'('type.string.char')),'type.pair.prod'('type.infer.exc'(X1,X2),X3)),'const.pair.,_2'(s('type.infer.exc'(X0,'type.list.list'('type.string.char')),'const.infer.Success_1'(s(X0,X4))),s('type.pair.prod'('type.infer.exc'(X1,X2),X3),'const.pair.,_2'(s('type.infer.exc'(X1,X2),'const.infer.Success_1'(s(X1,X5))),s(X3,X6))))) != s('type.pair.prod'('type.infer.exc'(X0,'type.list.list'('type.string.char')),'type.pair.prod'('type.infer.exc'(X1,X2),X3)),'const.infer.flookup_st_ex_4'(s(fun(X7,'type.list.list'('type.string.char')),X8),s(X7,X9),s('type.finite_map.fmap'(X7,X0),X10),s('type.pair.prod'('type.infer.exc'(X1,X2),X3),'const.infer.failwith_2'(s(X2,X11),s(X3,X12)))))) )),
  inference(unit_resulting_resolution,[],[f253,f214])).
fof(f12608,plain,(
  ( ! [X6,X4,X2,X0,X10,X8,X7,X5,X3,X1,X9] : (s('type.pair.prod'('type.infer.exc'(X0,'type.list.list'('type.string.char')),'type.pair.prod'('type.infer.exc'(X1,X2),X1)),'const.pair.,_2'(s('type.infer.exc'(X0,'type.list.list'('type.string.char')),'const.infer.Success_1'(s(X0,X3))),s('type.pair.prod'('type.infer.exc'(X1,X2),X1),'const.infer.failwith_2'(s(X2,X4),s(X1,X5))))) != s('type.pair.prod'('type.infer.exc'(X0,'type.list.list'('type.string.char')),'type.pair.prod'('type.infer.exc'(X1,X2),X1)),'const.infer.flookup_st_ex_4'(s(fun(X6,'type.list.list'('type.string.char')),X7),s(X6,X8),s('type.finite_map.fmap'(X6,X0),X9),s('type.pair.prod'('type.infer.exc'(X1,X2),X1),'const.infer.read_1'(s(X1,X10)))))) )),
  inference(unit_resulting_resolution,[],[f706,f214])).
fof(f12613,plain,(
  ( ! [X6,X4,X2,X0,X12,X10,X8,X7,X5,X3,X1,X11,X9] : (s('type.pair.prod'('type.infer.exc'(X0,'type.list.list'('type.string.char')),'type.pair.prod'('type.infer.exc'(X1,X2),X3)),'const.pair.,_2'(s('type.infer.exc'(X0,'type.list.list'('type.string.char')),'const.infer.Success_1'(s(X0,X4))),s('type.pair.prod'('type.infer.exc'(X1,X2),X3),'const.infer.failwith_2'(s(X2,X5),s(X3,X6))))) != s('type.pair.prod'('type.infer.exc'(X0,'type.list.list'('type.string.char')),'type.pair.prod'('type.infer.exc'(X1,X2),X3)),'const.infer.flookup_st_ex_4'(s(fun(X7,'type.list.list'('type.string.char')),X8),s(X7,X9),s('type.finite_map.fmap'(X7,X0),X10),s('type.pair.prod'('type.infer.exc'(X1,X2),X3),'const.pair.,_2'(s('type.infer.exc'(X1,X2),'const.infer.Success_1'(s(X1,X11))),s(X3,X12)))))) )),
  inference(unit_resulting_resolution,[],[f253,f214])).
fof(f12619,plain,(
  ( ! [X6,X4,X2,X0,X10,X8,X7,X5,X3,X1,X9] : (s('type.pair.prod'('type.infer.exc'(X0,'type.list.list'('type.string.char')),'type.pair.prod'('type.infer.exc'(X1,X2),X1)),'const.pair.,_2'(s('type.infer.exc'(X0,'type.list.list'('type.string.char')),'const.infer.Success_1'(s(X0,X3))),s('type.pair.prod'('type.infer.exc'(X1,X2),X1),'const.infer.read_1'(s(X1,X4))))) != s('type.pair.prod'('type.infer.exc'(X0,'type.list.list'('type.string.char')),'type.pair.prod'('type.infer.exc'(X1,X2),X1)),'const.infer.flookup_st_ex_4'(s(fun(X5,'type.list.list'('type.string.char')),X6),s(X5,X7),s('type.finite_map.fmap'(X5,X0),X8),s('type.pair.prod'('type.infer.exc'(X1,X2),X1),'const.infer.failwith_2'(s(X2,X9),s(X1,X10)))))) )),
  inference(unit_resulting_resolution,[],[f706,f214])).
fof(f12033,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.num.num',X0),'type.infer.infer_st'(X1)),'const.infer.get_next_uvar_1'(s('type.infer.infer_st'(X1),X2))) = s('type.pair.prod'('type.infer.exc'('type.num.num',X0),'type.infer.infer_st'(X1)),'const.pair.,_2'(s('type.infer.exc'('type.num.num',X0),'const.infer.Success_1'(s('type.num.num',X3))),s('type.infer.infer_st'(X1),X2))) | s('type.num.num',X3) != s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'(X1),X2)))) )),
  inference(equality_resolution,[],[f188])).
fof(f12032,plain,(
  ( ! [X14,X21,X19,X17,X15,X22,X20,X18,X16] : (s('type.infer.infer_st'(X14),X20) != s('type.infer.infer_st'(X14),happ(s(fun(X16,'type.infer.infer_st'(X14)),X17),s(X16,happ(s(fun(X15,X16),X18),s(X15,X19))))) | s('type.pair.prod'('type.infer.exc'('type.num.num',X21),'type.infer.infer_st'(X14)),'const.infer.get_next_uvar_1'(s('type.infer.infer_st'(X14),X20))) = s('type.pair.prod'('type.infer.exc'('type.num.num',X21),'type.infer.infer_st'(X14)),'const.pair.,_2'(s('type.infer.exc'('type.num.num',X21),'const.infer.Success_1'(s('type.num.num',X22))),s('type.infer.infer_st'(X14),happ(s(fun(X15,'type.infer.infer_st'(X14)),'_dst_x0x1_2'(s(fun(X16,'type.infer.infer_st'(X14)),X17),s(fun(X15,X16),X18))),s(X15,X19))))) | s('type.num.num',X22) != s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'(X14),X20)))) )),
  inference(superposition,[],[f188,f206])).
fof(f12031,plain,(
  ( ! [X6,X12,X10,X8,X7,X5,X13,X11,X9] : (s('type.infer.infer_st'(X5),X11) != s('type.infer.infer_st'(X5),happ(s(fun(X8,'type.infer.infer_st'(X5)),'_dst_x0x1_2'(s(fun(X6,'type.infer.infer_st'(X5)),X7),s(fun(X8,X6),X9))),s(X8,X10))) | s('type.pair.prod'('type.infer.exc'('type.num.num',X12),'type.infer.infer_st'(X5)),'const.infer.get_next_uvar_1'(s('type.infer.infer_st'(X5),X11))) = s('type.pair.prod'('type.infer.exc'('type.num.num',X12),'type.infer.infer_st'(X5)),'const.pair.,_2'(s('type.infer.exc'('type.num.num',X12),'const.infer.Success_1'(s('type.num.num',X13))),s('type.infer.infer_st'(X5),happ(s(fun(X6,'type.infer.infer_st'(X5)),X7),s(X6,happ(s(fun(X8,X6),X9),s(X8,X10))))))) | s('type.num.num',X13) != s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'(X5),X11)))) )),
  inference(superposition,[],[f188,f206])).
fof(f12029,plain,(
  ( ! [X14,X21,X19,X17,X15,X22,X20,X18,X16] : (s('type.infer.infer_st'(X14),X20) != s('type.infer.infer_st'(X14),happ(s(fun(X16,'type.infer.infer_st'(X14)),X17),s(X16,happ(s(fun(X15,X16),X18),s(X15,X19))))) | s('type.pair.prod'('type.infer.exc'('type.num.num',X21),'type.infer.infer_st'(X14)),'const.pair.,_2'(s('type.infer.exc'('type.num.num',X21),'const.infer.Success_1'(s('type.num.num',X22))),s('type.infer.infer_st'(X14),X20))) = s('type.pair.prod'('type.infer.exc'('type.num.num',X21),'type.infer.infer_st'(X14)),'const.infer.get_next_uvar_1'(s('type.infer.infer_st'(X14),happ(s(fun(X15,'type.infer.infer_st'(X14)),'_dst_x0x1_2'(s(fun(X16,'type.infer.infer_st'(X14)),X17),s(fun(X15,X16),X18))),s(X15,X19))))) | s('type.num.num',X22) != s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'(X14),happ(s(fun(X15,'type.infer.infer_st'(X14)),'_dst_x0x1_2'(s(fun(X16,'type.infer.infer_st'(X14)),X17),s(fun(X15,X16),X18))),s(X15,X19)))))) )),
  inference(superposition,[],[f188,f206])).
fof(f12028,plain,(
  ( ! [X6,X12,X10,X8,X7,X5,X13,X11,X9] : (s('type.infer.infer_st'(X5),X11) != s('type.infer.infer_st'(X5),happ(s(fun(X8,'type.infer.infer_st'(X5)),'_dst_x0x1_2'(s(fun(X6,'type.infer.infer_st'(X5)),X7),s(fun(X8,X6),X9))),s(X8,X10))) | s('type.pair.prod'('type.infer.exc'('type.num.num',X12),'type.infer.infer_st'(X5)),'const.pair.,_2'(s('type.infer.exc'('type.num.num',X12),'const.infer.Success_1'(s('type.num.num',X13))),s('type.infer.infer_st'(X5),X11))) = s('type.pair.prod'('type.infer.exc'('type.num.num',X12),'type.infer.infer_st'(X5)),'const.infer.get_next_uvar_1'(s('type.infer.infer_st'(X5),happ(s(fun(X6,'type.infer.infer_st'(X5)),X7),s(X6,happ(s(fun(X8,X6),X9),s(X8,X10))))))) | s('type.num.num',X13) != s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'(X5),happ(s(fun(X6,'type.infer.infer_st'(X5)),X7),s(X6,happ(s(fun(X8,X6),X9),s(X8,X10)))))))) )),
  inference(superposition,[],[f188,f206])).
fof(f10750,plain,(
  ( ! [X302,X308,X304,X306,X301,X303,X305,X307] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X301,X302),X303),X306),'type.pair.prod'('type.infer.exc'(X301,X302),X303)),'const.infer.read_1'(s('type.pair.prod'('type.infer.exc'(X301,X302),X303),'const.infer.st_ex_return_2'(s(X301,X304),s(X303,X305))))) != s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X301,X302),X303),X306),'type.pair.prod'('type.infer.exc'(X301,X302),X303)),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'(X301,X302),X303),X307),s('type.pair.prod'('type.infer.exc'(X301,X302),X303),X308))) | s('type.pair.prod'('type.infer.exc'(X301,X302),X303),X308) = s('type.pair.prod'('type.infer.exc'(X301,X302),X303),happ(s(fun(X303,'type.pair.prod'('type.infer.exc'(X301,X302),X303)),happ(s(fun(X301,fun(X303,'type.pair.prod'('type.infer.exc'(X301,X302),X303))),'const.infer.st_ex_return_0'),s(X301,X304))),s(X303,X305)))) )),
  inference(superposition,[],[f1740,f205])).
fof(f10748,plain,(
  ( ! [X292,X288,X290,X285,X287,X289,X291,X286] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X285,X286),X287),X290),'type.pair.prod'('type.infer.exc'(X285,X286),X287)),'const.infer.read_1'(s('type.pair.prod'('type.infer.exc'(X285,X286),X287),X291))) != s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X285,X286),X287),X290),'type.pair.prod'('type.infer.exc'(X285,X286),X287)),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'(X285,X286),X287),X292),s('type.pair.prod'('type.infer.exc'(X285,X286),X287),'const.infer.st_ex_return_2'(s(X285,X288),s(X287,X289))))) | s('type.pair.prod'('type.infer.exc'(X285,X286),X287),X291) = s('type.pair.prod'('type.infer.exc'(X285,X286),X287),happ(s(fun(X287,'type.pair.prod'('type.infer.exc'(X285,X286),X287)),happ(s(fun(X285,fun(X287,'type.pair.prod'('type.infer.exc'(X285,X286),X287))),'const.infer.st_ex_return_0'),s(X285,X288))),s(X287,X289)))) )),
  inference(superposition,[],[f1740,f205])).
fof(f10747,plain,(
  ( ! [X280,X282,X277,X279,X281,X283,X278,X284] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X277,X278),X279),X282),'type.pair.prod'('type.infer.exc'(X277,X278),X279)),'const.infer.read_1'(s('type.pair.prod'('type.infer.exc'(X277,X278),X279),'const.infer.st_ex_return_2'(s(X277,X280),s(X279,X281))))) != s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X277,X278),X279),X282),'type.pair.prod'('type.infer.exc'(X277,X278),X279)),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'(X277,X278),X279),X283),s('type.pair.prod'('type.infer.exc'(X277,X278),X279),X284))) | s('type.pair.prod'('type.infer.exc'(X277,X278),X279),X283) = s('type.pair.prod'('type.infer.exc'(X277,X278),X279),happ(s(fun(X279,'type.pair.prod'('type.infer.exc'(X277,X278),X279)),happ(s(fun(X277,fun(X279,'type.pair.prod'('type.infer.exc'(X277,X278),X279))),'const.infer.st_ex_return_0'),s(X277,X280))),s(X279,X281)))) )),
  inference(superposition,[],[f1426,f205])).
fof(f10746,plain,(
  ( ! [X269,X271,X273,X275,X270,X276,X272,X274] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X269,X270),X271),X274),'type.pair.prod'('type.infer.exc'(X269,X270),X271)),'const.infer.read_1'(s('type.pair.prod'('type.infer.exc'(X269,X270),X271),X275))) != s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X269,X270),X271),X274),'type.pair.prod'('type.infer.exc'(X269,X270),X271)),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'(X269,X270),X271),'const.infer.st_ex_return_2'(s(X269,X272),s(X271,X273))),s('type.pair.prod'('type.infer.exc'(X269,X270),X271),X276))) | s('type.pair.prod'('type.infer.exc'(X269,X270),X271),X275) = s('type.pair.prod'('type.infer.exc'(X269,X270),X271),happ(s(fun(X271,'type.pair.prod'('type.infer.exc'(X269,X270),X271)),happ(s(fun(X269,fun(X271,'type.pair.prod'('type.infer.exc'(X269,X270),X271))),'const.infer.st_ex_return_0'),s(X269,X272))),s(X271,X273)))) )),
  inference(superposition,[],[f1426,f205])).
fof(f10735,plain,(
  ( ! [X167,X175,X173,X171,X169,X176,X174,X172,X170,X168] : (s('type.pair.prod'('type.infer.exc'(X172,X173),'type.pair.prod'('type.infer.exc'(X167,X168),X169)),'const.infer.st_ex_return_2'(s(X172,X174),s('type.pair.prod'('type.infer.exc'(X167,X168),X169),X175))) != s('type.pair.prod'('type.infer.exc'(X172,X173),'type.pair.prod'('type.infer.exc'(X167,X168),X169)),'const.pair.,_2'(s('type.infer.exc'(X172,X173),'const.infer.Success_1'(s(X172,X176))),s('type.pair.prod'('type.infer.exc'(X167,X168),X169),'const.infer.st_ex_return_2'(s(X167,X170),s(X169,X171))))) | s('type.pair.prod'('type.infer.exc'(X167,X168),X169),X175) = s('type.pair.prod'('type.infer.exc'(X167,X168),X169),happ(s(fun(X169,'type.pair.prod'('type.infer.exc'(X167,X168),X169)),happ(s(fun(X167,fun(X169,'type.pair.prod'('type.infer.exc'(X167,X168),X169))),'const.infer.st_ex_return_0'),s(X167,X170))),s(X169,X171)))) )),
  inference(superposition,[],[f211,f205])).
fof(f10734,plain,(
  ( ! [X158,X165,X163,X161,X159,X157,X166,X164,X162,X160] : (s('type.pair.prod'('type.infer.exc'(X162,X163),'type.pair.prod'('type.infer.exc'(X157,X158),X159)),'const.pair.,_2'(s('type.infer.exc'(X162,X163),'const.infer.Success_1'(s(X162,X165))),s('type.pair.prod'('type.infer.exc'(X157,X158),X159),X166))) != s('type.pair.prod'('type.infer.exc'(X162,X163),'type.pair.prod'('type.infer.exc'(X157,X158),X159)),'const.infer.st_ex_return_2'(s(X162,X164),s('type.pair.prod'('type.infer.exc'(X157,X158),X159),'const.infer.st_ex_return_2'(s(X157,X160),s(X159,X161))))) | s('type.pair.prod'('type.infer.exc'(X157,X158),X159),X166) = s('type.pair.prod'('type.infer.exc'(X157,X158),X159),happ(s(fun(X159,'type.pair.prod'('type.infer.exc'(X157,X158),X159)),happ(s(fun(X157,fun(X159,'type.pair.prod'('type.infer.exc'(X157,X158),X159))),'const.infer.st_ex_return_0'),s(X157,X160))),s(X159,X161)))) )),
  inference(superposition,[],[f211,f205])).
fof(f10729,plain,(
  ( ! [X111,X109,X107,X116,X114,X112,X110,X108,X115,X113] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X107,X108),X109),X112),X113),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'(X107,X108),X109),'const.infer.st_ex_return_2'(s(X107,X110),s(X109,X111))),s(X113,X114))) != s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X107,X108),X109),X112),X113),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'(X107,X108),X109),X112),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'(X107,X108),X109),X115))),s(X113,X116))) | s('type.pair.prod'('type.infer.exc'(X107,X108),X109),X115) = s('type.pair.prod'('type.infer.exc'(X107,X108),X109),happ(s(fun(X109,'type.pair.prod'('type.infer.exc'(X107,X108),X109)),happ(s(fun(X107,fun(X109,'type.pair.prod'('type.infer.exc'(X107,X108),X109))),'const.infer.st_ex_return_0'),s(X107,X110))),s(X109,X111)))) )),
  inference(superposition,[],[f210,f205])).
fof(f10728,plain,(
  ( ! [X103,X101,X99,X97,X105,X102,X100,X98,X106,X104] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X97,X98),X99),X102),X103),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'(X97,X98),X99),X104),s(X103,X105))) != s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X97,X98),X99),X102),X103),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'(X97,X98),X99),X102),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'(X97,X98),X99),'const.infer.st_ex_return_2'(s(X97,X100),s(X99,X101))))),s(X103,X106))) | s('type.pair.prod'('type.infer.exc'(X97,X98),X99),X104) = s('type.pair.prod'('type.infer.exc'(X97,X98),X99),happ(s(fun(X99,'type.pair.prod'('type.infer.exc'(X97,X98),X99)),happ(s(fun(X97,fun(X99,'type.pair.prod'('type.infer.exc'(X97,X98),X99))),'const.infer.st_ex_return_0'),s(X97,X100))),s(X99,X101)))) )),
  inference(superposition,[],[f210,f205])).
fof(f10724,plain,(
  ( ! [X70,X68,X66,X64,X62,X71,X69,X67,X65,X63] : (s('type.pair.prod'('type.infer.exc'('type.one.one',X67),'type.pair.prod'('type.infer.exc'(X62,X63),X64)),'const.infer.guard_3'(s(bool,X68),s(X67,X69),s('type.pair.prod'('type.infer.exc'(X62,X63),X64),X70))) != s('type.pair.prod'('type.infer.exc'('type.one.one',X67),'type.pair.prod'('type.infer.exc'(X62,X63),X64)),'const.pair.,_2'(s('type.infer.exc'('type.one.one',X67),'const.infer.Success_1'(s('type.one.one',X71))),s('type.pair.prod'('type.infer.exc'(X62,X63),X64),'const.infer.st_ex_return_2'(s(X62,X65),s(X64,X66))))) | s('type.pair.prod'('type.infer.exc'(X62,X63),X64),X70) = s('type.pair.prod'('type.infer.exc'(X62,X63),X64),happ(s(fun(X64,'type.pair.prod'('type.infer.exc'(X62,X63),X64)),happ(s(fun(X62,fun(X64,'type.pair.prod'('type.infer.exc'(X62,X63),X64))),'const.infer.st_ex_return_0'),s(X62,X65))),s(X64,X66)))) )),
  inference(superposition,[],[f197,f205])).
fof(f10723,plain,(
  ( ! [X61,X59,X57,X54,X52,X60,X58,X56,X55,X53] : (s('type.pair.prod'('type.infer.exc'('type.one.one',X57),'type.pair.prod'('type.infer.exc'(X52,X53),X54)),'const.pair.,_2'(s('type.infer.exc'('type.one.one',X57),'const.infer.Success_1'(s('type.one.one',X60))),s('type.pair.prod'('type.infer.exc'(X52,X53),X54),X61))) != s('type.pair.prod'('type.infer.exc'('type.one.one',X57),'type.pair.prod'('type.infer.exc'(X52,X53),X54)),'const.infer.guard_3'(s(bool,X58),s(X57,X59),s('type.pair.prod'('type.infer.exc'(X52,X53),X54),'const.infer.st_ex_return_2'(s(X52,X55),s(X54,X56))))) | s('type.pair.prod'('type.infer.exc'(X52,X53),X54),X61) = s('type.pair.prod'('type.infer.exc'(X52,X53),X54),happ(s(fun(X54,'type.pair.prod'('type.infer.exc'(X52,X53),X54)),happ(s(fun(X52,fun(X54,'type.pair.prod'('type.infer.exc'(X52,X53),X54))),'const.infer.st_ex_return_0'),s(X52,X55))),s(X54,X56)))) )),
  inference(superposition,[],[f197,f205])).
fof(f10717,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s(X5,happ(s(fun('type.pair.prod'('type.infer.exc'(X0,X1),X2),X5),X6),s('type.pair.prod'('type.infer.exc'(X0,X1),X2),'const.infer.st_ex_return_2'(s(X0,X3),s(X2,X4))))) = s(X5,happ(s(fun(X2,X5),'_dst_x0x1_2'(s(fun('type.pair.prod'('type.infer.exc'(X0,X1),X2),X5),X6),s(fun(X2,'type.pair.prod'('type.infer.exc'(X0,X1),X2)),happ(s(fun(X0,fun(X2,'type.pair.prod'('type.infer.exc'(X0,X1),X2))),'const.infer.st_ex_return_0'),s(X0,X3))))),s(X2,X4)))) )),
  inference(superposition,[],[f206,f205])).
fof(f10931,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.one.one',X0),'type.pair.prod'('type.infer.exc'(X1,X2),X3)),'const.infer.guard_3'(s(bool,'T_0'),s(X0,X7),s('type.pair.prod'('type.infer.exc'(X1,X2),X3),'const.infer.st_ex_return_2'(s(X1,X5),s(X3,X6))))) = s('type.pair.prod'('type.infer.exc'('type.one.one',X0),'type.pair.prod'('type.infer.exc'(X1,X2),X3)),'const.pair.,_2'(s('type.infer.exc'('type.one.one',X0),'const.infer.Success_1'(s('type.one.one',X4))),s('type.pair.prod'('type.infer.exc'(X1,X2),X3),'const.infer.st_ex_return_2'(s(X1,X5),s(X3,X6)))))) )),
  inference(forward_demodulation,[],[f10514,f205])).
fof(f10514,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.one.one',X0),'type.pair.prod'('type.infer.exc'(X1,X2),X3)),'const.pair.,_2'(s('type.infer.exc'('type.one.one',X0),'const.infer.Success_1'(s('type.one.one',X4))),s('type.pair.prod'('type.infer.exc'(X1,X2),X3),'const.infer.st_ex_return_2'(s(X1,X5),s(X3,X6))))) = s('type.pair.prod'('type.infer.exc'('type.one.one',X0),'type.pair.prod'('type.infer.exc'(X1,X2),X3)),'const.infer.guard_3'(s(bool,'T_0'),s(X0,X7),s('type.pair.prod'('type.infer.exc'(X1,X2),X3),happ(s(fun(X3,'type.pair.prod'('type.infer.exc'(X1,X2),X3)),happ(s(fun(X1,fun(X3,'type.pair.prod'('type.infer.exc'(X1,X2),X3))),'const.infer.st_ex_return_0'),s(X1,X5))),s(X3,X6)))))) )),
  inference(unit_resulting_resolution,[],[f163,f205,f252])).
fof(f10928,plain,(
  ( ! [X6,X4,X2,X0,X10,X8,X7,X5,X3,X1,X11,X9] : (s('type.pair.prod'('type.infer.exc'(X0,X1),'type.pair.prod'('type.infer.exc'(X2,X3),X4)),'const.infer.st_ex_return_2'(s(X0,happ(s(fun(X6,X0),X7),s(X6,happ(s(fun(X5,X6),X8),s(X5,X9))))),s('type.pair.prod'('type.infer.exc'(X2,X3),X4),'const.infer.st_ex_return_2'(s(X2,X10),s(X4,X11))))) = s('type.pair.prod'('type.infer.exc'(X0,X1),'type.pair.prod'('type.infer.exc'(X2,X3),X4)),'const.pair.,_2'(s('type.infer.exc'(X0,X1),'const.infer.Success_1'(s(X0,happ(s(fun(X5,X0),'_dst_x0x1_2'(s(fun(X6,X0),X7),s(fun(X5,X6),X8))),s(X5,X9))))),s('type.pair.prod'('type.infer.exc'(X2,X3),X4),'const.infer.st_ex_return_2'(s(X2,X10),s(X4,X11)))))) )),
  inference(forward_demodulation,[],[f10516,f205])).
fof(f10516,plain,(
  ( ! [X6,X4,X2,X0,X10,X8,X7,X5,X3,X1,X11,X9] : (s('type.pair.prod'('type.infer.exc'(X0,X1),'type.pair.prod'('type.infer.exc'(X2,X3),X4)),'const.pair.,_2'(s('type.infer.exc'(X0,X1),'const.infer.Success_1'(s(X0,happ(s(fun(X5,X0),'_dst_x0x1_2'(s(fun(X6,X0),X7),s(fun(X5,X6),X8))),s(X5,X9))))),s('type.pair.prod'('type.infer.exc'(X2,X3),X4),'const.infer.st_ex_return_2'(s(X2,X10),s(X4,X11))))) = s('type.pair.prod'('type.infer.exc'(X0,X1),'type.pair.prod'('type.infer.exc'(X2,X3),X4)),'const.infer.st_ex_return_2'(s(X0,happ(s(fun(X6,X0),X7),s(X6,happ(s(fun(X5,X6),X8),s(X5,X9))))),s('type.pair.prod'('type.infer.exc'(X2,X3),X4),happ(s(fun(X4,'type.pair.prod'('type.infer.exc'(X2,X3),X4)),happ(s(fun(X2,fun(X4,'type.pair.prod'('type.infer.exc'(X2,X3),X4))),'const.infer.st_ex_return_0'),s(X2,X10))),s(X4,X11)))))) )),
  inference(unit_resulting_resolution,[],[f206,f205,f212])).
fof(f10887,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'(X0,X1),'type.pair.prod'('type.infer.exc'(X2,X3),X4)),'const.infer.st_ex_return_2'(s(X0,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(X0),X5))),s('type.pair.prod'('type.infer.exc'(X2,X3),X4),'const.infer.st_ex_return_2'(s(X2,X6),s(X4,X7))))) = s('type.pair.prod'('type.infer.exc'(X0,X1),'type.pair.prod'('type.infer.exc'(X2,X3),X4)),'const.pair.,_2'(s('type.infer.exc'(X0,X1),'const.infer.Success_1'(s(X0,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(X0),X5))))),s('type.pair.prod'('type.infer.exc'(X2,X3),X4),'const.infer.st_ex_return_2'(s(X2,X6),s(X4,X7)))))) )),
  inference(forward_demodulation,[],[f10886,f168])).
fof(f10886,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'(X0,X1),'type.pair.prod'('type.infer.exc'(X2,X3),X4)),'const.pair.,_2'(s('type.infer.exc'(X0,X1),'const.infer.Success_1'(s(X0,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(X0),X5))))),s('type.pair.prod'('type.infer.exc'(X2,X3),X4),'const.infer.st_ex_return_2'(s(X2,X6),s(X4,X7))))) = s('type.pair.prod'('type.infer.exc'(X0,X1),'type.pair.prod'('type.infer.exc'(X2,X3),X4)),'const.infer.st_ex_return_2'(s(X0,happ(s(fun('type.infer.infer_st'(X0),X0),'const.infer.infer_st_subst_0'),s('type.infer.infer_st'(X0),X5))),s('type.pair.prod'('type.infer.exc'(X2,X3),X4),'const.infer.st_ex_return_2'(s(X2,X6),s(X4,X7)))))) )),
  inference(forward_demodulation,[],[f10542,f205])).
fof(f10542,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'(X0,X1),'type.pair.prod'('type.infer.exc'(X2,X3),X4)),'const.pair.,_2'(s('type.infer.exc'(X0,X1),'const.infer.Success_1'(s(X0,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(X0),X5))))),s('type.pair.prod'('type.infer.exc'(X2,X3),X4),'const.infer.st_ex_return_2'(s(X2,X6),s(X4,X7))))) = s('type.pair.prod'('type.infer.exc'(X0,X1),'type.pair.prod'('type.infer.exc'(X2,X3),X4)),'const.infer.st_ex_return_2'(s(X0,happ(s(fun('type.infer.infer_st'(X0),X0),'const.infer.infer_st_subst_0'),s('type.infer.infer_st'(X0),X5))),s('type.pair.prod'('type.infer.exc'(X2,X3),X4),happ(s(fun(X4,'type.pair.prod'('type.infer.exc'(X2,X3),X4)),happ(s(fun(X2,fun(X4,'type.pair.prod'('type.infer.exc'(X2,X3),X4))),'const.infer.st_ex_return_0'),s(X2,X6))),s(X4,X7)))))) )),
  inference(unit_resulting_resolution,[],[f168,f205,f212])).
fof(f10885,plain,(
  ( ! [X6,X4,X2,X0,X10,X8,X7,X5,X3,X1,X11,X9] : (s('type.pair.prod'('type.infer.exc'(X0,X1),'type.pair.prod'('type.infer.exc'(X2,X3),X4)),'const.infer.st_ex_return_2'(s(X0,happ(s(fun(X7,X0),'_dst_x0x1_2'(s(fun(X5,X0),X6),s(fun(X7,X5),X8))),s(X7,X9))),s('type.pair.prod'('type.infer.exc'(X2,X3),X4),'const.infer.st_ex_return_2'(s(X2,X10),s(X4,X11))))) = s('type.pair.prod'('type.infer.exc'(X0,X1),'type.pair.prod'('type.infer.exc'(X2,X3),X4)),'const.pair.,_2'(s('type.infer.exc'(X0,X1),'const.infer.Success_1'(s(X0,happ(s(fun(X5,X0),X6),s(X5,happ(s(fun(X7,X5),X8),s(X7,X9))))))),s('type.pair.prod'('type.infer.exc'(X2,X3),X4),'const.infer.st_ex_return_2'(s(X2,X10),s(X4,X11)))))) )),
  inference(forward_demodulation,[],[f10543,f205])).
fof(f10543,plain,(
  ( ! [X6,X4,X2,X0,X10,X8,X7,X5,X3,X1,X11,X9] : (s('type.pair.prod'('type.infer.exc'(X0,X1),'type.pair.prod'('type.infer.exc'(X2,X3),X4)),'const.pair.,_2'(s('type.infer.exc'(X0,X1),'const.infer.Success_1'(s(X0,happ(s(fun(X5,X0),X6),s(X5,happ(s(fun(X7,X5),X8),s(X7,X9))))))),s('type.pair.prod'('type.infer.exc'(X2,X3),X4),'const.infer.st_ex_return_2'(s(X2,X10),s(X4,X11))))) = s('type.pair.prod'('type.infer.exc'(X0,X1),'type.pair.prod'('type.infer.exc'(X2,X3),X4)),'const.infer.st_ex_return_2'(s(X0,happ(s(fun(X7,X0),'_dst_x0x1_2'(s(fun(X5,X0),X6),s(fun(X7,X5),X8))),s(X7,X9))),s('type.pair.prod'('type.infer.exc'(X2,X3),X4),happ(s(fun(X4,'type.pair.prod'('type.infer.exc'(X2,X3),X4)),happ(s(fun(X2,fun(X4,'type.pair.prod'('type.infer.exc'(X2,X3),X4))),'const.infer.st_ex_return_0'),s(X2,X10))),s(X4,X11)))))) )),
  inference(unit_resulting_resolution,[],[f206,f205,f212])).
fof(f10880,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'(fun(X0,'type.one.one'),X1),'type.pair.prod'('type.infer.exc'(X2,X3),X4)),'const.infer.st_ex_return_2'(s(fun(X0,'type.one.one'),X8),s('type.pair.prod'('type.infer.exc'(X2,X3),X4),'const.infer.st_ex_return_2'(s(X2,X6),s(X4,X7))))) = s('type.pair.prod'('type.infer.exc'(fun(X0,'type.one.one'),X1),'type.pair.prod'('type.infer.exc'(X2,X3),X4)),'const.pair.,_2'(s('type.infer.exc'(fun(X0,'type.one.one'),X1),'const.infer.Success_1'(s(fun(X0,'type.one.one'),X5))),s('type.pair.prod'('type.infer.exc'(X2,X3),X4),'const.infer.st_ex_return_2'(s(X2,X6),s(X4,X7)))))) )),
  inference(forward_demodulation,[],[f10546,f205])).
fof(f10546,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'(fun(X0,'type.one.one'),X1),'type.pair.prod'('type.infer.exc'(X2,X3),X4)),'const.pair.,_2'(s('type.infer.exc'(fun(X0,'type.one.one'),X1),'const.infer.Success_1'(s(fun(X0,'type.one.one'),X5))),s('type.pair.prod'('type.infer.exc'(X2,X3),X4),'const.infer.st_ex_return_2'(s(X2,X6),s(X4,X7))))) = s('type.pair.prod'('type.infer.exc'(fun(X0,'type.one.one'),X1),'type.pair.prod'('type.infer.exc'(X2,X3),X4)),'const.infer.st_ex_return_2'(s(fun(X0,'type.one.one'),X8),s('type.pair.prod'('type.infer.exc'(X2,X3),X4),happ(s(fun(X4,'type.pair.prod'('type.infer.exc'(X2,X3),X4)),happ(s(fun(X2,fun(X4,'type.pair.prod'('type.infer.exc'(X2,X3),X4))),'const.infer.st_ex_return_0'),s(X2,X6))),s(X4,X7)))))) )),
  inference(unit_resulting_resolution,[],[f605,f205,f212])).
fof(f10878,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1,X9] : (s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,'type.one.one')),X2),'type.pair.prod'('type.infer.exc'(X3,X4),X5)),'const.infer.st_ex_return_2'(s(fun(X0,fun(X1,'type.one.one')),X9),s('type.pair.prod'('type.infer.exc'(X3,X4),X5),'const.infer.st_ex_return_2'(s(X3,X7),s(X5,X8))))) = s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,'type.one.one')),X2),'type.pair.prod'('type.infer.exc'(X3,X4),X5)),'const.pair.,_2'(s('type.infer.exc'(fun(X0,fun(X1,'type.one.one')),X2),'const.infer.Success_1'(s(fun(X0,fun(X1,'type.one.one')),X6))),s('type.pair.prod'('type.infer.exc'(X3,X4),X5),'const.infer.st_ex_return_2'(s(X3,X7),s(X5,X8)))))) )),
  inference(forward_demodulation,[],[f10548,f205])).
fof(f10548,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1,X9] : (s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,'type.one.one')),X2),'type.pair.prod'('type.infer.exc'(X3,X4),X5)),'const.pair.,_2'(s('type.infer.exc'(fun(X0,fun(X1,'type.one.one')),X2),'const.infer.Success_1'(s(fun(X0,fun(X1,'type.one.one')),X6))),s('type.pair.prod'('type.infer.exc'(X3,X4),X5),'const.infer.st_ex_return_2'(s(X3,X7),s(X5,X8))))) = s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,'type.one.one')),X2),'type.pair.prod'('type.infer.exc'(X3,X4),X5)),'const.infer.st_ex_return_2'(s(fun(X0,fun(X1,'type.one.one')),X9),s('type.pair.prod'('type.infer.exc'(X3,X4),X5),happ(s(fun(X5,'type.pair.prod'('type.infer.exc'(X3,X4),X5)),happ(s(fun(X3,fun(X5,'type.pair.prod'('type.infer.exc'(X3,X4),X5))),'const.infer.st_ex_return_0'),s(X3,X7))),s(X5,X8)))))) )),
  inference(unit_resulting_resolution,[],[f724,f205,f212])).
fof(f10877,plain,(
  ( ! [X6,X4,X2,X0,X10,X8,X7,X5,X3,X1,X9] : (s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,fun(X2,'type.one.one'))),X3),'type.pair.prod'('type.infer.exc'(X4,X5),X6)),'const.infer.st_ex_return_2'(s(fun(X0,fun(X1,fun(X2,'type.one.one'))),X10),s('type.pair.prod'('type.infer.exc'(X4,X5),X6),'const.infer.st_ex_return_2'(s(X4,X8),s(X6,X9))))) = s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,fun(X2,'type.one.one'))),X3),'type.pair.prod'('type.infer.exc'(X4,X5),X6)),'const.pair.,_2'(s('type.infer.exc'(fun(X0,fun(X1,fun(X2,'type.one.one'))),X3),'const.infer.Success_1'(s(fun(X0,fun(X1,fun(X2,'type.one.one'))),X7))),s('type.pair.prod'('type.infer.exc'(X4,X5),X6),'const.infer.st_ex_return_2'(s(X4,X8),s(X6,X9)))))) )),
  inference(forward_demodulation,[],[f10549,f205])).
fof(f10549,plain,(
  ( ! [X6,X4,X2,X0,X10,X8,X7,X5,X3,X1,X9] : (s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,fun(X2,'type.one.one'))),X3),'type.pair.prod'('type.infer.exc'(X4,X5),X6)),'const.pair.,_2'(s('type.infer.exc'(fun(X0,fun(X1,fun(X2,'type.one.one'))),X3),'const.infer.Success_1'(s(fun(X0,fun(X1,fun(X2,'type.one.one'))),X7))),s('type.pair.prod'('type.infer.exc'(X4,X5),X6),'const.infer.st_ex_return_2'(s(X4,X8),s(X6,X9))))) = s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,fun(X2,'type.one.one'))),X3),'type.pair.prod'('type.infer.exc'(X4,X5),X6)),'const.infer.st_ex_return_2'(s(fun(X0,fun(X1,fun(X2,'type.one.one'))),X10),s('type.pair.prod'('type.infer.exc'(X4,X5),X6),happ(s(fun(X6,'type.pair.prod'('type.infer.exc'(X4,X5),X6)),happ(s(fun(X4,fun(X6,'type.pair.prod'('type.infer.exc'(X4,X5),X6))),'const.infer.st_ex_return_0'),s(X4,X8))),s(X6,X9)))))) )),
  inference(unit_resulting_resolution,[],[f752,f205,f212])).
fof(f10876,plain,(
  ( ! [X6,X4,X2,X0,X10,X8,X7,X5,X3,X1,X11,X9] : (s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,fun(X2,fun(X3,'type.one.one')))),X4),'type.pair.prod'('type.infer.exc'(X5,X6),X7)),'const.infer.st_ex_return_2'(s(fun(X0,fun(X1,fun(X2,fun(X3,'type.one.one')))),X11),s('type.pair.prod'('type.infer.exc'(X5,X6),X7),'const.infer.st_ex_return_2'(s(X5,X9),s(X7,X10))))) = s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,fun(X2,fun(X3,'type.one.one')))),X4),'type.pair.prod'('type.infer.exc'(X5,X6),X7)),'const.pair.,_2'(s('type.infer.exc'(fun(X0,fun(X1,fun(X2,fun(X3,'type.one.one')))),X4),'const.infer.Success_1'(s(fun(X0,fun(X1,fun(X2,fun(X3,'type.one.one')))),X8))),s('type.pair.prod'('type.infer.exc'(X5,X6),X7),'const.infer.st_ex_return_2'(s(X5,X9),s(X7,X10)))))) )),
  inference(forward_demodulation,[],[f10550,f205])).
fof(f10550,plain,(
  ( ! [X6,X4,X2,X0,X10,X8,X7,X5,X3,X1,X11,X9] : (s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,fun(X2,fun(X3,'type.one.one')))),X4),'type.pair.prod'('type.infer.exc'(X5,X6),X7)),'const.pair.,_2'(s('type.infer.exc'(fun(X0,fun(X1,fun(X2,fun(X3,'type.one.one')))),X4),'const.infer.Success_1'(s(fun(X0,fun(X1,fun(X2,fun(X3,'type.one.one')))),X8))),s('type.pair.prod'('type.infer.exc'(X5,X6),X7),'const.infer.st_ex_return_2'(s(X5,X9),s(X7,X10))))) = s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,fun(X2,fun(X3,'type.one.one')))),X4),'type.pair.prod'('type.infer.exc'(X5,X6),X7)),'const.infer.st_ex_return_2'(s(fun(X0,fun(X1,fun(X2,fun(X3,'type.one.one')))),X11),s('type.pair.prod'('type.infer.exc'(X5,X6),X7),happ(s(fun(X7,'type.pair.prod'('type.infer.exc'(X5,X6),X7)),happ(s(fun(X5,fun(X7,'type.pair.prod'('type.infer.exc'(X5,X6),X7))),'const.infer.st_ex_return_0'),s(X5,X9))),s(X7,X10)))))) )),
  inference(unit_resulting_resolution,[],[f787,f205,f212])).
fof(f10875,plain,(
  ( ! [X6,X4,X2,X0,X12,X10,X8,X7,X5,X3,X1,X11,X9] : (s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,fun(X2,fun(X3,fun(X4,'type.one.one'))))),X5),'type.pair.prod'('type.infer.exc'(X6,X7),X8)),'const.infer.st_ex_return_2'(s(fun(X0,fun(X1,fun(X2,fun(X3,fun(X4,'type.one.one'))))),X12),s('type.pair.prod'('type.infer.exc'(X6,X7),X8),'const.infer.st_ex_return_2'(s(X6,X10),s(X8,X11))))) = s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,fun(X2,fun(X3,fun(X4,'type.one.one'))))),X5),'type.pair.prod'('type.infer.exc'(X6,X7),X8)),'const.pair.,_2'(s('type.infer.exc'(fun(X0,fun(X1,fun(X2,fun(X3,fun(X4,'type.one.one'))))),X5),'const.infer.Success_1'(s(fun(X0,fun(X1,fun(X2,fun(X3,fun(X4,'type.one.one'))))),X9))),s('type.pair.prod'('type.infer.exc'(X6,X7),X8),'const.infer.st_ex_return_2'(s(X6,X10),s(X8,X11)))))) )),
  inference(forward_demodulation,[],[f10551,f205])).
fof(f10551,plain,(
  ( ! [X6,X4,X2,X0,X12,X10,X8,X7,X5,X3,X1,X11,X9] : (s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,fun(X2,fun(X3,fun(X4,'type.one.one'))))),X5),'type.pair.prod'('type.infer.exc'(X6,X7),X8)),'const.pair.,_2'(s('type.infer.exc'(fun(X0,fun(X1,fun(X2,fun(X3,fun(X4,'type.one.one'))))),X5),'const.infer.Success_1'(s(fun(X0,fun(X1,fun(X2,fun(X3,fun(X4,'type.one.one'))))),X9))),s('type.pair.prod'('type.infer.exc'(X6,X7),X8),'const.infer.st_ex_return_2'(s(X6,X10),s(X8,X11))))) = s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,fun(X2,fun(X3,fun(X4,'type.one.one'))))),X5),'type.pair.prod'('type.infer.exc'(X6,X7),X8)),'const.infer.st_ex_return_2'(s(fun(X0,fun(X1,fun(X2,fun(X3,fun(X4,'type.one.one'))))),X12),s('type.pair.prod'('type.infer.exc'(X6,X7),X8),happ(s(fun(X8,'type.pair.prod'('type.infer.exc'(X6,X7),X8)),happ(s(fun(X6,fun(X8,'type.pair.prod'('type.infer.exc'(X6,X7),X8))),'const.infer.st_ex_return_0'),s(X6,X10))),s(X8,X11)))))) )),
  inference(unit_resulting_resolution,[],[f815,f205,f212])).
fof(f10871,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.one.one',X0),'type.pair.prod'('type.infer.exc'(X1,X2),X3)),'const.infer.st_ex_return_2'(s('type.one.one',X7),s('type.pair.prod'('type.infer.exc'(X1,X2),X3),'const.infer.st_ex_return_2'(s(X1,X5),s(X3,X6))))) = s('type.pair.prod'('type.infer.exc'('type.one.one',X0),'type.pair.prod'('type.infer.exc'(X1,X2),X3)),'const.pair.,_2'(s('type.infer.exc'('type.one.one',X0),'const.infer.Success_1'(s('type.one.one',X4))),s('type.pair.prod'('type.infer.exc'(X1,X2),X3),'const.infer.st_ex_return_2'(s(X1,X5),s(X3,X6)))))) )),
  inference(forward_demodulation,[],[f10555,f205])).
fof(f10555,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.one.one',X0),'type.pair.prod'('type.infer.exc'(X1,X2),X3)),'const.pair.,_2'(s('type.infer.exc'('type.one.one',X0),'const.infer.Success_1'(s('type.one.one',X4))),s('type.pair.prod'('type.infer.exc'(X1,X2),X3),'const.infer.st_ex_return_2'(s(X1,X5),s(X3,X6))))) = s('type.pair.prod'('type.infer.exc'('type.one.one',X0),'type.pair.prod'('type.infer.exc'(X1,X2),X3)),'const.infer.st_ex_return_2'(s('type.one.one',X7),s('type.pair.prod'('type.infer.exc'(X1,X2),X3),happ(s(fun(X3,'type.pair.prod'('type.infer.exc'(X1,X2),X3)),happ(s(fun(X1,fun(X3,'type.pair.prod'('type.infer.exc'(X1,X2),X3))),'const.infer.st_ex_return_0'),s(X1,X5))),s(X3,X6)))))) )),
  inference(unit_resulting_resolution,[],[f258,f205,f212])).
fof(f10870,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1,X9] : (s('type.pair.prod'('type.infer.exc'('type.list.list'(X0),X1),'type.pair.prod'('type.infer.exc'(X2,X3),X4)),'const.infer.st_ex_return_2'(s('type.list.list'(X0),'const.list.MAP_2'(s(fun(X5,X0),X6),s('type.list.list'(X5),X7))),s('type.pair.prod'('type.infer.exc'(X2,X3),X4),'const.infer.st_ex_return_2'(s(X2,X8),s(X4,X9))))) = s('type.pair.prod'('type.infer.exc'('type.list.list'(X0),X1),'type.pair.prod'('type.infer.exc'(X2,X3),X4)),'const.pair.,_2'(s('type.infer.exc'('type.list.list'(X0),X1),'const.infer.Success_1'(s('type.list.list'(X0),'const.list.MAP_2'(s(fun(X5,X0),X6),s('type.list.list'(X5),X7))))),s('type.pair.prod'('type.infer.exc'(X2,X3),X4),'const.infer.st_ex_return_2'(s(X2,X8),s(X4,X9)))))) )),
  inference(forward_demodulation,[],[f10869,f180])).
fof(f10869,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1,X9] : (s('type.pair.prod'('type.infer.exc'('type.list.list'(X0),X1),'type.pair.prod'('type.infer.exc'(X2,X3),X4)),'const.pair.,_2'(s('type.infer.exc'('type.list.list'(X0),X1),'const.infer.Success_1'(s('type.list.list'(X0),'const.list.MAP_2'(s(fun(X5,X0),X6),s('type.list.list'(X5),X7))))),s('type.pair.prod'('type.infer.exc'(X2,X3),X4),'const.infer.st_ex_return_2'(s(X2,X8),s(X4,X9))))) = s('type.pair.prod'('type.infer.exc'('type.list.list'(X0),X1),'type.pair.prod'('type.infer.exc'(X2,X3),X4)),'const.infer.st_ex_return_2'(s('type.list.list'(X0),happ(s(fun('type.list.list'(X5),'type.list.list'(X0)),happ(s(fun(fun(X5,X0),fun('type.list.list'(X5),'type.list.list'(X0))),'const.list.MAP_0'),s(fun(X5,X0),X6))),s('type.list.list'(X5),X7))),s('type.pair.prod'('type.infer.exc'(X2,X3),X4),'const.infer.st_ex_return_2'(s(X2,X8),s(X4,X9)))))) )),
  inference(forward_demodulation,[],[f10556,f205])).
fof(f10556,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1,X9] : (s('type.pair.prod'('type.infer.exc'('type.list.list'(X0),X1),'type.pair.prod'('type.infer.exc'(X2,X3),X4)),'const.pair.,_2'(s('type.infer.exc'('type.list.list'(X0),X1),'const.infer.Success_1'(s('type.list.list'(X0),'const.list.MAP_2'(s(fun(X5,X0),X6),s('type.list.list'(X5),X7))))),s('type.pair.prod'('type.infer.exc'(X2,X3),X4),'const.infer.st_ex_return_2'(s(X2,X8),s(X4,X9))))) = s('type.pair.prod'('type.infer.exc'('type.list.list'(X0),X1),'type.pair.prod'('type.infer.exc'(X2,X3),X4)),'const.infer.st_ex_return_2'(s('type.list.list'(X0),happ(s(fun('type.list.list'(X5),'type.list.list'(X0)),happ(s(fun(fun(X5,X0),fun('type.list.list'(X5),'type.list.list'(X0))),'const.list.MAP_0'),s(fun(X5,X0),X6))),s('type.list.list'(X5),X7))),s('type.pair.prod'('type.infer.exc'(X2,X3),X4),happ(s(fun(X4,'type.pair.prod'('type.infer.exc'(X2,X3),X4)),happ(s(fun(X2,fun(X4,'type.pair.prod'('type.infer.exc'(X2,X3),X4))),'const.infer.st_ex_return_0'),s(X2,X8))),s(X4,X9)))))) )),
  inference(unit_resulting_resolution,[],[f180,f205,f212])).
fof(f10864,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.num.num',X0),'type.pair.prod'('type.infer.exc'(X1,X2),X3)),'const.infer.st_ex_return_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X4),s('type.num.num',X5))),s('type.pair.prod'('type.infer.exc'(X1,X2),X3),'const.infer.st_ex_return_2'(s(X1,X6),s(X3,X7))))) = s('type.pair.prod'('type.infer.exc'('type.num.num',X0),'type.pair.prod'('type.infer.exc'(X1,X2),X3)),'const.pair.,_2'(s('type.infer.exc'('type.num.num',X0),'const.infer.Success_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X4),s('type.num.num',X5))))),s('type.pair.prod'('type.infer.exc'(X1,X2),X3),'const.infer.st_ex_return_2'(s(X1,X6),s(X3,X7)))))) )),
  inference(forward_demodulation,[],[f10863,f175])).
fof(f10863,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.num.num',X0),'type.pair.prod'('type.infer.exc'(X1,X2),X3)),'const.infer.st_ex_return_2'(s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.arithmetic.+_1'(s('type.num.num',X4))),s('type.num.num',X5))),s('type.pair.prod'('type.infer.exc'(X1,X2),X3),'const.infer.st_ex_return_2'(s(X1,X6),s(X3,X7))))) = s('type.pair.prod'('type.infer.exc'('type.num.num',X0),'type.pair.prod'('type.infer.exc'(X1,X2),X3)),'const.pair.,_2'(s('type.infer.exc'('type.num.num',X0),'const.infer.Success_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X4),s('type.num.num',X5))))),s('type.pair.prod'('type.infer.exc'(X1,X2),X3),'const.infer.st_ex_return_2'(s(X1,X6),s(X3,X7)))))) )),
  inference(forward_demodulation,[],[f10559,f205])).
fof(f10559,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.num.num',X0),'type.pair.prod'('type.infer.exc'(X1,X2),X3)),'const.pair.,_2'(s('type.infer.exc'('type.num.num',X0),'const.infer.Success_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X4),s('type.num.num',X5))))),s('type.pair.prod'('type.infer.exc'(X1,X2),X3),'const.infer.st_ex_return_2'(s(X1,X6),s(X3,X7))))) = s('type.pair.prod'('type.infer.exc'('type.num.num',X0),'type.pair.prod'('type.infer.exc'(X1,X2),X3)),'const.infer.st_ex_return_2'(s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.arithmetic.+_1'(s('type.num.num',X4))),s('type.num.num',X5))),s('type.pair.prod'('type.infer.exc'(X1,X2),X3),happ(s(fun(X3,'type.pair.prod'('type.infer.exc'(X1,X2),X3)),happ(s(fun(X1,fun(X3,'type.pair.prod'('type.infer.exc'(X1,X2),X3))),'const.infer.st_ex_return_0'),s(X1,X6))),s(X3,X7)))))) )),
  inference(unit_resulting_resolution,[],[f175,f205,f212])).
fof(f10862,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.pair.prod'('type.infer.exc'(X1,X2),X3)),'const.infer.st_ex_return_2'(s('type.infer_t.infer_t','const.infer_t.Infer_Tuvar_1'(s('type.num.num',X4))),s('type.pair.prod'('type.infer.exc'(X1,X2),X3),'const.infer.st_ex_return_2'(s(X1,X5),s(X3,X6))))) = s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.pair.prod'('type.infer.exc'(X1,X2),X3)),'const.pair.,_2'(s('type.infer.exc'('type.infer_t.infer_t',X0),'const.infer.Success_1'(s('type.infer_t.infer_t','const.infer_t.Infer_Tuvar_1'(s('type.num.num',X4))))),s('type.pair.prod'('type.infer.exc'(X1,X2),X3),'const.infer.st_ex_return_2'(s(X1,X5),s(X3,X6)))))) )),
  inference(forward_demodulation,[],[f10861,f166])).
fof(f10861,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.pair.prod'('type.infer.exc'(X1,X2),X3)),'const.infer.st_ex_return_2'(s('type.infer_t.infer_t',happ(s(fun('type.num.num','type.infer_t.infer_t'),'const.infer_t.Infer_Tuvar_0'),s('type.num.num',X4))),s('type.pair.prod'('type.infer.exc'(X1,X2),X3),'const.infer.st_ex_return_2'(s(X1,X5),s(X3,X6))))) = s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.pair.prod'('type.infer.exc'(X1,X2),X3)),'const.pair.,_2'(s('type.infer.exc'('type.infer_t.infer_t',X0),'const.infer.Success_1'(s('type.infer_t.infer_t','const.infer_t.Infer_Tuvar_1'(s('type.num.num',X4))))),s('type.pair.prod'('type.infer.exc'(X1,X2),X3),'const.infer.st_ex_return_2'(s(X1,X5),s(X3,X6)))))) )),
  inference(forward_demodulation,[],[f10560,f205])).
fof(f10560,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.pair.prod'('type.infer.exc'(X1,X2),X3)),'const.pair.,_2'(s('type.infer.exc'('type.infer_t.infer_t',X0),'const.infer.Success_1'(s('type.infer_t.infer_t','const.infer_t.Infer_Tuvar_1'(s('type.num.num',X4))))),s('type.pair.prod'('type.infer.exc'(X1,X2),X3),'const.infer.st_ex_return_2'(s(X1,X5),s(X3,X6))))) = s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.pair.prod'('type.infer.exc'(X1,X2),X3)),'const.infer.st_ex_return_2'(s('type.infer_t.infer_t',happ(s(fun('type.num.num','type.infer_t.infer_t'),'const.infer_t.Infer_Tuvar_0'),s('type.num.num',X4))),s('type.pair.prod'('type.infer.exc'(X1,X2),X3),happ(s(fun(X3,'type.pair.prod'('type.infer.exc'(X1,X2),X3)),happ(s(fun(X1,fun(X3,'type.pair.prod'('type.infer.exc'(X1,X2),X3))),'const.infer.st_ex_return_0'),s(X1,X5))),s(X3,X6)))))) )),
  inference(unit_resulting_resolution,[],[f166,f205,f212])).
fof(f10860,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.pair.prod'('type.infer.exc'(X1,X2),X3)),'const.infer.st_ex_return_2'(s('type.infer_t.infer_t','const.unify.t_walkstar_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X4),s('type.infer_t.infer_t',X5))),s('type.pair.prod'('type.infer.exc'(X1,X2),X3),'const.infer.st_ex_return_2'(s(X1,X6),s(X3,X7))))) = s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.pair.prod'('type.infer.exc'(X1,X2),X3)),'const.pair.,_2'(s('type.infer.exc'('type.infer_t.infer_t',X0),'const.infer.Success_1'(s('type.infer_t.infer_t','const.unify.t_walkstar_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X4),s('type.infer_t.infer_t',X5))))),s('type.pair.prod'('type.infer.exc'(X1,X2),X3),'const.infer.st_ex_return_2'(s(X1,X6),s(X3,X7)))))) )),
  inference(forward_demodulation,[],[f10859,f176])).
fof(f10859,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.pair.prod'('type.infer.exc'(X1,X2),X3)),'const.pair.,_2'(s('type.infer.exc'('type.infer_t.infer_t',X0),'const.infer.Success_1'(s('type.infer_t.infer_t','const.unify.t_walkstar_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X4),s('type.infer_t.infer_t',X5))))),s('type.pair.prod'('type.infer.exc'(X1,X2),X3),'const.infer.st_ex_return_2'(s(X1,X6),s(X3,X7))))) = s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.pair.prod'('type.infer.exc'(X1,X2),X3)),'const.infer.st_ex_return_2'(s('type.infer_t.infer_t',happ(s(fun('type.infer_t.infer_t','type.infer_t.infer_t'),happ(s(fun('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),fun('type.infer_t.infer_t','type.infer_t.infer_t')),'const.unify.t_walkstar_0'),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X4))),s('type.infer_t.infer_t',X5))),s('type.pair.prod'('type.infer.exc'(X1,X2),X3),'const.infer.st_ex_return_2'(s(X1,X6),s(X3,X7)))))) )),
  inference(forward_demodulation,[],[f10561,f205])).
fof(f10561,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.pair.prod'('type.infer.exc'(X1,X2),X3)),'const.pair.,_2'(s('type.infer.exc'('type.infer_t.infer_t',X0),'const.infer.Success_1'(s('type.infer_t.infer_t','const.unify.t_walkstar_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X4),s('type.infer_t.infer_t',X5))))),s('type.pair.prod'('type.infer.exc'(X1,X2),X3),'const.infer.st_ex_return_2'(s(X1,X6),s(X3,X7))))) = s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.pair.prod'('type.infer.exc'(X1,X2),X3)),'const.infer.st_ex_return_2'(s('type.infer_t.infer_t',happ(s(fun('type.infer_t.infer_t','type.infer_t.infer_t'),happ(s(fun('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),fun('type.infer_t.infer_t','type.infer_t.infer_t')),'const.unify.t_walkstar_0'),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X4))),s('type.infer_t.infer_t',X5))),s('type.pair.prod'('type.infer.exc'(X1,X2),X3),happ(s(fun(X3,'type.pair.prod'('type.infer.exc'(X1,X2),X3)),happ(s(fun(X1,fun(X3,'type.pair.prod'('type.infer.exc'(X1,X2),X3))),'const.infer.st_ex_return_0'),s(X1,X6))),s(X3,X7)))))) )),
  inference(unit_resulting_resolution,[],[f176,f205,f212])).
fof(f10856,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X0),X2),'type.pair.prod'('type.infer.exc'(X3,X4),X5)),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'(X0,X1),X0),'const.infer.read_1'(s(X0,X6))),s('type.pair.prod'('type.infer.exc'(X3,X4),X5),'const.infer.st_ex_return_2'(s(X3,X7),s(X5,X8))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X0),X2),'type.pair.prod'('type.infer.exc'(X3,X4),X5)),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X0),X2),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'(X0,X1),X0),'const.infer.read_1'(s(X0,X6))))),s('type.pair.prod'('type.infer.exc'(X3,X4),X5),'const.infer.st_ex_return_2'(s(X3,X7),s(X5,X8)))))) )),
  inference(forward_demodulation,[],[f10855,f178])).
fof(f10855,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X0),X2),'type.pair.prod'('type.infer.exc'(X3,X4),X5)),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X0),X2),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'(X0,X1),X0),'const.infer.read_1'(s(X0,X6))))),s('type.pair.prod'('type.infer.exc'(X3,X4),X5),'const.infer.st_ex_return_2'(s(X3,X7),s(X5,X8))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X0),X2),'type.pair.prod'('type.infer.exc'(X3,X4),X5)),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'(X0,X1),X0),happ(s(fun(X0,'type.pair.prod'('type.infer.exc'(X0,X1),X0)),'const.infer.read_0'),s(X0,X6))),s('type.pair.prod'('type.infer.exc'(X3,X4),X5),'const.infer.st_ex_return_2'(s(X3,X7),s(X5,X8)))))) )),
  inference(forward_demodulation,[],[f10563,f205])).
fof(f10563,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X0),X2),'type.pair.prod'('type.infer.exc'(X3,X4),X5)),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X0),X2),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'(X0,X1),X0),'const.infer.read_1'(s(X0,X6))))),s('type.pair.prod'('type.infer.exc'(X3,X4),X5),'const.infer.st_ex_return_2'(s(X3,X7),s(X5,X8))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X0),X2),'type.pair.prod'('type.infer.exc'(X3,X4),X5)),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'(X0,X1),X0),happ(s(fun(X0,'type.pair.prod'('type.infer.exc'(X0,X1),X0)),'const.infer.read_0'),s(X0,X6))),s('type.pair.prod'('type.infer.exc'(X3,X4),X5),happ(s(fun(X5,'type.pair.prod'('type.infer.exc'(X3,X4),X5)),happ(s(fun(X3,fun(X5,'type.pair.prod'('type.infer.exc'(X3,X4),X5))),'const.infer.st_ex_return_0'),s(X3,X7))),s(X5,X8)))))) )),
  inference(unit_resulting_resolution,[],[f178,f205,f212])).
fof(f10850,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),X2),'type.pair.prod'('type.infer.exc'(X3,X4),X5)),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),'const.infer.fresh_uvar_1'(s('type.infer.infer_st'(X1),X6))),s('type.pair.prod'('type.infer.exc'(X3,X4),X5),'const.infer.st_ex_return_2'(s(X3,X7),s(X5,X8))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),X2),'type.pair.prod'('type.infer.exc'(X3,X4),X5)),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),X2),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),'const.infer.fresh_uvar_1'(s('type.infer.infer_st'(X1),X6))))),s('type.pair.prod'('type.infer.exc'(X3,X4),X5),'const.infer.st_ex_return_2'(s(X3,X7),s(X5,X8)))))) )),
  inference(forward_demodulation,[],[f10849,f179])).
fof(f10849,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),X2),'type.pair.prod'('type.infer.exc'(X3,X4),X5)),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),X2),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),'const.infer.fresh_uvar_1'(s('type.infer.infer_st'(X1),X6))))),s('type.pair.prod'('type.infer.exc'(X3,X4),X5),'const.infer.st_ex_return_2'(s(X3,X7),s(X5,X8))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),X2),'type.pair.prod'('type.infer.exc'(X3,X4),X5)),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),happ(s(fun('type.infer.infer_st'(X1),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1))),'const.infer.fresh_uvar_0'),s('type.infer.infer_st'(X1),X6))),s('type.pair.prod'('type.infer.exc'(X3,X4),X5),'const.infer.st_ex_return_2'(s(X3,X7),s(X5,X8)))))) )),
  inference(forward_demodulation,[],[f10566,f205])).
fof(f10566,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),X2),'type.pair.prod'('type.infer.exc'(X3,X4),X5)),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),X2),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),'const.infer.fresh_uvar_1'(s('type.infer.infer_st'(X1),X6))))),s('type.pair.prod'('type.infer.exc'(X3,X4),X5),'const.infer.st_ex_return_2'(s(X3,X7),s(X5,X8))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),X2),'type.pair.prod'('type.infer.exc'(X3,X4),X5)),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),happ(s(fun('type.infer.infer_st'(X1),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1))),'const.infer.fresh_uvar_0'),s('type.infer.infer_st'(X1),X6))),s('type.pair.prod'('type.infer.exc'(X3,X4),X5),happ(s(fun(X5,'type.pair.prod'('type.infer.exc'(X3,X4),X5)),happ(s(fun(X3,fun(X5,'type.pair.prod'('type.infer.exc'(X3,X4),X5))),'const.infer.st_ex_return_0'),s(X3,X7))),s(X5,X8)))))) )),
  inference(unit_resulting_resolution,[],[f179,f205,f212])).
fof(f10848,plain,(
  ( ! [X6,X4,X2,X0,X10,X8,X7,X5,X3,X1,X9] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),'type.pair.prod'('type.infer.exc'(X4,X5),X6)),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'(X0,X1),X2),'const.infer.failwith_2'(s(X1,X7),s(X2,X8))),s('type.pair.prod'('type.infer.exc'(X4,X5),X6),'const.infer.st_ex_return_2'(s(X4,X9),s(X6,X10))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),'type.pair.prod'('type.infer.exc'(X4,X5),X6)),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'(X0,X1),X2),'const.infer.failwith_2'(s(X1,X7),s(X2,X8))))),s('type.pair.prod'('type.infer.exc'(X4,X5),X6),'const.infer.st_ex_return_2'(s(X4,X9),s(X6,X10)))))) )),
  inference(forward_demodulation,[],[f10847,f204])).
fof(f10847,plain,(
  ( ! [X6,X4,X2,X0,X10,X8,X7,X5,X3,X1,X9] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),'type.pair.prod'('type.infer.exc'(X4,X5),X6)),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'(X0,X1),X2),'const.infer.failwith_2'(s(X1,X7),s(X2,X8))))),s('type.pair.prod'('type.infer.exc'(X4,X5),X6),'const.infer.st_ex_return_2'(s(X4,X9),s(X6,X10))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),'type.pair.prod'('type.infer.exc'(X4,X5),X6)),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'(X0,X1),X2),happ(s(fun(X2,'type.pair.prod'('type.infer.exc'(X0,X1),X2)),'const.infer.failwith_1'(s(X1,X7))),s(X2,X8))),s('type.pair.prod'('type.infer.exc'(X4,X5),X6),'const.infer.st_ex_return_2'(s(X4,X9),s(X6,X10)))))) )),
  inference(forward_demodulation,[],[f10567,f205])).
fof(f10567,plain,(
  ( ! [X6,X4,X2,X0,X10,X8,X7,X5,X3,X1,X9] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),'type.pair.prod'('type.infer.exc'(X4,X5),X6)),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'(X0,X1),X2),'const.infer.failwith_2'(s(X1,X7),s(X2,X8))))),s('type.pair.prod'('type.infer.exc'(X4,X5),X6),'const.infer.st_ex_return_2'(s(X4,X9),s(X6,X10))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),'type.pair.prod'('type.infer.exc'(X4,X5),X6)),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'(X0,X1),X2),happ(s(fun(X2,'type.pair.prod'('type.infer.exc'(X0,X1),X2)),'const.infer.failwith_1'(s(X1,X7))),s(X2,X8))),s('type.pair.prod'('type.infer.exc'(X4,X5),X6),happ(s(fun(X6,'type.pair.prod'('type.infer.exc'(X4,X5),X6)),happ(s(fun(X4,fun(X6,'type.pair.prod'('type.infer.exc'(X4,X5),X6))),'const.infer.st_ex_return_0'),s(X4,X9))),s(X6,X10)))))) )),
  inference(unit_resulting_resolution,[],[f204,f205,f212])).
fof(f10846,plain,(
  ( ! [X6,X4,X2,X0,X10,X8,X7,X5,X3,X1,X9] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),X2),'type.pair.prod'('type.infer.exc'(X3,X4),X5)),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),'const.infer.guard_3'(s(bool,X6),s(X0,X7),s(X1,X8))),s('type.pair.prod'('type.infer.exc'(X3,X4),X5),'const.infer.st_ex_return_2'(s(X3,X9),s(X5,X10))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),X2),'type.pair.prod'('type.infer.exc'(X3,X4),X5)),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),X2),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),'const.infer.guard_3'(s(bool,X6),s(X0,X7),s(X1,X8))))),s('type.pair.prod'('type.infer.exc'(X3,X4),X5),'const.infer.st_ex_return_2'(s(X3,X9),s(X5,X10)))))) )),
  inference(forward_demodulation,[],[f10845,f183])).
fof(f10845,plain,(
  ( ! [X6,X4,X2,X0,X10,X8,X7,X5,X3,X1,X9] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),X2),'type.pair.prod'('type.infer.exc'(X3,X4),X5)),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),X2),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),'const.infer.guard_3'(s(bool,X6),s(X0,X7),s(X1,X8))))),s('type.pair.prod'('type.infer.exc'(X3,X4),X5),'const.infer.st_ex_return_2'(s(X3,X9),s(X5,X10))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),X2),'type.pair.prod'('type.infer.exc'(X3,X4),X5)),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),happ(s(fun(X1,'type.pair.prod'('type.infer.exc'('type.one.one',X0),X1)),'const.infer.guard_2'(s(bool,X6),s(X0,X7))),s(X1,X8))),s('type.pair.prod'('type.infer.exc'(X3,X4),X5),'const.infer.st_ex_return_2'(s(X3,X9),s(X5,X10)))))) )),
  inference(forward_demodulation,[],[f10568,f205])).
fof(f10568,plain,(
  ( ! [X6,X4,X2,X0,X10,X8,X7,X5,X3,X1,X9] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),X2),'type.pair.prod'('type.infer.exc'(X3,X4),X5)),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),X2),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),'const.infer.guard_3'(s(bool,X6),s(X0,X7),s(X1,X8))))),s('type.pair.prod'('type.infer.exc'(X3,X4),X5),'const.infer.st_ex_return_2'(s(X3,X9),s(X5,X10))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),X2),'type.pair.prod'('type.infer.exc'(X3,X4),X5)),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),happ(s(fun(X1,'type.pair.prod'('type.infer.exc'('type.one.one',X0),X1)),'const.infer.guard_2'(s(bool,X6),s(X0,X7))),s(X1,X8))),s('type.pair.prod'('type.infer.exc'(X3,X4),X5),happ(s(fun(X5,'type.pair.prod'('type.infer.exc'(X3,X4),X5)),happ(s(fun(X3,fun(X5,'type.pair.prod'('type.infer.exc'(X3,X4),X5))),'const.infer.st_ex_return_0'),s(X3,X9))),s(X5,X10)))))) )),
  inference(unit_resulting_resolution,[],[f183,f205,f212])).
fof(f10842,plain,(
  ( ! [X6,X4,X2,X0,X10,X8,X7,X5,X3,X1,X11,X9] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),X4),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'(X0,X1),X2),'const.infer.st_ex_return_2'(s(X0,X5),s(X2,X6))),s(X4,happ(s(fun(X8,X4),X9),s(X8,happ(s(fun(X7,X8),X10),s(X7,X11))))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),X4),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'(X0,X1),X2),'const.infer.st_ex_return_2'(s(X0,X5),s(X2,X6))))),s(X4,happ(s(fun(X7,X4),'_dst_x0x1_2'(s(fun(X8,X4),X9),s(fun(X7,X8),X10))),s(X7,X11)))))) )),
  inference(forward_demodulation,[],[f10570,f205])).
fof(f10570,plain,(
  ( ! [X6,X4,X2,X0,X10,X8,X7,X5,X3,X1,X11,X9] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),X4),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'(X0,X1),X2),'const.infer.st_ex_return_2'(s(X0,X5),s(X2,X6))))),s(X4,happ(s(fun(X7,X4),'_dst_x0x1_2'(s(fun(X8,X4),X9),s(fun(X7,X8),X10))),s(X7,X11))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),X4),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'(X0,X1),X2),happ(s(fun(X2,'type.pair.prod'('type.infer.exc'(X0,X1),X2)),happ(s(fun(X0,fun(X2,'type.pair.prod'('type.infer.exc'(X0,X1),X2))),'const.infer.st_ex_return_0'),s(X0,X5))),s(X2,X6))),s(X4,happ(s(fun(X8,X4),X9),s(X8,happ(s(fun(X7,X8),X10),s(X7,X11)))))))) )),
  inference(unit_resulting_resolution,[],[f206,f205,f212])).
fof(f10801,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),X4),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'(X0,X1),X2),'const.infer.st_ex_return_2'(s(X0,X5),s(X2,X6))),s(X4,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(X4),X7))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),X4),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'(X0,X1),X2),'const.infer.st_ex_return_2'(s(X0,X5),s(X2,X6))))),s(X4,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(X4),X7)))))) )),
  inference(forward_demodulation,[],[f10800,f205])).
fof(f10800,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),X4),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'(X0,X1),X2),'const.infer.st_ex_return_2'(s(X0,X5),s(X2,X6))))),s(X4,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(X4),X7))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),X4),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'(X0,X1),X2),happ(s(fun(X2,'type.pair.prod'('type.infer.exc'(X0,X1),X2)),happ(s(fun(X0,fun(X2,'type.pair.prod'('type.infer.exc'(X0,X1),X2))),'const.infer.st_ex_return_0'),s(X0,X5))),s(X2,X6))),s(X4,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(X4),X7)))))) )),
  inference(forward_demodulation,[],[f10596,f168])).
fof(f10596,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),X4),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'(X0,X1),X2),'const.infer.st_ex_return_2'(s(X0,X5),s(X2,X6))))),s(X4,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(X4),X7))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),X4),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'(X0,X1),X2),happ(s(fun(X2,'type.pair.prod'('type.infer.exc'(X0,X1),X2)),happ(s(fun(X0,fun(X2,'type.pair.prod'('type.infer.exc'(X0,X1),X2))),'const.infer.st_ex_return_0'),s(X0,X5))),s(X2,X6))),s(X4,happ(s(fun('type.infer.infer_st'(X4),X4),'const.infer.infer_st_subst_0'),s('type.infer.infer_st'(X4),X7)))))) )),
  inference(unit_resulting_resolution,[],[f168,f205,f212])).
fof(f10799,plain,(
  ( ! [X6,X4,X2,X0,X10,X8,X7,X5,X3,X1,X11,X9] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),X4),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'(X0,X1),X2),'const.infer.st_ex_return_2'(s(X0,X5),s(X2,X6))),s(X4,happ(s(fun(X9,X4),'_dst_x0x1_2'(s(fun(X7,X4),X8),s(fun(X9,X7),X10))),s(X9,X11))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),X4),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'(X0,X1),X2),'const.infer.st_ex_return_2'(s(X0,X5),s(X2,X6))))),s(X4,happ(s(fun(X7,X4),X8),s(X7,happ(s(fun(X9,X7),X10),s(X9,X11)))))))) )),
  inference(forward_demodulation,[],[f10597,f205])).
fof(f10597,plain,(
  ( ! [X6,X4,X2,X0,X10,X8,X7,X5,X3,X1,X11,X9] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),X4),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'(X0,X1),X2),'const.infer.st_ex_return_2'(s(X0,X5),s(X2,X6))))),s(X4,happ(s(fun(X7,X4),X8),s(X7,happ(s(fun(X9,X7),X10),s(X9,X11))))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),X4),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'(X0,X1),X2),happ(s(fun(X2,'type.pair.prod'('type.infer.exc'(X0,X1),X2)),happ(s(fun(X0,fun(X2,'type.pair.prod'('type.infer.exc'(X0,X1),X2))),'const.infer.st_ex_return_0'),s(X0,X5))),s(X2,X6))),s(X4,happ(s(fun(X9,X4),'_dst_x0x1_2'(s(fun(X7,X4),X8),s(fun(X9,X7),X10))),s(X9,X11)))))) )),
  inference(unit_resulting_resolution,[],[f206,f205,f212])).
fof(f10794,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),fun(X4,'type.one.one')),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'(X0,X1),X2),'const.infer.st_ex_return_2'(s(X0,X5),s(X2,X6))),s(fun(X4,'type.one.one'),X8))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),fun(X4,'type.one.one')),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'(X0,X1),X2),'const.infer.st_ex_return_2'(s(X0,X5),s(X2,X6))))),s(fun(X4,'type.one.one'),X7)))) )),
  inference(forward_demodulation,[],[f10600,f205])).
fof(f10600,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),fun(X4,'type.one.one')),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'(X0,X1),X2),'const.infer.st_ex_return_2'(s(X0,X5),s(X2,X6))))),s(fun(X4,'type.one.one'),X7))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),fun(X4,'type.one.one')),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'(X0,X1),X2),happ(s(fun(X2,'type.pair.prod'('type.infer.exc'(X0,X1),X2)),happ(s(fun(X0,fun(X2,'type.pair.prod'('type.infer.exc'(X0,X1),X2))),'const.infer.st_ex_return_0'),s(X0,X5))),s(X2,X6))),s(fun(X4,'type.one.one'),X8)))) )),
  inference(unit_resulting_resolution,[],[f605,f205,f212])).
fof(f10792,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1,X9] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),fun(X4,fun(X5,'type.one.one'))),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'(X0,X1),X2),'const.infer.st_ex_return_2'(s(X0,X6),s(X2,X7))),s(fun(X4,fun(X5,'type.one.one')),X9))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),fun(X4,fun(X5,'type.one.one'))),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'(X0,X1),X2),'const.infer.st_ex_return_2'(s(X0,X6),s(X2,X7))))),s(fun(X4,fun(X5,'type.one.one')),X8)))) )),
  inference(forward_demodulation,[],[f10602,f205])).
fof(f10602,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1,X9] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),fun(X4,fun(X5,'type.one.one'))),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'(X0,X1),X2),'const.infer.st_ex_return_2'(s(X0,X6),s(X2,X7))))),s(fun(X4,fun(X5,'type.one.one')),X8))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),fun(X4,fun(X5,'type.one.one'))),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'(X0,X1),X2),happ(s(fun(X2,'type.pair.prod'('type.infer.exc'(X0,X1),X2)),happ(s(fun(X0,fun(X2,'type.pair.prod'('type.infer.exc'(X0,X1),X2))),'const.infer.st_ex_return_0'),s(X0,X6))),s(X2,X7))),s(fun(X4,fun(X5,'type.one.one')),X9)))) )),
  inference(unit_resulting_resolution,[],[f724,f205,f212])).
fof(f10791,plain,(
  ( ! [X6,X4,X2,X0,X10,X8,X7,X5,X3,X1,X9] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),fun(X4,fun(X5,fun(X6,'type.one.one')))),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'(X0,X1),X2),'const.infer.st_ex_return_2'(s(X0,X7),s(X2,X8))),s(fun(X4,fun(X5,fun(X6,'type.one.one'))),X10))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),fun(X4,fun(X5,fun(X6,'type.one.one')))),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'(X0,X1),X2),'const.infer.st_ex_return_2'(s(X0,X7),s(X2,X8))))),s(fun(X4,fun(X5,fun(X6,'type.one.one'))),X9)))) )),
  inference(forward_demodulation,[],[f10603,f205])).
fof(f10603,plain,(
  ( ! [X6,X4,X2,X0,X10,X8,X7,X5,X3,X1,X9] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),fun(X4,fun(X5,fun(X6,'type.one.one')))),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'(X0,X1),X2),'const.infer.st_ex_return_2'(s(X0,X7),s(X2,X8))))),s(fun(X4,fun(X5,fun(X6,'type.one.one'))),X9))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),fun(X4,fun(X5,fun(X6,'type.one.one')))),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'(X0,X1),X2),happ(s(fun(X2,'type.pair.prod'('type.infer.exc'(X0,X1),X2)),happ(s(fun(X0,fun(X2,'type.pair.prod'('type.infer.exc'(X0,X1),X2))),'const.infer.st_ex_return_0'),s(X0,X7))),s(X2,X8))),s(fun(X4,fun(X5,fun(X6,'type.one.one'))),X10)))) )),
  inference(unit_resulting_resolution,[],[f752,f205,f212])).
fof(f10790,plain,(
  ( ! [X6,X4,X2,X0,X10,X8,X7,X5,X3,X1,X11,X9] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),fun(X4,fun(X5,fun(X6,fun(X7,'type.one.one'))))),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'(X0,X1),X2),'const.infer.st_ex_return_2'(s(X0,X8),s(X2,X9))),s(fun(X4,fun(X5,fun(X6,fun(X7,'type.one.one')))),X11))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),fun(X4,fun(X5,fun(X6,fun(X7,'type.one.one'))))),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'(X0,X1),X2),'const.infer.st_ex_return_2'(s(X0,X8),s(X2,X9))))),s(fun(X4,fun(X5,fun(X6,fun(X7,'type.one.one')))),X10)))) )),
  inference(forward_demodulation,[],[f10604,f205])).
fof(f10604,plain,(
  ( ! [X6,X4,X2,X0,X10,X8,X7,X5,X3,X1,X11,X9] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),fun(X4,fun(X5,fun(X6,fun(X7,'type.one.one'))))),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'(X0,X1),X2),'const.infer.st_ex_return_2'(s(X0,X8),s(X2,X9))))),s(fun(X4,fun(X5,fun(X6,fun(X7,'type.one.one')))),X10))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),fun(X4,fun(X5,fun(X6,fun(X7,'type.one.one'))))),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'(X0,X1),X2),happ(s(fun(X2,'type.pair.prod'('type.infer.exc'(X0,X1),X2)),happ(s(fun(X0,fun(X2,'type.pair.prod'('type.infer.exc'(X0,X1),X2))),'const.infer.st_ex_return_0'),s(X0,X8))),s(X2,X9))),s(fun(X4,fun(X5,fun(X6,fun(X7,'type.one.one')))),X11)))) )),
  inference(unit_resulting_resolution,[],[f787,f205,f212])).
fof(f10789,plain,(
  ( ! [X6,X4,X2,X0,X12,X10,X8,X7,X5,X3,X1,X11,X9] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),fun(X4,fun(X5,fun(X6,fun(X7,fun(X8,'type.one.one')))))),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'(X0,X1),X2),'const.infer.st_ex_return_2'(s(X0,X9),s(X2,X10))),s(fun(X4,fun(X5,fun(X6,fun(X7,fun(X8,'type.one.one'))))),X12))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),fun(X4,fun(X5,fun(X6,fun(X7,fun(X8,'type.one.one')))))),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'(X0,X1),X2),'const.infer.st_ex_return_2'(s(X0,X9),s(X2,X10))))),s(fun(X4,fun(X5,fun(X6,fun(X7,fun(X8,'type.one.one'))))),X11)))) )),
  inference(forward_demodulation,[],[f10605,f205])).
fof(f10605,plain,(
  ( ! [X6,X4,X2,X0,X12,X10,X8,X7,X5,X3,X1,X11,X9] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),fun(X4,fun(X5,fun(X6,fun(X7,fun(X8,'type.one.one')))))),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'(X0,X1),X2),'const.infer.st_ex_return_2'(s(X0,X9),s(X2,X10))))),s(fun(X4,fun(X5,fun(X6,fun(X7,fun(X8,'type.one.one'))))),X11))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),fun(X4,fun(X5,fun(X6,fun(X7,fun(X8,'type.one.one')))))),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'(X0,X1),X2),happ(s(fun(X2,'type.pair.prod'('type.infer.exc'(X0,X1),X2)),happ(s(fun(X0,fun(X2,'type.pair.prod'('type.infer.exc'(X0,X1),X2))),'const.infer.st_ex_return_0'),s(X0,X9))),s(X2,X10))),s(fun(X4,fun(X5,fun(X6,fun(X7,fun(X8,'type.one.one'))))),X12)))) )),
  inference(unit_resulting_resolution,[],[f815,f205,f212])).
fof(f10785,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),'type.one.one'),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'(X0,X1),X2),'const.infer.st_ex_return_2'(s(X0,X4),s(X2,X5))),s('type.one.one',X7))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),'type.one.one'),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'(X0,X1),X2),'const.infer.st_ex_return_2'(s(X0,X4),s(X2,X5))))),s('type.one.one',X6)))) )),
  inference(forward_demodulation,[],[f10609,f205])).
fof(f10609,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),'type.one.one'),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'(X0,X1),X2),'const.infer.st_ex_return_2'(s(X0,X4),s(X2,X5))))),s('type.one.one',X6))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),'type.one.one'),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'(X0,X1),X2),happ(s(fun(X2,'type.pair.prod'('type.infer.exc'(X0,X1),X2)),happ(s(fun(X0,fun(X2,'type.pair.prod'('type.infer.exc'(X0,X1),X2))),'const.infer.st_ex_return_0'),s(X0,X4))),s(X2,X5))),s('type.one.one',X7)))) )),
  inference(unit_resulting_resolution,[],[f258,f205,f212])).
fof(f10784,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1,X9] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),'type.list.list'(X4)),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'(X0,X1),X2),'const.infer.st_ex_return_2'(s(X0,X5),s(X2,X6))),s('type.list.list'(X4),'const.list.MAP_2'(s(fun(X7,X4),X8),s('type.list.list'(X7),X9))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),'type.list.list'(X4)),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'(X0,X1),X2),'const.infer.st_ex_return_2'(s(X0,X5),s(X2,X6))))),s('type.list.list'(X4),'const.list.MAP_2'(s(fun(X7,X4),X8),s('type.list.list'(X7),X9)))))) )),
  inference(forward_demodulation,[],[f10783,f205])).
fof(f10783,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1,X9] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),'type.list.list'(X4)),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'(X0,X1),X2),'const.infer.st_ex_return_2'(s(X0,X5),s(X2,X6))))),s('type.list.list'(X4),'const.list.MAP_2'(s(fun(X7,X4),X8),s('type.list.list'(X7),X9))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),'type.list.list'(X4)),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'(X0,X1),X2),happ(s(fun(X2,'type.pair.prod'('type.infer.exc'(X0,X1),X2)),happ(s(fun(X0,fun(X2,'type.pair.prod'('type.infer.exc'(X0,X1),X2))),'const.infer.st_ex_return_0'),s(X0,X5))),s(X2,X6))),s('type.list.list'(X4),'const.list.MAP_2'(s(fun(X7,X4),X8),s('type.list.list'(X7),X9)))))) )),
  inference(forward_demodulation,[],[f10610,f180])).
fof(f10610,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1,X9] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),'type.list.list'(X4)),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'(X0,X1),X2),'const.infer.st_ex_return_2'(s(X0,X5),s(X2,X6))))),s('type.list.list'(X4),'const.list.MAP_2'(s(fun(X7,X4),X8),s('type.list.list'(X7),X9))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),'type.list.list'(X4)),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'(X0,X1),X2),happ(s(fun(X2,'type.pair.prod'('type.infer.exc'(X0,X1),X2)),happ(s(fun(X0,fun(X2,'type.pair.prod'('type.infer.exc'(X0,X1),X2))),'const.infer.st_ex_return_0'),s(X0,X5))),s(X2,X6))),s('type.list.list'(X4),happ(s(fun('type.list.list'(X7),'type.list.list'(X4)),happ(s(fun(fun(X7,X4),fun('type.list.list'(X7),'type.list.list'(X4))),'const.list.MAP_0'),s(fun(X7,X4),X8))),s('type.list.list'(X7),X9)))))) )),
  inference(unit_resulting_resolution,[],[f180,f205,f212])).
fof(f10778,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),'type.num.num'),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'(X0,X1),X2),'const.infer.st_ex_return_2'(s(X0,X4),s(X2,X5))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X6),s('type.num.num',X7))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),'type.num.num'),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'(X0,X1),X2),'const.infer.st_ex_return_2'(s(X0,X4),s(X2,X5))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X6),s('type.num.num',X7)))))) )),
  inference(forward_demodulation,[],[f10777,f205])).
fof(f10777,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),'type.num.num'),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'(X0,X1),X2),'const.infer.st_ex_return_2'(s(X0,X4),s(X2,X5))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X6),s('type.num.num',X7))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),'type.num.num'),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'(X0,X1),X2),happ(s(fun(X2,'type.pair.prod'('type.infer.exc'(X0,X1),X2)),happ(s(fun(X0,fun(X2,'type.pair.prod'('type.infer.exc'(X0,X1),X2))),'const.infer.st_ex_return_0'),s(X0,X4))),s(X2,X5))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X6),s('type.num.num',X7)))))) )),
  inference(forward_demodulation,[],[f10613,f175])).
fof(f10613,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),'type.num.num'),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'(X0,X1),X2),'const.infer.st_ex_return_2'(s(X0,X4),s(X2,X5))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X6),s('type.num.num',X7))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),'type.num.num'),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'(X0,X1),X2),happ(s(fun(X2,'type.pair.prod'('type.infer.exc'(X0,X1),X2)),happ(s(fun(X0,fun(X2,'type.pair.prod'('type.infer.exc'(X0,X1),X2))),'const.infer.st_ex_return_0'),s(X0,X4))),s(X2,X5))),s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.arithmetic.+_1'(s('type.num.num',X6))),s('type.num.num',X7)))))) )),
  inference(unit_resulting_resolution,[],[f175,f205,f212])).
fof(f10776,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),'type.infer_t.infer_t'),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'(X0,X1),X2),'const.infer.st_ex_return_2'(s(X0,X4),s(X2,X5))),s('type.infer_t.infer_t','const.infer_t.Infer_Tuvar_1'(s('type.num.num',X6))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),'type.infer_t.infer_t'),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'(X0,X1),X2),'const.infer.st_ex_return_2'(s(X0,X4),s(X2,X5))))),s('type.infer_t.infer_t','const.infer_t.Infer_Tuvar_1'(s('type.num.num',X6)))))) )),
  inference(forward_demodulation,[],[f10775,f205])).
fof(f10775,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),'type.infer_t.infer_t'),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'(X0,X1),X2),'const.infer.st_ex_return_2'(s(X0,X4),s(X2,X5))))),s('type.infer_t.infer_t','const.infer_t.Infer_Tuvar_1'(s('type.num.num',X6))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),'type.infer_t.infer_t'),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'(X0,X1),X2),happ(s(fun(X2,'type.pair.prod'('type.infer.exc'(X0,X1),X2)),happ(s(fun(X0,fun(X2,'type.pair.prod'('type.infer.exc'(X0,X1),X2))),'const.infer.st_ex_return_0'),s(X0,X4))),s(X2,X5))),s('type.infer_t.infer_t','const.infer_t.Infer_Tuvar_1'(s('type.num.num',X6)))))) )),
  inference(forward_demodulation,[],[f10614,f166])).
fof(f10614,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),'type.infer_t.infer_t'),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'(X0,X1),X2),'const.infer.st_ex_return_2'(s(X0,X4),s(X2,X5))))),s('type.infer_t.infer_t','const.infer_t.Infer_Tuvar_1'(s('type.num.num',X6))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),'type.infer_t.infer_t'),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'(X0,X1),X2),happ(s(fun(X2,'type.pair.prod'('type.infer.exc'(X0,X1),X2)),happ(s(fun(X0,fun(X2,'type.pair.prod'('type.infer.exc'(X0,X1),X2))),'const.infer.st_ex_return_0'),s(X0,X4))),s(X2,X5))),s('type.infer_t.infer_t',happ(s(fun('type.num.num','type.infer_t.infer_t'),'const.infer_t.Infer_Tuvar_0'),s('type.num.num',X6)))))) )),
  inference(unit_resulting_resolution,[],[f166,f205,f212])).
fof(f10774,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),'type.infer_t.infer_t'),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'(X0,X1),X2),'const.infer.st_ex_return_2'(s(X0,X4),s(X2,X5))),s('type.infer_t.infer_t','const.unify.t_walkstar_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X6),s('type.infer_t.infer_t',X7))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),'type.infer_t.infer_t'),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'(X0,X1),X2),'const.infer.st_ex_return_2'(s(X0,X4),s(X2,X5))))),s('type.infer_t.infer_t','const.unify.t_walkstar_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X6),s('type.infer_t.infer_t',X7)))))) )),
  inference(forward_demodulation,[],[f10773,f205])).
fof(f10773,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),'type.infer_t.infer_t'),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'(X0,X1),X2),'const.infer.st_ex_return_2'(s(X0,X4),s(X2,X5))))),s('type.infer_t.infer_t','const.unify.t_walkstar_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X6),s('type.infer_t.infer_t',X7))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),'type.infer_t.infer_t'),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'(X0,X1),X2),happ(s(fun(X2,'type.pair.prod'('type.infer.exc'(X0,X1),X2)),happ(s(fun(X0,fun(X2,'type.pair.prod'('type.infer.exc'(X0,X1),X2))),'const.infer.st_ex_return_0'),s(X0,X4))),s(X2,X5))),s('type.infer_t.infer_t','const.unify.t_walkstar_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X6),s('type.infer_t.infer_t',X7)))))) )),
  inference(forward_demodulation,[],[f10615,f176])).
fof(f10615,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),'type.infer_t.infer_t'),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'(X0,X1),X2),'const.infer.st_ex_return_2'(s(X0,X4),s(X2,X5))))),s('type.infer_t.infer_t','const.unify.t_walkstar_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X6),s('type.infer_t.infer_t',X7))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),'type.infer_t.infer_t'),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'(X0,X1),X2),happ(s(fun(X2,'type.pair.prod'('type.infer.exc'(X0,X1),X2)),happ(s(fun(X0,fun(X2,'type.pair.prod'('type.infer.exc'(X0,X1),X2))),'const.infer.st_ex_return_0'),s(X0,X4))),s(X2,X5))),s('type.infer_t.infer_t',happ(s(fun('type.infer_t.infer_t','type.infer_t.infer_t'),happ(s(fun('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),fun('type.infer_t.infer_t','type.infer_t.infer_t')),'const.unify.t_walkstar_0'),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X6))),s('type.infer_t.infer_t',X7)))))) )),
  inference(unit_resulting_resolution,[],[f176,f205,f212])).
fof(f10770,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),'type.pair.prod'('type.infer.exc'(X4,X5),X4)),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'(X0,X1),X2),'const.infer.st_ex_return_2'(s(X0,X6),s(X2,X7))),s('type.pair.prod'('type.infer.exc'(X4,X5),X4),'const.infer.read_1'(s(X4,X8))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),'type.pair.prod'('type.infer.exc'(X4,X5),X4)),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'(X0,X1),X2),'const.infer.st_ex_return_2'(s(X0,X6),s(X2,X7))))),s('type.pair.prod'('type.infer.exc'(X4,X5),X4),'const.infer.read_1'(s(X4,X8)))))) )),
  inference(forward_demodulation,[],[f10769,f205])).
fof(f10769,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),'type.pair.prod'('type.infer.exc'(X4,X5),X4)),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'(X0,X1),X2),'const.infer.st_ex_return_2'(s(X0,X6),s(X2,X7))))),s('type.pair.prod'('type.infer.exc'(X4,X5),X4),'const.infer.read_1'(s(X4,X8))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),'type.pair.prod'('type.infer.exc'(X4,X5),X4)),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'(X0,X1),X2),happ(s(fun(X2,'type.pair.prod'('type.infer.exc'(X0,X1),X2)),happ(s(fun(X0,fun(X2,'type.pair.prod'('type.infer.exc'(X0,X1),X2))),'const.infer.st_ex_return_0'),s(X0,X6))),s(X2,X7))),s('type.pair.prod'('type.infer.exc'(X4,X5),X4),'const.infer.read_1'(s(X4,X8)))))) )),
  inference(forward_demodulation,[],[f10617,f178])).
fof(f10617,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),'type.pair.prod'('type.infer.exc'(X4,X5),X4)),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'(X0,X1),X2),'const.infer.st_ex_return_2'(s(X0,X6),s(X2,X7))))),s('type.pair.prod'('type.infer.exc'(X4,X5),X4),'const.infer.read_1'(s(X4,X8))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),'type.pair.prod'('type.infer.exc'(X4,X5),X4)),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'(X0,X1),X2),happ(s(fun(X2,'type.pair.prod'('type.infer.exc'(X0,X1),X2)),happ(s(fun(X0,fun(X2,'type.pair.prod'('type.infer.exc'(X0,X1),X2))),'const.infer.st_ex_return_0'),s(X0,X6))),s(X2,X7))),s('type.pair.prod'('type.infer.exc'(X4,X5),X4),happ(s(fun(X4,'type.pair.prod'('type.infer.exc'(X4,X5),X4)),'const.infer.read_0'),s(X4,X8)))))) )),
  inference(unit_resulting_resolution,[],[f178,f205,f212])).
fof(f10766,plain,(
  ( ! [X6,X4,X2,X0,X10,X8,X7,X5,X3,X1,X9] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),'type.pair.prod'('type.infer.exc'(X4,X5),X6)),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'(X0,X1),X2),'const.infer.st_ex_return_2'(s(X0,X7),s(X2,X8))),s('type.pair.prod'('type.infer.exc'(X4,X5),X6),'const.infer.st_ex_return_2'(s(X4,X9),s(X6,X10))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),'type.pair.prod'('type.infer.exc'(X4,X5),X6)),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'(X0,X1),X2),'const.infer.st_ex_return_2'(s(X0,X7),s(X2,X8))))),s('type.pair.prod'('type.infer.exc'(X4,X5),X6),'const.infer.st_ex_return_2'(s(X4,X9),s(X6,X10)))))) )),
  inference(forward_demodulation,[],[f10765,f205])).
fof(f10765,plain,(
  ( ! [X6,X4,X2,X0,X10,X8,X7,X5,X3,X1,X9] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),'type.pair.prod'('type.infer.exc'(X4,X5),X6)),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'(X0,X1),X2),'const.infer.st_ex_return_2'(s(X0,X7),s(X2,X8))))),s('type.pair.prod'('type.infer.exc'(X4,X5),X6),'const.infer.st_ex_return_2'(s(X4,X9),s(X6,X10))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),'type.pair.prod'('type.infer.exc'(X4,X5),X6)),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'(X0,X1),X2),happ(s(fun(X2,'type.pair.prod'('type.infer.exc'(X0,X1),X2)),happ(s(fun(X0,fun(X2,'type.pair.prod'('type.infer.exc'(X0,X1),X2))),'const.infer.st_ex_return_0'),s(X0,X7))),s(X2,X8))),s('type.pair.prod'('type.infer.exc'(X4,X5),X6),'const.infer.st_ex_return_2'(s(X4,X9),s(X6,X10)))))) )),
  inference(forward_demodulation,[],[f10619,f205])).
fof(f10619,plain,(
  ( ! [X6,X4,X2,X0,X10,X8,X7,X5,X3,X1,X9] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),'type.pair.prod'('type.infer.exc'(X4,X5),X6)),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'(X0,X1),X2),'const.infer.st_ex_return_2'(s(X0,X7),s(X2,X8))))),s('type.pair.prod'('type.infer.exc'(X4,X5),X6),'const.infer.st_ex_return_2'(s(X4,X9),s(X6,X10))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),'type.pair.prod'('type.infer.exc'(X4,X5),X6)),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'(X0,X1),X2),happ(s(fun(X2,'type.pair.prod'('type.infer.exc'(X0,X1),X2)),happ(s(fun(X0,fun(X2,'type.pair.prod'('type.infer.exc'(X0,X1),X2))),'const.infer.st_ex_return_0'),s(X0,X7))),s(X2,X8))),s('type.pair.prod'('type.infer.exc'(X4,X5),X6),happ(s(fun(X6,'type.pair.prod'('type.infer.exc'(X4,X5),X6)),happ(s(fun(X4,fun(X6,'type.pair.prod'('type.infer.exc'(X4,X5),X6))),'const.infer.st_ex_return_0'),s(X4,X9))),s(X6,X10)))))) )),
  inference(unit_resulting_resolution,[],[f205,f205,f212])).
fof(f10764,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X4),'type.infer.infer_st'(X5))),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'(X0,X1),X2),'const.infer.st_ex_return_2'(s(X0,X6),s(X2,X7))),s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X4),'type.infer.infer_st'(X5)),'const.infer.fresh_uvar_1'(s('type.infer.infer_st'(X5),X8))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X4),'type.infer.infer_st'(X5))),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'(X0,X1),X2),'const.infer.st_ex_return_2'(s(X0,X6),s(X2,X7))))),s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X4),'type.infer.infer_st'(X5)),'const.infer.fresh_uvar_1'(s('type.infer.infer_st'(X5),X8)))))) )),
  inference(forward_demodulation,[],[f10763,f205])).
fof(f10763,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X4),'type.infer.infer_st'(X5))),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'(X0,X1),X2),'const.infer.st_ex_return_2'(s(X0,X6),s(X2,X7))))),s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X4),'type.infer.infer_st'(X5)),'const.infer.fresh_uvar_1'(s('type.infer.infer_st'(X5),X8))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X4),'type.infer.infer_st'(X5))),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'(X0,X1),X2),happ(s(fun(X2,'type.pair.prod'('type.infer.exc'(X0,X1),X2)),happ(s(fun(X0,fun(X2,'type.pair.prod'('type.infer.exc'(X0,X1),X2))),'const.infer.st_ex_return_0'),s(X0,X6))),s(X2,X7))),s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X4),'type.infer.infer_st'(X5)),'const.infer.fresh_uvar_1'(s('type.infer.infer_st'(X5),X8)))))) )),
  inference(forward_demodulation,[],[f10620,f179])).
fof(f10620,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X4),'type.infer.infer_st'(X5))),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'(X0,X1),X2),'const.infer.st_ex_return_2'(s(X0,X6),s(X2,X7))))),s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X4),'type.infer.infer_st'(X5)),'const.infer.fresh_uvar_1'(s('type.infer.infer_st'(X5),X8))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X4),'type.infer.infer_st'(X5))),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'(X0,X1),X2),happ(s(fun(X2,'type.pair.prod'('type.infer.exc'(X0,X1),X2)),happ(s(fun(X0,fun(X2,'type.pair.prod'('type.infer.exc'(X0,X1),X2))),'const.infer.st_ex_return_0'),s(X0,X6))),s(X2,X7))),s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X4),'type.infer.infer_st'(X5)),happ(s(fun('type.infer.infer_st'(X5),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X4),'type.infer.infer_st'(X5))),'const.infer.fresh_uvar_0'),s('type.infer.infer_st'(X5),X8)))))) )),
  inference(unit_resulting_resolution,[],[f179,f205,f212])).
fof(f10762,plain,(
  ( ! [X6,X4,X2,X0,X10,X8,X7,X5,X3,X1,X9] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),'type.pair.prod'('type.infer.exc'(X4,X5),X6)),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'(X0,X1),X2),'const.infer.st_ex_return_2'(s(X0,X7),s(X2,X8))),s('type.pair.prod'('type.infer.exc'(X4,X5),X6),'const.infer.failwith_2'(s(X5,X9),s(X6,X10))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),'type.pair.prod'('type.infer.exc'(X4,X5),X6)),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'(X0,X1),X2),'const.infer.st_ex_return_2'(s(X0,X7),s(X2,X8))))),s('type.pair.prod'('type.infer.exc'(X4,X5),X6),'const.infer.failwith_2'(s(X5,X9),s(X6,X10)))))) )),
  inference(forward_demodulation,[],[f10761,f205])).
fof(f10761,plain,(
  ( ! [X6,X4,X2,X0,X10,X8,X7,X5,X3,X1,X9] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),'type.pair.prod'('type.infer.exc'(X4,X5),X6)),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'(X0,X1),X2),'const.infer.st_ex_return_2'(s(X0,X7),s(X2,X8))))),s('type.pair.prod'('type.infer.exc'(X4,X5),X6),'const.infer.failwith_2'(s(X5,X9),s(X6,X10))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),'type.pair.prod'('type.infer.exc'(X4,X5),X6)),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'(X0,X1),X2),happ(s(fun(X2,'type.pair.prod'('type.infer.exc'(X0,X1),X2)),happ(s(fun(X0,fun(X2,'type.pair.prod'('type.infer.exc'(X0,X1),X2))),'const.infer.st_ex_return_0'),s(X0,X7))),s(X2,X8))),s('type.pair.prod'('type.infer.exc'(X4,X5),X6),'const.infer.failwith_2'(s(X5,X9),s(X6,X10)))))) )),
  inference(forward_demodulation,[],[f10621,f204])).
fof(f10621,plain,(
  ( ! [X6,X4,X2,X0,X10,X8,X7,X5,X3,X1,X9] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),'type.pair.prod'('type.infer.exc'(X4,X5),X6)),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'(X0,X1),X2),'const.infer.st_ex_return_2'(s(X0,X7),s(X2,X8))))),s('type.pair.prod'('type.infer.exc'(X4,X5),X6),'const.infer.failwith_2'(s(X5,X9),s(X6,X10))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),'type.pair.prod'('type.infer.exc'(X4,X5),X6)),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'(X0,X1),X2),happ(s(fun(X2,'type.pair.prod'('type.infer.exc'(X0,X1),X2)),happ(s(fun(X0,fun(X2,'type.pair.prod'('type.infer.exc'(X0,X1),X2))),'const.infer.st_ex_return_0'),s(X0,X7))),s(X2,X8))),s('type.pair.prod'('type.infer.exc'(X4,X5),X6),happ(s(fun(X6,'type.pair.prod'('type.infer.exc'(X4,X5),X6)),'const.infer.failwith_1'(s(X5,X9))),s(X6,X10)))))) )),
  inference(unit_resulting_resolution,[],[f204,f205,f212])).
fof(f10760,plain,(
  ( ! [X6,X4,X2,X0,X10,X8,X7,X5,X3,X1,X9] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),'type.pair.prod'('type.infer.exc'('type.one.one',X4),X5)),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'(X0,X1),X2),'const.infer.st_ex_return_2'(s(X0,X6),s(X2,X7))),s('type.pair.prod'('type.infer.exc'('type.one.one',X4),X5),'const.infer.guard_3'(s(bool,X8),s(X4,X9),s(X5,X10))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),'type.pair.prod'('type.infer.exc'('type.one.one',X4),X5)),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'(X0,X1),X2),'const.infer.st_ex_return_2'(s(X0,X6),s(X2,X7))))),s('type.pair.prod'('type.infer.exc'('type.one.one',X4),X5),'const.infer.guard_3'(s(bool,X8),s(X4,X9),s(X5,X10)))))) )),
  inference(forward_demodulation,[],[f10759,f205])).
fof(f10759,plain,(
  ( ! [X6,X4,X2,X0,X10,X8,X7,X5,X3,X1,X9] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),'type.pair.prod'('type.infer.exc'('type.one.one',X4),X5)),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'(X0,X1),X2),'const.infer.st_ex_return_2'(s(X0,X6),s(X2,X7))))),s('type.pair.prod'('type.infer.exc'('type.one.one',X4),X5),'const.infer.guard_3'(s(bool,X8),s(X4,X9),s(X5,X10))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),'type.pair.prod'('type.infer.exc'('type.one.one',X4),X5)),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'(X0,X1),X2),happ(s(fun(X2,'type.pair.prod'('type.infer.exc'(X0,X1),X2)),happ(s(fun(X0,fun(X2,'type.pair.prod'('type.infer.exc'(X0,X1),X2))),'const.infer.st_ex_return_0'),s(X0,X6))),s(X2,X7))),s('type.pair.prod'('type.infer.exc'('type.one.one',X4),X5),'const.infer.guard_3'(s(bool,X8),s(X4,X9),s(X5,X10)))))) )),
  inference(forward_demodulation,[],[f10622,f183])).
fof(f10622,plain,(
  ( ! [X6,X4,X2,X0,X10,X8,X7,X5,X3,X1,X9] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),'type.pair.prod'('type.infer.exc'('type.one.one',X4),X5)),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'(X0,X1),X2),'const.infer.st_ex_return_2'(s(X0,X6),s(X2,X7))))),s('type.pair.prod'('type.infer.exc'('type.one.one',X4),X5),'const.infer.guard_3'(s(bool,X8),s(X4,X9),s(X5,X10))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),'type.pair.prod'('type.infer.exc'('type.one.one',X4),X5)),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'(X0,X1),X2),happ(s(fun(X2,'type.pair.prod'('type.infer.exc'(X0,X1),X2)),happ(s(fun(X0,fun(X2,'type.pair.prod'('type.infer.exc'(X0,X1),X2))),'const.infer.st_ex_return_0'),s(X0,X6))),s(X2,X7))),s('type.pair.prod'('type.infer.exc'('type.one.one',X4),X5),happ(s(fun(X5,'type.pair.prod'('type.infer.exc'('type.one.one',X4),X5)),'const.infer.guard_2'(s(bool,X8),s(X4,X9))),s(X5,X10)))))) )),
  inference(unit_resulting_resolution,[],[f183,f205,f212])).
fof(f9340,plain,(
  ( ! [X30,X28,X26,X33,X31,X29,X27,X25,X32] : (s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X30),'type.infer.infer_st'(X31)),'const.infer.fresh_uvar_1'(s('type.infer.infer_st'(X31),X32))) != s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X30),'type.infer.infer_st'(X31)),'const.pair.,_2'(s('type.infer.exc'('type.infer_t.infer_t',X30),'const.infer.Success_1'(s('type.infer_t.infer_t',happ(s(fun(X26,'type.infer_t.infer_t'),X27),s(X26,happ(s(fun(X25,X26),X28),s(X25,X29))))))),s('type.infer.infer_st'(X31),X33))) | s('type.infer_t.infer_t','const.infer_t.Infer_Tuvar_1'(s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'(X31),X32))))) = s('type.infer_t.infer_t',happ(s(fun(X25,'type.infer_t.infer_t'),'_dst_x0x1_2'(s(fun(X26,'type.infer_t.infer_t'),X27),s(fun(X25,X26),X28))),s(X25,X29)))) )),
  inference(superposition,[],[f189,f206])).
fof(f9339,plain,(
  ( ! [X24,X23,X21,X19,X17,X22,X20,X18,X16] : (s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X21),'type.infer.infer_st'(X22)),'const.infer.fresh_uvar_1'(s('type.infer.infer_st'(X22),X23))) != s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X21),'type.infer.infer_st'(X22)),'const.pair.,_2'(s('type.infer.exc'('type.infer_t.infer_t',X21),'const.infer.Success_1'(s('type.infer_t.infer_t',happ(s(fun(X18,'type.infer_t.infer_t'),'_dst_x0x1_2'(s(fun(X16,'type.infer_t.infer_t'),X17),s(fun(X18,X16),X19))),s(X18,X20))))),s('type.infer.infer_st'(X22),X24))) | s('type.infer_t.infer_t','const.infer_t.Infer_Tuvar_1'(s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'(X22),X23))))) = s('type.infer_t.infer_t',happ(s(fun(X16,'type.infer_t.infer_t'),X17),s(X16,happ(s(fun(X18,X16),X19),s(X18,X20)))))) )),
  inference(superposition,[],[f189,f206])).
fof(f9335,plain,(
  ( ! [X14,X21,X19,X17,X15,X22,X20,X18,X16] : (s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X20),'type.infer.infer_st'(X14)),'const.pair.,_2'(s('type.infer.exc'('type.infer_t.infer_t',X20),'const.infer.Success_1'(s('type.infer_t.infer_t',X21))),s('type.infer.infer_st'(X14),X22))) != s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X20),'type.infer.infer_st'(X14)),'const.infer.fresh_uvar_1'(s('type.infer.infer_st'(X14),happ(s(fun(X16,'type.infer.infer_st'(X14)),X17),s(X16,happ(s(fun(X15,X16),X18),s(X15,X19))))))) | s('type.infer_t.infer_t',X21) = s('type.infer_t.infer_t','const.infer_t.Infer_Tuvar_1'(s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'(X14),happ(s(fun(X15,'type.infer.infer_st'(X14)),'_dst_x0x1_2'(s(fun(X16,'type.infer.infer_st'(X14)),X17),s(fun(X15,X16),X18))),s(X15,X19)))))))) )),
  inference(superposition,[],[f189,f206])).
fof(f9334,plain,(
  ( ! [X6,X12,X10,X8,X7,X5,X13,X11,X9] : (s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X11),'type.infer.infer_st'(X5)),'const.pair.,_2'(s('type.infer.exc'('type.infer_t.infer_t',X11),'const.infer.Success_1'(s('type.infer_t.infer_t',X12))),s('type.infer.infer_st'(X5),X13))) != s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X11),'type.infer.infer_st'(X5)),'const.infer.fresh_uvar_1'(s('type.infer.infer_st'(X5),happ(s(fun(X8,'type.infer.infer_st'(X5)),'_dst_x0x1_2'(s(fun(X6,'type.infer.infer_st'(X5)),X7),s(fun(X8,X6),X9))),s(X8,X10))))) | s('type.infer_t.infer_t',X12) = s('type.infer_t.infer_t','const.infer_t.Infer_Tuvar_1'(s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'(X5),happ(s(fun(X6,'type.infer.infer_st'(X5)),X7),s(X6,happ(s(fun(X8,X6),X9),s(X8,X10)))))))))) )),
  inference(superposition,[],[f189,f206])).
fof(f8762,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),'const.pair.,_2'(s('type.infer.exc'('type.one.one',X0),'const.infer.Success_1'(s('type.one.one',X2))),s(X1,happ(s(fun(X3,X1),X4),s(X3,happ(s(fun(X5,X3),X6),s(X5,X7))))))) = s('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),'const.infer.guard_3'(s(bool,'T_0'),s(X0,X8),s(X1,happ(s(fun(X5,X1),'_dst_x0x1_2'(s(fun(X3,X1),X4),s(fun(X5,X3),X6))),s(X5,X7)))))) )),
  inference(unit_resulting_resolution,[],[f163,f206,f252])).
fof(f8871,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.one.one',X0),'type.pair.prod'('type.infer.exc'('type.one.one',X1),X2)),'const.infer.guard_3'(s(bool,'T_0'),s(X0,X3),s('type.pair.prod'('type.infer.exc'('type.one.one',X1),X2),'const.infer.guard_3'(s(bool,X4),s(X1,X5),s(X2,X6))))) = s('type.pair.prod'('type.infer.exc'('type.one.one',X0),'type.pair.prod'('type.infer.exc'('type.one.one',X1),X2)),'const.pair.,_2'(s('type.infer.exc'('type.one.one',X0),'const.infer.Success_1'(s('type.one.one',X7))),s('type.pair.prod'('type.infer.exc'('type.one.one',X1),X2),'const.infer.guard_3'(s(bool,X4),s(X1,X5),s(X2,X6)))))) )),
  inference(forward_demodulation,[],[f8760,f183])).
fof(f8760,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.one.one',X0),'type.pair.prod'('type.infer.exc'('type.one.one',X1),X2)),'const.infer.guard_3'(s(bool,'T_0'),s(X0,X3),s('type.pair.prod'('type.infer.exc'('type.one.one',X1),X2),'const.infer.guard_3'(s(bool,X4),s(X1,X5),s(X2,X6))))) = s('type.pair.prod'('type.infer.exc'('type.one.one',X0),'type.pair.prod'('type.infer.exc'('type.one.one',X1),X2)),'const.pair.,_2'(s('type.infer.exc'('type.one.one',X0),'const.infer.Success_1'(s('type.one.one',X7))),s('type.pair.prod'('type.infer.exc'('type.one.one',X1),X2),happ(s(fun(X2,'type.pair.prod'('type.infer.exc'('type.one.one',X1),X2)),'const.infer.guard_2'(s(bool,X4),s(X1,X5))),s(X2,X6)))))) )),
  inference(unit_resulting_resolution,[],[f163,f183,f252])).
fof(f8870,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.one.one',X0),'type.pair.prod'('type.infer.exc'(X1,X2),X3)),'const.infer.guard_3'(s(bool,'T_0'),s(X0,X4),s('type.pair.prod'('type.infer.exc'(X1,X2),X3),'const.infer.failwith_2'(s(X2,X5),s(X3,X6))))) = s('type.pair.prod'('type.infer.exc'('type.one.one',X0),'type.pair.prod'('type.infer.exc'(X1,X2),X3)),'const.pair.,_2'(s('type.infer.exc'('type.one.one',X0),'const.infer.Success_1'(s('type.one.one',X7))),s('type.pair.prod'('type.infer.exc'(X1,X2),X3),'const.infer.failwith_2'(s(X2,X5),s(X3,X6)))))) )),
  inference(forward_demodulation,[],[f8759,f204])).
fof(f8759,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.one.one',X0),'type.pair.prod'('type.infer.exc'(X1,X2),X3)),'const.infer.guard_3'(s(bool,'T_0'),s(X0,X4),s('type.pair.prod'('type.infer.exc'(X1,X2),X3),'const.infer.failwith_2'(s(X2,X5),s(X3,X6))))) = s('type.pair.prod'('type.infer.exc'('type.one.one',X0),'type.pair.prod'('type.infer.exc'(X1,X2),X3)),'const.pair.,_2'(s('type.infer.exc'('type.one.one',X0),'const.infer.Success_1'(s('type.one.one',X7))),s('type.pair.prod'('type.infer.exc'(X1,X2),X3),happ(s(fun(X3,'type.pair.prod'('type.infer.exc'(X1,X2),X3)),'const.infer.failwith_1'(s(X2,X5))),s(X3,X6)))))) )),
  inference(unit_resulting_resolution,[],[f163,f204,f252])).
fof(f8869,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.one.one',X0),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X1),'type.infer.infer_st'(X2))),'const.infer.guard_3'(s(bool,'T_0'),s(X0,X3),s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X1),'type.infer.infer_st'(X2)),'const.infer.fresh_uvar_1'(s('type.infer.infer_st'(X2),X4))))) = s('type.pair.prod'('type.infer.exc'('type.one.one',X0),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X1),'type.infer.infer_st'(X2))),'const.pair.,_2'(s('type.infer.exc'('type.one.one',X0),'const.infer.Success_1'(s('type.one.one',X5))),s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X1),'type.infer.infer_st'(X2)),'const.infer.fresh_uvar_1'(s('type.infer.infer_st'(X2),X4)))))) )),
  inference(forward_demodulation,[],[f8758,f179])).
fof(f8758,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.one.one',X0),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X1),'type.infer.infer_st'(X2))),'const.infer.guard_3'(s(bool,'T_0'),s(X0,X3),s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X1),'type.infer.infer_st'(X2)),'const.infer.fresh_uvar_1'(s('type.infer.infer_st'(X2),X4))))) = s('type.pair.prod'('type.infer.exc'('type.one.one',X0),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X1),'type.infer.infer_st'(X2))),'const.pair.,_2'(s('type.infer.exc'('type.one.one',X0),'const.infer.Success_1'(s('type.one.one',X5))),s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X1),'type.infer.infer_st'(X2)),happ(s(fun('type.infer.infer_st'(X2),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X1),'type.infer.infer_st'(X2))),'const.infer.fresh_uvar_0'),s('type.infer.infer_st'(X2),X4)))))) )),
  inference(unit_resulting_resolution,[],[f163,f179,f252])).
fof(f8866,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.one.one',X0),'type.pair.prod'('type.infer.exc'(X1,X2),X1)),'const.infer.guard_3'(s(bool,'T_0'),s(X0,X3),s('type.pair.prod'('type.infer.exc'(X1,X2),X1),'const.infer.read_1'(s(X1,X4))))) = s('type.pair.prod'('type.infer.exc'('type.one.one',X0),'type.pair.prod'('type.infer.exc'(X1,X2),X1)),'const.pair.,_2'(s('type.infer.exc'('type.one.one',X0),'const.infer.Success_1'(s('type.one.one',X5))),s('type.pair.prod'('type.infer.exc'(X1,X2),X1),'const.infer.read_1'(s(X1,X4)))))) )),
  inference(forward_demodulation,[],[f8755,f177])).
fof(f8755,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.one.one',X0),'type.pair.prod'('type.infer.exc'(X1,X2),X1)),'const.infer.guard_3'(s(bool,'T_0'),s(X0,X3),s('type.pair.prod'('type.infer.exc'(X1,X2),X1),'const.infer.read_1'(s(X1,X4))))) = s('type.pair.prod'('type.infer.exc'('type.one.one',X0),'type.pair.prod'('type.infer.exc'(X1,X2),X1)),'const.pair.,_2'(s('type.infer.exc'('type.one.one',X0),'const.infer.Success_1'(s('type.one.one',X5))),s('type.pair.prod'('type.infer.exc'(X1,X2),X1),'const.pair.,_2'(s('type.infer.exc'(X1,X2),'const.infer.Success_1'(s(X1,X4))),s(X1,X4)))))) )),
  inference(unit_resulting_resolution,[],[f163,f177,f252])).
fof(f8865,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.one.one',X0),'type.infer_t.infer_t'),'const.infer.guard_3'(s(bool,'T_0'),s(X0,X1),s('type.infer_t.infer_t','const.unify.t_walkstar_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X2),s('type.infer_t.infer_t',X3))))) = s('type.pair.prod'('type.infer.exc'('type.one.one',X0),'type.infer_t.infer_t'),'const.pair.,_2'(s('type.infer.exc'('type.one.one',X0),'const.infer.Success_1'(s('type.one.one',X4))),s('type.infer_t.infer_t','const.unify.t_walkstar_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X2),s('type.infer_t.infer_t',X3)))))) )),
  inference(forward_demodulation,[],[f8754,f176])).
fof(f8754,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.one.one',X0),'type.infer_t.infer_t'),'const.infer.guard_3'(s(bool,'T_0'),s(X0,X1),s('type.infer_t.infer_t','const.unify.t_walkstar_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X2),s('type.infer_t.infer_t',X3))))) = s('type.pair.prod'('type.infer.exc'('type.one.one',X0),'type.infer_t.infer_t'),'const.pair.,_2'(s('type.infer.exc'('type.one.one',X0),'const.infer.Success_1'(s('type.one.one',X4))),s('type.infer_t.infer_t',happ(s(fun('type.infer_t.infer_t','type.infer_t.infer_t'),happ(s(fun('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),fun('type.infer_t.infer_t','type.infer_t.infer_t')),'const.unify.t_walkstar_0'),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X2))),s('type.infer_t.infer_t',X3)))))) )),
  inference(unit_resulting_resolution,[],[f163,f176,f252])).
fof(f8864,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.one.one',X0),'type.infer_t.infer_t'),'const.infer.guard_3'(s(bool,'T_0'),s(X0,X1),s('type.infer_t.infer_t','const.infer_t.Infer_Tuvar_1'(s('type.num.num',X2))))) = s('type.pair.prod'('type.infer.exc'('type.one.one',X0),'type.infer_t.infer_t'),'const.pair.,_2'(s('type.infer.exc'('type.one.one',X0),'const.infer.Success_1'(s('type.one.one',X3))),s('type.infer_t.infer_t','const.infer_t.Infer_Tuvar_1'(s('type.num.num',X2)))))) )),
  inference(forward_demodulation,[],[f8753,f166])).
fof(f8753,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.one.one',X0),'type.infer_t.infer_t'),'const.infer.guard_3'(s(bool,'T_0'),s(X0,X1),s('type.infer_t.infer_t','const.infer_t.Infer_Tuvar_1'(s('type.num.num',X2))))) = s('type.pair.prod'('type.infer.exc'('type.one.one',X0),'type.infer_t.infer_t'),'const.pair.,_2'(s('type.infer.exc'('type.one.one',X0),'const.infer.Success_1'(s('type.one.one',X3))),s('type.infer_t.infer_t',happ(s(fun('type.num.num','type.infer_t.infer_t'),'const.infer_t.Infer_Tuvar_0'),s('type.num.num',X2)))))) )),
  inference(unit_resulting_resolution,[],[f163,f166,f252])).
fof(f8863,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.one.one',X0),'type.num.num'),'const.infer.guard_3'(s(bool,'T_0'),s(X0,X1),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X3))))) = s('type.pair.prod'('type.infer.exc'('type.one.one',X0),'type.num.num'),'const.pair.,_2'(s('type.infer.exc'('type.one.one',X0),'const.infer.Success_1'(s('type.one.one',X4))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X3)))))) )),
  inference(forward_demodulation,[],[f8752,f175])).
fof(f8752,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.one.one',X0),'type.num.num'),'const.infer.guard_3'(s(bool,'T_0'),s(X0,X1),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X3))))) = s('type.pair.prod'('type.infer.exc'('type.one.one',X0),'type.num.num'),'const.pair.,_2'(s('type.infer.exc'('type.one.one',X0),'const.infer.Success_1'(s('type.one.one',X4))),s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.arithmetic.+_1'(s('type.num.num',X2))),s('type.num.num',X3)))))) )),
  inference(unit_resulting_resolution,[],[f163,f175,f252])).
fof(f8860,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.one.one',X0),'type.list.list'(X1)),'const.infer.guard_3'(s(bool,'T_0'),s(X0,X2),s('type.list.list'(X1),'const.list.MAP_2'(s(fun(X3,X1),X4),s('type.list.list'(X3),X5))))) = s('type.pair.prod'('type.infer.exc'('type.one.one',X0),'type.list.list'(X1)),'const.pair.,_2'(s('type.infer.exc'('type.one.one',X0),'const.infer.Success_1'(s('type.one.one',X6))),s('type.list.list'(X1),'const.list.MAP_2'(s(fun(X3,X1),X4),s('type.list.list'(X3),X5)))))) )),
  inference(forward_demodulation,[],[f8749,f180])).
fof(f8749,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.one.one',X0),'type.list.list'(X1)),'const.infer.guard_3'(s(bool,'T_0'),s(X0,X2),s('type.list.list'(X1),'const.list.MAP_2'(s(fun(X3,X1),X4),s('type.list.list'(X3),X5))))) = s('type.pair.prod'('type.infer.exc'('type.one.one',X0),'type.list.list'(X1)),'const.pair.,_2'(s('type.infer.exc'('type.one.one',X0),'const.infer.Success_1'(s('type.one.one',X6))),s('type.list.list'(X1),happ(s(fun('type.list.list'(X3),'type.list.list'(X1)),happ(s(fun(fun(X3,X1),fun('type.list.list'(X3),'type.list.list'(X1))),'const.list.MAP_0'),s(fun(X3,X1),X4))),s('type.list.list'(X3),X5)))))) )),
  inference(unit_resulting_resolution,[],[f163,f180,f252])).
fof(f8748,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.one.one',X0),'type.one.one'),'const.infer.guard_3'(s(bool,'T_0'),s(X0,X1),s('type.one.one',X2))) = s('type.pair.prod'('type.infer.exc'('type.one.one',X0),'type.one.one'),'const.pair.,_2'(s('type.infer.exc'('type.one.one',X0),'const.infer.Success_1'(s('type.one.one',X3))),s('type.one.one',X4)))) )),
  inference(unit_resulting_resolution,[],[f163,f258,f252])).
fof(f8747,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.one.one',X0),'type.one.one'),'const.infer.guard_3'(s(bool,'T_0'),s(X0,X1),s('type.one.one','const.one.one_0'))) = s('type.pair.prod'('type.infer.exc'('type.one.one',X0),'type.one.one'),'const.pair.,_2'(s('type.infer.exc'('type.one.one',X0),'const.infer.Success_1'(s('type.one.one',X2))),s('type.one.one',X3)))) )),
  inference(unit_resulting_resolution,[],[f163,f165,f252])).
fof(f8745,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1,X9] : (s('type.pair.prod'('type.infer.exc'('type.one.one',X0),fun(X1,fun(X2,fun(X3,fun(X4,fun(X5,'type.one.one')))))),'const.infer.guard_3'(s(bool,'T_0'),s(X0,X6),s(fun(X1,fun(X2,fun(X3,fun(X4,fun(X5,'type.one.one'))))),X7))) = s('type.pair.prod'('type.infer.exc'('type.one.one',X0),fun(X1,fun(X2,fun(X3,fun(X4,fun(X5,'type.one.one')))))),'const.pair.,_2'(s('type.infer.exc'('type.one.one',X0),'const.infer.Success_1'(s('type.one.one',X8))),s(fun(X1,fun(X2,fun(X3,fun(X4,fun(X5,'type.one.one'))))),X9)))) )),
  inference(unit_resulting_resolution,[],[f163,f815,f252])).
fof(f8744,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.one.one',X0),fun(X1,fun(X2,fun(X3,fun(X4,'type.one.one'))))),'const.infer.guard_3'(s(bool,'T_0'),s(X0,X5),s(fun(X1,fun(X2,fun(X3,fun(X4,'type.one.one')))),X6))) = s('type.pair.prod'('type.infer.exc'('type.one.one',X0),fun(X1,fun(X2,fun(X3,fun(X4,'type.one.one'))))),'const.pair.,_2'(s('type.infer.exc'('type.one.one',X0),'const.infer.Success_1'(s('type.one.one',X7))),s(fun(X1,fun(X2,fun(X3,fun(X4,'type.one.one')))),X8)))) )),
  inference(unit_resulting_resolution,[],[f163,f787,f252])).
fof(f8743,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.one.one',X0),fun(X1,fun(X2,fun(X3,'type.one.one')))),'const.infer.guard_3'(s(bool,'T_0'),s(X0,X4),s(fun(X1,fun(X2,fun(X3,'type.one.one'))),X5))) = s('type.pair.prod'('type.infer.exc'('type.one.one',X0),fun(X1,fun(X2,fun(X3,'type.one.one')))),'const.pair.,_2'(s('type.infer.exc'('type.one.one',X0),'const.infer.Success_1'(s('type.one.one',X6))),s(fun(X1,fun(X2,fun(X3,'type.one.one'))),X7)))) )),
  inference(unit_resulting_resolution,[],[f163,f752,f252])).
fof(f8742,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.one.one',X0),fun(X1,fun(X2,'type.one.one'))),'const.infer.guard_3'(s(bool,'T_0'),s(X0,X3),s(fun(X1,fun(X2,'type.one.one')),X4))) = s('type.pair.prod'('type.infer.exc'('type.one.one',X0),fun(X1,fun(X2,'type.one.one'))),'const.pair.,_2'(s('type.infer.exc'('type.one.one',X0),'const.infer.Success_1'(s('type.one.one',X5))),s(fun(X1,fun(X2,'type.one.one')),X6)))) )),
  inference(unit_resulting_resolution,[],[f163,f724,f252])).
fof(f8741,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.one.one',X0),fun(X1,'type.one.one')),'const.infer.guard_3'(s(bool,'T_0'),s(X0,X2),s(fun(X1,'type.one.one'),X3))) = s('type.pair.prod'('type.infer.exc'('type.one.one',X0),fun(X1,'type.one.one')),'const.pair.,_2'(s('type.infer.exc'('type.one.one',X0),'const.infer.Success_1'(s('type.one.one',X4))),s(fun(X1,'type.one.one'),X5)))) )),
  inference(unit_resulting_resolution,[],[f163,f605,f252])).
fof(f8739,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),'const.infer.guard_3'(s(bool,'T_0'),s(X0,X2),s(X1,happ(s(fun(X3,X1),X4),s(X3,happ(s(fun(X5,X3),X6),s(X5,X7))))))) = s('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),'const.pair.,_2'(s('type.infer.exc'('type.one.one',X0),'const.infer.Success_1'(s('type.one.one',X8))),s(X1,happ(s(fun(X5,X1),'_dst_x0x1_2'(s(fun(X3,X1),X4),s(fun(X5,X3),X6))),s(X5,X7)))))) )),
  inference(unit_resulting_resolution,[],[f163,f206,f252])).
fof(f8858,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),'const.infer.guard_3'(s(bool,'T_0'),s(X0,X2),s(X1,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(X1),X3))))) = s('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),'const.pair.,_2'(s('type.infer.exc'('type.one.one',X0),'const.infer.Success_1'(s('type.one.one',X4))),s(X1,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(X1),X3)))))) )),
  inference(forward_demodulation,[],[f8738,f168])).
fof(f8738,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),'const.infer.guard_3'(s(bool,'T_0'),s(X0,X2),s(X1,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(X1),X3))))) = s('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),'const.pair.,_2'(s('type.infer.exc'('type.one.one',X0),'const.infer.Success_1'(s('type.one.one',X4))),s(X1,happ(s(fun('type.infer.infer_st'(X1),X1),'const.infer.infer_st_subst_0'),s('type.infer.infer_st'(X1),X3)))))) )),
  inference(unit_resulting_resolution,[],[f163,f168,f252])).
fof(f8857,plain,(
  ( ! [X70,X68,X74,X72,X71,X69,X73] : (s('type.pair.prod'('type.infer.exc'('type.one.one',X72),X69),'const.pair.,_2'(s('type.infer.exc'('type.one.one',X72),'const.infer.Success_1'(s('type.one.one',X74))),s(X69,X71))) = s('type.pair.prod'('type.infer.exc'('type.one.one',X72),X69),'const.infer.guard_3'(s(bool,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(bool),X68))),s(X72,X73),s(X69,X70))) | s(X69,X70) != s(X69,X71) | s(bool,'F_0') = s(bool,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(bool),X68)))) )),
  inference(forward_demodulation,[],[f8856,f168])).
fof(f8856,plain,(
  ( ! [X70,X68,X74,X72,X71,X69,X73] : (s(X69,X70) != s(X69,X71) | s('type.pair.prod'('type.infer.exc'('type.one.one',X72),X69),'const.pair.,_2'(s('type.infer.exc'('type.one.one',X72),'const.infer.Success_1'(s('type.one.one',X74))),s(X69,X71))) = s('type.pair.prod'('type.infer.exc'('type.one.one',X72),X69),'const.infer.guard_3'(s(bool,happ(s(fun('type.infer.infer_st'(bool),bool),'const.infer.infer_st_subst_0'),s('type.infer.infer_st'(bool),X68))),s(X72,X73),s(X69,X70))) | s(bool,'F_0') = s(bool,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(bool),X68)))) )),
  inference(subsumption_resolution,[],[f8793,f163])).
fof(f8793,plain,(
  ( ! [X70,X68,X74,X72,X71,X69,X73] : (~p(s(bool,'T_0')) | s(X69,X70) != s(X69,X71) | s('type.pair.prod'('type.infer.exc'('type.one.one',X72),X69),'const.pair.,_2'(s('type.infer.exc'('type.one.one',X72),'const.infer.Success_1'(s('type.one.one',X74))),s(X69,X71))) = s('type.pair.prod'('type.infer.exc'('type.one.one',X72),X69),'const.infer.guard_3'(s(bool,happ(s(fun('type.infer.infer_st'(bool),bool),'const.infer.infer_st_subst_0'),s('type.infer.infer_st'(bool),X68))),s(X72,X73),s(X69,X70))) | s(bool,'F_0') = s(bool,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(bool),X68)))) )),
  inference(superposition,[],[f252,f293])).
fof(f8795,plain,(
  ( ! [X92,X90,X88,X87,X85,X83,X91,X89,X86,X84,X82] : (~p(s(bool,happ(s(fun(X84,bool),'_dst_x0x1_2'(s(fun(X82,bool),X83),s(fun(X84,X82),X85))),s(X84,X86)))) | s(X87,X88) != s(X87,X89) | s('type.pair.prod'('type.infer.exc'('type.one.one',X90),X87),'const.pair.,_2'(s('type.infer.exc'('type.one.one',X90),'const.infer.Success_1'(s('type.one.one',X92))),s(X87,X89))) = s('type.pair.prod'('type.infer.exc'('type.one.one',X90),X87),'const.infer.guard_3'(s(bool,happ(s(fun(X82,bool),X83),s(X82,happ(s(fun(X84,X82),X85),s(X84,X86))))),s(X90,X91),s(X87,X88)))) )),
  inference(superposition,[],[f252,f206])).
fof(f8796,plain,(
  ( ! [X94,X103,X101,X99,X97,X95,X93,X102,X100,X98,X96] : (~p(s(bool,happ(s(fun(X94,bool),X95),s(X94,happ(s(fun(X93,X94),X96),s(X93,X97)))))) | s(X98,X99) != s(X98,X100) | s('type.pair.prod'('type.infer.exc'('type.one.one',X101),X98),'const.pair.,_2'(s('type.infer.exc'('type.one.one',X101),'const.infer.Success_1'(s('type.one.one',X103))),s(X98,X100))) = s('type.pair.prod'('type.infer.exc'('type.one.one',X101),X98),'const.infer.guard_3'(s(bool,happ(s(fun(X93,bool),'_dst_x0x1_2'(s(fun(X94,bool),X95),s(fun(X93,X94),X96))),s(X93,X97))),s(X101,X102),s(X98,X99)))) )),
  inference(superposition,[],[f252,f206])).
fof(f8843,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (s(X1,X2) != s(X1,X3) | s('type.pair.prod'('type.infer.exc'('type.one.one',X4),X1),'const.infer.guard_3'(s(bool,X0),s(X4,X5),s(X1,X2))) = s('type.pair.prod'('type.infer.exc'('type.one.one',X4),X1),'const.pair.,_2'(s('type.infer.exc'('type.one.one',X4),'const.infer.Success_1'(s('type.one.one',X6))),s(X1,X3))) | s(bool,X0) = s(bool,X7) | s(bool,'T_0') = s(bool,X7)) )),
  inference(subsumption_resolution,[],[f8784,f163])).
fof(f8784,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (~p(s(bool,'T_0')) | s(X1,X2) != s(X1,X3) | s('type.pair.prod'('type.infer.exc'('type.one.one',X4),X1),'const.infer.guard_3'(s(bool,X0),s(X4,X5),s(X1,X2))) = s('type.pair.prod'('type.infer.exc'('type.one.one',X4),X1),'const.pair.,_2'(s('type.infer.exc'('type.one.one',X4),'const.infer.Success_1'(s('type.one.one',X6))),s(X1,X3))) | s(bool,X0) = s(bool,X7) | s(bool,'T_0') = s(bool,X7)) )),
  inference(superposition,[],[f252,f272])).
fof(f5860,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s(X0,X1) != s(X0,X2) | s('type.pair.prod'('type.infer.exc'(X3,X4),X0),'const.infer.st_ex_return_2'(s(X3,X5),s(X0,X1))) = s('type.pair.prod'('type.infer.exc'(X3,X4),X0),'const.pair.,_2'(s('type.infer.exc'(X3,X4),'const.infer.Success_1'(s(X3,X5))),s(X0,X2)))) )),
  inference(equality_resolution,[],[f212])).
fof(f8173,plain,(
  ( ! [X92,X90,X88,X93,X91,X89] : (s('type.pair.prod'('type.infer.exc'(bool,X93),X90),'const.infer.st_ex_return_2'(s(bool,X89),s(X90,X91))) = s('type.pair.prod'('type.infer.exc'(bool,X93),X90),'const.pair.,_2'(s('type.infer.exc'(bool,X93),'const.infer.Success_1'(s(bool,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(bool),X88))))),s(X90,X92))) | s(bool,'T_0') != s(bool,X89) | s(X90,X91) != s(X90,X92) | s(bool,'F_0') = s(bool,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(bool),X88)))) )),
  inference(forward_demodulation,[],[f5832,f168])).
fof(f5832,plain,(
  ( ! [X92,X90,X88,X93,X91,X89] : (s(bool,'T_0') != s(bool,X89) | s(X90,X91) != s(X90,X92) | s('type.pair.prod'('type.infer.exc'(bool,X93),X90),'const.infer.st_ex_return_2'(s(bool,X89),s(X90,X91))) = s('type.pair.prod'('type.infer.exc'(bool,X93),X90),'const.pair.,_2'(s('type.infer.exc'(bool,X93),'const.infer.Success_1'(s(bool,happ(s(fun('type.infer.infer_st'(bool),bool),'const.infer.infer_st_subst_0'),s('type.infer.infer_st'(bool),X88))))),s(X90,X92))) | s(bool,'F_0') = s(bool,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(bool),X88)))) )),
  inference(superposition,[],[f212,f293])).
fof(f5828,plain,(
  ( ! [X68,X66,X64,X69,X67,X65,X63] : (s(bool,X63) != s(bool,X64) | s(X65,X66) != s(X65,X67) | s('type.pair.prod'('type.infer.exc'(bool,X68),X65),'const.infer.st_ex_return_2'(s(bool,X64),s(X65,X66))) = s('type.pair.prod'('type.infer.exc'(bool,X68),X65),'const.pair.,_2'(s('type.infer.exc'(bool,X68),'const.infer.Success_1'(s(bool,'T_0'))),s(X65,X67))) | s(bool,X63) = s(bool,X69) | s(bool,'T_0') = s(bool,X69)) )),
  inference(superposition,[],[f212,f272])).
fof(f5825,plain,(
  ( ! [X47,X45,X43,X48,X46,X44,X49] : (s(bool,X44) != s(bool,X45) | s(X46,X47) != s(X46,X48) | s('type.pair.prod'('type.infer.exc'(bool,X49),X46),'const.infer.st_ex_return_2'(s(bool,X45),s(X46,X47))) = s('type.pair.prod'('type.infer.exc'(bool,X49),X46),'const.pair.,_2'(s('type.infer.exc'(bool,X49),'const.infer.Success_1'(s(bool,X43))),s(X46,X48))) | s(bool,'T_0') = s(bool,X43) | s(bool,'T_0') = s(bool,X44)) )),
  inference(superposition,[],[f212,f272])).
fof(f5823,plain,(
  ( ! [X30,X35,X33,X31,X29,X34,X32] : (s(bool,'T_0') != s(bool,X30) | s(X31,X32) != s(X31,X33) | s('type.pair.prod'('type.infer.exc'(bool,X34),X31),'const.infer.st_ex_return_2'(s(bool,X30),s(X31,X32))) = s('type.pair.prod'('type.infer.exc'(bool,X34),X31),'const.pair.,_2'(s('type.infer.exc'(bool,X34),'const.infer.Success_1'(s(bool,X29))),s(X31,X33))) | s(bool,X29) = s(bool,X35) | s(bool,'T_0') = s(bool,X35)) )),
  inference(superposition,[],[f212,f272])).
fof(f5822,plain,(
  ( ! [X28,X26,X24,X23,X21,X19,X27,X25,X22,X20,X18] : (s(X18,X24) != s(X18,happ(s(fun(X20,X18),X21),s(X20,happ(s(fun(X19,X20),X22),s(X19,X23))))) | s(X25,X26) != s(X25,X27) | s('type.pair.prod'('type.infer.exc'(X18,X28),X25),'const.infer.st_ex_return_2'(s(X18,X24),s(X25,X26))) = s('type.pair.prod'('type.infer.exc'(X18,X28),X25),'const.pair.,_2'(s('type.infer.exc'(X18,X28),'const.infer.Success_1'(s(X18,happ(s(fun(X19,X18),'_dst_x0x1_2'(s(fun(X20,X18),X21),s(fun(X19,X20),X22))),s(X19,X23))))),s(X25,X27)))) )),
  inference(superposition,[],[f212,f206])).
fof(f5821,plain,(
  ( ! [X14,X12,X10,X8,X17,X7,X15,X13,X11,X9,X16] : (s(X7,X13) != s(X7,happ(s(fun(X10,X7),'_dst_x0x1_2'(s(fun(X8,X7),X9),s(fun(X10,X8),X11))),s(X10,X12))) | s(X14,X15) != s(X14,X16) | s('type.pair.prod'('type.infer.exc'(X7,X17),X14),'const.infer.st_ex_return_2'(s(X7,X13),s(X14,X15))) = s('type.pair.prod'('type.infer.exc'(X7,X17),X14),'const.pair.,_2'(s('type.infer.exc'(X7,X17),'const.infer.Success_1'(s(X7,happ(s(fun(X8,X7),X9),s(X8,happ(s(fun(X10,X8),X11),s(X10,X12))))))),s(X14,X16)))) )),
  inference(superposition,[],[f212,f206])).
fof(f8159,plain,(
  ( ! [X218,X216,X220,X219,X217,X214] : (s(X217,X218) != s(X217,X219) | s('type.pair.prod'('type.infer.exc'('type.one.one',X220),X217),'const.infer.st_ex_return_2'(s('type.one.one',X214),s(X217,X218))) = s('type.pair.prod'('type.infer.exc'('type.one.one',X220),X217),'const.pair.,_2'(s('type.infer.exc'('type.one.one',X220),'const.infer.Success_1'(s('type.one.one',X216))),s(X217,X219)))) )),
  inference(subsumption_resolution,[],[f5806,f258])).
fof(f5806,plain,(
  ( ! [X218,X216,X220,X215,X219,X217,X214] : (s('type.one.one',X215) != s('type.one.one',X216) | s(X217,X218) != s(X217,X219) | s('type.pair.prod'('type.infer.exc'('type.one.one',X220),X217),'const.infer.st_ex_return_2'(s('type.one.one',X214),s(X217,X218))) = s('type.pair.prod'('type.infer.exc'('type.one.one',X220),X217),'const.pair.,_2'(s('type.infer.exc'('type.one.one',X220),'const.infer.Success_1'(s('type.one.one',X216))),s(X217,X219)))) )),
  inference(superposition,[],[f212,f258])).
fof(f8158,plain,(
  ( ! [X212,X210,X213,X211,X209] : (s(X210,X211) != s(X210,X212) | s('type.pair.prod'('type.infer.exc'('type.one.one',X213),X210),'const.infer.st_ex_return_2'(s('type.one.one','const.one.one_0'),s(X210,X211))) = s('type.pair.prod'('type.infer.exc'('type.one.one',X213),X210),'const.pair.,_2'(s('type.infer.exc'('type.one.one',X213),'const.infer.Success_1'(s('type.one.one',X209))),s(X210,X212)))) )),
  inference(subsumption_resolution,[],[f5805,f258])).
fof(f5805,plain,(
  ( ! [X212,X210,X208,X213,X211,X209] : (s('type.one.one',X208) != s('type.one.one',X209) | s(X210,X211) != s(X210,X212) | s('type.pair.prod'('type.infer.exc'('type.one.one',X213),X210),'const.infer.st_ex_return_2'(s('type.one.one','const.one.one_0'),s(X210,X211))) = s('type.pair.prod'('type.infer.exc'('type.one.one',X213),X210),'const.pair.,_2'(s('type.infer.exc'('type.one.one',X213),'const.infer.Success_1'(s('type.one.one',X209))),s(X210,X212)))) )),
  inference(superposition,[],[f212,f165])).
fof(f8156,plain,(
  ( ! [X177,X175,X173,X171,X180,X178,X174,X172,X170,X181,X179] : (s(X178,X179) != s(X178,X180) | s('type.pair.prod'('type.infer.exc'(fun(X170,fun(X171,fun(X172,fun(X173,fun(X174,'type.one.one'))))),X181),X178),'const.infer.st_ex_return_2'(s(fun(X170,fun(X171,fun(X172,fun(X173,fun(X174,'type.one.one'))))),X175),s(X178,X179))) = s('type.pair.prod'('type.infer.exc'(fun(X170,fun(X171,fun(X172,fun(X173,fun(X174,'type.one.one'))))),X181),X178),'const.pair.,_2'(s('type.infer.exc'(fun(X170,fun(X171,fun(X172,fun(X173,fun(X174,'type.one.one'))))),X181),'const.infer.Success_1'(s(fun(X170,fun(X171,fun(X172,fun(X173,fun(X174,'type.one.one'))))),X177))),s(X178,X180)))) )),
  inference(subsumption_resolution,[],[f5801,f815])).
fof(f5801,plain,(
  ( ! [X177,X175,X173,X171,X180,X178,X176,X174,X172,X170,X181,X179] : (s(fun(X170,fun(X171,fun(X172,fun(X173,fun(X174,'type.one.one'))))),X176) != s(fun(X170,fun(X171,fun(X172,fun(X173,fun(X174,'type.one.one'))))),X177) | s(X178,X179) != s(X178,X180) | s('type.pair.prod'('type.infer.exc'(fun(X170,fun(X171,fun(X172,fun(X173,fun(X174,'type.one.one'))))),X181),X178),'const.infer.st_ex_return_2'(s(fun(X170,fun(X171,fun(X172,fun(X173,fun(X174,'type.one.one'))))),X175),s(X178,X179))) = s('type.pair.prod'('type.infer.exc'(fun(X170,fun(X171,fun(X172,fun(X173,fun(X174,'type.one.one'))))),X181),X178),'const.pair.,_2'(s('type.infer.exc'(fun(X170,fun(X171,fun(X172,fun(X173,fun(X174,'type.one.one'))))),X181),'const.infer.Success_1'(s(fun(X170,fun(X171,fun(X172,fun(X173,fun(X174,'type.one.one'))))),X177))),s(X178,X180)))) )),
  inference(superposition,[],[f212,f815])).
fof(f8155,plain,(
  ( ! [X158,X156,X154,X152,X151,X149,X157,X155,X150,X148] : (s(X155,X156) != s(X155,X157) | s('type.pair.prod'('type.infer.exc'(fun(X148,fun(X149,fun(X150,fun(X151,'type.one.one')))),X158),X155),'const.infer.st_ex_return_2'(s(fun(X148,fun(X149,fun(X150,fun(X151,'type.one.one')))),X152),s(X155,X156))) = s('type.pair.prod'('type.infer.exc'(fun(X148,fun(X149,fun(X150,fun(X151,'type.one.one')))),X158),X155),'const.pair.,_2'(s('type.infer.exc'(fun(X148,fun(X149,fun(X150,fun(X151,'type.one.one')))),X158),'const.infer.Success_1'(s(fun(X148,fun(X149,fun(X150,fun(X151,'type.one.one')))),X154))),s(X155,X157)))) )),
  inference(subsumption_resolution,[],[f5799,f787])).
fof(f5799,plain,(
  ( ! [X158,X156,X154,X152,X151,X149,X157,X155,X153,X150,X148] : (s(fun(X148,fun(X149,fun(X150,fun(X151,'type.one.one')))),X153) != s(fun(X148,fun(X149,fun(X150,fun(X151,'type.one.one')))),X154) | s(X155,X156) != s(X155,X157) | s('type.pair.prod'('type.infer.exc'(fun(X148,fun(X149,fun(X150,fun(X151,'type.one.one')))),X158),X155),'const.infer.st_ex_return_2'(s(fun(X148,fun(X149,fun(X150,fun(X151,'type.one.one')))),X152),s(X155,X156))) = s('type.pair.prod'('type.infer.exc'(fun(X148,fun(X149,fun(X150,fun(X151,'type.one.one')))),X158),X155),'const.pair.,_2'(s('type.infer.exc'(fun(X148,fun(X149,fun(X150,fun(X151,'type.one.one')))),X158),'const.infer.Success_1'(s(fun(X148,fun(X149,fun(X150,fun(X151,'type.one.one')))),X154))),s(X155,X157)))) )),
  inference(superposition,[],[f212,f787])).
fof(f8154,plain,(
  ( ! [X134,X130,X128,X136,X135,X133,X131,X129,X137] : (s(X134,X135) != s(X134,X136) | s('type.pair.prod'('type.infer.exc'(fun(X128,fun(X129,fun(X130,'type.one.one'))),X137),X134),'const.infer.st_ex_return_2'(s(fun(X128,fun(X129,fun(X130,'type.one.one'))),X131),s(X134,X135))) = s('type.pair.prod'('type.infer.exc'(fun(X128,fun(X129,fun(X130,'type.one.one'))),X137),X134),'const.pair.,_2'(s('type.infer.exc'(fun(X128,fun(X129,fun(X130,'type.one.one'))),X137),'const.infer.Success_1'(s(fun(X128,fun(X129,fun(X130,'type.one.one'))),X133))),s(X134,X136)))) )),
  inference(subsumption_resolution,[],[f5797,f752])).
fof(f5797,plain,(
  ( ! [X134,X132,X130,X128,X136,X135,X133,X131,X129,X137] : (s(fun(X128,fun(X129,fun(X130,'type.one.one'))),X132) != s(fun(X128,fun(X129,fun(X130,'type.one.one'))),X133) | s(X134,X135) != s(X134,X136) | s('type.pair.prod'('type.infer.exc'(fun(X128,fun(X129,fun(X130,'type.one.one'))),X137),X134),'const.infer.st_ex_return_2'(s(fun(X128,fun(X129,fun(X130,'type.one.one'))),X131),s(X134,X135))) = s('type.pair.prod'('type.infer.exc'(fun(X128,fun(X129,fun(X130,'type.one.one'))),X137),X134),'const.pair.,_2'(s('type.infer.exc'(fun(X128,fun(X129,fun(X130,'type.one.one'))),X137),'const.infer.Success_1'(s(fun(X128,fun(X129,fun(X130,'type.one.one'))),X133))),s(X134,X136)))) )),
  inference(superposition,[],[f212,f752])).
fof(f8153,plain,(
  ( ! [X111,X118,X116,X114,X112,X110,X117,X115] : (s(X115,X116) != s(X115,X117) | s('type.pair.prod'('type.infer.exc'(fun(X110,fun(X111,'type.one.one')),X118),X115),'const.infer.st_ex_return_2'(s(fun(X110,fun(X111,'type.one.one')),X112),s(X115,X116))) = s('type.pair.prod'('type.infer.exc'(fun(X110,fun(X111,'type.one.one')),X118),X115),'const.pair.,_2'(s('type.infer.exc'(fun(X110,fun(X111,'type.one.one')),X118),'const.infer.Success_1'(s(fun(X110,fun(X111,'type.one.one')),X114))),s(X115,X117)))) )),
  inference(subsumption_resolution,[],[f5795,f724])).
fof(f5795,plain,(
  ( ! [X111,X118,X116,X114,X112,X110,X117,X115,X113] : (s(fun(X110,fun(X111,'type.one.one')),X113) != s(fun(X110,fun(X111,'type.one.one')),X114) | s(X115,X116) != s(X115,X117) | s('type.pair.prod'('type.infer.exc'(fun(X110,fun(X111,'type.one.one')),X118),X115),'const.infer.st_ex_return_2'(s(fun(X110,fun(X111,'type.one.one')),X112),s(X115,X116))) = s('type.pair.prod'('type.infer.exc'(fun(X110,fun(X111,'type.one.one')),X118),X115),'const.pair.,_2'(s('type.infer.exc'(fun(X110,fun(X111,'type.one.one')),X118),'const.infer.Success_1'(s(fun(X110,fun(X111,'type.one.one')),X114))),s(X115,X117)))) )),
  inference(superposition,[],[f212,f724])).
fof(f8152,plain,(
  ( ! [X94,X101,X99,X97,X95,X100,X98] : (s(X98,X99) != s(X98,X100) | s('type.pair.prod'('type.infer.exc'(fun(X94,'type.one.one'),X101),X98),'const.infer.st_ex_return_2'(s(fun(X94,'type.one.one'),X95),s(X98,X99))) = s('type.pair.prod'('type.infer.exc'(fun(X94,'type.one.one'),X101),X98),'const.pair.,_2'(s('type.infer.exc'(fun(X94,'type.one.one'),X101),'const.infer.Success_1'(s(fun(X94,'type.one.one'),X97))),s(X98,X100)))) )),
  inference(subsumption_resolution,[],[f5793,f605])).
fof(f5793,plain,(
  ( ! [X94,X101,X99,X97,X95,X100,X98,X96] : (s(fun(X94,'type.one.one'),X96) != s(fun(X94,'type.one.one'),X97) | s(X98,X99) != s(X98,X100) | s('type.pair.prod'('type.infer.exc'(fun(X94,'type.one.one'),X101),X98),'const.infer.st_ex_return_2'(s(fun(X94,'type.one.one'),X95),s(X98,X99))) = s('type.pair.prod'('type.infer.exc'(fun(X94,'type.one.one'),X101),X98),'const.pair.,_2'(s('type.infer.exc'(fun(X94,'type.one.one'),X101),'const.infer.Success_1'(s(fun(X94,'type.one.one'),X97))),s(X98,X100)))) )),
  inference(superposition,[],[f212,f605])).
fof(f8151,plain,(
  ( ! [X92,X90,X88,X93,X91,X89] : (s('type.pair.prod'('type.infer.exc'(bool,X93),X90),'const.infer.st_ex_return_2'(s(bool,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(bool),X88))),s(X90,X91))) = s('type.pair.prod'('type.infer.exc'(bool,X93),X90),'const.pair.,_2'(s('type.infer.exc'(bool,X93),'const.infer.Success_1'(s(bool,X89))),s(X90,X92))) | s(bool,'T_0') != s(bool,X89) | s(X90,X91) != s(X90,X92) | s(bool,'F_0') = s(bool,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(bool),X88)))) )),
  inference(forward_demodulation,[],[f5792,f168])).
fof(f5792,plain,(
  ( ! [X92,X90,X88,X93,X91,X89] : (s(bool,'T_0') != s(bool,X89) | s(X90,X91) != s(X90,X92) | s('type.pair.prod'('type.infer.exc'(bool,X93),X90),'const.pair.,_2'(s('type.infer.exc'(bool,X93),'const.infer.Success_1'(s(bool,X89))),s(X90,X92))) = s('type.pair.prod'('type.infer.exc'(bool,X93),X90),'const.infer.st_ex_return_2'(s(bool,happ(s(fun('type.infer.infer_st'(bool),bool),'const.infer.infer_st_subst_0'),s('type.infer.infer_st'(bool),X88))),s(X90,X91))) | s(bool,'F_0') = s(bool,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(bool),X88)))) )),
  inference(superposition,[],[f212,f293])).
fof(f5788,plain,(
  ( ! [X68,X66,X64,X69,X67,X65,X63] : (s(bool,X63) != s(bool,X64) | s(X65,X66) != s(X65,X67) | s('type.pair.prod'('type.infer.exc'(bool,X68),X65),'const.infer.st_ex_return_2'(s(bool,'T_0'),s(X65,X66))) = s('type.pair.prod'('type.infer.exc'(bool,X68),X65),'const.pair.,_2'(s('type.infer.exc'(bool,X68),'const.infer.Success_1'(s(bool,X64))),s(X65,X67))) | s(bool,X63) = s(bool,X69) | s(bool,'T_0') = s(bool,X69)) )),
  inference(superposition,[],[f212,f272])).
fof(f5785,plain,(
  ( ! [X47,X45,X43,X48,X46,X44,X49] : (s(bool,X44) != s(bool,X45) | s(X46,X47) != s(X46,X48) | s('type.pair.prod'('type.infer.exc'(bool,X49),X46),'const.infer.st_ex_return_2'(s(bool,X43),s(X46,X47))) = s('type.pair.prod'('type.infer.exc'(bool,X49),X46),'const.pair.,_2'(s('type.infer.exc'(bool,X49),'const.infer.Success_1'(s(bool,X45))),s(X46,X48))) | s(bool,'T_0') = s(bool,X43) | s(bool,'T_0') = s(bool,X44)) )),
  inference(superposition,[],[f212,f272])).
fof(f5783,plain,(
  ( ! [X30,X35,X33,X31,X29,X34,X32] : (s(bool,'T_0') != s(bool,X30) | s(X31,X32) != s(X31,X33) | s('type.pair.prod'('type.infer.exc'(bool,X34),X31),'const.infer.st_ex_return_2'(s(bool,X29),s(X31,X32))) = s('type.pair.prod'('type.infer.exc'(bool,X34),X31),'const.pair.,_2'(s('type.infer.exc'(bool,X34),'const.infer.Success_1'(s(bool,X30))),s(X31,X33))) | s(bool,X29) = s(bool,X35) | s(bool,'T_0') = s(bool,X35)) )),
  inference(superposition,[],[f212,f272])).
fof(f5782,plain,(
  ( ! [X28,X26,X24,X23,X21,X19,X27,X25,X22,X20,X18] : (s(X18,X24) != s(X18,happ(s(fun(X20,X18),X21),s(X20,happ(s(fun(X19,X20),X22),s(X19,X23))))) | s(X25,X26) != s(X25,X27) | s('type.pair.prod'('type.infer.exc'(X18,X28),X25),'const.pair.,_2'(s('type.infer.exc'(X18,X28),'const.infer.Success_1'(s(X18,X24))),s(X25,X27))) = s('type.pair.prod'('type.infer.exc'(X18,X28),X25),'const.infer.st_ex_return_2'(s(X18,happ(s(fun(X19,X18),'_dst_x0x1_2'(s(fun(X20,X18),X21),s(fun(X19,X20),X22))),s(X19,X23))),s(X25,X26)))) )),
  inference(superposition,[],[f212,f206])).
fof(f5781,plain,(
  ( ! [X14,X12,X10,X8,X17,X7,X15,X13,X11,X9,X16] : (s(X7,X13) != s(X7,happ(s(fun(X10,X7),'_dst_x0x1_2'(s(fun(X8,X7),X9),s(fun(X10,X8),X11))),s(X10,X12))) | s(X14,X15) != s(X14,X16) | s('type.pair.prod'('type.infer.exc'(X7,X17),X14),'const.pair.,_2'(s('type.infer.exc'(X7,X17),'const.infer.Success_1'(s(X7,X13))),s(X14,X16))) = s('type.pair.prod'('type.infer.exc'(X7,X17),X14),'const.infer.st_ex_return_2'(s(X7,happ(s(fun(X8,X7),X9),s(X8,happ(s(fun(X10,X8),X11),s(X10,X12))))),s(X14,X15)))) )),
  inference(superposition,[],[f212,f206])).
fof(f3889,plain,(
  ( ! [X6,X4,X2,X0,X12,X10,X8,X7,X5,X3,X1,X11,X9] : (s('type.pair.prod'('type.infer.exc'(X0,X1),X2),'const.infer.st_ex_return_2'(s(X0,happ(s(fun(X3,X0),X4),s(X3,happ(s(fun(X5,X3),X6),s(X5,X7))))),s(X2,happ(s(fun(X8,X2),X9),s(X8,happ(s(fun(X10,X8),X11),s(X10,X12))))))) = s('type.pair.prod'('type.infer.exc'(X0,X1),X2),'const.pair.,_2'(s('type.infer.exc'(X0,X1),'const.infer.Success_1'(s(X0,happ(s(fun(X5,X0),'_dst_x0x1_2'(s(fun(X3,X0),X4),s(fun(X5,X3),X6))),s(X5,X7))))),s(X2,happ(s(fun(X10,X2),'_dst_x0x1_2'(s(fun(X8,X2),X9),s(fun(X10,X8),X11))),s(X10,X12)))))) )),
  inference(unit_resulting_resolution,[],[f206,f206,f212])).
fof(f8065,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'(X0,X1),X2),'const.infer.st_ex_return_2'(s(X0,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(X0),X3))),s(X2,happ(s(fun(X4,X2),X5),s(X4,happ(s(fun(X6,X4),X7),s(X6,X8))))))) = s('type.pair.prod'('type.infer.exc'(X0,X1),X2),'const.pair.,_2'(s('type.infer.exc'(X0,X1),'const.infer.Success_1'(s(X0,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(X0),X3))))),s(X2,happ(s(fun(X6,X2),'_dst_x0x1_2'(s(fun(X4,X2),X5),s(fun(X6,X4),X7))),s(X6,X8)))))) )),
  inference(forward_demodulation,[],[f3910,f168])).
fof(f3910,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'(X0,X1),X2),'const.infer.st_ex_return_2'(s(X0,happ(s(fun('type.infer.infer_st'(X0),X0),'const.infer.infer_st_subst_0'),s('type.infer.infer_st'(X0),X3))),s(X2,happ(s(fun(X4,X2),X5),s(X4,happ(s(fun(X6,X4),X7),s(X6,X8))))))) = s('type.pair.prod'('type.infer.exc'(X0,X1),X2),'const.pair.,_2'(s('type.infer.exc'(X0,X1),'const.infer.Success_1'(s(X0,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(X0),X3))))),s(X2,happ(s(fun(X6,X2),'_dst_x0x1_2'(s(fun(X4,X2),X5),s(fun(X6,X4),X7))),s(X6,X8)))))) )),
  inference(unit_resulting_resolution,[],[f168,f206,f212])).
fof(f3911,plain,(
  ( ! [X6,X4,X2,X0,X12,X10,X8,X7,X5,X3,X1,X11,X9] : (s('type.pair.prod'('type.infer.exc'(X0,X1),X2),'const.infer.st_ex_return_2'(s(X0,happ(s(fun(X3,X0),'_dst_x0x1_2'(s(fun(X4,X0),X5),s(fun(X3,X4),X6))),s(X3,X7))),s(X2,happ(s(fun(X8,X2),X9),s(X8,happ(s(fun(X10,X8),X11),s(X10,X12))))))) = s('type.pair.prod'('type.infer.exc'(X0,X1),X2),'const.pair.,_2'(s('type.infer.exc'(X0,X1),'const.infer.Success_1'(s(X0,happ(s(fun(X4,X0),X5),s(X4,happ(s(fun(X3,X4),X6),s(X3,X7))))))),s(X2,happ(s(fun(X10,X2),'_dst_x0x1_2'(s(fun(X8,X2),X9),s(fun(X10,X8),X11))),s(X10,X12)))))) )),
  inference(unit_resulting_resolution,[],[f206,f206,f212])).
fof(f3913,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1,X9] : (s('type.pair.prod'('type.infer.exc'(fun(X0,'type.one.one'),X1),X2),'const.infer.st_ex_return_2'(s(fun(X0,'type.one.one'),X3),s(X2,happ(s(fun(X4,X2),X5),s(X4,happ(s(fun(X6,X4),X7),s(X6,X8))))))) = s('type.pair.prod'('type.infer.exc'(fun(X0,'type.one.one'),X1),X2),'const.pair.,_2'(s('type.infer.exc'(fun(X0,'type.one.one'),X1),'const.infer.Success_1'(s(fun(X0,'type.one.one'),X9))),s(X2,happ(s(fun(X6,X2),'_dst_x0x1_2'(s(fun(X4,X2),X5),s(fun(X6,X4),X7))),s(X6,X8)))))) )),
  inference(unit_resulting_resolution,[],[f605,f206,f212])).
fof(f3914,plain,(
  ( ! [X6,X4,X2,X0,X10,X8,X7,X5,X3,X1,X9] : (s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,'type.one.one')),X2),X3),'const.infer.st_ex_return_2'(s(fun(X0,fun(X1,'type.one.one')),X4),s(X3,happ(s(fun(X5,X3),X6),s(X5,happ(s(fun(X7,X5),X8),s(X7,X9))))))) = s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,'type.one.one')),X2),X3),'const.pair.,_2'(s('type.infer.exc'(fun(X0,fun(X1,'type.one.one')),X2),'const.infer.Success_1'(s(fun(X0,fun(X1,'type.one.one')),X10))),s(X3,happ(s(fun(X7,X3),'_dst_x0x1_2'(s(fun(X5,X3),X6),s(fun(X7,X5),X8))),s(X7,X9)))))) )),
  inference(unit_resulting_resolution,[],[f724,f206,f212])).
fof(f3915,plain,(
  ( ! [X6,X4,X2,X0,X10,X8,X7,X5,X3,X1,X11,X9] : (s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,fun(X2,'type.one.one'))),X3),X4),'const.infer.st_ex_return_2'(s(fun(X0,fun(X1,fun(X2,'type.one.one'))),X5),s(X4,happ(s(fun(X6,X4),X7),s(X6,happ(s(fun(X8,X6),X9),s(X8,X10))))))) = s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,fun(X2,'type.one.one'))),X3),X4),'const.pair.,_2'(s('type.infer.exc'(fun(X0,fun(X1,fun(X2,'type.one.one'))),X3),'const.infer.Success_1'(s(fun(X0,fun(X1,fun(X2,'type.one.one'))),X11))),s(X4,happ(s(fun(X8,X4),'_dst_x0x1_2'(s(fun(X6,X4),X7),s(fun(X8,X6),X9))),s(X8,X10)))))) )),
  inference(unit_resulting_resolution,[],[f752,f206,f212])).
fof(f3916,plain,(
  ( ! [X6,X4,X2,X0,X12,X10,X8,X7,X5,X3,X1,X11,X9] : (s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,fun(X2,fun(X3,'type.one.one')))),X4),X5),'const.infer.st_ex_return_2'(s(fun(X0,fun(X1,fun(X2,fun(X3,'type.one.one')))),X6),s(X5,happ(s(fun(X7,X5),X8),s(X7,happ(s(fun(X9,X7),X10),s(X9,X11))))))) = s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,fun(X2,fun(X3,'type.one.one')))),X4),X5),'const.pair.,_2'(s('type.infer.exc'(fun(X0,fun(X1,fun(X2,fun(X3,'type.one.one')))),X4),'const.infer.Success_1'(s(fun(X0,fun(X1,fun(X2,fun(X3,'type.one.one')))),X12))),s(X5,happ(s(fun(X9,X5),'_dst_x0x1_2'(s(fun(X7,X5),X8),s(fun(X9,X7),X10))),s(X9,X11)))))) )),
  inference(unit_resulting_resolution,[],[f787,f206,f212])).
fof(f3917,plain,(
  ( ! [X6,X4,X2,X0,X12,X10,X8,X7,X5,X3,X1,X13,X11,X9] : (s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,fun(X2,fun(X3,fun(X4,'type.one.one'))))),X5),X6),'const.infer.st_ex_return_2'(s(fun(X0,fun(X1,fun(X2,fun(X3,fun(X4,'type.one.one'))))),X7),s(X6,happ(s(fun(X8,X6),X9),s(X8,happ(s(fun(X10,X8),X11),s(X10,X12))))))) = s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,fun(X2,fun(X3,fun(X4,'type.one.one'))))),X5),X6),'const.pair.,_2'(s('type.infer.exc'(fun(X0,fun(X1,fun(X2,fun(X3,fun(X4,'type.one.one'))))),X5),'const.infer.Success_1'(s(fun(X0,fun(X1,fun(X2,fun(X3,fun(X4,'type.one.one'))))),X13))),s(X6,happ(s(fun(X10,X6),'_dst_x0x1_2'(s(fun(X8,X6),X9),s(fun(X10,X8),X11))),s(X10,X12)))))) )),
  inference(unit_resulting_resolution,[],[f815,f206,f212])).
fof(f3920,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),'const.infer.st_ex_return_2'(s('type.one.one',X2),s(X1,happ(s(fun(X3,X1),X4),s(X3,happ(s(fun(X5,X3),X6),s(X5,X7))))))) = s('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),'const.pair.,_2'(s('type.infer.exc'('type.one.one',X0),'const.infer.Success_1'(s('type.one.one',X8))),s(X1,happ(s(fun(X5,X1),'_dst_x0x1_2'(s(fun(X3,X1),X4),s(fun(X5,X3),X6))),s(X5,X7)))))) )),
  inference(unit_resulting_resolution,[],[f258,f206,f212])).
fof(f8063,plain,(
  ( ! [X6,X4,X2,X0,X10,X8,X7,X5,X3,X1,X9] : (s('type.pair.prod'('type.infer.exc'('type.list.list'(X0),X1),X2),'const.infer.st_ex_return_2'(s('type.list.list'(X0),'const.list.MAP_2'(s(fun(X3,X0),X4),s('type.list.list'(X3),X5))),s(X2,happ(s(fun(X7,X2),X8),s(X7,happ(s(fun(X6,X7),X9),s(X6,X10))))))) = s('type.pair.prod'('type.infer.exc'('type.list.list'(X0),X1),X2),'const.pair.,_2'(s('type.infer.exc'('type.list.list'(X0),X1),'const.infer.Success_1'(s('type.list.list'(X0),'const.list.MAP_2'(s(fun(X3,X0),X4),s('type.list.list'(X3),X5))))),s(X2,happ(s(fun(X6,X2),'_dst_x0x1_2'(s(fun(X7,X2),X8),s(fun(X6,X7),X9))),s(X6,X10)))))) )),
  inference(forward_demodulation,[],[f3921,f180])).
fof(f3921,plain,(
  ( ! [X6,X4,X2,X0,X10,X8,X7,X5,X3,X1,X9] : (s('type.pair.prod'('type.infer.exc'('type.list.list'(X0),X1),X2),'const.pair.,_2'(s('type.infer.exc'('type.list.list'(X0),X1),'const.infer.Success_1'(s('type.list.list'(X0),'const.list.MAP_2'(s(fun(X3,X0),X4),s('type.list.list'(X3),X5))))),s(X2,happ(s(fun(X6,X2),'_dst_x0x1_2'(s(fun(X7,X2),X8),s(fun(X6,X7),X9))),s(X6,X10))))) = s('type.pair.prod'('type.infer.exc'('type.list.list'(X0),X1),X2),'const.infer.st_ex_return_2'(s('type.list.list'(X0),happ(s(fun('type.list.list'(X3),'type.list.list'(X0)),happ(s(fun(fun(X3,X0),fun('type.list.list'(X3),'type.list.list'(X0))),'const.list.MAP_0'),s(fun(X3,X0),X4))),s('type.list.list'(X3),X5))),s(X2,happ(s(fun(X7,X2),X8),s(X7,happ(s(fun(X6,X7),X9),s(X6,X10)))))))) )),
  inference(unit_resulting_resolution,[],[f180,f206,f212])).
fof(f8060,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.num.num',X0),X1),'const.infer.st_ex_return_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X3))),s(X1,happ(s(fun(X4,X1),X5),s(X4,happ(s(fun(X6,X4),X7),s(X6,X8))))))) = s('type.pair.prod'('type.infer.exc'('type.num.num',X0),X1),'const.pair.,_2'(s('type.infer.exc'('type.num.num',X0),'const.infer.Success_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X3))))),s(X1,happ(s(fun(X6,X1),'_dst_x0x1_2'(s(fun(X4,X1),X5),s(fun(X6,X4),X7))),s(X6,X8)))))) )),
  inference(forward_demodulation,[],[f3924,f175])).
fof(f3924,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.num.num',X0),X1),'const.infer.st_ex_return_2'(s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.arithmetic.+_1'(s('type.num.num',X2))),s('type.num.num',X3))),s(X1,happ(s(fun(X4,X1),X5),s(X4,happ(s(fun(X6,X4),X7),s(X6,X8))))))) = s('type.pair.prod'('type.infer.exc'('type.num.num',X0),X1),'const.pair.,_2'(s('type.infer.exc'('type.num.num',X0),'const.infer.Success_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X3))))),s(X1,happ(s(fun(X6,X1),'_dst_x0x1_2'(s(fun(X4,X1),X5),s(fun(X6,X4),X7))),s(X6,X8)))))) )),
  inference(unit_resulting_resolution,[],[f175,f206,f212])).
fof(f8059,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),X1),'const.infer.st_ex_return_2'(s('type.infer_t.infer_t','const.infer_t.Infer_Tuvar_1'(s('type.num.num',X2))),s(X1,happ(s(fun(X3,X1),X4),s(X3,happ(s(fun(X5,X3),X6),s(X5,X7))))))) = s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),X1),'const.pair.,_2'(s('type.infer.exc'('type.infer_t.infer_t',X0),'const.infer.Success_1'(s('type.infer_t.infer_t','const.infer_t.Infer_Tuvar_1'(s('type.num.num',X2))))),s(X1,happ(s(fun(X5,X1),'_dst_x0x1_2'(s(fun(X3,X1),X4),s(fun(X5,X3),X6))),s(X5,X7)))))) )),
  inference(forward_demodulation,[],[f3925,f166])).
fof(f3925,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),X1),'const.infer.st_ex_return_2'(s('type.infer_t.infer_t',happ(s(fun('type.num.num','type.infer_t.infer_t'),'const.infer_t.Infer_Tuvar_0'),s('type.num.num',X2))),s(X1,happ(s(fun(X3,X1),X4),s(X3,happ(s(fun(X5,X3),X6),s(X5,X7))))))) = s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),X1),'const.pair.,_2'(s('type.infer.exc'('type.infer_t.infer_t',X0),'const.infer.Success_1'(s('type.infer_t.infer_t','const.infer_t.Infer_Tuvar_1'(s('type.num.num',X2))))),s(X1,happ(s(fun(X5,X1),'_dst_x0x1_2'(s(fun(X3,X1),X4),s(fun(X5,X3),X6))),s(X5,X7)))))) )),
  inference(unit_resulting_resolution,[],[f166,f206,f212])).
fof(f8058,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),X1),'const.infer.st_ex_return_2'(s('type.infer_t.infer_t','const.unify.t_walkstar_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X2),s('type.infer_t.infer_t',X3))),s(X1,happ(s(fun(X5,X1),X6),s(X5,happ(s(fun(X4,X5),X7),s(X4,X8))))))) = s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),X1),'const.pair.,_2'(s('type.infer.exc'('type.infer_t.infer_t',X0),'const.infer.Success_1'(s('type.infer_t.infer_t','const.unify.t_walkstar_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X2),s('type.infer_t.infer_t',X3))))),s(X1,happ(s(fun(X4,X1),'_dst_x0x1_2'(s(fun(X5,X1),X6),s(fun(X4,X5),X7))),s(X4,X8)))))) )),
  inference(forward_demodulation,[],[f3926,f176])).
fof(f3926,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),X1),'const.pair.,_2'(s('type.infer.exc'('type.infer_t.infer_t',X0),'const.infer.Success_1'(s('type.infer_t.infer_t','const.unify.t_walkstar_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X2),s('type.infer_t.infer_t',X3))))),s(X1,happ(s(fun(X4,X1),'_dst_x0x1_2'(s(fun(X5,X1),X6),s(fun(X4,X5),X7))),s(X4,X8))))) = s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),X1),'const.infer.st_ex_return_2'(s('type.infer_t.infer_t',happ(s(fun('type.infer_t.infer_t','type.infer_t.infer_t'),happ(s(fun('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),fun('type.infer_t.infer_t','type.infer_t.infer_t')),'const.unify.t_walkstar_0'),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X2))),s('type.infer_t.infer_t',X3))),s(X1,happ(s(fun(X5,X1),X6),s(X5,happ(s(fun(X4,X5),X7),s(X4,X8)))))))) )),
  inference(unit_resulting_resolution,[],[f176,f206,f212])).
fof(f8056,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1,X9] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X0),X2),X3),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'(X0,X1),X0),'const.infer.read_1'(s(X0,X4))),s(X3,happ(s(fun(X5,X3),X6),s(X5,happ(s(fun(X7,X5),X8),s(X7,X9))))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X0),X2),X3),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X0),X2),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'(X0,X1),X0),'const.infer.read_1'(s(X0,X4))))),s(X3,happ(s(fun(X7,X3),'_dst_x0x1_2'(s(fun(X5,X3),X6),s(fun(X7,X5),X8))),s(X7,X9)))))) )),
  inference(forward_demodulation,[],[f3928,f178])).
fof(f3928,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1,X9] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X0),X2),X3),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'(X0,X1),X0),happ(s(fun(X0,'type.pair.prod'('type.infer.exc'(X0,X1),X0)),'const.infer.read_0'),s(X0,X4))),s(X3,happ(s(fun(X5,X3),X6),s(X5,happ(s(fun(X7,X5),X8),s(X7,X9))))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X0),X2),X3),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X0),X2),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'(X0,X1),X0),'const.infer.read_1'(s(X0,X4))))),s(X3,happ(s(fun(X7,X3),'_dst_x0x1_2'(s(fun(X5,X3),X6),s(fun(X7,X5),X8))),s(X7,X9)))))) )),
  inference(unit_resulting_resolution,[],[f178,f206,f212])).
fof(f8055,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1,X9] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),X2),X3),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),'const.infer.fresh_uvar_1'(s('type.infer.infer_st'(X1),X4))),s(X3,happ(s(fun(X5,X3),X6),s(X5,happ(s(fun(X7,X5),X8),s(X7,X9))))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),X2),X3),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),X2),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),'const.infer.fresh_uvar_1'(s('type.infer.infer_st'(X1),X4))))),s(X3,happ(s(fun(X7,X3),'_dst_x0x1_2'(s(fun(X5,X3),X6),s(fun(X7,X5),X8))),s(X7,X9)))))) )),
  inference(forward_demodulation,[],[f3929,f179])).
fof(f3929,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1,X9] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),X2),X3),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),happ(s(fun('type.infer.infer_st'(X1),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1))),'const.infer.fresh_uvar_0'),s('type.infer.infer_st'(X1),X4))),s(X3,happ(s(fun(X5,X3),X6),s(X5,happ(s(fun(X7,X5),X8),s(X7,X9))))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),X2),X3),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),X2),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),'const.infer.fresh_uvar_1'(s('type.infer.infer_st'(X1),X4))))),s(X3,happ(s(fun(X7,X3),'_dst_x0x1_2'(s(fun(X5,X3),X6),s(fun(X7,X5),X8))),s(X7,X9)))))) )),
  inference(unit_resulting_resolution,[],[f179,f206,f212])).
fof(f8054,plain,(
  ( ! [X6,X4,X2,X0,X10,X8,X7,X5,X3,X1,X11,X9] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),X4),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'(X0,X1),X2),'const.infer.failwith_2'(s(X1,X5),s(X2,X6))),s(X4,happ(s(fun(X7,X4),X8),s(X7,happ(s(fun(X9,X7),X10),s(X9,X11))))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),X4),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'(X0,X1),X2),'const.infer.failwith_2'(s(X1,X5),s(X2,X6))))),s(X4,happ(s(fun(X9,X4),'_dst_x0x1_2'(s(fun(X7,X4),X8),s(fun(X9,X7),X10))),s(X9,X11)))))) )),
  inference(forward_demodulation,[],[f3930,f204])).
fof(f3930,plain,(
  ( ! [X6,X4,X2,X0,X10,X8,X7,X5,X3,X1,X11,X9] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),X4),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'(X0,X1),X2),happ(s(fun(X2,'type.pair.prod'('type.infer.exc'(X0,X1),X2)),'const.infer.failwith_1'(s(X1,X5))),s(X2,X6))),s(X4,happ(s(fun(X7,X4),X8),s(X7,happ(s(fun(X9,X7),X10),s(X9,X11))))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),X4),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'(X0,X1),X2),'const.infer.failwith_2'(s(X1,X5),s(X2,X6))))),s(X4,happ(s(fun(X9,X4),'_dst_x0x1_2'(s(fun(X7,X4),X8),s(fun(X9,X7),X10))),s(X9,X11)))))) )),
  inference(unit_resulting_resolution,[],[f204,f206,f212])).
fof(f8053,plain,(
  ( ! [X6,X4,X2,X0,X10,X8,X7,X5,X3,X1,X11,X9] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),X2),X3),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),'const.infer.guard_3'(s(bool,X4),s(X0,X5),s(X1,X6))),s(X3,happ(s(fun(X7,X3),X8),s(X7,happ(s(fun(X9,X7),X10),s(X9,X11))))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),X2),X3),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),X2),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),'const.infer.guard_3'(s(bool,X4),s(X0,X5),s(X1,X6))))),s(X3,happ(s(fun(X9,X3),'_dst_x0x1_2'(s(fun(X7,X3),X8),s(fun(X9,X7),X10))),s(X9,X11)))))) )),
  inference(forward_demodulation,[],[f3931,f183])).
fof(f3931,plain,(
  ( ! [X6,X4,X2,X0,X10,X8,X7,X5,X3,X1,X11,X9] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),X2),X3),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),happ(s(fun(X1,'type.pair.prod'('type.infer.exc'('type.one.one',X0),X1)),'const.infer.guard_2'(s(bool,X4),s(X0,X5))),s(X1,X6))),s(X3,happ(s(fun(X7,X3),X8),s(X7,happ(s(fun(X9,X7),X10),s(X9,X11))))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),X2),X3),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),X2),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),'const.infer.guard_3'(s(bool,X4),s(X0,X5),s(X1,X6))))),s(X3,happ(s(fun(X9,X3),'_dst_x0x1_2'(s(fun(X7,X3),X8),s(fun(X9,X7),X10))),s(X9,X11)))))) )),
  inference(unit_resulting_resolution,[],[f183,f206,f212])).
fof(f7002,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'(X0,X1),X2),'const.infer.st_ex_return_2'(s(X0,happ(s(fun(X3,X0),X4),s(X3,happ(s(fun(X5,X3),X6),s(X5,X7))))),s(X2,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(X2),X8))))) = s('type.pair.prod'('type.infer.exc'(X0,X1),X2),'const.pair.,_2'(s('type.infer.exc'(X0,X1),'const.infer.Success_1'(s(X0,happ(s(fun(X5,X0),'_dst_x0x1_2'(s(fun(X3,X0),X4),s(fun(X5,X3),X6))),s(X5,X7))))),s(X2,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(X2),X8)))))) )),
  inference(forward_demodulation,[],[f4813,f168])).
fof(f4813,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'(X0,X1),X2),'const.infer.st_ex_return_2'(s(X0,happ(s(fun(X3,X0),X4),s(X3,happ(s(fun(X5,X3),X6),s(X5,X7))))),s(X2,happ(s(fun('type.infer.infer_st'(X2),X2),'const.infer.infer_st_subst_0'),s('type.infer.infer_st'(X2),X8))))) = s('type.pair.prod'('type.infer.exc'(X0,X1),X2),'const.pair.,_2'(s('type.infer.exc'(X0,X1),'const.infer.Success_1'(s(X0,happ(s(fun(X5,X0),'_dst_x0x1_2'(s(fun(X3,X0),X4),s(fun(X5,X3),X6))),s(X5,X7))))),s(X2,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(X2),X8)))))) )),
  inference(unit_resulting_resolution,[],[f206,f168,f212])).
fof(f6969,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s('type.pair.prod'('type.infer.exc'(X0,X1),X2),'const.infer.st_ex_return_2'(s(X0,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(X0),X3))),s(X2,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(X2),X4))))) = s('type.pair.prod'('type.infer.exc'(X0,X1),X2),'const.pair.,_2'(s('type.infer.exc'(X0,X1),'const.infer.Success_1'(s(X0,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(X0),X3))))),s(X2,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(X2),X4)))))) )),
  inference(forward_demodulation,[],[f6968,f168])).
fof(f6968,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s('type.pair.prod'('type.infer.exc'(X0,X1),X2),'const.pair.,_2'(s('type.infer.exc'(X0,X1),'const.infer.Success_1'(s(X0,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(X0),X3))))),s(X2,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(X2),X4))))) = s('type.pair.prod'('type.infer.exc'(X0,X1),X2),'const.infer.st_ex_return_2'(s(X0,happ(s(fun('type.infer.infer_st'(X0),X0),'const.infer.infer_st_subst_0'),s('type.infer.infer_st'(X0),X3))),s(X2,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(X2),X4)))))) )),
  inference(forward_demodulation,[],[f4834,f168])).
fof(f4834,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s('type.pair.prod'('type.infer.exc'(X0,X1),X2),'const.pair.,_2'(s('type.infer.exc'(X0,X1),'const.infer.Success_1'(s(X0,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(X0),X3))))),s(X2,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(X2),X4))))) = s('type.pair.prod'('type.infer.exc'(X0,X1),X2),'const.infer.st_ex_return_2'(s(X0,happ(s(fun('type.infer.infer_st'(X0),X0),'const.infer.infer_st_subst_0'),s('type.infer.infer_st'(X0),X3))),s(X2,happ(s(fun('type.infer.infer_st'(X2),X2),'const.infer.infer_st_subst_0'),s('type.infer.infer_st'(X2),X4)))))) )),
  inference(unit_resulting_resolution,[],[f168,f168,f212])).
fof(f6967,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'(X0,X1),X2),'const.infer.st_ex_return_2'(s(X0,happ(s(fun(X5,X0),'_dst_x0x1_2'(s(fun(X3,X0),X4),s(fun(X5,X3),X6))),s(X5,X7))),s(X2,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(X2),X8))))) = s('type.pair.prod'('type.infer.exc'(X0,X1),X2),'const.pair.,_2'(s('type.infer.exc'(X0,X1),'const.infer.Success_1'(s(X0,happ(s(fun(X3,X0),X4),s(X3,happ(s(fun(X5,X3),X6),s(X5,X7))))))),s(X2,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(X2),X8)))))) )),
  inference(forward_demodulation,[],[f4835,f168])).
fof(f4835,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'(X0,X1),X2),'const.pair.,_2'(s('type.infer.exc'(X0,X1),'const.infer.Success_1'(s(X0,happ(s(fun(X3,X0),X4),s(X3,happ(s(fun(X5,X3),X6),s(X5,X7))))))),s(X2,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(X2),X8))))) = s('type.pair.prod'('type.infer.exc'(X0,X1),X2),'const.infer.st_ex_return_2'(s(X0,happ(s(fun(X5,X0),'_dst_x0x1_2'(s(fun(X3,X0),X4),s(fun(X5,X3),X6))),s(X5,X7))),s(X2,happ(s(fun('type.infer.infer_st'(X2),X2),'const.infer.infer_st_subst_0'),s('type.infer.infer_st'(X2),X8)))))) )),
  inference(unit_resulting_resolution,[],[f206,f168,f212])).
fof(f6964,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'(fun(X0,'type.one.one'),X1),X2),'const.infer.st_ex_return_2'(s(fun(X0,'type.one.one'),X3),s(X2,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(X2),X4))))) = s('type.pair.prod'('type.infer.exc'(fun(X0,'type.one.one'),X1),X2),'const.pair.,_2'(s('type.infer.exc'(fun(X0,'type.one.one'),X1),'const.infer.Success_1'(s(fun(X0,'type.one.one'),X5))),s(X2,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(X2),X4)))))) )),
  inference(forward_demodulation,[],[f4837,f168])).
fof(f4837,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'(fun(X0,'type.one.one'),X1),X2),'const.infer.st_ex_return_2'(s(fun(X0,'type.one.one'),X3),s(X2,happ(s(fun('type.infer.infer_st'(X2),X2),'const.infer.infer_st_subst_0'),s('type.infer.infer_st'(X2),X4))))) = s('type.pair.prod'('type.infer.exc'(fun(X0,'type.one.one'),X1),X2),'const.pair.,_2'(s('type.infer.exc'(fun(X0,'type.one.one'),X1),'const.infer.Success_1'(s(fun(X0,'type.one.one'),X5))),s(X2,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(X2),X4)))))) )),
  inference(unit_resulting_resolution,[],[f605,f168,f212])).
fof(f6963,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,'type.one.one')),X2),X3),'const.infer.st_ex_return_2'(s(fun(X0,fun(X1,'type.one.one')),X4),s(X3,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(X3),X5))))) = s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,'type.one.one')),X2),X3),'const.pair.,_2'(s('type.infer.exc'(fun(X0,fun(X1,'type.one.one')),X2),'const.infer.Success_1'(s(fun(X0,fun(X1,'type.one.one')),X6))),s(X3,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(X3),X5)))))) )),
  inference(forward_demodulation,[],[f4838,f168])).
fof(f4838,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,'type.one.one')),X2),X3),'const.infer.st_ex_return_2'(s(fun(X0,fun(X1,'type.one.one')),X4),s(X3,happ(s(fun('type.infer.infer_st'(X3),X3),'const.infer.infer_st_subst_0'),s('type.infer.infer_st'(X3),X5))))) = s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,'type.one.one')),X2),X3),'const.pair.,_2'(s('type.infer.exc'(fun(X0,fun(X1,'type.one.one')),X2),'const.infer.Success_1'(s(fun(X0,fun(X1,'type.one.one')),X6))),s(X3,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(X3),X5)))))) )),
  inference(unit_resulting_resolution,[],[f724,f168,f212])).
fof(f6962,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,fun(X2,'type.one.one'))),X3),X4),'const.infer.st_ex_return_2'(s(fun(X0,fun(X1,fun(X2,'type.one.one'))),X5),s(X4,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(X4),X6))))) = s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,fun(X2,'type.one.one'))),X3),X4),'const.pair.,_2'(s('type.infer.exc'(fun(X0,fun(X1,fun(X2,'type.one.one'))),X3),'const.infer.Success_1'(s(fun(X0,fun(X1,fun(X2,'type.one.one'))),X7))),s(X4,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(X4),X6)))))) )),
  inference(forward_demodulation,[],[f4839,f168])).
fof(f4839,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,fun(X2,'type.one.one'))),X3),X4),'const.infer.st_ex_return_2'(s(fun(X0,fun(X1,fun(X2,'type.one.one'))),X5),s(X4,happ(s(fun('type.infer.infer_st'(X4),X4),'const.infer.infer_st_subst_0'),s('type.infer.infer_st'(X4),X6))))) = s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,fun(X2,'type.one.one'))),X3),X4),'const.pair.,_2'(s('type.infer.exc'(fun(X0,fun(X1,fun(X2,'type.one.one'))),X3),'const.infer.Success_1'(s(fun(X0,fun(X1,fun(X2,'type.one.one'))),X7))),s(X4,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(X4),X6)))))) )),
  inference(unit_resulting_resolution,[],[f752,f168,f212])).
fof(f6961,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,fun(X2,fun(X3,'type.one.one')))),X4),X5),'const.infer.st_ex_return_2'(s(fun(X0,fun(X1,fun(X2,fun(X3,'type.one.one')))),X6),s(X5,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(X5),X7))))) = s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,fun(X2,fun(X3,'type.one.one')))),X4),X5),'const.pair.,_2'(s('type.infer.exc'(fun(X0,fun(X1,fun(X2,fun(X3,'type.one.one')))),X4),'const.infer.Success_1'(s(fun(X0,fun(X1,fun(X2,fun(X3,'type.one.one')))),X8))),s(X5,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(X5),X7)))))) )),
  inference(forward_demodulation,[],[f4840,f168])).
fof(f4840,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,fun(X2,fun(X3,'type.one.one')))),X4),X5),'const.infer.st_ex_return_2'(s(fun(X0,fun(X1,fun(X2,fun(X3,'type.one.one')))),X6),s(X5,happ(s(fun('type.infer.infer_st'(X5),X5),'const.infer.infer_st_subst_0'),s('type.infer.infer_st'(X5),X7))))) = s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,fun(X2,fun(X3,'type.one.one')))),X4),X5),'const.pair.,_2'(s('type.infer.exc'(fun(X0,fun(X1,fun(X2,fun(X3,'type.one.one')))),X4),'const.infer.Success_1'(s(fun(X0,fun(X1,fun(X2,fun(X3,'type.one.one')))),X8))),s(X5,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(X5),X7)))))) )),
  inference(unit_resulting_resolution,[],[f787,f168,f212])).
fof(f6960,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1,X9] : (s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,fun(X2,fun(X3,fun(X4,'type.one.one'))))),X5),X6),'const.infer.st_ex_return_2'(s(fun(X0,fun(X1,fun(X2,fun(X3,fun(X4,'type.one.one'))))),X7),s(X6,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(X6),X8))))) = s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,fun(X2,fun(X3,fun(X4,'type.one.one'))))),X5),X6),'const.pair.,_2'(s('type.infer.exc'(fun(X0,fun(X1,fun(X2,fun(X3,fun(X4,'type.one.one'))))),X5),'const.infer.Success_1'(s(fun(X0,fun(X1,fun(X2,fun(X3,fun(X4,'type.one.one'))))),X9))),s(X6,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(X6),X8)))))) )),
  inference(forward_demodulation,[],[f4841,f168])).
fof(f4841,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1,X9] : (s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,fun(X2,fun(X3,fun(X4,'type.one.one'))))),X5),X6),'const.infer.st_ex_return_2'(s(fun(X0,fun(X1,fun(X2,fun(X3,fun(X4,'type.one.one'))))),X7),s(X6,happ(s(fun('type.infer.infer_st'(X6),X6),'const.infer.infer_st_subst_0'),s('type.infer.infer_st'(X6),X8))))) = s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,fun(X2,fun(X3,fun(X4,'type.one.one'))))),X5),X6),'const.pair.,_2'(s('type.infer.exc'(fun(X0,fun(X1,fun(X2,fun(X3,fun(X4,'type.one.one'))))),X5),'const.infer.Success_1'(s(fun(X0,fun(X1,fun(X2,fun(X3,fun(X4,'type.one.one'))))),X9))),s(X6,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(X6),X8)))))) )),
  inference(unit_resulting_resolution,[],[f815,f168,f212])).
fof(f6957,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),'const.infer.st_ex_return_2'(s('type.one.one',X4),s(X1,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(X1),X3))))) = s('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),'const.pair.,_2'(s('type.infer.exc'('type.one.one',X0),'const.infer.Success_1'(s('type.one.one',X2))),s(X1,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(X1),X3)))))) )),
  inference(forward_demodulation,[],[f4844,f168])).
fof(f4844,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),'const.pair.,_2'(s('type.infer.exc'('type.one.one',X0),'const.infer.Success_1'(s('type.one.one',X2))),s(X1,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(X1),X3))))) = s('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),'const.infer.st_ex_return_2'(s('type.one.one',X4),s(X1,happ(s(fun('type.infer.infer_st'(X1),X1),'const.infer.infer_st_subst_0'),s('type.infer.infer_st'(X1),X3)))))) )),
  inference(unit_resulting_resolution,[],[f258,f168,f212])).
fof(f6956,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.list.list'(X0),X1),X2),'const.infer.st_ex_return_2'(s('type.list.list'(X0),'const.list.MAP_2'(s(fun(X3,X0),X4),s('type.list.list'(X3),X5))),s(X2,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(X2),X6))))) = s('type.pair.prod'('type.infer.exc'('type.list.list'(X0),X1),X2),'const.pair.,_2'(s('type.infer.exc'('type.list.list'(X0),X1),'const.infer.Success_1'(s('type.list.list'(X0),'const.list.MAP_2'(s(fun(X3,X0),X4),s('type.list.list'(X3),X5))))),s(X2,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(X2),X6)))))) )),
  inference(forward_demodulation,[],[f6955,f180])).
fof(f6955,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.list.list'(X0),X1),X2),'const.pair.,_2'(s('type.infer.exc'('type.list.list'(X0),X1),'const.infer.Success_1'(s('type.list.list'(X0),'const.list.MAP_2'(s(fun(X3,X0),X4),s('type.list.list'(X3),X5))))),s(X2,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(X2),X6))))) = s('type.pair.prod'('type.infer.exc'('type.list.list'(X0),X1),X2),'const.infer.st_ex_return_2'(s('type.list.list'(X0),happ(s(fun('type.list.list'(X3),'type.list.list'(X0)),happ(s(fun(fun(X3,X0),fun('type.list.list'(X3),'type.list.list'(X0))),'const.list.MAP_0'),s(fun(X3,X0),X4))),s('type.list.list'(X3),X5))),s(X2,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(X2),X6)))))) )),
  inference(forward_demodulation,[],[f4845,f168])).
fof(f4845,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.list.list'(X0),X1),X2),'const.pair.,_2'(s('type.infer.exc'('type.list.list'(X0),X1),'const.infer.Success_1'(s('type.list.list'(X0),'const.list.MAP_2'(s(fun(X3,X0),X4),s('type.list.list'(X3),X5))))),s(X2,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(X2),X6))))) = s('type.pair.prod'('type.infer.exc'('type.list.list'(X0),X1),X2),'const.infer.st_ex_return_2'(s('type.list.list'(X0),happ(s(fun('type.list.list'(X3),'type.list.list'(X0)),happ(s(fun(fun(X3,X0),fun('type.list.list'(X3),'type.list.list'(X0))),'const.list.MAP_0'),s(fun(X3,X0),X4))),s('type.list.list'(X3),X5))),s(X2,happ(s(fun('type.infer.infer_st'(X2),X2),'const.infer.infer_st_subst_0'),s('type.infer.infer_st'(X2),X6)))))) )),
  inference(unit_resulting_resolution,[],[f180,f168,f212])).
fof(f6950,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.num.num',X0),X1),'const.infer.st_ex_return_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X3))),s(X1,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(X1),X4))))) = s('type.pair.prod'('type.infer.exc'('type.num.num',X0),X1),'const.pair.,_2'(s('type.infer.exc'('type.num.num',X0),'const.infer.Success_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X3))))),s(X1,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(X1),X4)))))) )),
  inference(forward_demodulation,[],[f6949,f175])).
fof(f6949,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.num.num',X0),X1),'const.infer.st_ex_return_2'(s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.arithmetic.+_1'(s('type.num.num',X2))),s('type.num.num',X3))),s(X1,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(X1),X4))))) = s('type.pair.prod'('type.infer.exc'('type.num.num',X0),X1),'const.pair.,_2'(s('type.infer.exc'('type.num.num',X0),'const.infer.Success_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X3))))),s(X1,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(X1),X4)))))) )),
  inference(forward_demodulation,[],[f4848,f168])).
fof(f4848,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.num.num',X0),X1),'const.pair.,_2'(s('type.infer.exc'('type.num.num',X0),'const.infer.Success_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X3))))),s(X1,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(X1),X4))))) = s('type.pair.prod'('type.infer.exc'('type.num.num',X0),X1),'const.infer.st_ex_return_2'(s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.arithmetic.+_1'(s('type.num.num',X2))),s('type.num.num',X3))),s(X1,happ(s(fun('type.infer.infer_st'(X1),X1),'const.infer.infer_st_subst_0'),s('type.infer.infer_st'(X1),X4)))))) )),
  inference(unit_resulting_resolution,[],[f175,f168,f212])).
fof(f6948,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),X1),'const.infer.st_ex_return_2'(s('type.infer_t.infer_t','const.infer_t.Infer_Tuvar_1'(s('type.num.num',X2))),s(X1,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(X1),X3))))) = s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),X1),'const.pair.,_2'(s('type.infer.exc'('type.infer_t.infer_t',X0),'const.infer.Success_1'(s('type.infer_t.infer_t','const.infer_t.Infer_Tuvar_1'(s('type.num.num',X2))))),s(X1,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(X1),X3)))))) )),
  inference(forward_demodulation,[],[f6947,f166])).
fof(f6947,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),X1),'const.infer.st_ex_return_2'(s('type.infer_t.infer_t',happ(s(fun('type.num.num','type.infer_t.infer_t'),'const.infer_t.Infer_Tuvar_0'),s('type.num.num',X2))),s(X1,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(X1),X3))))) = s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),X1),'const.pair.,_2'(s('type.infer.exc'('type.infer_t.infer_t',X0),'const.infer.Success_1'(s('type.infer_t.infer_t','const.infer_t.Infer_Tuvar_1'(s('type.num.num',X2))))),s(X1,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(X1),X3)))))) )),
  inference(forward_demodulation,[],[f4849,f168])).
fof(f4849,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),X1),'const.pair.,_2'(s('type.infer.exc'('type.infer_t.infer_t',X0),'const.infer.Success_1'(s('type.infer_t.infer_t','const.infer_t.Infer_Tuvar_1'(s('type.num.num',X2))))),s(X1,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(X1),X3))))) = s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),X1),'const.infer.st_ex_return_2'(s('type.infer_t.infer_t',happ(s(fun('type.num.num','type.infer_t.infer_t'),'const.infer_t.Infer_Tuvar_0'),s('type.num.num',X2))),s(X1,happ(s(fun('type.infer.infer_st'(X1),X1),'const.infer.infer_st_subst_0'),s('type.infer.infer_st'(X1),X3)))))) )),
  inference(unit_resulting_resolution,[],[f166,f168,f212])).
fof(f6946,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),X1),'const.infer.st_ex_return_2'(s('type.infer_t.infer_t','const.unify.t_walkstar_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X2),s('type.infer_t.infer_t',X3))),s(X1,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(X1),X4))))) = s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),X1),'const.pair.,_2'(s('type.infer.exc'('type.infer_t.infer_t',X0),'const.infer.Success_1'(s('type.infer_t.infer_t','const.unify.t_walkstar_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X2),s('type.infer_t.infer_t',X3))))),s(X1,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(X1),X4)))))) )),
  inference(forward_demodulation,[],[f6945,f176])).
fof(f6945,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),X1),'const.pair.,_2'(s('type.infer.exc'('type.infer_t.infer_t',X0),'const.infer.Success_1'(s('type.infer_t.infer_t','const.unify.t_walkstar_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X2),s('type.infer_t.infer_t',X3))))),s(X1,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(X1),X4))))) = s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),X1),'const.infer.st_ex_return_2'(s('type.infer_t.infer_t',happ(s(fun('type.infer_t.infer_t','type.infer_t.infer_t'),happ(s(fun('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),fun('type.infer_t.infer_t','type.infer_t.infer_t')),'const.unify.t_walkstar_0'),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X2))),s('type.infer_t.infer_t',X3))),s(X1,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(X1),X4)))))) )),
  inference(forward_demodulation,[],[f4850,f168])).
fof(f4850,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),X1),'const.pair.,_2'(s('type.infer.exc'('type.infer_t.infer_t',X0),'const.infer.Success_1'(s('type.infer_t.infer_t','const.unify.t_walkstar_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X2),s('type.infer_t.infer_t',X3))))),s(X1,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(X1),X4))))) = s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),X1),'const.infer.st_ex_return_2'(s('type.infer_t.infer_t',happ(s(fun('type.infer_t.infer_t','type.infer_t.infer_t'),happ(s(fun('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),fun('type.infer_t.infer_t','type.infer_t.infer_t')),'const.unify.t_walkstar_0'),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X2))),s('type.infer_t.infer_t',X3))),s(X1,happ(s(fun('type.infer.infer_st'(X1),X1),'const.infer.infer_st_subst_0'),s('type.infer.infer_st'(X1),X4)))))) )),
  inference(unit_resulting_resolution,[],[f176,f168,f212])).
fof(f6942,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X0),X2),X3),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'(X0,X1),X0),'const.infer.read_1'(s(X0,X4))),s(X3,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(X3),X5))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X0),X2),X3),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X0),X2),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'(X0,X1),X0),'const.infer.read_1'(s(X0,X4))))),s(X3,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(X3),X5)))))) )),
  inference(forward_demodulation,[],[f6941,f178])).
fof(f6941,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X0),X2),X3),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X0),X2),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'(X0,X1),X0),'const.infer.read_1'(s(X0,X4))))),s(X3,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(X3),X5))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X0),X2),X3),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'(X0,X1),X0),happ(s(fun(X0,'type.pair.prod'('type.infer.exc'(X0,X1),X0)),'const.infer.read_0'),s(X0,X4))),s(X3,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(X3),X5)))))) )),
  inference(forward_demodulation,[],[f4852,f168])).
fof(f4852,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X0),X2),X3),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X0),X2),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'(X0,X1),X0),'const.infer.read_1'(s(X0,X4))))),s(X3,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(X3),X5))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X0),X2),X3),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'(X0,X1),X0),happ(s(fun(X0,'type.pair.prod'('type.infer.exc'(X0,X1),X0)),'const.infer.read_0'),s(X0,X4))),s(X3,happ(s(fun('type.infer.infer_st'(X3),X3),'const.infer.infer_st_subst_0'),s('type.infer.infer_st'(X3),X5)))))) )),
  inference(unit_resulting_resolution,[],[f178,f168,f212])).
fof(f6940,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),X2),X3),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),'const.infer.fresh_uvar_1'(s('type.infer.infer_st'(X1),X4))),s(X3,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(X3),X5))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),X2),X3),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),X2),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),'const.infer.fresh_uvar_1'(s('type.infer.infer_st'(X1),X4))))),s(X3,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(X3),X5)))))) )),
  inference(forward_demodulation,[],[f6939,f179])).
fof(f6939,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),X2),X3),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),X2),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),'const.infer.fresh_uvar_1'(s('type.infer.infer_st'(X1),X4))))),s(X3,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(X3),X5))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),X2),X3),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),happ(s(fun('type.infer.infer_st'(X1),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1))),'const.infer.fresh_uvar_0'),s('type.infer.infer_st'(X1),X4))),s(X3,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(X3),X5)))))) )),
  inference(forward_demodulation,[],[f4853,f168])).
fof(f4853,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),X2),X3),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),X2),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),'const.infer.fresh_uvar_1'(s('type.infer.infer_st'(X1),X4))))),s(X3,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(X3),X5))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),X2),X3),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),happ(s(fun('type.infer.infer_st'(X1),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1))),'const.infer.fresh_uvar_0'),s('type.infer.infer_st'(X1),X4))),s(X3,happ(s(fun('type.infer.infer_st'(X3),X3),'const.infer.infer_st_subst_0'),s('type.infer.infer_st'(X3),X5)))))) )),
  inference(unit_resulting_resolution,[],[f179,f168,f212])).
fof(f6938,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),X4),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'(X0,X1),X2),'const.infer.failwith_2'(s(X1,X5),s(X2,X6))),s(X4,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(X4),X7))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),X4),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'(X0,X1),X2),'const.infer.failwith_2'(s(X1,X5),s(X2,X6))))),s(X4,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(X4),X7)))))) )),
  inference(forward_demodulation,[],[f6937,f204])).
fof(f6937,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),X4),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'(X0,X1),X2),'const.infer.failwith_2'(s(X1,X5),s(X2,X6))))),s(X4,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(X4),X7))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),X4),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'(X0,X1),X2),happ(s(fun(X2,'type.pair.prod'('type.infer.exc'(X0,X1),X2)),'const.infer.failwith_1'(s(X1,X5))),s(X2,X6))),s(X4,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(X4),X7)))))) )),
  inference(forward_demodulation,[],[f4854,f168])).
fof(f4854,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),X4),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'(X0,X1),X2),'const.infer.failwith_2'(s(X1,X5),s(X2,X6))))),s(X4,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(X4),X7))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),X4),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'(X0,X1),X2),happ(s(fun(X2,'type.pair.prod'('type.infer.exc'(X0,X1),X2)),'const.infer.failwith_1'(s(X1,X5))),s(X2,X6))),s(X4,happ(s(fun('type.infer.infer_st'(X4),X4),'const.infer.infer_st_subst_0'),s('type.infer.infer_st'(X4),X7)))))) )),
  inference(unit_resulting_resolution,[],[f204,f168,f212])).
fof(f6936,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),X2),X3),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),'const.infer.guard_3'(s(bool,X4),s(X0,X5),s(X1,X6))),s(X3,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(X3),X7))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),X2),X3),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),X2),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),'const.infer.guard_3'(s(bool,X4),s(X0,X5),s(X1,X6))))),s(X3,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(X3),X7)))))) )),
  inference(forward_demodulation,[],[f6935,f183])).
fof(f6935,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),X2),X3),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),X2),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),'const.infer.guard_3'(s(bool,X4),s(X0,X5),s(X1,X6))))),s(X3,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(X3),X7))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),X2),X3),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),happ(s(fun(X1,'type.pair.prod'('type.infer.exc'('type.one.one',X0),X1)),'const.infer.guard_2'(s(bool,X4),s(X0,X5))),s(X1,X6))),s(X3,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(X3),X7)))))) )),
  inference(forward_demodulation,[],[f4855,f168])).
fof(f4855,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),X2),X3),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),X2),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),'const.infer.guard_3'(s(bool,X4),s(X0,X5),s(X1,X6))))),s(X3,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(X3),X7))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),X2),X3),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),happ(s(fun(X1,'type.pair.prod'('type.infer.exc'('type.one.one',X0),X1)),'const.infer.guard_2'(s(bool,X4),s(X0,X5))),s(X1,X6))),s(X3,happ(s(fun('type.infer.infer_st'(X3),X3),'const.infer.infer_st_subst_0'),s('type.infer.infer_st'(X3),X7)))))) )),
  inference(unit_resulting_resolution,[],[f183,f168,f212])).
fof(f4857,plain,(
  ( ! [X6,X4,X2,X0,X12,X10,X8,X7,X5,X3,X1,X11,X9] : (s('type.pair.prod'('type.infer.exc'(X0,X1),X2),'const.infer.st_ex_return_2'(s(X0,happ(s(fun(X3,X0),X4),s(X3,happ(s(fun(X5,X3),X6),s(X5,X7))))),s(X2,happ(s(fun(X8,X2),'_dst_x0x1_2'(s(fun(X9,X2),X10),s(fun(X8,X9),X11))),s(X8,X12))))) = s('type.pair.prod'('type.infer.exc'(X0,X1),X2),'const.pair.,_2'(s('type.infer.exc'(X0,X1),'const.infer.Success_1'(s(X0,happ(s(fun(X5,X0),'_dst_x0x1_2'(s(fun(X3,X0),X4),s(fun(X5,X3),X6))),s(X5,X7))))),s(X2,happ(s(fun(X9,X2),X10),s(X9,happ(s(fun(X8,X9),X11),s(X8,X12)))))))) )),
  inference(unit_resulting_resolution,[],[f206,f206,f212])).
fof(f6921,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'(X0,X1),X2),'const.infer.st_ex_return_2'(s(X0,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(X0),X3))),s(X2,happ(s(fun(X6,X2),'_dst_x0x1_2'(s(fun(X4,X2),X5),s(fun(X6,X4),X7))),s(X6,X8))))) = s('type.pair.prod'('type.infer.exc'(X0,X1),X2),'const.pair.,_2'(s('type.infer.exc'(X0,X1),'const.infer.Success_1'(s(X0,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(X0),X3))))),s(X2,happ(s(fun(X4,X2),X5),s(X4,happ(s(fun(X6,X4),X7),s(X6,X8)))))))) )),
  inference(forward_demodulation,[],[f4878,f168])).
fof(f4878,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'(X0,X1),X2),'const.pair.,_2'(s('type.infer.exc'(X0,X1),'const.infer.Success_1'(s(X0,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(X0),X3))))),s(X2,happ(s(fun(X4,X2),X5),s(X4,happ(s(fun(X6,X4),X7),s(X6,X8))))))) = s('type.pair.prod'('type.infer.exc'(X0,X1),X2),'const.infer.st_ex_return_2'(s(X0,happ(s(fun('type.infer.infer_st'(X0),X0),'const.infer.infer_st_subst_0'),s('type.infer.infer_st'(X0),X3))),s(X2,happ(s(fun(X6,X2),'_dst_x0x1_2'(s(fun(X4,X2),X5),s(fun(X6,X4),X7))),s(X6,X8)))))) )),
  inference(unit_resulting_resolution,[],[f168,f206,f212])).
fof(f4879,plain,(
  ( ! [X6,X4,X2,X0,X12,X10,X8,X7,X5,X3,X1,X11,X9] : (s('type.pair.prod'('type.infer.exc'(X0,X1),X2),'const.infer.st_ex_return_2'(s(X0,happ(s(fun(X3,X0),'_dst_x0x1_2'(s(fun(X4,X0),X5),s(fun(X3,X4),X6))),s(X3,X7))),s(X2,happ(s(fun(X8,X2),'_dst_x0x1_2'(s(fun(X9,X2),X10),s(fun(X8,X9),X11))),s(X8,X12))))) = s('type.pair.prod'('type.infer.exc'(X0,X1),X2),'const.pair.,_2'(s('type.infer.exc'(X0,X1),'const.infer.Success_1'(s(X0,happ(s(fun(X4,X0),X5),s(X4,happ(s(fun(X3,X4),X6),s(X3,X7))))))),s(X2,happ(s(fun(X9,X2),X10),s(X9,happ(s(fun(X8,X9),X11),s(X8,X12)))))))) )),
  inference(unit_resulting_resolution,[],[f206,f206,f212])).
fof(f4881,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1,X9] : (s('type.pair.prod'('type.infer.exc'(fun(X0,'type.one.one'),X1),X2),'const.infer.st_ex_return_2'(s(fun(X0,'type.one.one'),X3),s(X2,happ(s(fun(X4,X2),'_dst_x0x1_2'(s(fun(X5,X2),X6),s(fun(X4,X5),X7))),s(X4,X8))))) = s('type.pair.prod'('type.infer.exc'(fun(X0,'type.one.one'),X1),X2),'const.pair.,_2'(s('type.infer.exc'(fun(X0,'type.one.one'),X1),'const.infer.Success_1'(s(fun(X0,'type.one.one'),X9))),s(X2,happ(s(fun(X5,X2),X6),s(X5,happ(s(fun(X4,X5),X7),s(X4,X8)))))))) )),
  inference(unit_resulting_resolution,[],[f605,f206,f212])).
fof(f4882,plain,(
  ( ! [X6,X4,X2,X0,X10,X8,X7,X5,X3,X1,X9] : (s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,'type.one.one')),X2),X3),'const.infer.st_ex_return_2'(s(fun(X0,fun(X1,'type.one.one')),X4),s(X3,happ(s(fun(X5,X3),'_dst_x0x1_2'(s(fun(X6,X3),X7),s(fun(X5,X6),X8))),s(X5,X9))))) = s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,'type.one.one')),X2),X3),'const.pair.,_2'(s('type.infer.exc'(fun(X0,fun(X1,'type.one.one')),X2),'const.infer.Success_1'(s(fun(X0,fun(X1,'type.one.one')),X10))),s(X3,happ(s(fun(X6,X3),X7),s(X6,happ(s(fun(X5,X6),X8),s(X5,X9)))))))) )),
  inference(unit_resulting_resolution,[],[f724,f206,f212])).
fof(f4883,plain,(
  ( ! [X6,X4,X2,X0,X10,X8,X7,X5,X3,X1,X11,X9] : (s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,fun(X2,'type.one.one'))),X3),X4),'const.infer.st_ex_return_2'(s(fun(X0,fun(X1,fun(X2,'type.one.one'))),X5),s(X4,happ(s(fun(X6,X4),'_dst_x0x1_2'(s(fun(X7,X4),X8),s(fun(X6,X7),X9))),s(X6,X10))))) = s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,fun(X2,'type.one.one'))),X3),X4),'const.pair.,_2'(s('type.infer.exc'(fun(X0,fun(X1,fun(X2,'type.one.one'))),X3),'const.infer.Success_1'(s(fun(X0,fun(X1,fun(X2,'type.one.one'))),X11))),s(X4,happ(s(fun(X7,X4),X8),s(X7,happ(s(fun(X6,X7),X9),s(X6,X10)))))))) )),
  inference(unit_resulting_resolution,[],[f752,f206,f212])).
fof(f4884,plain,(
  ( ! [X6,X4,X2,X0,X12,X10,X8,X7,X5,X3,X1,X11,X9] : (s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,fun(X2,fun(X3,'type.one.one')))),X4),X5),'const.infer.st_ex_return_2'(s(fun(X0,fun(X1,fun(X2,fun(X3,'type.one.one')))),X6),s(X5,happ(s(fun(X7,X5),'_dst_x0x1_2'(s(fun(X8,X5),X9),s(fun(X7,X8),X10))),s(X7,X11))))) = s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,fun(X2,fun(X3,'type.one.one')))),X4),X5),'const.pair.,_2'(s('type.infer.exc'(fun(X0,fun(X1,fun(X2,fun(X3,'type.one.one')))),X4),'const.infer.Success_1'(s(fun(X0,fun(X1,fun(X2,fun(X3,'type.one.one')))),X12))),s(X5,happ(s(fun(X8,X5),X9),s(X8,happ(s(fun(X7,X8),X10),s(X7,X11)))))))) )),
  inference(unit_resulting_resolution,[],[f787,f206,f212])).
fof(f4885,plain,(
  ( ! [X6,X4,X2,X0,X12,X10,X8,X7,X5,X3,X1,X13,X11,X9] : (s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,fun(X2,fun(X3,fun(X4,'type.one.one'))))),X5),X6),'const.infer.st_ex_return_2'(s(fun(X0,fun(X1,fun(X2,fun(X3,fun(X4,'type.one.one'))))),X7),s(X6,happ(s(fun(X8,X6),'_dst_x0x1_2'(s(fun(X9,X6),X10),s(fun(X8,X9),X11))),s(X8,X12))))) = s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,fun(X2,fun(X3,fun(X4,'type.one.one'))))),X5),X6),'const.pair.,_2'(s('type.infer.exc'(fun(X0,fun(X1,fun(X2,fun(X3,fun(X4,'type.one.one'))))),X5),'const.infer.Success_1'(s(fun(X0,fun(X1,fun(X2,fun(X3,fun(X4,'type.one.one'))))),X13))),s(X6,happ(s(fun(X9,X6),X10),s(X9,happ(s(fun(X8,X9),X11),s(X8,X12)))))))) )),
  inference(unit_resulting_resolution,[],[f815,f206,f212])).
fof(f4888,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),'const.infer.st_ex_return_2'(s('type.one.one',X2),s(X1,happ(s(fun(X3,X1),'_dst_x0x1_2'(s(fun(X4,X1),X5),s(fun(X3,X4),X6))),s(X3,X7))))) = s('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),'const.pair.,_2'(s('type.infer.exc'('type.one.one',X0),'const.infer.Success_1'(s('type.one.one',X8))),s(X1,happ(s(fun(X4,X1),X5),s(X4,happ(s(fun(X3,X4),X6),s(X3,X7)))))))) )),
  inference(unit_resulting_resolution,[],[f258,f206,f212])).
fof(f6919,plain,(
  ( ! [X6,X4,X2,X0,X10,X8,X7,X5,X3,X1,X9] : (s('type.pair.prod'('type.infer.exc'('type.list.list'(X0),X1),X2),'const.infer.st_ex_return_2'(s('type.list.list'(X0),'const.list.MAP_2'(s(fun(X3,X0),X4),s('type.list.list'(X3),X5))),s(X2,happ(s(fun(X8,X2),'_dst_x0x1_2'(s(fun(X6,X2),X7),s(fun(X8,X6),X9))),s(X8,X10))))) = s('type.pair.prod'('type.infer.exc'('type.list.list'(X0),X1),X2),'const.pair.,_2'(s('type.infer.exc'('type.list.list'(X0),X1),'const.infer.Success_1'(s('type.list.list'(X0),'const.list.MAP_2'(s(fun(X3,X0),X4),s('type.list.list'(X3),X5))))),s(X2,happ(s(fun(X6,X2),X7),s(X6,happ(s(fun(X8,X6),X9),s(X8,X10)))))))) )),
  inference(forward_demodulation,[],[f4889,f180])).
fof(f4889,plain,(
  ( ! [X6,X4,X2,X0,X10,X8,X7,X5,X3,X1,X9] : (s('type.pair.prod'('type.infer.exc'('type.list.list'(X0),X1),X2),'const.pair.,_2'(s('type.infer.exc'('type.list.list'(X0),X1),'const.infer.Success_1'(s('type.list.list'(X0),'const.list.MAP_2'(s(fun(X3,X0),X4),s('type.list.list'(X3),X5))))),s(X2,happ(s(fun(X6,X2),X7),s(X6,happ(s(fun(X8,X6),X9),s(X8,X10))))))) = s('type.pair.prod'('type.infer.exc'('type.list.list'(X0),X1),X2),'const.infer.st_ex_return_2'(s('type.list.list'(X0),happ(s(fun('type.list.list'(X3),'type.list.list'(X0)),happ(s(fun(fun(X3,X0),fun('type.list.list'(X3),'type.list.list'(X0))),'const.list.MAP_0'),s(fun(X3,X0),X4))),s('type.list.list'(X3),X5))),s(X2,happ(s(fun(X8,X2),'_dst_x0x1_2'(s(fun(X6,X2),X7),s(fun(X8,X6),X9))),s(X8,X10)))))) )),
  inference(unit_resulting_resolution,[],[f180,f206,f212])).
fof(f6916,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.num.num',X0),X1),'const.infer.st_ex_return_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X3))),s(X1,happ(s(fun(X6,X1),'_dst_x0x1_2'(s(fun(X4,X1),X5),s(fun(X6,X4),X7))),s(X6,X8))))) = s('type.pair.prod'('type.infer.exc'('type.num.num',X0),X1),'const.pair.,_2'(s('type.infer.exc'('type.num.num',X0),'const.infer.Success_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X3))))),s(X1,happ(s(fun(X4,X1),X5),s(X4,happ(s(fun(X6,X4),X7),s(X6,X8)))))))) )),
  inference(forward_demodulation,[],[f4892,f175])).
fof(f4892,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.num.num',X0),X1),'const.pair.,_2'(s('type.infer.exc'('type.num.num',X0),'const.infer.Success_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X3))))),s(X1,happ(s(fun(X4,X1),X5),s(X4,happ(s(fun(X6,X4),X7),s(X6,X8))))))) = s('type.pair.prod'('type.infer.exc'('type.num.num',X0),X1),'const.infer.st_ex_return_2'(s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.arithmetic.+_1'(s('type.num.num',X2))),s('type.num.num',X3))),s(X1,happ(s(fun(X6,X1),'_dst_x0x1_2'(s(fun(X4,X1),X5),s(fun(X6,X4),X7))),s(X6,X8)))))) )),
  inference(unit_resulting_resolution,[],[f175,f206,f212])).
fof(f6915,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),X1),'const.infer.st_ex_return_2'(s('type.infer_t.infer_t','const.infer_t.Infer_Tuvar_1'(s('type.num.num',X2))),s(X1,happ(s(fun(X5,X1),'_dst_x0x1_2'(s(fun(X3,X1),X4),s(fun(X5,X3),X6))),s(X5,X7))))) = s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),X1),'const.pair.,_2'(s('type.infer.exc'('type.infer_t.infer_t',X0),'const.infer.Success_1'(s('type.infer_t.infer_t','const.infer_t.Infer_Tuvar_1'(s('type.num.num',X2))))),s(X1,happ(s(fun(X3,X1),X4),s(X3,happ(s(fun(X5,X3),X6),s(X5,X7)))))))) )),
  inference(forward_demodulation,[],[f4893,f166])).
fof(f4893,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),X1),'const.pair.,_2'(s('type.infer.exc'('type.infer_t.infer_t',X0),'const.infer.Success_1'(s('type.infer_t.infer_t','const.infer_t.Infer_Tuvar_1'(s('type.num.num',X2))))),s(X1,happ(s(fun(X3,X1),X4),s(X3,happ(s(fun(X5,X3),X6),s(X5,X7))))))) = s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),X1),'const.infer.st_ex_return_2'(s('type.infer_t.infer_t',happ(s(fun('type.num.num','type.infer_t.infer_t'),'const.infer_t.Infer_Tuvar_0'),s('type.num.num',X2))),s(X1,happ(s(fun(X5,X1),'_dst_x0x1_2'(s(fun(X3,X1),X4),s(fun(X5,X3),X6))),s(X5,X7)))))) )),
  inference(unit_resulting_resolution,[],[f166,f206,f212])).
fof(f6914,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),X1),'const.infer.st_ex_return_2'(s('type.infer_t.infer_t','const.unify.t_walkstar_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X2),s('type.infer_t.infer_t',X3))),s(X1,happ(s(fun(X6,X1),'_dst_x0x1_2'(s(fun(X4,X1),X5),s(fun(X6,X4),X7))),s(X6,X8))))) = s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),X1),'const.pair.,_2'(s('type.infer.exc'('type.infer_t.infer_t',X0),'const.infer.Success_1'(s('type.infer_t.infer_t','const.unify.t_walkstar_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X2),s('type.infer_t.infer_t',X3))))),s(X1,happ(s(fun(X4,X1),X5),s(X4,happ(s(fun(X6,X4),X7),s(X6,X8)))))))) )),
  inference(forward_demodulation,[],[f4894,f176])).
fof(f4894,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),X1),'const.pair.,_2'(s('type.infer.exc'('type.infer_t.infer_t',X0),'const.infer.Success_1'(s('type.infer_t.infer_t','const.unify.t_walkstar_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X2),s('type.infer_t.infer_t',X3))))),s(X1,happ(s(fun(X4,X1),X5),s(X4,happ(s(fun(X6,X4),X7),s(X6,X8))))))) = s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),X1),'const.infer.st_ex_return_2'(s('type.infer_t.infer_t',happ(s(fun('type.infer_t.infer_t','type.infer_t.infer_t'),happ(s(fun('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),fun('type.infer_t.infer_t','type.infer_t.infer_t')),'const.unify.t_walkstar_0'),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X2))),s('type.infer_t.infer_t',X3))),s(X1,happ(s(fun(X6,X1),'_dst_x0x1_2'(s(fun(X4,X1),X5),s(fun(X6,X4),X7))),s(X6,X8)))))) )),
  inference(unit_resulting_resolution,[],[f176,f206,f212])).
fof(f6912,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1,X9] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X0),X2),X3),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'(X0,X1),X0),'const.infer.read_1'(s(X0,X4))),s(X3,happ(s(fun(X7,X3),'_dst_x0x1_2'(s(fun(X5,X3),X6),s(fun(X7,X5),X8))),s(X7,X9))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X0),X2),X3),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X0),X2),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'(X0,X1),X0),'const.infer.read_1'(s(X0,X4))))),s(X3,happ(s(fun(X5,X3),X6),s(X5,happ(s(fun(X7,X5),X8),s(X7,X9)))))))) )),
  inference(forward_demodulation,[],[f4896,f178])).
fof(f4896,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1,X9] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X0),X2),X3),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X0),X2),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'(X0,X1),X0),'const.infer.read_1'(s(X0,X4))))),s(X3,happ(s(fun(X5,X3),X6),s(X5,happ(s(fun(X7,X5),X8),s(X7,X9))))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X0),X2),X3),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'(X0,X1),X0),happ(s(fun(X0,'type.pair.prod'('type.infer.exc'(X0,X1),X0)),'const.infer.read_0'),s(X0,X4))),s(X3,happ(s(fun(X7,X3),'_dst_x0x1_2'(s(fun(X5,X3),X6),s(fun(X7,X5),X8))),s(X7,X9)))))) )),
  inference(unit_resulting_resolution,[],[f178,f206,f212])).
fof(f6911,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1,X9] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),X2),X3),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),'const.infer.fresh_uvar_1'(s('type.infer.infer_st'(X1),X4))),s(X3,happ(s(fun(X7,X3),'_dst_x0x1_2'(s(fun(X5,X3),X6),s(fun(X7,X5),X8))),s(X7,X9))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),X2),X3),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),X2),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),'const.infer.fresh_uvar_1'(s('type.infer.infer_st'(X1),X4))))),s(X3,happ(s(fun(X5,X3),X6),s(X5,happ(s(fun(X7,X5),X8),s(X7,X9)))))))) )),
  inference(forward_demodulation,[],[f4897,f179])).
fof(f4897,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1,X9] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),X2),X3),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),X2),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),'const.infer.fresh_uvar_1'(s('type.infer.infer_st'(X1),X4))))),s(X3,happ(s(fun(X5,X3),X6),s(X5,happ(s(fun(X7,X5),X8),s(X7,X9))))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),X2),X3),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),happ(s(fun('type.infer.infer_st'(X1),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1))),'const.infer.fresh_uvar_0'),s('type.infer.infer_st'(X1),X4))),s(X3,happ(s(fun(X7,X3),'_dst_x0x1_2'(s(fun(X5,X3),X6),s(fun(X7,X5),X8))),s(X7,X9)))))) )),
  inference(unit_resulting_resolution,[],[f179,f206,f212])).
fof(f6910,plain,(
  ( ! [X6,X4,X2,X0,X10,X8,X7,X5,X3,X1,X11,X9] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),X4),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'(X0,X1),X2),'const.infer.failwith_2'(s(X1,X5),s(X2,X6))),s(X4,happ(s(fun(X9,X4),'_dst_x0x1_2'(s(fun(X7,X4),X8),s(fun(X9,X7),X10))),s(X9,X11))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),X4),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'(X0,X1),X2),'const.infer.failwith_2'(s(X1,X5),s(X2,X6))))),s(X4,happ(s(fun(X7,X4),X8),s(X7,happ(s(fun(X9,X7),X10),s(X9,X11)))))))) )),
  inference(forward_demodulation,[],[f4898,f204])).
fof(f4898,plain,(
  ( ! [X6,X4,X2,X0,X10,X8,X7,X5,X3,X1,X11,X9] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),X4),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'(X0,X1),X2),'const.infer.failwith_2'(s(X1,X5),s(X2,X6))))),s(X4,happ(s(fun(X7,X4),X8),s(X7,happ(s(fun(X9,X7),X10),s(X9,X11))))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),X4),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'(X0,X1),X2),happ(s(fun(X2,'type.pair.prod'('type.infer.exc'(X0,X1),X2)),'const.infer.failwith_1'(s(X1,X5))),s(X2,X6))),s(X4,happ(s(fun(X9,X4),'_dst_x0x1_2'(s(fun(X7,X4),X8),s(fun(X9,X7),X10))),s(X9,X11)))))) )),
  inference(unit_resulting_resolution,[],[f204,f206,f212])).
fof(f6909,plain,(
  ( ! [X6,X4,X2,X0,X10,X8,X7,X5,X3,X1,X11,X9] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),X2),X3),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),'const.infer.guard_3'(s(bool,X4),s(X0,X5),s(X1,X6))),s(X3,happ(s(fun(X9,X3),'_dst_x0x1_2'(s(fun(X7,X3),X8),s(fun(X9,X7),X10))),s(X9,X11))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),X2),X3),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),X2),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),'const.infer.guard_3'(s(bool,X4),s(X0,X5),s(X1,X6))))),s(X3,happ(s(fun(X7,X3),X8),s(X7,happ(s(fun(X9,X7),X10),s(X9,X11)))))))) )),
  inference(forward_demodulation,[],[f4899,f183])).
fof(f4899,plain,(
  ( ! [X6,X4,X2,X0,X10,X8,X7,X5,X3,X1,X11,X9] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),X2),X3),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),X2),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),'const.infer.guard_3'(s(bool,X4),s(X0,X5),s(X1,X6))))),s(X3,happ(s(fun(X7,X3),X8),s(X7,happ(s(fun(X9,X7),X10),s(X9,X11))))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),X2),X3),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),happ(s(fun(X1,'type.pair.prod'('type.infer.exc'('type.one.one',X0),X1)),'const.infer.guard_2'(s(bool,X4),s(X0,X5))),s(X1,X6))),s(X3,happ(s(fun(X9,X3),'_dst_x0x1_2'(s(fun(X7,X3),X8),s(fun(X9,X7),X10))),s(X9,X11)))))) )),
  inference(unit_resulting_resolution,[],[f183,f206,f212])).
fof(f4945,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1,X9] : (s('type.pair.prod'('type.infer.exc'(X0,X1),fun(X2,'type.one.one')),'const.infer.st_ex_return_2'(s(X0,happ(s(fun(X3,X0),X4),s(X3,happ(s(fun(X5,X3),X6),s(X5,X7))))),s(fun(X2,'type.one.one'),X8))) = s('type.pair.prod'('type.infer.exc'(X0,X1),fun(X2,'type.one.one')),'const.pair.,_2'(s('type.infer.exc'(X0,X1),'const.infer.Success_1'(s(X0,happ(s(fun(X5,X0),'_dst_x0x1_2'(s(fun(X3,X0),X4),s(fun(X5,X3),X6))),s(X5,X7))))),s(fun(X2,'type.one.one'),X9)))) )),
  inference(unit_resulting_resolution,[],[f206,f605,f212])).
fof(f6825,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'(X0,X1),fun(X2,'type.one.one')),'const.infer.st_ex_return_2'(s(X0,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(X0),X3))),s(fun(X2,'type.one.one'),X5))) = s('type.pair.prod'('type.infer.exc'(X0,X1),fun(X2,'type.one.one')),'const.pair.,_2'(s('type.infer.exc'(X0,X1),'const.infer.Success_1'(s(X0,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(X0),X3))))),s(fun(X2,'type.one.one'),X4)))) )),
  inference(forward_demodulation,[],[f4966,f168])).
fof(f4966,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'(X0,X1),fun(X2,'type.one.one')),'const.pair.,_2'(s('type.infer.exc'(X0,X1),'const.infer.Success_1'(s(X0,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(X0),X3))))),s(fun(X2,'type.one.one'),X4))) = s('type.pair.prod'('type.infer.exc'(X0,X1),fun(X2,'type.one.one')),'const.infer.st_ex_return_2'(s(X0,happ(s(fun('type.infer.infer_st'(X0),X0),'const.infer.infer_st_subst_0'),s('type.infer.infer_st'(X0),X3))),s(fun(X2,'type.one.one'),X5)))) )),
  inference(unit_resulting_resolution,[],[f168,f605,f212])).
fof(f4967,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1,X9] : (s('type.pair.prod'('type.infer.exc'(X0,X1),fun(X2,'type.one.one')),'const.infer.st_ex_return_2'(s(X0,happ(s(fun(X3,X0),'_dst_x0x1_2'(s(fun(X4,X0),X5),s(fun(X3,X4),X6))),s(X3,X7))),s(fun(X2,'type.one.one'),X8))) = s('type.pair.prod'('type.infer.exc'(X0,X1),fun(X2,'type.one.one')),'const.pair.,_2'(s('type.infer.exc'(X0,X1),'const.infer.Success_1'(s(X0,happ(s(fun(X4,X0),X5),s(X4,happ(s(fun(X3,X4),X6),s(X3,X7))))))),s(fun(X2,'type.one.one'),X9)))) )),
  inference(unit_resulting_resolution,[],[f206,f605,f212])).
fof(f4969,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'(fun(X0,'type.one.one'),X1),fun(X2,'type.one.one')),'const.infer.st_ex_return_2'(s(fun(X0,'type.one.one'),X3),s(fun(X2,'type.one.one'),X4))) = s('type.pair.prod'('type.infer.exc'(fun(X0,'type.one.one'),X1),fun(X2,'type.one.one')),'const.pair.,_2'(s('type.infer.exc'(fun(X0,'type.one.one'),X1),'const.infer.Success_1'(s(fun(X0,'type.one.one'),X5))),s(fun(X2,'type.one.one'),X6)))) )),
  inference(unit_resulting_resolution,[],[f605,f605,f212])).
fof(f4970,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,'type.one.one')),X2),fun(X3,'type.one.one')),'const.infer.st_ex_return_2'(s(fun(X0,fun(X1,'type.one.one')),X4),s(fun(X3,'type.one.one'),X5))) = s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,'type.one.one')),X2),fun(X3,'type.one.one')),'const.pair.,_2'(s('type.infer.exc'(fun(X0,fun(X1,'type.one.one')),X2),'const.infer.Success_1'(s(fun(X0,fun(X1,'type.one.one')),X6))),s(fun(X3,'type.one.one'),X7)))) )),
  inference(unit_resulting_resolution,[],[f724,f605,f212])).
fof(f4971,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,fun(X2,'type.one.one'))),X3),fun(X4,'type.one.one')),'const.infer.st_ex_return_2'(s(fun(X0,fun(X1,fun(X2,'type.one.one'))),X5),s(fun(X4,'type.one.one'),X6))) = s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,fun(X2,'type.one.one'))),X3),fun(X4,'type.one.one')),'const.pair.,_2'(s('type.infer.exc'(fun(X0,fun(X1,fun(X2,'type.one.one'))),X3),'const.infer.Success_1'(s(fun(X0,fun(X1,fun(X2,'type.one.one'))),X7))),s(fun(X4,'type.one.one'),X8)))) )),
  inference(unit_resulting_resolution,[],[f752,f605,f212])).
fof(f4972,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1,X9] : (s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,fun(X2,fun(X3,'type.one.one')))),X4),fun(X5,'type.one.one')),'const.infer.st_ex_return_2'(s(fun(X0,fun(X1,fun(X2,fun(X3,'type.one.one')))),X6),s(fun(X5,'type.one.one'),X7))) = s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,fun(X2,fun(X3,'type.one.one')))),X4),fun(X5,'type.one.one')),'const.pair.,_2'(s('type.infer.exc'(fun(X0,fun(X1,fun(X2,fun(X3,'type.one.one')))),X4),'const.infer.Success_1'(s(fun(X0,fun(X1,fun(X2,fun(X3,'type.one.one')))),X8))),s(fun(X5,'type.one.one'),X9)))) )),
  inference(unit_resulting_resolution,[],[f787,f605,f212])).
fof(f4973,plain,(
  ( ! [X6,X4,X2,X0,X10,X8,X7,X5,X3,X1,X9] : (s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,fun(X2,fun(X3,fun(X4,'type.one.one'))))),X5),fun(X6,'type.one.one')),'const.infer.st_ex_return_2'(s(fun(X0,fun(X1,fun(X2,fun(X3,fun(X4,'type.one.one'))))),X7),s(fun(X6,'type.one.one'),X8))) = s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,fun(X2,fun(X3,fun(X4,'type.one.one'))))),X5),fun(X6,'type.one.one')),'const.pair.,_2'(s('type.infer.exc'(fun(X0,fun(X1,fun(X2,fun(X3,fun(X4,'type.one.one'))))),X5),'const.infer.Success_1'(s(fun(X0,fun(X1,fun(X2,fun(X3,fun(X4,'type.one.one'))))),X9))),s(fun(X6,'type.one.one'),X10)))) )),
  inference(unit_resulting_resolution,[],[f815,f605,f212])).
fof(f4976,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.one.one',X0),fun(X1,'type.one.one')),'const.infer.st_ex_return_2'(s('type.one.one',X2),s(fun(X1,'type.one.one'),X3))) = s('type.pair.prod'('type.infer.exc'('type.one.one',X0),fun(X1,'type.one.one')),'const.pair.,_2'(s('type.infer.exc'('type.one.one',X0),'const.infer.Success_1'(s('type.one.one',X4))),s(fun(X1,'type.one.one'),X5)))) )),
  inference(unit_resulting_resolution,[],[f258,f605,f212])).
fof(f6823,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.list.list'(X0),X1),fun(X2,'type.one.one')),'const.infer.st_ex_return_2'(s('type.list.list'(X0),'const.list.MAP_2'(s(fun(X3,X0),X4),s('type.list.list'(X3),X5))),s(fun(X2,'type.one.one'),X7))) = s('type.pair.prod'('type.infer.exc'('type.list.list'(X0),X1),fun(X2,'type.one.one')),'const.pair.,_2'(s('type.infer.exc'('type.list.list'(X0),X1),'const.infer.Success_1'(s('type.list.list'(X0),'const.list.MAP_2'(s(fun(X3,X0),X4),s('type.list.list'(X3),X5))))),s(fun(X2,'type.one.one'),X6)))) )),
  inference(forward_demodulation,[],[f4977,f180])).
fof(f4977,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.list.list'(X0),X1),fun(X2,'type.one.one')),'const.pair.,_2'(s('type.infer.exc'('type.list.list'(X0),X1),'const.infer.Success_1'(s('type.list.list'(X0),'const.list.MAP_2'(s(fun(X3,X0),X4),s('type.list.list'(X3),X5))))),s(fun(X2,'type.one.one'),X6))) = s('type.pair.prod'('type.infer.exc'('type.list.list'(X0),X1),fun(X2,'type.one.one')),'const.infer.st_ex_return_2'(s('type.list.list'(X0),happ(s(fun('type.list.list'(X3),'type.list.list'(X0)),happ(s(fun(fun(X3,X0),fun('type.list.list'(X3),'type.list.list'(X0))),'const.list.MAP_0'),s(fun(X3,X0),X4))),s('type.list.list'(X3),X5))),s(fun(X2,'type.one.one'),X7)))) )),
  inference(unit_resulting_resolution,[],[f180,f605,f212])).
fof(f6820,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.num.num',X0),fun(X1,'type.one.one')),'const.infer.st_ex_return_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X3))),s(fun(X1,'type.one.one'),X4))) = s('type.pair.prod'('type.infer.exc'('type.num.num',X0),fun(X1,'type.one.one')),'const.pair.,_2'(s('type.infer.exc'('type.num.num',X0),'const.infer.Success_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X3))))),s(fun(X1,'type.one.one'),X5)))) )),
  inference(forward_demodulation,[],[f4980,f175])).
fof(f4980,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.num.num',X0),fun(X1,'type.one.one')),'const.infer.st_ex_return_2'(s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.arithmetic.+_1'(s('type.num.num',X2))),s('type.num.num',X3))),s(fun(X1,'type.one.one'),X4))) = s('type.pair.prod'('type.infer.exc'('type.num.num',X0),fun(X1,'type.one.one')),'const.pair.,_2'(s('type.infer.exc'('type.num.num',X0),'const.infer.Success_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X3))))),s(fun(X1,'type.one.one'),X5)))) )),
  inference(unit_resulting_resolution,[],[f175,f605,f212])).
fof(f6819,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),fun(X1,'type.one.one')),'const.infer.st_ex_return_2'(s('type.infer_t.infer_t','const.infer_t.Infer_Tuvar_1'(s('type.num.num',X2))),s(fun(X1,'type.one.one'),X3))) = s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),fun(X1,'type.one.one')),'const.pair.,_2'(s('type.infer.exc'('type.infer_t.infer_t',X0),'const.infer.Success_1'(s('type.infer_t.infer_t','const.infer_t.Infer_Tuvar_1'(s('type.num.num',X2))))),s(fun(X1,'type.one.one'),X4)))) )),
  inference(forward_demodulation,[],[f4981,f166])).
fof(f4981,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),fun(X1,'type.one.one')),'const.infer.st_ex_return_2'(s('type.infer_t.infer_t',happ(s(fun('type.num.num','type.infer_t.infer_t'),'const.infer_t.Infer_Tuvar_0'),s('type.num.num',X2))),s(fun(X1,'type.one.one'),X3))) = s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),fun(X1,'type.one.one')),'const.pair.,_2'(s('type.infer.exc'('type.infer_t.infer_t',X0),'const.infer.Success_1'(s('type.infer_t.infer_t','const.infer_t.Infer_Tuvar_1'(s('type.num.num',X2))))),s(fun(X1,'type.one.one'),X4)))) )),
  inference(unit_resulting_resolution,[],[f166,f605,f212])).
fof(f6818,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),fun(X1,'type.one.one')),'const.infer.st_ex_return_2'(s('type.infer_t.infer_t','const.unify.t_walkstar_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X2),s('type.infer_t.infer_t',X3))),s(fun(X1,'type.one.one'),X5))) = s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),fun(X1,'type.one.one')),'const.pair.,_2'(s('type.infer.exc'('type.infer_t.infer_t',X0),'const.infer.Success_1'(s('type.infer_t.infer_t','const.unify.t_walkstar_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X2),s('type.infer_t.infer_t',X3))))),s(fun(X1,'type.one.one'),X4)))) )),
  inference(forward_demodulation,[],[f4982,f176])).
fof(f4982,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),fun(X1,'type.one.one')),'const.pair.,_2'(s('type.infer.exc'('type.infer_t.infer_t',X0),'const.infer.Success_1'(s('type.infer_t.infer_t','const.unify.t_walkstar_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X2),s('type.infer_t.infer_t',X3))))),s(fun(X1,'type.one.one'),X4))) = s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),fun(X1,'type.one.one')),'const.infer.st_ex_return_2'(s('type.infer_t.infer_t',happ(s(fun('type.infer_t.infer_t','type.infer_t.infer_t'),happ(s(fun('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),fun('type.infer_t.infer_t','type.infer_t.infer_t')),'const.unify.t_walkstar_0'),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X2))),s('type.infer_t.infer_t',X3))),s(fun(X1,'type.one.one'),X5)))) )),
  inference(unit_resulting_resolution,[],[f176,f605,f212])).
fof(f6816,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X0),X2),fun(X3,'type.one.one')),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'(X0,X1),X0),'const.infer.read_1'(s(X0,X4))),s(fun(X3,'type.one.one'),X6))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X0),X2),fun(X3,'type.one.one')),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X0),X2),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'(X0,X1),X0),'const.infer.read_1'(s(X0,X4))))),s(fun(X3,'type.one.one'),X5)))) )),
  inference(forward_demodulation,[],[f4984,f178])).
fof(f4984,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X0),X2),fun(X3,'type.one.one')),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X0),X2),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'(X0,X1),X0),'const.infer.read_1'(s(X0,X4))))),s(fun(X3,'type.one.one'),X5))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X0),X2),fun(X3,'type.one.one')),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'(X0,X1),X0),happ(s(fun(X0,'type.pair.prod'('type.infer.exc'(X0,X1),X0)),'const.infer.read_0'),s(X0,X4))),s(fun(X3,'type.one.one'),X6)))) )),
  inference(unit_resulting_resolution,[],[f178,f605,f212])).
fof(f6815,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),X2),fun(X3,'type.one.one')),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),'const.infer.fresh_uvar_1'(s('type.infer.infer_st'(X1),X4))),s(fun(X3,'type.one.one'),X6))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),X2),fun(X3,'type.one.one')),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),X2),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),'const.infer.fresh_uvar_1'(s('type.infer.infer_st'(X1),X4))))),s(fun(X3,'type.one.one'),X5)))) )),
  inference(forward_demodulation,[],[f4985,f179])).
fof(f4985,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),X2),fun(X3,'type.one.one')),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),X2),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),'const.infer.fresh_uvar_1'(s('type.infer.infer_st'(X1),X4))))),s(fun(X3,'type.one.one'),X5))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),X2),fun(X3,'type.one.one')),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),happ(s(fun('type.infer.infer_st'(X1),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1))),'const.infer.fresh_uvar_0'),s('type.infer.infer_st'(X1),X4))),s(fun(X3,'type.one.one'),X6)))) )),
  inference(unit_resulting_resolution,[],[f179,f605,f212])).
fof(f6814,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),fun(X4,'type.one.one')),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'(X0,X1),X2),'const.infer.failwith_2'(s(X1,X5),s(X2,X6))),s(fun(X4,'type.one.one'),X8))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),fun(X4,'type.one.one')),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'(X0,X1),X2),'const.infer.failwith_2'(s(X1,X5),s(X2,X6))))),s(fun(X4,'type.one.one'),X7)))) )),
  inference(forward_demodulation,[],[f4986,f204])).
fof(f4986,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),fun(X4,'type.one.one')),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'(X0,X1),X2),'const.infer.failwith_2'(s(X1,X5),s(X2,X6))))),s(fun(X4,'type.one.one'),X7))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),fun(X4,'type.one.one')),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'(X0,X1),X2),happ(s(fun(X2,'type.pair.prod'('type.infer.exc'(X0,X1),X2)),'const.infer.failwith_1'(s(X1,X5))),s(X2,X6))),s(fun(X4,'type.one.one'),X8)))) )),
  inference(unit_resulting_resolution,[],[f204,f605,f212])).
fof(f6813,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),X2),fun(X3,'type.one.one')),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),'const.infer.guard_3'(s(bool,X4),s(X0,X5),s(X1,X6))),s(fun(X3,'type.one.one'),X8))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),X2),fun(X3,'type.one.one')),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),X2),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),'const.infer.guard_3'(s(bool,X4),s(X0,X5),s(X1,X6))))),s(fun(X3,'type.one.one'),X7)))) )),
  inference(forward_demodulation,[],[f4987,f183])).
fof(f4987,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),X2),fun(X3,'type.one.one')),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),X2),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),'const.infer.guard_3'(s(bool,X4),s(X0,X5),s(X1,X6))))),s(fun(X3,'type.one.one'),X7))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),X2),fun(X3,'type.one.one')),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),happ(s(fun(X1,'type.pair.prod'('type.infer.exc'('type.one.one',X0),X1)),'const.infer.guard_2'(s(bool,X4),s(X0,X5))),s(X1,X6))),s(fun(X3,'type.one.one'),X8)))) )),
  inference(unit_resulting_resolution,[],[f183,f605,f212])).
fof(f4989,plain,(
  ( ! [X6,X4,X2,X0,X10,X8,X7,X5,X3,X1,X9] : (s('type.pair.prod'('type.infer.exc'(X0,X1),fun(X2,fun(X3,'type.one.one'))),'const.infer.st_ex_return_2'(s(X0,happ(s(fun(X4,X0),X5),s(X4,happ(s(fun(X6,X4),X7),s(X6,X8))))),s(fun(X2,fun(X3,'type.one.one')),X9))) = s('type.pair.prod'('type.infer.exc'(X0,X1),fun(X2,fun(X3,'type.one.one'))),'const.pair.,_2'(s('type.infer.exc'(X0,X1),'const.infer.Success_1'(s(X0,happ(s(fun(X6,X0),'_dst_x0x1_2'(s(fun(X4,X0),X5),s(fun(X6,X4),X7))),s(X6,X8))))),s(fun(X2,fun(X3,'type.one.one')),X10)))) )),
  inference(unit_resulting_resolution,[],[f206,f724,f212])).
fof(f6799,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'(X0,X1),fun(X2,fun(X3,'type.one.one'))),'const.infer.st_ex_return_2'(s(X0,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(X0),X4))),s(fun(X2,fun(X3,'type.one.one')),X6))) = s('type.pair.prod'('type.infer.exc'(X0,X1),fun(X2,fun(X3,'type.one.one'))),'const.pair.,_2'(s('type.infer.exc'(X0,X1),'const.infer.Success_1'(s(X0,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(X0),X4))))),s(fun(X2,fun(X3,'type.one.one')),X5)))) )),
  inference(forward_demodulation,[],[f5010,f168])).
fof(f5010,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'(X0,X1),fun(X2,fun(X3,'type.one.one'))),'const.pair.,_2'(s('type.infer.exc'(X0,X1),'const.infer.Success_1'(s(X0,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(X0),X4))))),s(fun(X2,fun(X3,'type.one.one')),X5))) = s('type.pair.prod'('type.infer.exc'(X0,X1),fun(X2,fun(X3,'type.one.one'))),'const.infer.st_ex_return_2'(s(X0,happ(s(fun('type.infer.infer_st'(X0),X0),'const.infer.infer_st_subst_0'),s('type.infer.infer_st'(X0),X4))),s(fun(X2,fun(X3,'type.one.one')),X6)))) )),
  inference(unit_resulting_resolution,[],[f168,f724,f212])).
fof(f5011,plain,(
  ( ! [X6,X4,X2,X0,X10,X8,X7,X5,X3,X1,X9] : (s('type.pair.prod'('type.infer.exc'(X0,X1),fun(X2,fun(X3,'type.one.one'))),'const.infer.st_ex_return_2'(s(X0,happ(s(fun(X4,X0),'_dst_x0x1_2'(s(fun(X5,X0),X6),s(fun(X4,X5),X7))),s(X4,X8))),s(fun(X2,fun(X3,'type.one.one')),X9))) = s('type.pair.prod'('type.infer.exc'(X0,X1),fun(X2,fun(X3,'type.one.one'))),'const.pair.,_2'(s('type.infer.exc'(X0,X1),'const.infer.Success_1'(s(X0,happ(s(fun(X5,X0),X6),s(X5,happ(s(fun(X4,X5),X7),s(X4,X8))))))),s(fun(X2,fun(X3,'type.one.one')),X10)))) )),
  inference(unit_resulting_resolution,[],[f206,f724,f212])).
fof(f5013,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'(fun(X0,'type.one.one'),X1),fun(X2,fun(X3,'type.one.one'))),'const.infer.st_ex_return_2'(s(fun(X0,'type.one.one'),X4),s(fun(X2,fun(X3,'type.one.one')),X5))) = s('type.pair.prod'('type.infer.exc'(fun(X0,'type.one.one'),X1),fun(X2,fun(X3,'type.one.one'))),'const.pair.,_2'(s('type.infer.exc'(fun(X0,'type.one.one'),X1),'const.infer.Success_1'(s(fun(X0,'type.one.one'),X6))),s(fun(X2,fun(X3,'type.one.one')),X7)))) )),
  inference(unit_resulting_resolution,[],[f605,f724,f212])).
fof(f5014,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,'type.one.one')),X2),fun(X3,fun(X4,'type.one.one'))),'const.infer.st_ex_return_2'(s(fun(X0,fun(X1,'type.one.one')),X5),s(fun(X3,fun(X4,'type.one.one')),X6))) = s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,'type.one.one')),X2),fun(X3,fun(X4,'type.one.one'))),'const.pair.,_2'(s('type.infer.exc'(fun(X0,fun(X1,'type.one.one')),X2),'const.infer.Success_1'(s(fun(X0,fun(X1,'type.one.one')),X7))),s(fun(X3,fun(X4,'type.one.one')),X8)))) )),
  inference(unit_resulting_resolution,[],[f724,f724,f212])).
fof(f5015,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1,X9] : (s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,fun(X2,'type.one.one'))),X3),fun(X4,fun(X5,'type.one.one'))),'const.infer.st_ex_return_2'(s(fun(X0,fun(X1,fun(X2,'type.one.one'))),X6),s(fun(X4,fun(X5,'type.one.one')),X7))) = s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,fun(X2,'type.one.one'))),X3),fun(X4,fun(X5,'type.one.one'))),'const.pair.,_2'(s('type.infer.exc'(fun(X0,fun(X1,fun(X2,'type.one.one'))),X3),'const.infer.Success_1'(s(fun(X0,fun(X1,fun(X2,'type.one.one'))),X8))),s(fun(X4,fun(X5,'type.one.one')),X9)))) )),
  inference(unit_resulting_resolution,[],[f752,f724,f212])).
fof(f5016,plain,(
  ( ! [X6,X4,X2,X0,X10,X8,X7,X5,X3,X1,X9] : (s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,fun(X2,fun(X3,'type.one.one')))),X4),fun(X5,fun(X6,'type.one.one'))),'const.infer.st_ex_return_2'(s(fun(X0,fun(X1,fun(X2,fun(X3,'type.one.one')))),X7),s(fun(X5,fun(X6,'type.one.one')),X8))) = s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,fun(X2,fun(X3,'type.one.one')))),X4),fun(X5,fun(X6,'type.one.one'))),'const.pair.,_2'(s('type.infer.exc'(fun(X0,fun(X1,fun(X2,fun(X3,'type.one.one')))),X4),'const.infer.Success_1'(s(fun(X0,fun(X1,fun(X2,fun(X3,'type.one.one')))),X9))),s(fun(X5,fun(X6,'type.one.one')),X10)))) )),
  inference(unit_resulting_resolution,[],[f787,f724,f212])).
fof(f5017,plain,(
  ( ! [X6,X4,X2,X0,X10,X8,X7,X5,X3,X1,X11,X9] : (s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,fun(X2,fun(X3,fun(X4,'type.one.one'))))),X5),fun(X6,fun(X7,'type.one.one'))),'const.infer.st_ex_return_2'(s(fun(X0,fun(X1,fun(X2,fun(X3,fun(X4,'type.one.one'))))),X8),s(fun(X6,fun(X7,'type.one.one')),X9))) = s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,fun(X2,fun(X3,fun(X4,'type.one.one'))))),X5),fun(X6,fun(X7,'type.one.one'))),'const.pair.,_2'(s('type.infer.exc'(fun(X0,fun(X1,fun(X2,fun(X3,fun(X4,'type.one.one'))))),X5),'const.infer.Success_1'(s(fun(X0,fun(X1,fun(X2,fun(X3,fun(X4,'type.one.one'))))),X10))),s(fun(X6,fun(X7,'type.one.one')),X11)))) )),
  inference(unit_resulting_resolution,[],[f815,f724,f212])).
fof(f5020,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.one.one',X0),fun(X1,fun(X2,'type.one.one'))),'const.infer.st_ex_return_2'(s('type.one.one',X3),s(fun(X1,fun(X2,'type.one.one')),X4))) = s('type.pair.prod'('type.infer.exc'('type.one.one',X0),fun(X1,fun(X2,'type.one.one'))),'const.pair.,_2'(s('type.infer.exc'('type.one.one',X0),'const.infer.Success_1'(s('type.one.one',X5))),s(fun(X1,fun(X2,'type.one.one')),X6)))) )),
  inference(unit_resulting_resolution,[],[f258,f724,f212])).
fof(f6797,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.list.list'(X0),X1),fun(X2,fun(X3,'type.one.one'))),'const.infer.st_ex_return_2'(s('type.list.list'(X0),'const.list.MAP_2'(s(fun(X4,X0),X5),s('type.list.list'(X4),X6))),s(fun(X2,fun(X3,'type.one.one')),X8))) = s('type.pair.prod'('type.infer.exc'('type.list.list'(X0),X1),fun(X2,fun(X3,'type.one.one'))),'const.pair.,_2'(s('type.infer.exc'('type.list.list'(X0),X1),'const.infer.Success_1'(s('type.list.list'(X0),'const.list.MAP_2'(s(fun(X4,X0),X5),s('type.list.list'(X4),X6))))),s(fun(X2,fun(X3,'type.one.one')),X7)))) )),
  inference(forward_demodulation,[],[f5021,f180])).
fof(f5021,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.list.list'(X0),X1),fun(X2,fun(X3,'type.one.one'))),'const.pair.,_2'(s('type.infer.exc'('type.list.list'(X0),X1),'const.infer.Success_1'(s('type.list.list'(X0),'const.list.MAP_2'(s(fun(X4,X0),X5),s('type.list.list'(X4),X6))))),s(fun(X2,fun(X3,'type.one.one')),X7))) = s('type.pair.prod'('type.infer.exc'('type.list.list'(X0),X1),fun(X2,fun(X3,'type.one.one'))),'const.infer.st_ex_return_2'(s('type.list.list'(X0),happ(s(fun('type.list.list'(X4),'type.list.list'(X0)),happ(s(fun(fun(X4,X0),fun('type.list.list'(X4),'type.list.list'(X0))),'const.list.MAP_0'),s(fun(X4,X0),X5))),s('type.list.list'(X4),X6))),s(fun(X2,fun(X3,'type.one.one')),X8)))) )),
  inference(unit_resulting_resolution,[],[f180,f724,f212])).
fof(f6794,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.num.num',X0),fun(X1,fun(X2,'type.one.one'))),'const.infer.st_ex_return_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X3),s('type.num.num',X4))),s(fun(X1,fun(X2,'type.one.one')),X5))) = s('type.pair.prod'('type.infer.exc'('type.num.num',X0),fun(X1,fun(X2,'type.one.one'))),'const.pair.,_2'(s('type.infer.exc'('type.num.num',X0),'const.infer.Success_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X3),s('type.num.num',X4))))),s(fun(X1,fun(X2,'type.one.one')),X6)))) )),
  inference(forward_demodulation,[],[f5024,f175])).
fof(f5024,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.num.num',X0),fun(X1,fun(X2,'type.one.one'))),'const.infer.st_ex_return_2'(s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.arithmetic.+_1'(s('type.num.num',X3))),s('type.num.num',X4))),s(fun(X1,fun(X2,'type.one.one')),X5))) = s('type.pair.prod'('type.infer.exc'('type.num.num',X0),fun(X1,fun(X2,'type.one.one'))),'const.pair.,_2'(s('type.infer.exc'('type.num.num',X0),'const.infer.Success_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X3),s('type.num.num',X4))))),s(fun(X1,fun(X2,'type.one.one')),X6)))) )),
  inference(unit_resulting_resolution,[],[f175,f724,f212])).
fof(f6793,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),fun(X1,fun(X2,'type.one.one'))),'const.infer.st_ex_return_2'(s('type.infer_t.infer_t','const.infer_t.Infer_Tuvar_1'(s('type.num.num',X3))),s(fun(X1,fun(X2,'type.one.one')),X4))) = s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),fun(X1,fun(X2,'type.one.one'))),'const.pair.,_2'(s('type.infer.exc'('type.infer_t.infer_t',X0),'const.infer.Success_1'(s('type.infer_t.infer_t','const.infer_t.Infer_Tuvar_1'(s('type.num.num',X3))))),s(fun(X1,fun(X2,'type.one.one')),X5)))) )),
  inference(forward_demodulation,[],[f5025,f166])).
fof(f5025,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),fun(X1,fun(X2,'type.one.one'))),'const.infer.st_ex_return_2'(s('type.infer_t.infer_t',happ(s(fun('type.num.num','type.infer_t.infer_t'),'const.infer_t.Infer_Tuvar_0'),s('type.num.num',X3))),s(fun(X1,fun(X2,'type.one.one')),X4))) = s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),fun(X1,fun(X2,'type.one.one'))),'const.pair.,_2'(s('type.infer.exc'('type.infer_t.infer_t',X0),'const.infer.Success_1'(s('type.infer_t.infer_t','const.infer_t.Infer_Tuvar_1'(s('type.num.num',X3))))),s(fun(X1,fun(X2,'type.one.one')),X5)))) )),
  inference(unit_resulting_resolution,[],[f166,f724,f212])).
fof(f6792,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),fun(X1,fun(X2,'type.one.one'))),'const.infer.st_ex_return_2'(s('type.infer_t.infer_t','const.unify.t_walkstar_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X3),s('type.infer_t.infer_t',X4))),s(fun(X1,fun(X2,'type.one.one')),X6))) = s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),fun(X1,fun(X2,'type.one.one'))),'const.pair.,_2'(s('type.infer.exc'('type.infer_t.infer_t',X0),'const.infer.Success_1'(s('type.infer_t.infer_t','const.unify.t_walkstar_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X3),s('type.infer_t.infer_t',X4))))),s(fun(X1,fun(X2,'type.one.one')),X5)))) )),
  inference(forward_demodulation,[],[f5026,f176])).
fof(f5026,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),fun(X1,fun(X2,'type.one.one'))),'const.pair.,_2'(s('type.infer.exc'('type.infer_t.infer_t',X0),'const.infer.Success_1'(s('type.infer_t.infer_t','const.unify.t_walkstar_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X3),s('type.infer_t.infer_t',X4))))),s(fun(X1,fun(X2,'type.one.one')),X5))) = s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),fun(X1,fun(X2,'type.one.one'))),'const.infer.st_ex_return_2'(s('type.infer_t.infer_t',happ(s(fun('type.infer_t.infer_t','type.infer_t.infer_t'),happ(s(fun('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),fun('type.infer_t.infer_t','type.infer_t.infer_t')),'const.unify.t_walkstar_0'),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X3))),s('type.infer_t.infer_t',X4))),s(fun(X1,fun(X2,'type.one.one')),X6)))) )),
  inference(unit_resulting_resolution,[],[f176,f724,f212])).
fof(f6790,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X0),X2),fun(X3,fun(X4,'type.one.one'))),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'(X0,X1),X0),'const.infer.read_1'(s(X0,X5))),s(fun(X3,fun(X4,'type.one.one')),X7))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X0),X2),fun(X3,fun(X4,'type.one.one'))),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X0),X2),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'(X0,X1),X0),'const.infer.read_1'(s(X0,X5))))),s(fun(X3,fun(X4,'type.one.one')),X6)))) )),
  inference(forward_demodulation,[],[f5028,f178])).
fof(f5028,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X0),X2),fun(X3,fun(X4,'type.one.one'))),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X0),X2),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'(X0,X1),X0),'const.infer.read_1'(s(X0,X5))))),s(fun(X3,fun(X4,'type.one.one')),X6))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X0),X2),fun(X3,fun(X4,'type.one.one'))),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'(X0,X1),X0),happ(s(fun(X0,'type.pair.prod'('type.infer.exc'(X0,X1),X0)),'const.infer.read_0'),s(X0,X5))),s(fun(X3,fun(X4,'type.one.one')),X7)))) )),
  inference(unit_resulting_resolution,[],[f178,f724,f212])).
fof(f6789,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),X2),fun(X3,fun(X4,'type.one.one'))),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),'const.infer.fresh_uvar_1'(s('type.infer.infer_st'(X1),X5))),s(fun(X3,fun(X4,'type.one.one')),X7))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),X2),fun(X3,fun(X4,'type.one.one'))),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),X2),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),'const.infer.fresh_uvar_1'(s('type.infer.infer_st'(X1),X5))))),s(fun(X3,fun(X4,'type.one.one')),X6)))) )),
  inference(forward_demodulation,[],[f5029,f179])).
fof(f5029,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),X2),fun(X3,fun(X4,'type.one.one'))),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),X2),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),'const.infer.fresh_uvar_1'(s('type.infer.infer_st'(X1),X5))))),s(fun(X3,fun(X4,'type.one.one')),X6))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),X2),fun(X3,fun(X4,'type.one.one'))),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),happ(s(fun('type.infer.infer_st'(X1),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1))),'const.infer.fresh_uvar_0'),s('type.infer.infer_st'(X1),X5))),s(fun(X3,fun(X4,'type.one.one')),X7)))) )),
  inference(unit_resulting_resolution,[],[f179,f724,f212])).
fof(f6788,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1,X9] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),fun(X4,fun(X5,'type.one.one'))),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'(X0,X1),X2),'const.infer.failwith_2'(s(X1,X6),s(X2,X7))),s(fun(X4,fun(X5,'type.one.one')),X9))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),fun(X4,fun(X5,'type.one.one'))),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'(X0,X1),X2),'const.infer.failwith_2'(s(X1,X6),s(X2,X7))))),s(fun(X4,fun(X5,'type.one.one')),X8)))) )),
  inference(forward_demodulation,[],[f5030,f204])).
fof(f5030,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1,X9] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),fun(X4,fun(X5,'type.one.one'))),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'(X0,X1),X2),'const.infer.failwith_2'(s(X1,X6),s(X2,X7))))),s(fun(X4,fun(X5,'type.one.one')),X8))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),fun(X4,fun(X5,'type.one.one'))),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'(X0,X1),X2),happ(s(fun(X2,'type.pair.prod'('type.infer.exc'(X0,X1),X2)),'const.infer.failwith_1'(s(X1,X6))),s(X2,X7))),s(fun(X4,fun(X5,'type.one.one')),X9)))) )),
  inference(unit_resulting_resolution,[],[f204,f724,f212])).
fof(f6787,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1,X9] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),X2),fun(X3,fun(X4,'type.one.one'))),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),'const.infer.guard_3'(s(bool,X5),s(X0,X6),s(X1,X7))),s(fun(X3,fun(X4,'type.one.one')),X9))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),X2),fun(X3,fun(X4,'type.one.one'))),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),X2),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),'const.infer.guard_3'(s(bool,X5),s(X0,X6),s(X1,X7))))),s(fun(X3,fun(X4,'type.one.one')),X8)))) )),
  inference(forward_demodulation,[],[f5031,f183])).
fof(f5031,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1,X9] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),X2),fun(X3,fun(X4,'type.one.one'))),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),X2),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),'const.infer.guard_3'(s(bool,X5),s(X0,X6),s(X1,X7))))),s(fun(X3,fun(X4,'type.one.one')),X8))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),X2),fun(X3,fun(X4,'type.one.one'))),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),happ(s(fun(X1,'type.pair.prod'('type.infer.exc'('type.one.one',X0),X1)),'const.infer.guard_2'(s(bool,X5),s(X0,X6))),s(X1,X7))),s(fun(X3,fun(X4,'type.one.one')),X9)))) )),
  inference(unit_resulting_resolution,[],[f183,f724,f212])).
fof(f5033,plain,(
  ( ! [X6,X4,X2,X0,X10,X8,X7,X5,X3,X1,X11,X9] : (s('type.pair.prod'('type.infer.exc'(X0,X1),fun(X2,fun(X3,fun(X4,'type.one.one')))),'const.infer.st_ex_return_2'(s(X0,happ(s(fun(X5,X0),X6),s(X5,happ(s(fun(X7,X5),X8),s(X7,X9))))),s(fun(X2,fun(X3,fun(X4,'type.one.one'))),X10))) = s('type.pair.prod'('type.infer.exc'(X0,X1),fun(X2,fun(X3,fun(X4,'type.one.one')))),'const.pair.,_2'(s('type.infer.exc'(X0,X1),'const.infer.Success_1'(s(X0,happ(s(fun(X7,X0),'_dst_x0x1_2'(s(fun(X5,X0),X6),s(fun(X7,X5),X8))),s(X7,X9))))),s(fun(X2,fun(X3,fun(X4,'type.one.one'))),X11)))) )),
  inference(unit_resulting_resolution,[],[f206,f752,f212])).
fof(f6773,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'(X0,X1),fun(X2,fun(X3,fun(X4,'type.one.one')))),'const.infer.st_ex_return_2'(s(X0,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(X0),X5))),s(fun(X2,fun(X3,fun(X4,'type.one.one'))),X7))) = s('type.pair.prod'('type.infer.exc'(X0,X1),fun(X2,fun(X3,fun(X4,'type.one.one')))),'const.pair.,_2'(s('type.infer.exc'(X0,X1),'const.infer.Success_1'(s(X0,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(X0),X5))))),s(fun(X2,fun(X3,fun(X4,'type.one.one'))),X6)))) )),
  inference(forward_demodulation,[],[f5054,f168])).
fof(f5054,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'(X0,X1),fun(X2,fun(X3,fun(X4,'type.one.one')))),'const.pair.,_2'(s('type.infer.exc'(X0,X1),'const.infer.Success_1'(s(X0,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(X0),X5))))),s(fun(X2,fun(X3,fun(X4,'type.one.one'))),X6))) = s('type.pair.prod'('type.infer.exc'(X0,X1),fun(X2,fun(X3,fun(X4,'type.one.one')))),'const.infer.st_ex_return_2'(s(X0,happ(s(fun('type.infer.infer_st'(X0),X0),'const.infer.infer_st_subst_0'),s('type.infer.infer_st'(X0),X5))),s(fun(X2,fun(X3,fun(X4,'type.one.one'))),X7)))) )),
  inference(unit_resulting_resolution,[],[f168,f752,f212])).
fof(f5055,plain,(
  ( ! [X6,X4,X2,X0,X10,X8,X7,X5,X3,X1,X11,X9] : (s('type.pair.prod'('type.infer.exc'(X0,X1),fun(X2,fun(X3,fun(X4,'type.one.one')))),'const.infer.st_ex_return_2'(s(X0,happ(s(fun(X5,X0),'_dst_x0x1_2'(s(fun(X6,X0),X7),s(fun(X5,X6),X8))),s(X5,X9))),s(fun(X2,fun(X3,fun(X4,'type.one.one'))),X10))) = s('type.pair.prod'('type.infer.exc'(X0,X1),fun(X2,fun(X3,fun(X4,'type.one.one')))),'const.pair.,_2'(s('type.infer.exc'(X0,X1),'const.infer.Success_1'(s(X0,happ(s(fun(X6,X0),X7),s(X6,happ(s(fun(X5,X6),X8),s(X5,X9))))))),s(fun(X2,fun(X3,fun(X4,'type.one.one'))),X11)))) )),
  inference(unit_resulting_resolution,[],[f206,f752,f212])).
fof(f5057,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'(fun(X0,'type.one.one'),X1),fun(X2,fun(X3,fun(X4,'type.one.one')))),'const.infer.st_ex_return_2'(s(fun(X0,'type.one.one'),X5),s(fun(X2,fun(X3,fun(X4,'type.one.one'))),X6))) = s('type.pair.prod'('type.infer.exc'(fun(X0,'type.one.one'),X1),fun(X2,fun(X3,fun(X4,'type.one.one')))),'const.pair.,_2'(s('type.infer.exc'(fun(X0,'type.one.one'),X1),'const.infer.Success_1'(s(fun(X0,'type.one.one'),X7))),s(fun(X2,fun(X3,fun(X4,'type.one.one'))),X8)))) )),
  inference(unit_resulting_resolution,[],[f605,f752,f212])).
fof(f5058,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1,X9] : (s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,'type.one.one')),X2),fun(X3,fun(X4,fun(X5,'type.one.one')))),'const.infer.st_ex_return_2'(s(fun(X0,fun(X1,'type.one.one')),X6),s(fun(X3,fun(X4,fun(X5,'type.one.one'))),X7))) = s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,'type.one.one')),X2),fun(X3,fun(X4,fun(X5,'type.one.one')))),'const.pair.,_2'(s('type.infer.exc'(fun(X0,fun(X1,'type.one.one')),X2),'const.infer.Success_1'(s(fun(X0,fun(X1,'type.one.one')),X8))),s(fun(X3,fun(X4,fun(X5,'type.one.one'))),X9)))) )),
  inference(unit_resulting_resolution,[],[f724,f752,f212])).
fof(f5059,plain,(
  ( ! [X6,X4,X2,X0,X10,X8,X7,X5,X3,X1,X9] : (s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,fun(X2,'type.one.one'))),X3),fun(X4,fun(X5,fun(X6,'type.one.one')))),'const.infer.st_ex_return_2'(s(fun(X0,fun(X1,fun(X2,'type.one.one'))),X7),s(fun(X4,fun(X5,fun(X6,'type.one.one'))),X8))) = s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,fun(X2,'type.one.one'))),X3),fun(X4,fun(X5,fun(X6,'type.one.one')))),'const.pair.,_2'(s('type.infer.exc'(fun(X0,fun(X1,fun(X2,'type.one.one'))),X3),'const.infer.Success_1'(s(fun(X0,fun(X1,fun(X2,'type.one.one'))),X9))),s(fun(X4,fun(X5,fun(X6,'type.one.one'))),X10)))) )),
  inference(unit_resulting_resolution,[],[f752,f752,f212])).
fof(f5060,plain,(
  ( ! [X6,X4,X2,X0,X10,X8,X7,X5,X3,X1,X11,X9] : (s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,fun(X2,fun(X3,'type.one.one')))),X4),fun(X5,fun(X6,fun(X7,'type.one.one')))),'const.infer.st_ex_return_2'(s(fun(X0,fun(X1,fun(X2,fun(X3,'type.one.one')))),X8),s(fun(X5,fun(X6,fun(X7,'type.one.one'))),X9))) = s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,fun(X2,fun(X3,'type.one.one')))),X4),fun(X5,fun(X6,fun(X7,'type.one.one')))),'const.pair.,_2'(s('type.infer.exc'(fun(X0,fun(X1,fun(X2,fun(X3,'type.one.one')))),X4),'const.infer.Success_1'(s(fun(X0,fun(X1,fun(X2,fun(X3,'type.one.one')))),X10))),s(fun(X5,fun(X6,fun(X7,'type.one.one'))),X11)))) )),
  inference(unit_resulting_resolution,[],[f787,f752,f212])).
fof(f5061,plain,(
  ( ! [X6,X4,X2,X0,X12,X10,X8,X7,X5,X3,X1,X11,X9] : (s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,fun(X2,fun(X3,fun(X4,'type.one.one'))))),X5),fun(X6,fun(X7,fun(X8,'type.one.one')))),'const.infer.st_ex_return_2'(s(fun(X0,fun(X1,fun(X2,fun(X3,fun(X4,'type.one.one'))))),X9),s(fun(X6,fun(X7,fun(X8,'type.one.one'))),X10))) = s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,fun(X2,fun(X3,fun(X4,'type.one.one'))))),X5),fun(X6,fun(X7,fun(X8,'type.one.one')))),'const.pair.,_2'(s('type.infer.exc'(fun(X0,fun(X1,fun(X2,fun(X3,fun(X4,'type.one.one'))))),X5),'const.infer.Success_1'(s(fun(X0,fun(X1,fun(X2,fun(X3,fun(X4,'type.one.one'))))),X11))),s(fun(X6,fun(X7,fun(X8,'type.one.one'))),X12)))) )),
  inference(unit_resulting_resolution,[],[f815,f752,f212])).
fof(f5064,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.one.one',X0),fun(X1,fun(X2,fun(X3,'type.one.one')))),'const.infer.st_ex_return_2'(s('type.one.one',X4),s(fun(X1,fun(X2,fun(X3,'type.one.one'))),X5))) = s('type.pair.prod'('type.infer.exc'('type.one.one',X0),fun(X1,fun(X2,fun(X3,'type.one.one')))),'const.pair.,_2'(s('type.infer.exc'('type.one.one',X0),'const.infer.Success_1'(s('type.one.one',X6))),s(fun(X1,fun(X2,fun(X3,'type.one.one'))),X7)))) )),
  inference(unit_resulting_resolution,[],[f258,f752,f212])).
fof(f6771,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1,X9] : (s('type.pair.prod'('type.infer.exc'('type.list.list'(X0),X1),fun(X2,fun(X3,fun(X4,'type.one.one')))),'const.infer.st_ex_return_2'(s('type.list.list'(X0),'const.list.MAP_2'(s(fun(X5,X0),X6),s('type.list.list'(X5),X7))),s(fun(X2,fun(X3,fun(X4,'type.one.one'))),X9))) = s('type.pair.prod'('type.infer.exc'('type.list.list'(X0),X1),fun(X2,fun(X3,fun(X4,'type.one.one')))),'const.pair.,_2'(s('type.infer.exc'('type.list.list'(X0),X1),'const.infer.Success_1'(s('type.list.list'(X0),'const.list.MAP_2'(s(fun(X5,X0),X6),s('type.list.list'(X5),X7))))),s(fun(X2,fun(X3,fun(X4,'type.one.one'))),X8)))) )),
  inference(forward_demodulation,[],[f5065,f180])).
fof(f5065,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1,X9] : (s('type.pair.prod'('type.infer.exc'('type.list.list'(X0),X1),fun(X2,fun(X3,fun(X4,'type.one.one')))),'const.pair.,_2'(s('type.infer.exc'('type.list.list'(X0),X1),'const.infer.Success_1'(s('type.list.list'(X0),'const.list.MAP_2'(s(fun(X5,X0),X6),s('type.list.list'(X5),X7))))),s(fun(X2,fun(X3,fun(X4,'type.one.one'))),X8))) = s('type.pair.prod'('type.infer.exc'('type.list.list'(X0),X1),fun(X2,fun(X3,fun(X4,'type.one.one')))),'const.infer.st_ex_return_2'(s('type.list.list'(X0),happ(s(fun('type.list.list'(X5),'type.list.list'(X0)),happ(s(fun(fun(X5,X0),fun('type.list.list'(X5),'type.list.list'(X0))),'const.list.MAP_0'),s(fun(X5,X0),X6))),s('type.list.list'(X5),X7))),s(fun(X2,fun(X3,fun(X4,'type.one.one'))),X9)))) )),
  inference(unit_resulting_resolution,[],[f180,f752,f212])).
fof(f6768,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.num.num',X0),fun(X1,fun(X2,fun(X3,'type.one.one')))),'const.infer.st_ex_return_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X4),s('type.num.num',X5))),s(fun(X1,fun(X2,fun(X3,'type.one.one'))),X6))) = s('type.pair.prod'('type.infer.exc'('type.num.num',X0),fun(X1,fun(X2,fun(X3,'type.one.one')))),'const.pair.,_2'(s('type.infer.exc'('type.num.num',X0),'const.infer.Success_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X4),s('type.num.num',X5))))),s(fun(X1,fun(X2,fun(X3,'type.one.one'))),X7)))) )),
  inference(forward_demodulation,[],[f5068,f175])).
fof(f5068,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.num.num',X0),fun(X1,fun(X2,fun(X3,'type.one.one')))),'const.infer.st_ex_return_2'(s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.arithmetic.+_1'(s('type.num.num',X4))),s('type.num.num',X5))),s(fun(X1,fun(X2,fun(X3,'type.one.one'))),X6))) = s('type.pair.prod'('type.infer.exc'('type.num.num',X0),fun(X1,fun(X2,fun(X3,'type.one.one')))),'const.pair.,_2'(s('type.infer.exc'('type.num.num',X0),'const.infer.Success_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X4),s('type.num.num',X5))))),s(fun(X1,fun(X2,fun(X3,'type.one.one'))),X7)))) )),
  inference(unit_resulting_resolution,[],[f175,f752,f212])).
fof(f6767,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),fun(X1,fun(X2,fun(X3,'type.one.one')))),'const.infer.st_ex_return_2'(s('type.infer_t.infer_t','const.infer_t.Infer_Tuvar_1'(s('type.num.num',X4))),s(fun(X1,fun(X2,fun(X3,'type.one.one'))),X5))) = s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),fun(X1,fun(X2,fun(X3,'type.one.one')))),'const.pair.,_2'(s('type.infer.exc'('type.infer_t.infer_t',X0),'const.infer.Success_1'(s('type.infer_t.infer_t','const.infer_t.Infer_Tuvar_1'(s('type.num.num',X4))))),s(fun(X1,fun(X2,fun(X3,'type.one.one'))),X6)))) )),
  inference(forward_demodulation,[],[f5069,f166])).
fof(f5069,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),fun(X1,fun(X2,fun(X3,'type.one.one')))),'const.infer.st_ex_return_2'(s('type.infer_t.infer_t',happ(s(fun('type.num.num','type.infer_t.infer_t'),'const.infer_t.Infer_Tuvar_0'),s('type.num.num',X4))),s(fun(X1,fun(X2,fun(X3,'type.one.one'))),X5))) = s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),fun(X1,fun(X2,fun(X3,'type.one.one')))),'const.pair.,_2'(s('type.infer.exc'('type.infer_t.infer_t',X0),'const.infer.Success_1'(s('type.infer_t.infer_t','const.infer_t.Infer_Tuvar_1'(s('type.num.num',X4))))),s(fun(X1,fun(X2,fun(X3,'type.one.one'))),X6)))) )),
  inference(unit_resulting_resolution,[],[f166,f752,f212])).
fof(f6766,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),fun(X1,fun(X2,fun(X3,'type.one.one')))),'const.infer.st_ex_return_2'(s('type.infer_t.infer_t','const.unify.t_walkstar_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X4),s('type.infer_t.infer_t',X5))),s(fun(X1,fun(X2,fun(X3,'type.one.one'))),X7))) = s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),fun(X1,fun(X2,fun(X3,'type.one.one')))),'const.pair.,_2'(s('type.infer.exc'('type.infer_t.infer_t',X0),'const.infer.Success_1'(s('type.infer_t.infer_t','const.unify.t_walkstar_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X4),s('type.infer_t.infer_t',X5))))),s(fun(X1,fun(X2,fun(X3,'type.one.one'))),X6)))) )),
  inference(forward_demodulation,[],[f5070,f176])).
fof(f5070,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),fun(X1,fun(X2,fun(X3,'type.one.one')))),'const.pair.,_2'(s('type.infer.exc'('type.infer_t.infer_t',X0),'const.infer.Success_1'(s('type.infer_t.infer_t','const.unify.t_walkstar_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X4),s('type.infer_t.infer_t',X5))))),s(fun(X1,fun(X2,fun(X3,'type.one.one'))),X6))) = s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),fun(X1,fun(X2,fun(X3,'type.one.one')))),'const.infer.st_ex_return_2'(s('type.infer_t.infer_t',happ(s(fun('type.infer_t.infer_t','type.infer_t.infer_t'),happ(s(fun('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),fun('type.infer_t.infer_t','type.infer_t.infer_t')),'const.unify.t_walkstar_0'),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X4))),s('type.infer_t.infer_t',X5))),s(fun(X1,fun(X2,fun(X3,'type.one.one'))),X7)))) )),
  inference(unit_resulting_resolution,[],[f176,f752,f212])).
fof(f6764,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X0),X2),fun(X3,fun(X4,fun(X5,'type.one.one')))),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'(X0,X1),X0),'const.infer.read_1'(s(X0,X6))),s(fun(X3,fun(X4,fun(X5,'type.one.one'))),X8))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X0),X2),fun(X3,fun(X4,fun(X5,'type.one.one')))),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X0),X2),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'(X0,X1),X0),'const.infer.read_1'(s(X0,X6))))),s(fun(X3,fun(X4,fun(X5,'type.one.one'))),X7)))) )),
  inference(forward_demodulation,[],[f5072,f178])).
fof(f5072,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X0),X2),fun(X3,fun(X4,fun(X5,'type.one.one')))),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X0),X2),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'(X0,X1),X0),'const.infer.read_1'(s(X0,X6))))),s(fun(X3,fun(X4,fun(X5,'type.one.one'))),X7))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X0),X2),fun(X3,fun(X4,fun(X5,'type.one.one')))),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'(X0,X1),X0),happ(s(fun(X0,'type.pair.prod'('type.infer.exc'(X0,X1),X0)),'const.infer.read_0'),s(X0,X6))),s(fun(X3,fun(X4,fun(X5,'type.one.one'))),X8)))) )),
  inference(unit_resulting_resolution,[],[f178,f752,f212])).
fof(f6763,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),X2),fun(X3,fun(X4,fun(X5,'type.one.one')))),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),'const.infer.fresh_uvar_1'(s('type.infer.infer_st'(X1),X6))),s(fun(X3,fun(X4,fun(X5,'type.one.one'))),X8))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),X2),fun(X3,fun(X4,fun(X5,'type.one.one')))),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),X2),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),'const.infer.fresh_uvar_1'(s('type.infer.infer_st'(X1),X6))))),s(fun(X3,fun(X4,fun(X5,'type.one.one'))),X7)))) )),
  inference(forward_demodulation,[],[f5073,f179])).
fof(f5073,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),X2),fun(X3,fun(X4,fun(X5,'type.one.one')))),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),X2),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),'const.infer.fresh_uvar_1'(s('type.infer.infer_st'(X1),X6))))),s(fun(X3,fun(X4,fun(X5,'type.one.one'))),X7))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),X2),fun(X3,fun(X4,fun(X5,'type.one.one')))),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),happ(s(fun('type.infer.infer_st'(X1),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1))),'const.infer.fresh_uvar_0'),s('type.infer.infer_st'(X1),X6))),s(fun(X3,fun(X4,fun(X5,'type.one.one'))),X8)))) )),
  inference(unit_resulting_resolution,[],[f179,f752,f212])).
fof(f6762,plain,(
  ( ! [X6,X4,X2,X0,X10,X8,X7,X5,X3,X1,X9] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),fun(X4,fun(X5,fun(X6,'type.one.one')))),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'(X0,X1),X2),'const.infer.failwith_2'(s(X1,X7),s(X2,X8))),s(fun(X4,fun(X5,fun(X6,'type.one.one'))),X10))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),fun(X4,fun(X5,fun(X6,'type.one.one')))),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'(X0,X1),X2),'const.infer.failwith_2'(s(X1,X7),s(X2,X8))))),s(fun(X4,fun(X5,fun(X6,'type.one.one'))),X9)))) )),
  inference(forward_demodulation,[],[f5074,f204])).
fof(f5074,plain,(
  ( ! [X6,X4,X2,X0,X10,X8,X7,X5,X3,X1,X9] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),fun(X4,fun(X5,fun(X6,'type.one.one')))),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'(X0,X1),X2),'const.infer.failwith_2'(s(X1,X7),s(X2,X8))))),s(fun(X4,fun(X5,fun(X6,'type.one.one'))),X9))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),fun(X4,fun(X5,fun(X6,'type.one.one')))),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'(X0,X1),X2),happ(s(fun(X2,'type.pair.prod'('type.infer.exc'(X0,X1),X2)),'const.infer.failwith_1'(s(X1,X7))),s(X2,X8))),s(fun(X4,fun(X5,fun(X6,'type.one.one'))),X10)))) )),
  inference(unit_resulting_resolution,[],[f204,f752,f212])).
fof(f6761,plain,(
  ( ! [X6,X4,X2,X0,X10,X8,X7,X5,X3,X1,X9] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),X2),fun(X3,fun(X4,fun(X5,'type.one.one')))),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),'const.infer.guard_3'(s(bool,X6),s(X0,X7),s(X1,X8))),s(fun(X3,fun(X4,fun(X5,'type.one.one'))),X10))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),X2),fun(X3,fun(X4,fun(X5,'type.one.one')))),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),X2),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),'const.infer.guard_3'(s(bool,X6),s(X0,X7),s(X1,X8))))),s(fun(X3,fun(X4,fun(X5,'type.one.one'))),X9)))) )),
  inference(forward_demodulation,[],[f5075,f183])).
fof(f5075,plain,(
  ( ! [X6,X4,X2,X0,X10,X8,X7,X5,X3,X1,X9] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),X2),fun(X3,fun(X4,fun(X5,'type.one.one')))),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),X2),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),'const.infer.guard_3'(s(bool,X6),s(X0,X7),s(X1,X8))))),s(fun(X3,fun(X4,fun(X5,'type.one.one'))),X9))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),X2),fun(X3,fun(X4,fun(X5,'type.one.one')))),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),happ(s(fun(X1,'type.pair.prod'('type.infer.exc'('type.one.one',X0),X1)),'const.infer.guard_2'(s(bool,X6),s(X0,X7))),s(X1,X8))),s(fun(X3,fun(X4,fun(X5,'type.one.one'))),X10)))) )),
  inference(unit_resulting_resolution,[],[f183,f752,f212])).
fof(f5077,plain,(
  ( ! [X6,X4,X2,X0,X12,X10,X8,X7,X5,X3,X1,X11,X9] : (s('type.pair.prod'('type.infer.exc'(X0,X1),fun(X2,fun(X3,fun(X4,fun(X5,'type.one.one'))))),'const.infer.st_ex_return_2'(s(X0,happ(s(fun(X6,X0),X7),s(X6,happ(s(fun(X8,X6),X9),s(X8,X10))))),s(fun(X2,fun(X3,fun(X4,fun(X5,'type.one.one')))),X11))) = s('type.pair.prod'('type.infer.exc'(X0,X1),fun(X2,fun(X3,fun(X4,fun(X5,'type.one.one'))))),'const.pair.,_2'(s('type.infer.exc'(X0,X1),'const.infer.Success_1'(s(X0,happ(s(fun(X8,X0),'_dst_x0x1_2'(s(fun(X6,X0),X7),s(fun(X8,X6),X9))),s(X8,X10))))),s(fun(X2,fun(X3,fun(X4,fun(X5,'type.one.one')))),X12)))) )),
  inference(unit_resulting_resolution,[],[f206,f787,f212])).
fof(f6747,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'(X0,X1),fun(X2,fun(X3,fun(X4,fun(X5,'type.one.one'))))),'const.infer.st_ex_return_2'(s(X0,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(X0),X6))),s(fun(X2,fun(X3,fun(X4,fun(X5,'type.one.one')))),X8))) = s('type.pair.prod'('type.infer.exc'(X0,X1),fun(X2,fun(X3,fun(X4,fun(X5,'type.one.one'))))),'const.pair.,_2'(s('type.infer.exc'(X0,X1),'const.infer.Success_1'(s(X0,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(X0),X6))))),s(fun(X2,fun(X3,fun(X4,fun(X5,'type.one.one')))),X7)))) )),
  inference(forward_demodulation,[],[f5098,f168])).
fof(f5098,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'(X0,X1),fun(X2,fun(X3,fun(X4,fun(X5,'type.one.one'))))),'const.pair.,_2'(s('type.infer.exc'(X0,X1),'const.infer.Success_1'(s(X0,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(X0),X6))))),s(fun(X2,fun(X3,fun(X4,fun(X5,'type.one.one')))),X7))) = s('type.pair.prod'('type.infer.exc'(X0,X1),fun(X2,fun(X3,fun(X4,fun(X5,'type.one.one'))))),'const.infer.st_ex_return_2'(s(X0,happ(s(fun('type.infer.infer_st'(X0),X0),'const.infer.infer_st_subst_0'),s('type.infer.infer_st'(X0),X6))),s(fun(X2,fun(X3,fun(X4,fun(X5,'type.one.one')))),X8)))) )),
  inference(unit_resulting_resolution,[],[f168,f787,f212])).
fof(f5099,plain,(
  ( ! [X6,X4,X2,X0,X12,X10,X8,X7,X5,X3,X1,X11,X9] : (s('type.pair.prod'('type.infer.exc'(X0,X1),fun(X2,fun(X3,fun(X4,fun(X5,'type.one.one'))))),'const.infer.st_ex_return_2'(s(X0,happ(s(fun(X6,X0),'_dst_x0x1_2'(s(fun(X7,X0),X8),s(fun(X6,X7),X9))),s(X6,X10))),s(fun(X2,fun(X3,fun(X4,fun(X5,'type.one.one')))),X11))) = s('type.pair.prod'('type.infer.exc'(X0,X1),fun(X2,fun(X3,fun(X4,fun(X5,'type.one.one'))))),'const.pair.,_2'(s('type.infer.exc'(X0,X1),'const.infer.Success_1'(s(X0,happ(s(fun(X7,X0),X8),s(X7,happ(s(fun(X6,X7),X9),s(X6,X10))))))),s(fun(X2,fun(X3,fun(X4,fun(X5,'type.one.one')))),X12)))) )),
  inference(unit_resulting_resolution,[],[f206,f787,f212])).
fof(f5101,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1,X9] : (s('type.pair.prod'('type.infer.exc'(fun(X0,'type.one.one'),X1),fun(X2,fun(X3,fun(X4,fun(X5,'type.one.one'))))),'const.infer.st_ex_return_2'(s(fun(X0,'type.one.one'),X6),s(fun(X2,fun(X3,fun(X4,fun(X5,'type.one.one')))),X7))) = s('type.pair.prod'('type.infer.exc'(fun(X0,'type.one.one'),X1),fun(X2,fun(X3,fun(X4,fun(X5,'type.one.one'))))),'const.pair.,_2'(s('type.infer.exc'(fun(X0,'type.one.one'),X1),'const.infer.Success_1'(s(fun(X0,'type.one.one'),X8))),s(fun(X2,fun(X3,fun(X4,fun(X5,'type.one.one')))),X9)))) )),
  inference(unit_resulting_resolution,[],[f605,f787,f212])).
fof(f5102,plain,(
  ( ! [X6,X4,X2,X0,X10,X8,X7,X5,X3,X1,X9] : (s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,'type.one.one')),X2),fun(X3,fun(X4,fun(X5,fun(X6,'type.one.one'))))),'const.infer.st_ex_return_2'(s(fun(X0,fun(X1,'type.one.one')),X7),s(fun(X3,fun(X4,fun(X5,fun(X6,'type.one.one')))),X8))) = s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,'type.one.one')),X2),fun(X3,fun(X4,fun(X5,fun(X6,'type.one.one'))))),'const.pair.,_2'(s('type.infer.exc'(fun(X0,fun(X1,'type.one.one')),X2),'const.infer.Success_1'(s(fun(X0,fun(X1,'type.one.one')),X9))),s(fun(X3,fun(X4,fun(X5,fun(X6,'type.one.one')))),X10)))) )),
  inference(unit_resulting_resolution,[],[f724,f787,f212])).
fof(f5103,plain,(
  ( ! [X6,X4,X2,X0,X10,X8,X7,X5,X3,X1,X11,X9] : (s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,fun(X2,'type.one.one'))),X3),fun(X4,fun(X5,fun(X6,fun(X7,'type.one.one'))))),'const.infer.st_ex_return_2'(s(fun(X0,fun(X1,fun(X2,'type.one.one'))),X8),s(fun(X4,fun(X5,fun(X6,fun(X7,'type.one.one')))),X9))) = s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,fun(X2,'type.one.one'))),X3),fun(X4,fun(X5,fun(X6,fun(X7,'type.one.one'))))),'const.pair.,_2'(s('type.infer.exc'(fun(X0,fun(X1,fun(X2,'type.one.one'))),X3),'const.infer.Success_1'(s(fun(X0,fun(X1,fun(X2,'type.one.one'))),X10))),s(fun(X4,fun(X5,fun(X6,fun(X7,'type.one.one')))),X11)))) )),
  inference(unit_resulting_resolution,[],[f752,f787,f212])).
fof(f5104,plain,(
  ( ! [X6,X4,X2,X0,X12,X10,X8,X7,X5,X3,X1,X11,X9] : (s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,fun(X2,fun(X3,'type.one.one')))),X4),fun(X5,fun(X6,fun(X7,fun(X8,'type.one.one'))))),'const.infer.st_ex_return_2'(s(fun(X0,fun(X1,fun(X2,fun(X3,'type.one.one')))),X9),s(fun(X5,fun(X6,fun(X7,fun(X8,'type.one.one')))),X10))) = s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,fun(X2,fun(X3,'type.one.one')))),X4),fun(X5,fun(X6,fun(X7,fun(X8,'type.one.one'))))),'const.pair.,_2'(s('type.infer.exc'(fun(X0,fun(X1,fun(X2,fun(X3,'type.one.one')))),X4),'const.infer.Success_1'(s(fun(X0,fun(X1,fun(X2,fun(X3,'type.one.one')))),X11))),s(fun(X5,fun(X6,fun(X7,fun(X8,'type.one.one')))),X12)))) )),
  inference(unit_resulting_resolution,[],[f787,f787,f212])).
fof(f5105,plain,(
  ( ! [X6,X4,X2,X0,X12,X10,X8,X7,X5,X3,X1,X13,X11,X9] : (s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,fun(X2,fun(X3,fun(X4,'type.one.one'))))),X5),fun(X6,fun(X7,fun(X8,fun(X9,'type.one.one'))))),'const.infer.st_ex_return_2'(s(fun(X0,fun(X1,fun(X2,fun(X3,fun(X4,'type.one.one'))))),X10),s(fun(X6,fun(X7,fun(X8,fun(X9,'type.one.one')))),X11))) = s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,fun(X2,fun(X3,fun(X4,'type.one.one'))))),X5),fun(X6,fun(X7,fun(X8,fun(X9,'type.one.one'))))),'const.pair.,_2'(s('type.infer.exc'(fun(X0,fun(X1,fun(X2,fun(X3,fun(X4,'type.one.one'))))),X5),'const.infer.Success_1'(s(fun(X0,fun(X1,fun(X2,fun(X3,fun(X4,'type.one.one'))))),X12))),s(fun(X6,fun(X7,fun(X8,fun(X9,'type.one.one')))),X13)))) )),
  inference(unit_resulting_resolution,[],[f815,f787,f212])).
fof(f5108,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.one.one',X0),fun(X1,fun(X2,fun(X3,fun(X4,'type.one.one'))))),'const.infer.st_ex_return_2'(s('type.one.one',X5),s(fun(X1,fun(X2,fun(X3,fun(X4,'type.one.one')))),X6))) = s('type.pair.prod'('type.infer.exc'('type.one.one',X0),fun(X1,fun(X2,fun(X3,fun(X4,'type.one.one'))))),'const.pair.,_2'(s('type.infer.exc'('type.one.one',X0),'const.infer.Success_1'(s('type.one.one',X7))),s(fun(X1,fun(X2,fun(X3,fun(X4,'type.one.one')))),X8)))) )),
  inference(unit_resulting_resolution,[],[f258,f787,f212])).
fof(f6745,plain,(
  ( ! [X6,X4,X2,X0,X10,X8,X7,X5,X3,X1,X9] : (s('type.pair.prod'('type.infer.exc'('type.list.list'(X0),X1),fun(X2,fun(X3,fun(X4,fun(X5,'type.one.one'))))),'const.infer.st_ex_return_2'(s('type.list.list'(X0),'const.list.MAP_2'(s(fun(X6,X0),X7),s('type.list.list'(X6),X8))),s(fun(X2,fun(X3,fun(X4,fun(X5,'type.one.one')))),X10))) = s('type.pair.prod'('type.infer.exc'('type.list.list'(X0),X1),fun(X2,fun(X3,fun(X4,fun(X5,'type.one.one'))))),'const.pair.,_2'(s('type.infer.exc'('type.list.list'(X0),X1),'const.infer.Success_1'(s('type.list.list'(X0),'const.list.MAP_2'(s(fun(X6,X0),X7),s('type.list.list'(X6),X8))))),s(fun(X2,fun(X3,fun(X4,fun(X5,'type.one.one')))),X9)))) )),
  inference(forward_demodulation,[],[f5109,f180])).
fof(f5109,plain,(
  ( ! [X6,X4,X2,X0,X10,X8,X7,X5,X3,X1,X9] : (s('type.pair.prod'('type.infer.exc'('type.list.list'(X0),X1),fun(X2,fun(X3,fun(X4,fun(X5,'type.one.one'))))),'const.pair.,_2'(s('type.infer.exc'('type.list.list'(X0),X1),'const.infer.Success_1'(s('type.list.list'(X0),'const.list.MAP_2'(s(fun(X6,X0),X7),s('type.list.list'(X6),X8))))),s(fun(X2,fun(X3,fun(X4,fun(X5,'type.one.one')))),X9))) = s('type.pair.prod'('type.infer.exc'('type.list.list'(X0),X1),fun(X2,fun(X3,fun(X4,fun(X5,'type.one.one'))))),'const.infer.st_ex_return_2'(s('type.list.list'(X0),happ(s(fun('type.list.list'(X6),'type.list.list'(X0)),happ(s(fun(fun(X6,X0),fun('type.list.list'(X6),'type.list.list'(X0))),'const.list.MAP_0'),s(fun(X6,X0),X7))),s('type.list.list'(X6),X8))),s(fun(X2,fun(X3,fun(X4,fun(X5,'type.one.one')))),X10)))) )),
  inference(unit_resulting_resolution,[],[f180,f787,f212])).
fof(f6742,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.num.num',X0),fun(X1,fun(X2,fun(X3,fun(X4,'type.one.one'))))),'const.infer.st_ex_return_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X5),s('type.num.num',X6))),s(fun(X1,fun(X2,fun(X3,fun(X4,'type.one.one')))),X7))) = s('type.pair.prod'('type.infer.exc'('type.num.num',X0),fun(X1,fun(X2,fun(X3,fun(X4,'type.one.one'))))),'const.pair.,_2'(s('type.infer.exc'('type.num.num',X0),'const.infer.Success_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X5),s('type.num.num',X6))))),s(fun(X1,fun(X2,fun(X3,fun(X4,'type.one.one')))),X8)))) )),
  inference(forward_demodulation,[],[f5112,f175])).
fof(f5112,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.num.num',X0),fun(X1,fun(X2,fun(X3,fun(X4,'type.one.one'))))),'const.infer.st_ex_return_2'(s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.arithmetic.+_1'(s('type.num.num',X5))),s('type.num.num',X6))),s(fun(X1,fun(X2,fun(X3,fun(X4,'type.one.one')))),X7))) = s('type.pair.prod'('type.infer.exc'('type.num.num',X0),fun(X1,fun(X2,fun(X3,fun(X4,'type.one.one'))))),'const.pair.,_2'(s('type.infer.exc'('type.num.num',X0),'const.infer.Success_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X5),s('type.num.num',X6))))),s(fun(X1,fun(X2,fun(X3,fun(X4,'type.one.one')))),X8)))) )),
  inference(unit_resulting_resolution,[],[f175,f787,f212])).
fof(f6741,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),fun(X1,fun(X2,fun(X3,fun(X4,'type.one.one'))))),'const.infer.st_ex_return_2'(s('type.infer_t.infer_t','const.infer_t.Infer_Tuvar_1'(s('type.num.num',X5))),s(fun(X1,fun(X2,fun(X3,fun(X4,'type.one.one')))),X6))) = s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),fun(X1,fun(X2,fun(X3,fun(X4,'type.one.one'))))),'const.pair.,_2'(s('type.infer.exc'('type.infer_t.infer_t',X0),'const.infer.Success_1'(s('type.infer_t.infer_t','const.infer_t.Infer_Tuvar_1'(s('type.num.num',X5))))),s(fun(X1,fun(X2,fun(X3,fun(X4,'type.one.one')))),X7)))) )),
  inference(forward_demodulation,[],[f5113,f166])).
fof(f5113,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),fun(X1,fun(X2,fun(X3,fun(X4,'type.one.one'))))),'const.infer.st_ex_return_2'(s('type.infer_t.infer_t',happ(s(fun('type.num.num','type.infer_t.infer_t'),'const.infer_t.Infer_Tuvar_0'),s('type.num.num',X5))),s(fun(X1,fun(X2,fun(X3,fun(X4,'type.one.one')))),X6))) = s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),fun(X1,fun(X2,fun(X3,fun(X4,'type.one.one'))))),'const.pair.,_2'(s('type.infer.exc'('type.infer_t.infer_t',X0),'const.infer.Success_1'(s('type.infer_t.infer_t','const.infer_t.Infer_Tuvar_1'(s('type.num.num',X5))))),s(fun(X1,fun(X2,fun(X3,fun(X4,'type.one.one')))),X7)))) )),
  inference(unit_resulting_resolution,[],[f166,f787,f212])).
fof(f6740,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),fun(X1,fun(X2,fun(X3,fun(X4,'type.one.one'))))),'const.infer.st_ex_return_2'(s('type.infer_t.infer_t','const.unify.t_walkstar_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X5),s('type.infer_t.infer_t',X6))),s(fun(X1,fun(X2,fun(X3,fun(X4,'type.one.one')))),X8))) = s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),fun(X1,fun(X2,fun(X3,fun(X4,'type.one.one'))))),'const.pair.,_2'(s('type.infer.exc'('type.infer_t.infer_t',X0),'const.infer.Success_1'(s('type.infer_t.infer_t','const.unify.t_walkstar_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X5),s('type.infer_t.infer_t',X6))))),s(fun(X1,fun(X2,fun(X3,fun(X4,'type.one.one')))),X7)))) )),
  inference(forward_demodulation,[],[f5114,f176])).
fof(f5114,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),fun(X1,fun(X2,fun(X3,fun(X4,'type.one.one'))))),'const.pair.,_2'(s('type.infer.exc'('type.infer_t.infer_t',X0),'const.infer.Success_1'(s('type.infer_t.infer_t','const.unify.t_walkstar_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X5),s('type.infer_t.infer_t',X6))))),s(fun(X1,fun(X2,fun(X3,fun(X4,'type.one.one')))),X7))) = s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),fun(X1,fun(X2,fun(X3,fun(X4,'type.one.one'))))),'const.infer.st_ex_return_2'(s('type.infer_t.infer_t',happ(s(fun('type.infer_t.infer_t','type.infer_t.infer_t'),happ(s(fun('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),fun('type.infer_t.infer_t','type.infer_t.infer_t')),'const.unify.t_walkstar_0'),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X5))),s('type.infer_t.infer_t',X6))),s(fun(X1,fun(X2,fun(X3,fun(X4,'type.one.one')))),X8)))) )),
  inference(unit_resulting_resolution,[],[f176,f787,f212])).
fof(f6738,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1,X9] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X0),X2),fun(X3,fun(X4,fun(X5,fun(X6,'type.one.one'))))),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'(X0,X1),X0),'const.infer.read_1'(s(X0,X7))),s(fun(X3,fun(X4,fun(X5,fun(X6,'type.one.one')))),X9))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X0),X2),fun(X3,fun(X4,fun(X5,fun(X6,'type.one.one'))))),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X0),X2),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'(X0,X1),X0),'const.infer.read_1'(s(X0,X7))))),s(fun(X3,fun(X4,fun(X5,fun(X6,'type.one.one')))),X8)))) )),
  inference(forward_demodulation,[],[f5116,f178])).
fof(f5116,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1,X9] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X0),X2),fun(X3,fun(X4,fun(X5,fun(X6,'type.one.one'))))),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X0),X2),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'(X0,X1),X0),'const.infer.read_1'(s(X0,X7))))),s(fun(X3,fun(X4,fun(X5,fun(X6,'type.one.one')))),X8))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X0),X2),fun(X3,fun(X4,fun(X5,fun(X6,'type.one.one'))))),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'(X0,X1),X0),happ(s(fun(X0,'type.pair.prod'('type.infer.exc'(X0,X1),X0)),'const.infer.read_0'),s(X0,X7))),s(fun(X3,fun(X4,fun(X5,fun(X6,'type.one.one')))),X9)))) )),
  inference(unit_resulting_resolution,[],[f178,f787,f212])).
fof(f6737,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1,X9] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),X2),fun(X3,fun(X4,fun(X5,fun(X6,'type.one.one'))))),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),'const.infer.fresh_uvar_1'(s('type.infer.infer_st'(X1),X7))),s(fun(X3,fun(X4,fun(X5,fun(X6,'type.one.one')))),X9))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),X2),fun(X3,fun(X4,fun(X5,fun(X6,'type.one.one'))))),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),X2),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),'const.infer.fresh_uvar_1'(s('type.infer.infer_st'(X1),X7))))),s(fun(X3,fun(X4,fun(X5,fun(X6,'type.one.one')))),X8)))) )),
  inference(forward_demodulation,[],[f5117,f179])).
fof(f5117,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1,X9] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),X2),fun(X3,fun(X4,fun(X5,fun(X6,'type.one.one'))))),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),X2),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),'const.infer.fresh_uvar_1'(s('type.infer.infer_st'(X1),X7))))),s(fun(X3,fun(X4,fun(X5,fun(X6,'type.one.one')))),X8))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),X2),fun(X3,fun(X4,fun(X5,fun(X6,'type.one.one'))))),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),happ(s(fun('type.infer.infer_st'(X1),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1))),'const.infer.fresh_uvar_0'),s('type.infer.infer_st'(X1),X7))),s(fun(X3,fun(X4,fun(X5,fun(X6,'type.one.one')))),X9)))) )),
  inference(unit_resulting_resolution,[],[f179,f787,f212])).
fof(f6736,plain,(
  ( ! [X6,X4,X2,X0,X10,X8,X7,X5,X3,X1,X11,X9] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),fun(X4,fun(X5,fun(X6,fun(X7,'type.one.one'))))),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'(X0,X1),X2),'const.infer.failwith_2'(s(X1,X8),s(X2,X9))),s(fun(X4,fun(X5,fun(X6,fun(X7,'type.one.one')))),X11))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),fun(X4,fun(X5,fun(X6,fun(X7,'type.one.one'))))),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'(X0,X1),X2),'const.infer.failwith_2'(s(X1,X8),s(X2,X9))))),s(fun(X4,fun(X5,fun(X6,fun(X7,'type.one.one')))),X10)))) )),
  inference(forward_demodulation,[],[f5118,f204])).
fof(f5118,plain,(
  ( ! [X6,X4,X2,X0,X10,X8,X7,X5,X3,X1,X11,X9] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),fun(X4,fun(X5,fun(X6,fun(X7,'type.one.one'))))),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'(X0,X1),X2),'const.infer.failwith_2'(s(X1,X8),s(X2,X9))))),s(fun(X4,fun(X5,fun(X6,fun(X7,'type.one.one')))),X10))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),fun(X4,fun(X5,fun(X6,fun(X7,'type.one.one'))))),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'(X0,X1),X2),happ(s(fun(X2,'type.pair.prod'('type.infer.exc'(X0,X1),X2)),'const.infer.failwith_1'(s(X1,X8))),s(X2,X9))),s(fun(X4,fun(X5,fun(X6,fun(X7,'type.one.one')))),X11)))) )),
  inference(unit_resulting_resolution,[],[f204,f787,f212])).
fof(f6735,plain,(
  ( ! [X6,X4,X2,X0,X10,X8,X7,X5,X3,X1,X11,X9] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),X2),fun(X3,fun(X4,fun(X5,fun(X6,'type.one.one'))))),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),'const.infer.guard_3'(s(bool,X7),s(X0,X8),s(X1,X9))),s(fun(X3,fun(X4,fun(X5,fun(X6,'type.one.one')))),X11))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),X2),fun(X3,fun(X4,fun(X5,fun(X6,'type.one.one'))))),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),X2),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),'const.infer.guard_3'(s(bool,X7),s(X0,X8),s(X1,X9))))),s(fun(X3,fun(X4,fun(X5,fun(X6,'type.one.one')))),X10)))) )),
  inference(forward_demodulation,[],[f5119,f183])).
fof(f5119,plain,(
  ( ! [X6,X4,X2,X0,X10,X8,X7,X5,X3,X1,X11,X9] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),X2),fun(X3,fun(X4,fun(X5,fun(X6,'type.one.one'))))),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),X2),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),'const.infer.guard_3'(s(bool,X7),s(X0,X8),s(X1,X9))))),s(fun(X3,fun(X4,fun(X5,fun(X6,'type.one.one')))),X10))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),X2),fun(X3,fun(X4,fun(X5,fun(X6,'type.one.one'))))),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),happ(s(fun(X1,'type.pair.prod'('type.infer.exc'('type.one.one',X0),X1)),'const.infer.guard_2'(s(bool,X7),s(X0,X8))),s(X1,X9))),s(fun(X3,fun(X4,fun(X5,fun(X6,'type.one.one')))),X11)))) )),
  inference(unit_resulting_resolution,[],[f183,f787,f212])).
fof(f5121,plain,(
  ( ! [X6,X4,X2,X0,X12,X10,X8,X7,X5,X3,X1,X13,X11,X9] : (s('type.pair.prod'('type.infer.exc'(X0,X1),fun(X2,fun(X3,fun(X4,fun(X5,fun(X6,'type.one.one')))))),'const.infer.st_ex_return_2'(s(X0,happ(s(fun(X7,X0),X8),s(X7,happ(s(fun(X9,X7),X10),s(X9,X11))))),s(fun(X2,fun(X3,fun(X4,fun(X5,fun(X6,'type.one.one'))))),X12))) = s('type.pair.prod'('type.infer.exc'(X0,X1),fun(X2,fun(X3,fun(X4,fun(X5,fun(X6,'type.one.one')))))),'const.pair.,_2'(s('type.infer.exc'(X0,X1),'const.infer.Success_1'(s(X0,happ(s(fun(X9,X0),'_dst_x0x1_2'(s(fun(X7,X0),X8),s(fun(X9,X7),X10))),s(X9,X11))))),s(fun(X2,fun(X3,fun(X4,fun(X5,fun(X6,'type.one.one'))))),X13)))) )),
  inference(unit_resulting_resolution,[],[f206,f815,f212])).
fof(f6721,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1,X9] : (s('type.pair.prod'('type.infer.exc'(X0,X1),fun(X2,fun(X3,fun(X4,fun(X5,fun(X6,'type.one.one')))))),'const.infer.st_ex_return_2'(s(X0,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(X0),X7))),s(fun(X2,fun(X3,fun(X4,fun(X5,fun(X6,'type.one.one'))))),X9))) = s('type.pair.prod'('type.infer.exc'(X0,X1),fun(X2,fun(X3,fun(X4,fun(X5,fun(X6,'type.one.one')))))),'const.pair.,_2'(s('type.infer.exc'(X0,X1),'const.infer.Success_1'(s(X0,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(X0),X7))))),s(fun(X2,fun(X3,fun(X4,fun(X5,fun(X6,'type.one.one'))))),X8)))) )),
  inference(forward_demodulation,[],[f5142,f168])).
fof(f5142,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1,X9] : (s('type.pair.prod'('type.infer.exc'(X0,X1),fun(X2,fun(X3,fun(X4,fun(X5,fun(X6,'type.one.one')))))),'const.pair.,_2'(s('type.infer.exc'(X0,X1),'const.infer.Success_1'(s(X0,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(X0),X7))))),s(fun(X2,fun(X3,fun(X4,fun(X5,fun(X6,'type.one.one'))))),X8))) = s('type.pair.prod'('type.infer.exc'(X0,X1),fun(X2,fun(X3,fun(X4,fun(X5,fun(X6,'type.one.one')))))),'const.infer.st_ex_return_2'(s(X0,happ(s(fun('type.infer.infer_st'(X0),X0),'const.infer.infer_st_subst_0'),s('type.infer.infer_st'(X0),X7))),s(fun(X2,fun(X3,fun(X4,fun(X5,fun(X6,'type.one.one'))))),X9)))) )),
  inference(unit_resulting_resolution,[],[f168,f815,f212])).
fof(f5143,plain,(
  ( ! [X6,X4,X2,X0,X12,X10,X8,X7,X5,X3,X1,X13,X11,X9] : (s('type.pair.prod'('type.infer.exc'(X0,X1),fun(X2,fun(X3,fun(X4,fun(X5,fun(X6,'type.one.one')))))),'const.infer.st_ex_return_2'(s(X0,happ(s(fun(X7,X0),'_dst_x0x1_2'(s(fun(X8,X0),X9),s(fun(X7,X8),X10))),s(X7,X11))),s(fun(X2,fun(X3,fun(X4,fun(X5,fun(X6,'type.one.one'))))),X12))) = s('type.pair.prod'('type.infer.exc'(X0,X1),fun(X2,fun(X3,fun(X4,fun(X5,fun(X6,'type.one.one')))))),'const.pair.,_2'(s('type.infer.exc'(X0,X1),'const.infer.Success_1'(s(X0,happ(s(fun(X8,X0),X9),s(X8,happ(s(fun(X7,X8),X10),s(X7,X11))))))),s(fun(X2,fun(X3,fun(X4,fun(X5,fun(X6,'type.one.one'))))),X13)))) )),
  inference(unit_resulting_resolution,[],[f206,f815,f212])).
fof(f5145,plain,(
  ( ! [X6,X4,X2,X0,X10,X8,X7,X5,X3,X1,X9] : (s('type.pair.prod'('type.infer.exc'(fun(X0,'type.one.one'),X1),fun(X2,fun(X3,fun(X4,fun(X5,fun(X6,'type.one.one')))))),'const.infer.st_ex_return_2'(s(fun(X0,'type.one.one'),X7),s(fun(X2,fun(X3,fun(X4,fun(X5,fun(X6,'type.one.one'))))),X8))) = s('type.pair.prod'('type.infer.exc'(fun(X0,'type.one.one'),X1),fun(X2,fun(X3,fun(X4,fun(X5,fun(X6,'type.one.one')))))),'const.pair.,_2'(s('type.infer.exc'(fun(X0,'type.one.one'),X1),'const.infer.Success_1'(s(fun(X0,'type.one.one'),X9))),s(fun(X2,fun(X3,fun(X4,fun(X5,fun(X6,'type.one.one'))))),X10)))) )),
  inference(unit_resulting_resolution,[],[f605,f815,f212])).
fof(f5146,plain,(
  ( ! [X6,X4,X2,X0,X10,X8,X7,X5,X3,X1,X11,X9] : (s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,'type.one.one')),X2),fun(X3,fun(X4,fun(X5,fun(X6,fun(X7,'type.one.one')))))),'const.infer.st_ex_return_2'(s(fun(X0,fun(X1,'type.one.one')),X8),s(fun(X3,fun(X4,fun(X5,fun(X6,fun(X7,'type.one.one'))))),X9))) = s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,'type.one.one')),X2),fun(X3,fun(X4,fun(X5,fun(X6,fun(X7,'type.one.one')))))),'const.pair.,_2'(s('type.infer.exc'(fun(X0,fun(X1,'type.one.one')),X2),'const.infer.Success_1'(s(fun(X0,fun(X1,'type.one.one')),X10))),s(fun(X3,fun(X4,fun(X5,fun(X6,fun(X7,'type.one.one'))))),X11)))) )),
  inference(unit_resulting_resolution,[],[f724,f815,f212])).
fof(f5147,plain,(
  ( ! [X6,X4,X2,X0,X12,X10,X8,X7,X5,X3,X1,X11,X9] : (s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,fun(X2,'type.one.one'))),X3),fun(X4,fun(X5,fun(X6,fun(X7,fun(X8,'type.one.one')))))),'const.infer.st_ex_return_2'(s(fun(X0,fun(X1,fun(X2,'type.one.one'))),X9),s(fun(X4,fun(X5,fun(X6,fun(X7,fun(X8,'type.one.one'))))),X10))) = s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,fun(X2,'type.one.one'))),X3),fun(X4,fun(X5,fun(X6,fun(X7,fun(X8,'type.one.one')))))),'const.pair.,_2'(s('type.infer.exc'(fun(X0,fun(X1,fun(X2,'type.one.one'))),X3),'const.infer.Success_1'(s(fun(X0,fun(X1,fun(X2,'type.one.one'))),X11))),s(fun(X4,fun(X5,fun(X6,fun(X7,fun(X8,'type.one.one'))))),X12)))) )),
  inference(unit_resulting_resolution,[],[f752,f815,f212])).
fof(f5148,plain,(
  ( ! [X6,X4,X2,X0,X12,X10,X8,X7,X5,X3,X1,X13,X11,X9] : (s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,fun(X2,fun(X3,'type.one.one')))),X4),fun(X5,fun(X6,fun(X7,fun(X8,fun(X9,'type.one.one')))))),'const.infer.st_ex_return_2'(s(fun(X0,fun(X1,fun(X2,fun(X3,'type.one.one')))),X10),s(fun(X5,fun(X6,fun(X7,fun(X8,fun(X9,'type.one.one'))))),X11))) = s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,fun(X2,fun(X3,'type.one.one')))),X4),fun(X5,fun(X6,fun(X7,fun(X8,fun(X9,'type.one.one')))))),'const.pair.,_2'(s('type.infer.exc'(fun(X0,fun(X1,fun(X2,fun(X3,'type.one.one')))),X4),'const.infer.Success_1'(s(fun(X0,fun(X1,fun(X2,fun(X3,'type.one.one')))),X12))),s(fun(X5,fun(X6,fun(X7,fun(X8,fun(X9,'type.one.one'))))),X13)))) )),
  inference(unit_resulting_resolution,[],[f787,f815,f212])).
fof(f5149,plain,(
  ( ! [X6,X4,X2,X0,X14,X12,X10,X8,X7,X5,X3,X1,X13,X11,X9] : (s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,fun(X2,fun(X3,fun(X4,'type.one.one'))))),X5),fun(X6,fun(X7,fun(X8,fun(X9,fun(X10,'type.one.one')))))),'const.infer.st_ex_return_2'(s(fun(X0,fun(X1,fun(X2,fun(X3,fun(X4,'type.one.one'))))),X11),s(fun(X6,fun(X7,fun(X8,fun(X9,fun(X10,'type.one.one'))))),X12))) = s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,fun(X2,fun(X3,fun(X4,'type.one.one'))))),X5),fun(X6,fun(X7,fun(X8,fun(X9,fun(X10,'type.one.one')))))),'const.pair.,_2'(s('type.infer.exc'(fun(X0,fun(X1,fun(X2,fun(X3,fun(X4,'type.one.one'))))),X5),'const.infer.Success_1'(s(fun(X0,fun(X1,fun(X2,fun(X3,fun(X4,'type.one.one'))))),X13))),s(fun(X6,fun(X7,fun(X8,fun(X9,fun(X10,'type.one.one'))))),X14)))) )),
  inference(unit_resulting_resolution,[],[f815,f815,f212])).
fof(f5152,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1,X9] : (s('type.pair.prod'('type.infer.exc'('type.one.one',X0),fun(X1,fun(X2,fun(X3,fun(X4,fun(X5,'type.one.one')))))),'const.infer.st_ex_return_2'(s('type.one.one',X6),s(fun(X1,fun(X2,fun(X3,fun(X4,fun(X5,'type.one.one'))))),X7))) = s('type.pair.prod'('type.infer.exc'('type.one.one',X0),fun(X1,fun(X2,fun(X3,fun(X4,fun(X5,'type.one.one')))))),'const.pair.,_2'(s('type.infer.exc'('type.one.one',X0),'const.infer.Success_1'(s('type.one.one',X8))),s(fun(X1,fun(X2,fun(X3,fun(X4,fun(X5,'type.one.one'))))),X9)))) )),
  inference(unit_resulting_resolution,[],[f258,f815,f212])).
fof(f6719,plain,(
  ( ! [X6,X4,X2,X0,X10,X8,X7,X5,X3,X1,X11,X9] : (s('type.pair.prod'('type.infer.exc'('type.list.list'(X0),X1),fun(X2,fun(X3,fun(X4,fun(X5,fun(X6,'type.one.one')))))),'const.infer.st_ex_return_2'(s('type.list.list'(X0),'const.list.MAP_2'(s(fun(X7,X0),X8),s('type.list.list'(X7),X9))),s(fun(X2,fun(X3,fun(X4,fun(X5,fun(X6,'type.one.one'))))),X11))) = s('type.pair.prod'('type.infer.exc'('type.list.list'(X0),X1),fun(X2,fun(X3,fun(X4,fun(X5,fun(X6,'type.one.one')))))),'const.pair.,_2'(s('type.infer.exc'('type.list.list'(X0),X1),'const.infer.Success_1'(s('type.list.list'(X0),'const.list.MAP_2'(s(fun(X7,X0),X8),s('type.list.list'(X7),X9))))),s(fun(X2,fun(X3,fun(X4,fun(X5,fun(X6,'type.one.one'))))),X10)))) )),
  inference(forward_demodulation,[],[f5153,f180])).
fof(f5153,plain,(
  ( ! [X6,X4,X2,X0,X10,X8,X7,X5,X3,X1,X11,X9] : (s('type.pair.prod'('type.infer.exc'('type.list.list'(X0),X1),fun(X2,fun(X3,fun(X4,fun(X5,fun(X6,'type.one.one')))))),'const.pair.,_2'(s('type.infer.exc'('type.list.list'(X0),X1),'const.infer.Success_1'(s('type.list.list'(X0),'const.list.MAP_2'(s(fun(X7,X0),X8),s('type.list.list'(X7),X9))))),s(fun(X2,fun(X3,fun(X4,fun(X5,fun(X6,'type.one.one'))))),X10))) = s('type.pair.prod'('type.infer.exc'('type.list.list'(X0),X1),fun(X2,fun(X3,fun(X4,fun(X5,fun(X6,'type.one.one')))))),'const.infer.st_ex_return_2'(s('type.list.list'(X0),happ(s(fun('type.list.list'(X7),'type.list.list'(X0)),happ(s(fun(fun(X7,X0),fun('type.list.list'(X7),'type.list.list'(X0))),'const.list.MAP_0'),s(fun(X7,X0),X8))),s('type.list.list'(X7),X9))),s(fun(X2,fun(X3,fun(X4,fun(X5,fun(X6,'type.one.one'))))),X11)))) )),
  inference(unit_resulting_resolution,[],[f180,f815,f212])).
fof(f6716,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1,X9] : (s('type.pair.prod'('type.infer.exc'('type.num.num',X0),fun(X1,fun(X2,fun(X3,fun(X4,fun(X5,'type.one.one')))))),'const.infer.st_ex_return_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X6),s('type.num.num',X7))),s(fun(X1,fun(X2,fun(X3,fun(X4,fun(X5,'type.one.one'))))),X8))) = s('type.pair.prod'('type.infer.exc'('type.num.num',X0),fun(X1,fun(X2,fun(X3,fun(X4,fun(X5,'type.one.one')))))),'const.pair.,_2'(s('type.infer.exc'('type.num.num',X0),'const.infer.Success_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X6),s('type.num.num',X7))))),s(fun(X1,fun(X2,fun(X3,fun(X4,fun(X5,'type.one.one'))))),X9)))) )),
  inference(forward_demodulation,[],[f5156,f175])).
fof(f5156,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1,X9] : (s('type.pair.prod'('type.infer.exc'('type.num.num',X0),fun(X1,fun(X2,fun(X3,fun(X4,fun(X5,'type.one.one')))))),'const.infer.st_ex_return_2'(s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.arithmetic.+_1'(s('type.num.num',X6))),s('type.num.num',X7))),s(fun(X1,fun(X2,fun(X3,fun(X4,fun(X5,'type.one.one'))))),X8))) = s('type.pair.prod'('type.infer.exc'('type.num.num',X0),fun(X1,fun(X2,fun(X3,fun(X4,fun(X5,'type.one.one')))))),'const.pair.,_2'(s('type.infer.exc'('type.num.num',X0),'const.infer.Success_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X6),s('type.num.num',X7))))),s(fun(X1,fun(X2,fun(X3,fun(X4,fun(X5,'type.one.one'))))),X9)))) )),
  inference(unit_resulting_resolution,[],[f175,f815,f212])).
fof(f6715,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),fun(X1,fun(X2,fun(X3,fun(X4,fun(X5,'type.one.one')))))),'const.infer.st_ex_return_2'(s('type.infer_t.infer_t','const.infer_t.Infer_Tuvar_1'(s('type.num.num',X6))),s(fun(X1,fun(X2,fun(X3,fun(X4,fun(X5,'type.one.one'))))),X7))) = s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),fun(X1,fun(X2,fun(X3,fun(X4,fun(X5,'type.one.one')))))),'const.pair.,_2'(s('type.infer.exc'('type.infer_t.infer_t',X0),'const.infer.Success_1'(s('type.infer_t.infer_t','const.infer_t.Infer_Tuvar_1'(s('type.num.num',X6))))),s(fun(X1,fun(X2,fun(X3,fun(X4,fun(X5,'type.one.one'))))),X8)))) )),
  inference(forward_demodulation,[],[f5157,f166])).
fof(f5157,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),fun(X1,fun(X2,fun(X3,fun(X4,fun(X5,'type.one.one')))))),'const.infer.st_ex_return_2'(s('type.infer_t.infer_t',happ(s(fun('type.num.num','type.infer_t.infer_t'),'const.infer_t.Infer_Tuvar_0'),s('type.num.num',X6))),s(fun(X1,fun(X2,fun(X3,fun(X4,fun(X5,'type.one.one'))))),X7))) = s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),fun(X1,fun(X2,fun(X3,fun(X4,fun(X5,'type.one.one')))))),'const.pair.,_2'(s('type.infer.exc'('type.infer_t.infer_t',X0),'const.infer.Success_1'(s('type.infer_t.infer_t','const.infer_t.Infer_Tuvar_1'(s('type.num.num',X6))))),s(fun(X1,fun(X2,fun(X3,fun(X4,fun(X5,'type.one.one'))))),X8)))) )),
  inference(unit_resulting_resolution,[],[f166,f815,f212])).
fof(f6714,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1,X9] : (s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),fun(X1,fun(X2,fun(X3,fun(X4,fun(X5,'type.one.one')))))),'const.infer.st_ex_return_2'(s('type.infer_t.infer_t','const.unify.t_walkstar_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X6),s('type.infer_t.infer_t',X7))),s(fun(X1,fun(X2,fun(X3,fun(X4,fun(X5,'type.one.one'))))),X9))) = s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),fun(X1,fun(X2,fun(X3,fun(X4,fun(X5,'type.one.one')))))),'const.pair.,_2'(s('type.infer.exc'('type.infer_t.infer_t',X0),'const.infer.Success_1'(s('type.infer_t.infer_t','const.unify.t_walkstar_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X6),s('type.infer_t.infer_t',X7))))),s(fun(X1,fun(X2,fun(X3,fun(X4,fun(X5,'type.one.one'))))),X8)))) )),
  inference(forward_demodulation,[],[f5158,f176])).
fof(f5158,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1,X9] : (s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),fun(X1,fun(X2,fun(X3,fun(X4,fun(X5,'type.one.one')))))),'const.pair.,_2'(s('type.infer.exc'('type.infer_t.infer_t',X0),'const.infer.Success_1'(s('type.infer_t.infer_t','const.unify.t_walkstar_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X6),s('type.infer_t.infer_t',X7))))),s(fun(X1,fun(X2,fun(X3,fun(X4,fun(X5,'type.one.one'))))),X8))) = s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),fun(X1,fun(X2,fun(X3,fun(X4,fun(X5,'type.one.one')))))),'const.infer.st_ex_return_2'(s('type.infer_t.infer_t',happ(s(fun('type.infer_t.infer_t','type.infer_t.infer_t'),happ(s(fun('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),fun('type.infer_t.infer_t','type.infer_t.infer_t')),'const.unify.t_walkstar_0'),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X6))),s('type.infer_t.infer_t',X7))),s(fun(X1,fun(X2,fun(X3,fun(X4,fun(X5,'type.one.one'))))),X9)))) )),
  inference(unit_resulting_resolution,[],[f176,f815,f212])).
fof(f6712,plain,(
  ( ! [X6,X4,X2,X0,X10,X8,X7,X5,X3,X1,X9] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X0),X2),fun(X3,fun(X4,fun(X5,fun(X6,fun(X7,'type.one.one')))))),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'(X0,X1),X0),'const.infer.read_1'(s(X0,X8))),s(fun(X3,fun(X4,fun(X5,fun(X6,fun(X7,'type.one.one'))))),X10))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X0),X2),fun(X3,fun(X4,fun(X5,fun(X6,fun(X7,'type.one.one')))))),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X0),X2),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'(X0,X1),X0),'const.infer.read_1'(s(X0,X8))))),s(fun(X3,fun(X4,fun(X5,fun(X6,fun(X7,'type.one.one'))))),X9)))) )),
  inference(forward_demodulation,[],[f5160,f178])).
fof(f5160,plain,(
  ( ! [X6,X4,X2,X0,X10,X8,X7,X5,X3,X1,X9] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X0),X2),fun(X3,fun(X4,fun(X5,fun(X6,fun(X7,'type.one.one')))))),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X0),X2),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'(X0,X1),X0),'const.infer.read_1'(s(X0,X8))))),s(fun(X3,fun(X4,fun(X5,fun(X6,fun(X7,'type.one.one'))))),X9))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X0),X2),fun(X3,fun(X4,fun(X5,fun(X6,fun(X7,'type.one.one')))))),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'(X0,X1),X0),happ(s(fun(X0,'type.pair.prod'('type.infer.exc'(X0,X1),X0)),'const.infer.read_0'),s(X0,X8))),s(fun(X3,fun(X4,fun(X5,fun(X6,fun(X7,'type.one.one'))))),X10)))) )),
  inference(unit_resulting_resolution,[],[f178,f815,f212])).
fof(f6711,plain,(
  ( ! [X6,X4,X2,X0,X10,X8,X7,X5,X3,X1,X9] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),X2),fun(X3,fun(X4,fun(X5,fun(X6,fun(X7,'type.one.one')))))),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),'const.infer.fresh_uvar_1'(s('type.infer.infer_st'(X1),X8))),s(fun(X3,fun(X4,fun(X5,fun(X6,fun(X7,'type.one.one'))))),X10))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),X2),fun(X3,fun(X4,fun(X5,fun(X6,fun(X7,'type.one.one')))))),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),X2),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),'const.infer.fresh_uvar_1'(s('type.infer.infer_st'(X1),X8))))),s(fun(X3,fun(X4,fun(X5,fun(X6,fun(X7,'type.one.one'))))),X9)))) )),
  inference(forward_demodulation,[],[f5161,f179])).
fof(f5161,plain,(
  ( ! [X6,X4,X2,X0,X10,X8,X7,X5,X3,X1,X9] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),X2),fun(X3,fun(X4,fun(X5,fun(X6,fun(X7,'type.one.one')))))),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),X2),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),'const.infer.fresh_uvar_1'(s('type.infer.infer_st'(X1),X8))))),s(fun(X3,fun(X4,fun(X5,fun(X6,fun(X7,'type.one.one'))))),X9))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),X2),fun(X3,fun(X4,fun(X5,fun(X6,fun(X7,'type.one.one')))))),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),happ(s(fun('type.infer.infer_st'(X1),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1))),'const.infer.fresh_uvar_0'),s('type.infer.infer_st'(X1),X8))),s(fun(X3,fun(X4,fun(X5,fun(X6,fun(X7,'type.one.one'))))),X10)))) )),
  inference(unit_resulting_resolution,[],[f179,f815,f212])).
fof(f6710,plain,(
  ( ! [X6,X4,X2,X0,X12,X10,X8,X7,X5,X3,X1,X11,X9] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),fun(X4,fun(X5,fun(X6,fun(X7,fun(X8,'type.one.one')))))),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'(X0,X1),X2),'const.infer.failwith_2'(s(X1,X9),s(X2,X10))),s(fun(X4,fun(X5,fun(X6,fun(X7,fun(X8,'type.one.one'))))),X12))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),fun(X4,fun(X5,fun(X6,fun(X7,fun(X8,'type.one.one')))))),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'(X0,X1),X2),'const.infer.failwith_2'(s(X1,X9),s(X2,X10))))),s(fun(X4,fun(X5,fun(X6,fun(X7,fun(X8,'type.one.one'))))),X11)))) )),
  inference(forward_demodulation,[],[f5162,f204])).
fof(f5162,plain,(
  ( ! [X6,X4,X2,X0,X12,X10,X8,X7,X5,X3,X1,X11,X9] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),fun(X4,fun(X5,fun(X6,fun(X7,fun(X8,'type.one.one')))))),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'(X0,X1),X2),'const.infer.failwith_2'(s(X1,X9),s(X2,X10))))),s(fun(X4,fun(X5,fun(X6,fun(X7,fun(X8,'type.one.one'))))),X11))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),fun(X4,fun(X5,fun(X6,fun(X7,fun(X8,'type.one.one')))))),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'(X0,X1),X2),happ(s(fun(X2,'type.pair.prod'('type.infer.exc'(X0,X1),X2)),'const.infer.failwith_1'(s(X1,X9))),s(X2,X10))),s(fun(X4,fun(X5,fun(X6,fun(X7,fun(X8,'type.one.one'))))),X12)))) )),
  inference(unit_resulting_resolution,[],[f204,f815,f212])).
fof(f6709,plain,(
  ( ! [X6,X4,X2,X0,X12,X10,X8,X7,X5,X3,X1,X11,X9] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),X2),fun(X3,fun(X4,fun(X5,fun(X6,fun(X7,'type.one.one')))))),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),'const.infer.guard_3'(s(bool,X8),s(X0,X9),s(X1,X10))),s(fun(X3,fun(X4,fun(X5,fun(X6,fun(X7,'type.one.one'))))),X12))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),X2),fun(X3,fun(X4,fun(X5,fun(X6,fun(X7,'type.one.one')))))),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),X2),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),'const.infer.guard_3'(s(bool,X8),s(X0,X9),s(X1,X10))))),s(fun(X3,fun(X4,fun(X5,fun(X6,fun(X7,'type.one.one'))))),X11)))) )),
  inference(forward_demodulation,[],[f5163,f183])).
fof(f5163,plain,(
  ( ! [X6,X4,X2,X0,X12,X10,X8,X7,X5,X3,X1,X11,X9] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),X2),fun(X3,fun(X4,fun(X5,fun(X6,fun(X7,'type.one.one')))))),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),X2),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),'const.infer.guard_3'(s(bool,X8),s(X0,X9),s(X1,X10))))),s(fun(X3,fun(X4,fun(X5,fun(X6,fun(X7,'type.one.one'))))),X11))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),X2),fun(X3,fun(X4,fun(X5,fun(X6,fun(X7,'type.one.one')))))),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),happ(s(fun(X1,'type.pair.prod'('type.infer.exc'('type.one.one',X0),X1)),'const.infer.guard_2'(s(bool,X8),s(X0,X9))),s(X1,X10))),s(fun(X3,fun(X4,fun(X5,fun(X6,fun(X7,'type.one.one'))))),X12)))) )),
  inference(unit_resulting_resolution,[],[f183,f815,f212])).
fof(f5253,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'(X0,X1),'type.one.one'),'const.infer.st_ex_return_2'(s(X0,happ(s(fun(X2,X0),X3),s(X2,happ(s(fun(X4,X2),X5),s(X4,X6))))),s('type.one.one',X7))) = s('type.pair.prod'('type.infer.exc'(X0,X1),'type.one.one'),'const.pair.,_2'(s('type.infer.exc'(X0,X1),'const.infer.Success_1'(s(X0,happ(s(fun(X4,X0),'_dst_x0x1_2'(s(fun(X2,X0),X3),s(fun(X4,X2),X5))),s(X4,X6))))),s('type.one.one',X8)))) )),
  inference(unit_resulting_resolution,[],[f206,f258,f212])).
fof(f6643,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s('type.pair.prod'('type.infer.exc'(X0,X1),'type.one.one'),'const.infer.st_ex_return_2'(s(X0,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(X0),X2))),s('type.one.one',X4))) = s('type.pair.prod'('type.infer.exc'(X0,X1),'type.one.one'),'const.pair.,_2'(s('type.infer.exc'(X0,X1),'const.infer.Success_1'(s(X0,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(X0),X2))))),s('type.one.one',X3)))) )),
  inference(forward_demodulation,[],[f5274,f168])).
fof(f5274,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s('type.pair.prod'('type.infer.exc'(X0,X1),'type.one.one'),'const.pair.,_2'(s('type.infer.exc'(X0,X1),'const.infer.Success_1'(s(X0,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(X0),X2))))),s('type.one.one',X3))) = s('type.pair.prod'('type.infer.exc'(X0,X1),'type.one.one'),'const.infer.st_ex_return_2'(s(X0,happ(s(fun('type.infer.infer_st'(X0),X0),'const.infer.infer_st_subst_0'),s('type.infer.infer_st'(X0),X2))),s('type.one.one',X4)))) )),
  inference(unit_resulting_resolution,[],[f168,f258,f212])).
fof(f5275,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'(X0,X1),'type.one.one'),'const.infer.st_ex_return_2'(s(X0,happ(s(fun(X2,X0),'_dst_x0x1_2'(s(fun(X3,X0),X4),s(fun(X2,X3),X5))),s(X2,X6))),s('type.one.one',X7))) = s('type.pair.prod'('type.infer.exc'(X0,X1),'type.one.one'),'const.pair.,_2'(s('type.infer.exc'(X0,X1),'const.infer.Success_1'(s(X0,happ(s(fun(X3,X0),X4),s(X3,happ(s(fun(X2,X3),X5),s(X2,X6))))))),s('type.one.one',X8)))) )),
  inference(unit_resulting_resolution,[],[f206,f258,f212])).
fof(f5277,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'(fun(X0,'type.one.one'),X1),'type.one.one'),'const.infer.st_ex_return_2'(s(fun(X0,'type.one.one'),X2),s('type.one.one',X3))) = s('type.pair.prod'('type.infer.exc'(fun(X0,'type.one.one'),X1),'type.one.one'),'const.pair.,_2'(s('type.infer.exc'(fun(X0,'type.one.one'),X1),'const.infer.Success_1'(s(fun(X0,'type.one.one'),X4))),s('type.one.one',X5)))) )),
  inference(unit_resulting_resolution,[],[f605,f258,f212])).
fof(f5278,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,'type.one.one')),X2),'type.one.one'),'const.infer.st_ex_return_2'(s(fun(X0,fun(X1,'type.one.one')),X3),s('type.one.one',X4))) = s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,'type.one.one')),X2),'type.one.one'),'const.pair.,_2'(s('type.infer.exc'(fun(X0,fun(X1,'type.one.one')),X2),'const.infer.Success_1'(s(fun(X0,fun(X1,'type.one.one')),X5))),s('type.one.one',X6)))) )),
  inference(unit_resulting_resolution,[],[f724,f258,f212])).
fof(f5279,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,fun(X2,'type.one.one'))),X3),'type.one.one'),'const.infer.st_ex_return_2'(s(fun(X0,fun(X1,fun(X2,'type.one.one'))),X4),s('type.one.one',X5))) = s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,fun(X2,'type.one.one'))),X3),'type.one.one'),'const.pair.,_2'(s('type.infer.exc'(fun(X0,fun(X1,fun(X2,'type.one.one'))),X3),'const.infer.Success_1'(s(fun(X0,fun(X1,fun(X2,'type.one.one'))),X6))),s('type.one.one',X7)))) )),
  inference(unit_resulting_resolution,[],[f752,f258,f212])).
fof(f5280,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,fun(X2,fun(X3,'type.one.one')))),X4),'type.one.one'),'const.infer.st_ex_return_2'(s(fun(X0,fun(X1,fun(X2,fun(X3,'type.one.one')))),X5),s('type.one.one',X6))) = s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,fun(X2,fun(X3,'type.one.one')))),X4),'type.one.one'),'const.pair.,_2'(s('type.infer.exc'(fun(X0,fun(X1,fun(X2,fun(X3,'type.one.one')))),X4),'const.infer.Success_1'(s(fun(X0,fun(X1,fun(X2,fun(X3,'type.one.one')))),X7))),s('type.one.one',X8)))) )),
  inference(unit_resulting_resolution,[],[f787,f258,f212])).
fof(f5281,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1,X9] : (s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,fun(X2,fun(X3,fun(X4,'type.one.one'))))),X5),'type.one.one'),'const.infer.st_ex_return_2'(s(fun(X0,fun(X1,fun(X2,fun(X3,fun(X4,'type.one.one'))))),X6),s('type.one.one',X7))) = s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,fun(X2,fun(X3,fun(X4,'type.one.one'))))),X5),'type.one.one'),'const.pair.,_2'(s('type.infer.exc'(fun(X0,fun(X1,fun(X2,fun(X3,fun(X4,'type.one.one'))))),X5),'const.infer.Success_1'(s(fun(X0,fun(X1,fun(X2,fun(X3,fun(X4,'type.one.one'))))),X8))),s('type.one.one',X9)))) )),
  inference(unit_resulting_resolution,[],[f815,f258,f212])).
fof(f5284,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.one.one',X0),'type.one.one'),'const.infer.st_ex_return_2'(s('type.one.one',X1),s('type.one.one',X2))) = s('type.pair.prod'('type.infer.exc'('type.one.one',X0),'type.one.one'),'const.pair.,_2'(s('type.infer.exc'('type.one.one',X0),'const.infer.Success_1'(s('type.one.one',X3))),s('type.one.one',X4)))) )),
  inference(unit_resulting_resolution,[],[f258,f258,f212])).
fof(f6641,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.list.list'(X0),X1),'type.one.one'),'const.infer.st_ex_return_2'(s('type.list.list'(X0),'const.list.MAP_2'(s(fun(X2,X0),X3),s('type.list.list'(X2),X4))),s('type.one.one',X6))) = s('type.pair.prod'('type.infer.exc'('type.list.list'(X0),X1),'type.one.one'),'const.pair.,_2'(s('type.infer.exc'('type.list.list'(X0),X1),'const.infer.Success_1'(s('type.list.list'(X0),'const.list.MAP_2'(s(fun(X2,X0),X3),s('type.list.list'(X2),X4))))),s('type.one.one',X5)))) )),
  inference(forward_demodulation,[],[f5285,f180])).
fof(f5285,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.list.list'(X0),X1),'type.one.one'),'const.pair.,_2'(s('type.infer.exc'('type.list.list'(X0),X1),'const.infer.Success_1'(s('type.list.list'(X0),'const.list.MAP_2'(s(fun(X2,X0),X3),s('type.list.list'(X2),X4))))),s('type.one.one',X5))) = s('type.pair.prod'('type.infer.exc'('type.list.list'(X0),X1),'type.one.one'),'const.infer.st_ex_return_2'(s('type.list.list'(X0),happ(s(fun('type.list.list'(X2),'type.list.list'(X0)),happ(s(fun(fun(X2,X0),fun('type.list.list'(X2),'type.list.list'(X0))),'const.list.MAP_0'),s(fun(X2,X0),X3))),s('type.list.list'(X2),X4))),s('type.one.one',X6)))) )),
  inference(unit_resulting_resolution,[],[f180,f258,f212])).
fof(f6638,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.num.num',X0),'type.one.one'),'const.infer.st_ex_return_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X2))),s('type.one.one',X3))) = s('type.pair.prod'('type.infer.exc'('type.num.num',X0),'type.one.one'),'const.pair.,_2'(s('type.infer.exc'('type.num.num',X0),'const.infer.Success_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X2))))),s('type.one.one',X4)))) )),
  inference(forward_demodulation,[],[f5288,f175])).
fof(f5288,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.num.num',X0),'type.one.one'),'const.infer.st_ex_return_2'(s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.arithmetic.+_1'(s('type.num.num',X1))),s('type.num.num',X2))),s('type.one.one',X3))) = s('type.pair.prod'('type.infer.exc'('type.num.num',X0),'type.one.one'),'const.pair.,_2'(s('type.infer.exc'('type.num.num',X0),'const.infer.Success_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X2))))),s('type.one.one',X4)))) )),
  inference(unit_resulting_resolution,[],[f175,f258,f212])).
fof(f6637,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.one.one'),'const.infer.st_ex_return_2'(s('type.infer_t.infer_t','const.infer_t.Infer_Tuvar_1'(s('type.num.num',X1))),s('type.one.one',X2))) = s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.one.one'),'const.pair.,_2'(s('type.infer.exc'('type.infer_t.infer_t',X0),'const.infer.Success_1'(s('type.infer_t.infer_t','const.infer_t.Infer_Tuvar_1'(s('type.num.num',X1))))),s('type.one.one',X3)))) )),
  inference(forward_demodulation,[],[f5289,f166])).
fof(f5289,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.one.one'),'const.infer.st_ex_return_2'(s('type.infer_t.infer_t',happ(s(fun('type.num.num','type.infer_t.infer_t'),'const.infer_t.Infer_Tuvar_0'),s('type.num.num',X1))),s('type.one.one',X2))) = s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.one.one'),'const.pair.,_2'(s('type.infer.exc'('type.infer_t.infer_t',X0),'const.infer.Success_1'(s('type.infer_t.infer_t','const.infer_t.Infer_Tuvar_1'(s('type.num.num',X1))))),s('type.one.one',X3)))) )),
  inference(unit_resulting_resolution,[],[f166,f258,f212])).
fof(f6636,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.one.one'),'const.infer.st_ex_return_2'(s('type.infer_t.infer_t','const.unify.t_walkstar_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X1),s('type.infer_t.infer_t',X2))),s('type.one.one',X4))) = s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.one.one'),'const.pair.,_2'(s('type.infer.exc'('type.infer_t.infer_t',X0),'const.infer.Success_1'(s('type.infer_t.infer_t','const.unify.t_walkstar_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X1),s('type.infer_t.infer_t',X2))))),s('type.one.one',X3)))) )),
  inference(forward_demodulation,[],[f5290,f176])).
fof(f5290,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.one.one'),'const.pair.,_2'(s('type.infer.exc'('type.infer_t.infer_t',X0),'const.infer.Success_1'(s('type.infer_t.infer_t','const.unify.t_walkstar_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X1),s('type.infer_t.infer_t',X2))))),s('type.one.one',X3))) = s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.one.one'),'const.infer.st_ex_return_2'(s('type.infer_t.infer_t',happ(s(fun('type.infer_t.infer_t','type.infer_t.infer_t'),happ(s(fun('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),fun('type.infer_t.infer_t','type.infer_t.infer_t')),'const.unify.t_walkstar_0'),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X1))),s('type.infer_t.infer_t',X2))),s('type.one.one',X4)))) )),
  inference(unit_resulting_resolution,[],[f176,f258,f212])).
fof(f6634,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X0),X2),'type.one.one'),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'(X0,X1),X0),'const.infer.read_1'(s(X0,X3))),s('type.one.one',X5))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X0),X2),'type.one.one'),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X0),X2),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'(X0,X1),X0),'const.infer.read_1'(s(X0,X3))))),s('type.one.one',X4)))) )),
  inference(forward_demodulation,[],[f5292,f178])).
fof(f5292,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X0),X2),'type.one.one'),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X0),X2),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'(X0,X1),X0),'const.infer.read_1'(s(X0,X3))))),s('type.one.one',X4))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X0),X2),'type.one.one'),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'(X0,X1),X0),happ(s(fun(X0,'type.pair.prod'('type.infer.exc'(X0,X1),X0)),'const.infer.read_0'),s(X0,X3))),s('type.one.one',X5)))) )),
  inference(unit_resulting_resolution,[],[f178,f258,f212])).
fof(f6633,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),X2),'type.one.one'),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),'const.infer.fresh_uvar_1'(s('type.infer.infer_st'(X1),X3))),s('type.one.one',X5))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),X2),'type.one.one'),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),X2),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),'const.infer.fresh_uvar_1'(s('type.infer.infer_st'(X1),X3))))),s('type.one.one',X4)))) )),
  inference(forward_demodulation,[],[f5293,f179])).
fof(f5293,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),X2),'type.one.one'),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),X2),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),'const.infer.fresh_uvar_1'(s('type.infer.infer_st'(X1),X3))))),s('type.one.one',X4))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),X2),'type.one.one'),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),happ(s(fun('type.infer.infer_st'(X1),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1))),'const.infer.fresh_uvar_0'),s('type.infer.infer_st'(X1),X3))),s('type.one.one',X5)))) )),
  inference(unit_resulting_resolution,[],[f179,f258,f212])).
fof(f6632,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),'type.one.one'),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'(X0,X1),X2),'const.infer.failwith_2'(s(X1,X4),s(X2,X5))),s('type.one.one',X7))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),'type.one.one'),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'(X0,X1),X2),'const.infer.failwith_2'(s(X1,X4),s(X2,X5))))),s('type.one.one',X6)))) )),
  inference(forward_demodulation,[],[f5294,f204])).
fof(f5294,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),'type.one.one'),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'(X0,X1),X2),'const.infer.failwith_2'(s(X1,X4),s(X2,X5))))),s('type.one.one',X6))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),'type.one.one'),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'(X0,X1),X2),happ(s(fun(X2,'type.pair.prod'('type.infer.exc'(X0,X1),X2)),'const.infer.failwith_1'(s(X1,X4))),s(X2,X5))),s('type.one.one',X7)))) )),
  inference(unit_resulting_resolution,[],[f204,f258,f212])).
fof(f6631,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),X2),'type.one.one'),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),'const.infer.guard_3'(s(bool,X3),s(X0,X4),s(X1,X5))),s('type.one.one',X7))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),X2),'type.one.one'),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),X2),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),'const.infer.guard_3'(s(bool,X3),s(X0,X4),s(X1,X5))))),s('type.one.one',X6)))) )),
  inference(forward_demodulation,[],[f5295,f183])).
fof(f5295,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),X2),'type.one.one'),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),X2),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),'const.infer.guard_3'(s(bool,X3),s(X0,X4),s(X1,X5))))),s('type.one.one',X6))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),X2),'type.one.one'),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),happ(s(fun(X1,'type.pair.prod'('type.infer.exc'('type.one.one',X0),X1)),'const.infer.guard_2'(s(bool,X3),s(X0,X4))),s(X1,X5))),s('type.one.one',X7)))) )),
  inference(unit_resulting_resolution,[],[f183,f258,f212])).
fof(f6628,plain,(
  ( ! [X6,X4,X2,X0,X10,X8,X7,X5,X3,X1,X9] : (s('type.pair.prod'('type.infer.exc'(X0,X1),'type.list.list'(X2)),'const.infer.st_ex_return_2'(s(X0,happ(s(fun(X4,X0),X5),s(X4,happ(s(fun(X3,X4),X6),s(X3,X7))))),s('type.list.list'(X2),'const.list.MAP_2'(s(fun(X8,X2),X9),s('type.list.list'(X8),X10))))) = s('type.pair.prod'('type.infer.exc'(X0,X1),'type.list.list'(X2)),'const.pair.,_2'(s('type.infer.exc'(X0,X1),'const.infer.Success_1'(s(X0,happ(s(fun(X3,X0),'_dst_x0x1_2'(s(fun(X4,X0),X5),s(fun(X3,X4),X6))),s(X3,X7))))),s('type.list.list'(X2),'const.list.MAP_2'(s(fun(X8,X2),X9),s('type.list.list'(X8),X10)))))) )),
  inference(forward_demodulation,[],[f5297,f180])).
fof(f5297,plain,(
  ( ! [X6,X4,X2,X0,X10,X8,X7,X5,X3,X1,X9] : (s('type.pair.prod'('type.infer.exc'(X0,X1),'type.list.list'(X2)),'const.pair.,_2'(s('type.infer.exc'(X0,X1),'const.infer.Success_1'(s(X0,happ(s(fun(X3,X0),'_dst_x0x1_2'(s(fun(X4,X0),X5),s(fun(X3,X4),X6))),s(X3,X7))))),s('type.list.list'(X2),'const.list.MAP_2'(s(fun(X8,X2),X9),s('type.list.list'(X8),X10))))) = s('type.pair.prod'('type.infer.exc'(X0,X1),'type.list.list'(X2)),'const.infer.st_ex_return_2'(s(X0,happ(s(fun(X4,X0),X5),s(X4,happ(s(fun(X3,X4),X6),s(X3,X7))))),s('type.list.list'(X2),happ(s(fun('type.list.list'(X8),'type.list.list'(X2)),happ(s(fun(fun(X8,X2),fun('type.list.list'(X8),'type.list.list'(X2))),'const.list.MAP_0'),s(fun(X8,X2),X9))),s('type.list.list'(X8),X10)))))) )),
  inference(unit_resulting_resolution,[],[f206,f180,f212])).
fof(f6595,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'(X0,X1),'type.list.list'(X2)),'const.infer.st_ex_return_2'(s(X0,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(X0),X3))),s('type.list.list'(X2),'const.list.MAP_2'(s(fun(X4,X2),X5),s('type.list.list'(X4),X6))))) = s('type.pair.prod'('type.infer.exc'(X0,X1),'type.list.list'(X2)),'const.pair.,_2'(s('type.infer.exc'(X0,X1),'const.infer.Success_1'(s(X0,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(X0),X3))))),s('type.list.list'(X2),'const.list.MAP_2'(s(fun(X4,X2),X5),s('type.list.list'(X4),X6)))))) )),
  inference(forward_demodulation,[],[f6594,f168])).
fof(f6594,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'(X0,X1),'type.list.list'(X2)),'const.pair.,_2'(s('type.infer.exc'(X0,X1),'const.infer.Success_1'(s(X0,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(X0),X3))))),s('type.list.list'(X2),'const.list.MAP_2'(s(fun(X4,X2),X5),s('type.list.list'(X4),X6))))) = s('type.pair.prod'('type.infer.exc'(X0,X1),'type.list.list'(X2)),'const.infer.st_ex_return_2'(s(X0,happ(s(fun('type.infer.infer_st'(X0),X0),'const.infer.infer_st_subst_0'),s('type.infer.infer_st'(X0),X3))),s('type.list.list'(X2),'const.list.MAP_2'(s(fun(X4,X2),X5),s('type.list.list'(X4),X6)))))) )),
  inference(forward_demodulation,[],[f5318,f180])).
fof(f5318,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'(X0,X1),'type.list.list'(X2)),'const.pair.,_2'(s('type.infer.exc'(X0,X1),'const.infer.Success_1'(s(X0,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(X0),X3))))),s('type.list.list'(X2),'const.list.MAP_2'(s(fun(X4,X2),X5),s('type.list.list'(X4),X6))))) = s('type.pair.prod'('type.infer.exc'(X0,X1),'type.list.list'(X2)),'const.infer.st_ex_return_2'(s(X0,happ(s(fun('type.infer.infer_st'(X0),X0),'const.infer.infer_st_subst_0'),s('type.infer.infer_st'(X0),X3))),s('type.list.list'(X2),happ(s(fun('type.list.list'(X4),'type.list.list'(X2)),happ(s(fun(fun(X4,X2),fun('type.list.list'(X4),'type.list.list'(X2))),'const.list.MAP_0'),s(fun(X4,X2),X5))),s('type.list.list'(X4),X6)))))) )),
  inference(unit_resulting_resolution,[],[f168,f180,f212])).
fof(f6593,plain,(
  ( ! [X6,X4,X2,X0,X10,X8,X7,X5,X3,X1,X9] : (s('type.pair.prod'('type.infer.exc'(X0,X1),'type.list.list'(X2)),'const.infer.st_ex_return_2'(s(X0,happ(s(fun(X5,X0),'_dst_x0x1_2'(s(fun(X3,X0),X4),s(fun(X5,X3),X6))),s(X5,X7))),s('type.list.list'(X2),'const.list.MAP_2'(s(fun(X8,X2),X9),s('type.list.list'(X8),X10))))) = s('type.pair.prod'('type.infer.exc'(X0,X1),'type.list.list'(X2)),'const.pair.,_2'(s('type.infer.exc'(X0,X1),'const.infer.Success_1'(s(X0,happ(s(fun(X3,X0),X4),s(X3,happ(s(fun(X5,X3),X6),s(X5,X7))))))),s('type.list.list'(X2),'const.list.MAP_2'(s(fun(X8,X2),X9),s('type.list.list'(X8),X10)))))) )),
  inference(forward_demodulation,[],[f5319,f180])).
fof(f5319,plain,(
  ( ! [X6,X4,X2,X0,X10,X8,X7,X5,X3,X1,X9] : (s('type.pair.prod'('type.infer.exc'(X0,X1),'type.list.list'(X2)),'const.pair.,_2'(s('type.infer.exc'(X0,X1),'const.infer.Success_1'(s(X0,happ(s(fun(X3,X0),X4),s(X3,happ(s(fun(X5,X3),X6),s(X5,X7))))))),s('type.list.list'(X2),'const.list.MAP_2'(s(fun(X8,X2),X9),s('type.list.list'(X8),X10))))) = s('type.pair.prod'('type.infer.exc'(X0,X1),'type.list.list'(X2)),'const.infer.st_ex_return_2'(s(X0,happ(s(fun(X5,X0),'_dst_x0x1_2'(s(fun(X3,X0),X4),s(fun(X5,X3),X6))),s(X5,X7))),s('type.list.list'(X2),happ(s(fun('type.list.list'(X8),'type.list.list'(X2)),happ(s(fun(fun(X8,X2),fun('type.list.list'(X8),'type.list.list'(X2))),'const.list.MAP_0'),s(fun(X8,X2),X9))),s('type.list.list'(X8),X10)))))) )),
  inference(unit_resulting_resolution,[],[f206,f180,f212])).
fof(f6590,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'(fun(X0,'type.one.one'),X1),'type.list.list'(X2)),'const.infer.st_ex_return_2'(s(fun(X0,'type.one.one'),X7),s('type.list.list'(X2),'const.list.MAP_2'(s(fun(X4,X2),X5),s('type.list.list'(X4),X6))))) = s('type.pair.prod'('type.infer.exc'(fun(X0,'type.one.one'),X1),'type.list.list'(X2)),'const.pair.,_2'(s('type.infer.exc'(fun(X0,'type.one.one'),X1),'const.infer.Success_1'(s(fun(X0,'type.one.one'),X3))),s('type.list.list'(X2),'const.list.MAP_2'(s(fun(X4,X2),X5),s('type.list.list'(X4),X6)))))) )),
  inference(forward_demodulation,[],[f5321,f180])).
fof(f5321,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'(fun(X0,'type.one.one'),X1),'type.list.list'(X2)),'const.pair.,_2'(s('type.infer.exc'(fun(X0,'type.one.one'),X1),'const.infer.Success_1'(s(fun(X0,'type.one.one'),X3))),s('type.list.list'(X2),'const.list.MAP_2'(s(fun(X4,X2),X5),s('type.list.list'(X4),X6))))) = s('type.pair.prod'('type.infer.exc'(fun(X0,'type.one.one'),X1),'type.list.list'(X2)),'const.infer.st_ex_return_2'(s(fun(X0,'type.one.one'),X7),s('type.list.list'(X2),happ(s(fun('type.list.list'(X4),'type.list.list'(X2)),happ(s(fun(fun(X4,X2),fun('type.list.list'(X4),'type.list.list'(X2))),'const.list.MAP_0'),s(fun(X4,X2),X5))),s('type.list.list'(X4),X6)))))) )),
  inference(unit_resulting_resolution,[],[f605,f180,f212])).
fof(f6589,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,'type.one.one')),X2),'type.list.list'(X3)),'const.infer.st_ex_return_2'(s(fun(X0,fun(X1,'type.one.one')),X8),s('type.list.list'(X3),'const.list.MAP_2'(s(fun(X5,X3),X6),s('type.list.list'(X5),X7))))) = s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,'type.one.one')),X2),'type.list.list'(X3)),'const.pair.,_2'(s('type.infer.exc'(fun(X0,fun(X1,'type.one.one')),X2),'const.infer.Success_1'(s(fun(X0,fun(X1,'type.one.one')),X4))),s('type.list.list'(X3),'const.list.MAP_2'(s(fun(X5,X3),X6),s('type.list.list'(X5),X7)))))) )),
  inference(forward_demodulation,[],[f5322,f180])).
fof(f5322,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,'type.one.one')),X2),'type.list.list'(X3)),'const.pair.,_2'(s('type.infer.exc'(fun(X0,fun(X1,'type.one.one')),X2),'const.infer.Success_1'(s(fun(X0,fun(X1,'type.one.one')),X4))),s('type.list.list'(X3),'const.list.MAP_2'(s(fun(X5,X3),X6),s('type.list.list'(X5),X7))))) = s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,'type.one.one')),X2),'type.list.list'(X3)),'const.infer.st_ex_return_2'(s(fun(X0,fun(X1,'type.one.one')),X8),s('type.list.list'(X3),happ(s(fun('type.list.list'(X5),'type.list.list'(X3)),happ(s(fun(fun(X5,X3),fun('type.list.list'(X5),'type.list.list'(X3))),'const.list.MAP_0'),s(fun(X5,X3),X6))),s('type.list.list'(X5),X7)))))) )),
  inference(unit_resulting_resolution,[],[f724,f180,f212])).
fof(f6588,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1,X9] : (s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,fun(X2,'type.one.one'))),X3),'type.list.list'(X4)),'const.infer.st_ex_return_2'(s(fun(X0,fun(X1,fun(X2,'type.one.one'))),X9),s('type.list.list'(X4),'const.list.MAP_2'(s(fun(X6,X4),X7),s('type.list.list'(X6),X8))))) = s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,fun(X2,'type.one.one'))),X3),'type.list.list'(X4)),'const.pair.,_2'(s('type.infer.exc'(fun(X0,fun(X1,fun(X2,'type.one.one'))),X3),'const.infer.Success_1'(s(fun(X0,fun(X1,fun(X2,'type.one.one'))),X5))),s('type.list.list'(X4),'const.list.MAP_2'(s(fun(X6,X4),X7),s('type.list.list'(X6),X8)))))) )),
  inference(forward_demodulation,[],[f5323,f180])).
fof(f5323,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1,X9] : (s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,fun(X2,'type.one.one'))),X3),'type.list.list'(X4)),'const.pair.,_2'(s('type.infer.exc'(fun(X0,fun(X1,fun(X2,'type.one.one'))),X3),'const.infer.Success_1'(s(fun(X0,fun(X1,fun(X2,'type.one.one'))),X5))),s('type.list.list'(X4),'const.list.MAP_2'(s(fun(X6,X4),X7),s('type.list.list'(X6),X8))))) = s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,fun(X2,'type.one.one'))),X3),'type.list.list'(X4)),'const.infer.st_ex_return_2'(s(fun(X0,fun(X1,fun(X2,'type.one.one'))),X9),s('type.list.list'(X4),happ(s(fun('type.list.list'(X6),'type.list.list'(X4)),happ(s(fun(fun(X6,X4),fun('type.list.list'(X6),'type.list.list'(X4))),'const.list.MAP_0'),s(fun(X6,X4),X7))),s('type.list.list'(X6),X8)))))) )),
  inference(unit_resulting_resolution,[],[f752,f180,f212])).
fof(f6587,plain,(
  ( ! [X6,X4,X2,X0,X10,X8,X7,X5,X3,X1,X9] : (s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,fun(X2,fun(X3,'type.one.one')))),X4),'type.list.list'(X5)),'const.infer.st_ex_return_2'(s(fun(X0,fun(X1,fun(X2,fun(X3,'type.one.one')))),X10),s('type.list.list'(X5),'const.list.MAP_2'(s(fun(X7,X5),X8),s('type.list.list'(X7),X9))))) = s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,fun(X2,fun(X3,'type.one.one')))),X4),'type.list.list'(X5)),'const.pair.,_2'(s('type.infer.exc'(fun(X0,fun(X1,fun(X2,fun(X3,'type.one.one')))),X4),'const.infer.Success_1'(s(fun(X0,fun(X1,fun(X2,fun(X3,'type.one.one')))),X6))),s('type.list.list'(X5),'const.list.MAP_2'(s(fun(X7,X5),X8),s('type.list.list'(X7),X9)))))) )),
  inference(forward_demodulation,[],[f5324,f180])).
fof(f5324,plain,(
  ( ! [X6,X4,X2,X0,X10,X8,X7,X5,X3,X1,X9] : (s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,fun(X2,fun(X3,'type.one.one')))),X4),'type.list.list'(X5)),'const.pair.,_2'(s('type.infer.exc'(fun(X0,fun(X1,fun(X2,fun(X3,'type.one.one')))),X4),'const.infer.Success_1'(s(fun(X0,fun(X1,fun(X2,fun(X3,'type.one.one')))),X6))),s('type.list.list'(X5),'const.list.MAP_2'(s(fun(X7,X5),X8),s('type.list.list'(X7),X9))))) = s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,fun(X2,fun(X3,'type.one.one')))),X4),'type.list.list'(X5)),'const.infer.st_ex_return_2'(s(fun(X0,fun(X1,fun(X2,fun(X3,'type.one.one')))),X10),s('type.list.list'(X5),happ(s(fun('type.list.list'(X7),'type.list.list'(X5)),happ(s(fun(fun(X7,X5),fun('type.list.list'(X7),'type.list.list'(X5))),'const.list.MAP_0'),s(fun(X7,X5),X8))),s('type.list.list'(X7),X9)))))) )),
  inference(unit_resulting_resolution,[],[f787,f180,f212])).
fof(f6586,plain,(
  ( ! [X6,X4,X2,X0,X10,X8,X7,X5,X3,X1,X11,X9] : (s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,fun(X2,fun(X3,fun(X4,'type.one.one'))))),X5),'type.list.list'(X6)),'const.infer.st_ex_return_2'(s(fun(X0,fun(X1,fun(X2,fun(X3,fun(X4,'type.one.one'))))),X11),s('type.list.list'(X6),'const.list.MAP_2'(s(fun(X8,X6),X9),s('type.list.list'(X8),X10))))) = s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,fun(X2,fun(X3,fun(X4,'type.one.one'))))),X5),'type.list.list'(X6)),'const.pair.,_2'(s('type.infer.exc'(fun(X0,fun(X1,fun(X2,fun(X3,fun(X4,'type.one.one'))))),X5),'const.infer.Success_1'(s(fun(X0,fun(X1,fun(X2,fun(X3,fun(X4,'type.one.one'))))),X7))),s('type.list.list'(X6),'const.list.MAP_2'(s(fun(X8,X6),X9),s('type.list.list'(X8),X10)))))) )),
  inference(forward_demodulation,[],[f5325,f180])).
fof(f5325,plain,(
  ( ! [X6,X4,X2,X0,X10,X8,X7,X5,X3,X1,X11,X9] : (s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,fun(X2,fun(X3,fun(X4,'type.one.one'))))),X5),'type.list.list'(X6)),'const.pair.,_2'(s('type.infer.exc'(fun(X0,fun(X1,fun(X2,fun(X3,fun(X4,'type.one.one'))))),X5),'const.infer.Success_1'(s(fun(X0,fun(X1,fun(X2,fun(X3,fun(X4,'type.one.one'))))),X7))),s('type.list.list'(X6),'const.list.MAP_2'(s(fun(X8,X6),X9),s('type.list.list'(X8),X10))))) = s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,fun(X2,fun(X3,fun(X4,'type.one.one'))))),X5),'type.list.list'(X6)),'const.infer.st_ex_return_2'(s(fun(X0,fun(X1,fun(X2,fun(X3,fun(X4,'type.one.one'))))),X11),s('type.list.list'(X6),happ(s(fun('type.list.list'(X8),'type.list.list'(X6)),happ(s(fun(fun(X8,X6),fun('type.list.list'(X8),'type.list.list'(X6))),'const.list.MAP_0'),s(fun(X8,X6),X9))),s('type.list.list'(X8),X10)))))) )),
  inference(unit_resulting_resolution,[],[f815,f180,f212])).
fof(f6583,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.one.one',X0),'type.list.list'(X1)),'const.infer.st_ex_return_2'(s('type.one.one',X6),s('type.list.list'(X1),'const.list.MAP_2'(s(fun(X3,X1),X4),s('type.list.list'(X3),X5))))) = s('type.pair.prod'('type.infer.exc'('type.one.one',X0),'type.list.list'(X1)),'const.pair.,_2'(s('type.infer.exc'('type.one.one',X0),'const.infer.Success_1'(s('type.one.one',X2))),s('type.list.list'(X1),'const.list.MAP_2'(s(fun(X3,X1),X4),s('type.list.list'(X3),X5)))))) )),
  inference(forward_demodulation,[],[f5328,f180])).
fof(f5328,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.one.one',X0),'type.list.list'(X1)),'const.pair.,_2'(s('type.infer.exc'('type.one.one',X0),'const.infer.Success_1'(s('type.one.one',X2))),s('type.list.list'(X1),'const.list.MAP_2'(s(fun(X3,X1),X4),s('type.list.list'(X3),X5))))) = s('type.pair.prod'('type.infer.exc'('type.one.one',X0),'type.list.list'(X1)),'const.infer.st_ex_return_2'(s('type.one.one',X6),s('type.list.list'(X1),happ(s(fun('type.list.list'(X3),'type.list.list'(X1)),happ(s(fun(fun(X3,X1),fun('type.list.list'(X3),'type.list.list'(X1))),'const.list.MAP_0'),s(fun(X3,X1),X4))),s('type.list.list'(X3),X5)))))) )),
  inference(unit_resulting_resolution,[],[f258,f180,f212])).
fof(f6582,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.list.list'(X0),X1),'type.list.list'(X2)),'const.infer.st_ex_return_2'(s('type.list.list'(X0),'const.list.MAP_2'(s(fun(X3,X0),X4),s('type.list.list'(X3),X5))),s('type.list.list'(X2),'const.list.MAP_2'(s(fun(X6,X2),X7),s('type.list.list'(X6),X8))))) = s('type.pair.prod'('type.infer.exc'('type.list.list'(X0),X1),'type.list.list'(X2)),'const.pair.,_2'(s('type.infer.exc'('type.list.list'(X0),X1),'const.infer.Success_1'(s('type.list.list'(X0),'const.list.MAP_2'(s(fun(X3,X0),X4),s('type.list.list'(X3),X5))))),s('type.list.list'(X2),'const.list.MAP_2'(s(fun(X6,X2),X7),s('type.list.list'(X6),X8)))))) )),
  inference(forward_demodulation,[],[f6581,f180])).
fof(f6581,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.list.list'(X0),X1),'type.list.list'(X2)),'const.pair.,_2'(s('type.infer.exc'('type.list.list'(X0),X1),'const.infer.Success_1'(s('type.list.list'(X0),'const.list.MAP_2'(s(fun(X3,X0),X4),s('type.list.list'(X3),X5))))),s('type.list.list'(X2),'const.list.MAP_2'(s(fun(X6,X2),X7),s('type.list.list'(X6),X8))))) = s('type.pair.prod'('type.infer.exc'('type.list.list'(X0),X1),'type.list.list'(X2)),'const.infer.st_ex_return_2'(s('type.list.list'(X0),happ(s(fun('type.list.list'(X3),'type.list.list'(X0)),happ(s(fun(fun(X3,X0),fun('type.list.list'(X3),'type.list.list'(X0))),'const.list.MAP_0'),s(fun(X3,X0),X4))),s('type.list.list'(X3),X5))),s('type.list.list'(X2),'const.list.MAP_2'(s(fun(X6,X2),X7),s('type.list.list'(X6),X8)))))) )),
  inference(forward_demodulation,[],[f5329,f180])).
fof(f5329,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.list.list'(X0),X1),'type.list.list'(X2)),'const.pair.,_2'(s('type.infer.exc'('type.list.list'(X0),X1),'const.infer.Success_1'(s('type.list.list'(X0),'const.list.MAP_2'(s(fun(X3,X0),X4),s('type.list.list'(X3),X5))))),s('type.list.list'(X2),'const.list.MAP_2'(s(fun(X6,X2),X7),s('type.list.list'(X6),X8))))) = s('type.pair.prod'('type.infer.exc'('type.list.list'(X0),X1),'type.list.list'(X2)),'const.infer.st_ex_return_2'(s('type.list.list'(X0),happ(s(fun('type.list.list'(X3),'type.list.list'(X0)),happ(s(fun(fun(X3,X0),fun('type.list.list'(X3),'type.list.list'(X0))),'const.list.MAP_0'),s(fun(X3,X0),X4))),s('type.list.list'(X3),X5))),s('type.list.list'(X2),happ(s(fun('type.list.list'(X6),'type.list.list'(X2)),happ(s(fun(fun(X6,X2),fun('type.list.list'(X6),'type.list.list'(X2))),'const.list.MAP_0'),s(fun(X6,X2),X7))),s('type.list.list'(X6),X8)))))) )),
  inference(unit_resulting_resolution,[],[f180,f180,f212])).
fof(f6576,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.num.num',X0),'type.list.list'(X1)),'const.infer.st_ex_return_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X3))),s('type.list.list'(X1),'const.list.MAP_2'(s(fun(X4,X1),X5),s('type.list.list'(X4),X6))))) = s('type.pair.prod'('type.infer.exc'('type.num.num',X0),'type.list.list'(X1)),'const.pair.,_2'(s('type.infer.exc'('type.num.num',X0),'const.infer.Success_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X3))))),s('type.list.list'(X1),'const.list.MAP_2'(s(fun(X4,X1),X5),s('type.list.list'(X4),X6)))))) )),
  inference(forward_demodulation,[],[f6575,f175])).
fof(f6575,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.num.num',X0),'type.list.list'(X1)),'const.infer.st_ex_return_2'(s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.arithmetic.+_1'(s('type.num.num',X2))),s('type.num.num',X3))),s('type.list.list'(X1),'const.list.MAP_2'(s(fun(X4,X1),X5),s('type.list.list'(X4),X6))))) = s('type.pair.prod'('type.infer.exc'('type.num.num',X0),'type.list.list'(X1)),'const.pair.,_2'(s('type.infer.exc'('type.num.num',X0),'const.infer.Success_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X3))))),s('type.list.list'(X1),'const.list.MAP_2'(s(fun(X4,X1),X5),s('type.list.list'(X4),X6)))))) )),
  inference(forward_demodulation,[],[f5332,f180])).
fof(f5332,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.num.num',X0),'type.list.list'(X1)),'const.pair.,_2'(s('type.infer.exc'('type.num.num',X0),'const.infer.Success_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X3))))),s('type.list.list'(X1),'const.list.MAP_2'(s(fun(X4,X1),X5),s('type.list.list'(X4),X6))))) = s('type.pair.prod'('type.infer.exc'('type.num.num',X0),'type.list.list'(X1)),'const.infer.st_ex_return_2'(s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.arithmetic.+_1'(s('type.num.num',X2))),s('type.num.num',X3))),s('type.list.list'(X1),happ(s(fun('type.list.list'(X4),'type.list.list'(X1)),happ(s(fun(fun(X4,X1),fun('type.list.list'(X4),'type.list.list'(X1))),'const.list.MAP_0'),s(fun(X4,X1),X5))),s('type.list.list'(X4),X6)))))) )),
  inference(unit_resulting_resolution,[],[f175,f180,f212])).
fof(f6574,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.list.list'(X1)),'const.infer.st_ex_return_2'(s('type.infer_t.infer_t','const.infer_t.Infer_Tuvar_1'(s('type.num.num',X2))),s('type.list.list'(X1),'const.list.MAP_2'(s(fun(X3,X1),X4),s('type.list.list'(X3),X5))))) = s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.list.list'(X1)),'const.pair.,_2'(s('type.infer.exc'('type.infer_t.infer_t',X0),'const.infer.Success_1'(s('type.infer_t.infer_t','const.infer_t.Infer_Tuvar_1'(s('type.num.num',X2))))),s('type.list.list'(X1),'const.list.MAP_2'(s(fun(X3,X1),X4),s('type.list.list'(X3),X5)))))) )),
  inference(forward_demodulation,[],[f6573,f166])).
fof(f6573,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.list.list'(X1)),'const.infer.st_ex_return_2'(s('type.infer_t.infer_t',happ(s(fun('type.num.num','type.infer_t.infer_t'),'const.infer_t.Infer_Tuvar_0'),s('type.num.num',X2))),s('type.list.list'(X1),'const.list.MAP_2'(s(fun(X3,X1),X4),s('type.list.list'(X3),X5))))) = s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.list.list'(X1)),'const.pair.,_2'(s('type.infer.exc'('type.infer_t.infer_t',X0),'const.infer.Success_1'(s('type.infer_t.infer_t','const.infer_t.Infer_Tuvar_1'(s('type.num.num',X2))))),s('type.list.list'(X1),'const.list.MAP_2'(s(fun(X3,X1),X4),s('type.list.list'(X3),X5)))))) )),
  inference(forward_demodulation,[],[f5333,f180])).
fof(f5333,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.list.list'(X1)),'const.pair.,_2'(s('type.infer.exc'('type.infer_t.infer_t',X0),'const.infer.Success_1'(s('type.infer_t.infer_t','const.infer_t.Infer_Tuvar_1'(s('type.num.num',X2))))),s('type.list.list'(X1),'const.list.MAP_2'(s(fun(X3,X1),X4),s('type.list.list'(X3),X5))))) = s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.list.list'(X1)),'const.infer.st_ex_return_2'(s('type.infer_t.infer_t',happ(s(fun('type.num.num','type.infer_t.infer_t'),'const.infer_t.Infer_Tuvar_0'),s('type.num.num',X2))),s('type.list.list'(X1),happ(s(fun('type.list.list'(X3),'type.list.list'(X1)),happ(s(fun(fun(X3,X1),fun('type.list.list'(X3),'type.list.list'(X1))),'const.list.MAP_0'),s(fun(X3,X1),X4))),s('type.list.list'(X3),X5)))))) )),
  inference(unit_resulting_resolution,[],[f166,f180,f212])).
fof(f6572,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.list.list'(X1)),'const.infer.st_ex_return_2'(s('type.infer_t.infer_t','const.unify.t_walkstar_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X2),s('type.infer_t.infer_t',X3))),s('type.list.list'(X1),'const.list.MAP_2'(s(fun(X4,X1),X5),s('type.list.list'(X4),X6))))) = s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.list.list'(X1)),'const.pair.,_2'(s('type.infer.exc'('type.infer_t.infer_t',X0),'const.infer.Success_1'(s('type.infer_t.infer_t','const.unify.t_walkstar_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X2),s('type.infer_t.infer_t',X3))))),s('type.list.list'(X1),'const.list.MAP_2'(s(fun(X4,X1),X5),s('type.list.list'(X4),X6)))))) )),
  inference(forward_demodulation,[],[f6571,f176])).
fof(f6571,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.list.list'(X1)),'const.pair.,_2'(s('type.infer.exc'('type.infer_t.infer_t',X0),'const.infer.Success_1'(s('type.infer_t.infer_t','const.unify.t_walkstar_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X2),s('type.infer_t.infer_t',X3))))),s('type.list.list'(X1),'const.list.MAP_2'(s(fun(X4,X1),X5),s('type.list.list'(X4),X6))))) = s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.list.list'(X1)),'const.infer.st_ex_return_2'(s('type.infer_t.infer_t',happ(s(fun('type.infer_t.infer_t','type.infer_t.infer_t'),happ(s(fun('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),fun('type.infer_t.infer_t','type.infer_t.infer_t')),'const.unify.t_walkstar_0'),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X2))),s('type.infer_t.infer_t',X3))),s('type.list.list'(X1),'const.list.MAP_2'(s(fun(X4,X1),X5),s('type.list.list'(X4),X6)))))) )),
  inference(forward_demodulation,[],[f5334,f180])).
fof(f5334,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.list.list'(X1)),'const.pair.,_2'(s('type.infer.exc'('type.infer_t.infer_t',X0),'const.infer.Success_1'(s('type.infer_t.infer_t','const.unify.t_walkstar_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X2),s('type.infer_t.infer_t',X3))))),s('type.list.list'(X1),'const.list.MAP_2'(s(fun(X4,X1),X5),s('type.list.list'(X4),X6))))) = s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.list.list'(X1)),'const.infer.st_ex_return_2'(s('type.infer_t.infer_t',happ(s(fun('type.infer_t.infer_t','type.infer_t.infer_t'),happ(s(fun('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),fun('type.infer_t.infer_t','type.infer_t.infer_t')),'const.unify.t_walkstar_0'),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X2))),s('type.infer_t.infer_t',X3))),s('type.list.list'(X1),happ(s(fun('type.list.list'(X4),'type.list.list'(X1)),happ(s(fun(fun(X4,X1),fun('type.list.list'(X4),'type.list.list'(X1))),'const.list.MAP_0'),s(fun(X4,X1),X5))),s('type.list.list'(X4),X6)))))) )),
  inference(unit_resulting_resolution,[],[f176,f180,f212])).
fof(f6568,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X0),X2),'type.list.list'(X3)),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'(X0,X1),X0),'const.infer.read_1'(s(X0,X4))),s('type.list.list'(X3),'const.list.MAP_2'(s(fun(X5,X3),X6),s('type.list.list'(X5),X7))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X0),X2),'type.list.list'(X3)),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X0),X2),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'(X0,X1),X0),'const.infer.read_1'(s(X0,X4))))),s('type.list.list'(X3),'const.list.MAP_2'(s(fun(X5,X3),X6),s('type.list.list'(X5),X7)))))) )),
  inference(forward_demodulation,[],[f6567,f178])).
fof(f6567,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X0),X2),'type.list.list'(X3)),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X0),X2),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'(X0,X1),X0),'const.infer.read_1'(s(X0,X4))))),s('type.list.list'(X3),'const.list.MAP_2'(s(fun(X5,X3),X6),s('type.list.list'(X5),X7))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X0),X2),'type.list.list'(X3)),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'(X0,X1),X0),happ(s(fun(X0,'type.pair.prod'('type.infer.exc'(X0,X1),X0)),'const.infer.read_0'),s(X0,X4))),s('type.list.list'(X3),'const.list.MAP_2'(s(fun(X5,X3),X6),s('type.list.list'(X5),X7)))))) )),
  inference(forward_demodulation,[],[f5336,f180])).
fof(f5336,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X0),X2),'type.list.list'(X3)),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X0),X2),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'(X0,X1),X0),'const.infer.read_1'(s(X0,X4))))),s('type.list.list'(X3),'const.list.MAP_2'(s(fun(X5,X3),X6),s('type.list.list'(X5),X7))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X0),X2),'type.list.list'(X3)),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'(X0,X1),X0),happ(s(fun(X0,'type.pair.prod'('type.infer.exc'(X0,X1),X0)),'const.infer.read_0'),s(X0,X4))),s('type.list.list'(X3),happ(s(fun('type.list.list'(X5),'type.list.list'(X3)),happ(s(fun(fun(X5,X3),fun('type.list.list'(X5),'type.list.list'(X3))),'const.list.MAP_0'),s(fun(X5,X3),X6))),s('type.list.list'(X5),X7)))))) )),
  inference(unit_resulting_resolution,[],[f178,f180,f212])).
fof(f6566,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),X2),'type.list.list'(X3)),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),'const.infer.fresh_uvar_1'(s('type.infer.infer_st'(X1),X4))),s('type.list.list'(X3),'const.list.MAP_2'(s(fun(X5,X3),X6),s('type.list.list'(X5),X7))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),X2),'type.list.list'(X3)),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),X2),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),'const.infer.fresh_uvar_1'(s('type.infer.infer_st'(X1),X4))))),s('type.list.list'(X3),'const.list.MAP_2'(s(fun(X5,X3),X6),s('type.list.list'(X5),X7)))))) )),
  inference(forward_demodulation,[],[f6565,f179])).
fof(f6565,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),X2),'type.list.list'(X3)),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),X2),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),'const.infer.fresh_uvar_1'(s('type.infer.infer_st'(X1),X4))))),s('type.list.list'(X3),'const.list.MAP_2'(s(fun(X5,X3),X6),s('type.list.list'(X5),X7))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),X2),'type.list.list'(X3)),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),happ(s(fun('type.infer.infer_st'(X1),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1))),'const.infer.fresh_uvar_0'),s('type.infer.infer_st'(X1),X4))),s('type.list.list'(X3),'const.list.MAP_2'(s(fun(X5,X3),X6),s('type.list.list'(X5),X7)))))) )),
  inference(forward_demodulation,[],[f5337,f180])).
fof(f5337,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),X2),'type.list.list'(X3)),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),X2),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),'const.infer.fresh_uvar_1'(s('type.infer.infer_st'(X1),X4))))),s('type.list.list'(X3),'const.list.MAP_2'(s(fun(X5,X3),X6),s('type.list.list'(X5),X7))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),X2),'type.list.list'(X3)),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),happ(s(fun('type.infer.infer_st'(X1),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1))),'const.infer.fresh_uvar_0'),s('type.infer.infer_st'(X1),X4))),s('type.list.list'(X3),happ(s(fun('type.list.list'(X5),'type.list.list'(X3)),happ(s(fun(fun(X5,X3),fun('type.list.list'(X5),'type.list.list'(X3))),'const.list.MAP_0'),s(fun(X5,X3),X6))),s('type.list.list'(X5),X7)))))) )),
  inference(unit_resulting_resolution,[],[f179,f180,f212])).
fof(f6564,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1,X9] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),'type.list.list'(X4)),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'(X0,X1),X2),'const.infer.failwith_2'(s(X1,X5),s(X2,X6))),s('type.list.list'(X4),'const.list.MAP_2'(s(fun(X7,X4),X8),s('type.list.list'(X7),X9))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),'type.list.list'(X4)),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'(X0,X1),X2),'const.infer.failwith_2'(s(X1,X5),s(X2,X6))))),s('type.list.list'(X4),'const.list.MAP_2'(s(fun(X7,X4),X8),s('type.list.list'(X7),X9)))))) )),
  inference(forward_demodulation,[],[f6563,f204])).
fof(f6563,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1,X9] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),'type.list.list'(X4)),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'(X0,X1),X2),'const.infer.failwith_2'(s(X1,X5),s(X2,X6))))),s('type.list.list'(X4),'const.list.MAP_2'(s(fun(X7,X4),X8),s('type.list.list'(X7),X9))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),'type.list.list'(X4)),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'(X0,X1),X2),happ(s(fun(X2,'type.pair.prod'('type.infer.exc'(X0,X1),X2)),'const.infer.failwith_1'(s(X1,X5))),s(X2,X6))),s('type.list.list'(X4),'const.list.MAP_2'(s(fun(X7,X4),X8),s('type.list.list'(X7),X9)))))) )),
  inference(forward_demodulation,[],[f5338,f180])).
fof(f5338,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1,X9] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),'type.list.list'(X4)),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'(X0,X1),X2),'const.infer.failwith_2'(s(X1,X5),s(X2,X6))))),s('type.list.list'(X4),'const.list.MAP_2'(s(fun(X7,X4),X8),s('type.list.list'(X7),X9))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),'type.list.list'(X4)),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'(X0,X1),X2),happ(s(fun(X2,'type.pair.prod'('type.infer.exc'(X0,X1),X2)),'const.infer.failwith_1'(s(X1,X5))),s(X2,X6))),s('type.list.list'(X4),happ(s(fun('type.list.list'(X7),'type.list.list'(X4)),happ(s(fun(fun(X7,X4),fun('type.list.list'(X7),'type.list.list'(X4))),'const.list.MAP_0'),s(fun(X7,X4),X8))),s('type.list.list'(X7),X9)))))) )),
  inference(unit_resulting_resolution,[],[f204,f180,f212])).
fof(f6562,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1,X9] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),X2),'type.list.list'(X3)),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),'const.infer.guard_3'(s(bool,X4),s(X0,X5),s(X1,X6))),s('type.list.list'(X3),'const.list.MAP_2'(s(fun(X7,X3),X8),s('type.list.list'(X7),X9))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),X2),'type.list.list'(X3)),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),X2),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),'const.infer.guard_3'(s(bool,X4),s(X0,X5),s(X1,X6))))),s('type.list.list'(X3),'const.list.MAP_2'(s(fun(X7,X3),X8),s('type.list.list'(X7),X9)))))) )),
  inference(forward_demodulation,[],[f6561,f183])).
fof(f6561,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1,X9] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),X2),'type.list.list'(X3)),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),X2),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),'const.infer.guard_3'(s(bool,X4),s(X0,X5),s(X1,X6))))),s('type.list.list'(X3),'const.list.MAP_2'(s(fun(X7,X3),X8),s('type.list.list'(X7),X9))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),X2),'type.list.list'(X3)),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),happ(s(fun(X1,'type.pair.prod'('type.infer.exc'('type.one.one',X0),X1)),'const.infer.guard_2'(s(bool,X4),s(X0,X5))),s(X1,X6))),s('type.list.list'(X3),'const.list.MAP_2'(s(fun(X7,X3),X8),s('type.list.list'(X7),X9)))))) )),
  inference(forward_demodulation,[],[f5339,f180])).
fof(f5339,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1,X9] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),X2),'type.list.list'(X3)),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),X2),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),'const.infer.guard_3'(s(bool,X4),s(X0,X5),s(X1,X6))))),s('type.list.list'(X3),'const.list.MAP_2'(s(fun(X7,X3),X8),s('type.list.list'(X7),X9))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),X2),'type.list.list'(X3)),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),happ(s(fun(X1,'type.pair.prod'('type.infer.exc'('type.one.one',X0),X1)),'const.infer.guard_2'(s(bool,X4),s(X0,X5))),s(X1,X6))),s('type.list.list'(X3),happ(s(fun('type.list.list'(X7),'type.list.list'(X3)),happ(s(fun(fun(X7,X3),fun('type.list.list'(X7),'type.list.list'(X3))),'const.list.MAP_0'),s(fun(X7,X3),X8))),s('type.list.list'(X7),X9)))))) )),
  inference(unit_resulting_resolution,[],[f183,f180,f212])).
fof(f6418,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'(X0,X1),'type.num.num'),'const.infer.st_ex_return_2'(s(X0,happ(s(fun(X2,X0),X3),s(X2,happ(s(fun(X4,X2),X5),s(X4,X6))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X7),s('type.num.num',X8))))) = s('type.pair.prod'('type.infer.exc'(X0,X1),'type.num.num'),'const.pair.,_2'(s('type.infer.exc'(X0,X1),'const.infer.Success_1'(s(X0,happ(s(fun(X4,X0),'_dst_x0x1_2'(s(fun(X2,X0),X3),s(fun(X4,X2),X5))),s(X4,X6))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X7),s('type.num.num',X8)))))) )),
  inference(forward_demodulation,[],[f5429,f175])).
fof(f5429,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'(X0,X1),'type.num.num'),'const.infer.st_ex_return_2'(s(X0,happ(s(fun(X2,X0),X3),s(X2,happ(s(fun(X4,X2),X5),s(X4,X6))))),s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.arithmetic.+_1'(s('type.num.num',X7))),s('type.num.num',X8))))) = s('type.pair.prod'('type.infer.exc'(X0,X1),'type.num.num'),'const.pair.,_2'(s('type.infer.exc'(X0,X1),'const.infer.Success_1'(s(X0,happ(s(fun(X4,X0),'_dst_x0x1_2'(s(fun(X2,X0),X3),s(fun(X4,X2),X5))),s(X4,X6))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X7),s('type.num.num',X8)))))) )),
  inference(unit_resulting_resolution,[],[f206,f175,f212])).
fof(f6385,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s('type.pair.prod'('type.infer.exc'(X0,X1),'type.num.num'),'const.infer.st_ex_return_2'(s(X0,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(X0),X2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X3),s('type.num.num',X4))))) = s('type.pair.prod'('type.infer.exc'(X0,X1),'type.num.num'),'const.pair.,_2'(s('type.infer.exc'(X0,X1),'const.infer.Success_1'(s(X0,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(X0),X2))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X3),s('type.num.num',X4)))))) )),
  inference(forward_demodulation,[],[f6384,f168])).
fof(f6384,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s('type.pair.prod'('type.infer.exc'(X0,X1),'type.num.num'),'const.pair.,_2'(s('type.infer.exc'(X0,X1),'const.infer.Success_1'(s(X0,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(X0),X2))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X3),s('type.num.num',X4))))) = s('type.pair.prod'('type.infer.exc'(X0,X1),'type.num.num'),'const.infer.st_ex_return_2'(s(X0,happ(s(fun('type.infer.infer_st'(X0),X0),'const.infer.infer_st_subst_0'),s('type.infer.infer_st'(X0),X2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X3),s('type.num.num',X4)))))) )),
  inference(forward_demodulation,[],[f5450,f175])).
fof(f5450,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s('type.pair.prod'('type.infer.exc'(X0,X1),'type.num.num'),'const.pair.,_2'(s('type.infer.exc'(X0,X1),'const.infer.Success_1'(s(X0,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(X0),X2))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X3),s('type.num.num',X4))))) = s('type.pair.prod'('type.infer.exc'(X0,X1),'type.num.num'),'const.infer.st_ex_return_2'(s(X0,happ(s(fun('type.infer.infer_st'(X0),X0),'const.infer.infer_st_subst_0'),s('type.infer.infer_st'(X0),X2))),s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.arithmetic.+_1'(s('type.num.num',X3))),s('type.num.num',X4)))))) )),
  inference(unit_resulting_resolution,[],[f168,f175,f212])).
fof(f6383,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'(X0,X1),'type.num.num'),'const.infer.st_ex_return_2'(s(X0,happ(s(fun(X4,X0),'_dst_x0x1_2'(s(fun(X2,X0),X3),s(fun(X4,X2),X5))),s(X4,X6))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X7),s('type.num.num',X8))))) = s('type.pair.prod'('type.infer.exc'(X0,X1),'type.num.num'),'const.pair.,_2'(s('type.infer.exc'(X0,X1),'const.infer.Success_1'(s(X0,happ(s(fun(X2,X0),X3),s(X2,happ(s(fun(X4,X2),X5),s(X4,X6))))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X7),s('type.num.num',X8)))))) )),
  inference(forward_demodulation,[],[f5451,f175])).
fof(f5451,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'(X0,X1),'type.num.num'),'const.pair.,_2'(s('type.infer.exc'(X0,X1),'const.infer.Success_1'(s(X0,happ(s(fun(X2,X0),X3),s(X2,happ(s(fun(X4,X2),X5),s(X4,X6))))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X7),s('type.num.num',X8))))) = s('type.pair.prod'('type.infer.exc'(X0,X1),'type.num.num'),'const.infer.st_ex_return_2'(s(X0,happ(s(fun(X4,X0),'_dst_x0x1_2'(s(fun(X2,X0),X3),s(fun(X4,X2),X5))),s(X4,X6))),s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.arithmetic.+_1'(s('type.num.num',X7))),s('type.num.num',X8)))))) )),
  inference(unit_resulting_resolution,[],[f206,f175,f212])).
fof(f6380,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'(fun(X0,'type.one.one'),X1),'type.num.num'),'const.infer.st_ex_return_2'(s(fun(X0,'type.one.one'),X2),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X3),s('type.num.num',X4))))) = s('type.pair.prod'('type.infer.exc'(fun(X0,'type.one.one'),X1),'type.num.num'),'const.pair.,_2'(s('type.infer.exc'(fun(X0,'type.one.one'),X1),'const.infer.Success_1'(s(fun(X0,'type.one.one'),X5))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X3),s('type.num.num',X4)))))) )),
  inference(forward_demodulation,[],[f5453,f175])).
fof(f5453,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'(fun(X0,'type.one.one'),X1),'type.num.num'),'const.infer.st_ex_return_2'(s(fun(X0,'type.one.one'),X2),s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.arithmetic.+_1'(s('type.num.num',X3))),s('type.num.num',X4))))) = s('type.pair.prod'('type.infer.exc'(fun(X0,'type.one.one'),X1),'type.num.num'),'const.pair.,_2'(s('type.infer.exc'(fun(X0,'type.one.one'),X1),'const.infer.Success_1'(s(fun(X0,'type.one.one'),X5))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X3),s('type.num.num',X4)))))) )),
  inference(unit_resulting_resolution,[],[f605,f175,f212])).
fof(f6379,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,'type.one.one')),X2),'type.num.num'),'const.infer.st_ex_return_2'(s(fun(X0,fun(X1,'type.one.one')),X3),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X4),s('type.num.num',X5))))) = s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,'type.one.one')),X2),'type.num.num'),'const.pair.,_2'(s('type.infer.exc'(fun(X0,fun(X1,'type.one.one')),X2),'const.infer.Success_1'(s(fun(X0,fun(X1,'type.one.one')),X6))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X4),s('type.num.num',X5)))))) )),
  inference(forward_demodulation,[],[f5454,f175])).
fof(f5454,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,'type.one.one')),X2),'type.num.num'),'const.infer.st_ex_return_2'(s(fun(X0,fun(X1,'type.one.one')),X3),s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.arithmetic.+_1'(s('type.num.num',X4))),s('type.num.num',X5))))) = s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,'type.one.one')),X2),'type.num.num'),'const.pair.,_2'(s('type.infer.exc'(fun(X0,fun(X1,'type.one.one')),X2),'const.infer.Success_1'(s(fun(X0,fun(X1,'type.one.one')),X6))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X4),s('type.num.num',X5)))))) )),
  inference(unit_resulting_resolution,[],[f724,f175,f212])).
fof(f6378,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,fun(X2,'type.one.one'))),X3),'type.num.num'),'const.infer.st_ex_return_2'(s(fun(X0,fun(X1,fun(X2,'type.one.one'))),X4),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X5),s('type.num.num',X6))))) = s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,fun(X2,'type.one.one'))),X3),'type.num.num'),'const.pair.,_2'(s('type.infer.exc'(fun(X0,fun(X1,fun(X2,'type.one.one'))),X3),'const.infer.Success_1'(s(fun(X0,fun(X1,fun(X2,'type.one.one'))),X7))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X5),s('type.num.num',X6)))))) )),
  inference(forward_demodulation,[],[f5455,f175])).
fof(f5455,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,fun(X2,'type.one.one'))),X3),'type.num.num'),'const.infer.st_ex_return_2'(s(fun(X0,fun(X1,fun(X2,'type.one.one'))),X4),s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.arithmetic.+_1'(s('type.num.num',X5))),s('type.num.num',X6))))) = s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,fun(X2,'type.one.one'))),X3),'type.num.num'),'const.pair.,_2'(s('type.infer.exc'(fun(X0,fun(X1,fun(X2,'type.one.one'))),X3),'const.infer.Success_1'(s(fun(X0,fun(X1,fun(X2,'type.one.one'))),X7))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X5),s('type.num.num',X6)))))) )),
  inference(unit_resulting_resolution,[],[f752,f175,f212])).
fof(f6377,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,fun(X2,fun(X3,'type.one.one')))),X4),'type.num.num'),'const.infer.st_ex_return_2'(s(fun(X0,fun(X1,fun(X2,fun(X3,'type.one.one')))),X5),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X6),s('type.num.num',X7))))) = s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,fun(X2,fun(X3,'type.one.one')))),X4),'type.num.num'),'const.pair.,_2'(s('type.infer.exc'(fun(X0,fun(X1,fun(X2,fun(X3,'type.one.one')))),X4),'const.infer.Success_1'(s(fun(X0,fun(X1,fun(X2,fun(X3,'type.one.one')))),X8))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X6),s('type.num.num',X7)))))) )),
  inference(forward_demodulation,[],[f5456,f175])).
fof(f5456,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,fun(X2,fun(X3,'type.one.one')))),X4),'type.num.num'),'const.infer.st_ex_return_2'(s(fun(X0,fun(X1,fun(X2,fun(X3,'type.one.one')))),X5),s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.arithmetic.+_1'(s('type.num.num',X6))),s('type.num.num',X7))))) = s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,fun(X2,fun(X3,'type.one.one')))),X4),'type.num.num'),'const.pair.,_2'(s('type.infer.exc'(fun(X0,fun(X1,fun(X2,fun(X3,'type.one.one')))),X4),'const.infer.Success_1'(s(fun(X0,fun(X1,fun(X2,fun(X3,'type.one.one')))),X8))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X6),s('type.num.num',X7)))))) )),
  inference(unit_resulting_resolution,[],[f787,f175,f212])).
fof(f6376,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1,X9] : (s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,fun(X2,fun(X3,fun(X4,'type.one.one'))))),X5),'type.num.num'),'const.infer.st_ex_return_2'(s(fun(X0,fun(X1,fun(X2,fun(X3,fun(X4,'type.one.one'))))),X6),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X7),s('type.num.num',X8))))) = s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,fun(X2,fun(X3,fun(X4,'type.one.one'))))),X5),'type.num.num'),'const.pair.,_2'(s('type.infer.exc'(fun(X0,fun(X1,fun(X2,fun(X3,fun(X4,'type.one.one'))))),X5),'const.infer.Success_1'(s(fun(X0,fun(X1,fun(X2,fun(X3,fun(X4,'type.one.one'))))),X9))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X7),s('type.num.num',X8)))))) )),
  inference(forward_demodulation,[],[f5457,f175])).
fof(f5457,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1,X9] : (s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,fun(X2,fun(X3,fun(X4,'type.one.one'))))),X5),'type.num.num'),'const.infer.st_ex_return_2'(s(fun(X0,fun(X1,fun(X2,fun(X3,fun(X4,'type.one.one'))))),X6),s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.arithmetic.+_1'(s('type.num.num',X7))),s('type.num.num',X8))))) = s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,fun(X2,fun(X3,fun(X4,'type.one.one'))))),X5),'type.num.num'),'const.pair.,_2'(s('type.infer.exc'(fun(X0,fun(X1,fun(X2,fun(X3,fun(X4,'type.one.one'))))),X5),'const.infer.Success_1'(s(fun(X0,fun(X1,fun(X2,fun(X3,fun(X4,'type.one.one'))))),X9))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X7),s('type.num.num',X8)))))) )),
  inference(unit_resulting_resolution,[],[f815,f175,f212])).
fof(f6373,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.one.one',X0),'type.num.num'),'const.infer.st_ex_return_2'(s('type.one.one',X1),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X3))))) = s('type.pair.prod'('type.infer.exc'('type.one.one',X0),'type.num.num'),'const.pair.,_2'(s('type.infer.exc'('type.one.one',X0),'const.infer.Success_1'(s('type.one.one',X4))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X3)))))) )),
  inference(forward_demodulation,[],[f5460,f175])).
fof(f5460,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.one.one',X0),'type.num.num'),'const.infer.st_ex_return_2'(s('type.one.one',X1),s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.arithmetic.+_1'(s('type.num.num',X2))),s('type.num.num',X3))))) = s('type.pair.prod'('type.infer.exc'('type.one.one',X0),'type.num.num'),'const.pair.,_2'(s('type.infer.exc'('type.one.one',X0),'const.infer.Success_1'(s('type.one.one',X4))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X3)))))) )),
  inference(unit_resulting_resolution,[],[f258,f175,f212])).
fof(f6372,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.list.list'(X0),X1),'type.num.num'),'const.infer.st_ex_return_2'(s('type.list.list'(X0),'const.list.MAP_2'(s(fun(X2,X0),X3),s('type.list.list'(X2),X4))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X5),s('type.num.num',X6))))) = s('type.pair.prod'('type.infer.exc'('type.list.list'(X0),X1),'type.num.num'),'const.pair.,_2'(s('type.infer.exc'('type.list.list'(X0),X1),'const.infer.Success_1'(s('type.list.list'(X0),'const.list.MAP_2'(s(fun(X2,X0),X3),s('type.list.list'(X2),X4))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X5),s('type.num.num',X6)))))) )),
  inference(forward_demodulation,[],[f6371,f180])).
fof(f6371,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.list.list'(X0),X1),'type.num.num'),'const.pair.,_2'(s('type.infer.exc'('type.list.list'(X0),X1),'const.infer.Success_1'(s('type.list.list'(X0),'const.list.MAP_2'(s(fun(X2,X0),X3),s('type.list.list'(X2),X4))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X5),s('type.num.num',X6))))) = s('type.pair.prod'('type.infer.exc'('type.list.list'(X0),X1),'type.num.num'),'const.infer.st_ex_return_2'(s('type.list.list'(X0),happ(s(fun('type.list.list'(X2),'type.list.list'(X0)),happ(s(fun(fun(X2,X0),fun('type.list.list'(X2),'type.list.list'(X0))),'const.list.MAP_0'),s(fun(X2,X0),X3))),s('type.list.list'(X2),X4))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X5),s('type.num.num',X6)))))) )),
  inference(forward_demodulation,[],[f5461,f175])).
fof(f5461,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.list.list'(X0),X1),'type.num.num'),'const.pair.,_2'(s('type.infer.exc'('type.list.list'(X0),X1),'const.infer.Success_1'(s('type.list.list'(X0),'const.list.MAP_2'(s(fun(X2,X0),X3),s('type.list.list'(X2),X4))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X5),s('type.num.num',X6))))) = s('type.pair.prod'('type.infer.exc'('type.list.list'(X0),X1),'type.num.num'),'const.infer.st_ex_return_2'(s('type.list.list'(X0),happ(s(fun('type.list.list'(X2),'type.list.list'(X0)),happ(s(fun(fun(X2,X0),fun('type.list.list'(X2),'type.list.list'(X0))),'const.list.MAP_0'),s(fun(X2,X0),X3))),s('type.list.list'(X2),X4))),s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.arithmetic.+_1'(s('type.num.num',X5))),s('type.num.num',X6)))))) )),
  inference(unit_resulting_resolution,[],[f180,f175,f212])).
fof(f6366,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.num.num',X0),'type.num.num'),'const.infer.st_ex_return_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X3),s('type.num.num',X4))))) = s('type.pair.prod'('type.infer.exc'('type.num.num',X0),'type.num.num'),'const.pair.,_2'(s('type.infer.exc'('type.num.num',X0),'const.infer.Success_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X2))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X3),s('type.num.num',X4)))))) )),
  inference(forward_demodulation,[],[f6365,f175])).
fof(f6365,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.num.num',X0),'type.num.num'),'const.infer.st_ex_return_2'(s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.arithmetic.+_1'(s('type.num.num',X1))),s('type.num.num',X2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X3),s('type.num.num',X4))))) = s('type.pair.prod'('type.infer.exc'('type.num.num',X0),'type.num.num'),'const.pair.,_2'(s('type.infer.exc'('type.num.num',X0),'const.infer.Success_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X2))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X3),s('type.num.num',X4)))))) )),
  inference(forward_demodulation,[],[f5464,f175])).
fof(f5464,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.num.num',X0),'type.num.num'),'const.pair.,_2'(s('type.infer.exc'('type.num.num',X0),'const.infer.Success_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X2))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X3),s('type.num.num',X4))))) = s('type.pair.prod'('type.infer.exc'('type.num.num',X0),'type.num.num'),'const.infer.st_ex_return_2'(s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.arithmetic.+_1'(s('type.num.num',X1))),s('type.num.num',X2))),s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.arithmetic.+_1'(s('type.num.num',X3))),s('type.num.num',X4)))))) )),
  inference(unit_resulting_resolution,[],[f175,f175,f212])).
fof(f6364,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.num.num'),'const.infer.st_ex_return_2'(s('type.infer_t.infer_t','const.infer_t.Infer_Tuvar_1'(s('type.num.num',X1))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X3))))) = s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.num.num'),'const.pair.,_2'(s('type.infer.exc'('type.infer_t.infer_t',X0),'const.infer.Success_1'(s('type.infer_t.infer_t','const.infer_t.Infer_Tuvar_1'(s('type.num.num',X1))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X3)))))) )),
  inference(forward_demodulation,[],[f6363,f166])).
fof(f6363,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.num.num'),'const.infer.st_ex_return_2'(s('type.infer_t.infer_t',happ(s(fun('type.num.num','type.infer_t.infer_t'),'const.infer_t.Infer_Tuvar_0'),s('type.num.num',X1))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X3))))) = s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.num.num'),'const.pair.,_2'(s('type.infer.exc'('type.infer_t.infer_t',X0),'const.infer.Success_1'(s('type.infer_t.infer_t','const.infer_t.Infer_Tuvar_1'(s('type.num.num',X1))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X3)))))) )),
  inference(forward_demodulation,[],[f5465,f175])).
fof(f5465,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.num.num'),'const.pair.,_2'(s('type.infer.exc'('type.infer_t.infer_t',X0),'const.infer.Success_1'(s('type.infer_t.infer_t','const.infer_t.Infer_Tuvar_1'(s('type.num.num',X1))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X3))))) = s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.num.num'),'const.infer.st_ex_return_2'(s('type.infer_t.infer_t',happ(s(fun('type.num.num','type.infer_t.infer_t'),'const.infer_t.Infer_Tuvar_0'),s('type.num.num',X1))),s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.arithmetic.+_1'(s('type.num.num',X2))),s('type.num.num',X3)))))) )),
  inference(unit_resulting_resolution,[],[f166,f175,f212])).
fof(f6362,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.num.num'),'const.infer.st_ex_return_2'(s('type.infer_t.infer_t','const.unify.t_walkstar_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X1),s('type.infer_t.infer_t',X2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X3),s('type.num.num',X4))))) = s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.num.num'),'const.pair.,_2'(s('type.infer.exc'('type.infer_t.infer_t',X0),'const.infer.Success_1'(s('type.infer_t.infer_t','const.unify.t_walkstar_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X1),s('type.infer_t.infer_t',X2))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X3),s('type.num.num',X4)))))) )),
  inference(forward_demodulation,[],[f6361,f176])).
fof(f6361,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.num.num'),'const.pair.,_2'(s('type.infer.exc'('type.infer_t.infer_t',X0),'const.infer.Success_1'(s('type.infer_t.infer_t','const.unify.t_walkstar_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X1),s('type.infer_t.infer_t',X2))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X3),s('type.num.num',X4))))) = s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.num.num'),'const.infer.st_ex_return_2'(s('type.infer_t.infer_t',happ(s(fun('type.infer_t.infer_t','type.infer_t.infer_t'),happ(s(fun('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),fun('type.infer_t.infer_t','type.infer_t.infer_t')),'const.unify.t_walkstar_0'),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X1))),s('type.infer_t.infer_t',X2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X3),s('type.num.num',X4)))))) )),
  inference(forward_demodulation,[],[f5466,f175])).
fof(f5466,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.num.num'),'const.pair.,_2'(s('type.infer.exc'('type.infer_t.infer_t',X0),'const.infer.Success_1'(s('type.infer_t.infer_t','const.unify.t_walkstar_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X1),s('type.infer_t.infer_t',X2))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X3),s('type.num.num',X4))))) = s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.num.num'),'const.infer.st_ex_return_2'(s('type.infer_t.infer_t',happ(s(fun('type.infer_t.infer_t','type.infer_t.infer_t'),happ(s(fun('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),fun('type.infer_t.infer_t','type.infer_t.infer_t')),'const.unify.t_walkstar_0'),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X1))),s('type.infer_t.infer_t',X2))),s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.arithmetic.+_1'(s('type.num.num',X3))),s('type.num.num',X4)))))) )),
  inference(unit_resulting_resolution,[],[f176,f175,f212])).
fof(f6358,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X0),X2),'type.num.num'),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'(X0,X1),X0),'const.infer.read_1'(s(X0,X3))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X4),s('type.num.num',X5))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X0),X2),'type.num.num'),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X0),X2),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'(X0,X1),X0),'const.infer.read_1'(s(X0,X3))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X4),s('type.num.num',X5)))))) )),
  inference(forward_demodulation,[],[f6357,f178])).
fof(f6357,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X0),X2),'type.num.num'),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X0),X2),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'(X0,X1),X0),'const.infer.read_1'(s(X0,X3))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X4),s('type.num.num',X5))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X0),X2),'type.num.num'),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'(X0,X1),X0),happ(s(fun(X0,'type.pair.prod'('type.infer.exc'(X0,X1),X0)),'const.infer.read_0'),s(X0,X3))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X4),s('type.num.num',X5)))))) )),
  inference(forward_demodulation,[],[f5468,f175])).
fof(f5468,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X0),X2),'type.num.num'),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X0),X2),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'(X0,X1),X0),'const.infer.read_1'(s(X0,X3))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X4),s('type.num.num',X5))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X0),X2),'type.num.num'),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'(X0,X1),X0),happ(s(fun(X0,'type.pair.prod'('type.infer.exc'(X0,X1),X0)),'const.infer.read_0'),s(X0,X3))),s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.arithmetic.+_1'(s('type.num.num',X4))),s('type.num.num',X5)))))) )),
  inference(unit_resulting_resolution,[],[f178,f175,f212])).
fof(f6356,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),X2),'type.num.num'),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),'const.infer.fresh_uvar_1'(s('type.infer.infer_st'(X1),X3))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X4),s('type.num.num',X5))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),X2),'type.num.num'),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),X2),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),'const.infer.fresh_uvar_1'(s('type.infer.infer_st'(X1),X3))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X4),s('type.num.num',X5)))))) )),
  inference(forward_demodulation,[],[f6355,f179])).
fof(f6355,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),X2),'type.num.num'),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),X2),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),'const.infer.fresh_uvar_1'(s('type.infer.infer_st'(X1),X3))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X4),s('type.num.num',X5))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),X2),'type.num.num'),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),happ(s(fun('type.infer.infer_st'(X1),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1))),'const.infer.fresh_uvar_0'),s('type.infer.infer_st'(X1),X3))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X4),s('type.num.num',X5)))))) )),
  inference(forward_demodulation,[],[f5469,f175])).
fof(f5469,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),X2),'type.num.num'),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),X2),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),'const.infer.fresh_uvar_1'(s('type.infer.infer_st'(X1),X3))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X4),s('type.num.num',X5))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),X2),'type.num.num'),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),happ(s(fun('type.infer.infer_st'(X1),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1))),'const.infer.fresh_uvar_0'),s('type.infer.infer_st'(X1),X3))),s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.arithmetic.+_1'(s('type.num.num',X4))),s('type.num.num',X5)))))) )),
  inference(unit_resulting_resolution,[],[f179,f175,f212])).
fof(f6354,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),'type.num.num'),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'(X0,X1),X2),'const.infer.failwith_2'(s(X1,X4),s(X2,X5))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X6),s('type.num.num',X7))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),'type.num.num'),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'(X0,X1),X2),'const.infer.failwith_2'(s(X1,X4),s(X2,X5))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X6),s('type.num.num',X7)))))) )),
  inference(forward_demodulation,[],[f6353,f204])).
fof(f6353,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),'type.num.num'),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'(X0,X1),X2),'const.infer.failwith_2'(s(X1,X4),s(X2,X5))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X6),s('type.num.num',X7))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),'type.num.num'),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'(X0,X1),X2),happ(s(fun(X2,'type.pair.prod'('type.infer.exc'(X0,X1),X2)),'const.infer.failwith_1'(s(X1,X4))),s(X2,X5))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X6),s('type.num.num',X7)))))) )),
  inference(forward_demodulation,[],[f5470,f175])).
fof(f5470,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),'type.num.num'),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'(X0,X1),X2),'const.infer.failwith_2'(s(X1,X4),s(X2,X5))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X6),s('type.num.num',X7))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),'type.num.num'),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'(X0,X1),X2),happ(s(fun(X2,'type.pair.prod'('type.infer.exc'(X0,X1),X2)),'const.infer.failwith_1'(s(X1,X4))),s(X2,X5))),s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.arithmetic.+_1'(s('type.num.num',X6))),s('type.num.num',X7)))))) )),
  inference(unit_resulting_resolution,[],[f204,f175,f212])).
fof(f6352,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),X2),'type.num.num'),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),'const.infer.guard_3'(s(bool,X3),s(X0,X4),s(X1,X5))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X6),s('type.num.num',X7))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),X2),'type.num.num'),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),X2),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),'const.infer.guard_3'(s(bool,X3),s(X0,X4),s(X1,X5))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X6),s('type.num.num',X7)))))) )),
  inference(forward_demodulation,[],[f6351,f183])).
fof(f6351,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),X2),'type.num.num'),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),X2),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),'const.infer.guard_3'(s(bool,X3),s(X0,X4),s(X1,X5))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X6),s('type.num.num',X7))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),X2),'type.num.num'),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),happ(s(fun(X1,'type.pair.prod'('type.infer.exc'('type.one.one',X0),X1)),'const.infer.guard_2'(s(bool,X3),s(X0,X4))),s(X1,X5))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X6),s('type.num.num',X7)))))) )),
  inference(forward_demodulation,[],[f5471,f175])).
fof(f5471,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),X2),'type.num.num'),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),X2),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),'const.infer.guard_3'(s(bool,X3),s(X0,X4),s(X1,X5))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X6),s('type.num.num',X7))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),X2),'type.num.num'),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),happ(s(fun(X1,'type.pair.prod'('type.infer.exc'('type.one.one',X0),X1)),'const.infer.guard_2'(s(bool,X3),s(X0,X4))),s(X1,X5))),s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.arithmetic.+_1'(s('type.num.num',X6))),s('type.num.num',X7)))))) )),
  inference(unit_resulting_resolution,[],[f183,f175,f212])).
fof(f6348,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'(X0,X1),'type.infer_t.infer_t'),'const.infer.st_ex_return_2'(s(X0,happ(s(fun(X2,X0),X3),s(X2,happ(s(fun(X4,X2),X5),s(X4,X6))))),s('type.infer_t.infer_t','const.infer_t.Infer_Tuvar_1'(s('type.num.num',X7))))) = s('type.pair.prod'('type.infer.exc'(X0,X1),'type.infer_t.infer_t'),'const.pair.,_2'(s('type.infer.exc'(X0,X1),'const.infer.Success_1'(s(X0,happ(s(fun(X4,X0),'_dst_x0x1_2'(s(fun(X2,X0),X3),s(fun(X4,X2),X5))),s(X4,X6))))),s('type.infer_t.infer_t','const.infer_t.Infer_Tuvar_1'(s('type.num.num',X7)))))) )),
  inference(forward_demodulation,[],[f5473,f166])).
fof(f5473,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'(X0,X1),'type.infer_t.infer_t'),'const.infer.st_ex_return_2'(s(X0,happ(s(fun(X2,X0),X3),s(X2,happ(s(fun(X4,X2),X5),s(X4,X6))))),s('type.infer_t.infer_t',happ(s(fun('type.num.num','type.infer_t.infer_t'),'const.infer_t.Infer_Tuvar_0'),s('type.num.num',X7))))) = s('type.pair.prod'('type.infer.exc'(X0,X1),'type.infer_t.infer_t'),'const.pair.,_2'(s('type.infer.exc'(X0,X1),'const.infer.Success_1'(s(X0,happ(s(fun(X4,X0),'_dst_x0x1_2'(s(fun(X2,X0),X3),s(fun(X4,X2),X5))),s(X4,X6))))),s('type.infer_t.infer_t','const.infer_t.Infer_Tuvar_1'(s('type.num.num',X7)))))) )),
  inference(unit_resulting_resolution,[],[f206,f166,f212])).
fof(f6315,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.pair.prod'('type.infer.exc'(X0,X1),'type.infer_t.infer_t'),'const.infer.st_ex_return_2'(s(X0,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(X0),X2))),s('type.infer_t.infer_t','const.infer_t.Infer_Tuvar_1'(s('type.num.num',X3))))) = s('type.pair.prod'('type.infer.exc'(X0,X1),'type.infer_t.infer_t'),'const.pair.,_2'(s('type.infer.exc'(X0,X1),'const.infer.Success_1'(s(X0,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(X0),X2))))),s('type.infer_t.infer_t','const.infer_t.Infer_Tuvar_1'(s('type.num.num',X3)))))) )),
  inference(forward_demodulation,[],[f6314,f168])).
fof(f6314,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.pair.prod'('type.infer.exc'(X0,X1),'type.infer_t.infer_t'),'const.pair.,_2'(s('type.infer.exc'(X0,X1),'const.infer.Success_1'(s(X0,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(X0),X2))))),s('type.infer_t.infer_t','const.infer_t.Infer_Tuvar_1'(s('type.num.num',X3))))) = s('type.pair.prod'('type.infer.exc'(X0,X1),'type.infer_t.infer_t'),'const.infer.st_ex_return_2'(s(X0,happ(s(fun('type.infer.infer_st'(X0),X0),'const.infer.infer_st_subst_0'),s('type.infer.infer_st'(X0),X2))),s('type.infer_t.infer_t','const.infer_t.Infer_Tuvar_1'(s('type.num.num',X3)))))) )),
  inference(forward_demodulation,[],[f5494,f166])).
fof(f5494,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.pair.prod'('type.infer.exc'(X0,X1),'type.infer_t.infer_t'),'const.pair.,_2'(s('type.infer.exc'(X0,X1),'const.infer.Success_1'(s(X0,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(X0),X2))))),s('type.infer_t.infer_t','const.infer_t.Infer_Tuvar_1'(s('type.num.num',X3))))) = s('type.pair.prod'('type.infer.exc'(X0,X1),'type.infer_t.infer_t'),'const.infer.st_ex_return_2'(s(X0,happ(s(fun('type.infer.infer_st'(X0),X0),'const.infer.infer_st_subst_0'),s('type.infer.infer_st'(X0),X2))),s('type.infer_t.infer_t',happ(s(fun('type.num.num','type.infer_t.infer_t'),'const.infer_t.Infer_Tuvar_0'),s('type.num.num',X3)))))) )),
  inference(unit_resulting_resolution,[],[f168,f166,f212])).
fof(f6313,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'(X0,X1),'type.infer_t.infer_t'),'const.infer.st_ex_return_2'(s(X0,happ(s(fun(X4,X0),'_dst_x0x1_2'(s(fun(X2,X0),X3),s(fun(X4,X2),X5))),s(X4,X6))),s('type.infer_t.infer_t','const.infer_t.Infer_Tuvar_1'(s('type.num.num',X7))))) = s('type.pair.prod'('type.infer.exc'(X0,X1),'type.infer_t.infer_t'),'const.pair.,_2'(s('type.infer.exc'(X0,X1),'const.infer.Success_1'(s(X0,happ(s(fun(X2,X0),X3),s(X2,happ(s(fun(X4,X2),X5),s(X4,X6))))))),s('type.infer_t.infer_t','const.infer_t.Infer_Tuvar_1'(s('type.num.num',X7)))))) )),
  inference(forward_demodulation,[],[f5495,f166])).
fof(f5495,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'(X0,X1),'type.infer_t.infer_t'),'const.pair.,_2'(s('type.infer.exc'(X0,X1),'const.infer.Success_1'(s(X0,happ(s(fun(X2,X0),X3),s(X2,happ(s(fun(X4,X2),X5),s(X4,X6))))))),s('type.infer_t.infer_t','const.infer_t.Infer_Tuvar_1'(s('type.num.num',X7))))) = s('type.pair.prod'('type.infer.exc'(X0,X1),'type.infer_t.infer_t'),'const.infer.st_ex_return_2'(s(X0,happ(s(fun(X4,X0),'_dst_x0x1_2'(s(fun(X2,X0),X3),s(fun(X4,X2),X5))),s(X4,X6))),s('type.infer_t.infer_t',happ(s(fun('type.num.num','type.infer_t.infer_t'),'const.infer_t.Infer_Tuvar_0'),s('type.num.num',X7)))))) )),
  inference(unit_resulting_resolution,[],[f206,f166,f212])).
fof(f6310,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s('type.pair.prod'('type.infer.exc'(fun(X0,'type.one.one'),X1),'type.infer_t.infer_t'),'const.infer.st_ex_return_2'(s(fun(X0,'type.one.one'),X2),s('type.infer_t.infer_t','const.infer_t.Infer_Tuvar_1'(s('type.num.num',X3))))) = s('type.pair.prod'('type.infer.exc'(fun(X0,'type.one.one'),X1),'type.infer_t.infer_t'),'const.pair.,_2'(s('type.infer.exc'(fun(X0,'type.one.one'),X1),'const.infer.Success_1'(s(fun(X0,'type.one.one'),X4))),s('type.infer_t.infer_t','const.infer_t.Infer_Tuvar_1'(s('type.num.num',X3)))))) )),
  inference(forward_demodulation,[],[f5497,f166])).
fof(f5497,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s('type.pair.prod'('type.infer.exc'(fun(X0,'type.one.one'),X1),'type.infer_t.infer_t'),'const.infer.st_ex_return_2'(s(fun(X0,'type.one.one'),X2),s('type.infer_t.infer_t',happ(s(fun('type.num.num','type.infer_t.infer_t'),'const.infer_t.Infer_Tuvar_0'),s('type.num.num',X3))))) = s('type.pair.prod'('type.infer.exc'(fun(X0,'type.one.one'),X1),'type.infer_t.infer_t'),'const.pair.,_2'(s('type.infer.exc'(fun(X0,'type.one.one'),X1),'const.infer.Success_1'(s(fun(X0,'type.one.one'),X4))),s('type.infer_t.infer_t','const.infer_t.Infer_Tuvar_1'(s('type.num.num',X3)))))) )),
  inference(unit_resulting_resolution,[],[f605,f166,f212])).
fof(f6309,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,'type.one.one')),X2),'type.infer_t.infer_t'),'const.infer.st_ex_return_2'(s(fun(X0,fun(X1,'type.one.one')),X3),s('type.infer_t.infer_t','const.infer_t.Infer_Tuvar_1'(s('type.num.num',X4))))) = s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,'type.one.one')),X2),'type.infer_t.infer_t'),'const.pair.,_2'(s('type.infer.exc'(fun(X0,fun(X1,'type.one.one')),X2),'const.infer.Success_1'(s(fun(X0,fun(X1,'type.one.one')),X5))),s('type.infer_t.infer_t','const.infer_t.Infer_Tuvar_1'(s('type.num.num',X4)))))) )),
  inference(forward_demodulation,[],[f5498,f166])).
fof(f5498,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,'type.one.one')),X2),'type.infer_t.infer_t'),'const.infer.st_ex_return_2'(s(fun(X0,fun(X1,'type.one.one')),X3),s('type.infer_t.infer_t',happ(s(fun('type.num.num','type.infer_t.infer_t'),'const.infer_t.Infer_Tuvar_0'),s('type.num.num',X4))))) = s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,'type.one.one')),X2),'type.infer_t.infer_t'),'const.pair.,_2'(s('type.infer.exc'(fun(X0,fun(X1,'type.one.one')),X2),'const.infer.Success_1'(s(fun(X0,fun(X1,'type.one.one')),X5))),s('type.infer_t.infer_t','const.infer_t.Infer_Tuvar_1'(s('type.num.num',X4)))))) )),
  inference(unit_resulting_resolution,[],[f724,f166,f212])).
fof(f6308,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,fun(X2,'type.one.one'))),X3),'type.infer_t.infer_t'),'const.infer.st_ex_return_2'(s(fun(X0,fun(X1,fun(X2,'type.one.one'))),X4),s('type.infer_t.infer_t','const.infer_t.Infer_Tuvar_1'(s('type.num.num',X5))))) = s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,fun(X2,'type.one.one'))),X3),'type.infer_t.infer_t'),'const.pair.,_2'(s('type.infer.exc'(fun(X0,fun(X1,fun(X2,'type.one.one'))),X3),'const.infer.Success_1'(s(fun(X0,fun(X1,fun(X2,'type.one.one'))),X6))),s('type.infer_t.infer_t','const.infer_t.Infer_Tuvar_1'(s('type.num.num',X5)))))) )),
  inference(forward_demodulation,[],[f5499,f166])).
fof(f5499,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,fun(X2,'type.one.one'))),X3),'type.infer_t.infer_t'),'const.infer.st_ex_return_2'(s(fun(X0,fun(X1,fun(X2,'type.one.one'))),X4),s('type.infer_t.infer_t',happ(s(fun('type.num.num','type.infer_t.infer_t'),'const.infer_t.Infer_Tuvar_0'),s('type.num.num',X5))))) = s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,fun(X2,'type.one.one'))),X3),'type.infer_t.infer_t'),'const.pair.,_2'(s('type.infer.exc'(fun(X0,fun(X1,fun(X2,'type.one.one'))),X3),'const.infer.Success_1'(s(fun(X0,fun(X1,fun(X2,'type.one.one'))),X6))),s('type.infer_t.infer_t','const.infer_t.Infer_Tuvar_1'(s('type.num.num',X5)))))) )),
  inference(unit_resulting_resolution,[],[f752,f166,f212])).
fof(f6307,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,fun(X2,fun(X3,'type.one.one')))),X4),'type.infer_t.infer_t'),'const.infer.st_ex_return_2'(s(fun(X0,fun(X1,fun(X2,fun(X3,'type.one.one')))),X5),s('type.infer_t.infer_t','const.infer_t.Infer_Tuvar_1'(s('type.num.num',X6))))) = s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,fun(X2,fun(X3,'type.one.one')))),X4),'type.infer_t.infer_t'),'const.pair.,_2'(s('type.infer.exc'(fun(X0,fun(X1,fun(X2,fun(X3,'type.one.one')))),X4),'const.infer.Success_1'(s(fun(X0,fun(X1,fun(X2,fun(X3,'type.one.one')))),X7))),s('type.infer_t.infer_t','const.infer_t.Infer_Tuvar_1'(s('type.num.num',X6)))))) )),
  inference(forward_demodulation,[],[f5500,f166])).
fof(f5500,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,fun(X2,fun(X3,'type.one.one')))),X4),'type.infer_t.infer_t'),'const.infer.st_ex_return_2'(s(fun(X0,fun(X1,fun(X2,fun(X3,'type.one.one')))),X5),s('type.infer_t.infer_t',happ(s(fun('type.num.num','type.infer_t.infer_t'),'const.infer_t.Infer_Tuvar_0'),s('type.num.num',X6))))) = s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,fun(X2,fun(X3,'type.one.one')))),X4),'type.infer_t.infer_t'),'const.pair.,_2'(s('type.infer.exc'(fun(X0,fun(X1,fun(X2,fun(X3,'type.one.one')))),X4),'const.infer.Success_1'(s(fun(X0,fun(X1,fun(X2,fun(X3,'type.one.one')))),X7))),s('type.infer_t.infer_t','const.infer_t.Infer_Tuvar_1'(s('type.num.num',X6)))))) )),
  inference(unit_resulting_resolution,[],[f787,f166,f212])).
fof(f6306,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,fun(X2,fun(X3,fun(X4,'type.one.one'))))),X5),'type.infer_t.infer_t'),'const.infer.st_ex_return_2'(s(fun(X0,fun(X1,fun(X2,fun(X3,fun(X4,'type.one.one'))))),X6),s('type.infer_t.infer_t','const.infer_t.Infer_Tuvar_1'(s('type.num.num',X7))))) = s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,fun(X2,fun(X3,fun(X4,'type.one.one'))))),X5),'type.infer_t.infer_t'),'const.pair.,_2'(s('type.infer.exc'(fun(X0,fun(X1,fun(X2,fun(X3,fun(X4,'type.one.one'))))),X5),'const.infer.Success_1'(s(fun(X0,fun(X1,fun(X2,fun(X3,fun(X4,'type.one.one'))))),X8))),s('type.infer_t.infer_t','const.infer_t.Infer_Tuvar_1'(s('type.num.num',X7)))))) )),
  inference(forward_demodulation,[],[f5501,f166])).
fof(f5501,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,fun(X2,fun(X3,fun(X4,'type.one.one'))))),X5),'type.infer_t.infer_t'),'const.infer.st_ex_return_2'(s(fun(X0,fun(X1,fun(X2,fun(X3,fun(X4,'type.one.one'))))),X6),s('type.infer_t.infer_t',happ(s(fun('type.num.num','type.infer_t.infer_t'),'const.infer_t.Infer_Tuvar_0'),s('type.num.num',X7))))) = s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,fun(X2,fun(X3,fun(X4,'type.one.one'))))),X5),'type.infer_t.infer_t'),'const.pair.,_2'(s('type.infer.exc'(fun(X0,fun(X1,fun(X2,fun(X3,fun(X4,'type.one.one'))))),X5),'const.infer.Success_1'(s(fun(X0,fun(X1,fun(X2,fun(X3,fun(X4,'type.one.one'))))),X8))),s('type.infer_t.infer_t','const.infer_t.Infer_Tuvar_1'(s('type.num.num',X7)))))) )),
  inference(unit_resulting_resolution,[],[f815,f166,f212])).
fof(f6303,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.one.one',X0),'type.infer_t.infer_t'),'const.infer.st_ex_return_2'(s('type.one.one',X1),s('type.infer_t.infer_t','const.infer_t.Infer_Tuvar_1'(s('type.num.num',X2))))) = s('type.pair.prod'('type.infer.exc'('type.one.one',X0),'type.infer_t.infer_t'),'const.pair.,_2'(s('type.infer.exc'('type.one.one',X0),'const.infer.Success_1'(s('type.one.one',X3))),s('type.infer_t.infer_t','const.infer_t.Infer_Tuvar_1'(s('type.num.num',X2)))))) )),
  inference(forward_demodulation,[],[f5504,f166])).
fof(f5504,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.one.one',X0),'type.infer_t.infer_t'),'const.infer.st_ex_return_2'(s('type.one.one',X1),s('type.infer_t.infer_t',happ(s(fun('type.num.num','type.infer_t.infer_t'),'const.infer_t.Infer_Tuvar_0'),s('type.num.num',X2))))) = s('type.pair.prod'('type.infer.exc'('type.one.one',X0),'type.infer_t.infer_t'),'const.pair.,_2'(s('type.infer.exc'('type.one.one',X0),'const.infer.Success_1'(s('type.one.one',X3))),s('type.infer_t.infer_t','const.infer_t.Infer_Tuvar_1'(s('type.num.num',X2)))))) )),
  inference(unit_resulting_resolution,[],[f258,f166,f212])).
fof(f6302,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.list.list'(X0),X1),'type.infer_t.infer_t'),'const.infer.st_ex_return_2'(s('type.list.list'(X0),'const.list.MAP_2'(s(fun(X2,X0),X3),s('type.list.list'(X2),X4))),s('type.infer_t.infer_t','const.infer_t.Infer_Tuvar_1'(s('type.num.num',X5))))) = s('type.pair.prod'('type.infer.exc'('type.list.list'(X0),X1),'type.infer_t.infer_t'),'const.pair.,_2'(s('type.infer.exc'('type.list.list'(X0),X1),'const.infer.Success_1'(s('type.list.list'(X0),'const.list.MAP_2'(s(fun(X2,X0),X3),s('type.list.list'(X2),X4))))),s('type.infer_t.infer_t','const.infer_t.Infer_Tuvar_1'(s('type.num.num',X5)))))) )),
  inference(forward_demodulation,[],[f6301,f180])).
fof(f6301,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.list.list'(X0),X1),'type.infer_t.infer_t'),'const.pair.,_2'(s('type.infer.exc'('type.list.list'(X0),X1),'const.infer.Success_1'(s('type.list.list'(X0),'const.list.MAP_2'(s(fun(X2,X0),X3),s('type.list.list'(X2),X4))))),s('type.infer_t.infer_t','const.infer_t.Infer_Tuvar_1'(s('type.num.num',X5))))) = s('type.pair.prod'('type.infer.exc'('type.list.list'(X0),X1),'type.infer_t.infer_t'),'const.infer.st_ex_return_2'(s('type.list.list'(X0),happ(s(fun('type.list.list'(X2),'type.list.list'(X0)),happ(s(fun(fun(X2,X0),fun('type.list.list'(X2),'type.list.list'(X0))),'const.list.MAP_0'),s(fun(X2,X0),X3))),s('type.list.list'(X2),X4))),s('type.infer_t.infer_t','const.infer_t.Infer_Tuvar_1'(s('type.num.num',X5)))))) )),
  inference(forward_demodulation,[],[f5505,f166])).
fof(f5505,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.list.list'(X0),X1),'type.infer_t.infer_t'),'const.pair.,_2'(s('type.infer.exc'('type.list.list'(X0),X1),'const.infer.Success_1'(s('type.list.list'(X0),'const.list.MAP_2'(s(fun(X2,X0),X3),s('type.list.list'(X2),X4))))),s('type.infer_t.infer_t','const.infer_t.Infer_Tuvar_1'(s('type.num.num',X5))))) = s('type.pair.prod'('type.infer.exc'('type.list.list'(X0),X1),'type.infer_t.infer_t'),'const.infer.st_ex_return_2'(s('type.list.list'(X0),happ(s(fun('type.list.list'(X2),'type.list.list'(X0)),happ(s(fun(fun(X2,X0),fun('type.list.list'(X2),'type.list.list'(X0))),'const.list.MAP_0'),s(fun(X2,X0),X3))),s('type.list.list'(X2),X4))),s('type.infer_t.infer_t',happ(s(fun('type.num.num','type.infer_t.infer_t'),'const.infer_t.Infer_Tuvar_0'),s('type.num.num',X5)))))) )),
  inference(unit_resulting_resolution,[],[f180,f166,f212])).
fof(f6296,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.num.num',X0),'type.infer_t.infer_t'),'const.infer.st_ex_return_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X2))),s('type.infer_t.infer_t','const.infer_t.Infer_Tuvar_1'(s('type.num.num',X3))))) = s('type.pair.prod'('type.infer.exc'('type.num.num',X0),'type.infer_t.infer_t'),'const.pair.,_2'(s('type.infer.exc'('type.num.num',X0),'const.infer.Success_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X2))))),s('type.infer_t.infer_t','const.infer_t.Infer_Tuvar_1'(s('type.num.num',X3)))))) )),
  inference(forward_demodulation,[],[f6295,f175])).
fof(f6295,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.num.num',X0),'type.infer_t.infer_t'),'const.infer.st_ex_return_2'(s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.arithmetic.+_1'(s('type.num.num',X1))),s('type.num.num',X2))),s('type.infer_t.infer_t','const.infer_t.Infer_Tuvar_1'(s('type.num.num',X3))))) = s('type.pair.prod'('type.infer.exc'('type.num.num',X0),'type.infer_t.infer_t'),'const.pair.,_2'(s('type.infer.exc'('type.num.num',X0),'const.infer.Success_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X2))))),s('type.infer_t.infer_t','const.infer_t.Infer_Tuvar_1'(s('type.num.num',X3)))))) )),
  inference(forward_demodulation,[],[f5508,f166])).
fof(f5508,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.num.num',X0),'type.infer_t.infer_t'),'const.pair.,_2'(s('type.infer.exc'('type.num.num',X0),'const.infer.Success_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X2))))),s('type.infer_t.infer_t','const.infer_t.Infer_Tuvar_1'(s('type.num.num',X3))))) = s('type.pair.prod'('type.infer.exc'('type.num.num',X0),'type.infer_t.infer_t'),'const.infer.st_ex_return_2'(s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.arithmetic.+_1'(s('type.num.num',X1))),s('type.num.num',X2))),s('type.infer_t.infer_t',happ(s(fun('type.num.num','type.infer_t.infer_t'),'const.infer_t.Infer_Tuvar_0'),s('type.num.num',X3)))))) )),
  inference(unit_resulting_resolution,[],[f175,f166,f212])).
fof(f6294,plain,(
  ( ! [X2,X0,X1] : (s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer_t.infer_t'),'const.infer.st_ex_return_2'(s('type.infer_t.infer_t','const.infer_t.Infer_Tuvar_1'(s('type.num.num',X1))),s('type.infer_t.infer_t','const.infer_t.Infer_Tuvar_1'(s('type.num.num',X2))))) = s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer_t.infer_t'),'const.pair.,_2'(s('type.infer.exc'('type.infer_t.infer_t',X0),'const.infer.Success_1'(s('type.infer_t.infer_t','const.infer_t.Infer_Tuvar_1'(s('type.num.num',X1))))),s('type.infer_t.infer_t','const.infer_t.Infer_Tuvar_1'(s('type.num.num',X2)))))) )),
  inference(forward_demodulation,[],[f6293,f166])).
fof(f6293,plain,(
  ( ! [X2,X0,X1] : (s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer_t.infer_t'),'const.infer.st_ex_return_2'(s('type.infer_t.infer_t',happ(s(fun('type.num.num','type.infer_t.infer_t'),'const.infer_t.Infer_Tuvar_0'),s('type.num.num',X1))),s('type.infer_t.infer_t','const.infer_t.Infer_Tuvar_1'(s('type.num.num',X2))))) = s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer_t.infer_t'),'const.pair.,_2'(s('type.infer.exc'('type.infer_t.infer_t',X0),'const.infer.Success_1'(s('type.infer_t.infer_t','const.infer_t.Infer_Tuvar_1'(s('type.num.num',X1))))),s('type.infer_t.infer_t','const.infer_t.Infer_Tuvar_1'(s('type.num.num',X2)))))) )),
  inference(forward_demodulation,[],[f5509,f166])).
fof(f5509,plain,(
  ( ! [X2,X0,X1] : (s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer_t.infer_t'),'const.pair.,_2'(s('type.infer.exc'('type.infer_t.infer_t',X0),'const.infer.Success_1'(s('type.infer_t.infer_t','const.infer_t.Infer_Tuvar_1'(s('type.num.num',X1))))),s('type.infer_t.infer_t','const.infer_t.Infer_Tuvar_1'(s('type.num.num',X2))))) = s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer_t.infer_t'),'const.infer.st_ex_return_2'(s('type.infer_t.infer_t',happ(s(fun('type.num.num','type.infer_t.infer_t'),'const.infer_t.Infer_Tuvar_0'),s('type.num.num',X1))),s('type.infer_t.infer_t',happ(s(fun('type.num.num','type.infer_t.infer_t'),'const.infer_t.Infer_Tuvar_0'),s('type.num.num',X2)))))) )),
  inference(unit_resulting_resolution,[],[f166,f166,f212])).
fof(f6292,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer_t.infer_t'),'const.infer.st_ex_return_2'(s('type.infer_t.infer_t','const.unify.t_walkstar_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X1),s('type.infer_t.infer_t',X2))),s('type.infer_t.infer_t','const.infer_t.Infer_Tuvar_1'(s('type.num.num',X3))))) = s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer_t.infer_t'),'const.pair.,_2'(s('type.infer.exc'('type.infer_t.infer_t',X0),'const.infer.Success_1'(s('type.infer_t.infer_t','const.unify.t_walkstar_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X1),s('type.infer_t.infer_t',X2))))),s('type.infer_t.infer_t','const.infer_t.Infer_Tuvar_1'(s('type.num.num',X3)))))) )),
  inference(forward_demodulation,[],[f6291,f176])).
fof(f6291,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer_t.infer_t'),'const.pair.,_2'(s('type.infer.exc'('type.infer_t.infer_t',X0),'const.infer.Success_1'(s('type.infer_t.infer_t','const.unify.t_walkstar_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X1),s('type.infer_t.infer_t',X2))))),s('type.infer_t.infer_t','const.infer_t.Infer_Tuvar_1'(s('type.num.num',X3))))) = s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer_t.infer_t'),'const.infer.st_ex_return_2'(s('type.infer_t.infer_t',happ(s(fun('type.infer_t.infer_t','type.infer_t.infer_t'),happ(s(fun('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),fun('type.infer_t.infer_t','type.infer_t.infer_t')),'const.unify.t_walkstar_0'),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X1))),s('type.infer_t.infer_t',X2))),s('type.infer_t.infer_t','const.infer_t.Infer_Tuvar_1'(s('type.num.num',X3)))))) )),
  inference(forward_demodulation,[],[f5510,f166])).
fof(f5510,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer_t.infer_t'),'const.pair.,_2'(s('type.infer.exc'('type.infer_t.infer_t',X0),'const.infer.Success_1'(s('type.infer_t.infer_t','const.unify.t_walkstar_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X1),s('type.infer_t.infer_t',X2))))),s('type.infer_t.infer_t','const.infer_t.Infer_Tuvar_1'(s('type.num.num',X3))))) = s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer_t.infer_t'),'const.infer.st_ex_return_2'(s('type.infer_t.infer_t',happ(s(fun('type.infer_t.infer_t','type.infer_t.infer_t'),happ(s(fun('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),fun('type.infer_t.infer_t','type.infer_t.infer_t')),'const.unify.t_walkstar_0'),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X1))),s('type.infer_t.infer_t',X2))),s('type.infer_t.infer_t',happ(s(fun('type.num.num','type.infer_t.infer_t'),'const.infer_t.Infer_Tuvar_0'),s('type.num.num',X3)))))) )),
  inference(unit_resulting_resolution,[],[f176,f166,f212])).
fof(f6288,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X0),X2),'type.infer_t.infer_t'),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'(X0,X1),X0),'const.infer.read_1'(s(X0,X3))),s('type.infer_t.infer_t','const.infer_t.Infer_Tuvar_1'(s('type.num.num',X4))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X0),X2),'type.infer_t.infer_t'),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X0),X2),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'(X0,X1),X0),'const.infer.read_1'(s(X0,X3))))),s('type.infer_t.infer_t','const.infer_t.Infer_Tuvar_1'(s('type.num.num',X4)))))) )),
  inference(forward_demodulation,[],[f6287,f178])).
fof(f6287,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X0),X2),'type.infer_t.infer_t'),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X0),X2),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'(X0,X1),X0),'const.infer.read_1'(s(X0,X3))))),s('type.infer_t.infer_t','const.infer_t.Infer_Tuvar_1'(s('type.num.num',X4))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X0),X2),'type.infer_t.infer_t'),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'(X0,X1),X0),happ(s(fun(X0,'type.pair.prod'('type.infer.exc'(X0,X1),X0)),'const.infer.read_0'),s(X0,X3))),s('type.infer_t.infer_t','const.infer_t.Infer_Tuvar_1'(s('type.num.num',X4)))))) )),
  inference(forward_demodulation,[],[f5512,f166])).
fof(f5512,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X0),X2),'type.infer_t.infer_t'),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X0),X2),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'(X0,X1),X0),'const.infer.read_1'(s(X0,X3))))),s('type.infer_t.infer_t','const.infer_t.Infer_Tuvar_1'(s('type.num.num',X4))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X0),X2),'type.infer_t.infer_t'),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'(X0,X1),X0),happ(s(fun(X0,'type.pair.prod'('type.infer.exc'(X0,X1),X0)),'const.infer.read_0'),s(X0,X3))),s('type.infer_t.infer_t',happ(s(fun('type.num.num','type.infer_t.infer_t'),'const.infer_t.Infer_Tuvar_0'),s('type.num.num',X4)))))) )),
  inference(unit_resulting_resolution,[],[f178,f166,f212])).
fof(f6286,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),X2),'type.infer_t.infer_t'),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),'const.infer.fresh_uvar_1'(s('type.infer.infer_st'(X1),X3))),s('type.infer_t.infer_t','const.infer_t.Infer_Tuvar_1'(s('type.num.num',X4))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),X2),'type.infer_t.infer_t'),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),X2),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),'const.infer.fresh_uvar_1'(s('type.infer.infer_st'(X1),X3))))),s('type.infer_t.infer_t','const.infer_t.Infer_Tuvar_1'(s('type.num.num',X4)))))) )),
  inference(forward_demodulation,[],[f6285,f179])).
fof(f6285,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),X2),'type.infer_t.infer_t'),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),X2),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),'const.infer.fresh_uvar_1'(s('type.infer.infer_st'(X1),X3))))),s('type.infer_t.infer_t','const.infer_t.Infer_Tuvar_1'(s('type.num.num',X4))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),X2),'type.infer_t.infer_t'),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),happ(s(fun('type.infer.infer_st'(X1),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1))),'const.infer.fresh_uvar_0'),s('type.infer.infer_st'(X1),X3))),s('type.infer_t.infer_t','const.infer_t.Infer_Tuvar_1'(s('type.num.num',X4)))))) )),
  inference(forward_demodulation,[],[f5513,f166])).
fof(f5513,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),X2),'type.infer_t.infer_t'),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),X2),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),'const.infer.fresh_uvar_1'(s('type.infer.infer_st'(X1),X3))))),s('type.infer_t.infer_t','const.infer_t.Infer_Tuvar_1'(s('type.num.num',X4))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),X2),'type.infer_t.infer_t'),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),happ(s(fun('type.infer.infer_st'(X1),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1))),'const.infer.fresh_uvar_0'),s('type.infer.infer_st'(X1),X3))),s('type.infer_t.infer_t',happ(s(fun('type.num.num','type.infer_t.infer_t'),'const.infer_t.Infer_Tuvar_0'),s('type.num.num',X4)))))) )),
  inference(unit_resulting_resolution,[],[f179,f166,f212])).
fof(f6284,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),'type.infer_t.infer_t'),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'(X0,X1),X2),'const.infer.failwith_2'(s(X1,X4),s(X2,X5))),s('type.infer_t.infer_t','const.infer_t.Infer_Tuvar_1'(s('type.num.num',X6))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),'type.infer_t.infer_t'),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'(X0,X1),X2),'const.infer.failwith_2'(s(X1,X4),s(X2,X5))))),s('type.infer_t.infer_t','const.infer_t.Infer_Tuvar_1'(s('type.num.num',X6)))))) )),
  inference(forward_demodulation,[],[f6283,f204])).
fof(f6283,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),'type.infer_t.infer_t'),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'(X0,X1),X2),'const.infer.failwith_2'(s(X1,X4),s(X2,X5))))),s('type.infer_t.infer_t','const.infer_t.Infer_Tuvar_1'(s('type.num.num',X6))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),'type.infer_t.infer_t'),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'(X0,X1),X2),happ(s(fun(X2,'type.pair.prod'('type.infer.exc'(X0,X1),X2)),'const.infer.failwith_1'(s(X1,X4))),s(X2,X5))),s('type.infer_t.infer_t','const.infer_t.Infer_Tuvar_1'(s('type.num.num',X6)))))) )),
  inference(forward_demodulation,[],[f5514,f166])).
fof(f5514,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),'type.infer_t.infer_t'),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'(X0,X1),X2),'const.infer.failwith_2'(s(X1,X4),s(X2,X5))))),s('type.infer_t.infer_t','const.infer_t.Infer_Tuvar_1'(s('type.num.num',X6))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),'type.infer_t.infer_t'),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'(X0,X1),X2),happ(s(fun(X2,'type.pair.prod'('type.infer.exc'(X0,X1),X2)),'const.infer.failwith_1'(s(X1,X4))),s(X2,X5))),s('type.infer_t.infer_t',happ(s(fun('type.num.num','type.infer_t.infer_t'),'const.infer_t.Infer_Tuvar_0'),s('type.num.num',X6)))))) )),
  inference(unit_resulting_resolution,[],[f204,f166,f212])).
fof(f6282,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),X2),'type.infer_t.infer_t'),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),'const.infer.guard_3'(s(bool,X3),s(X0,X4),s(X1,X5))),s('type.infer_t.infer_t','const.infer_t.Infer_Tuvar_1'(s('type.num.num',X6))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),X2),'type.infer_t.infer_t'),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),X2),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),'const.infer.guard_3'(s(bool,X3),s(X0,X4),s(X1,X5))))),s('type.infer_t.infer_t','const.infer_t.Infer_Tuvar_1'(s('type.num.num',X6)))))) )),
  inference(forward_demodulation,[],[f6281,f183])).
fof(f6281,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),X2),'type.infer_t.infer_t'),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),X2),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),'const.infer.guard_3'(s(bool,X3),s(X0,X4),s(X1,X5))))),s('type.infer_t.infer_t','const.infer_t.Infer_Tuvar_1'(s('type.num.num',X6))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),X2),'type.infer_t.infer_t'),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),happ(s(fun(X1,'type.pair.prod'('type.infer.exc'('type.one.one',X0),X1)),'const.infer.guard_2'(s(bool,X3),s(X0,X4))),s(X1,X5))),s('type.infer_t.infer_t','const.infer_t.Infer_Tuvar_1'(s('type.num.num',X6)))))) )),
  inference(forward_demodulation,[],[f5515,f166])).
fof(f5515,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),X2),'type.infer_t.infer_t'),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),X2),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),'const.infer.guard_3'(s(bool,X3),s(X0,X4),s(X1,X5))))),s('type.infer_t.infer_t','const.infer_t.Infer_Tuvar_1'(s('type.num.num',X6))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),X2),'type.infer_t.infer_t'),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),happ(s(fun(X1,'type.pair.prod'('type.infer.exc'('type.one.one',X0),X1)),'const.infer.guard_2'(s(bool,X3),s(X0,X4))),s(X1,X5))),s('type.infer_t.infer_t',happ(s(fun('type.num.num','type.infer_t.infer_t'),'const.infer_t.Infer_Tuvar_0'),s('type.num.num',X6)))))) )),
  inference(unit_resulting_resolution,[],[f183,f166,f212])).
fof(f6278,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'(X0,X1),'type.infer_t.infer_t'),'const.infer.st_ex_return_2'(s(X0,happ(s(fun(X3,X0),X4),s(X3,happ(s(fun(X2,X3),X5),s(X2,X6))))),s('type.infer_t.infer_t','const.unify.t_walkstar_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X7),s('type.infer_t.infer_t',X8))))) = s('type.pair.prod'('type.infer.exc'(X0,X1),'type.infer_t.infer_t'),'const.pair.,_2'(s('type.infer.exc'(X0,X1),'const.infer.Success_1'(s(X0,happ(s(fun(X2,X0),'_dst_x0x1_2'(s(fun(X3,X0),X4),s(fun(X2,X3),X5))),s(X2,X6))))),s('type.infer_t.infer_t','const.unify.t_walkstar_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X7),s('type.infer_t.infer_t',X8)))))) )),
  inference(forward_demodulation,[],[f5517,f176])).
fof(f5517,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'(X0,X1),'type.infer_t.infer_t'),'const.pair.,_2'(s('type.infer.exc'(X0,X1),'const.infer.Success_1'(s(X0,happ(s(fun(X2,X0),'_dst_x0x1_2'(s(fun(X3,X0),X4),s(fun(X2,X3),X5))),s(X2,X6))))),s('type.infer_t.infer_t','const.unify.t_walkstar_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X7),s('type.infer_t.infer_t',X8))))) = s('type.pair.prod'('type.infer.exc'(X0,X1),'type.infer_t.infer_t'),'const.infer.st_ex_return_2'(s(X0,happ(s(fun(X3,X0),X4),s(X3,happ(s(fun(X2,X3),X5),s(X2,X6))))),s('type.infer_t.infer_t',happ(s(fun('type.infer_t.infer_t','type.infer_t.infer_t'),happ(s(fun('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),fun('type.infer_t.infer_t','type.infer_t.infer_t')),'const.unify.t_walkstar_0'),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X7))),s('type.infer_t.infer_t',X8)))))) )),
  inference(unit_resulting_resolution,[],[f206,f176,f212])).
fof(f6245,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s('type.pair.prod'('type.infer.exc'(X0,X1),'type.infer_t.infer_t'),'const.infer.st_ex_return_2'(s(X0,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(X0),X2))),s('type.infer_t.infer_t','const.unify.t_walkstar_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X3),s('type.infer_t.infer_t',X4))))) = s('type.pair.prod'('type.infer.exc'(X0,X1),'type.infer_t.infer_t'),'const.pair.,_2'(s('type.infer.exc'(X0,X1),'const.infer.Success_1'(s(X0,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(X0),X2))))),s('type.infer_t.infer_t','const.unify.t_walkstar_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X3),s('type.infer_t.infer_t',X4)))))) )),
  inference(forward_demodulation,[],[f6244,f168])).
fof(f6244,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s('type.pair.prod'('type.infer.exc'(X0,X1),'type.infer_t.infer_t'),'const.pair.,_2'(s('type.infer.exc'(X0,X1),'const.infer.Success_1'(s(X0,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(X0),X2))))),s('type.infer_t.infer_t','const.unify.t_walkstar_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X3),s('type.infer_t.infer_t',X4))))) = s('type.pair.prod'('type.infer.exc'(X0,X1),'type.infer_t.infer_t'),'const.infer.st_ex_return_2'(s(X0,happ(s(fun('type.infer.infer_st'(X0),X0),'const.infer.infer_st_subst_0'),s('type.infer.infer_st'(X0),X2))),s('type.infer_t.infer_t','const.unify.t_walkstar_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X3),s('type.infer_t.infer_t',X4)))))) )),
  inference(forward_demodulation,[],[f5538,f176])).
fof(f5538,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s('type.pair.prod'('type.infer.exc'(X0,X1),'type.infer_t.infer_t'),'const.pair.,_2'(s('type.infer.exc'(X0,X1),'const.infer.Success_1'(s(X0,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(X0),X2))))),s('type.infer_t.infer_t','const.unify.t_walkstar_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X3),s('type.infer_t.infer_t',X4))))) = s('type.pair.prod'('type.infer.exc'(X0,X1),'type.infer_t.infer_t'),'const.infer.st_ex_return_2'(s(X0,happ(s(fun('type.infer.infer_st'(X0),X0),'const.infer.infer_st_subst_0'),s('type.infer.infer_st'(X0),X2))),s('type.infer_t.infer_t',happ(s(fun('type.infer_t.infer_t','type.infer_t.infer_t'),happ(s(fun('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),fun('type.infer_t.infer_t','type.infer_t.infer_t')),'const.unify.t_walkstar_0'),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X3))),s('type.infer_t.infer_t',X4)))))) )),
  inference(unit_resulting_resolution,[],[f168,f176,f212])).
fof(f6243,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'(X0,X1),'type.infer_t.infer_t'),'const.infer.st_ex_return_2'(s(X0,happ(s(fun(X4,X0),'_dst_x0x1_2'(s(fun(X2,X0),X3),s(fun(X4,X2),X5))),s(X4,X6))),s('type.infer_t.infer_t','const.unify.t_walkstar_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X7),s('type.infer_t.infer_t',X8))))) = s('type.pair.prod'('type.infer.exc'(X0,X1),'type.infer_t.infer_t'),'const.pair.,_2'(s('type.infer.exc'(X0,X1),'const.infer.Success_1'(s(X0,happ(s(fun(X2,X0),X3),s(X2,happ(s(fun(X4,X2),X5),s(X4,X6))))))),s('type.infer_t.infer_t','const.unify.t_walkstar_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X7),s('type.infer_t.infer_t',X8)))))) )),
  inference(forward_demodulation,[],[f5539,f176])).
fof(f5539,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'(X0,X1),'type.infer_t.infer_t'),'const.pair.,_2'(s('type.infer.exc'(X0,X1),'const.infer.Success_1'(s(X0,happ(s(fun(X2,X0),X3),s(X2,happ(s(fun(X4,X2),X5),s(X4,X6))))))),s('type.infer_t.infer_t','const.unify.t_walkstar_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X7),s('type.infer_t.infer_t',X8))))) = s('type.pair.prod'('type.infer.exc'(X0,X1),'type.infer_t.infer_t'),'const.infer.st_ex_return_2'(s(X0,happ(s(fun(X4,X0),'_dst_x0x1_2'(s(fun(X2,X0),X3),s(fun(X4,X2),X5))),s(X4,X6))),s('type.infer_t.infer_t',happ(s(fun('type.infer_t.infer_t','type.infer_t.infer_t'),happ(s(fun('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),fun('type.infer_t.infer_t','type.infer_t.infer_t')),'const.unify.t_walkstar_0'),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X7))),s('type.infer_t.infer_t',X8)))))) )),
  inference(unit_resulting_resolution,[],[f206,f176,f212])).
fof(f6240,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'(fun(X0,'type.one.one'),X1),'type.infer_t.infer_t'),'const.infer.st_ex_return_2'(s(fun(X0,'type.one.one'),X5),s('type.infer_t.infer_t','const.unify.t_walkstar_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X3),s('type.infer_t.infer_t',X4))))) = s('type.pair.prod'('type.infer.exc'(fun(X0,'type.one.one'),X1),'type.infer_t.infer_t'),'const.pair.,_2'(s('type.infer.exc'(fun(X0,'type.one.one'),X1),'const.infer.Success_1'(s(fun(X0,'type.one.one'),X2))),s('type.infer_t.infer_t','const.unify.t_walkstar_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X3),s('type.infer_t.infer_t',X4)))))) )),
  inference(forward_demodulation,[],[f5541,f176])).
fof(f5541,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'(fun(X0,'type.one.one'),X1),'type.infer_t.infer_t'),'const.pair.,_2'(s('type.infer.exc'(fun(X0,'type.one.one'),X1),'const.infer.Success_1'(s(fun(X0,'type.one.one'),X2))),s('type.infer_t.infer_t','const.unify.t_walkstar_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X3),s('type.infer_t.infer_t',X4))))) = s('type.pair.prod'('type.infer.exc'(fun(X0,'type.one.one'),X1),'type.infer_t.infer_t'),'const.infer.st_ex_return_2'(s(fun(X0,'type.one.one'),X5),s('type.infer_t.infer_t',happ(s(fun('type.infer_t.infer_t','type.infer_t.infer_t'),happ(s(fun('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),fun('type.infer_t.infer_t','type.infer_t.infer_t')),'const.unify.t_walkstar_0'),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X3))),s('type.infer_t.infer_t',X4)))))) )),
  inference(unit_resulting_resolution,[],[f605,f176,f212])).
fof(f6239,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,'type.one.one')),X2),'type.infer_t.infer_t'),'const.infer.st_ex_return_2'(s(fun(X0,fun(X1,'type.one.one')),X6),s('type.infer_t.infer_t','const.unify.t_walkstar_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X4),s('type.infer_t.infer_t',X5))))) = s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,'type.one.one')),X2),'type.infer_t.infer_t'),'const.pair.,_2'(s('type.infer.exc'(fun(X0,fun(X1,'type.one.one')),X2),'const.infer.Success_1'(s(fun(X0,fun(X1,'type.one.one')),X3))),s('type.infer_t.infer_t','const.unify.t_walkstar_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X4),s('type.infer_t.infer_t',X5)))))) )),
  inference(forward_demodulation,[],[f5542,f176])).
fof(f5542,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,'type.one.one')),X2),'type.infer_t.infer_t'),'const.pair.,_2'(s('type.infer.exc'(fun(X0,fun(X1,'type.one.one')),X2),'const.infer.Success_1'(s(fun(X0,fun(X1,'type.one.one')),X3))),s('type.infer_t.infer_t','const.unify.t_walkstar_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X4),s('type.infer_t.infer_t',X5))))) = s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,'type.one.one')),X2),'type.infer_t.infer_t'),'const.infer.st_ex_return_2'(s(fun(X0,fun(X1,'type.one.one')),X6),s('type.infer_t.infer_t',happ(s(fun('type.infer_t.infer_t','type.infer_t.infer_t'),happ(s(fun('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),fun('type.infer_t.infer_t','type.infer_t.infer_t')),'const.unify.t_walkstar_0'),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X4))),s('type.infer_t.infer_t',X5)))))) )),
  inference(unit_resulting_resolution,[],[f724,f176,f212])).
fof(f6238,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,fun(X2,'type.one.one'))),X3),'type.infer_t.infer_t'),'const.infer.st_ex_return_2'(s(fun(X0,fun(X1,fun(X2,'type.one.one'))),X7),s('type.infer_t.infer_t','const.unify.t_walkstar_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X5),s('type.infer_t.infer_t',X6))))) = s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,fun(X2,'type.one.one'))),X3),'type.infer_t.infer_t'),'const.pair.,_2'(s('type.infer.exc'(fun(X0,fun(X1,fun(X2,'type.one.one'))),X3),'const.infer.Success_1'(s(fun(X0,fun(X1,fun(X2,'type.one.one'))),X4))),s('type.infer_t.infer_t','const.unify.t_walkstar_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X5),s('type.infer_t.infer_t',X6)))))) )),
  inference(forward_demodulation,[],[f5543,f176])).
fof(f5543,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,fun(X2,'type.one.one'))),X3),'type.infer_t.infer_t'),'const.pair.,_2'(s('type.infer.exc'(fun(X0,fun(X1,fun(X2,'type.one.one'))),X3),'const.infer.Success_1'(s(fun(X0,fun(X1,fun(X2,'type.one.one'))),X4))),s('type.infer_t.infer_t','const.unify.t_walkstar_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X5),s('type.infer_t.infer_t',X6))))) = s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,fun(X2,'type.one.one'))),X3),'type.infer_t.infer_t'),'const.infer.st_ex_return_2'(s(fun(X0,fun(X1,fun(X2,'type.one.one'))),X7),s('type.infer_t.infer_t',happ(s(fun('type.infer_t.infer_t','type.infer_t.infer_t'),happ(s(fun('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),fun('type.infer_t.infer_t','type.infer_t.infer_t')),'const.unify.t_walkstar_0'),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X5))),s('type.infer_t.infer_t',X6)))))) )),
  inference(unit_resulting_resolution,[],[f752,f176,f212])).
fof(f6237,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,fun(X2,fun(X3,'type.one.one')))),X4),'type.infer_t.infer_t'),'const.infer.st_ex_return_2'(s(fun(X0,fun(X1,fun(X2,fun(X3,'type.one.one')))),X8),s('type.infer_t.infer_t','const.unify.t_walkstar_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X6),s('type.infer_t.infer_t',X7))))) = s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,fun(X2,fun(X3,'type.one.one')))),X4),'type.infer_t.infer_t'),'const.pair.,_2'(s('type.infer.exc'(fun(X0,fun(X1,fun(X2,fun(X3,'type.one.one')))),X4),'const.infer.Success_1'(s(fun(X0,fun(X1,fun(X2,fun(X3,'type.one.one')))),X5))),s('type.infer_t.infer_t','const.unify.t_walkstar_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X6),s('type.infer_t.infer_t',X7)))))) )),
  inference(forward_demodulation,[],[f5544,f176])).
fof(f5544,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,fun(X2,fun(X3,'type.one.one')))),X4),'type.infer_t.infer_t'),'const.pair.,_2'(s('type.infer.exc'(fun(X0,fun(X1,fun(X2,fun(X3,'type.one.one')))),X4),'const.infer.Success_1'(s(fun(X0,fun(X1,fun(X2,fun(X3,'type.one.one')))),X5))),s('type.infer_t.infer_t','const.unify.t_walkstar_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X6),s('type.infer_t.infer_t',X7))))) = s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,fun(X2,fun(X3,'type.one.one')))),X4),'type.infer_t.infer_t'),'const.infer.st_ex_return_2'(s(fun(X0,fun(X1,fun(X2,fun(X3,'type.one.one')))),X8),s('type.infer_t.infer_t',happ(s(fun('type.infer_t.infer_t','type.infer_t.infer_t'),happ(s(fun('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),fun('type.infer_t.infer_t','type.infer_t.infer_t')),'const.unify.t_walkstar_0'),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X6))),s('type.infer_t.infer_t',X7)))))) )),
  inference(unit_resulting_resolution,[],[f787,f176,f212])).
fof(f6236,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1,X9] : (s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,fun(X2,fun(X3,fun(X4,'type.one.one'))))),X5),'type.infer_t.infer_t'),'const.infer.st_ex_return_2'(s(fun(X0,fun(X1,fun(X2,fun(X3,fun(X4,'type.one.one'))))),X6),s('type.infer_t.infer_t','const.unify.t_walkstar_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X7),s('type.infer_t.infer_t',X8))))) = s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,fun(X2,fun(X3,fun(X4,'type.one.one'))))),X5),'type.infer_t.infer_t'),'const.pair.,_2'(s('type.infer.exc'(fun(X0,fun(X1,fun(X2,fun(X3,fun(X4,'type.one.one'))))),X5),'const.infer.Success_1'(s(fun(X0,fun(X1,fun(X2,fun(X3,fun(X4,'type.one.one'))))),X9))),s('type.infer_t.infer_t','const.unify.t_walkstar_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X7),s('type.infer_t.infer_t',X8)))))) )),
  inference(forward_demodulation,[],[f5545,f176])).
fof(f5545,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1,X9] : (s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,fun(X2,fun(X3,fun(X4,'type.one.one'))))),X5),'type.infer_t.infer_t'),'const.infer.st_ex_return_2'(s(fun(X0,fun(X1,fun(X2,fun(X3,fun(X4,'type.one.one'))))),X6),s('type.infer_t.infer_t',happ(s(fun('type.infer_t.infer_t','type.infer_t.infer_t'),happ(s(fun('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),fun('type.infer_t.infer_t','type.infer_t.infer_t')),'const.unify.t_walkstar_0'),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X7))),s('type.infer_t.infer_t',X8))))) = s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,fun(X2,fun(X3,fun(X4,'type.one.one'))))),X5),'type.infer_t.infer_t'),'const.pair.,_2'(s('type.infer.exc'(fun(X0,fun(X1,fun(X2,fun(X3,fun(X4,'type.one.one'))))),X5),'const.infer.Success_1'(s(fun(X0,fun(X1,fun(X2,fun(X3,fun(X4,'type.one.one'))))),X9))),s('type.infer_t.infer_t','const.unify.t_walkstar_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X7),s('type.infer_t.infer_t',X8)))))) )),
  inference(unit_resulting_resolution,[],[f815,f176,f212])).
fof(f6233,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.one.one',X0),'type.infer_t.infer_t'),'const.infer.st_ex_return_2'(s('type.one.one',X4),s('type.infer_t.infer_t','const.unify.t_walkstar_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X2),s('type.infer_t.infer_t',X3))))) = s('type.pair.prod'('type.infer.exc'('type.one.one',X0),'type.infer_t.infer_t'),'const.pair.,_2'(s('type.infer.exc'('type.one.one',X0),'const.infer.Success_1'(s('type.one.one',X1))),s('type.infer_t.infer_t','const.unify.t_walkstar_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X2),s('type.infer_t.infer_t',X3)))))) )),
  inference(forward_demodulation,[],[f5548,f176])).
fof(f5548,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.one.one',X0),'type.infer_t.infer_t'),'const.pair.,_2'(s('type.infer.exc'('type.one.one',X0),'const.infer.Success_1'(s('type.one.one',X1))),s('type.infer_t.infer_t','const.unify.t_walkstar_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X2),s('type.infer_t.infer_t',X3))))) = s('type.pair.prod'('type.infer.exc'('type.one.one',X0),'type.infer_t.infer_t'),'const.infer.st_ex_return_2'(s('type.one.one',X4),s('type.infer_t.infer_t',happ(s(fun('type.infer_t.infer_t','type.infer_t.infer_t'),happ(s(fun('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),fun('type.infer_t.infer_t','type.infer_t.infer_t')),'const.unify.t_walkstar_0'),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X2))),s('type.infer_t.infer_t',X3)))))) )),
  inference(unit_resulting_resolution,[],[f258,f176,f212])).
fof(f6232,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.list.list'(X0),X1),'type.infer_t.infer_t'),'const.infer.st_ex_return_2'(s('type.list.list'(X0),'const.list.MAP_2'(s(fun(X2,X0),X3),s('type.list.list'(X2),X4))),s('type.infer_t.infer_t','const.unify.t_walkstar_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X5),s('type.infer_t.infer_t',X6))))) = s('type.pair.prod'('type.infer.exc'('type.list.list'(X0),X1),'type.infer_t.infer_t'),'const.pair.,_2'(s('type.infer.exc'('type.list.list'(X0),X1),'const.infer.Success_1'(s('type.list.list'(X0),'const.list.MAP_2'(s(fun(X2,X0),X3),s('type.list.list'(X2),X4))))),s('type.infer_t.infer_t','const.unify.t_walkstar_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X5),s('type.infer_t.infer_t',X6)))))) )),
  inference(forward_demodulation,[],[f6231,f180])).
fof(f6231,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.list.list'(X0),X1),'type.infer_t.infer_t'),'const.pair.,_2'(s('type.infer.exc'('type.list.list'(X0),X1),'const.infer.Success_1'(s('type.list.list'(X0),'const.list.MAP_2'(s(fun(X2,X0),X3),s('type.list.list'(X2),X4))))),s('type.infer_t.infer_t','const.unify.t_walkstar_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X5),s('type.infer_t.infer_t',X6))))) = s('type.pair.prod'('type.infer.exc'('type.list.list'(X0),X1),'type.infer_t.infer_t'),'const.infer.st_ex_return_2'(s('type.list.list'(X0),happ(s(fun('type.list.list'(X2),'type.list.list'(X0)),happ(s(fun(fun(X2,X0),fun('type.list.list'(X2),'type.list.list'(X0))),'const.list.MAP_0'),s(fun(X2,X0),X3))),s('type.list.list'(X2),X4))),s('type.infer_t.infer_t','const.unify.t_walkstar_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X5),s('type.infer_t.infer_t',X6)))))) )),
  inference(forward_demodulation,[],[f5549,f176])).
fof(f5549,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.list.list'(X0),X1),'type.infer_t.infer_t'),'const.pair.,_2'(s('type.infer.exc'('type.list.list'(X0),X1),'const.infer.Success_1'(s('type.list.list'(X0),'const.list.MAP_2'(s(fun(X2,X0),X3),s('type.list.list'(X2),X4))))),s('type.infer_t.infer_t','const.unify.t_walkstar_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X5),s('type.infer_t.infer_t',X6))))) = s('type.pair.prod'('type.infer.exc'('type.list.list'(X0),X1),'type.infer_t.infer_t'),'const.infer.st_ex_return_2'(s('type.list.list'(X0),happ(s(fun('type.list.list'(X2),'type.list.list'(X0)),happ(s(fun(fun(X2,X0),fun('type.list.list'(X2),'type.list.list'(X0))),'const.list.MAP_0'),s(fun(X2,X0),X3))),s('type.list.list'(X2),X4))),s('type.infer_t.infer_t',happ(s(fun('type.infer_t.infer_t','type.infer_t.infer_t'),happ(s(fun('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),fun('type.infer_t.infer_t','type.infer_t.infer_t')),'const.unify.t_walkstar_0'),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X5))),s('type.infer_t.infer_t',X6)))))) )),
  inference(unit_resulting_resolution,[],[f180,f176,f212])).
fof(f6226,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.num.num',X0),'type.infer_t.infer_t'),'const.infer.st_ex_return_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X2))),s('type.infer_t.infer_t','const.unify.t_walkstar_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X3),s('type.infer_t.infer_t',X4))))) = s('type.pair.prod'('type.infer.exc'('type.num.num',X0),'type.infer_t.infer_t'),'const.pair.,_2'(s('type.infer.exc'('type.num.num',X0),'const.infer.Success_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X2))))),s('type.infer_t.infer_t','const.unify.t_walkstar_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X3),s('type.infer_t.infer_t',X4)))))) )),
  inference(forward_demodulation,[],[f6225,f175])).
fof(f6225,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.num.num',X0),'type.infer_t.infer_t'),'const.infer.st_ex_return_2'(s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.arithmetic.+_1'(s('type.num.num',X1))),s('type.num.num',X2))),s('type.infer_t.infer_t','const.unify.t_walkstar_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X3),s('type.infer_t.infer_t',X4))))) = s('type.pair.prod'('type.infer.exc'('type.num.num',X0),'type.infer_t.infer_t'),'const.pair.,_2'(s('type.infer.exc'('type.num.num',X0),'const.infer.Success_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X2))))),s('type.infer_t.infer_t','const.unify.t_walkstar_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X3),s('type.infer_t.infer_t',X4)))))) )),
  inference(forward_demodulation,[],[f5552,f176])).
fof(f5552,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.num.num',X0),'type.infer_t.infer_t'),'const.pair.,_2'(s('type.infer.exc'('type.num.num',X0),'const.infer.Success_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X2))))),s('type.infer_t.infer_t','const.unify.t_walkstar_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X3),s('type.infer_t.infer_t',X4))))) = s('type.pair.prod'('type.infer.exc'('type.num.num',X0),'type.infer_t.infer_t'),'const.infer.st_ex_return_2'(s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.arithmetic.+_1'(s('type.num.num',X1))),s('type.num.num',X2))),s('type.infer_t.infer_t',happ(s(fun('type.infer_t.infer_t','type.infer_t.infer_t'),happ(s(fun('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),fun('type.infer_t.infer_t','type.infer_t.infer_t')),'const.unify.t_walkstar_0'),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X3))),s('type.infer_t.infer_t',X4)))))) )),
  inference(unit_resulting_resolution,[],[f175,f176,f212])).
fof(f6224,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer_t.infer_t'),'const.infer.st_ex_return_2'(s('type.infer_t.infer_t','const.infer_t.Infer_Tuvar_1'(s('type.num.num',X1))),s('type.infer_t.infer_t','const.unify.t_walkstar_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X2),s('type.infer_t.infer_t',X3))))) = s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer_t.infer_t'),'const.pair.,_2'(s('type.infer.exc'('type.infer_t.infer_t',X0),'const.infer.Success_1'(s('type.infer_t.infer_t','const.infer_t.Infer_Tuvar_1'(s('type.num.num',X1))))),s('type.infer_t.infer_t','const.unify.t_walkstar_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X2),s('type.infer_t.infer_t',X3)))))) )),
  inference(forward_demodulation,[],[f6223,f166])).
fof(f6223,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer_t.infer_t'),'const.infer.st_ex_return_2'(s('type.infer_t.infer_t',happ(s(fun('type.num.num','type.infer_t.infer_t'),'const.infer_t.Infer_Tuvar_0'),s('type.num.num',X1))),s('type.infer_t.infer_t','const.unify.t_walkstar_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X2),s('type.infer_t.infer_t',X3))))) = s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer_t.infer_t'),'const.pair.,_2'(s('type.infer.exc'('type.infer_t.infer_t',X0),'const.infer.Success_1'(s('type.infer_t.infer_t','const.infer_t.Infer_Tuvar_1'(s('type.num.num',X1))))),s('type.infer_t.infer_t','const.unify.t_walkstar_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X2),s('type.infer_t.infer_t',X3)))))) )),
  inference(forward_demodulation,[],[f5553,f176])).
fof(f5553,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer_t.infer_t'),'const.pair.,_2'(s('type.infer.exc'('type.infer_t.infer_t',X0),'const.infer.Success_1'(s('type.infer_t.infer_t','const.infer_t.Infer_Tuvar_1'(s('type.num.num',X1))))),s('type.infer_t.infer_t','const.unify.t_walkstar_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X2),s('type.infer_t.infer_t',X3))))) = s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer_t.infer_t'),'const.infer.st_ex_return_2'(s('type.infer_t.infer_t',happ(s(fun('type.num.num','type.infer_t.infer_t'),'const.infer_t.Infer_Tuvar_0'),s('type.num.num',X1))),s('type.infer_t.infer_t',happ(s(fun('type.infer_t.infer_t','type.infer_t.infer_t'),happ(s(fun('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),fun('type.infer_t.infer_t','type.infer_t.infer_t')),'const.unify.t_walkstar_0'),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X2))),s('type.infer_t.infer_t',X3)))))) )),
  inference(unit_resulting_resolution,[],[f166,f176,f212])).
fof(f6222,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer_t.infer_t'),'const.infer.st_ex_return_2'(s('type.infer_t.infer_t','const.unify.t_walkstar_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X1),s('type.infer_t.infer_t',X2))),s('type.infer_t.infer_t','const.unify.t_walkstar_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X3),s('type.infer_t.infer_t',X4))))) = s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer_t.infer_t'),'const.pair.,_2'(s('type.infer.exc'('type.infer_t.infer_t',X0),'const.infer.Success_1'(s('type.infer_t.infer_t','const.unify.t_walkstar_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X1),s('type.infer_t.infer_t',X2))))),s('type.infer_t.infer_t','const.unify.t_walkstar_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X3),s('type.infer_t.infer_t',X4)))))) )),
  inference(forward_demodulation,[],[f6221,f176])).
fof(f6221,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer_t.infer_t'),'const.pair.,_2'(s('type.infer.exc'('type.infer_t.infer_t',X0),'const.infer.Success_1'(s('type.infer_t.infer_t','const.unify.t_walkstar_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X1),s('type.infer_t.infer_t',X2))))),s('type.infer_t.infer_t','const.unify.t_walkstar_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X3),s('type.infer_t.infer_t',X4))))) = s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer_t.infer_t'),'const.infer.st_ex_return_2'(s('type.infer_t.infer_t',happ(s(fun('type.infer_t.infer_t','type.infer_t.infer_t'),happ(s(fun('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),fun('type.infer_t.infer_t','type.infer_t.infer_t')),'const.unify.t_walkstar_0'),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X1))),s('type.infer_t.infer_t',X2))),s('type.infer_t.infer_t','const.unify.t_walkstar_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X3),s('type.infer_t.infer_t',X4)))))) )),
  inference(forward_demodulation,[],[f5554,f176])).
fof(f5554,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer_t.infer_t'),'const.pair.,_2'(s('type.infer.exc'('type.infer_t.infer_t',X0),'const.infer.Success_1'(s('type.infer_t.infer_t','const.unify.t_walkstar_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X1),s('type.infer_t.infer_t',X2))))),s('type.infer_t.infer_t','const.unify.t_walkstar_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X3),s('type.infer_t.infer_t',X4))))) = s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer_t.infer_t'),'const.infer.st_ex_return_2'(s('type.infer_t.infer_t',happ(s(fun('type.infer_t.infer_t','type.infer_t.infer_t'),happ(s(fun('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),fun('type.infer_t.infer_t','type.infer_t.infer_t')),'const.unify.t_walkstar_0'),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X1))),s('type.infer_t.infer_t',X2))),s('type.infer_t.infer_t',happ(s(fun('type.infer_t.infer_t','type.infer_t.infer_t'),happ(s(fun('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),fun('type.infer_t.infer_t','type.infer_t.infer_t')),'const.unify.t_walkstar_0'),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X3))),s('type.infer_t.infer_t',X4)))))) )),
  inference(unit_resulting_resolution,[],[f176,f176,f212])).
fof(f6218,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X0),X2),'type.infer_t.infer_t'),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'(X0,X1),X0),'const.infer.read_1'(s(X0,X3))),s('type.infer_t.infer_t','const.unify.t_walkstar_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X4),s('type.infer_t.infer_t',X5))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X0),X2),'type.infer_t.infer_t'),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X0),X2),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'(X0,X1),X0),'const.infer.read_1'(s(X0,X3))))),s('type.infer_t.infer_t','const.unify.t_walkstar_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X4),s('type.infer_t.infer_t',X5)))))) )),
  inference(forward_demodulation,[],[f6217,f178])).
fof(f6217,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X0),X2),'type.infer_t.infer_t'),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X0),X2),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'(X0,X1),X0),'const.infer.read_1'(s(X0,X3))))),s('type.infer_t.infer_t','const.unify.t_walkstar_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X4),s('type.infer_t.infer_t',X5))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X0),X2),'type.infer_t.infer_t'),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'(X0,X1),X0),happ(s(fun(X0,'type.pair.prod'('type.infer.exc'(X0,X1),X0)),'const.infer.read_0'),s(X0,X3))),s('type.infer_t.infer_t','const.unify.t_walkstar_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X4),s('type.infer_t.infer_t',X5)))))) )),
  inference(forward_demodulation,[],[f5556,f176])).
fof(f5556,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X0),X2),'type.infer_t.infer_t'),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X0),X2),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'(X0,X1),X0),'const.infer.read_1'(s(X0,X3))))),s('type.infer_t.infer_t','const.unify.t_walkstar_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X4),s('type.infer_t.infer_t',X5))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X0),X2),'type.infer_t.infer_t'),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'(X0,X1),X0),happ(s(fun(X0,'type.pair.prod'('type.infer.exc'(X0,X1),X0)),'const.infer.read_0'),s(X0,X3))),s('type.infer_t.infer_t',happ(s(fun('type.infer_t.infer_t','type.infer_t.infer_t'),happ(s(fun('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),fun('type.infer_t.infer_t','type.infer_t.infer_t')),'const.unify.t_walkstar_0'),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X4))),s('type.infer_t.infer_t',X5)))))) )),
  inference(unit_resulting_resolution,[],[f178,f176,f212])).
fof(f6216,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),X2),'type.infer_t.infer_t'),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),'const.infer.fresh_uvar_1'(s('type.infer.infer_st'(X1),X3))),s('type.infer_t.infer_t','const.unify.t_walkstar_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X4),s('type.infer_t.infer_t',X5))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),X2),'type.infer_t.infer_t'),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),X2),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),'const.infer.fresh_uvar_1'(s('type.infer.infer_st'(X1),X3))))),s('type.infer_t.infer_t','const.unify.t_walkstar_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X4),s('type.infer_t.infer_t',X5)))))) )),
  inference(forward_demodulation,[],[f6215,f179])).
fof(f6215,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),X2),'type.infer_t.infer_t'),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),X2),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),'const.infer.fresh_uvar_1'(s('type.infer.infer_st'(X1),X3))))),s('type.infer_t.infer_t','const.unify.t_walkstar_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X4),s('type.infer_t.infer_t',X5))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),X2),'type.infer_t.infer_t'),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),happ(s(fun('type.infer.infer_st'(X1),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1))),'const.infer.fresh_uvar_0'),s('type.infer.infer_st'(X1),X3))),s('type.infer_t.infer_t','const.unify.t_walkstar_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X4),s('type.infer_t.infer_t',X5)))))) )),
  inference(forward_demodulation,[],[f5557,f176])).
fof(f5557,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),X2),'type.infer_t.infer_t'),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),X2),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),'const.infer.fresh_uvar_1'(s('type.infer.infer_st'(X1),X3))))),s('type.infer_t.infer_t','const.unify.t_walkstar_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X4),s('type.infer_t.infer_t',X5))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),X2),'type.infer_t.infer_t'),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),happ(s(fun('type.infer.infer_st'(X1),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1))),'const.infer.fresh_uvar_0'),s('type.infer.infer_st'(X1),X3))),s('type.infer_t.infer_t',happ(s(fun('type.infer_t.infer_t','type.infer_t.infer_t'),happ(s(fun('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),fun('type.infer_t.infer_t','type.infer_t.infer_t')),'const.unify.t_walkstar_0'),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X4))),s('type.infer_t.infer_t',X5)))))) )),
  inference(unit_resulting_resolution,[],[f179,f176,f212])).
fof(f6214,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),'type.infer_t.infer_t'),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'(X0,X1),X2),'const.infer.failwith_2'(s(X1,X4),s(X2,X5))),s('type.infer_t.infer_t','const.unify.t_walkstar_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X6),s('type.infer_t.infer_t',X7))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),'type.infer_t.infer_t'),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'(X0,X1),X2),'const.infer.failwith_2'(s(X1,X4),s(X2,X5))))),s('type.infer_t.infer_t','const.unify.t_walkstar_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X6),s('type.infer_t.infer_t',X7)))))) )),
  inference(forward_demodulation,[],[f6213,f204])).
fof(f6213,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),'type.infer_t.infer_t'),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'(X0,X1),X2),'const.infer.failwith_2'(s(X1,X4),s(X2,X5))))),s('type.infer_t.infer_t','const.unify.t_walkstar_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X6),s('type.infer_t.infer_t',X7))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),'type.infer_t.infer_t'),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'(X0,X1),X2),happ(s(fun(X2,'type.pair.prod'('type.infer.exc'(X0,X1),X2)),'const.infer.failwith_1'(s(X1,X4))),s(X2,X5))),s('type.infer_t.infer_t','const.unify.t_walkstar_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X6),s('type.infer_t.infer_t',X7)))))) )),
  inference(forward_demodulation,[],[f5558,f176])).
fof(f5558,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),'type.infer_t.infer_t'),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'(X0,X1),X2),'const.infer.failwith_2'(s(X1,X4),s(X2,X5))))),s('type.infer_t.infer_t','const.unify.t_walkstar_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X6),s('type.infer_t.infer_t',X7))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),'type.infer_t.infer_t'),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'(X0,X1),X2),happ(s(fun(X2,'type.pair.prod'('type.infer.exc'(X0,X1),X2)),'const.infer.failwith_1'(s(X1,X4))),s(X2,X5))),s('type.infer_t.infer_t',happ(s(fun('type.infer_t.infer_t','type.infer_t.infer_t'),happ(s(fun('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),fun('type.infer_t.infer_t','type.infer_t.infer_t')),'const.unify.t_walkstar_0'),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X6))),s('type.infer_t.infer_t',X7)))))) )),
  inference(unit_resulting_resolution,[],[f204,f176,f212])).
fof(f6212,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),X2),'type.infer_t.infer_t'),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),'const.infer.guard_3'(s(bool,X3),s(X0,X4),s(X1,X5))),s('type.infer_t.infer_t','const.unify.t_walkstar_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X6),s('type.infer_t.infer_t',X7))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),X2),'type.infer_t.infer_t'),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),X2),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),'const.infer.guard_3'(s(bool,X3),s(X0,X4),s(X1,X5))))),s('type.infer_t.infer_t','const.unify.t_walkstar_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X6),s('type.infer_t.infer_t',X7)))))) )),
  inference(forward_demodulation,[],[f6211,f183])).
fof(f6211,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),X2),'type.infer_t.infer_t'),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),X2),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),'const.infer.guard_3'(s(bool,X3),s(X0,X4),s(X1,X5))))),s('type.infer_t.infer_t','const.unify.t_walkstar_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X6),s('type.infer_t.infer_t',X7))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),X2),'type.infer_t.infer_t'),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),happ(s(fun(X1,'type.pair.prod'('type.infer.exc'('type.one.one',X0),X1)),'const.infer.guard_2'(s(bool,X3),s(X0,X4))),s(X1,X5))),s('type.infer_t.infer_t','const.unify.t_walkstar_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X6),s('type.infer_t.infer_t',X7)))))) )),
  inference(forward_demodulation,[],[f5559,f176])).
fof(f5559,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),X2),'type.infer_t.infer_t'),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),X2),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),'const.infer.guard_3'(s(bool,X3),s(X0,X4),s(X1,X5))))),s('type.infer_t.infer_t','const.unify.t_walkstar_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X6),s('type.infer_t.infer_t',X7))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),X2),'type.infer_t.infer_t'),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),happ(s(fun(X1,'type.pair.prod'('type.infer.exc'('type.one.one',X0),X1)),'const.infer.guard_2'(s(bool,X3),s(X0,X4))),s(X1,X5))),s('type.infer_t.infer_t',happ(s(fun('type.infer_t.infer_t','type.infer_t.infer_t'),happ(s(fun('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),fun('type.infer_t.infer_t','type.infer_t.infer_t')),'const.unify.t_walkstar_0'),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X6))),s('type.infer_t.infer_t',X7)))))) )),
  inference(unit_resulting_resolution,[],[f183,f176,f212])).
fof(f6138,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1,X9] : (s('type.pair.prod'('type.infer.exc'(X0,X1),'type.pair.prod'('type.infer.exc'(X2,X3),X2)),'const.infer.st_ex_return_2'(s(X0,happ(s(fun(X5,X0),X6),s(X5,happ(s(fun(X4,X5),X7),s(X4,X8))))),s('type.pair.prod'('type.infer.exc'(X2,X3),X2),'const.infer.read_1'(s(X2,X9))))) = s('type.pair.prod'('type.infer.exc'(X0,X1),'type.pair.prod'('type.infer.exc'(X2,X3),X2)),'const.pair.,_2'(s('type.infer.exc'(X0,X1),'const.infer.Success_1'(s(X0,happ(s(fun(X4,X0),'_dst_x0x1_2'(s(fun(X5,X0),X6),s(fun(X4,X5),X7))),s(X4,X8))))),s('type.pair.prod'('type.infer.exc'(X2,X3),X2),'const.infer.read_1'(s(X2,X9)))))) )),
  inference(forward_demodulation,[],[f5605,f178])).
fof(f5605,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1,X9] : (s('type.pair.prod'('type.infer.exc'(X0,X1),'type.pair.prod'('type.infer.exc'(X2,X3),X2)),'const.pair.,_2'(s('type.infer.exc'(X0,X1),'const.infer.Success_1'(s(X0,happ(s(fun(X4,X0),'_dst_x0x1_2'(s(fun(X5,X0),X6),s(fun(X4,X5),X7))),s(X4,X8))))),s('type.pair.prod'('type.infer.exc'(X2,X3),X2),'const.infer.read_1'(s(X2,X9))))) = s('type.pair.prod'('type.infer.exc'(X0,X1),'type.pair.prod'('type.infer.exc'(X2,X3),X2)),'const.infer.st_ex_return_2'(s(X0,happ(s(fun(X5,X0),X6),s(X5,happ(s(fun(X4,X5),X7),s(X4,X8))))),s('type.pair.prod'('type.infer.exc'(X2,X3),X2),happ(s(fun(X2,'type.pair.prod'('type.infer.exc'(X2,X3),X2)),'const.infer.read_0'),s(X2,X9)))))) )),
  inference(unit_resulting_resolution,[],[f206,f178,f212])).
fof(f6105,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'(X0,X1),'type.pair.prod'('type.infer.exc'(X2,X3),X2)),'const.infer.st_ex_return_2'(s(X0,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(X0),X4))),s('type.pair.prod'('type.infer.exc'(X2,X3),X2),'const.infer.read_1'(s(X2,X5))))) = s('type.pair.prod'('type.infer.exc'(X0,X1),'type.pair.prod'('type.infer.exc'(X2,X3),X2)),'const.pair.,_2'(s('type.infer.exc'(X0,X1),'const.infer.Success_1'(s(X0,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(X0),X4))))),s('type.pair.prod'('type.infer.exc'(X2,X3),X2),'const.infer.read_1'(s(X2,X5)))))) )),
  inference(forward_demodulation,[],[f6104,f168])).
fof(f6104,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'(X0,X1),'type.pair.prod'('type.infer.exc'(X2,X3),X2)),'const.pair.,_2'(s('type.infer.exc'(X0,X1),'const.infer.Success_1'(s(X0,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(X0),X4))))),s('type.pair.prod'('type.infer.exc'(X2,X3),X2),'const.infer.read_1'(s(X2,X5))))) = s('type.pair.prod'('type.infer.exc'(X0,X1),'type.pair.prod'('type.infer.exc'(X2,X3),X2)),'const.infer.st_ex_return_2'(s(X0,happ(s(fun('type.infer.infer_st'(X0),X0),'const.infer.infer_st_subst_0'),s('type.infer.infer_st'(X0),X4))),s('type.pair.prod'('type.infer.exc'(X2,X3),X2),'const.infer.read_1'(s(X2,X5)))))) )),
  inference(forward_demodulation,[],[f5626,f178])).
fof(f5626,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'(X0,X1),'type.pair.prod'('type.infer.exc'(X2,X3),X2)),'const.pair.,_2'(s('type.infer.exc'(X0,X1),'const.infer.Success_1'(s(X0,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(X0),X4))))),s('type.pair.prod'('type.infer.exc'(X2,X3),X2),'const.infer.read_1'(s(X2,X5))))) = s('type.pair.prod'('type.infer.exc'(X0,X1),'type.pair.prod'('type.infer.exc'(X2,X3),X2)),'const.infer.st_ex_return_2'(s(X0,happ(s(fun('type.infer.infer_st'(X0),X0),'const.infer.infer_st_subst_0'),s('type.infer.infer_st'(X0),X4))),s('type.pair.prod'('type.infer.exc'(X2,X3),X2),happ(s(fun(X2,'type.pair.prod'('type.infer.exc'(X2,X3),X2)),'const.infer.read_0'),s(X2,X5)))))) )),
  inference(unit_resulting_resolution,[],[f168,f178,f212])).
fof(f6103,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1,X9] : (s('type.pair.prod'('type.infer.exc'(X0,X1),'type.pair.prod'('type.infer.exc'(X2,X3),X2)),'const.infer.st_ex_return_2'(s(X0,happ(s(fun(X6,X0),'_dst_x0x1_2'(s(fun(X4,X0),X5),s(fun(X6,X4),X7))),s(X6,X8))),s('type.pair.prod'('type.infer.exc'(X2,X3),X2),'const.infer.read_1'(s(X2,X9))))) = s('type.pair.prod'('type.infer.exc'(X0,X1),'type.pair.prod'('type.infer.exc'(X2,X3),X2)),'const.pair.,_2'(s('type.infer.exc'(X0,X1),'const.infer.Success_1'(s(X0,happ(s(fun(X4,X0),X5),s(X4,happ(s(fun(X6,X4),X7),s(X6,X8))))))),s('type.pair.prod'('type.infer.exc'(X2,X3),X2),'const.infer.read_1'(s(X2,X9)))))) )),
  inference(forward_demodulation,[],[f5627,f178])).
fof(f5627,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1,X9] : (s('type.pair.prod'('type.infer.exc'(X0,X1),'type.pair.prod'('type.infer.exc'(X2,X3),X2)),'const.pair.,_2'(s('type.infer.exc'(X0,X1),'const.infer.Success_1'(s(X0,happ(s(fun(X4,X0),X5),s(X4,happ(s(fun(X6,X4),X7),s(X6,X8))))))),s('type.pair.prod'('type.infer.exc'(X2,X3),X2),'const.infer.read_1'(s(X2,X9))))) = s('type.pair.prod'('type.infer.exc'(X0,X1),'type.pair.prod'('type.infer.exc'(X2,X3),X2)),'const.infer.st_ex_return_2'(s(X0,happ(s(fun(X6,X0),'_dst_x0x1_2'(s(fun(X4,X0),X5),s(fun(X6,X4),X7))),s(X6,X8))),s('type.pair.prod'('type.infer.exc'(X2,X3),X2),happ(s(fun(X2,'type.pair.prod'('type.infer.exc'(X2,X3),X2)),'const.infer.read_0'),s(X2,X9)))))) )),
  inference(unit_resulting_resolution,[],[f206,f178,f212])).
fof(f6100,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'(fun(X0,'type.one.one'),X1),'type.pair.prod'('type.infer.exc'(X2,X3),X2)),'const.infer.st_ex_return_2'(s(fun(X0,'type.one.one'),X6),s('type.pair.prod'('type.infer.exc'(X2,X3),X2),'const.infer.read_1'(s(X2,X5))))) = s('type.pair.prod'('type.infer.exc'(fun(X0,'type.one.one'),X1),'type.pair.prod'('type.infer.exc'(X2,X3),X2)),'const.pair.,_2'(s('type.infer.exc'(fun(X0,'type.one.one'),X1),'const.infer.Success_1'(s(fun(X0,'type.one.one'),X4))),s('type.pair.prod'('type.infer.exc'(X2,X3),X2),'const.infer.read_1'(s(X2,X5)))))) )),
  inference(forward_demodulation,[],[f5629,f178])).
fof(f5629,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'(fun(X0,'type.one.one'),X1),'type.pair.prod'('type.infer.exc'(X2,X3),X2)),'const.pair.,_2'(s('type.infer.exc'(fun(X0,'type.one.one'),X1),'const.infer.Success_1'(s(fun(X0,'type.one.one'),X4))),s('type.pair.prod'('type.infer.exc'(X2,X3),X2),'const.infer.read_1'(s(X2,X5))))) = s('type.pair.prod'('type.infer.exc'(fun(X0,'type.one.one'),X1),'type.pair.prod'('type.infer.exc'(X2,X3),X2)),'const.infer.st_ex_return_2'(s(fun(X0,'type.one.one'),X6),s('type.pair.prod'('type.infer.exc'(X2,X3),X2),happ(s(fun(X2,'type.pair.prod'('type.infer.exc'(X2,X3),X2)),'const.infer.read_0'),s(X2,X5)))))) )),
  inference(unit_resulting_resolution,[],[f605,f178,f212])).
fof(f6099,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,'type.one.one')),X2),'type.pair.prod'('type.infer.exc'(X3,X4),X3)),'const.infer.st_ex_return_2'(s(fun(X0,fun(X1,'type.one.one')),X7),s('type.pair.prod'('type.infer.exc'(X3,X4),X3),'const.infer.read_1'(s(X3,X6))))) = s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,'type.one.one')),X2),'type.pair.prod'('type.infer.exc'(X3,X4),X3)),'const.pair.,_2'(s('type.infer.exc'(fun(X0,fun(X1,'type.one.one')),X2),'const.infer.Success_1'(s(fun(X0,fun(X1,'type.one.one')),X5))),s('type.pair.prod'('type.infer.exc'(X3,X4),X3),'const.infer.read_1'(s(X3,X6)))))) )),
  inference(forward_demodulation,[],[f5630,f178])).
fof(f5630,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,'type.one.one')),X2),'type.pair.prod'('type.infer.exc'(X3,X4),X3)),'const.pair.,_2'(s('type.infer.exc'(fun(X0,fun(X1,'type.one.one')),X2),'const.infer.Success_1'(s(fun(X0,fun(X1,'type.one.one')),X5))),s('type.pair.prod'('type.infer.exc'(X3,X4),X3),'const.infer.read_1'(s(X3,X6))))) = s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,'type.one.one')),X2),'type.pair.prod'('type.infer.exc'(X3,X4),X3)),'const.infer.st_ex_return_2'(s(fun(X0,fun(X1,'type.one.one')),X7),s('type.pair.prod'('type.infer.exc'(X3,X4),X3),happ(s(fun(X3,'type.pair.prod'('type.infer.exc'(X3,X4),X3)),'const.infer.read_0'),s(X3,X6)))))) )),
  inference(unit_resulting_resolution,[],[f724,f178,f212])).
fof(f6098,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,fun(X2,'type.one.one'))),X3),'type.pair.prod'('type.infer.exc'(X4,X5),X4)),'const.infer.st_ex_return_2'(s(fun(X0,fun(X1,fun(X2,'type.one.one'))),X6),s('type.pair.prod'('type.infer.exc'(X4,X5),X4),'const.infer.read_1'(s(X4,X7))))) = s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,fun(X2,'type.one.one'))),X3),'type.pair.prod'('type.infer.exc'(X4,X5),X4)),'const.pair.,_2'(s('type.infer.exc'(fun(X0,fun(X1,fun(X2,'type.one.one'))),X3),'const.infer.Success_1'(s(fun(X0,fun(X1,fun(X2,'type.one.one'))),X8))),s('type.pair.prod'('type.infer.exc'(X4,X5),X4),'const.infer.read_1'(s(X4,X7)))))) )),
  inference(forward_demodulation,[],[f5631,f178])).
fof(f5631,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,fun(X2,'type.one.one'))),X3),'type.pair.prod'('type.infer.exc'(X4,X5),X4)),'const.infer.st_ex_return_2'(s(fun(X0,fun(X1,fun(X2,'type.one.one'))),X6),s('type.pair.prod'('type.infer.exc'(X4,X5),X4),happ(s(fun(X4,'type.pair.prod'('type.infer.exc'(X4,X5),X4)),'const.infer.read_0'),s(X4,X7))))) = s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,fun(X2,'type.one.one'))),X3),'type.pair.prod'('type.infer.exc'(X4,X5),X4)),'const.pair.,_2'(s('type.infer.exc'(fun(X0,fun(X1,fun(X2,'type.one.one'))),X3),'const.infer.Success_1'(s(fun(X0,fun(X1,fun(X2,'type.one.one'))),X8))),s('type.pair.prod'('type.infer.exc'(X4,X5),X4),'const.infer.read_1'(s(X4,X7)))))) )),
  inference(unit_resulting_resolution,[],[f752,f178,f212])).
fof(f6097,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1,X9] : (s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,fun(X2,fun(X3,'type.one.one')))),X4),'type.pair.prod'('type.infer.exc'(X5,X6),X5)),'const.infer.st_ex_return_2'(s(fun(X0,fun(X1,fun(X2,fun(X3,'type.one.one')))),X7),s('type.pair.prod'('type.infer.exc'(X5,X6),X5),'const.infer.read_1'(s(X5,X8))))) = s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,fun(X2,fun(X3,'type.one.one')))),X4),'type.pair.prod'('type.infer.exc'(X5,X6),X5)),'const.pair.,_2'(s('type.infer.exc'(fun(X0,fun(X1,fun(X2,fun(X3,'type.one.one')))),X4),'const.infer.Success_1'(s(fun(X0,fun(X1,fun(X2,fun(X3,'type.one.one')))),X9))),s('type.pair.prod'('type.infer.exc'(X5,X6),X5),'const.infer.read_1'(s(X5,X8)))))) )),
  inference(forward_demodulation,[],[f5632,f178])).
fof(f5632,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1,X9] : (s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,fun(X2,fun(X3,'type.one.one')))),X4),'type.pair.prod'('type.infer.exc'(X5,X6),X5)),'const.infer.st_ex_return_2'(s(fun(X0,fun(X1,fun(X2,fun(X3,'type.one.one')))),X7),s('type.pair.prod'('type.infer.exc'(X5,X6),X5),happ(s(fun(X5,'type.pair.prod'('type.infer.exc'(X5,X6),X5)),'const.infer.read_0'),s(X5,X8))))) = s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,fun(X2,fun(X3,'type.one.one')))),X4),'type.pair.prod'('type.infer.exc'(X5,X6),X5)),'const.pair.,_2'(s('type.infer.exc'(fun(X0,fun(X1,fun(X2,fun(X3,'type.one.one')))),X4),'const.infer.Success_1'(s(fun(X0,fun(X1,fun(X2,fun(X3,'type.one.one')))),X9))),s('type.pair.prod'('type.infer.exc'(X5,X6),X5),'const.infer.read_1'(s(X5,X8)))))) )),
  inference(unit_resulting_resolution,[],[f787,f178,f212])).
fof(f6096,plain,(
  ( ! [X6,X4,X2,X0,X10,X8,X7,X5,X3,X1,X9] : (s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,fun(X2,fun(X3,fun(X4,'type.one.one'))))),X5),'type.pair.prod'('type.infer.exc'(X6,X7),X6)),'const.infer.st_ex_return_2'(s(fun(X0,fun(X1,fun(X2,fun(X3,fun(X4,'type.one.one'))))),X8),s('type.pair.prod'('type.infer.exc'(X6,X7),X6),'const.infer.read_1'(s(X6,X9))))) = s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,fun(X2,fun(X3,fun(X4,'type.one.one'))))),X5),'type.pair.prod'('type.infer.exc'(X6,X7),X6)),'const.pair.,_2'(s('type.infer.exc'(fun(X0,fun(X1,fun(X2,fun(X3,fun(X4,'type.one.one'))))),X5),'const.infer.Success_1'(s(fun(X0,fun(X1,fun(X2,fun(X3,fun(X4,'type.one.one'))))),X10))),s('type.pair.prod'('type.infer.exc'(X6,X7),X6),'const.infer.read_1'(s(X6,X9)))))) )),
  inference(forward_demodulation,[],[f5633,f178])).
fof(f5633,plain,(
  ( ! [X6,X4,X2,X0,X10,X8,X7,X5,X3,X1,X9] : (s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,fun(X2,fun(X3,fun(X4,'type.one.one'))))),X5),'type.pair.prod'('type.infer.exc'(X6,X7),X6)),'const.infer.st_ex_return_2'(s(fun(X0,fun(X1,fun(X2,fun(X3,fun(X4,'type.one.one'))))),X8),s('type.pair.prod'('type.infer.exc'(X6,X7),X6),happ(s(fun(X6,'type.pair.prod'('type.infer.exc'(X6,X7),X6)),'const.infer.read_0'),s(X6,X9))))) = s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,fun(X2,fun(X3,fun(X4,'type.one.one'))))),X5),'type.pair.prod'('type.infer.exc'(X6,X7),X6)),'const.pair.,_2'(s('type.infer.exc'(fun(X0,fun(X1,fun(X2,fun(X3,fun(X4,'type.one.one'))))),X5),'const.infer.Success_1'(s(fun(X0,fun(X1,fun(X2,fun(X3,fun(X4,'type.one.one'))))),X10))),s('type.pair.prod'('type.infer.exc'(X6,X7),X6),'const.infer.read_1'(s(X6,X9)))))) )),
  inference(unit_resulting_resolution,[],[f815,f178,f212])).
fof(f6093,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.one.one',X0),'type.pair.prod'('type.infer.exc'(X1,X2),X1)),'const.infer.st_ex_return_2'(s('type.one.one',X5),s('type.pair.prod'('type.infer.exc'(X1,X2),X1),'const.infer.read_1'(s(X1,X4))))) = s('type.pair.prod'('type.infer.exc'('type.one.one',X0),'type.pair.prod'('type.infer.exc'(X1,X2),X1)),'const.pair.,_2'(s('type.infer.exc'('type.one.one',X0),'const.infer.Success_1'(s('type.one.one',X3))),s('type.pair.prod'('type.infer.exc'(X1,X2),X1),'const.infer.read_1'(s(X1,X4)))))) )),
  inference(forward_demodulation,[],[f5636,f178])).
fof(f5636,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.one.one',X0),'type.pair.prod'('type.infer.exc'(X1,X2),X1)),'const.pair.,_2'(s('type.infer.exc'('type.one.one',X0),'const.infer.Success_1'(s('type.one.one',X3))),s('type.pair.prod'('type.infer.exc'(X1,X2),X1),'const.infer.read_1'(s(X1,X4))))) = s('type.pair.prod'('type.infer.exc'('type.one.one',X0),'type.pair.prod'('type.infer.exc'(X1,X2),X1)),'const.infer.st_ex_return_2'(s('type.one.one',X5),s('type.pair.prod'('type.infer.exc'(X1,X2),X1),happ(s(fun(X1,'type.pair.prod'('type.infer.exc'(X1,X2),X1)),'const.infer.read_0'),s(X1,X4)))))) )),
  inference(unit_resulting_resolution,[],[f258,f178,f212])).
fof(f6092,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.list.list'(X0),X1),'type.pair.prod'('type.infer.exc'(X2,X3),X2)),'const.infer.st_ex_return_2'(s('type.list.list'(X0),'const.list.MAP_2'(s(fun(X4,X0),X5),s('type.list.list'(X4),X6))),s('type.pair.prod'('type.infer.exc'(X2,X3),X2),'const.infer.read_1'(s(X2,X7))))) = s('type.pair.prod'('type.infer.exc'('type.list.list'(X0),X1),'type.pair.prod'('type.infer.exc'(X2,X3),X2)),'const.pair.,_2'(s('type.infer.exc'('type.list.list'(X0),X1),'const.infer.Success_1'(s('type.list.list'(X0),'const.list.MAP_2'(s(fun(X4,X0),X5),s('type.list.list'(X4),X6))))),s('type.pair.prod'('type.infer.exc'(X2,X3),X2),'const.infer.read_1'(s(X2,X7)))))) )),
  inference(forward_demodulation,[],[f6091,f180])).
fof(f6091,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.list.list'(X0),X1),'type.pair.prod'('type.infer.exc'(X2,X3),X2)),'const.pair.,_2'(s('type.infer.exc'('type.list.list'(X0),X1),'const.infer.Success_1'(s('type.list.list'(X0),'const.list.MAP_2'(s(fun(X4,X0),X5),s('type.list.list'(X4),X6))))),s('type.pair.prod'('type.infer.exc'(X2,X3),X2),'const.infer.read_1'(s(X2,X7))))) = s('type.pair.prod'('type.infer.exc'('type.list.list'(X0),X1),'type.pair.prod'('type.infer.exc'(X2,X3),X2)),'const.infer.st_ex_return_2'(s('type.list.list'(X0),happ(s(fun('type.list.list'(X4),'type.list.list'(X0)),happ(s(fun(fun(X4,X0),fun('type.list.list'(X4),'type.list.list'(X0))),'const.list.MAP_0'),s(fun(X4,X0),X5))),s('type.list.list'(X4),X6))),s('type.pair.prod'('type.infer.exc'(X2,X3),X2),'const.infer.read_1'(s(X2,X7)))))) )),
  inference(forward_demodulation,[],[f5637,f178])).
fof(f5637,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.list.list'(X0),X1),'type.pair.prod'('type.infer.exc'(X2,X3),X2)),'const.pair.,_2'(s('type.infer.exc'('type.list.list'(X0),X1),'const.infer.Success_1'(s('type.list.list'(X0),'const.list.MAP_2'(s(fun(X4,X0),X5),s('type.list.list'(X4),X6))))),s('type.pair.prod'('type.infer.exc'(X2,X3),X2),'const.infer.read_1'(s(X2,X7))))) = s('type.pair.prod'('type.infer.exc'('type.list.list'(X0),X1),'type.pair.prod'('type.infer.exc'(X2,X3),X2)),'const.infer.st_ex_return_2'(s('type.list.list'(X0),happ(s(fun('type.list.list'(X4),'type.list.list'(X0)),happ(s(fun(fun(X4,X0),fun('type.list.list'(X4),'type.list.list'(X0))),'const.list.MAP_0'),s(fun(X4,X0),X5))),s('type.list.list'(X4),X6))),s('type.pair.prod'('type.infer.exc'(X2,X3),X2),happ(s(fun(X2,'type.pair.prod'('type.infer.exc'(X2,X3),X2)),'const.infer.read_0'),s(X2,X7)))))) )),
  inference(unit_resulting_resolution,[],[f180,f178,f212])).
fof(f6086,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.num.num',X0),'type.pair.prod'('type.infer.exc'(X1,X2),X1)),'const.infer.st_ex_return_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X3),s('type.num.num',X4))),s('type.pair.prod'('type.infer.exc'(X1,X2),X1),'const.infer.read_1'(s(X1,X5))))) = s('type.pair.prod'('type.infer.exc'('type.num.num',X0),'type.pair.prod'('type.infer.exc'(X1,X2),X1)),'const.pair.,_2'(s('type.infer.exc'('type.num.num',X0),'const.infer.Success_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X3),s('type.num.num',X4))))),s('type.pair.prod'('type.infer.exc'(X1,X2),X1),'const.infer.read_1'(s(X1,X5)))))) )),
  inference(forward_demodulation,[],[f6085,f175])).
fof(f6085,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.num.num',X0),'type.pair.prod'('type.infer.exc'(X1,X2),X1)),'const.infer.st_ex_return_2'(s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.arithmetic.+_1'(s('type.num.num',X3))),s('type.num.num',X4))),s('type.pair.prod'('type.infer.exc'(X1,X2),X1),'const.infer.read_1'(s(X1,X5))))) = s('type.pair.prod'('type.infer.exc'('type.num.num',X0),'type.pair.prod'('type.infer.exc'(X1,X2),X1)),'const.pair.,_2'(s('type.infer.exc'('type.num.num',X0),'const.infer.Success_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X3),s('type.num.num',X4))))),s('type.pair.prod'('type.infer.exc'(X1,X2),X1),'const.infer.read_1'(s(X1,X5)))))) )),
  inference(forward_demodulation,[],[f5640,f178])).
fof(f5640,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.num.num',X0),'type.pair.prod'('type.infer.exc'(X1,X2),X1)),'const.pair.,_2'(s('type.infer.exc'('type.num.num',X0),'const.infer.Success_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X3),s('type.num.num',X4))))),s('type.pair.prod'('type.infer.exc'(X1,X2),X1),'const.infer.read_1'(s(X1,X5))))) = s('type.pair.prod'('type.infer.exc'('type.num.num',X0),'type.pair.prod'('type.infer.exc'(X1,X2),X1)),'const.infer.st_ex_return_2'(s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.arithmetic.+_1'(s('type.num.num',X3))),s('type.num.num',X4))),s('type.pair.prod'('type.infer.exc'(X1,X2),X1),happ(s(fun(X1,'type.pair.prod'('type.infer.exc'(X1,X2),X1)),'const.infer.read_0'),s(X1,X5)))))) )),
  inference(unit_resulting_resolution,[],[f175,f178,f212])).
fof(f6084,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.pair.prod'('type.infer.exc'(X1,X2),X1)),'const.infer.st_ex_return_2'(s('type.infer_t.infer_t','const.infer_t.Infer_Tuvar_1'(s('type.num.num',X3))),s('type.pair.prod'('type.infer.exc'(X1,X2),X1),'const.infer.read_1'(s(X1,X4))))) = s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.pair.prod'('type.infer.exc'(X1,X2),X1)),'const.pair.,_2'(s('type.infer.exc'('type.infer_t.infer_t',X0),'const.infer.Success_1'(s('type.infer_t.infer_t','const.infer_t.Infer_Tuvar_1'(s('type.num.num',X3))))),s('type.pair.prod'('type.infer.exc'(X1,X2),X1),'const.infer.read_1'(s(X1,X4)))))) )),
  inference(forward_demodulation,[],[f6083,f166])).
fof(f6083,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.pair.prod'('type.infer.exc'(X1,X2),X1)),'const.infer.st_ex_return_2'(s('type.infer_t.infer_t',happ(s(fun('type.num.num','type.infer_t.infer_t'),'const.infer_t.Infer_Tuvar_0'),s('type.num.num',X3))),s('type.pair.prod'('type.infer.exc'(X1,X2),X1),'const.infer.read_1'(s(X1,X4))))) = s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.pair.prod'('type.infer.exc'(X1,X2),X1)),'const.pair.,_2'(s('type.infer.exc'('type.infer_t.infer_t',X0),'const.infer.Success_1'(s('type.infer_t.infer_t','const.infer_t.Infer_Tuvar_1'(s('type.num.num',X3))))),s('type.pair.prod'('type.infer.exc'(X1,X2),X1),'const.infer.read_1'(s(X1,X4)))))) )),
  inference(forward_demodulation,[],[f5641,f178])).
fof(f5641,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.pair.prod'('type.infer.exc'(X1,X2),X1)),'const.pair.,_2'(s('type.infer.exc'('type.infer_t.infer_t',X0),'const.infer.Success_1'(s('type.infer_t.infer_t','const.infer_t.Infer_Tuvar_1'(s('type.num.num',X3))))),s('type.pair.prod'('type.infer.exc'(X1,X2),X1),'const.infer.read_1'(s(X1,X4))))) = s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.pair.prod'('type.infer.exc'(X1,X2),X1)),'const.infer.st_ex_return_2'(s('type.infer_t.infer_t',happ(s(fun('type.num.num','type.infer_t.infer_t'),'const.infer_t.Infer_Tuvar_0'),s('type.num.num',X3))),s('type.pair.prod'('type.infer.exc'(X1,X2),X1),happ(s(fun(X1,'type.pair.prod'('type.infer.exc'(X1,X2),X1)),'const.infer.read_0'),s(X1,X4)))))) )),
  inference(unit_resulting_resolution,[],[f166,f178,f212])).
fof(f6082,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.pair.prod'('type.infer.exc'(X1,X2),X1)),'const.infer.st_ex_return_2'(s('type.infer_t.infer_t','const.unify.t_walkstar_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X3),s('type.infer_t.infer_t',X4))),s('type.pair.prod'('type.infer.exc'(X1,X2),X1),'const.infer.read_1'(s(X1,X5))))) = s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.pair.prod'('type.infer.exc'(X1,X2),X1)),'const.pair.,_2'(s('type.infer.exc'('type.infer_t.infer_t',X0),'const.infer.Success_1'(s('type.infer_t.infer_t','const.unify.t_walkstar_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X3),s('type.infer_t.infer_t',X4))))),s('type.pair.prod'('type.infer.exc'(X1,X2),X1),'const.infer.read_1'(s(X1,X5)))))) )),
  inference(forward_demodulation,[],[f6081,f176])).
fof(f6081,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.pair.prod'('type.infer.exc'(X1,X2),X1)),'const.pair.,_2'(s('type.infer.exc'('type.infer_t.infer_t',X0),'const.infer.Success_1'(s('type.infer_t.infer_t','const.unify.t_walkstar_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X3),s('type.infer_t.infer_t',X4))))),s('type.pair.prod'('type.infer.exc'(X1,X2),X1),'const.infer.read_1'(s(X1,X5))))) = s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.pair.prod'('type.infer.exc'(X1,X2),X1)),'const.infer.st_ex_return_2'(s('type.infer_t.infer_t',happ(s(fun('type.infer_t.infer_t','type.infer_t.infer_t'),happ(s(fun('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),fun('type.infer_t.infer_t','type.infer_t.infer_t')),'const.unify.t_walkstar_0'),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X3))),s('type.infer_t.infer_t',X4))),s('type.pair.prod'('type.infer.exc'(X1,X2),X1),'const.infer.read_1'(s(X1,X5)))))) )),
  inference(forward_demodulation,[],[f5642,f178])).
fof(f5642,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.pair.prod'('type.infer.exc'(X1,X2),X1)),'const.pair.,_2'(s('type.infer.exc'('type.infer_t.infer_t',X0),'const.infer.Success_1'(s('type.infer_t.infer_t','const.unify.t_walkstar_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X3),s('type.infer_t.infer_t',X4))))),s('type.pair.prod'('type.infer.exc'(X1,X2),X1),'const.infer.read_1'(s(X1,X5))))) = s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.pair.prod'('type.infer.exc'(X1,X2),X1)),'const.infer.st_ex_return_2'(s('type.infer_t.infer_t',happ(s(fun('type.infer_t.infer_t','type.infer_t.infer_t'),happ(s(fun('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),fun('type.infer_t.infer_t','type.infer_t.infer_t')),'const.unify.t_walkstar_0'),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X3))),s('type.infer_t.infer_t',X4))),s('type.pair.prod'('type.infer.exc'(X1,X2),X1),happ(s(fun(X1,'type.pair.prod'('type.infer.exc'(X1,X2),X1)),'const.infer.read_0'),s(X1,X5)))))) )),
  inference(unit_resulting_resolution,[],[f176,f178,f212])).
fof(f6078,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X0),X2),'type.pair.prod'('type.infer.exc'(X3,X4),X3)),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'(X0,X1),X0),'const.infer.read_1'(s(X0,X5))),s('type.pair.prod'('type.infer.exc'(X3,X4),X3),'const.infer.read_1'(s(X3,X6))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X0),X2),'type.pair.prod'('type.infer.exc'(X3,X4),X3)),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X0),X2),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'(X0,X1),X0),'const.infer.read_1'(s(X0,X5))))),s('type.pair.prod'('type.infer.exc'(X3,X4),X3),'const.infer.read_1'(s(X3,X6)))))) )),
  inference(forward_demodulation,[],[f6077,f178])).
fof(f6077,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X0),X2),'type.pair.prod'('type.infer.exc'(X3,X4),X3)),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X0),X2),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'(X0,X1),X0),'const.infer.read_1'(s(X0,X5))))),s('type.pair.prod'('type.infer.exc'(X3,X4),X3),'const.infer.read_1'(s(X3,X6))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X0),X2),'type.pair.prod'('type.infer.exc'(X3,X4),X3)),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'(X0,X1),X0),happ(s(fun(X0,'type.pair.prod'('type.infer.exc'(X0,X1),X0)),'const.infer.read_0'),s(X0,X5))),s('type.pair.prod'('type.infer.exc'(X3,X4),X3),'const.infer.read_1'(s(X3,X6)))))) )),
  inference(forward_demodulation,[],[f5644,f178])).
fof(f5644,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X0),X2),'type.pair.prod'('type.infer.exc'(X3,X4),X3)),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X0),X2),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'(X0,X1),X0),'const.infer.read_1'(s(X0,X5))))),s('type.pair.prod'('type.infer.exc'(X3,X4),X3),'const.infer.read_1'(s(X3,X6))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X0),X2),'type.pair.prod'('type.infer.exc'(X3,X4),X3)),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'(X0,X1),X0),happ(s(fun(X0,'type.pair.prod'('type.infer.exc'(X0,X1),X0)),'const.infer.read_0'),s(X0,X5))),s('type.pair.prod'('type.infer.exc'(X3,X4),X3),happ(s(fun(X3,'type.pair.prod'('type.infer.exc'(X3,X4),X3)),'const.infer.read_0'),s(X3,X6)))))) )),
  inference(unit_resulting_resolution,[],[f178,f178,f212])).
fof(f6076,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),X2),'type.pair.prod'('type.infer.exc'(X3,X4),X3)),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),'const.infer.fresh_uvar_1'(s('type.infer.infer_st'(X1),X5))),s('type.pair.prod'('type.infer.exc'(X3,X4),X3),'const.infer.read_1'(s(X3,X6))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),X2),'type.pair.prod'('type.infer.exc'(X3,X4),X3)),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),X2),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),'const.infer.fresh_uvar_1'(s('type.infer.infer_st'(X1),X5))))),s('type.pair.prod'('type.infer.exc'(X3,X4),X3),'const.infer.read_1'(s(X3,X6)))))) )),
  inference(forward_demodulation,[],[f6075,f179])).
fof(f6075,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),X2),'type.pair.prod'('type.infer.exc'(X3,X4),X3)),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),X2),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),'const.infer.fresh_uvar_1'(s('type.infer.infer_st'(X1),X5))))),s('type.pair.prod'('type.infer.exc'(X3,X4),X3),'const.infer.read_1'(s(X3,X6))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),X2),'type.pair.prod'('type.infer.exc'(X3,X4),X3)),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),happ(s(fun('type.infer.infer_st'(X1),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1))),'const.infer.fresh_uvar_0'),s('type.infer.infer_st'(X1),X5))),s('type.pair.prod'('type.infer.exc'(X3,X4),X3),'const.infer.read_1'(s(X3,X6)))))) )),
  inference(forward_demodulation,[],[f5645,f178])).
fof(f5645,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),X2),'type.pair.prod'('type.infer.exc'(X3,X4),X3)),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),X2),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),'const.infer.fresh_uvar_1'(s('type.infer.infer_st'(X1),X5))))),s('type.pair.prod'('type.infer.exc'(X3,X4),X3),'const.infer.read_1'(s(X3,X6))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),X2),'type.pair.prod'('type.infer.exc'(X3,X4),X3)),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),happ(s(fun('type.infer.infer_st'(X1),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1))),'const.infer.fresh_uvar_0'),s('type.infer.infer_st'(X1),X5))),s('type.pair.prod'('type.infer.exc'(X3,X4),X3),happ(s(fun(X3,'type.pair.prod'('type.infer.exc'(X3,X4),X3)),'const.infer.read_0'),s(X3,X6)))))) )),
  inference(unit_resulting_resolution,[],[f179,f178,f212])).
fof(f6074,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),'type.pair.prod'('type.infer.exc'(X4,X5),X4)),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'(X0,X1),X2),'const.infer.failwith_2'(s(X1,X6),s(X2,X7))),s('type.pair.prod'('type.infer.exc'(X4,X5),X4),'const.infer.read_1'(s(X4,X8))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),'type.pair.prod'('type.infer.exc'(X4,X5),X4)),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'(X0,X1),X2),'const.infer.failwith_2'(s(X1,X6),s(X2,X7))))),s('type.pair.prod'('type.infer.exc'(X4,X5),X4),'const.infer.read_1'(s(X4,X8)))))) )),
  inference(forward_demodulation,[],[f6073,f204])).
fof(f6073,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),'type.pair.prod'('type.infer.exc'(X4,X5),X4)),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'(X0,X1),X2),'const.infer.failwith_2'(s(X1,X6),s(X2,X7))))),s('type.pair.prod'('type.infer.exc'(X4,X5),X4),'const.infer.read_1'(s(X4,X8))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),'type.pair.prod'('type.infer.exc'(X4,X5),X4)),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'(X0,X1),X2),happ(s(fun(X2,'type.pair.prod'('type.infer.exc'(X0,X1),X2)),'const.infer.failwith_1'(s(X1,X6))),s(X2,X7))),s('type.pair.prod'('type.infer.exc'(X4,X5),X4),'const.infer.read_1'(s(X4,X8)))))) )),
  inference(forward_demodulation,[],[f5646,f178])).
fof(f5646,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),'type.pair.prod'('type.infer.exc'(X4,X5),X4)),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'(X0,X1),X2),'const.infer.failwith_2'(s(X1,X6),s(X2,X7))))),s('type.pair.prod'('type.infer.exc'(X4,X5),X4),'const.infer.read_1'(s(X4,X8))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),'type.pair.prod'('type.infer.exc'(X4,X5),X4)),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'(X0,X1),X2),happ(s(fun(X2,'type.pair.prod'('type.infer.exc'(X0,X1),X2)),'const.infer.failwith_1'(s(X1,X6))),s(X2,X7))),s('type.pair.prod'('type.infer.exc'(X4,X5),X4),happ(s(fun(X4,'type.pair.prod'('type.infer.exc'(X4,X5),X4)),'const.infer.read_0'),s(X4,X8)))))) )),
  inference(unit_resulting_resolution,[],[f204,f178,f212])).
fof(f6072,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),X2),'type.pair.prod'('type.infer.exc'(X3,X4),X3)),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),'const.infer.guard_3'(s(bool,X5),s(X0,X6),s(X1,X7))),s('type.pair.prod'('type.infer.exc'(X3,X4),X3),'const.infer.read_1'(s(X3,X8))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),X2),'type.pair.prod'('type.infer.exc'(X3,X4),X3)),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),X2),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),'const.infer.guard_3'(s(bool,X5),s(X0,X6),s(X1,X7))))),s('type.pair.prod'('type.infer.exc'(X3,X4),X3),'const.infer.read_1'(s(X3,X8)))))) )),
  inference(forward_demodulation,[],[f6071,f183])).
fof(f6071,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),X2),'type.pair.prod'('type.infer.exc'(X3,X4),X3)),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),X2),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),'const.infer.guard_3'(s(bool,X5),s(X0,X6),s(X1,X7))))),s('type.pair.prod'('type.infer.exc'(X3,X4),X3),'const.infer.read_1'(s(X3,X8))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),X2),'type.pair.prod'('type.infer.exc'(X3,X4),X3)),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),happ(s(fun(X1,'type.pair.prod'('type.infer.exc'('type.one.one',X0),X1)),'const.infer.guard_2'(s(bool,X5),s(X0,X6))),s(X1,X7))),s('type.pair.prod'('type.infer.exc'(X3,X4),X3),'const.infer.read_1'(s(X3,X8)))))) )),
  inference(forward_demodulation,[],[f5647,f178])).
fof(f5647,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),X2),'type.pair.prod'('type.infer.exc'(X3,X4),X3)),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),X2),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),'const.infer.guard_3'(s(bool,X5),s(X0,X6),s(X1,X7))))),s('type.pair.prod'('type.infer.exc'(X3,X4),X3),'const.infer.read_1'(s(X3,X8))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),X2),'type.pair.prod'('type.infer.exc'(X3,X4),X3)),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),happ(s(fun(X1,'type.pair.prod'('type.infer.exc'('type.one.one',X0),X1)),'const.infer.guard_2'(s(bool,X5),s(X0,X6))),s(X1,X7))),s('type.pair.prod'('type.infer.exc'(X3,X4),X3),happ(s(fun(X3,'type.pair.prod'('type.infer.exc'(X3,X4),X3)),'const.infer.read_0'),s(X3,X8)))))) )),
  inference(unit_resulting_resolution,[],[f183,f178,f212])).
fof(f6068,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1,X9] : (s('type.pair.prod'('type.infer.exc'(X0,X1),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X2),'type.infer.infer_st'(X3))),'const.infer.st_ex_return_2'(s(X0,happ(s(fun(X5,X0),X6),s(X5,happ(s(fun(X4,X5),X7),s(X4,X8))))),s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X2),'type.infer.infer_st'(X3)),'const.infer.fresh_uvar_1'(s('type.infer.infer_st'(X3),X9))))) = s('type.pair.prod'('type.infer.exc'(X0,X1),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X2),'type.infer.infer_st'(X3))),'const.pair.,_2'(s('type.infer.exc'(X0,X1),'const.infer.Success_1'(s(X0,happ(s(fun(X4,X0),'_dst_x0x1_2'(s(fun(X5,X0),X6),s(fun(X4,X5),X7))),s(X4,X8))))),s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X2),'type.infer.infer_st'(X3)),'const.infer.fresh_uvar_1'(s('type.infer.infer_st'(X3),X9)))))) )),
  inference(forward_demodulation,[],[f5649,f179])).
fof(f5649,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1,X9] : (s('type.pair.prod'('type.infer.exc'(X0,X1),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X2),'type.infer.infer_st'(X3))),'const.pair.,_2'(s('type.infer.exc'(X0,X1),'const.infer.Success_1'(s(X0,happ(s(fun(X4,X0),'_dst_x0x1_2'(s(fun(X5,X0),X6),s(fun(X4,X5),X7))),s(X4,X8))))),s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X2),'type.infer.infer_st'(X3)),'const.infer.fresh_uvar_1'(s('type.infer.infer_st'(X3),X9))))) = s('type.pair.prod'('type.infer.exc'(X0,X1),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X2),'type.infer.infer_st'(X3))),'const.infer.st_ex_return_2'(s(X0,happ(s(fun(X5,X0),X6),s(X5,happ(s(fun(X4,X5),X7),s(X4,X8))))),s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X2),'type.infer.infer_st'(X3)),happ(s(fun('type.infer.infer_st'(X3),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X2),'type.infer.infer_st'(X3))),'const.infer.fresh_uvar_0'),s('type.infer.infer_st'(X3),X9)))))) )),
  inference(unit_resulting_resolution,[],[f206,f179,f212])).
fof(f6035,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'(X0,X1),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X2),'type.infer.infer_st'(X3))),'const.infer.st_ex_return_2'(s(X0,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(X0),X4))),s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X2),'type.infer.infer_st'(X3)),'const.infer.fresh_uvar_1'(s('type.infer.infer_st'(X3),X5))))) = s('type.pair.prod'('type.infer.exc'(X0,X1),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X2),'type.infer.infer_st'(X3))),'const.pair.,_2'(s('type.infer.exc'(X0,X1),'const.infer.Success_1'(s(X0,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(X0),X4))))),s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X2),'type.infer.infer_st'(X3)),'const.infer.fresh_uvar_1'(s('type.infer.infer_st'(X3),X5)))))) )),
  inference(forward_demodulation,[],[f6034,f168])).
fof(f6034,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'(X0,X1),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X2),'type.infer.infer_st'(X3))),'const.pair.,_2'(s('type.infer.exc'(X0,X1),'const.infer.Success_1'(s(X0,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(X0),X4))))),s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X2),'type.infer.infer_st'(X3)),'const.infer.fresh_uvar_1'(s('type.infer.infer_st'(X3),X5))))) = s('type.pair.prod'('type.infer.exc'(X0,X1),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X2),'type.infer.infer_st'(X3))),'const.infer.st_ex_return_2'(s(X0,happ(s(fun('type.infer.infer_st'(X0),X0),'const.infer.infer_st_subst_0'),s('type.infer.infer_st'(X0),X4))),s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X2),'type.infer.infer_st'(X3)),'const.infer.fresh_uvar_1'(s('type.infer.infer_st'(X3),X5)))))) )),
  inference(forward_demodulation,[],[f5670,f179])).
fof(f5670,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'(X0,X1),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X2),'type.infer.infer_st'(X3))),'const.pair.,_2'(s('type.infer.exc'(X0,X1),'const.infer.Success_1'(s(X0,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(X0),X4))))),s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X2),'type.infer.infer_st'(X3)),'const.infer.fresh_uvar_1'(s('type.infer.infer_st'(X3),X5))))) = s('type.pair.prod'('type.infer.exc'(X0,X1),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X2),'type.infer.infer_st'(X3))),'const.infer.st_ex_return_2'(s(X0,happ(s(fun('type.infer.infer_st'(X0),X0),'const.infer.infer_st_subst_0'),s('type.infer.infer_st'(X0),X4))),s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X2),'type.infer.infer_st'(X3)),happ(s(fun('type.infer.infer_st'(X3),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X2),'type.infer.infer_st'(X3))),'const.infer.fresh_uvar_0'),s('type.infer.infer_st'(X3),X5)))))) )),
  inference(unit_resulting_resolution,[],[f168,f179,f212])).
fof(f6033,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1,X9] : (s('type.pair.prod'('type.infer.exc'(X0,X1),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X2),'type.infer.infer_st'(X3))),'const.infer.st_ex_return_2'(s(X0,happ(s(fun(X6,X0),'_dst_x0x1_2'(s(fun(X4,X0),X5),s(fun(X6,X4),X7))),s(X6,X8))),s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X2),'type.infer.infer_st'(X3)),'const.infer.fresh_uvar_1'(s('type.infer.infer_st'(X3),X9))))) = s('type.pair.prod'('type.infer.exc'(X0,X1),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X2),'type.infer.infer_st'(X3))),'const.pair.,_2'(s('type.infer.exc'(X0,X1),'const.infer.Success_1'(s(X0,happ(s(fun(X4,X0),X5),s(X4,happ(s(fun(X6,X4),X7),s(X6,X8))))))),s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X2),'type.infer.infer_st'(X3)),'const.infer.fresh_uvar_1'(s('type.infer.infer_st'(X3),X9)))))) )),
  inference(forward_demodulation,[],[f5671,f179])).
fof(f5671,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1,X9] : (s('type.pair.prod'('type.infer.exc'(X0,X1),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X2),'type.infer.infer_st'(X3))),'const.pair.,_2'(s('type.infer.exc'(X0,X1),'const.infer.Success_1'(s(X0,happ(s(fun(X4,X0),X5),s(X4,happ(s(fun(X6,X4),X7),s(X6,X8))))))),s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X2),'type.infer.infer_st'(X3)),'const.infer.fresh_uvar_1'(s('type.infer.infer_st'(X3),X9))))) = s('type.pair.prod'('type.infer.exc'(X0,X1),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X2),'type.infer.infer_st'(X3))),'const.infer.st_ex_return_2'(s(X0,happ(s(fun(X6,X0),'_dst_x0x1_2'(s(fun(X4,X0),X5),s(fun(X6,X4),X7))),s(X6,X8))),s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X2),'type.infer.infer_st'(X3)),happ(s(fun('type.infer.infer_st'(X3),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X2),'type.infer.infer_st'(X3))),'const.infer.fresh_uvar_0'),s('type.infer.infer_st'(X3),X9)))))) )),
  inference(unit_resulting_resolution,[],[f206,f179,f212])).
fof(f6030,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'(fun(X0,'type.one.one'),X1),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X2),'type.infer.infer_st'(X3))),'const.infer.st_ex_return_2'(s(fun(X0,'type.one.one'),X6),s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X2),'type.infer.infer_st'(X3)),'const.infer.fresh_uvar_1'(s('type.infer.infer_st'(X3),X5))))) = s('type.pair.prod'('type.infer.exc'(fun(X0,'type.one.one'),X1),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X2),'type.infer.infer_st'(X3))),'const.pair.,_2'(s('type.infer.exc'(fun(X0,'type.one.one'),X1),'const.infer.Success_1'(s(fun(X0,'type.one.one'),X4))),s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X2),'type.infer.infer_st'(X3)),'const.infer.fresh_uvar_1'(s('type.infer.infer_st'(X3),X5)))))) )),
  inference(forward_demodulation,[],[f5673,f179])).
fof(f5673,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'(fun(X0,'type.one.one'),X1),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X2),'type.infer.infer_st'(X3))),'const.pair.,_2'(s('type.infer.exc'(fun(X0,'type.one.one'),X1),'const.infer.Success_1'(s(fun(X0,'type.one.one'),X4))),s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X2),'type.infer.infer_st'(X3)),'const.infer.fresh_uvar_1'(s('type.infer.infer_st'(X3),X5))))) = s('type.pair.prod'('type.infer.exc'(fun(X0,'type.one.one'),X1),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X2),'type.infer.infer_st'(X3))),'const.infer.st_ex_return_2'(s(fun(X0,'type.one.one'),X6),s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X2),'type.infer.infer_st'(X3)),happ(s(fun('type.infer.infer_st'(X3),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X2),'type.infer.infer_st'(X3))),'const.infer.fresh_uvar_0'),s('type.infer.infer_st'(X3),X5)))))) )),
  inference(unit_resulting_resolution,[],[f605,f179,f212])).
fof(f6029,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,'type.one.one')),X2),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X3),'type.infer.infer_st'(X4))),'const.infer.st_ex_return_2'(s(fun(X0,fun(X1,'type.one.one')),X7),s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X3),'type.infer.infer_st'(X4)),'const.infer.fresh_uvar_1'(s('type.infer.infer_st'(X4),X6))))) = s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,'type.one.one')),X2),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X3),'type.infer.infer_st'(X4))),'const.pair.,_2'(s('type.infer.exc'(fun(X0,fun(X1,'type.one.one')),X2),'const.infer.Success_1'(s(fun(X0,fun(X1,'type.one.one')),X5))),s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X3),'type.infer.infer_st'(X4)),'const.infer.fresh_uvar_1'(s('type.infer.infer_st'(X4),X6)))))) )),
  inference(forward_demodulation,[],[f5674,f179])).
fof(f5674,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,'type.one.one')),X2),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X3),'type.infer.infer_st'(X4))),'const.pair.,_2'(s('type.infer.exc'(fun(X0,fun(X1,'type.one.one')),X2),'const.infer.Success_1'(s(fun(X0,fun(X1,'type.one.one')),X5))),s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X3),'type.infer.infer_st'(X4)),'const.infer.fresh_uvar_1'(s('type.infer.infer_st'(X4),X6))))) = s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,'type.one.one')),X2),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X3),'type.infer.infer_st'(X4))),'const.infer.st_ex_return_2'(s(fun(X0,fun(X1,'type.one.one')),X7),s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X3),'type.infer.infer_st'(X4)),happ(s(fun('type.infer.infer_st'(X4),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X3),'type.infer.infer_st'(X4))),'const.infer.fresh_uvar_0'),s('type.infer.infer_st'(X4),X6)))))) )),
  inference(unit_resulting_resolution,[],[f724,f179,f212])).
fof(f6028,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,fun(X2,'type.one.one'))),X3),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X4),'type.infer.infer_st'(X5))),'const.infer.st_ex_return_2'(s(fun(X0,fun(X1,fun(X2,'type.one.one'))),X6),s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X4),'type.infer.infer_st'(X5)),'const.infer.fresh_uvar_1'(s('type.infer.infer_st'(X5),X7))))) = s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,fun(X2,'type.one.one'))),X3),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X4),'type.infer.infer_st'(X5))),'const.pair.,_2'(s('type.infer.exc'(fun(X0,fun(X1,fun(X2,'type.one.one'))),X3),'const.infer.Success_1'(s(fun(X0,fun(X1,fun(X2,'type.one.one'))),X8))),s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X4),'type.infer.infer_st'(X5)),'const.infer.fresh_uvar_1'(s('type.infer.infer_st'(X5),X7)))))) )),
  inference(forward_demodulation,[],[f5675,f179])).
fof(f5675,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,fun(X2,'type.one.one'))),X3),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X4),'type.infer.infer_st'(X5))),'const.infer.st_ex_return_2'(s(fun(X0,fun(X1,fun(X2,'type.one.one'))),X6),s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X4),'type.infer.infer_st'(X5)),happ(s(fun('type.infer.infer_st'(X5),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X4),'type.infer.infer_st'(X5))),'const.infer.fresh_uvar_0'),s('type.infer.infer_st'(X5),X7))))) = s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,fun(X2,'type.one.one'))),X3),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X4),'type.infer.infer_st'(X5))),'const.pair.,_2'(s('type.infer.exc'(fun(X0,fun(X1,fun(X2,'type.one.one'))),X3),'const.infer.Success_1'(s(fun(X0,fun(X1,fun(X2,'type.one.one'))),X8))),s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X4),'type.infer.infer_st'(X5)),'const.infer.fresh_uvar_1'(s('type.infer.infer_st'(X5),X7)))))) )),
  inference(unit_resulting_resolution,[],[f752,f179,f212])).
fof(f6027,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1,X9] : (s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,fun(X2,fun(X3,'type.one.one')))),X4),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X5),'type.infer.infer_st'(X6))),'const.infer.st_ex_return_2'(s(fun(X0,fun(X1,fun(X2,fun(X3,'type.one.one')))),X7),s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X5),'type.infer.infer_st'(X6)),'const.infer.fresh_uvar_1'(s('type.infer.infer_st'(X6),X8))))) = s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,fun(X2,fun(X3,'type.one.one')))),X4),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X5),'type.infer.infer_st'(X6))),'const.pair.,_2'(s('type.infer.exc'(fun(X0,fun(X1,fun(X2,fun(X3,'type.one.one')))),X4),'const.infer.Success_1'(s(fun(X0,fun(X1,fun(X2,fun(X3,'type.one.one')))),X9))),s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X5),'type.infer.infer_st'(X6)),'const.infer.fresh_uvar_1'(s('type.infer.infer_st'(X6),X8)))))) )),
  inference(forward_demodulation,[],[f5676,f179])).
fof(f5676,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1,X9] : (s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,fun(X2,fun(X3,'type.one.one')))),X4),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X5),'type.infer.infer_st'(X6))),'const.infer.st_ex_return_2'(s(fun(X0,fun(X1,fun(X2,fun(X3,'type.one.one')))),X7),s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X5),'type.infer.infer_st'(X6)),happ(s(fun('type.infer.infer_st'(X6),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X5),'type.infer.infer_st'(X6))),'const.infer.fresh_uvar_0'),s('type.infer.infer_st'(X6),X8))))) = s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,fun(X2,fun(X3,'type.one.one')))),X4),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X5),'type.infer.infer_st'(X6))),'const.pair.,_2'(s('type.infer.exc'(fun(X0,fun(X1,fun(X2,fun(X3,'type.one.one')))),X4),'const.infer.Success_1'(s(fun(X0,fun(X1,fun(X2,fun(X3,'type.one.one')))),X9))),s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X5),'type.infer.infer_st'(X6)),'const.infer.fresh_uvar_1'(s('type.infer.infer_st'(X6),X8)))))) )),
  inference(unit_resulting_resolution,[],[f787,f179,f212])).
fof(f6026,plain,(
  ( ! [X6,X4,X2,X0,X10,X8,X7,X5,X3,X1,X9] : (s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,fun(X2,fun(X3,fun(X4,'type.one.one'))))),X5),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X6),'type.infer.infer_st'(X7))),'const.infer.st_ex_return_2'(s(fun(X0,fun(X1,fun(X2,fun(X3,fun(X4,'type.one.one'))))),X8),s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X6),'type.infer.infer_st'(X7)),'const.infer.fresh_uvar_1'(s('type.infer.infer_st'(X7),X9))))) = s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,fun(X2,fun(X3,fun(X4,'type.one.one'))))),X5),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X6),'type.infer.infer_st'(X7))),'const.pair.,_2'(s('type.infer.exc'(fun(X0,fun(X1,fun(X2,fun(X3,fun(X4,'type.one.one'))))),X5),'const.infer.Success_1'(s(fun(X0,fun(X1,fun(X2,fun(X3,fun(X4,'type.one.one'))))),X10))),s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X6),'type.infer.infer_st'(X7)),'const.infer.fresh_uvar_1'(s('type.infer.infer_st'(X7),X9)))))) )),
  inference(forward_demodulation,[],[f5677,f179])).
fof(f5677,plain,(
  ( ! [X6,X4,X2,X0,X10,X8,X7,X5,X3,X1,X9] : (s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,fun(X2,fun(X3,fun(X4,'type.one.one'))))),X5),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X6),'type.infer.infer_st'(X7))),'const.infer.st_ex_return_2'(s(fun(X0,fun(X1,fun(X2,fun(X3,fun(X4,'type.one.one'))))),X8),s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X6),'type.infer.infer_st'(X7)),happ(s(fun('type.infer.infer_st'(X7),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X6),'type.infer.infer_st'(X7))),'const.infer.fresh_uvar_0'),s('type.infer.infer_st'(X7),X9))))) = s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,fun(X2,fun(X3,fun(X4,'type.one.one'))))),X5),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X6),'type.infer.infer_st'(X7))),'const.pair.,_2'(s('type.infer.exc'(fun(X0,fun(X1,fun(X2,fun(X3,fun(X4,'type.one.one'))))),X5),'const.infer.Success_1'(s(fun(X0,fun(X1,fun(X2,fun(X3,fun(X4,'type.one.one'))))),X10))),s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X6),'type.infer.infer_st'(X7)),'const.infer.fresh_uvar_1'(s('type.infer.infer_st'(X7),X9)))))) )),
  inference(unit_resulting_resolution,[],[f815,f179,f212])).
fof(f6023,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.one.one',X0),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X1),'type.infer.infer_st'(X2))),'const.infer.st_ex_return_2'(s('type.one.one',X5),s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X1),'type.infer.infer_st'(X2)),'const.infer.fresh_uvar_1'(s('type.infer.infer_st'(X2),X4))))) = s('type.pair.prod'('type.infer.exc'('type.one.one',X0),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X1),'type.infer.infer_st'(X2))),'const.pair.,_2'(s('type.infer.exc'('type.one.one',X0),'const.infer.Success_1'(s('type.one.one',X3))),s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X1),'type.infer.infer_st'(X2)),'const.infer.fresh_uvar_1'(s('type.infer.infer_st'(X2),X4)))))) )),
  inference(forward_demodulation,[],[f5680,f179])).
fof(f5680,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.one.one',X0),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X1),'type.infer.infer_st'(X2))),'const.pair.,_2'(s('type.infer.exc'('type.one.one',X0),'const.infer.Success_1'(s('type.one.one',X3))),s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X1),'type.infer.infer_st'(X2)),'const.infer.fresh_uvar_1'(s('type.infer.infer_st'(X2),X4))))) = s('type.pair.prod'('type.infer.exc'('type.one.one',X0),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X1),'type.infer.infer_st'(X2))),'const.infer.st_ex_return_2'(s('type.one.one',X5),s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X1),'type.infer.infer_st'(X2)),happ(s(fun('type.infer.infer_st'(X2),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X1),'type.infer.infer_st'(X2))),'const.infer.fresh_uvar_0'),s('type.infer.infer_st'(X2),X4)))))) )),
  inference(unit_resulting_resolution,[],[f258,f179,f212])).
fof(f6022,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.list.list'(X0),X1),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X2),'type.infer.infer_st'(X3))),'const.infer.st_ex_return_2'(s('type.list.list'(X0),'const.list.MAP_2'(s(fun(X4,X0),X5),s('type.list.list'(X4),X6))),s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X2),'type.infer.infer_st'(X3)),'const.infer.fresh_uvar_1'(s('type.infer.infer_st'(X3),X7))))) = s('type.pair.prod'('type.infer.exc'('type.list.list'(X0),X1),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X2),'type.infer.infer_st'(X3))),'const.pair.,_2'(s('type.infer.exc'('type.list.list'(X0),X1),'const.infer.Success_1'(s('type.list.list'(X0),'const.list.MAP_2'(s(fun(X4,X0),X5),s('type.list.list'(X4),X6))))),s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X2),'type.infer.infer_st'(X3)),'const.infer.fresh_uvar_1'(s('type.infer.infer_st'(X3),X7)))))) )),
  inference(forward_demodulation,[],[f6021,f180])).
fof(f6021,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.list.list'(X0),X1),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X2),'type.infer.infer_st'(X3))),'const.pair.,_2'(s('type.infer.exc'('type.list.list'(X0),X1),'const.infer.Success_1'(s('type.list.list'(X0),'const.list.MAP_2'(s(fun(X4,X0),X5),s('type.list.list'(X4),X6))))),s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X2),'type.infer.infer_st'(X3)),'const.infer.fresh_uvar_1'(s('type.infer.infer_st'(X3),X7))))) = s('type.pair.prod'('type.infer.exc'('type.list.list'(X0),X1),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X2),'type.infer.infer_st'(X3))),'const.infer.st_ex_return_2'(s('type.list.list'(X0),happ(s(fun('type.list.list'(X4),'type.list.list'(X0)),happ(s(fun(fun(X4,X0),fun('type.list.list'(X4),'type.list.list'(X0))),'const.list.MAP_0'),s(fun(X4,X0),X5))),s('type.list.list'(X4),X6))),s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X2),'type.infer.infer_st'(X3)),'const.infer.fresh_uvar_1'(s('type.infer.infer_st'(X3),X7)))))) )),
  inference(forward_demodulation,[],[f5681,f179])).
fof(f5681,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.list.list'(X0),X1),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X2),'type.infer.infer_st'(X3))),'const.pair.,_2'(s('type.infer.exc'('type.list.list'(X0),X1),'const.infer.Success_1'(s('type.list.list'(X0),'const.list.MAP_2'(s(fun(X4,X0),X5),s('type.list.list'(X4),X6))))),s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X2),'type.infer.infer_st'(X3)),'const.infer.fresh_uvar_1'(s('type.infer.infer_st'(X3),X7))))) = s('type.pair.prod'('type.infer.exc'('type.list.list'(X0),X1),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X2),'type.infer.infer_st'(X3))),'const.infer.st_ex_return_2'(s('type.list.list'(X0),happ(s(fun('type.list.list'(X4),'type.list.list'(X0)),happ(s(fun(fun(X4,X0),fun('type.list.list'(X4),'type.list.list'(X0))),'const.list.MAP_0'),s(fun(X4,X0),X5))),s('type.list.list'(X4),X6))),s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X2),'type.infer.infer_st'(X3)),happ(s(fun('type.infer.infer_st'(X3),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X2),'type.infer.infer_st'(X3))),'const.infer.fresh_uvar_0'),s('type.infer.infer_st'(X3),X7)))))) )),
  inference(unit_resulting_resolution,[],[f180,f179,f212])).
fof(f6016,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.num.num',X0),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X1),'type.infer.infer_st'(X2))),'const.infer.st_ex_return_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X3),s('type.num.num',X4))),s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X1),'type.infer.infer_st'(X2)),'const.infer.fresh_uvar_1'(s('type.infer.infer_st'(X2),X5))))) = s('type.pair.prod'('type.infer.exc'('type.num.num',X0),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X1),'type.infer.infer_st'(X2))),'const.pair.,_2'(s('type.infer.exc'('type.num.num',X0),'const.infer.Success_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X3),s('type.num.num',X4))))),s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X1),'type.infer.infer_st'(X2)),'const.infer.fresh_uvar_1'(s('type.infer.infer_st'(X2),X5)))))) )),
  inference(forward_demodulation,[],[f6015,f175])).
fof(f6015,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.num.num',X0),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X1),'type.infer.infer_st'(X2))),'const.infer.st_ex_return_2'(s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.arithmetic.+_1'(s('type.num.num',X3))),s('type.num.num',X4))),s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X1),'type.infer.infer_st'(X2)),'const.infer.fresh_uvar_1'(s('type.infer.infer_st'(X2),X5))))) = s('type.pair.prod'('type.infer.exc'('type.num.num',X0),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X1),'type.infer.infer_st'(X2))),'const.pair.,_2'(s('type.infer.exc'('type.num.num',X0),'const.infer.Success_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X3),s('type.num.num',X4))))),s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X1),'type.infer.infer_st'(X2)),'const.infer.fresh_uvar_1'(s('type.infer.infer_st'(X2),X5)))))) )),
  inference(forward_demodulation,[],[f5684,f179])).
fof(f5684,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.num.num',X0),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X1),'type.infer.infer_st'(X2))),'const.pair.,_2'(s('type.infer.exc'('type.num.num',X0),'const.infer.Success_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X3),s('type.num.num',X4))))),s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X1),'type.infer.infer_st'(X2)),'const.infer.fresh_uvar_1'(s('type.infer.infer_st'(X2),X5))))) = s('type.pair.prod'('type.infer.exc'('type.num.num',X0),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X1),'type.infer.infer_st'(X2))),'const.infer.st_ex_return_2'(s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.arithmetic.+_1'(s('type.num.num',X3))),s('type.num.num',X4))),s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X1),'type.infer.infer_st'(X2)),happ(s(fun('type.infer.infer_st'(X2),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X1),'type.infer.infer_st'(X2))),'const.infer.fresh_uvar_0'),s('type.infer.infer_st'(X2),X5)))))) )),
  inference(unit_resulting_resolution,[],[f175,f179,f212])).
fof(f6014,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X1),'type.infer.infer_st'(X2))),'const.infer.st_ex_return_2'(s('type.infer_t.infer_t','const.infer_t.Infer_Tuvar_1'(s('type.num.num',X3))),s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X1),'type.infer.infer_st'(X2)),'const.infer.fresh_uvar_1'(s('type.infer.infer_st'(X2),X4))))) = s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X1),'type.infer.infer_st'(X2))),'const.pair.,_2'(s('type.infer.exc'('type.infer_t.infer_t',X0),'const.infer.Success_1'(s('type.infer_t.infer_t','const.infer_t.Infer_Tuvar_1'(s('type.num.num',X3))))),s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X1),'type.infer.infer_st'(X2)),'const.infer.fresh_uvar_1'(s('type.infer.infer_st'(X2),X4)))))) )),
  inference(forward_demodulation,[],[f6013,f166])).
fof(f6013,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X1),'type.infer.infer_st'(X2))),'const.infer.st_ex_return_2'(s('type.infer_t.infer_t',happ(s(fun('type.num.num','type.infer_t.infer_t'),'const.infer_t.Infer_Tuvar_0'),s('type.num.num',X3))),s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X1),'type.infer.infer_st'(X2)),'const.infer.fresh_uvar_1'(s('type.infer.infer_st'(X2),X4))))) = s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X1),'type.infer.infer_st'(X2))),'const.pair.,_2'(s('type.infer.exc'('type.infer_t.infer_t',X0),'const.infer.Success_1'(s('type.infer_t.infer_t','const.infer_t.Infer_Tuvar_1'(s('type.num.num',X3))))),s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X1),'type.infer.infer_st'(X2)),'const.infer.fresh_uvar_1'(s('type.infer.infer_st'(X2),X4)))))) )),
  inference(forward_demodulation,[],[f5685,f179])).
fof(f5685,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X1),'type.infer.infer_st'(X2))),'const.pair.,_2'(s('type.infer.exc'('type.infer_t.infer_t',X0),'const.infer.Success_1'(s('type.infer_t.infer_t','const.infer_t.Infer_Tuvar_1'(s('type.num.num',X3))))),s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X1),'type.infer.infer_st'(X2)),'const.infer.fresh_uvar_1'(s('type.infer.infer_st'(X2),X4))))) = s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X1),'type.infer.infer_st'(X2))),'const.infer.st_ex_return_2'(s('type.infer_t.infer_t',happ(s(fun('type.num.num','type.infer_t.infer_t'),'const.infer_t.Infer_Tuvar_0'),s('type.num.num',X3))),s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X1),'type.infer.infer_st'(X2)),happ(s(fun('type.infer.infer_st'(X2),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X1),'type.infer.infer_st'(X2))),'const.infer.fresh_uvar_0'),s('type.infer.infer_st'(X2),X4)))))) )),
  inference(unit_resulting_resolution,[],[f166,f179,f212])).
fof(f6012,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X1),'type.infer.infer_st'(X2))),'const.infer.st_ex_return_2'(s('type.infer_t.infer_t','const.unify.t_walkstar_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X3),s('type.infer_t.infer_t',X4))),s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X1),'type.infer.infer_st'(X2)),'const.infer.fresh_uvar_1'(s('type.infer.infer_st'(X2),X5))))) = s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X1),'type.infer.infer_st'(X2))),'const.pair.,_2'(s('type.infer.exc'('type.infer_t.infer_t',X0),'const.infer.Success_1'(s('type.infer_t.infer_t','const.unify.t_walkstar_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X3),s('type.infer_t.infer_t',X4))))),s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X1),'type.infer.infer_st'(X2)),'const.infer.fresh_uvar_1'(s('type.infer.infer_st'(X2),X5)))))) )),
  inference(forward_demodulation,[],[f6011,f176])).
fof(f6011,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X1),'type.infer.infer_st'(X2))),'const.pair.,_2'(s('type.infer.exc'('type.infer_t.infer_t',X0),'const.infer.Success_1'(s('type.infer_t.infer_t','const.unify.t_walkstar_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X3),s('type.infer_t.infer_t',X4))))),s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X1),'type.infer.infer_st'(X2)),'const.infer.fresh_uvar_1'(s('type.infer.infer_st'(X2),X5))))) = s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X1),'type.infer.infer_st'(X2))),'const.infer.st_ex_return_2'(s('type.infer_t.infer_t',happ(s(fun('type.infer_t.infer_t','type.infer_t.infer_t'),happ(s(fun('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),fun('type.infer_t.infer_t','type.infer_t.infer_t')),'const.unify.t_walkstar_0'),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X3))),s('type.infer_t.infer_t',X4))),s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X1),'type.infer.infer_st'(X2)),'const.infer.fresh_uvar_1'(s('type.infer.infer_st'(X2),X5)))))) )),
  inference(forward_demodulation,[],[f5686,f179])).
fof(f5686,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X1),'type.infer.infer_st'(X2))),'const.pair.,_2'(s('type.infer.exc'('type.infer_t.infer_t',X0),'const.infer.Success_1'(s('type.infer_t.infer_t','const.unify.t_walkstar_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X3),s('type.infer_t.infer_t',X4))))),s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X1),'type.infer.infer_st'(X2)),'const.infer.fresh_uvar_1'(s('type.infer.infer_st'(X2),X5))))) = s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X1),'type.infer.infer_st'(X2))),'const.infer.st_ex_return_2'(s('type.infer_t.infer_t',happ(s(fun('type.infer_t.infer_t','type.infer_t.infer_t'),happ(s(fun('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),fun('type.infer_t.infer_t','type.infer_t.infer_t')),'const.unify.t_walkstar_0'),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X3))),s('type.infer_t.infer_t',X4))),s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X1),'type.infer.infer_st'(X2)),happ(s(fun('type.infer.infer_st'(X2),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X1),'type.infer.infer_st'(X2))),'const.infer.fresh_uvar_0'),s('type.infer.infer_st'(X2),X5)))))) )),
  inference(unit_resulting_resolution,[],[f176,f179,f212])).
fof(f6008,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X0),X2),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X3),'type.infer.infer_st'(X4))),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'(X0,X1),X0),'const.infer.read_1'(s(X0,X5))),s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X3),'type.infer.infer_st'(X4)),'const.infer.fresh_uvar_1'(s('type.infer.infer_st'(X4),X6))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X0),X2),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X3),'type.infer.infer_st'(X4))),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X0),X2),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'(X0,X1),X0),'const.infer.read_1'(s(X0,X5))))),s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X3),'type.infer.infer_st'(X4)),'const.infer.fresh_uvar_1'(s('type.infer.infer_st'(X4),X6)))))) )),
  inference(forward_demodulation,[],[f6007,f178])).
fof(f6007,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X0),X2),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X3),'type.infer.infer_st'(X4))),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X0),X2),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'(X0,X1),X0),'const.infer.read_1'(s(X0,X5))))),s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X3),'type.infer.infer_st'(X4)),'const.infer.fresh_uvar_1'(s('type.infer.infer_st'(X4),X6))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X0),X2),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X3),'type.infer.infer_st'(X4))),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'(X0,X1),X0),happ(s(fun(X0,'type.pair.prod'('type.infer.exc'(X0,X1),X0)),'const.infer.read_0'),s(X0,X5))),s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X3),'type.infer.infer_st'(X4)),'const.infer.fresh_uvar_1'(s('type.infer.infer_st'(X4),X6)))))) )),
  inference(forward_demodulation,[],[f5688,f179])).
fof(f5688,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X0),X2),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X3),'type.infer.infer_st'(X4))),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X0),X2),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'(X0,X1),X0),'const.infer.read_1'(s(X0,X5))))),s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X3),'type.infer.infer_st'(X4)),'const.infer.fresh_uvar_1'(s('type.infer.infer_st'(X4),X6))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X0),X2),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X3),'type.infer.infer_st'(X4))),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'(X0,X1),X0),happ(s(fun(X0,'type.pair.prod'('type.infer.exc'(X0,X1),X0)),'const.infer.read_0'),s(X0,X5))),s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X3),'type.infer.infer_st'(X4)),happ(s(fun('type.infer.infer_st'(X4),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X3),'type.infer.infer_st'(X4))),'const.infer.fresh_uvar_0'),s('type.infer.infer_st'(X4),X6)))))) )),
  inference(unit_resulting_resolution,[],[f178,f179,f212])).
fof(f6006,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),X2),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X3),'type.infer.infer_st'(X4))),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),'const.infer.fresh_uvar_1'(s('type.infer.infer_st'(X1),X5))),s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X3),'type.infer.infer_st'(X4)),'const.infer.fresh_uvar_1'(s('type.infer.infer_st'(X4),X6))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),X2),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X3),'type.infer.infer_st'(X4))),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),X2),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),'const.infer.fresh_uvar_1'(s('type.infer.infer_st'(X1),X5))))),s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X3),'type.infer.infer_st'(X4)),'const.infer.fresh_uvar_1'(s('type.infer.infer_st'(X4),X6)))))) )),
  inference(forward_demodulation,[],[f6005,f179])).
fof(f6005,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),X2),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X3),'type.infer.infer_st'(X4))),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),X2),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),'const.infer.fresh_uvar_1'(s('type.infer.infer_st'(X1),X5))))),s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X3),'type.infer.infer_st'(X4)),'const.infer.fresh_uvar_1'(s('type.infer.infer_st'(X4),X6))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),X2),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X3),'type.infer.infer_st'(X4))),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),happ(s(fun('type.infer.infer_st'(X1),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1))),'const.infer.fresh_uvar_0'),s('type.infer.infer_st'(X1),X5))),s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X3),'type.infer.infer_st'(X4)),'const.infer.fresh_uvar_1'(s('type.infer.infer_st'(X4),X6)))))) )),
  inference(forward_demodulation,[],[f5689,f179])).
fof(f5689,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),X2),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X3),'type.infer.infer_st'(X4))),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),X2),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),'const.infer.fresh_uvar_1'(s('type.infer.infer_st'(X1),X5))))),s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X3),'type.infer.infer_st'(X4)),'const.infer.fresh_uvar_1'(s('type.infer.infer_st'(X4),X6))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),X2),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X3),'type.infer.infer_st'(X4))),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),happ(s(fun('type.infer.infer_st'(X1),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1))),'const.infer.fresh_uvar_0'),s('type.infer.infer_st'(X1),X5))),s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X3),'type.infer.infer_st'(X4)),happ(s(fun('type.infer.infer_st'(X4),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X3),'type.infer.infer_st'(X4))),'const.infer.fresh_uvar_0'),s('type.infer.infer_st'(X4),X6)))))) )),
  inference(unit_resulting_resolution,[],[f179,f179,f212])).
fof(f6004,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X4),'type.infer.infer_st'(X5))),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'(X0,X1),X2),'const.infer.failwith_2'(s(X1,X6),s(X2,X7))),s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X4),'type.infer.infer_st'(X5)),'const.infer.fresh_uvar_1'(s('type.infer.infer_st'(X5),X8))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X4),'type.infer.infer_st'(X5))),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'(X0,X1),X2),'const.infer.failwith_2'(s(X1,X6),s(X2,X7))))),s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X4),'type.infer.infer_st'(X5)),'const.infer.fresh_uvar_1'(s('type.infer.infer_st'(X5),X8)))))) )),
  inference(forward_demodulation,[],[f6003,f204])).
fof(f6003,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X4),'type.infer.infer_st'(X5))),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'(X0,X1),X2),'const.infer.failwith_2'(s(X1,X6),s(X2,X7))))),s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X4),'type.infer.infer_st'(X5)),'const.infer.fresh_uvar_1'(s('type.infer.infer_st'(X5),X8))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X4),'type.infer.infer_st'(X5))),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'(X0,X1),X2),happ(s(fun(X2,'type.pair.prod'('type.infer.exc'(X0,X1),X2)),'const.infer.failwith_1'(s(X1,X6))),s(X2,X7))),s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X4),'type.infer.infer_st'(X5)),'const.infer.fresh_uvar_1'(s('type.infer.infer_st'(X5),X8)))))) )),
  inference(forward_demodulation,[],[f5690,f179])).
fof(f5690,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X4),'type.infer.infer_st'(X5))),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'(X0,X1),X2),'const.infer.failwith_2'(s(X1,X6),s(X2,X7))))),s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X4),'type.infer.infer_st'(X5)),'const.infer.fresh_uvar_1'(s('type.infer.infer_st'(X5),X8))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X4),'type.infer.infer_st'(X5))),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'(X0,X1),X2),happ(s(fun(X2,'type.pair.prod'('type.infer.exc'(X0,X1),X2)),'const.infer.failwith_1'(s(X1,X6))),s(X2,X7))),s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X4),'type.infer.infer_st'(X5)),happ(s(fun('type.infer.infer_st'(X5),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X4),'type.infer.infer_st'(X5))),'const.infer.fresh_uvar_0'),s('type.infer.infer_st'(X5),X8)))))) )),
  inference(unit_resulting_resolution,[],[f204,f179,f212])).
fof(f6002,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),X2),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X3),'type.infer.infer_st'(X4))),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),'const.infer.guard_3'(s(bool,X5),s(X0,X6),s(X1,X7))),s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X3),'type.infer.infer_st'(X4)),'const.infer.fresh_uvar_1'(s('type.infer.infer_st'(X4),X8))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),X2),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X3),'type.infer.infer_st'(X4))),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),X2),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),'const.infer.guard_3'(s(bool,X5),s(X0,X6),s(X1,X7))))),s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X3),'type.infer.infer_st'(X4)),'const.infer.fresh_uvar_1'(s('type.infer.infer_st'(X4),X8)))))) )),
  inference(forward_demodulation,[],[f6001,f183])).
fof(f6001,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),X2),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X3),'type.infer.infer_st'(X4))),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),X2),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),'const.infer.guard_3'(s(bool,X5),s(X0,X6),s(X1,X7))))),s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X3),'type.infer.infer_st'(X4)),'const.infer.fresh_uvar_1'(s('type.infer.infer_st'(X4),X8))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),X2),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X3),'type.infer.infer_st'(X4))),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),happ(s(fun(X1,'type.pair.prod'('type.infer.exc'('type.one.one',X0),X1)),'const.infer.guard_2'(s(bool,X5),s(X0,X6))),s(X1,X7))),s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X3),'type.infer.infer_st'(X4)),'const.infer.fresh_uvar_1'(s('type.infer.infer_st'(X4),X8)))))) )),
  inference(forward_demodulation,[],[f5691,f179])).
fof(f5691,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),X2),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X3),'type.infer.infer_st'(X4))),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),X2),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),'const.infer.guard_3'(s(bool,X5),s(X0,X6),s(X1,X7))))),s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X3),'type.infer.infer_st'(X4)),'const.infer.fresh_uvar_1'(s('type.infer.infer_st'(X4),X8))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),X2),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X3),'type.infer.infer_st'(X4))),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),happ(s(fun(X1,'type.pair.prod'('type.infer.exc'('type.one.one',X0),X1)),'const.infer.guard_2'(s(bool,X5),s(X0,X6))),s(X1,X7))),s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X3),'type.infer.infer_st'(X4)),happ(s(fun('type.infer.infer_st'(X4),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X3),'type.infer.infer_st'(X4))),'const.infer.fresh_uvar_0'),s('type.infer.infer_st'(X4),X8)))))) )),
  inference(unit_resulting_resolution,[],[f183,f179,f212])).
fof(f5998,plain,(
  ( ! [X6,X4,X2,X0,X10,X8,X7,X5,X3,X1,X11,X9] : (s('type.pair.prod'('type.infer.exc'(X0,X1),'type.pair.prod'('type.infer.exc'(X2,X3),X4)),'const.infer.st_ex_return_2'(s(X0,happ(s(fun(X6,X0),X7),s(X6,happ(s(fun(X5,X6),X8),s(X5,X9))))),s('type.pair.prod'('type.infer.exc'(X2,X3),X4),'const.infer.failwith_2'(s(X3,X10),s(X4,X11))))) = s('type.pair.prod'('type.infer.exc'(X0,X1),'type.pair.prod'('type.infer.exc'(X2,X3),X4)),'const.pair.,_2'(s('type.infer.exc'(X0,X1),'const.infer.Success_1'(s(X0,happ(s(fun(X5,X0),'_dst_x0x1_2'(s(fun(X6,X0),X7),s(fun(X5,X6),X8))),s(X5,X9))))),s('type.pair.prod'('type.infer.exc'(X2,X3),X4),'const.infer.failwith_2'(s(X3,X10),s(X4,X11)))))) )),
  inference(forward_demodulation,[],[f5693,f204])).
fof(f5693,plain,(
  ( ! [X6,X4,X2,X0,X10,X8,X7,X5,X3,X1,X11,X9] : (s('type.pair.prod'('type.infer.exc'(X0,X1),'type.pair.prod'('type.infer.exc'(X2,X3),X4)),'const.pair.,_2'(s('type.infer.exc'(X0,X1),'const.infer.Success_1'(s(X0,happ(s(fun(X5,X0),'_dst_x0x1_2'(s(fun(X6,X0),X7),s(fun(X5,X6),X8))),s(X5,X9))))),s('type.pair.prod'('type.infer.exc'(X2,X3),X4),'const.infer.failwith_2'(s(X3,X10),s(X4,X11))))) = s('type.pair.prod'('type.infer.exc'(X0,X1),'type.pair.prod'('type.infer.exc'(X2,X3),X4)),'const.infer.st_ex_return_2'(s(X0,happ(s(fun(X6,X0),X7),s(X6,happ(s(fun(X5,X6),X8),s(X5,X9))))),s('type.pair.prod'('type.infer.exc'(X2,X3),X4),happ(s(fun(X4,'type.pair.prod'('type.infer.exc'(X2,X3),X4)),'const.infer.failwith_1'(s(X3,X10))),s(X4,X11)))))) )),
  inference(unit_resulting_resolution,[],[f206,f204,f212])).
fof(f5965,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'(X0,X1),'type.pair.prod'('type.infer.exc'(X2,X3),X4)),'const.infer.st_ex_return_2'(s(X0,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(X0),X5))),s('type.pair.prod'('type.infer.exc'(X2,X3),X4),'const.infer.failwith_2'(s(X3,X6),s(X4,X7))))) = s('type.pair.prod'('type.infer.exc'(X0,X1),'type.pair.prod'('type.infer.exc'(X2,X3),X4)),'const.pair.,_2'(s('type.infer.exc'(X0,X1),'const.infer.Success_1'(s(X0,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(X0),X5))))),s('type.pair.prod'('type.infer.exc'(X2,X3),X4),'const.infer.failwith_2'(s(X3,X6),s(X4,X7)))))) )),
  inference(forward_demodulation,[],[f5964,f168])).
fof(f5964,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'(X0,X1),'type.pair.prod'('type.infer.exc'(X2,X3),X4)),'const.pair.,_2'(s('type.infer.exc'(X0,X1),'const.infer.Success_1'(s(X0,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(X0),X5))))),s('type.pair.prod'('type.infer.exc'(X2,X3),X4),'const.infer.failwith_2'(s(X3,X6),s(X4,X7))))) = s('type.pair.prod'('type.infer.exc'(X0,X1),'type.pair.prod'('type.infer.exc'(X2,X3),X4)),'const.infer.st_ex_return_2'(s(X0,happ(s(fun('type.infer.infer_st'(X0),X0),'const.infer.infer_st_subst_0'),s('type.infer.infer_st'(X0),X5))),s('type.pair.prod'('type.infer.exc'(X2,X3),X4),'const.infer.failwith_2'(s(X3,X6),s(X4,X7)))))) )),
  inference(forward_demodulation,[],[f5714,f204])).
fof(f5714,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'(X0,X1),'type.pair.prod'('type.infer.exc'(X2,X3),X4)),'const.pair.,_2'(s('type.infer.exc'(X0,X1),'const.infer.Success_1'(s(X0,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(X0),X5))))),s('type.pair.prod'('type.infer.exc'(X2,X3),X4),'const.infer.failwith_2'(s(X3,X6),s(X4,X7))))) = s('type.pair.prod'('type.infer.exc'(X0,X1),'type.pair.prod'('type.infer.exc'(X2,X3),X4)),'const.infer.st_ex_return_2'(s(X0,happ(s(fun('type.infer.infer_st'(X0),X0),'const.infer.infer_st_subst_0'),s('type.infer.infer_st'(X0),X5))),s('type.pair.prod'('type.infer.exc'(X2,X3),X4),happ(s(fun(X4,'type.pair.prod'('type.infer.exc'(X2,X3),X4)),'const.infer.failwith_1'(s(X3,X6))),s(X4,X7)))))) )),
  inference(unit_resulting_resolution,[],[f168,f204,f212])).
fof(f5963,plain,(
  ( ! [X6,X4,X2,X0,X10,X8,X7,X5,X3,X1,X11,X9] : (s('type.pair.prod'('type.infer.exc'(X0,X1),'type.pair.prod'('type.infer.exc'(X2,X3),X4)),'const.infer.st_ex_return_2'(s(X0,happ(s(fun(X7,X0),'_dst_x0x1_2'(s(fun(X5,X0),X6),s(fun(X7,X5),X8))),s(X7,X9))),s('type.pair.prod'('type.infer.exc'(X2,X3),X4),'const.infer.failwith_2'(s(X3,X10),s(X4,X11))))) = s('type.pair.prod'('type.infer.exc'(X0,X1),'type.pair.prod'('type.infer.exc'(X2,X3),X4)),'const.pair.,_2'(s('type.infer.exc'(X0,X1),'const.infer.Success_1'(s(X0,happ(s(fun(X5,X0),X6),s(X5,happ(s(fun(X7,X5),X8),s(X7,X9))))))),s('type.pair.prod'('type.infer.exc'(X2,X3),X4),'const.infer.failwith_2'(s(X3,X10),s(X4,X11)))))) )),
  inference(forward_demodulation,[],[f5715,f204])).
fof(f5715,plain,(
  ( ! [X6,X4,X2,X0,X10,X8,X7,X5,X3,X1,X11,X9] : (s('type.pair.prod'('type.infer.exc'(X0,X1),'type.pair.prod'('type.infer.exc'(X2,X3),X4)),'const.pair.,_2'(s('type.infer.exc'(X0,X1),'const.infer.Success_1'(s(X0,happ(s(fun(X5,X0),X6),s(X5,happ(s(fun(X7,X5),X8),s(X7,X9))))))),s('type.pair.prod'('type.infer.exc'(X2,X3),X4),'const.infer.failwith_2'(s(X3,X10),s(X4,X11))))) = s('type.pair.prod'('type.infer.exc'(X0,X1),'type.pair.prod'('type.infer.exc'(X2,X3),X4)),'const.infer.st_ex_return_2'(s(X0,happ(s(fun(X7,X0),'_dst_x0x1_2'(s(fun(X5,X0),X6),s(fun(X7,X5),X8))),s(X7,X9))),s('type.pair.prod'('type.infer.exc'(X2,X3),X4),happ(s(fun(X4,'type.pair.prod'('type.infer.exc'(X2,X3),X4)),'const.infer.failwith_1'(s(X3,X10))),s(X4,X11)))))) )),
  inference(unit_resulting_resolution,[],[f206,f204,f212])).
fof(f5960,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'(fun(X0,'type.one.one'),X1),'type.pair.prod'('type.infer.exc'(X2,X3),X4)),'const.infer.st_ex_return_2'(s(fun(X0,'type.one.one'),X8),s('type.pair.prod'('type.infer.exc'(X2,X3),X4),'const.infer.failwith_2'(s(X3,X6),s(X4,X7))))) = s('type.pair.prod'('type.infer.exc'(fun(X0,'type.one.one'),X1),'type.pair.prod'('type.infer.exc'(X2,X3),X4)),'const.pair.,_2'(s('type.infer.exc'(fun(X0,'type.one.one'),X1),'const.infer.Success_1'(s(fun(X0,'type.one.one'),X5))),s('type.pair.prod'('type.infer.exc'(X2,X3),X4),'const.infer.failwith_2'(s(X3,X6),s(X4,X7)))))) )),
  inference(forward_demodulation,[],[f5717,f204])).
fof(f5717,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'(fun(X0,'type.one.one'),X1),'type.pair.prod'('type.infer.exc'(X2,X3),X4)),'const.pair.,_2'(s('type.infer.exc'(fun(X0,'type.one.one'),X1),'const.infer.Success_1'(s(fun(X0,'type.one.one'),X5))),s('type.pair.prod'('type.infer.exc'(X2,X3),X4),'const.infer.failwith_2'(s(X3,X6),s(X4,X7))))) = s('type.pair.prod'('type.infer.exc'(fun(X0,'type.one.one'),X1),'type.pair.prod'('type.infer.exc'(X2,X3),X4)),'const.infer.st_ex_return_2'(s(fun(X0,'type.one.one'),X8),s('type.pair.prod'('type.infer.exc'(X2,X3),X4),happ(s(fun(X4,'type.pair.prod'('type.infer.exc'(X2,X3),X4)),'const.infer.failwith_1'(s(X3,X6))),s(X4,X7)))))) )),
  inference(unit_resulting_resolution,[],[f605,f204,f212])).
fof(f5959,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1,X9] : (s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,'type.one.one')),X2),'type.pair.prod'('type.infer.exc'(X3,X4),X5)),'const.infer.st_ex_return_2'(s(fun(X0,fun(X1,'type.one.one')),X9),s('type.pair.prod'('type.infer.exc'(X3,X4),X5),'const.infer.failwith_2'(s(X4,X7),s(X5,X8))))) = s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,'type.one.one')),X2),'type.pair.prod'('type.infer.exc'(X3,X4),X5)),'const.pair.,_2'(s('type.infer.exc'(fun(X0,fun(X1,'type.one.one')),X2),'const.infer.Success_1'(s(fun(X0,fun(X1,'type.one.one')),X6))),s('type.pair.prod'('type.infer.exc'(X3,X4),X5),'const.infer.failwith_2'(s(X4,X7),s(X5,X8)))))) )),
  inference(forward_demodulation,[],[f5718,f204])).
fof(f5718,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1,X9] : (s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,'type.one.one')),X2),'type.pair.prod'('type.infer.exc'(X3,X4),X5)),'const.pair.,_2'(s('type.infer.exc'(fun(X0,fun(X1,'type.one.one')),X2),'const.infer.Success_1'(s(fun(X0,fun(X1,'type.one.one')),X6))),s('type.pair.prod'('type.infer.exc'(X3,X4),X5),'const.infer.failwith_2'(s(X4,X7),s(X5,X8))))) = s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,'type.one.one')),X2),'type.pair.prod'('type.infer.exc'(X3,X4),X5)),'const.infer.st_ex_return_2'(s(fun(X0,fun(X1,'type.one.one')),X9),s('type.pair.prod'('type.infer.exc'(X3,X4),X5),happ(s(fun(X5,'type.pair.prod'('type.infer.exc'(X3,X4),X5)),'const.infer.failwith_1'(s(X4,X7))),s(X5,X8)))))) )),
  inference(unit_resulting_resolution,[],[f724,f204,f212])).
fof(f5958,plain,(
  ( ! [X6,X4,X2,X0,X10,X8,X7,X5,X3,X1,X9] : (s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,fun(X2,'type.one.one'))),X3),'type.pair.prod'('type.infer.exc'(X4,X5),X6)),'const.infer.st_ex_return_2'(s(fun(X0,fun(X1,fun(X2,'type.one.one'))),X7),s('type.pair.prod'('type.infer.exc'(X4,X5),X6),'const.infer.failwith_2'(s(X5,X8),s(X6,X9))))) = s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,fun(X2,'type.one.one'))),X3),'type.pair.prod'('type.infer.exc'(X4,X5),X6)),'const.pair.,_2'(s('type.infer.exc'(fun(X0,fun(X1,fun(X2,'type.one.one'))),X3),'const.infer.Success_1'(s(fun(X0,fun(X1,fun(X2,'type.one.one'))),X10))),s('type.pair.prod'('type.infer.exc'(X4,X5),X6),'const.infer.failwith_2'(s(X5,X8),s(X6,X9)))))) )),
  inference(forward_demodulation,[],[f5719,f204])).
fof(f5719,plain,(
  ( ! [X6,X4,X2,X0,X10,X8,X7,X5,X3,X1,X9] : (s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,fun(X2,'type.one.one'))),X3),'type.pair.prod'('type.infer.exc'(X4,X5),X6)),'const.infer.st_ex_return_2'(s(fun(X0,fun(X1,fun(X2,'type.one.one'))),X7),s('type.pair.prod'('type.infer.exc'(X4,X5),X6),happ(s(fun(X6,'type.pair.prod'('type.infer.exc'(X4,X5),X6)),'const.infer.failwith_1'(s(X5,X8))),s(X6,X9))))) = s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,fun(X2,'type.one.one'))),X3),'type.pair.prod'('type.infer.exc'(X4,X5),X6)),'const.pair.,_2'(s('type.infer.exc'(fun(X0,fun(X1,fun(X2,'type.one.one'))),X3),'const.infer.Success_1'(s(fun(X0,fun(X1,fun(X2,'type.one.one'))),X10))),s('type.pair.prod'('type.infer.exc'(X4,X5),X6),'const.infer.failwith_2'(s(X5,X8),s(X6,X9)))))) )),
  inference(unit_resulting_resolution,[],[f752,f204,f212])).
fof(f5957,plain,(
  ( ! [X6,X4,X2,X0,X10,X8,X7,X5,X3,X1,X11,X9] : (s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,fun(X2,fun(X3,'type.one.one')))),X4),'type.pair.prod'('type.infer.exc'(X5,X6),X7)),'const.infer.st_ex_return_2'(s(fun(X0,fun(X1,fun(X2,fun(X3,'type.one.one')))),X8),s('type.pair.prod'('type.infer.exc'(X5,X6),X7),'const.infer.failwith_2'(s(X6,X9),s(X7,X10))))) = s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,fun(X2,fun(X3,'type.one.one')))),X4),'type.pair.prod'('type.infer.exc'(X5,X6),X7)),'const.pair.,_2'(s('type.infer.exc'(fun(X0,fun(X1,fun(X2,fun(X3,'type.one.one')))),X4),'const.infer.Success_1'(s(fun(X0,fun(X1,fun(X2,fun(X3,'type.one.one')))),X11))),s('type.pair.prod'('type.infer.exc'(X5,X6),X7),'const.infer.failwith_2'(s(X6,X9),s(X7,X10)))))) )),
  inference(forward_demodulation,[],[f5720,f204])).
fof(f5720,plain,(
  ( ! [X6,X4,X2,X0,X10,X8,X7,X5,X3,X1,X11,X9] : (s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,fun(X2,fun(X3,'type.one.one')))),X4),'type.pair.prod'('type.infer.exc'(X5,X6),X7)),'const.infer.st_ex_return_2'(s(fun(X0,fun(X1,fun(X2,fun(X3,'type.one.one')))),X8),s('type.pair.prod'('type.infer.exc'(X5,X6),X7),happ(s(fun(X7,'type.pair.prod'('type.infer.exc'(X5,X6),X7)),'const.infer.failwith_1'(s(X6,X9))),s(X7,X10))))) = s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,fun(X2,fun(X3,'type.one.one')))),X4),'type.pair.prod'('type.infer.exc'(X5,X6),X7)),'const.pair.,_2'(s('type.infer.exc'(fun(X0,fun(X1,fun(X2,fun(X3,'type.one.one')))),X4),'const.infer.Success_1'(s(fun(X0,fun(X1,fun(X2,fun(X3,'type.one.one')))),X11))),s('type.pair.prod'('type.infer.exc'(X5,X6),X7),'const.infer.failwith_2'(s(X6,X9),s(X7,X10)))))) )),
  inference(unit_resulting_resolution,[],[f787,f204,f212])).
fof(f5956,plain,(
  ( ! [X6,X4,X2,X0,X12,X10,X8,X7,X5,X3,X1,X11,X9] : (s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,fun(X2,fun(X3,fun(X4,'type.one.one'))))),X5),'type.pair.prod'('type.infer.exc'(X6,X7),X8)),'const.infer.st_ex_return_2'(s(fun(X0,fun(X1,fun(X2,fun(X3,fun(X4,'type.one.one'))))),X9),s('type.pair.prod'('type.infer.exc'(X6,X7),X8),'const.infer.failwith_2'(s(X7,X10),s(X8,X11))))) = s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,fun(X2,fun(X3,fun(X4,'type.one.one'))))),X5),'type.pair.prod'('type.infer.exc'(X6,X7),X8)),'const.pair.,_2'(s('type.infer.exc'(fun(X0,fun(X1,fun(X2,fun(X3,fun(X4,'type.one.one'))))),X5),'const.infer.Success_1'(s(fun(X0,fun(X1,fun(X2,fun(X3,fun(X4,'type.one.one'))))),X12))),s('type.pair.prod'('type.infer.exc'(X6,X7),X8),'const.infer.failwith_2'(s(X7,X10),s(X8,X11)))))) )),
  inference(forward_demodulation,[],[f5721,f204])).
fof(f5721,plain,(
  ( ! [X6,X4,X2,X0,X12,X10,X8,X7,X5,X3,X1,X11,X9] : (s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,fun(X2,fun(X3,fun(X4,'type.one.one'))))),X5),'type.pair.prod'('type.infer.exc'(X6,X7),X8)),'const.infer.st_ex_return_2'(s(fun(X0,fun(X1,fun(X2,fun(X3,fun(X4,'type.one.one'))))),X9),s('type.pair.prod'('type.infer.exc'(X6,X7),X8),happ(s(fun(X8,'type.pair.prod'('type.infer.exc'(X6,X7),X8)),'const.infer.failwith_1'(s(X7,X10))),s(X8,X11))))) = s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,fun(X2,fun(X3,fun(X4,'type.one.one'))))),X5),'type.pair.prod'('type.infer.exc'(X6,X7),X8)),'const.pair.,_2'(s('type.infer.exc'(fun(X0,fun(X1,fun(X2,fun(X3,fun(X4,'type.one.one'))))),X5),'const.infer.Success_1'(s(fun(X0,fun(X1,fun(X2,fun(X3,fun(X4,'type.one.one'))))),X12))),s('type.pair.prod'('type.infer.exc'(X6,X7),X8),'const.infer.failwith_2'(s(X7,X10),s(X8,X11)))))) )),
  inference(unit_resulting_resolution,[],[f815,f204,f212])).
fof(f5953,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.one.one',X0),'type.pair.prod'('type.infer.exc'(X1,X2),X3)),'const.infer.st_ex_return_2'(s('type.one.one',X7),s('type.pair.prod'('type.infer.exc'(X1,X2),X3),'const.infer.failwith_2'(s(X2,X5),s(X3,X6))))) = s('type.pair.prod'('type.infer.exc'('type.one.one',X0),'type.pair.prod'('type.infer.exc'(X1,X2),X3)),'const.pair.,_2'(s('type.infer.exc'('type.one.one',X0),'const.infer.Success_1'(s('type.one.one',X4))),s('type.pair.prod'('type.infer.exc'(X1,X2),X3),'const.infer.failwith_2'(s(X2,X5),s(X3,X6)))))) )),
  inference(forward_demodulation,[],[f5724,f204])).
fof(f5724,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.one.one',X0),'type.pair.prod'('type.infer.exc'(X1,X2),X3)),'const.pair.,_2'(s('type.infer.exc'('type.one.one',X0),'const.infer.Success_1'(s('type.one.one',X4))),s('type.pair.prod'('type.infer.exc'(X1,X2),X3),'const.infer.failwith_2'(s(X2,X5),s(X3,X6))))) = s('type.pair.prod'('type.infer.exc'('type.one.one',X0),'type.pair.prod'('type.infer.exc'(X1,X2),X3)),'const.infer.st_ex_return_2'(s('type.one.one',X7),s('type.pair.prod'('type.infer.exc'(X1,X2),X3),happ(s(fun(X3,'type.pair.prod'('type.infer.exc'(X1,X2),X3)),'const.infer.failwith_1'(s(X2,X5))),s(X3,X6)))))) )),
  inference(unit_resulting_resolution,[],[f258,f204,f212])).
fof(f5952,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1,X9] : (s('type.pair.prod'('type.infer.exc'('type.list.list'(X0),X1),'type.pair.prod'('type.infer.exc'(X2,X3),X4)),'const.infer.st_ex_return_2'(s('type.list.list'(X0),'const.list.MAP_2'(s(fun(X5,X0),X6),s('type.list.list'(X5),X7))),s('type.pair.prod'('type.infer.exc'(X2,X3),X4),'const.infer.failwith_2'(s(X3,X8),s(X4,X9))))) = s('type.pair.prod'('type.infer.exc'('type.list.list'(X0),X1),'type.pair.prod'('type.infer.exc'(X2,X3),X4)),'const.pair.,_2'(s('type.infer.exc'('type.list.list'(X0),X1),'const.infer.Success_1'(s('type.list.list'(X0),'const.list.MAP_2'(s(fun(X5,X0),X6),s('type.list.list'(X5),X7))))),s('type.pair.prod'('type.infer.exc'(X2,X3),X4),'const.infer.failwith_2'(s(X3,X8),s(X4,X9)))))) )),
  inference(forward_demodulation,[],[f5951,f180])).
fof(f5951,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1,X9] : (s('type.pair.prod'('type.infer.exc'('type.list.list'(X0),X1),'type.pair.prod'('type.infer.exc'(X2,X3),X4)),'const.pair.,_2'(s('type.infer.exc'('type.list.list'(X0),X1),'const.infer.Success_1'(s('type.list.list'(X0),'const.list.MAP_2'(s(fun(X5,X0),X6),s('type.list.list'(X5),X7))))),s('type.pair.prod'('type.infer.exc'(X2,X3),X4),'const.infer.failwith_2'(s(X3,X8),s(X4,X9))))) = s('type.pair.prod'('type.infer.exc'('type.list.list'(X0),X1),'type.pair.prod'('type.infer.exc'(X2,X3),X4)),'const.infer.st_ex_return_2'(s('type.list.list'(X0),happ(s(fun('type.list.list'(X5),'type.list.list'(X0)),happ(s(fun(fun(X5,X0),fun('type.list.list'(X5),'type.list.list'(X0))),'const.list.MAP_0'),s(fun(X5,X0),X6))),s('type.list.list'(X5),X7))),s('type.pair.prod'('type.infer.exc'(X2,X3),X4),'const.infer.failwith_2'(s(X3,X8),s(X4,X9)))))) )),
  inference(forward_demodulation,[],[f5725,f204])).
fof(f5725,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1,X9] : (s('type.pair.prod'('type.infer.exc'('type.list.list'(X0),X1),'type.pair.prod'('type.infer.exc'(X2,X3),X4)),'const.pair.,_2'(s('type.infer.exc'('type.list.list'(X0),X1),'const.infer.Success_1'(s('type.list.list'(X0),'const.list.MAP_2'(s(fun(X5,X0),X6),s('type.list.list'(X5),X7))))),s('type.pair.prod'('type.infer.exc'(X2,X3),X4),'const.infer.failwith_2'(s(X3,X8),s(X4,X9))))) = s('type.pair.prod'('type.infer.exc'('type.list.list'(X0),X1),'type.pair.prod'('type.infer.exc'(X2,X3),X4)),'const.infer.st_ex_return_2'(s('type.list.list'(X0),happ(s(fun('type.list.list'(X5),'type.list.list'(X0)),happ(s(fun(fun(X5,X0),fun('type.list.list'(X5),'type.list.list'(X0))),'const.list.MAP_0'),s(fun(X5,X0),X6))),s('type.list.list'(X5),X7))),s('type.pair.prod'('type.infer.exc'(X2,X3),X4),happ(s(fun(X4,'type.pair.prod'('type.infer.exc'(X2,X3),X4)),'const.infer.failwith_1'(s(X3,X8))),s(X4,X9)))))) )),
  inference(unit_resulting_resolution,[],[f180,f204,f212])).
fof(f5946,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.num.num',X0),'type.pair.prod'('type.infer.exc'(X1,X2),X3)),'const.infer.st_ex_return_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X4),s('type.num.num',X5))),s('type.pair.prod'('type.infer.exc'(X1,X2),X3),'const.infer.failwith_2'(s(X2,X6),s(X3,X7))))) = s('type.pair.prod'('type.infer.exc'('type.num.num',X0),'type.pair.prod'('type.infer.exc'(X1,X2),X3)),'const.pair.,_2'(s('type.infer.exc'('type.num.num',X0),'const.infer.Success_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X4),s('type.num.num',X5))))),s('type.pair.prod'('type.infer.exc'(X1,X2),X3),'const.infer.failwith_2'(s(X2,X6),s(X3,X7)))))) )),
  inference(forward_demodulation,[],[f5945,f175])).
fof(f5945,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.num.num',X0),'type.pair.prod'('type.infer.exc'(X1,X2),X3)),'const.infer.st_ex_return_2'(s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.arithmetic.+_1'(s('type.num.num',X4))),s('type.num.num',X5))),s('type.pair.prod'('type.infer.exc'(X1,X2),X3),'const.infer.failwith_2'(s(X2,X6),s(X3,X7))))) = s('type.pair.prod'('type.infer.exc'('type.num.num',X0),'type.pair.prod'('type.infer.exc'(X1,X2),X3)),'const.pair.,_2'(s('type.infer.exc'('type.num.num',X0),'const.infer.Success_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X4),s('type.num.num',X5))))),s('type.pair.prod'('type.infer.exc'(X1,X2),X3),'const.infer.failwith_2'(s(X2,X6),s(X3,X7)))))) )),
  inference(forward_demodulation,[],[f5728,f204])).
fof(f5728,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.num.num',X0),'type.pair.prod'('type.infer.exc'(X1,X2),X3)),'const.pair.,_2'(s('type.infer.exc'('type.num.num',X0),'const.infer.Success_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X4),s('type.num.num',X5))))),s('type.pair.prod'('type.infer.exc'(X1,X2),X3),'const.infer.failwith_2'(s(X2,X6),s(X3,X7))))) = s('type.pair.prod'('type.infer.exc'('type.num.num',X0),'type.pair.prod'('type.infer.exc'(X1,X2),X3)),'const.infer.st_ex_return_2'(s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.arithmetic.+_1'(s('type.num.num',X4))),s('type.num.num',X5))),s('type.pair.prod'('type.infer.exc'(X1,X2),X3),happ(s(fun(X3,'type.pair.prod'('type.infer.exc'(X1,X2),X3)),'const.infer.failwith_1'(s(X2,X6))),s(X3,X7)))))) )),
  inference(unit_resulting_resolution,[],[f175,f204,f212])).
fof(f5944,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.pair.prod'('type.infer.exc'(X1,X2),X3)),'const.infer.st_ex_return_2'(s('type.infer_t.infer_t','const.infer_t.Infer_Tuvar_1'(s('type.num.num',X4))),s('type.pair.prod'('type.infer.exc'(X1,X2),X3),'const.infer.failwith_2'(s(X2,X5),s(X3,X6))))) = s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.pair.prod'('type.infer.exc'(X1,X2),X3)),'const.pair.,_2'(s('type.infer.exc'('type.infer_t.infer_t',X0),'const.infer.Success_1'(s('type.infer_t.infer_t','const.infer_t.Infer_Tuvar_1'(s('type.num.num',X4))))),s('type.pair.prod'('type.infer.exc'(X1,X2),X3),'const.infer.failwith_2'(s(X2,X5),s(X3,X6)))))) )),
  inference(forward_demodulation,[],[f5943,f166])).
fof(f5943,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.pair.prod'('type.infer.exc'(X1,X2),X3)),'const.infer.st_ex_return_2'(s('type.infer_t.infer_t',happ(s(fun('type.num.num','type.infer_t.infer_t'),'const.infer_t.Infer_Tuvar_0'),s('type.num.num',X4))),s('type.pair.prod'('type.infer.exc'(X1,X2),X3),'const.infer.failwith_2'(s(X2,X5),s(X3,X6))))) = s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.pair.prod'('type.infer.exc'(X1,X2),X3)),'const.pair.,_2'(s('type.infer.exc'('type.infer_t.infer_t',X0),'const.infer.Success_1'(s('type.infer_t.infer_t','const.infer_t.Infer_Tuvar_1'(s('type.num.num',X4))))),s('type.pair.prod'('type.infer.exc'(X1,X2),X3),'const.infer.failwith_2'(s(X2,X5),s(X3,X6)))))) )),
  inference(forward_demodulation,[],[f5729,f204])).
fof(f5729,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.pair.prod'('type.infer.exc'(X1,X2),X3)),'const.pair.,_2'(s('type.infer.exc'('type.infer_t.infer_t',X0),'const.infer.Success_1'(s('type.infer_t.infer_t','const.infer_t.Infer_Tuvar_1'(s('type.num.num',X4))))),s('type.pair.prod'('type.infer.exc'(X1,X2),X3),'const.infer.failwith_2'(s(X2,X5),s(X3,X6))))) = s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.pair.prod'('type.infer.exc'(X1,X2),X3)),'const.infer.st_ex_return_2'(s('type.infer_t.infer_t',happ(s(fun('type.num.num','type.infer_t.infer_t'),'const.infer_t.Infer_Tuvar_0'),s('type.num.num',X4))),s('type.pair.prod'('type.infer.exc'(X1,X2),X3),happ(s(fun(X3,'type.pair.prod'('type.infer.exc'(X1,X2),X3)),'const.infer.failwith_1'(s(X2,X5))),s(X3,X6)))))) )),
  inference(unit_resulting_resolution,[],[f166,f204,f212])).
fof(f5942,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.pair.prod'('type.infer.exc'(X1,X2),X3)),'const.infer.st_ex_return_2'(s('type.infer_t.infer_t','const.unify.t_walkstar_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X4),s('type.infer_t.infer_t',X5))),s('type.pair.prod'('type.infer.exc'(X1,X2),X3),'const.infer.failwith_2'(s(X2,X6),s(X3,X7))))) = s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.pair.prod'('type.infer.exc'(X1,X2),X3)),'const.pair.,_2'(s('type.infer.exc'('type.infer_t.infer_t',X0),'const.infer.Success_1'(s('type.infer_t.infer_t','const.unify.t_walkstar_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X4),s('type.infer_t.infer_t',X5))))),s('type.pair.prod'('type.infer.exc'(X1,X2),X3),'const.infer.failwith_2'(s(X2,X6),s(X3,X7)))))) )),
  inference(forward_demodulation,[],[f5941,f176])).
fof(f5941,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.pair.prod'('type.infer.exc'(X1,X2),X3)),'const.pair.,_2'(s('type.infer.exc'('type.infer_t.infer_t',X0),'const.infer.Success_1'(s('type.infer_t.infer_t','const.unify.t_walkstar_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X4),s('type.infer_t.infer_t',X5))))),s('type.pair.prod'('type.infer.exc'(X1,X2),X3),'const.infer.failwith_2'(s(X2,X6),s(X3,X7))))) = s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.pair.prod'('type.infer.exc'(X1,X2),X3)),'const.infer.st_ex_return_2'(s('type.infer_t.infer_t',happ(s(fun('type.infer_t.infer_t','type.infer_t.infer_t'),happ(s(fun('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),fun('type.infer_t.infer_t','type.infer_t.infer_t')),'const.unify.t_walkstar_0'),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X4))),s('type.infer_t.infer_t',X5))),s('type.pair.prod'('type.infer.exc'(X1,X2),X3),'const.infer.failwith_2'(s(X2,X6),s(X3,X7)))))) )),
  inference(forward_demodulation,[],[f5730,f204])).
fof(f5730,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.pair.prod'('type.infer.exc'(X1,X2),X3)),'const.pair.,_2'(s('type.infer.exc'('type.infer_t.infer_t',X0),'const.infer.Success_1'(s('type.infer_t.infer_t','const.unify.t_walkstar_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X4),s('type.infer_t.infer_t',X5))))),s('type.pair.prod'('type.infer.exc'(X1,X2),X3),'const.infer.failwith_2'(s(X2,X6),s(X3,X7))))) = s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.pair.prod'('type.infer.exc'(X1,X2),X3)),'const.infer.st_ex_return_2'(s('type.infer_t.infer_t',happ(s(fun('type.infer_t.infer_t','type.infer_t.infer_t'),happ(s(fun('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),fun('type.infer_t.infer_t','type.infer_t.infer_t')),'const.unify.t_walkstar_0'),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X4))),s('type.infer_t.infer_t',X5))),s('type.pair.prod'('type.infer.exc'(X1,X2),X3),happ(s(fun(X3,'type.pair.prod'('type.infer.exc'(X1,X2),X3)),'const.infer.failwith_1'(s(X2,X6))),s(X3,X7)))))) )),
  inference(unit_resulting_resolution,[],[f176,f204,f212])).
fof(f5938,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X0),X2),'type.pair.prod'('type.infer.exc'(X3,X4),X5)),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'(X0,X1),X0),'const.infer.read_1'(s(X0,X6))),s('type.pair.prod'('type.infer.exc'(X3,X4),X5),'const.infer.failwith_2'(s(X4,X7),s(X5,X8))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X0),X2),'type.pair.prod'('type.infer.exc'(X3,X4),X5)),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X0),X2),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'(X0,X1),X0),'const.infer.read_1'(s(X0,X6))))),s('type.pair.prod'('type.infer.exc'(X3,X4),X5),'const.infer.failwith_2'(s(X4,X7),s(X5,X8)))))) )),
  inference(forward_demodulation,[],[f5937,f178])).
fof(f5937,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X0),X2),'type.pair.prod'('type.infer.exc'(X3,X4),X5)),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X0),X2),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'(X0,X1),X0),'const.infer.read_1'(s(X0,X6))))),s('type.pair.prod'('type.infer.exc'(X3,X4),X5),'const.infer.failwith_2'(s(X4,X7),s(X5,X8))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X0),X2),'type.pair.prod'('type.infer.exc'(X3,X4),X5)),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'(X0,X1),X0),happ(s(fun(X0,'type.pair.prod'('type.infer.exc'(X0,X1),X0)),'const.infer.read_0'),s(X0,X6))),s('type.pair.prod'('type.infer.exc'(X3,X4),X5),'const.infer.failwith_2'(s(X4,X7),s(X5,X8)))))) )),
  inference(forward_demodulation,[],[f5732,f204])).
fof(f5732,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X0),X2),'type.pair.prod'('type.infer.exc'(X3,X4),X5)),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X0),X2),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'(X0,X1),X0),'const.infer.read_1'(s(X0,X6))))),s('type.pair.prod'('type.infer.exc'(X3,X4),X5),'const.infer.failwith_2'(s(X4,X7),s(X5,X8))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X0),X2),'type.pair.prod'('type.infer.exc'(X3,X4),X5)),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'(X0,X1),X0),happ(s(fun(X0,'type.pair.prod'('type.infer.exc'(X0,X1),X0)),'const.infer.read_0'),s(X0,X6))),s('type.pair.prod'('type.infer.exc'(X3,X4),X5),happ(s(fun(X5,'type.pair.prod'('type.infer.exc'(X3,X4),X5)),'const.infer.failwith_1'(s(X4,X7))),s(X5,X8)))))) )),
  inference(unit_resulting_resolution,[],[f178,f204,f212])).
fof(f5936,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),X2),'type.pair.prod'('type.infer.exc'(X3,X4),X5)),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),'const.infer.fresh_uvar_1'(s('type.infer.infer_st'(X1),X6))),s('type.pair.prod'('type.infer.exc'(X3,X4),X5),'const.infer.failwith_2'(s(X4,X7),s(X5,X8))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),X2),'type.pair.prod'('type.infer.exc'(X3,X4),X5)),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),X2),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),'const.infer.fresh_uvar_1'(s('type.infer.infer_st'(X1),X6))))),s('type.pair.prod'('type.infer.exc'(X3,X4),X5),'const.infer.failwith_2'(s(X4,X7),s(X5,X8)))))) )),
  inference(forward_demodulation,[],[f5935,f179])).
fof(f5935,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),X2),'type.pair.prod'('type.infer.exc'(X3,X4),X5)),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),X2),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),'const.infer.fresh_uvar_1'(s('type.infer.infer_st'(X1),X6))))),s('type.pair.prod'('type.infer.exc'(X3,X4),X5),'const.infer.failwith_2'(s(X4,X7),s(X5,X8))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),X2),'type.pair.prod'('type.infer.exc'(X3,X4),X5)),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),happ(s(fun('type.infer.infer_st'(X1),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1))),'const.infer.fresh_uvar_0'),s('type.infer.infer_st'(X1),X6))),s('type.pair.prod'('type.infer.exc'(X3,X4),X5),'const.infer.failwith_2'(s(X4,X7),s(X5,X8)))))) )),
  inference(forward_demodulation,[],[f5733,f204])).
fof(f5733,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),X2),'type.pair.prod'('type.infer.exc'(X3,X4),X5)),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),X2),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),'const.infer.fresh_uvar_1'(s('type.infer.infer_st'(X1),X6))))),s('type.pair.prod'('type.infer.exc'(X3,X4),X5),'const.infer.failwith_2'(s(X4,X7),s(X5,X8))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),X2),'type.pair.prod'('type.infer.exc'(X3,X4),X5)),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),happ(s(fun('type.infer.infer_st'(X1),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1))),'const.infer.fresh_uvar_0'),s('type.infer.infer_st'(X1),X6))),s('type.pair.prod'('type.infer.exc'(X3,X4),X5),happ(s(fun(X5,'type.pair.prod'('type.infer.exc'(X3,X4),X5)),'const.infer.failwith_1'(s(X4,X7))),s(X5,X8)))))) )),
  inference(unit_resulting_resolution,[],[f179,f204,f212])).
fof(f5934,plain,(
  ( ! [X6,X4,X2,X0,X10,X8,X7,X5,X3,X1,X9] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),'type.pair.prod'('type.infer.exc'(X4,X5),X6)),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'(X0,X1),X2),'const.infer.failwith_2'(s(X1,X7),s(X2,X8))),s('type.pair.prod'('type.infer.exc'(X4,X5),X6),'const.infer.failwith_2'(s(X5,X9),s(X6,X10))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),'type.pair.prod'('type.infer.exc'(X4,X5),X6)),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'(X0,X1),X2),'const.infer.failwith_2'(s(X1,X7),s(X2,X8))))),s('type.pair.prod'('type.infer.exc'(X4,X5),X6),'const.infer.failwith_2'(s(X5,X9),s(X6,X10)))))) )),
  inference(forward_demodulation,[],[f5933,f204])).
fof(f5933,plain,(
  ( ! [X6,X4,X2,X0,X10,X8,X7,X5,X3,X1,X9] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),'type.pair.prod'('type.infer.exc'(X4,X5),X6)),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'(X0,X1),X2),'const.infer.failwith_2'(s(X1,X7),s(X2,X8))))),s('type.pair.prod'('type.infer.exc'(X4,X5),X6),'const.infer.failwith_2'(s(X5,X9),s(X6,X10))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),'type.pair.prod'('type.infer.exc'(X4,X5),X6)),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'(X0,X1),X2),happ(s(fun(X2,'type.pair.prod'('type.infer.exc'(X0,X1),X2)),'const.infer.failwith_1'(s(X1,X7))),s(X2,X8))),s('type.pair.prod'('type.infer.exc'(X4,X5),X6),'const.infer.failwith_2'(s(X5,X9),s(X6,X10)))))) )),
  inference(forward_demodulation,[],[f5734,f204])).
fof(f5734,plain,(
  ( ! [X6,X4,X2,X0,X10,X8,X7,X5,X3,X1,X9] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),'type.pair.prod'('type.infer.exc'(X4,X5),X6)),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'(X0,X1),X2),'const.infer.failwith_2'(s(X1,X7),s(X2,X8))))),s('type.pair.prod'('type.infer.exc'(X4,X5),X6),'const.infer.failwith_2'(s(X5,X9),s(X6,X10))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),'type.pair.prod'('type.infer.exc'(X4,X5),X6)),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'(X0,X1),X2),happ(s(fun(X2,'type.pair.prod'('type.infer.exc'(X0,X1),X2)),'const.infer.failwith_1'(s(X1,X7))),s(X2,X8))),s('type.pair.prod'('type.infer.exc'(X4,X5),X6),happ(s(fun(X6,'type.pair.prod'('type.infer.exc'(X4,X5),X6)),'const.infer.failwith_1'(s(X5,X9))),s(X6,X10)))))) )),
  inference(unit_resulting_resolution,[],[f204,f204,f212])).
fof(f5932,plain,(
  ( ! [X6,X4,X2,X0,X10,X8,X7,X5,X3,X1,X9] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),X2),'type.pair.prod'('type.infer.exc'(X3,X4),X5)),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),'const.infer.guard_3'(s(bool,X6),s(X0,X7),s(X1,X8))),s('type.pair.prod'('type.infer.exc'(X3,X4),X5),'const.infer.failwith_2'(s(X4,X9),s(X5,X10))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),X2),'type.pair.prod'('type.infer.exc'(X3,X4),X5)),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),X2),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),'const.infer.guard_3'(s(bool,X6),s(X0,X7),s(X1,X8))))),s('type.pair.prod'('type.infer.exc'(X3,X4),X5),'const.infer.failwith_2'(s(X4,X9),s(X5,X10)))))) )),
  inference(forward_demodulation,[],[f5931,f183])).
fof(f5931,plain,(
  ( ! [X6,X4,X2,X0,X10,X8,X7,X5,X3,X1,X9] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),X2),'type.pair.prod'('type.infer.exc'(X3,X4),X5)),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),X2),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),'const.infer.guard_3'(s(bool,X6),s(X0,X7),s(X1,X8))))),s('type.pair.prod'('type.infer.exc'(X3,X4),X5),'const.infer.failwith_2'(s(X4,X9),s(X5,X10))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),X2),'type.pair.prod'('type.infer.exc'(X3,X4),X5)),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),happ(s(fun(X1,'type.pair.prod'('type.infer.exc'('type.one.one',X0),X1)),'const.infer.guard_2'(s(bool,X6),s(X0,X7))),s(X1,X8))),s('type.pair.prod'('type.infer.exc'(X3,X4),X5),'const.infer.failwith_2'(s(X4,X9),s(X5,X10)))))) )),
  inference(forward_demodulation,[],[f5735,f204])).
fof(f5735,plain,(
  ( ! [X6,X4,X2,X0,X10,X8,X7,X5,X3,X1,X9] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),X2),'type.pair.prod'('type.infer.exc'(X3,X4),X5)),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),X2),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),'const.infer.guard_3'(s(bool,X6),s(X0,X7),s(X1,X8))))),s('type.pair.prod'('type.infer.exc'(X3,X4),X5),'const.infer.failwith_2'(s(X4,X9),s(X5,X10))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),X2),'type.pair.prod'('type.infer.exc'(X3,X4),X5)),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),happ(s(fun(X1,'type.pair.prod'('type.infer.exc'('type.one.one',X0),X1)),'const.infer.guard_2'(s(bool,X6),s(X0,X7))),s(X1,X8))),s('type.pair.prod'('type.infer.exc'(X3,X4),X5),happ(s(fun(X5,'type.pair.prod'('type.infer.exc'(X3,X4),X5)),'const.infer.failwith_1'(s(X4,X9))),s(X5,X10)))))) )),
  inference(unit_resulting_resolution,[],[f183,f204,f212])).
fof(f5928,plain,(
  ( ! [X6,X4,X2,X0,X10,X8,X7,X5,X3,X1,X11,X9] : (s('type.pair.prod'('type.infer.exc'(X0,X1),'type.pair.prod'('type.infer.exc'('type.one.one',X2),X3)),'const.infer.st_ex_return_2'(s(X0,happ(s(fun(X5,X0),X6),s(X5,happ(s(fun(X4,X5),X7),s(X4,X8))))),s('type.pair.prod'('type.infer.exc'('type.one.one',X2),X3),'const.infer.guard_3'(s(bool,X9),s(X2,X10),s(X3,X11))))) = s('type.pair.prod'('type.infer.exc'(X0,X1),'type.pair.prod'('type.infer.exc'('type.one.one',X2),X3)),'const.pair.,_2'(s('type.infer.exc'(X0,X1),'const.infer.Success_1'(s(X0,happ(s(fun(X4,X0),'_dst_x0x1_2'(s(fun(X5,X0),X6),s(fun(X4,X5),X7))),s(X4,X8))))),s('type.pair.prod'('type.infer.exc'('type.one.one',X2),X3),'const.infer.guard_3'(s(bool,X9),s(X2,X10),s(X3,X11)))))) )),
  inference(forward_demodulation,[],[f5737,f183])).
fof(f5737,plain,(
  ( ! [X6,X4,X2,X0,X10,X8,X7,X5,X3,X1,X11,X9] : (s('type.pair.prod'('type.infer.exc'(X0,X1),'type.pair.prod'('type.infer.exc'('type.one.one',X2),X3)),'const.pair.,_2'(s('type.infer.exc'(X0,X1),'const.infer.Success_1'(s(X0,happ(s(fun(X4,X0),'_dst_x0x1_2'(s(fun(X5,X0),X6),s(fun(X4,X5),X7))),s(X4,X8))))),s('type.pair.prod'('type.infer.exc'('type.one.one',X2),X3),'const.infer.guard_3'(s(bool,X9),s(X2,X10),s(X3,X11))))) = s('type.pair.prod'('type.infer.exc'(X0,X1),'type.pair.prod'('type.infer.exc'('type.one.one',X2),X3)),'const.infer.st_ex_return_2'(s(X0,happ(s(fun(X5,X0),X6),s(X5,happ(s(fun(X4,X5),X7),s(X4,X8))))),s('type.pair.prod'('type.infer.exc'('type.one.one',X2),X3),happ(s(fun(X3,'type.pair.prod'('type.infer.exc'('type.one.one',X2),X3)),'const.infer.guard_2'(s(bool,X9),s(X2,X10))),s(X3,X11)))))) )),
  inference(unit_resulting_resolution,[],[f206,f183,f212])).
fof(f5895,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'(X0,X1),'type.pair.prod'('type.infer.exc'('type.one.one',X2),X3)),'const.infer.st_ex_return_2'(s(X0,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(X0),X4))),s('type.pair.prod'('type.infer.exc'('type.one.one',X2),X3),'const.infer.guard_3'(s(bool,X5),s(X2,X6),s(X3,X7))))) = s('type.pair.prod'('type.infer.exc'(X0,X1),'type.pair.prod'('type.infer.exc'('type.one.one',X2),X3)),'const.pair.,_2'(s('type.infer.exc'(X0,X1),'const.infer.Success_1'(s(X0,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(X0),X4))))),s('type.pair.prod'('type.infer.exc'('type.one.one',X2),X3),'const.infer.guard_3'(s(bool,X5),s(X2,X6),s(X3,X7)))))) )),
  inference(forward_demodulation,[],[f5894,f168])).
fof(f5894,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'(X0,X1),'type.pair.prod'('type.infer.exc'('type.one.one',X2),X3)),'const.pair.,_2'(s('type.infer.exc'(X0,X1),'const.infer.Success_1'(s(X0,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(X0),X4))))),s('type.pair.prod'('type.infer.exc'('type.one.one',X2),X3),'const.infer.guard_3'(s(bool,X5),s(X2,X6),s(X3,X7))))) = s('type.pair.prod'('type.infer.exc'(X0,X1),'type.pair.prod'('type.infer.exc'('type.one.one',X2),X3)),'const.infer.st_ex_return_2'(s(X0,happ(s(fun('type.infer.infer_st'(X0),X0),'const.infer.infer_st_subst_0'),s('type.infer.infer_st'(X0),X4))),s('type.pair.prod'('type.infer.exc'('type.one.one',X2),X3),'const.infer.guard_3'(s(bool,X5),s(X2,X6),s(X3,X7)))))) )),
  inference(forward_demodulation,[],[f5758,f183])).
fof(f5758,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'(X0,X1),'type.pair.prod'('type.infer.exc'('type.one.one',X2),X3)),'const.pair.,_2'(s('type.infer.exc'(X0,X1),'const.infer.Success_1'(s(X0,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(X0),X4))))),s('type.pair.prod'('type.infer.exc'('type.one.one',X2),X3),'const.infer.guard_3'(s(bool,X5),s(X2,X6),s(X3,X7))))) = s('type.pair.prod'('type.infer.exc'(X0,X1),'type.pair.prod'('type.infer.exc'('type.one.one',X2),X3)),'const.infer.st_ex_return_2'(s(X0,happ(s(fun('type.infer.infer_st'(X0),X0),'const.infer.infer_st_subst_0'),s('type.infer.infer_st'(X0),X4))),s('type.pair.prod'('type.infer.exc'('type.one.one',X2),X3),happ(s(fun(X3,'type.pair.prod'('type.infer.exc'('type.one.one',X2),X3)),'const.infer.guard_2'(s(bool,X5),s(X2,X6))),s(X3,X7)))))) )),
  inference(unit_resulting_resolution,[],[f168,f183,f212])).
fof(f5893,plain,(
  ( ! [X6,X4,X2,X0,X10,X8,X7,X5,X3,X1,X11,X9] : (s('type.pair.prod'('type.infer.exc'(X0,X1),'type.pair.prod'('type.infer.exc'('type.one.one',X2),X3)),'const.infer.st_ex_return_2'(s(X0,happ(s(fun(X6,X0),'_dst_x0x1_2'(s(fun(X4,X0),X5),s(fun(X6,X4),X7))),s(X6,X8))),s('type.pair.prod'('type.infer.exc'('type.one.one',X2),X3),'const.infer.guard_3'(s(bool,X9),s(X2,X10),s(X3,X11))))) = s('type.pair.prod'('type.infer.exc'(X0,X1),'type.pair.prod'('type.infer.exc'('type.one.one',X2),X3)),'const.pair.,_2'(s('type.infer.exc'(X0,X1),'const.infer.Success_1'(s(X0,happ(s(fun(X4,X0),X5),s(X4,happ(s(fun(X6,X4),X7),s(X6,X8))))))),s('type.pair.prod'('type.infer.exc'('type.one.one',X2),X3),'const.infer.guard_3'(s(bool,X9),s(X2,X10),s(X3,X11)))))) )),
  inference(forward_demodulation,[],[f5759,f183])).
fof(f5759,plain,(
  ( ! [X6,X4,X2,X0,X10,X8,X7,X5,X3,X1,X11,X9] : (s('type.pair.prod'('type.infer.exc'(X0,X1),'type.pair.prod'('type.infer.exc'('type.one.one',X2),X3)),'const.pair.,_2'(s('type.infer.exc'(X0,X1),'const.infer.Success_1'(s(X0,happ(s(fun(X4,X0),X5),s(X4,happ(s(fun(X6,X4),X7),s(X6,X8))))))),s('type.pair.prod'('type.infer.exc'('type.one.one',X2),X3),'const.infer.guard_3'(s(bool,X9),s(X2,X10),s(X3,X11))))) = s('type.pair.prod'('type.infer.exc'(X0,X1),'type.pair.prod'('type.infer.exc'('type.one.one',X2),X3)),'const.infer.st_ex_return_2'(s(X0,happ(s(fun(X6,X0),'_dst_x0x1_2'(s(fun(X4,X0),X5),s(fun(X6,X4),X7))),s(X6,X8))),s('type.pair.prod'('type.infer.exc'('type.one.one',X2),X3),happ(s(fun(X3,'type.pair.prod'('type.infer.exc'('type.one.one',X2),X3)),'const.infer.guard_2'(s(bool,X9),s(X2,X10))),s(X3,X11)))))) )),
  inference(unit_resulting_resolution,[],[f206,f183,f212])).
fof(f5890,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'(fun(X0,'type.one.one'),X1),'type.pair.prod'('type.infer.exc'('type.one.one',X2),X3)),'const.infer.st_ex_return_2'(s(fun(X0,'type.one.one'),X8),s('type.pair.prod'('type.infer.exc'('type.one.one',X2),X3),'const.infer.guard_3'(s(bool,X5),s(X2,X6),s(X3,X7))))) = s('type.pair.prod'('type.infer.exc'(fun(X0,'type.one.one'),X1),'type.pair.prod'('type.infer.exc'('type.one.one',X2),X3)),'const.pair.,_2'(s('type.infer.exc'(fun(X0,'type.one.one'),X1),'const.infer.Success_1'(s(fun(X0,'type.one.one'),X4))),s('type.pair.prod'('type.infer.exc'('type.one.one',X2),X3),'const.infer.guard_3'(s(bool,X5),s(X2,X6),s(X3,X7)))))) )),
  inference(forward_demodulation,[],[f5761,f183])).
fof(f5761,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'(fun(X0,'type.one.one'),X1),'type.pair.prod'('type.infer.exc'('type.one.one',X2),X3)),'const.pair.,_2'(s('type.infer.exc'(fun(X0,'type.one.one'),X1),'const.infer.Success_1'(s(fun(X0,'type.one.one'),X4))),s('type.pair.prod'('type.infer.exc'('type.one.one',X2),X3),'const.infer.guard_3'(s(bool,X5),s(X2,X6),s(X3,X7))))) = s('type.pair.prod'('type.infer.exc'(fun(X0,'type.one.one'),X1),'type.pair.prod'('type.infer.exc'('type.one.one',X2),X3)),'const.infer.st_ex_return_2'(s(fun(X0,'type.one.one'),X8),s('type.pair.prod'('type.infer.exc'('type.one.one',X2),X3),happ(s(fun(X3,'type.pair.prod'('type.infer.exc'('type.one.one',X2),X3)),'const.infer.guard_2'(s(bool,X5),s(X2,X6))),s(X3,X7)))))) )),
  inference(unit_resulting_resolution,[],[f605,f183,f212])).
fof(f5889,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1,X9] : (s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,'type.one.one')),X2),'type.pair.prod'('type.infer.exc'('type.one.one',X3),X4)),'const.infer.st_ex_return_2'(s(fun(X0,fun(X1,'type.one.one')),X9),s('type.pair.prod'('type.infer.exc'('type.one.one',X3),X4),'const.infer.guard_3'(s(bool,X6),s(X3,X7),s(X4,X8))))) = s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,'type.one.one')),X2),'type.pair.prod'('type.infer.exc'('type.one.one',X3),X4)),'const.pair.,_2'(s('type.infer.exc'(fun(X0,fun(X1,'type.one.one')),X2),'const.infer.Success_1'(s(fun(X0,fun(X1,'type.one.one')),X5))),s('type.pair.prod'('type.infer.exc'('type.one.one',X3),X4),'const.infer.guard_3'(s(bool,X6),s(X3,X7),s(X4,X8)))))) )),
  inference(forward_demodulation,[],[f5762,f183])).
fof(f5762,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1,X9] : (s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,'type.one.one')),X2),'type.pair.prod'('type.infer.exc'('type.one.one',X3),X4)),'const.pair.,_2'(s('type.infer.exc'(fun(X0,fun(X1,'type.one.one')),X2),'const.infer.Success_1'(s(fun(X0,fun(X1,'type.one.one')),X5))),s('type.pair.prod'('type.infer.exc'('type.one.one',X3),X4),'const.infer.guard_3'(s(bool,X6),s(X3,X7),s(X4,X8))))) = s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,'type.one.one')),X2),'type.pair.prod'('type.infer.exc'('type.one.one',X3),X4)),'const.infer.st_ex_return_2'(s(fun(X0,fun(X1,'type.one.one')),X9),s('type.pair.prod'('type.infer.exc'('type.one.one',X3),X4),happ(s(fun(X4,'type.pair.prod'('type.infer.exc'('type.one.one',X3),X4)),'const.infer.guard_2'(s(bool,X6),s(X3,X7))),s(X4,X8)))))) )),
  inference(unit_resulting_resolution,[],[f724,f183,f212])).
fof(f5888,plain,(
  ( ! [X6,X4,X2,X0,X10,X8,X7,X5,X3,X1,X9] : (s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,fun(X2,'type.one.one'))),X3),'type.pair.prod'('type.infer.exc'('type.one.one',X4),X5)),'const.infer.st_ex_return_2'(s(fun(X0,fun(X1,fun(X2,'type.one.one'))),X6),s('type.pair.prod'('type.infer.exc'('type.one.one',X4),X5),'const.infer.guard_3'(s(bool,X7),s(X4,X8),s(X5,X9))))) = s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,fun(X2,'type.one.one'))),X3),'type.pair.prod'('type.infer.exc'('type.one.one',X4),X5)),'const.pair.,_2'(s('type.infer.exc'(fun(X0,fun(X1,fun(X2,'type.one.one'))),X3),'const.infer.Success_1'(s(fun(X0,fun(X1,fun(X2,'type.one.one'))),X10))),s('type.pair.prod'('type.infer.exc'('type.one.one',X4),X5),'const.infer.guard_3'(s(bool,X7),s(X4,X8),s(X5,X9)))))) )),
  inference(forward_demodulation,[],[f5763,f183])).
fof(f5763,plain,(
  ( ! [X6,X4,X2,X0,X10,X8,X7,X5,X3,X1,X9] : (s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,fun(X2,'type.one.one'))),X3),'type.pair.prod'('type.infer.exc'('type.one.one',X4),X5)),'const.infer.st_ex_return_2'(s(fun(X0,fun(X1,fun(X2,'type.one.one'))),X6),s('type.pair.prod'('type.infer.exc'('type.one.one',X4),X5),happ(s(fun(X5,'type.pair.prod'('type.infer.exc'('type.one.one',X4),X5)),'const.infer.guard_2'(s(bool,X7),s(X4,X8))),s(X5,X9))))) = s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,fun(X2,'type.one.one'))),X3),'type.pair.prod'('type.infer.exc'('type.one.one',X4),X5)),'const.pair.,_2'(s('type.infer.exc'(fun(X0,fun(X1,fun(X2,'type.one.one'))),X3),'const.infer.Success_1'(s(fun(X0,fun(X1,fun(X2,'type.one.one'))),X10))),s('type.pair.prod'('type.infer.exc'('type.one.one',X4),X5),'const.infer.guard_3'(s(bool,X7),s(X4,X8),s(X5,X9)))))) )),
  inference(unit_resulting_resolution,[],[f752,f183,f212])).
fof(f5887,plain,(
  ( ! [X6,X4,X2,X0,X10,X8,X7,X5,X3,X1,X11,X9] : (s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,fun(X2,fun(X3,'type.one.one')))),X4),'type.pair.prod'('type.infer.exc'('type.one.one',X5),X6)),'const.infer.st_ex_return_2'(s(fun(X0,fun(X1,fun(X2,fun(X3,'type.one.one')))),X7),s('type.pair.prod'('type.infer.exc'('type.one.one',X5),X6),'const.infer.guard_3'(s(bool,X8),s(X5,X9),s(X6,X10))))) = s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,fun(X2,fun(X3,'type.one.one')))),X4),'type.pair.prod'('type.infer.exc'('type.one.one',X5),X6)),'const.pair.,_2'(s('type.infer.exc'(fun(X0,fun(X1,fun(X2,fun(X3,'type.one.one')))),X4),'const.infer.Success_1'(s(fun(X0,fun(X1,fun(X2,fun(X3,'type.one.one')))),X11))),s('type.pair.prod'('type.infer.exc'('type.one.one',X5),X6),'const.infer.guard_3'(s(bool,X8),s(X5,X9),s(X6,X10)))))) )),
  inference(forward_demodulation,[],[f5764,f183])).
fof(f5764,plain,(
  ( ! [X6,X4,X2,X0,X10,X8,X7,X5,X3,X1,X11,X9] : (s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,fun(X2,fun(X3,'type.one.one')))),X4),'type.pair.prod'('type.infer.exc'('type.one.one',X5),X6)),'const.infer.st_ex_return_2'(s(fun(X0,fun(X1,fun(X2,fun(X3,'type.one.one')))),X7),s('type.pair.prod'('type.infer.exc'('type.one.one',X5),X6),happ(s(fun(X6,'type.pair.prod'('type.infer.exc'('type.one.one',X5),X6)),'const.infer.guard_2'(s(bool,X8),s(X5,X9))),s(X6,X10))))) = s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,fun(X2,fun(X3,'type.one.one')))),X4),'type.pair.prod'('type.infer.exc'('type.one.one',X5),X6)),'const.pair.,_2'(s('type.infer.exc'(fun(X0,fun(X1,fun(X2,fun(X3,'type.one.one')))),X4),'const.infer.Success_1'(s(fun(X0,fun(X1,fun(X2,fun(X3,'type.one.one')))),X11))),s('type.pair.prod'('type.infer.exc'('type.one.one',X5),X6),'const.infer.guard_3'(s(bool,X8),s(X5,X9),s(X6,X10)))))) )),
  inference(unit_resulting_resolution,[],[f787,f183,f212])).
fof(f5886,plain,(
  ( ! [X6,X4,X2,X0,X12,X10,X8,X7,X5,X3,X1,X11,X9] : (s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,fun(X2,fun(X3,fun(X4,'type.one.one'))))),X5),'type.pair.prod'('type.infer.exc'('type.one.one',X6),X7)),'const.infer.st_ex_return_2'(s(fun(X0,fun(X1,fun(X2,fun(X3,fun(X4,'type.one.one'))))),X8),s('type.pair.prod'('type.infer.exc'('type.one.one',X6),X7),'const.infer.guard_3'(s(bool,X9),s(X6,X10),s(X7,X11))))) = s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,fun(X2,fun(X3,fun(X4,'type.one.one'))))),X5),'type.pair.prod'('type.infer.exc'('type.one.one',X6),X7)),'const.pair.,_2'(s('type.infer.exc'(fun(X0,fun(X1,fun(X2,fun(X3,fun(X4,'type.one.one'))))),X5),'const.infer.Success_1'(s(fun(X0,fun(X1,fun(X2,fun(X3,fun(X4,'type.one.one'))))),X12))),s('type.pair.prod'('type.infer.exc'('type.one.one',X6),X7),'const.infer.guard_3'(s(bool,X9),s(X6,X10),s(X7,X11)))))) )),
  inference(forward_demodulation,[],[f5765,f183])).
fof(f5765,plain,(
  ( ! [X6,X4,X2,X0,X12,X10,X8,X7,X5,X3,X1,X11,X9] : (s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,fun(X2,fun(X3,fun(X4,'type.one.one'))))),X5),'type.pair.prod'('type.infer.exc'('type.one.one',X6),X7)),'const.infer.st_ex_return_2'(s(fun(X0,fun(X1,fun(X2,fun(X3,fun(X4,'type.one.one'))))),X8),s('type.pair.prod'('type.infer.exc'('type.one.one',X6),X7),happ(s(fun(X7,'type.pair.prod'('type.infer.exc'('type.one.one',X6),X7)),'const.infer.guard_2'(s(bool,X9),s(X6,X10))),s(X7,X11))))) = s('type.pair.prod'('type.infer.exc'(fun(X0,fun(X1,fun(X2,fun(X3,fun(X4,'type.one.one'))))),X5),'type.pair.prod'('type.infer.exc'('type.one.one',X6),X7)),'const.pair.,_2'(s('type.infer.exc'(fun(X0,fun(X1,fun(X2,fun(X3,fun(X4,'type.one.one'))))),X5),'const.infer.Success_1'(s(fun(X0,fun(X1,fun(X2,fun(X3,fun(X4,'type.one.one'))))),X12))),s('type.pair.prod'('type.infer.exc'('type.one.one',X6),X7),'const.infer.guard_3'(s(bool,X9),s(X6,X10),s(X7,X11)))))) )),
  inference(unit_resulting_resolution,[],[f815,f183,f212])).
fof(f5883,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.one.one',X0),'type.pair.prod'('type.infer.exc'('type.one.one',X1),X2)),'const.infer.st_ex_return_2'(s('type.one.one',X7),s('type.pair.prod'('type.infer.exc'('type.one.one',X1),X2),'const.infer.guard_3'(s(bool,X4),s(X1,X5),s(X2,X6))))) = s('type.pair.prod'('type.infer.exc'('type.one.one',X0),'type.pair.prod'('type.infer.exc'('type.one.one',X1),X2)),'const.pair.,_2'(s('type.infer.exc'('type.one.one',X0),'const.infer.Success_1'(s('type.one.one',X3))),s('type.pair.prod'('type.infer.exc'('type.one.one',X1),X2),'const.infer.guard_3'(s(bool,X4),s(X1,X5),s(X2,X6)))))) )),
  inference(forward_demodulation,[],[f5768,f183])).
fof(f5768,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.one.one',X0),'type.pair.prod'('type.infer.exc'('type.one.one',X1),X2)),'const.pair.,_2'(s('type.infer.exc'('type.one.one',X0),'const.infer.Success_1'(s('type.one.one',X3))),s('type.pair.prod'('type.infer.exc'('type.one.one',X1),X2),'const.infer.guard_3'(s(bool,X4),s(X1,X5),s(X2,X6))))) = s('type.pair.prod'('type.infer.exc'('type.one.one',X0),'type.pair.prod'('type.infer.exc'('type.one.one',X1),X2)),'const.infer.st_ex_return_2'(s('type.one.one',X7),s('type.pair.prod'('type.infer.exc'('type.one.one',X1),X2),happ(s(fun(X2,'type.pair.prod'('type.infer.exc'('type.one.one',X1),X2)),'const.infer.guard_2'(s(bool,X4),s(X1,X5))),s(X2,X6)))))) )),
  inference(unit_resulting_resolution,[],[f258,f183,f212])).
fof(f5882,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1,X9] : (s('type.pair.prod'('type.infer.exc'('type.list.list'(X0),X1),'type.pair.prod'('type.infer.exc'('type.one.one',X2),X3)),'const.infer.st_ex_return_2'(s('type.list.list'(X0),'const.list.MAP_2'(s(fun(X4,X0),X5),s('type.list.list'(X4),X6))),s('type.pair.prod'('type.infer.exc'('type.one.one',X2),X3),'const.infer.guard_3'(s(bool,X7),s(X2,X8),s(X3,X9))))) = s('type.pair.prod'('type.infer.exc'('type.list.list'(X0),X1),'type.pair.prod'('type.infer.exc'('type.one.one',X2),X3)),'const.pair.,_2'(s('type.infer.exc'('type.list.list'(X0),X1),'const.infer.Success_1'(s('type.list.list'(X0),'const.list.MAP_2'(s(fun(X4,X0),X5),s('type.list.list'(X4),X6))))),s('type.pair.prod'('type.infer.exc'('type.one.one',X2),X3),'const.infer.guard_3'(s(bool,X7),s(X2,X8),s(X3,X9)))))) )),
  inference(forward_demodulation,[],[f5881,f180])).
fof(f5881,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1,X9] : (s('type.pair.prod'('type.infer.exc'('type.list.list'(X0),X1),'type.pair.prod'('type.infer.exc'('type.one.one',X2),X3)),'const.pair.,_2'(s('type.infer.exc'('type.list.list'(X0),X1),'const.infer.Success_1'(s('type.list.list'(X0),'const.list.MAP_2'(s(fun(X4,X0),X5),s('type.list.list'(X4),X6))))),s('type.pair.prod'('type.infer.exc'('type.one.one',X2),X3),'const.infer.guard_3'(s(bool,X7),s(X2,X8),s(X3,X9))))) = s('type.pair.prod'('type.infer.exc'('type.list.list'(X0),X1),'type.pair.prod'('type.infer.exc'('type.one.one',X2),X3)),'const.infer.st_ex_return_2'(s('type.list.list'(X0),happ(s(fun('type.list.list'(X4),'type.list.list'(X0)),happ(s(fun(fun(X4,X0),fun('type.list.list'(X4),'type.list.list'(X0))),'const.list.MAP_0'),s(fun(X4,X0),X5))),s('type.list.list'(X4),X6))),s('type.pair.prod'('type.infer.exc'('type.one.one',X2),X3),'const.infer.guard_3'(s(bool,X7),s(X2,X8),s(X3,X9)))))) )),
  inference(forward_demodulation,[],[f5769,f183])).
fof(f5769,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1,X9] : (s('type.pair.prod'('type.infer.exc'('type.list.list'(X0),X1),'type.pair.prod'('type.infer.exc'('type.one.one',X2),X3)),'const.pair.,_2'(s('type.infer.exc'('type.list.list'(X0),X1),'const.infer.Success_1'(s('type.list.list'(X0),'const.list.MAP_2'(s(fun(X4,X0),X5),s('type.list.list'(X4),X6))))),s('type.pair.prod'('type.infer.exc'('type.one.one',X2),X3),'const.infer.guard_3'(s(bool,X7),s(X2,X8),s(X3,X9))))) = s('type.pair.prod'('type.infer.exc'('type.list.list'(X0),X1),'type.pair.prod'('type.infer.exc'('type.one.one',X2),X3)),'const.infer.st_ex_return_2'(s('type.list.list'(X0),happ(s(fun('type.list.list'(X4),'type.list.list'(X0)),happ(s(fun(fun(X4,X0),fun('type.list.list'(X4),'type.list.list'(X0))),'const.list.MAP_0'),s(fun(X4,X0),X5))),s('type.list.list'(X4),X6))),s('type.pair.prod'('type.infer.exc'('type.one.one',X2),X3),happ(s(fun(X3,'type.pair.prod'('type.infer.exc'('type.one.one',X2),X3)),'const.infer.guard_2'(s(bool,X7),s(X2,X8))),s(X3,X9)))))) )),
  inference(unit_resulting_resolution,[],[f180,f183,f212])).
fof(f5876,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.num.num',X0),'type.pair.prod'('type.infer.exc'('type.one.one',X1),X2)),'const.infer.st_ex_return_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X3),s('type.num.num',X4))),s('type.pair.prod'('type.infer.exc'('type.one.one',X1),X2),'const.infer.guard_3'(s(bool,X5),s(X1,X6),s(X2,X7))))) = s('type.pair.prod'('type.infer.exc'('type.num.num',X0),'type.pair.prod'('type.infer.exc'('type.one.one',X1),X2)),'const.pair.,_2'(s('type.infer.exc'('type.num.num',X0),'const.infer.Success_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X3),s('type.num.num',X4))))),s('type.pair.prod'('type.infer.exc'('type.one.one',X1),X2),'const.infer.guard_3'(s(bool,X5),s(X1,X6),s(X2,X7)))))) )),
  inference(forward_demodulation,[],[f5875,f175])).
fof(f5875,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.num.num',X0),'type.pair.prod'('type.infer.exc'('type.one.one',X1),X2)),'const.infer.st_ex_return_2'(s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.arithmetic.+_1'(s('type.num.num',X3))),s('type.num.num',X4))),s('type.pair.prod'('type.infer.exc'('type.one.one',X1),X2),'const.infer.guard_3'(s(bool,X5),s(X1,X6),s(X2,X7))))) = s('type.pair.prod'('type.infer.exc'('type.num.num',X0),'type.pair.prod'('type.infer.exc'('type.one.one',X1),X2)),'const.pair.,_2'(s('type.infer.exc'('type.num.num',X0),'const.infer.Success_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X3),s('type.num.num',X4))))),s('type.pair.prod'('type.infer.exc'('type.one.one',X1),X2),'const.infer.guard_3'(s(bool,X5),s(X1,X6),s(X2,X7)))))) )),
  inference(forward_demodulation,[],[f5772,f183])).
fof(f5772,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.num.num',X0),'type.pair.prod'('type.infer.exc'('type.one.one',X1),X2)),'const.pair.,_2'(s('type.infer.exc'('type.num.num',X0),'const.infer.Success_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X3),s('type.num.num',X4))))),s('type.pair.prod'('type.infer.exc'('type.one.one',X1),X2),'const.infer.guard_3'(s(bool,X5),s(X1,X6),s(X2,X7))))) = s('type.pair.prod'('type.infer.exc'('type.num.num',X0),'type.pair.prod'('type.infer.exc'('type.one.one',X1),X2)),'const.infer.st_ex_return_2'(s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.arithmetic.+_1'(s('type.num.num',X3))),s('type.num.num',X4))),s('type.pair.prod'('type.infer.exc'('type.one.one',X1),X2),happ(s(fun(X2,'type.pair.prod'('type.infer.exc'('type.one.one',X1),X2)),'const.infer.guard_2'(s(bool,X5),s(X1,X6))),s(X2,X7)))))) )),
  inference(unit_resulting_resolution,[],[f175,f183,f212])).
fof(f5874,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.pair.prod'('type.infer.exc'('type.one.one',X1),X2)),'const.infer.st_ex_return_2'(s('type.infer_t.infer_t','const.infer_t.Infer_Tuvar_1'(s('type.num.num',X3))),s('type.pair.prod'('type.infer.exc'('type.one.one',X1),X2),'const.infer.guard_3'(s(bool,X4),s(X1,X5),s(X2,X6))))) = s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.pair.prod'('type.infer.exc'('type.one.one',X1),X2)),'const.pair.,_2'(s('type.infer.exc'('type.infer_t.infer_t',X0),'const.infer.Success_1'(s('type.infer_t.infer_t','const.infer_t.Infer_Tuvar_1'(s('type.num.num',X3))))),s('type.pair.prod'('type.infer.exc'('type.one.one',X1),X2),'const.infer.guard_3'(s(bool,X4),s(X1,X5),s(X2,X6)))))) )),
  inference(forward_demodulation,[],[f5873,f166])).
fof(f5873,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.pair.prod'('type.infer.exc'('type.one.one',X1),X2)),'const.infer.st_ex_return_2'(s('type.infer_t.infer_t',happ(s(fun('type.num.num','type.infer_t.infer_t'),'const.infer_t.Infer_Tuvar_0'),s('type.num.num',X3))),s('type.pair.prod'('type.infer.exc'('type.one.one',X1),X2),'const.infer.guard_3'(s(bool,X4),s(X1,X5),s(X2,X6))))) = s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.pair.prod'('type.infer.exc'('type.one.one',X1),X2)),'const.pair.,_2'(s('type.infer.exc'('type.infer_t.infer_t',X0),'const.infer.Success_1'(s('type.infer_t.infer_t','const.infer_t.Infer_Tuvar_1'(s('type.num.num',X3))))),s('type.pair.prod'('type.infer.exc'('type.one.one',X1),X2),'const.infer.guard_3'(s(bool,X4),s(X1,X5),s(X2,X6)))))) )),
  inference(forward_demodulation,[],[f5773,f183])).
fof(f5773,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.pair.prod'('type.infer.exc'('type.one.one',X1),X2)),'const.pair.,_2'(s('type.infer.exc'('type.infer_t.infer_t',X0),'const.infer.Success_1'(s('type.infer_t.infer_t','const.infer_t.Infer_Tuvar_1'(s('type.num.num',X3))))),s('type.pair.prod'('type.infer.exc'('type.one.one',X1),X2),'const.infer.guard_3'(s(bool,X4),s(X1,X5),s(X2,X6))))) = s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.pair.prod'('type.infer.exc'('type.one.one',X1),X2)),'const.infer.st_ex_return_2'(s('type.infer_t.infer_t',happ(s(fun('type.num.num','type.infer_t.infer_t'),'const.infer_t.Infer_Tuvar_0'),s('type.num.num',X3))),s('type.pair.prod'('type.infer.exc'('type.one.one',X1),X2),happ(s(fun(X2,'type.pair.prod'('type.infer.exc'('type.one.one',X1),X2)),'const.infer.guard_2'(s(bool,X4),s(X1,X5))),s(X2,X6)))))) )),
  inference(unit_resulting_resolution,[],[f166,f183,f212])).
fof(f5872,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.pair.prod'('type.infer.exc'('type.one.one',X1),X2)),'const.infer.st_ex_return_2'(s('type.infer_t.infer_t','const.unify.t_walkstar_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X3),s('type.infer_t.infer_t',X4))),s('type.pair.prod'('type.infer.exc'('type.one.one',X1),X2),'const.infer.guard_3'(s(bool,X5),s(X1,X6),s(X2,X7))))) = s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.pair.prod'('type.infer.exc'('type.one.one',X1),X2)),'const.pair.,_2'(s('type.infer.exc'('type.infer_t.infer_t',X0),'const.infer.Success_1'(s('type.infer_t.infer_t','const.unify.t_walkstar_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X3),s('type.infer_t.infer_t',X4))))),s('type.pair.prod'('type.infer.exc'('type.one.one',X1),X2),'const.infer.guard_3'(s(bool,X5),s(X1,X6),s(X2,X7)))))) )),
  inference(forward_demodulation,[],[f5871,f176])).
fof(f5871,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.pair.prod'('type.infer.exc'('type.one.one',X1),X2)),'const.pair.,_2'(s('type.infer.exc'('type.infer_t.infer_t',X0),'const.infer.Success_1'(s('type.infer_t.infer_t','const.unify.t_walkstar_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X3),s('type.infer_t.infer_t',X4))))),s('type.pair.prod'('type.infer.exc'('type.one.one',X1),X2),'const.infer.guard_3'(s(bool,X5),s(X1,X6),s(X2,X7))))) = s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.pair.prod'('type.infer.exc'('type.one.one',X1),X2)),'const.infer.st_ex_return_2'(s('type.infer_t.infer_t',happ(s(fun('type.infer_t.infer_t','type.infer_t.infer_t'),happ(s(fun('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),fun('type.infer_t.infer_t','type.infer_t.infer_t')),'const.unify.t_walkstar_0'),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X3))),s('type.infer_t.infer_t',X4))),s('type.pair.prod'('type.infer.exc'('type.one.one',X1),X2),'const.infer.guard_3'(s(bool,X5),s(X1,X6),s(X2,X7)))))) )),
  inference(forward_demodulation,[],[f5774,f183])).
fof(f5774,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.pair.prod'('type.infer.exc'('type.one.one',X1),X2)),'const.pair.,_2'(s('type.infer.exc'('type.infer_t.infer_t',X0),'const.infer.Success_1'(s('type.infer_t.infer_t','const.unify.t_walkstar_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X3),s('type.infer_t.infer_t',X4))))),s('type.pair.prod'('type.infer.exc'('type.one.one',X1),X2),'const.infer.guard_3'(s(bool,X5),s(X1,X6),s(X2,X7))))) = s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.pair.prod'('type.infer.exc'('type.one.one',X1),X2)),'const.infer.st_ex_return_2'(s('type.infer_t.infer_t',happ(s(fun('type.infer_t.infer_t','type.infer_t.infer_t'),happ(s(fun('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),fun('type.infer_t.infer_t','type.infer_t.infer_t')),'const.unify.t_walkstar_0'),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X3))),s('type.infer_t.infer_t',X4))),s('type.pair.prod'('type.infer.exc'('type.one.one',X1),X2),happ(s(fun(X2,'type.pair.prod'('type.infer.exc'('type.one.one',X1),X2)),'const.infer.guard_2'(s(bool,X5),s(X1,X6))),s(X2,X7)))))) )),
  inference(unit_resulting_resolution,[],[f176,f183,f212])).
fof(f5868,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X0),X2),'type.pair.prod'('type.infer.exc'('type.one.one',X3),X4)),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'(X0,X1),X0),'const.infer.read_1'(s(X0,X5))),s('type.pair.prod'('type.infer.exc'('type.one.one',X3),X4),'const.infer.guard_3'(s(bool,X6),s(X3,X7),s(X4,X8))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X0),X2),'type.pair.prod'('type.infer.exc'('type.one.one',X3),X4)),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X0),X2),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'(X0,X1),X0),'const.infer.read_1'(s(X0,X5))))),s('type.pair.prod'('type.infer.exc'('type.one.one',X3),X4),'const.infer.guard_3'(s(bool,X6),s(X3,X7),s(X4,X8)))))) )),
  inference(forward_demodulation,[],[f5867,f178])).
fof(f5867,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X0),X2),'type.pair.prod'('type.infer.exc'('type.one.one',X3),X4)),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X0),X2),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'(X0,X1),X0),'const.infer.read_1'(s(X0,X5))))),s('type.pair.prod'('type.infer.exc'('type.one.one',X3),X4),'const.infer.guard_3'(s(bool,X6),s(X3,X7),s(X4,X8))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X0),X2),'type.pair.prod'('type.infer.exc'('type.one.one',X3),X4)),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'(X0,X1),X0),happ(s(fun(X0,'type.pair.prod'('type.infer.exc'(X0,X1),X0)),'const.infer.read_0'),s(X0,X5))),s('type.pair.prod'('type.infer.exc'('type.one.one',X3),X4),'const.infer.guard_3'(s(bool,X6),s(X3,X7),s(X4,X8)))))) )),
  inference(forward_demodulation,[],[f5776,f183])).
fof(f5776,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X0),X2),'type.pair.prod'('type.infer.exc'('type.one.one',X3),X4)),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X0),X2),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'(X0,X1),X0),'const.infer.read_1'(s(X0,X5))))),s('type.pair.prod'('type.infer.exc'('type.one.one',X3),X4),'const.infer.guard_3'(s(bool,X6),s(X3,X7),s(X4,X8))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X0),X2),'type.pair.prod'('type.infer.exc'('type.one.one',X3),X4)),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'(X0,X1),X0),happ(s(fun(X0,'type.pair.prod'('type.infer.exc'(X0,X1),X0)),'const.infer.read_0'),s(X0,X5))),s('type.pair.prod'('type.infer.exc'('type.one.one',X3),X4),happ(s(fun(X4,'type.pair.prod'('type.infer.exc'('type.one.one',X3),X4)),'const.infer.guard_2'(s(bool,X6),s(X3,X7))),s(X4,X8)))))) )),
  inference(unit_resulting_resolution,[],[f178,f183,f212])).
fof(f5866,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),X2),'type.pair.prod'('type.infer.exc'('type.one.one',X3),X4)),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),'const.infer.fresh_uvar_1'(s('type.infer.infer_st'(X1),X5))),s('type.pair.prod'('type.infer.exc'('type.one.one',X3),X4),'const.infer.guard_3'(s(bool,X6),s(X3,X7),s(X4,X8))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),X2),'type.pair.prod'('type.infer.exc'('type.one.one',X3),X4)),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),X2),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),'const.infer.fresh_uvar_1'(s('type.infer.infer_st'(X1),X5))))),s('type.pair.prod'('type.infer.exc'('type.one.one',X3),X4),'const.infer.guard_3'(s(bool,X6),s(X3,X7),s(X4,X8)))))) )),
  inference(forward_demodulation,[],[f5865,f179])).
fof(f5865,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),X2),'type.pair.prod'('type.infer.exc'('type.one.one',X3),X4)),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),X2),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),'const.infer.fresh_uvar_1'(s('type.infer.infer_st'(X1),X5))))),s('type.pair.prod'('type.infer.exc'('type.one.one',X3),X4),'const.infer.guard_3'(s(bool,X6),s(X3,X7),s(X4,X8))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),X2),'type.pair.prod'('type.infer.exc'('type.one.one',X3),X4)),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),happ(s(fun('type.infer.infer_st'(X1),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1))),'const.infer.fresh_uvar_0'),s('type.infer.infer_st'(X1),X5))),s('type.pair.prod'('type.infer.exc'('type.one.one',X3),X4),'const.infer.guard_3'(s(bool,X6),s(X3,X7),s(X4,X8)))))) )),
  inference(forward_demodulation,[],[f5777,f183])).
fof(f5777,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),X2),'type.pair.prod'('type.infer.exc'('type.one.one',X3),X4)),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),X2),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),'const.infer.fresh_uvar_1'(s('type.infer.infer_st'(X1),X5))))),s('type.pair.prod'('type.infer.exc'('type.one.one',X3),X4),'const.infer.guard_3'(s(bool,X6),s(X3,X7),s(X4,X8))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),X2),'type.pair.prod'('type.infer.exc'('type.one.one',X3),X4)),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),happ(s(fun('type.infer.infer_st'(X1),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1))),'const.infer.fresh_uvar_0'),s('type.infer.infer_st'(X1),X5))),s('type.pair.prod'('type.infer.exc'('type.one.one',X3),X4),happ(s(fun(X4,'type.pair.prod'('type.infer.exc'('type.one.one',X3),X4)),'const.infer.guard_2'(s(bool,X6),s(X3,X7))),s(X4,X8)))))) )),
  inference(unit_resulting_resolution,[],[f179,f183,f212])).
fof(f5864,plain,(
  ( ! [X6,X4,X2,X0,X10,X8,X7,X5,X3,X1,X9] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),'type.pair.prod'('type.infer.exc'('type.one.one',X4),X5)),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'(X0,X1),X2),'const.infer.failwith_2'(s(X1,X6),s(X2,X7))),s('type.pair.prod'('type.infer.exc'('type.one.one',X4),X5),'const.infer.guard_3'(s(bool,X8),s(X4,X9),s(X5,X10))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),'type.pair.prod'('type.infer.exc'('type.one.one',X4),X5)),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'(X0,X1),X2),'const.infer.failwith_2'(s(X1,X6),s(X2,X7))))),s('type.pair.prod'('type.infer.exc'('type.one.one',X4),X5),'const.infer.guard_3'(s(bool,X8),s(X4,X9),s(X5,X10)))))) )),
  inference(forward_demodulation,[],[f5863,f204])).
fof(f5863,plain,(
  ( ! [X6,X4,X2,X0,X10,X8,X7,X5,X3,X1,X9] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),'type.pair.prod'('type.infer.exc'('type.one.one',X4),X5)),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'(X0,X1),X2),'const.infer.failwith_2'(s(X1,X6),s(X2,X7))))),s('type.pair.prod'('type.infer.exc'('type.one.one',X4),X5),'const.infer.guard_3'(s(bool,X8),s(X4,X9),s(X5,X10))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),'type.pair.prod'('type.infer.exc'('type.one.one',X4),X5)),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'(X0,X1),X2),happ(s(fun(X2,'type.pair.prod'('type.infer.exc'(X0,X1),X2)),'const.infer.failwith_1'(s(X1,X6))),s(X2,X7))),s('type.pair.prod'('type.infer.exc'('type.one.one',X4),X5),'const.infer.guard_3'(s(bool,X8),s(X4,X9),s(X5,X10)))))) )),
  inference(forward_demodulation,[],[f5778,f183])).
fof(f5778,plain,(
  ( ! [X6,X4,X2,X0,X10,X8,X7,X5,X3,X1,X9] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),'type.pair.prod'('type.infer.exc'('type.one.one',X4),X5)),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'(X0,X1),X2),'const.infer.failwith_2'(s(X1,X6),s(X2,X7))))),s('type.pair.prod'('type.infer.exc'('type.one.one',X4),X5),'const.infer.guard_3'(s(bool,X8),s(X4,X9),s(X5,X10))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),'type.pair.prod'('type.infer.exc'('type.one.one',X4),X5)),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'(X0,X1),X2),happ(s(fun(X2,'type.pair.prod'('type.infer.exc'(X0,X1),X2)),'const.infer.failwith_1'(s(X1,X6))),s(X2,X7))),s('type.pair.prod'('type.infer.exc'('type.one.one',X4),X5),happ(s(fun(X5,'type.pair.prod'('type.infer.exc'('type.one.one',X4),X5)),'const.infer.guard_2'(s(bool,X8),s(X4,X9))),s(X5,X10)))))) )),
  inference(unit_resulting_resolution,[],[f204,f183,f212])).
fof(f5862,plain,(
  ( ! [X6,X4,X2,X0,X10,X8,X7,X5,X3,X1,X9] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),X2),'type.pair.prod'('type.infer.exc'('type.one.one',X3),X4)),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),'const.infer.guard_3'(s(bool,X5),s(X0,X6),s(X1,X7))),s('type.pair.prod'('type.infer.exc'('type.one.one',X3),X4),'const.infer.guard_3'(s(bool,X8),s(X3,X9),s(X4,X10))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),X2),'type.pair.prod'('type.infer.exc'('type.one.one',X3),X4)),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),X2),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),'const.infer.guard_3'(s(bool,X5),s(X0,X6),s(X1,X7))))),s('type.pair.prod'('type.infer.exc'('type.one.one',X3),X4),'const.infer.guard_3'(s(bool,X8),s(X3,X9),s(X4,X10)))))) )),
  inference(forward_demodulation,[],[f5861,f183])).
fof(f5861,plain,(
  ( ! [X6,X4,X2,X0,X10,X8,X7,X5,X3,X1,X9] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),X2),'type.pair.prod'('type.infer.exc'('type.one.one',X3),X4)),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),X2),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),'const.infer.guard_3'(s(bool,X5),s(X0,X6),s(X1,X7))))),s('type.pair.prod'('type.infer.exc'('type.one.one',X3),X4),'const.infer.guard_3'(s(bool,X8),s(X3,X9),s(X4,X10))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),X2),'type.pair.prod'('type.infer.exc'('type.one.one',X3),X4)),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),happ(s(fun(X1,'type.pair.prod'('type.infer.exc'('type.one.one',X0),X1)),'const.infer.guard_2'(s(bool,X5),s(X0,X6))),s(X1,X7))),s('type.pair.prod'('type.infer.exc'('type.one.one',X3),X4),'const.infer.guard_3'(s(bool,X8),s(X3,X9),s(X4,X10)))))) )),
  inference(forward_demodulation,[],[f5779,f183])).
fof(f5779,plain,(
  ( ! [X6,X4,X2,X0,X10,X8,X7,X5,X3,X1,X9] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),X2),'type.pair.prod'('type.infer.exc'('type.one.one',X3),X4)),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),X2),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),'const.infer.guard_3'(s(bool,X5),s(X0,X6),s(X1,X7))))),s('type.pair.prod'('type.infer.exc'('type.one.one',X3),X4),'const.infer.guard_3'(s(bool,X8),s(X3,X9),s(X4,X10))))) = s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),X2),'type.pair.prod'('type.infer.exc'('type.one.one',X3),X4)),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),happ(s(fun(X1,'type.pair.prod'('type.infer.exc'('type.one.one',X0),X1)),'const.infer.guard_2'(s(bool,X5),s(X0,X6))),s(X1,X7))),s('type.pair.prod'('type.infer.exc'('type.one.one',X3),X4),happ(s(fun(X4,'type.pair.prod'('type.infer.exc'('type.one.one',X3),X4)),'const.infer.guard_2'(s(bool,X8),s(X3,X9))),s(X4,X10)))))) )),
  inference(unit_resulting_resolution,[],[f183,f183,f212])).
fof(f3715,plain,(
  ( ! [X255,X253,X251,X249,X254,X252,X250] : (s('type.pair.prod'('type.infer.exc'('type.list.list'(X249),X253),'type.list.list'(X249)),'const.infer.st_ex_return_2'(s('type.list.list'(X249),X254),s('type.list.list'(X249),X255))) != s('type.pair.prod'('type.infer.exc'('type.list.list'(X249),X253),'type.list.list'(X249)),'const.infer.read_1'(s('type.list.list'(X249),'const.list.MAP_2'(s(fun(X250,X249),X251),s('type.list.list'(X250),X252))))) | s('type.list.list'(X249),X255) = s('type.list.list'(X249),happ(s(fun('type.list.list'(X250),'type.list.list'(X249)),happ(s(fun(fun(X250,X249),fun('type.list.list'(X250),'type.list.list'(X249))),'const.list.MAP_0'),s(fun(X250,X249),X251))),s('type.list.list'(X250),X252)))) )),
  inference(superposition,[],[f1740,f180])).
fof(f3713,plain,(
  ( ! [X241,X239,X237,X235,X240,X238,X236] : (s('type.pair.prod'('type.infer.exc'('type.list.list'(X235),X239),'type.list.list'(X235)),'const.infer.read_1'(s('type.list.list'(X235),X240))) != s('type.pair.prod'('type.infer.exc'('type.list.list'(X235),X239),'type.list.list'(X235)),'const.infer.st_ex_return_2'(s('type.list.list'(X235),X241),s('type.list.list'(X235),'const.list.MAP_2'(s(fun(X236,X235),X237),s('type.list.list'(X236),X238))))) | s('type.list.list'(X235),X240) = s('type.list.list'(X235),happ(s(fun('type.list.list'(X236),'type.list.list'(X235)),happ(s(fun(fun(X236,X235),fun('type.list.list'(X236),'type.list.list'(X235))),'const.list.MAP_0'),s(fun(X236,X235),X237))),s('type.list.list'(X236),X238)))) )),
  inference(superposition,[],[f1740,f180])).
fof(f3712,plain,(
  ( ! [X231,X229,X233,X230,X228,X234,X232] : (s('type.pair.prod'('type.infer.exc'('type.list.list'(X228),X232),'type.list.list'(X228)),'const.infer.st_ex_return_2'(s('type.list.list'(X228),X233),s('type.list.list'(X228),X234))) != s('type.pair.prod'('type.infer.exc'('type.list.list'(X228),X232),'type.list.list'(X228)),'const.infer.read_1'(s('type.list.list'(X228),'const.list.MAP_2'(s(fun(X229,X228),X230),s('type.list.list'(X229),X231))))) | s('type.list.list'(X228),X233) = s('type.list.list'(X228),happ(s(fun('type.list.list'(X229),'type.list.list'(X228)),happ(s(fun(fun(X229,X228),fun('type.list.list'(X229),'type.list.list'(X228))),'const.list.MAP_0'),s(fun(X229,X228),X230))),s('type.list.list'(X229),X231)))) )),
  inference(superposition,[],[f1426,f180])).
fof(f3711,plain,(
  ( ! [X222,X227,X225,X223,X221,X226,X224] : (s('type.pair.prod'('type.infer.exc'('type.list.list'(X221),X225),'type.list.list'(X221)),'const.infer.read_1'(s('type.list.list'(X221),X226))) != s('type.pair.prod'('type.infer.exc'('type.list.list'(X221),X225),'type.list.list'(X221)),'const.infer.st_ex_return_2'(s('type.list.list'(X221),'const.list.MAP_2'(s(fun(X222,X221),X223),s('type.list.list'(X222),X224))),s('type.list.list'(X221),X227))) | s('type.list.list'(X221),X226) = s('type.list.list'(X221),happ(s(fun('type.list.list'(X222),'type.list.list'(X221)),happ(s(fun(fun(X222,X221),fun('type.list.list'(X222),'type.list.list'(X221))),'const.list.MAP_0'),s(fun(X222,X221),X223))),s('type.list.list'(X222),X224)))) )),
  inference(superposition,[],[f1426,f180])).
fof(f3702,plain,(
  ( ! [X156,X154,X152,X151,X149,X155,X153,X150,X148] : (s('type.pair.prod'('type.infer.exc'(X152,X153),'type.list.list'(X148)),'const.infer.st_ex_return_2'(s(X152,X154),s('type.list.list'(X148),X155))) != s('type.pair.prod'('type.infer.exc'(X152,X153),'type.list.list'(X148)),'const.pair.,_2'(s('type.infer.exc'(X152,X153),'const.infer.Success_1'(s(X152,X156))),s('type.list.list'(X148),'const.list.MAP_2'(s(fun(X149,X148),X150),s('type.list.list'(X149),X151))))) | s('type.list.list'(X148),X155) = s('type.list.list'(X148),happ(s(fun('type.list.list'(X149),'type.list.list'(X148)),happ(s(fun(fun(X149,X148),fun('type.list.list'(X149),'type.list.list'(X148))),'const.list.MAP_0'),s(fun(X149,X148),X150))),s('type.list.list'(X149),X151)))) )),
  inference(superposition,[],[f211,f180])).
fof(f3701,plain,(
  ( ! [X146,X144,X142,X140,X147,X145,X143,X141,X139] : (s('type.pair.prod'('type.infer.exc'(X143,X144),'type.list.list'(X139)),'const.pair.,_2'(s('type.infer.exc'(X143,X144),'const.infer.Success_1'(s(X143,X146))),s('type.list.list'(X139),X147))) != s('type.pair.prod'('type.infer.exc'(X143,X144),'type.list.list'(X139)),'const.infer.st_ex_return_2'(s(X143,X145),s('type.list.list'(X139),'const.list.MAP_2'(s(fun(X140,X139),X141),s('type.list.list'(X140),X142))))) | s('type.list.list'(X139),X147) = s('type.list.list'(X139),happ(s(fun('type.list.list'(X140),'type.list.list'(X139)),happ(s(fun(fun(X140,X139),fun('type.list.list'(X140),'type.list.list'(X139))),'const.list.MAP_0'),s(fun(X140,X139),X141))),s('type.list.list'(X140),X142)))) )),
  inference(superposition,[],[f211,f180])).
fof(f3696,plain,(
  ( ! [X94,X101,X99,X97,X95,X102,X100,X98,X96] : (s('type.pair.prod'('type.infer.exc'('type.list.list'(X94),X98),X99),'const.pair.,_2'(s('type.infer.exc'('type.list.list'(X94),X98),'const.infer.Success_1'(s('type.list.list'(X94),X101))),s(X99,X102))) != s('type.pair.prod'('type.infer.exc'('type.list.list'(X94),X98),X99),'const.infer.st_ex_return_2'(s('type.list.list'(X94),'const.list.MAP_2'(s(fun(X95,X94),X96),s('type.list.list'(X95),X97))),s(X99,X100))) | s('type.list.list'(X94),X101) = s('type.list.list'(X94),happ(s(fun('type.list.list'(X95),'type.list.list'(X94)),happ(s(fun(fun(X95,X94),fun('type.list.list'(X95),'type.list.list'(X94))),'const.list.MAP_0'),s(fun(X95,X94),X96))),s('type.list.list'(X95),X97)))) )),
  inference(superposition,[],[f210,f180])).
fof(f3695,plain,(
  ( ! [X92,X90,X88,X87,X85,X93,X91,X89,X86] : (s('type.pair.prod'('type.infer.exc'('type.list.list'(X85),X89),X90),'const.infer.st_ex_return_2'(s('type.list.list'(X85),X91),s(X90,X92))) != s('type.pair.prod'('type.infer.exc'('type.list.list'(X85),X89),X90),'const.pair.,_2'(s('type.infer.exc'('type.list.list'(X85),X89),'const.infer.Success_1'(s('type.list.list'(X85),'const.list.MAP_2'(s(fun(X86,X85),X87),s('type.list.list'(X86),X88))))),s(X90,X93))) | s('type.list.list'(X85),X91) = s('type.list.list'(X85),happ(s(fun('type.list.list'(X86),'type.list.list'(X85)),happ(s(fun(fun(X86,X85),fun('type.list.list'(X86),'type.list.list'(X85))),'const.list.MAP_0'),s(fun(X86,X85),X87))),s('type.list.list'(X86),X88)))) )),
  inference(superposition,[],[f210,f180])).
fof(f3691,plain,(
  ( ! [X61,X59,X57,X54,X62,X60,X58,X56,X55] : (s('type.pair.prod'('type.infer.exc'('type.one.one',X58),'type.list.list'(X54)),'const.infer.guard_3'(s(bool,X59),s(X58,X60),s('type.list.list'(X54),X61))) != s('type.pair.prod'('type.infer.exc'('type.one.one',X58),'type.list.list'(X54)),'const.pair.,_2'(s('type.infer.exc'('type.one.one',X58),'const.infer.Success_1'(s('type.one.one',X62))),s('type.list.list'(X54),'const.list.MAP_2'(s(fun(X55,X54),X56),s('type.list.list'(X55),X57))))) | s('type.list.list'(X54),X61) = s('type.list.list'(X54),happ(s(fun('type.list.list'(X55),'type.list.list'(X54)),happ(s(fun(fun(X55,X54),fun('type.list.list'(X55),'type.list.list'(X54))),'const.list.MAP_0'),s(fun(X55,X54),X56))),s('type.list.list'(X55),X57)))) )),
  inference(superposition,[],[f197,f180])).
fof(f3690,plain,(
  ( ! [X47,X45,X52,X50,X48,X46,X53,X51,X49] : (s('type.pair.prod'('type.infer.exc'('type.one.one',X49),'type.list.list'(X45)),'const.pair.,_2'(s('type.infer.exc'('type.one.one',X49),'const.infer.Success_1'(s('type.one.one',X52))),s('type.list.list'(X45),X53))) != s('type.pair.prod'('type.infer.exc'('type.one.one',X49),'type.list.list'(X45)),'const.infer.guard_3'(s(bool,X50),s(X49,X51),s('type.list.list'(X45),'const.list.MAP_2'(s(fun(X46,X45),X47),s('type.list.list'(X46),X48))))) | s('type.list.list'(X45),X53) = s('type.list.list'(X45),happ(s(fun('type.list.list'(X46),'type.list.list'(X45)),happ(s(fun(fun(X46,X45),fun('type.list.list'(X46),'type.list.list'(X45))),'const.list.MAP_0'),s(fun(X46,X45),X47))),s('type.list.list'(X46),X48)))) )),
  inference(superposition,[],[f197,f180])).
fof(f3683,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s(X4,happ(s(fun('type.list.list'(X0),X4),X5),s('type.list.list'(X0),'const.list.MAP_2'(s(fun(X1,X0),X2),s('type.list.list'(X1),X3))))) = s(X4,happ(s(fun('type.list.list'(X1),X4),'_dst_x0x1_2'(s(fun('type.list.list'(X0),X4),X5),s(fun('type.list.list'(X1),'type.list.list'(X0)),happ(s(fun(fun(X1,X0),fun('type.list.list'(X1),'type.list.list'(X0))),'const.list.MAP_0'),s(fun(X1,X0),X2))))),s('type.list.list'(X1),X3)))) )),
  inference(superposition,[],[f206,f180])).
fof(f3682,plain,(
  ( ! [X6,X4,X8,X7,X5,X9] : (s('type.list.list'(X4),'const.list.MAP_2'(s(fun(X5,X4),X6),s('type.list.list'(X5),happ(s(fun(X7,'type.list.list'(X5)),X8),s(X7,X9))))) = s('type.list.list'(X4),happ(s(fun(X7,'type.list.list'(X4)),'_dst_x0x1_2'(s(fun('type.list.list'(X5),'type.list.list'(X4)),happ(s(fun(fun(X5,X4),fun('type.list.list'(X5),'type.list.list'(X4))),'const.list.MAP_0'),s(fun(X5,X4),X6))),s(fun(X7,'type.list.list'(X5)),X8))),s(X7,X9)))) )),
  inference(superposition,[],[f180,f206])).
fof(f3303,plain,(
  ( ! [X30,X28,X35,X33,X31,X29,X36,X34,X32] : (s('type.pair.prod'('type.infer.exc'('type.num.num',X33),'type.infer.infer_st'(X34)),'const.infer.get_next_uvar_1'(s('type.infer.infer_st'(X34),X35))) != s('type.pair.prod'('type.infer.exc'('type.num.num',X33),'type.infer.infer_st'(X34)),'const.pair.,_2'(s('type.infer.exc'('type.num.num',X33),'const.infer.Success_1'(s('type.num.num',happ(s(fun(X29,'type.num.num'),X30),s(X29,happ(s(fun(X28,X29),X31),s(X28,X32))))))),s('type.infer.infer_st'(X34),X36))) | s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'(X34),X35))) = s('type.num.num',happ(s(fun(X28,'type.num.num'),'_dst_x0x1_2'(s(fun(X29,'type.num.num'),X30),s(fun(X28,X29),X31))),s(X28,X32)))) )),
  inference(superposition,[],[f186,f206])).
fof(f3302,plain,(
  ( ! [X26,X24,X23,X21,X19,X27,X25,X22,X20] : (s('type.pair.prod'('type.infer.exc'('type.num.num',X24),'type.infer.infer_st'(X25)),'const.infer.get_next_uvar_1'(s('type.infer.infer_st'(X25),X26))) != s('type.pair.prod'('type.infer.exc'('type.num.num',X24),'type.infer.infer_st'(X25)),'const.pair.,_2'(s('type.infer.exc'('type.num.num',X24),'const.infer.Success_1'(s('type.num.num',happ(s(fun(X21,'type.num.num'),'_dst_x0x1_2'(s(fun(X19,'type.num.num'),X20),s(fun(X21,X19),X22))),s(X21,X23))))),s('type.infer.infer_st'(X25),X27))) | s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'(X25),X26))) = s('type.num.num',happ(s(fun(X19,'type.num.num'),X20),s(X19,happ(s(fun(X21,X19),X22),s(X21,X23)))))) )),
  inference(superposition,[],[f186,f206])).
fof(f3297,plain,(
  ( ! [X14,X21,X19,X17,X15,X22,X20,X18,X16] : (s('type.pair.prod'('type.infer.exc'('type.num.num',X20),'type.infer.infer_st'(X14)),'const.pair.,_2'(s('type.infer.exc'('type.num.num',X20),'const.infer.Success_1'(s('type.num.num',X21))),s('type.infer.infer_st'(X14),X22))) != s('type.pair.prod'('type.infer.exc'('type.num.num',X20),'type.infer.infer_st'(X14)),'const.infer.get_next_uvar_1'(s('type.infer.infer_st'(X14),happ(s(fun(X16,'type.infer.infer_st'(X14)),X17),s(X16,happ(s(fun(X15,X16),X18),s(X15,X19))))))) | s('type.num.num',X21) = s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'(X14),happ(s(fun(X15,'type.infer.infer_st'(X14)),'_dst_x0x1_2'(s(fun(X16,'type.infer.infer_st'(X14)),X17),s(fun(X15,X16),X18))),s(X15,X19)))))) )),
  inference(superposition,[],[f186,f206])).
fof(f3296,plain,(
  ( ! [X6,X12,X10,X8,X7,X5,X13,X11,X9] : (s('type.pair.prod'('type.infer.exc'('type.num.num',X11),'type.infer.infer_st'(X5)),'const.pair.,_2'(s('type.infer.exc'('type.num.num',X11),'const.infer.Success_1'(s('type.num.num',X12))),s('type.infer.infer_st'(X5),X13))) != s('type.pair.prod'('type.infer.exc'('type.num.num',X11),'type.infer.infer_st'(X5)),'const.infer.get_next_uvar_1'(s('type.infer.infer_st'(X5),happ(s(fun(X8,'type.infer.infer_st'(X5)),'_dst_x0x1_2'(s(fun(X6,'type.infer.infer_st'(X5)),X7),s(fun(X8,X6),X9))),s(X8,X10))))) | s('type.num.num',X12) = s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'(X5),happ(s(fun(X6,'type.infer.infer_st'(X5)),X7),s(X6,happ(s(fun(X8,X6),X9),s(X8,X10)))))))) )),
  inference(superposition,[],[f186,f206])).
fof(f3208,plain,(
  ( ! [X445,X447,X443,X449,X451,X444,X446,X442,X448,X450] : (s('type.pair.prod'('type.infer.exc'('type.one.one',X447),'type.pair.prod'('type.infer.exc'('type.one.one',X442),X443)),'const.infer.guard_3'(s(bool,X448),s(X447,X449),s('type.pair.prod'('type.infer.exc'('type.one.one',X442),X443),X450))) != s('type.pair.prod'('type.infer.exc'('type.one.one',X447),'type.pair.prod'('type.infer.exc'('type.one.one',X442),X443)),'const.pair.,_2'(s('type.infer.exc'('type.one.one',X447),'const.infer.Success_1'(s('type.one.one',X451))),s('type.pair.prod'('type.infer.exc'('type.one.one',X442),X443),'const.infer.guard_3'(s(bool,X444),s(X442,X445),s(X443,X446))))) | s('type.pair.prod'('type.infer.exc'('type.one.one',X442),X443),X450) = s('type.pair.prod'('type.infer.exc'('type.one.one',X442),X443),happ(s(fun(X443,'type.pair.prod'('type.infer.exc'('type.one.one',X442),X443)),'const.infer.guard_2'(s(bool,X444),s(X442,X445))),s(X443,X446)))) )),
  inference(superposition,[],[f197,f183])).
fof(f3207,plain,(
  ( ! [X441,X436,X438,X434,X440,X437,X439,X435] : (s('type.pair.prod'('type.infer.exc'('type.one.one',X437),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X434),'type.infer.infer_st'(X435))),'const.infer.guard_3'(s(bool,X438),s(X437,X439),s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X434),'type.infer.infer_st'(X435)),X440))) != s('type.pair.prod'('type.infer.exc'('type.one.one',X437),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X434),'type.infer.infer_st'(X435))),'const.pair.,_2'(s('type.infer.exc'('type.one.one',X437),'const.infer.Success_1'(s('type.one.one',X441))),s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X434),'type.infer.infer_st'(X435)),'const.infer.fresh_uvar_1'(s('type.infer.infer_st'(X435),X436))))) | s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X434),'type.infer.infer_st'(X435)),X440) = s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X434),'type.infer.infer_st'(X435)),happ(s(fun('type.infer.infer_st'(X435),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X434),'type.infer.infer_st'(X435))),'const.infer.fresh_uvar_0'),s('type.infer.infer_st'(X435),X436)))) )),
  inference(superposition,[],[f197,f179])).
fof(f3206,plain,(
  ( ! [X428,X430,X424,X426,X432,X429,X431,X425,X427,X433] : (s('type.pair.prod'('type.infer.exc'('type.one.one',X429),'type.pair.prod'('type.infer.exc'(X424,X425),X426)),'const.infer.guard_3'(s(bool,X430),s(X429,X431),s('type.pair.prod'('type.infer.exc'(X424,X425),X426),X432))) != s('type.pair.prod'('type.infer.exc'('type.one.one',X429),'type.pair.prod'('type.infer.exc'(X424,X425),X426)),'const.pair.,_2'(s('type.infer.exc'('type.one.one',X429),'const.infer.Success_1'(s('type.one.one',X433))),s('type.pair.prod'('type.infer.exc'(X424,X425),X426),'const.infer.failwith_2'(s(X425,X427),s(X426,X428))))) | s('type.pair.prod'('type.infer.exc'(X424,X425),X426),X432) = s('type.pair.prod'('type.infer.exc'(X424,X425),X426),happ(s(fun(X426,'type.pair.prod'('type.infer.exc'(X424,X425),X426)),'const.infer.failwith_1'(s(X425,X427))),s(X426,X428)))) )),
  inference(superposition,[],[f197,f204])).
fof(f3205,plain,(
  ( ! [X420,X422,X416,X418,X421,X423,X417,X419] : (s('type.pair.prod'('type.infer.exc'('type.one.one',X419),'type.pair.prod'('type.infer.exc'(X416,X417),X416)),'const.infer.guard_3'(s(bool,X420),s(X419,X421),s('type.pair.prod'('type.infer.exc'(X416,X417),X416),X422))) != s('type.pair.prod'('type.infer.exc'('type.one.one',X419),'type.pair.prod'('type.infer.exc'(X416,X417),X416)),'const.pair.,_2'(s('type.infer.exc'('type.one.one',X419),'const.infer.Success_1'(s('type.one.one',X423))),s('type.pair.prod'('type.infer.exc'(X416,X417),X416),'const.infer.read_1'(s(X416,X418))))) | s('type.pair.prod'('type.infer.exc'(X416,X417),X416),X422) = s('type.pair.prod'('type.infer.exc'(X416,X417),X416),happ(s(fun(X416,'type.pair.prod'('type.infer.exc'(X416,X417),X416)),'const.infer.read_0'),s(X416,X418)))) )),
  inference(superposition,[],[f197,f178])).
fof(f3204,plain,(
  ( ! [X412,X414,X408,X410,X413,X415,X409,X411] : (s('type.pair.prod'('type.infer.exc'('type.one.one',X411),'type.pair.prod'('type.infer.exc'(X408,X409),X408)),'const.infer.guard_3'(s(bool,X412),s(X411,X413),s('type.pair.prod'('type.infer.exc'(X408,X409),X408),X414))) != s('type.pair.prod'('type.infer.exc'('type.one.one',X411),'type.pair.prod'('type.infer.exc'(X408,X409),X408)),'const.pair.,_2'(s('type.infer.exc'('type.one.one',X411),'const.infer.Success_1'(s('type.one.one',X415))),s('type.pair.prod'('type.infer.exc'(X408,X409),X408),'const.infer.read_1'(s(X408,X410))))) | s('type.pair.prod'('type.infer.exc'(X408,X409),X408),X414) = s('type.pair.prod'('type.infer.exc'(X408,X409),X408),'const.pair.,_2'(s('type.infer.exc'(X408,X409),'const.infer.Success_1'(s(X408,X410))),s(X408,X410)))) )),
  inference(superposition,[],[f197,f177])).
fof(f3166,plain,(
  ( ! [X92,X90,X88,X93,X91,X89] : (s('type.pair.prod'('type.infer.exc'('type.one.one',X89),bool),'const.infer.guard_3'(s(bool,X90),s(X89,X91),s(bool,X92))) != s('type.pair.prod'('type.infer.exc'('type.one.one',X89),bool),'const.pair.,_2'(s('type.infer.exc'('type.one.one',X89),'const.infer.Success_1'(s('type.one.one',X93))),s(bool,'T_0'))) | s(bool,X92) = s(bool,happ(s(fun('type.infer.infer_st'(bool),bool),'const.infer.infer_st_subst_0'),s('type.infer.infer_st'(bool),X88))) | s(bool,'F_0') = s(bool,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(bool),X88)))) )),
  inference(superposition,[],[f197,f293])).
fof(f3157,plain,(
  ( ! [X30,X35,X33,X31,X29,X34,X32] : (s('type.pair.prod'('type.infer.exc'('type.one.one',X30),bool),'const.infer.guard_3'(s(bool,X31),s(X30,X32),s(bool,X33))) != s('type.pair.prod'('type.infer.exc'('type.one.one',X30),bool),'const.pair.,_2'(s('type.infer.exc'('type.one.one',X30),'const.infer.Success_1'(s('type.one.one',X34))),s(bool,'T_0'))) | s(bool,X29) = s(bool,X33) | s(bool,X29) = s(bool,X35) | s(bool,'T_0') = s(bool,X35)) )),
  inference(superposition,[],[f197,f272])).
fof(f3156,plain,(
  ( ! [X28,X26,X24,X23,X21,X19,X27,X25,X22,X20,X18] : (s('type.pair.prod'('type.infer.exc'('type.one.one',X24),X18),'const.infer.guard_3'(s(bool,X25),s(X24,X26),s(X18,X27))) != s('type.pair.prod'('type.infer.exc'('type.one.one',X24),X18),'const.pair.,_2'(s('type.infer.exc'('type.one.one',X24),'const.infer.Success_1'(s('type.one.one',X28))),s(X18,happ(s(fun(X20,X18),X21),s(X20,happ(s(fun(X19,X20),X22),s(X19,X23))))))) | s(X18,X27) = s(X18,happ(s(fun(X19,X18),'_dst_x0x1_2'(s(fun(X20,X18),X21),s(fun(X19,X20),X22))),s(X19,X23)))) )),
  inference(superposition,[],[f197,f206])).
fof(f3155,plain,(
  ( ! [X14,X12,X10,X8,X17,X7,X15,X13,X11,X9,X16] : (s('type.pair.prod'('type.infer.exc'('type.one.one',X13),X7),'const.infer.guard_3'(s(bool,X14),s(X13,X15),s(X7,X16))) != s('type.pair.prod'('type.infer.exc'('type.one.one',X13),X7),'const.pair.,_2'(s('type.infer.exc'('type.one.one',X13),'const.infer.Success_1'(s('type.one.one',X17))),s(X7,happ(s(fun(X10,X7),'_dst_x0x1_2'(s(fun(X8,X7),X9),s(fun(X10,X8),X11))),s(X10,X12))))) | s(X7,X16) = s(X7,happ(s(fun(X8,X7),X9),s(X8,happ(s(fun(X10,X8),X11),s(X10,X12)))))) )),
  inference(superposition,[],[f197,f206])).
fof(f3154,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.one.one',X2),X0),'const.infer.guard_3'(s(bool,X3),s(X2,X4),s(X0,X5))) != s('type.pair.prod'('type.infer.exc'('type.one.one',X2),X0),'const.pair.,_2'(s('type.infer.exc'('type.one.one',X2),'const.infer.Success_1'(s('type.one.one',X6))),s(X0,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(X0),X1))))) | s(X0,X5) = s(X0,happ(s(fun('type.infer.infer_st'(X0),X0),'const.infer.infer_st_subst_0'),s('type.infer.infer_st'(X0),X1)))) )),
  inference(superposition,[],[f197,f168])).
fof(f3146,plain,(
  ( ! [X445,X447,X443,X449,X451,X444,X446,X442,X448,X450] : (s('type.pair.prod'('type.infer.exc'('type.one.one',X447),'type.pair.prod'('type.infer.exc'('type.one.one',X442),X443)),'const.pair.,_2'(s('type.infer.exc'('type.one.one',X447),'const.infer.Success_1'(s('type.one.one',X450))),s('type.pair.prod'('type.infer.exc'('type.one.one',X442),X443),X451))) != s('type.pair.prod'('type.infer.exc'('type.one.one',X447),'type.pair.prod'('type.infer.exc'('type.one.one',X442),X443)),'const.infer.guard_3'(s(bool,X448),s(X447,X449),s('type.pair.prod'('type.infer.exc'('type.one.one',X442),X443),'const.infer.guard_3'(s(bool,X444),s(X442,X445),s(X443,X446))))) | s('type.pair.prod'('type.infer.exc'('type.one.one',X442),X443),X451) = s('type.pair.prod'('type.infer.exc'('type.one.one',X442),X443),happ(s(fun(X443,'type.pair.prod'('type.infer.exc'('type.one.one',X442),X443)),'const.infer.guard_2'(s(bool,X444),s(X442,X445))),s(X443,X446)))) )),
  inference(superposition,[],[f197,f183])).
fof(f3145,plain,(
  ( ! [X441,X436,X438,X434,X440,X437,X439,X435] : (s('type.pair.prod'('type.infer.exc'('type.one.one',X437),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X434),'type.infer.infer_st'(X435))),'const.pair.,_2'(s('type.infer.exc'('type.one.one',X437),'const.infer.Success_1'(s('type.one.one',X440))),s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X434),'type.infer.infer_st'(X435)),X441))) != s('type.pair.prod'('type.infer.exc'('type.one.one',X437),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X434),'type.infer.infer_st'(X435))),'const.infer.guard_3'(s(bool,X438),s(X437,X439),s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X434),'type.infer.infer_st'(X435)),'const.infer.fresh_uvar_1'(s('type.infer.infer_st'(X435),X436))))) | s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X434),'type.infer.infer_st'(X435)),X441) = s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X434),'type.infer.infer_st'(X435)),happ(s(fun('type.infer.infer_st'(X435),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X434),'type.infer.infer_st'(X435))),'const.infer.fresh_uvar_0'),s('type.infer.infer_st'(X435),X436)))) )),
  inference(superposition,[],[f197,f179])).
fof(f3144,plain,(
  ( ! [X428,X430,X424,X426,X432,X429,X431,X425,X427,X433] : (s('type.pair.prod'('type.infer.exc'('type.one.one',X429),'type.pair.prod'('type.infer.exc'(X424,X425),X426)),'const.pair.,_2'(s('type.infer.exc'('type.one.one',X429),'const.infer.Success_1'(s('type.one.one',X432))),s('type.pair.prod'('type.infer.exc'(X424,X425),X426),X433))) != s('type.pair.prod'('type.infer.exc'('type.one.one',X429),'type.pair.prod'('type.infer.exc'(X424,X425),X426)),'const.infer.guard_3'(s(bool,X430),s(X429,X431),s('type.pair.prod'('type.infer.exc'(X424,X425),X426),'const.infer.failwith_2'(s(X425,X427),s(X426,X428))))) | s('type.pair.prod'('type.infer.exc'(X424,X425),X426),X433) = s('type.pair.prod'('type.infer.exc'(X424,X425),X426),happ(s(fun(X426,'type.pair.prod'('type.infer.exc'(X424,X425),X426)),'const.infer.failwith_1'(s(X425,X427))),s(X426,X428)))) )),
  inference(superposition,[],[f197,f204])).
fof(f3143,plain,(
  ( ! [X420,X422,X416,X418,X421,X423,X417,X419] : (s('type.pair.prod'('type.infer.exc'('type.one.one',X419),'type.pair.prod'('type.infer.exc'(X416,X417),X416)),'const.pair.,_2'(s('type.infer.exc'('type.one.one',X419),'const.infer.Success_1'(s('type.one.one',X422))),s('type.pair.prod'('type.infer.exc'(X416,X417),X416),X423))) != s('type.pair.prod'('type.infer.exc'('type.one.one',X419),'type.pair.prod'('type.infer.exc'(X416,X417),X416)),'const.infer.guard_3'(s(bool,X420),s(X419,X421),s('type.pair.prod'('type.infer.exc'(X416,X417),X416),'const.infer.read_1'(s(X416,X418))))) | s('type.pair.prod'('type.infer.exc'(X416,X417),X416),X423) = s('type.pair.prod'('type.infer.exc'(X416,X417),X416),happ(s(fun(X416,'type.pair.prod'('type.infer.exc'(X416,X417),X416)),'const.infer.read_0'),s(X416,X418)))) )),
  inference(superposition,[],[f197,f178])).
fof(f3142,plain,(
  ( ! [X412,X414,X408,X410,X413,X415,X409,X411] : (s('type.pair.prod'('type.infer.exc'('type.one.one',X411),'type.pair.prod'('type.infer.exc'(X408,X409),X408)),'const.pair.,_2'(s('type.infer.exc'('type.one.one',X411),'const.infer.Success_1'(s('type.one.one',X414))),s('type.pair.prod'('type.infer.exc'(X408,X409),X408),X415))) != s('type.pair.prod'('type.infer.exc'('type.one.one',X411),'type.pair.prod'('type.infer.exc'(X408,X409),X408)),'const.infer.guard_3'(s(bool,X412),s(X411,X413),s('type.pair.prod'('type.infer.exc'(X408,X409),X408),'const.infer.read_1'(s(X408,X410))))) | s('type.pair.prod'('type.infer.exc'(X408,X409),X408),X415) = s('type.pair.prod'('type.infer.exc'(X408,X409),X408),'const.pair.,_2'(s('type.infer.exc'(X408,X409),'const.infer.Success_1'(s(X408,X410))),s(X408,X410)))) )),
  inference(superposition,[],[f197,f177])).
fof(f3141,plain,(
  ( ! [X405,X407,X401,X403,X404,X406,X402] : (s('type.pair.prod'('type.infer.exc'('type.one.one',X403),'type.infer_t.infer_t'),'const.pair.,_2'(s('type.infer.exc'('type.one.one',X403),'const.infer.Success_1'(s('type.one.one',X406))),s('type.infer_t.infer_t',X407))) != s('type.pair.prod'('type.infer.exc'('type.one.one',X403),'type.infer_t.infer_t'),'const.infer.guard_3'(s(bool,X404),s(X403,X405),s('type.infer_t.infer_t','const.unify.t_walkstar_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X401),s('type.infer_t.infer_t',X402))))) | s('type.infer_t.infer_t',X407) = s('type.infer_t.infer_t',happ(s(fun('type.infer_t.infer_t','type.infer_t.infer_t'),happ(s(fun('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),fun('type.infer_t.infer_t','type.infer_t.infer_t')),'const.unify.t_walkstar_0'),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X401))),s('type.infer_t.infer_t',X402)))) )),
  inference(superposition,[],[f197,f176])).
fof(f3104,plain,(
  ( ! [X92,X90,X88,X93,X91,X89] : (s('type.pair.prod'('type.infer.exc'('type.one.one',X89),bool),'const.infer.guard_3'(s(bool,X90),s(X89,X91),s(bool,'T_0'))) != s('type.pair.prod'('type.infer.exc'('type.one.one',X89),bool),'const.pair.,_2'(s('type.infer.exc'('type.one.one',X89),'const.infer.Success_1'(s('type.one.one',X92))),s(bool,X93))) | s(bool,X93) = s(bool,happ(s(fun('type.infer.infer_st'(bool),bool),'const.infer.infer_st_subst_0'),s('type.infer.infer_st'(bool),X88))) | s(bool,'F_0') = s(bool,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(bool),X88)))) )),
  inference(superposition,[],[f197,f293])).
fof(f3100,plain,(
  ( ! [X68,X66,X64,X69,X67,X65,X63] : (s('type.pair.prod'('type.infer.exc'('type.one.one',X64),bool),'const.infer.guard_3'(s(bool,X65),s(X64,X66),s(bool,X63))) != s('type.pair.prod'('type.infer.exc'('type.one.one',X64),bool),'const.pair.,_2'(s('type.infer.exc'('type.one.one',X64),'const.infer.Success_1'(s('type.one.one',X67))),s(bool,X68))) | s(bool,'T_0') = s(bool,X68) | s(bool,X63) = s(bool,X69) | s(bool,'T_0') = s(bool,X69)) )),
  inference(superposition,[],[f197,f272])).
fof(f3097,plain,(
  ( ! [X47,X45,X43,X48,X46,X44,X49] : (s('type.pair.prod'('type.infer.exc'('type.one.one',X45),bool),'const.infer.guard_3'(s(bool,X46),s(X45,X47),s(bool,X44))) != s('type.pair.prod'('type.infer.exc'('type.one.one',X45),bool),'const.pair.,_2'(s('type.infer.exc'('type.one.one',X45),'const.infer.Success_1'(s('type.one.one',X48))),s(bool,X49))) | s(bool,X43) = s(bool,X49) | s(bool,'T_0') = s(bool,X43) | s(bool,'T_0') = s(bool,X44)) )),
  inference(superposition,[],[f197,f272])).
fof(f3095,plain,(
  ( ! [X30,X35,X33,X31,X29,X34,X32] : (s('type.pair.prod'('type.infer.exc'('type.one.one',X30),bool),'const.infer.guard_3'(s(bool,X31),s(X30,X32),s(bool,'T_0'))) != s('type.pair.prod'('type.infer.exc'('type.one.one',X30),bool),'const.pair.,_2'(s('type.infer.exc'('type.one.one',X30),'const.infer.Success_1'(s('type.one.one',X33))),s(bool,X34))) | s(bool,X29) = s(bool,X34) | s(bool,X29) = s(bool,X35) | s(bool,'T_0') = s(bool,X35)) )),
  inference(superposition,[],[f197,f272])).
fof(f3094,plain,(
  ( ! [X28,X26,X24,X23,X21,X19,X27,X25,X22,X20,X18] : (s('type.pair.prod'('type.infer.exc'('type.one.one',X24),X18),'const.pair.,_2'(s('type.infer.exc'('type.one.one',X24),'const.infer.Success_1'(s('type.one.one',X27))),s(X18,X28))) != s('type.pair.prod'('type.infer.exc'('type.one.one',X24),X18),'const.infer.guard_3'(s(bool,X25),s(X24,X26),s(X18,happ(s(fun(X20,X18),X21),s(X20,happ(s(fun(X19,X20),X22),s(X19,X23))))))) | s(X18,X28) = s(X18,happ(s(fun(X19,X18),'_dst_x0x1_2'(s(fun(X20,X18),X21),s(fun(X19,X20),X22))),s(X19,X23)))) )),
  inference(superposition,[],[f197,f206])).
fof(f3093,plain,(
  ( ! [X14,X12,X10,X8,X17,X7,X15,X13,X11,X9,X16] : (s('type.pair.prod'('type.infer.exc'('type.one.one',X13),X7),'const.pair.,_2'(s('type.infer.exc'('type.one.one',X13),'const.infer.Success_1'(s('type.one.one',X16))),s(X7,X17))) != s('type.pair.prod'('type.infer.exc'('type.one.one',X13),X7),'const.infer.guard_3'(s(bool,X14),s(X13,X15),s(X7,happ(s(fun(X10,X7),'_dst_x0x1_2'(s(fun(X8,X7),X9),s(fun(X10,X8),X11))),s(X10,X12))))) | s(X7,X17) = s(X7,happ(s(fun(X8,X7),X9),s(X8,happ(s(fun(X10,X8),X11),s(X10,X12)))))) )),
  inference(superposition,[],[f197,f206])).
fof(f3092,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.one.one',X2),X0),'const.pair.,_2'(s('type.infer.exc'('type.one.one',X2),'const.infer.Success_1'(s('type.one.one',X5))),s(X0,X6))) != s('type.pair.prod'('type.infer.exc'('type.one.one',X2),X0),'const.infer.guard_3'(s(bool,X3),s(X2,X4),s(X0,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(X0),X1))))) | s(X0,X6) = s(X0,happ(s(fun('type.infer.infer_st'(X0),X0),'const.infer.infer_st_subst_0'),s('type.infer.infer_st'(X0),X1)))) )),
  inference(superposition,[],[f197,f168])).
fof(f3013,plain,(
  ( ! [X6,X4,X2,X0,X10,X8,X7,X5,X3,X1,X9] : (s('type.pair.prod'('type.infer.exc'('type.one.one',X0),'type.pair.prod'('type.infer.exc'(X1,X2),X3)),'const.infer.guard_3'(s(bool,X4),s(X0,X5),s('type.pair.prod'('type.infer.exc'(X1,X2),X3),'const.infer.failwith_2'(s(X2,X6),s(X3,X7))))) != s('type.pair.prod'('type.infer.exc'('type.one.one',X0),'type.pair.prod'('type.infer.exc'(X1,X2),X3)),'const.pair.,_2'(s('type.infer.exc'('type.one.one',X0),'const.infer.Success_1'(s('type.one.one',X8))),s('type.pair.prod'('type.infer.exc'(X1,X2),X3),'const.pair.,_2'(s('type.infer.exc'(X1,X2),'const.infer.Success_1'(s(X1,X9))),s(X3,X10)))))) )),
  inference(unit_resulting_resolution,[],[f253,f197])).
fof(f3014,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.one.one',X0),'type.pair.prod'('type.infer.exc'(X1,X2),X1)),'const.infer.guard_3'(s(bool,X3),s(X0,X4),s('type.pair.prod'('type.infer.exc'(X1,X2),X1),'const.infer.read_1'(s(X1,X5))))) != s('type.pair.prod'('type.infer.exc'('type.one.one',X0),'type.pair.prod'('type.infer.exc'(X1,X2),X1)),'const.pair.,_2'(s('type.infer.exc'('type.one.one',X0),'const.infer.Success_1'(s('type.one.one',X6))),s('type.pair.prod'('type.infer.exc'(X1,X2),X1),'const.infer.failwith_2'(s(X2,X7),s(X1,X8)))))) )),
  inference(unit_resulting_resolution,[],[f706,f197])).
fof(f3020,plain,(
  ( ! [X6,X4,X2,X0,X10,X8,X7,X5,X3,X1,X9] : (s('type.pair.prod'('type.infer.exc'('type.one.one',X0),'type.pair.prod'('type.infer.exc'(X1,X2),X3)),'const.pair.,_2'(s('type.infer.exc'('type.one.one',X0),'const.infer.Success_1'(s('type.one.one',X4))),s('type.pair.prod'('type.infer.exc'(X1,X2),X3),'const.infer.failwith_2'(s(X2,X5),s(X3,X6))))) != s('type.pair.prod'('type.infer.exc'('type.one.one',X0),'type.pair.prod'('type.infer.exc'(X1,X2),X3)),'const.infer.guard_3'(s(bool,X7),s(X0,X8),s('type.pair.prod'('type.infer.exc'(X1,X2),X3),'const.pair.,_2'(s('type.infer.exc'(X1,X2),'const.infer.Success_1'(s(X1,X9))),s(X3,X10)))))) )),
  inference(unit_resulting_resolution,[],[f253,f197])).
fof(f3021,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.one.one',X0),'type.pair.prod'('type.infer.exc'(X1,X2),X1)),'const.pair.,_2'(s('type.infer.exc'('type.one.one',X0),'const.infer.Success_1'(s('type.one.one',X3))),s('type.pair.prod'('type.infer.exc'(X1,X2),X1),'const.infer.read_1'(s(X1,X4))))) != s('type.pair.prod'('type.infer.exc'('type.one.one',X0),'type.pair.prod'('type.infer.exc'(X1,X2),X1)),'const.infer.guard_3'(s(bool,X5),s(X0,X6),s('type.pair.prod'('type.infer.exc'(X1,X2),X1),'const.infer.failwith_2'(s(X2,X7),s(X1,X8)))))) )),
  inference(unit_resulting_resolution,[],[f706,f197])).
fof(f2983,plain,(
  ( ! [X313,X308,X310,X312,X309,X311] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X308,X309),X308),X311),'type.pair.prod'('type.infer.exc'(X308,X309),X308)),'const.infer.read_1'(s('type.pair.prod'('type.infer.exc'(X308,X309),X308),X312))) != s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X308,X309),X308),X311),'type.pair.prod'('type.infer.exc'(X308,X309),X308)),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'(X308,X309),X308),X313),s('type.pair.prod'('type.infer.exc'(X308,X309),X308),'const.infer.read_1'(s(X308,X310))))) | s('type.pair.prod'('type.infer.exc'(X308,X309),X308),X312) = s('type.pair.prod'('type.infer.exc'(X308,X309),X308),'const.pair.,_2'(s('type.infer.exc'(X308,X309),'const.infer.Success_1'(s(X308,X310))),s(X308,X310)))) )),
  inference(superposition,[],[f1740,f177])).
fof(f2982,plain,(
  ( ! [X304,X306,X303,X305,X307] : (s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X305),'type.infer_t.infer_t'),'const.infer.read_1'(s('type.infer_t.infer_t',X306))) != s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X305),'type.infer_t.infer_t'),'const.infer.st_ex_return_2'(s('type.infer_t.infer_t',X307),s('type.infer_t.infer_t','const.unify.t_walkstar_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X303),s('type.infer_t.infer_t',X304))))) | s('type.infer_t.infer_t',X306) = s('type.infer_t.infer_t',happ(s(fun('type.infer_t.infer_t','type.infer_t.infer_t'),happ(s(fun('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),fun('type.infer_t.infer_t','type.infer_t.infer_t')),'const.unify.t_walkstar_0'),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X303))),s('type.infer_t.infer_t',X304)))) )),
  inference(superposition,[],[f1740,f176])).
fof(f2938,plain,(
  ( ! [X37,X35,X33,X36,X34] : (s('type.pair.prod'('type.infer.exc'(bool,X35),bool),'const.infer.read_1'(s(bool,X36))) != s('type.pair.prod'('type.infer.exc'(bool,X35),bool),'const.infer.st_ex_return_2'(s(bool,X37),s(bool,X34))) | s(bool,X33) = s(bool,X36) | s(bool,'T_0') = s(bool,X33) | s(bool,'T_0') = s(bool,X34)) )),
  inference(superposition,[],[f1740,f272])).
fof(f2936,plain,(
  ( ! [X26,X24,X23,X27,X25] : (s('type.pair.prod'('type.infer.exc'(bool,X24),bool),'const.infer.read_1'(s(bool,X25))) != s('type.pair.prod'('type.infer.exc'(bool,X24),bool),'const.infer.st_ex_return_2'(s(bool,X26),s(bool,'T_0'))) | s(bool,X23) = s(bool,X25) | s(bool,X23) = s(bool,X27) | s(bool,'T_0') = s(bool,X27)) )),
  inference(superposition,[],[f1740,f272])).
fof(f2935,plain,(
  ( ! [X14,X21,X19,X17,X15,X22,X20,X18,X16] : (s('type.pair.prod'('type.infer.exc'(X14,X20),X14),'const.infer.read_1'(s(X14,X21))) != s('type.pair.prod'('type.infer.exc'(X14,X20),X14),'const.infer.st_ex_return_2'(s(X14,X22),s(X14,happ(s(fun(X16,X14),X17),s(X16,happ(s(fun(X15,X16),X18),s(X15,X19))))))) | s(X14,X21) = s(X14,happ(s(fun(X15,X14),'_dst_x0x1_2'(s(fun(X16,X14),X17),s(fun(X15,X16),X18))),s(X15,X19)))) )),
  inference(superposition,[],[f1740,f206])).
fof(f2934,plain,(
  ( ! [X6,X12,X10,X8,X7,X5,X13,X11,X9] : (s('type.pair.prod'('type.infer.exc'(X5,X11),X5),'const.infer.read_1'(s(X5,X12))) != s('type.pair.prod'('type.infer.exc'(X5,X11),X5),'const.infer.st_ex_return_2'(s(X5,X13),s(X5,happ(s(fun(X8,X5),'_dst_x0x1_2'(s(fun(X6,X5),X7),s(fun(X8,X6),X9))),s(X8,X10))))) | s(X5,X12) = s(X5,happ(s(fun(X6,X5),X7),s(X6,happ(s(fun(X8,X6),X9),s(X8,X10)))))) )),
  inference(superposition,[],[f1740,f206])).
fof(f2873,plain,(
  ( ! [X308,X310,X306,X309,X311,X307] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X306,X307),X306),X309),'type.pair.prod'('type.infer.exc'(X306,X307),X306)),'const.infer.read_1'(s('type.pair.prod'('type.infer.exc'(X306,X307),X306),'const.infer.read_1'(s(X306,X308))))) != s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X306,X307),X306),X309),'type.pair.prod'('type.infer.exc'(X306,X307),X306)),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'(X306,X307),X306),X310),s('type.pair.prod'('type.infer.exc'(X306,X307),X306),X311))) | s('type.pair.prod'('type.infer.exc'(X306,X307),X306),X311) = s('type.pair.prod'('type.infer.exc'(X306,X307),X306),'const.pair.,_2'(s('type.infer.exc'(X306,X307),'const.infer.Success_1'(s(X306,X308))),s(X306,X308)))) )),
  inference(superposition,[],[f1740,f177])).
fof(f2872,plain,(
  ( ! [X302,X304,X301,X303,X305] : (s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X303),'type.infer_t.infer_t'),'const.infer.st_ex_return_2'(s('type.infer_t.infer_t',X304),s('type.infer_t.infer_t',X305))) != s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X303),'type.infer_t.infer_t'),'const.infer.read_1'(s('type.infer_t.infer_t','const.unify.t_walkstar_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X301),s('type.infer_t.infer_t',X302))))) | s('type.infer_t.infer_t',X305) = s('type.infer_t.infer_t',happ(s(fun('type.infer_t.infer_t','type.infer_t.infer_t'),happ(s(fun('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),fun('type.infer_t.infer_t','type.infer_t.infer_t')),'const.unify.t_walkstar_0'),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X301))),s('type.infer_t.infer_t',X302)))) )),
  inference(superposition,[],[f1740,f176])).
fof(f2832,plain,(
  ( ! [X37,X35,X33,X36,X34] : (s('type.pair.prod'('type.infer.exc'(bool,X35),bool),'const.infer.read_1'(s(bool,X34))) != s('type.pair.prod'('type.infer.exc'(bool,X35),bool),'const.infer.st_ex_return_2'(s(bool,X36),s(bool,X37))) | s(bool,X33) = s(bool,X37) | s(bool,'T_0') = s(bool,X33) | s(bool,'T_0') = s(bool,X34)) )),
  inference(superposition,[],[f1740,f272])).
fof(f2830,plain,(
  ( ! [X26,X24,X23,X27,X25] : (s('type.pair.prod'('type.infer.exc'(bool,X24),bool),'const.infer.read_1'(s(bool,'T_0'))) != s('type.pair.prod'('type.infer.exc'(bool,X24),bool),'const.infer.st_ex_return_2'(s(bool,X25),s(bool,X26))) | s(bool,X23) = s(bool,X26) | s(bool,X23) = s(bool,X27) | s(bool,'T_0') = s(bool,X27)) )),
  inference(superposition,[],[f1740,f272])).
fof(f2829,plain,(
  ( ! [X14,X21,X19,X17,X15,X22,X20,X18,X16] : (s('type.pair.prod'('type.infer.exc'(X14,X20),X14),'const.infer.st_ex_return_2'(s(X14,X21),s(X14,X22))) != s('type.pair.prod'('type.infer.exc'(X14,X20),X14),'const.infer.read_1'(s(X14,happ(s(fun(X16,X14),X17),s(X16,happ(s(fun(X15,X16),X18),s(X15,X19))))))) | s(X14,X22) = s(X14,happ(s(fun(X15,X14),'_dst_x0x1_2'(s(fun(X16,X14),X17),s(fun(X15,X16),X18))),s(X15,X19)))) )),
  inference(superposition,[],[f1740,f206])).
fof(f2828,plain,(
  ( ! [X6,X12,X10,X8,X7,X5,X13,X11,X9] : (s('type.pair.prod'('type.infer.exc'(X5,X11),X5),'const.infer.st_ex_return_2'(s(X5,X12),s(X5,X13))) != s('type.pair.prod'('type.infer.exc'(X5,X11),X5),'const.infer.read_1'(s(X5,happ(s(fun(X8,X5),'_dst_x0x1_2'(s(fun(X6,X5),X7),s(fun(X8,X6),X9))),s(X8,X10))))) | s(X5,X13) = s(X5,happ(s(fun(X6,X5),X7),s(X6,happ(s(fun(X8,X6),X9),s(X8,X10)))))) )),
  inference(superposition,[],[f1740,f206])).
fof(f2816,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),'type.pair.prod'('type.infer.exc'(X0,X1),X2)),'const.infer.read_1'(s('type.pair.prod'('type.infer.exc'(X0,X1),X2),'const.infer.failwith_2'(s(X1,X4),s(X2,X5))))) != s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),'type.pair.prod'('type.infer.exc'(X0,X1),X2)),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'(X0,X1),X2),X6),s('type.pair.prod'('type.infer.exc'(X0,X1),X2),'const.pair.,_2'(s('type.infer.exc'(X0,X1),'const.infer.Success_1'(s(X0,X7))),s(X2,X8)))))) )),
  inference(unit_resulting_resolution,[],[f253,f1740])).
fof(f2817,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X0),X2),'type.pair.prod'('type.infer.exc'(X0,X1),X0)),'const.infer.read_1'(s('type.pair.prod'('type.infer.exc'(X0,X1),X0),'const.infer.read_1'(s(X0,X3))))) != s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X0),X2),'type.pair.prod'('type.infer.exc'(X0,X1),X0)),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'(X0,X1),X0),X4),s('type.pair.prod'('type.infer.exc'(X0,X1),X0),'const.infer.failwith_2'(s(X1,X5),s(X0,X6)))))) )),
  inference(unit_resulting_resolution,[],[f706,f1740])).
fof(f2823,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),'type.pair.prod'('type.infer.exc'(X0,X1),X2)),'const.infer.read_1'(s('type.pair.prod'('type.infer.exc'(X0,X1),X2),'const.pair.,_2'(s('type.infer.exc'(X0,X1),'const.infer.Success_1'(s(X0,X4))),s(X2,X5))))) != s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),'type.pair.prod'('type.infer.exc'(X0,X1),X2)),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'(X0,X1),X2),X6),s('type.pair.prod'('type.infer.exc'(X0,X1),X2),'const.infer.failwith_2'(s(X1,X7),s(X2,X8)))))) )),
  inference(unit_resulting_resolution,[],[f253,f1740])).
fof(f2824,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X0),X2),'type.pair.prod'('type.infer.exc'(X0,X1),X0)),'const.infer.read_1'(s('type.pair.prod'('type.infer.exc'(X0,X1),X0),'const.infer.failwith_2'(s(X1,X3),s(X0,X4))))) != s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X0),X2),'type.pair.prod'('type.infer.exc'(X0,X1),X0)),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'(X0,X1),X0),X5),s('type.pair.prod'('type.infer.exc'(X0,X1),X0),'const.infer.read_1'(s(X0,X6)))))) )),
  inference(unit_resulting_resolution,[],[f706,f1740])).
fof(f2781,plain,(
  ( ! [X14,X21,X19,X17,X15,X22,X20,X18,X16] : (s('type.pair.prod'('type.infer.exc'('type.num.num',X20),'type.infer.infer_st'(X14)),'const.infer.get_next_uvar_1'(s('type.infer.infer_st'(X14),X21))) != s('type.pair.prod'('type.infer.exc'('type.num.num',X20),'type.infer.infer_st'(X14)),'const.pair.,_2'(s('type.infer.exc'('type.num.num',X20),'const.infer.Success_1'(s('type.num.num',X22))),s('type.infer.infer_st'(X14),happ(s(fun(X16,'type.infer.infer_st'(X14)),X17),s(X16,happ(s(fun(X15,X16),X18),s(X15,X19))))))) | s('type.infer.infer_st'(X14),X21) = s('type.infer.infer_st'(X14),happ(s(fun(X15,'type.infer.infer_st'(X14)),'_dst_x0x1_2'(s(fun(X16,'type.infer.infer_st'(X14)),X17),s(fun(X15,X16),X18))),s(X15,X19)))) )),
  inference(superposition,[],[f187,f206])).
fof(f2780,plain,(
  ( ! [X6,X12,X10,X8,X7,X5,X13,X11,X9] : (s('type.pair.prod'('type.infer.exc'('type.num.num',X11),'type.infer.infer_st'(X5)),'const.infer.get_next_uvar_1'(s('type.infer.infer_st'(X5),X12))) != s('type.pair.prod'('type.infer.exc'('type.num.num',X11),'type.infer.infer_st'(X5)),'const.pair.,_2'(s('type.infer.exc'('type.num.num',X11),'const.infer.Success_1'(s('type.num.num',X13))),s('type.infer.infer_st'(X5),happ(s(fun(X8,'type.infer.infer_st'(X5)),'_dst_x0x1_2'(s(fun(X6,'type.infer.infer_st'(X5)),X7),s(fun(X8,X6),X9))),s(X8,X10))))) | s('type.infer.infer_st'(X5),X12) = s('type.infer.infer_st'(X5),happ(s(fun(X6,'type.infer.infer_st'(X5)),X7),s(X6,happ(s(fun(X8,X6),X9),s(X8,X10)))))) )),
  inference(superposition,[],[f187,f206])).
fof(f2779,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.num.num',X2),'type.infer.infer_st'(X0)),'const.infer.get_next_uvar_1'(s('type.infer.infer_st'(X0),X3))) != s('type.pair.prod'('type.infer.exc'('type.num.num',X2),'type.infer.infer_st'(X0)),'const.pair.,_2'(s('type.infer.exc'('type.num.num',X2),'const.infer.Success_1'(s('type.num.num',X4))),s('type.infer.infer_st'(X0),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.infer.infer_st'(X0)),X1))))) | s('type.infer.infer_st'(X0),X3) = s('type.infer.infer_st'(X0),happ(s(fun('type.infer.infer_st'('type.infer.infer_st'(X0)),'type.infer.infer_st'(X0)),'const.infer.infer_st_subst_0'),s('type.infer.infer_st'('type.infer.infer_st'(X0)),X1)))) )),
  inference(superposition,[],[f187,f168])).
fof(f2772,plain,(
  ( ! [X14,X21,X19,X17,X15,X22,X20,X18,X16] : (s('type.pair.prod'('type.infer.exc'('type.num.num',X20),'type.infer.infer_st'(X14)),'const.pair.,_2'(s('type.infer.exc'('type.num.num',X20),'const.infer.Success_1'(s('type.num.num',X21))),s('type.infer.infer_st'(X14),X22))) != s('type.pair.prod'('type.infer.exc'('type.num.num',X20),'type.infer.infer_st'(X14)),'const.infer.get_next_uvar_1'(s('type.infer.infer_st'(X14),happ(s(fun(X16,'type.infer.infer_st'(X14)),X17),s(X16,happ(s(fun(X15,X16),X18),s(X15,X19))))))) | s('type.infer.infer_st'(X14),X22) = s('type.infer.infer_st'(X14),happ(s(fun(X15,'type.infer.infer_st'(X14)),'_dst_x0x1_2'(s(fun(X16,'type.infer.infer_st'(X14)),X17),s(fun(X15,X16),X18))),s(X15,X19)))) )),
  inference(superposition,[],[f187,f206])).
fof(f2771,plain,(
  ( ! [X6,X12,X10,X8,X7,X5,X13,X11,X9] : (s('type.pair.prod'('type.infer.exc'('type.num.num',X11),'type.infer.infer_st'(X5)),'const.pair.,_2'(s('type.infer.exc'('type.num.num',X11),'const.infer.Success_1'(s('type.num.num',X12))),s('type.infer.infer_st'(X5),X13))) != s('type.pair.prod'('type.infer.exc'('type.num.num',X11),'type.infer.infer_st'(X5)),'const.infer.get_next_uvar_1'(s('type.infer.infer_st'(X5),happ(s(fun(X8,'type.infer.infer_st'(X5)),'_dst_x0x1_2'(s(fun(X6,'type.infer.infer_st'(X5)),X7),s(fun(X8,X6),X9))),s(X8,X10))))) | s('type.infer.infer_st'(X5),X13) = s('type.infer.infer_st'(X5),happ(s(fun(X6,'type.infer.infer_st'(X5)),X7),s(X6,happ(s(fun(X8,X6),X9),s(X8,X10)))))) )),
  inference(superposition,[],[f187,f206])).
fof(f2770,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.num.num',X2),'type.infer.infer_st'(X0)),'const.infer.get_next_uvar_1'(s('type.infer.infer_st'(X0),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.infer.infer_st'(X0)),X1))))) != s('type.pair.prod'('type.infer.exc'('type.num.num',X2),'type.infer.infer_st'(X0)),'const.pair.,_2'(s('type.infer.exc'('type.num.num',X2),'const.infer.Success_1'(s('type.num.num',X3))),s('type.infer.infer_st'(X0),X4))) | s('type.infer.infer_st'(X0),X4) = s('type.infer.infer_st'(X0),happ(s(fun('type.infer.infer_st'('type.infer.infer_st'(X0)),'type.infer.infer_st'(X0)),'const.infer.infer_st_subst_0'),s('type.infer.infer_st'('type.infer.infer_st'(X0)),X1)))) )),
  inference(superposition,[],[f187,f168])).
fof(f2659,plain,(
  ( ! [X313,X308,X310,X312,X309,X311] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X308,X309),X308),X311),'type.pair.prod'('type.infer.exc'(X308,X309),X308)),'const.infer.read_1'(s('type.pair.prod'('type.infer.exc'(X308,X309),X308),X312))) != s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X308,X309),X308),X311),'type.pair.prod'('type.infer.exc'(X308,X309),X308)),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'(X308,X309),X308),'const.infer.read_1'(s(X308,X310))),s('type.pair.prod'('type.infer.exc'(X308,X309),X308),X313))) | s('type.pair.prod'('type.infer.exc'(X308,X309),X308),X312) = s('type.pair.prod'('type.infer.exc'(X308,X309),X308),'const.pair.,_2'(s('type.infer.exc'(X308,X309),'const.infer.Success_1'(s(X308,X310))),s(X308,X310)))) )),
  inference(superposition,[],[f1426,f177])).
fof(f2658,plain,(
  ( ! [X304,X306,X303,X305,X307] : (s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X305),'type.infer_t.infer_t'),'const.infer.read_1'(s('type.infer_t.infer_t',X306))) != s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X305),'type.infer_t.infer_t'),'const.infer.st_ex_return_2'(s('type.infer_t.infer_t','const.unify.t_walkstar_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X303),s('type.infer_t.infer_t',X304))),s('type.infer_t.infer_t',X307))) | s('type.infer_t.infer_t',X306) = s('type.infer_t.infer_t',happ(s(fun('type.infer_t.infer_t','type.infer_t.infer_t'),happ(s(fun('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),fun('type.infer_t.infer_t','type.infer_t.infer_t')),'const.unify.t_walkstar_0'),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X303))),s('type.infer_t.infer_t',X304)))) )),
  inference(superposition,[],[f1426,f176])).
fof(f2614,plain,(
  ( ! [X37,X35,X33,X36,X34] : (s('type.pair.prod'('type.infer.exc'(bool,X35),bool),'const.infer.read_1'(s(bool,X36))) != s('type.pair.prod'('type.infer.exc'(bool,X35),bool),'const.infer.st_ex_return_2'(s(bool,X34),s(bool,X37))) | s(bool,X33) = s(bool,X36) | s(bool,'T_0') = s(bool,X33) | s(bool,'T_0') = s(bool,X34)) )),
  inference(superposition,[],[f1426,f272])).
fof(f2612,plain,(
  ( ! [X26,X24,X23,X27,X25] : (s('type.pair.prod'('type.infer.exc'(bool,X24),bool),'const.infer.read_1'(s(bool,X25))) != s('type.pair.prod'('type.infer.exc'(bool,X24),bool),'const.infer.st_ex_return_2'(s(bool,'T_0'),s(bool,X26))) | s(bool,X23) = s(bool,X25) | s(bool,X23) = s(bool,X27) | s(bool,'T_0') = s(bool,X27)) )),
  inference(superposition,[],[f1426,f272])).
fof(f2611,plain,(
  ( ! [X14,X21,X19,X17,X15,X22,X20,X18,X16] : (s('type.pair.prod'('type.infer.exc'(X14,X20),X14),'const.infer.read_1'(s(X14,X21))) != s('type.pair.prod'('type.infer.exc'(X14,X20),X14),'const.infer.st_ex_return_2'(s(X14,happ(s(fun(X16,X14),X17),s(X16,happ(s(fun(X15,X16),X18),s(X15,X19))))),s(X14,X22))) | s(X14,X21) = s(X14,happ(s(fun(X15,X14),'_dst_x0x1_2'(s(fun(X16,X14),X17),s(fun(X15,X16),X18))),s(X15,X19)))) )),
  inference(superposition,[],[f1426,f206])).
fof(f2610,plain,(
  ( ! [X6,X12,X10,X8,X7,X5,X13,X11,X9] : (s('type.pair.prod'('type.infer.exc'(X5,X11),X5),'const.infer.read_1'(s(X5,X12))) != s('type.pair.prod'('type.infer.exc'(X5,X11),X5),'const.infer.st_ex_return_2'(s(X5,happ(s(fun(X8,X5),'_dst_x0x1_2'(s(fun(X6,X5),X7),s(fun(X8,X6),X9))),s(X8,X10))),s(X5,X13))) | s(X5,X12) = s(X5,happ(s(fun(X6,X5),X7),s(X6,happ(s(fun(X8,X6),X9),s(X8,X10)))))) )),
  inference(superposition,[],[f1426,f206])).
fof(f2604,plain,(
  ( ! [X308,X310,X306,X309,X311,X307] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X306,X307),X306),X309),'type.pair.prod'('type.infer.exc'(X306,X307),X306)),'const.infer.read_1'(s('type.pair.prod'('type.infer.exc'(X306,X307),X306),'const.infer.read_1'(s(X306,X308))))) != s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X306,X307),X306),X309),'type.pair.prod'('type.infer.exc'(X306,X307),X306)),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'(X306,X307),X306),X310),s('type.pair.prod'('type.infer.exc'(X306,X307),X306),X311))) | s('type.pair.prod'('type.infer.exc'(X306,X307),X306),X310) = s('type.pair.prod'('type.infer.exc'(X306,X307),X306),'const.pair.,_2'(s('type.infer.exc'(X306,X307),'const.infer.Success_1'(s(X306,X308))),s(X306,X308)))) )),
  inference(superposition,[],[f1426,f177])).
fof(f2603,plain,(
  ( ! [X302,X304,X301,X303,X305] : (s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X303),'type.infer_t.infer_t'),'const.infer.st_ex_return_2'(s('type.infer_t.infer_t',X304),s('type.infer_t.infer_t',X305))) != s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X303),'type.infer_t.infer_t'),'const.infer.read_1'(s('type.infer_t.infer_t','const.unify.t_walkstar_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X301),s('type.infer_t.infer_t',X302))))) | s('type.infer_t.infer_t',X304) = s('type.infer_t.infer_t',happ(s(fun('type.infer_t.infer_t','type.infer_t.infer_t'),happ(s(fun('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),fun('type.infer_t.infer_t','type.infer_t.infer_t')),'const.unify.t_walkstar_0'),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X301))),s('type.infer_t.infer_t',X302)))) )),
  inference(superposition,[],[f1426,f176])).
fof(f2563,plain,(
  ( ! [X37,X35,X33,X36,X34] : (s('type.pair.prod'('type.infer.exc'(bool,X35),bool),'const.infer.read_1'(s(bool,X34))) != s('type.pair.prod'('type.infer.exc'(bool,X35),bool),'const.infer.st_ex_return_2'(s(bool,X36),s(bool,X37))) | s(bool,X33) = s(bool,X36) | s(bool,'T_0') = s(bool,X33) | s(bool,'T_0') = s(bool,X34)) )),
  inference(superposition,[],[f1426,f272])).
fof(f2561,plain,(
  ( ! [X26,X24,X23,X27,X25] : (s('type.pair.prod'('type.infer.exc'(bool,X24),bool),'const.infer.read_1'(s(bool,'T_0'))) != s('type.pair.prod'('type.infer.exc'(bool,X24),bool),'const.infer.st_ex_return_2'(s(bool,X25),s(bool,X26))) | s(bool,X23) = s(bool,X25) | s(bool,X23) = s(bool,X27) | s(bool,'T_0') = s(bool,X27)) )),
  inference(superposition,[],[f1426,f272])).
fof(f2560,plain,(
  ( ! [X14,X21,X19,X17,X15,X22,X20,X18,X16] : (s('type.pair.prod'('type.infer.exc'(X14,X20),X14),'const.infer.st_ex_return_2'(s(X14,X21),s(X14,X22))) != s('type.pair.prod'('type.infer.exc'(X14,X20),X14),'const.infer.read_1'(s(X14,happ(s(fun(X16,X14),X17),s(X16,happ(s(fun(X15,X16),X18),s(X15,X19))))))) | s(X14,X21) = s(X14,happ(s(fun(X15,X14),'_dst_x0x1_2'(s(fun(X16,X14),X17),s(fun(X15,X16),X18))),s(X15,X19)))) )),
  inference(superposition,[],[f1426,f206])).
fof(f2559,plain,(
  ( ! [X6,X12,X10,X8,X7,X5,X13,X11,X9] : (s('type.pair.prod'('type.infer.exc'(X5,X11),X5),'const.infer.st_ex_return_2'(s(X5,X12),s(X5,X13))) != s('type.pair.prod'('type.infer.exc'(X5,X11),X5),'const.infer.read_1'(s(X5,happ(s(fun(X8,X5),'_dst_x0x1_2'(s(fun(X6,X5),X7),s(fun(X8,X6),X9))),s(X8,X10))))) | s(X5,X12) = s(X5,happ(s(fun(X6,X5),X7),s(X6,happ(s(fun(X8,X6),X9),s(X8,X10)))))) )),
  inference(superposition,[],[f1426,f206])).
fof(f2551,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),'type.pair.prod'('type.infer.exc'(X0,X1),X2)),'const.infer.read_1'(s('type.pair.prod'('type.infer.exc'(X0,X1),X2),'const.infer.failwith_2'(s(X1,X4),s(X2,X5))))) != s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),'type.pair.prod'('type.infer.exc'(X0,X1),X2)),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'(X0,X1),X2),'const.pair.,_2'(s('type.infer.exc'(X0,X1),'const.infer.Success_1'(s(X0,X6))),s(X2,X7))),s('type.pair.prod'('type.infer.exc'(X0,X1),X2),X8)))) )),
  inference(unit_resulting_resolution,[],[f253,f1426])).
fof(f2552,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X0),X2),'type.pair.prod'('type.infer.exc'(X0,X1),X0)),'const.infer.read_1'(s('type.pair.prod'('type.infer.exc'(X0,X1),X0),'const.infer.read_1'(s(X0,X3))))) != s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X0),X2),'type.pair.prod'('type.infer.exc'(X0,X1),X0)),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'(X0,X1),X0),'const.infer.failwith_2'(s(X1,X4),s(X0,X5))),s('type.pair.prod'('type.infer.exc'(X0,X1),X0),X6)))) )),
  inference(unit_resulting_resolution,[],[f706,f1426])).
fof(f2556,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),'type.pair.prod'('type.infer.exc'(X0,X1),X2)),'const.infer.read_1'(s('type.pair.prod'('type.infer.exc'(X0,X1),X2),'const.pair.,_2'(s('type.infer.exc'(X0,X1),'const.infer.Success_1'(s(X0,X4))),s(X2,X5))))) != s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),'type.pair.prod'('type.infer.exc'(X0,X1),X2)),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'(X0,X1),X2),'const.infer.failwith_2'(s(X1,X6),s(X2,X7))),s('type.pair.prod'('type.infer.exc'(X0,X1),X2),X8)))) )),
  inference(unit_resulting_resolution,[],[f253,f1426])).
fof(f2557,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X0),X2),'type.pair.prod'('type.infer.exc'(X0,X1),X0)),'const.infer.read_1'(s('type.pair.prod'('type.infer.exc'(X0,X1),X0),'const.infer.failwith_2'(s(X1,X3),s(X0,X4))))) != s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X0),X2),'type.pair.prod'('type.infer.exc'(X0,X1),X0)),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'(X0,X1),X0),'const.infer.read_1'(s(X0,X5))),s('type.pair.prod'('type.infer.exc'(X0,X1),X0),X6)))) )),
  inference(unit_resulting_resolution,[],[f706,f1426])).
fof(f2527,plain,(
  ( ! [X127,X125,X123,X121,X130,X128,X126,X124,X122,X129] : (s('type.pair.prod'('type.infer.exc'(X126,X127),'type.pair.prod'('type.infer.exc'('type.one.one',X121),X122)),'const.infer.st_ex_return_2'(s(X126,X128),s('type.pair.prod'('type.infer.exc'('type.one.one',X121),X122),X129))) != s('type.pair.prod'('type.infer.exc'(X126,X127),'type.pair.prod'('type.infer.exc'('type.one.one',X121),X122)),'const.pair.,_2'(s('type.infer.exc'(X126,X127),'const.infer.Success_1'(s(X126,X130))),s('type.pair.prod'('type.infer.exc'('type.one.one',X121),X122),'const.infer.guard_3'(s(bool,X123),s(X121,X124),s(X122,X125))))) | s('type.pair.prod'('type.infer.exc'('type.one.one',X121),X122),X129) = s('type.pair.prod'('type.infer.exc'('type.one.one',X121),X122),happ(s(fun(X122,'type.pair.prod'('type.infer.exc'('type.one.one',X121),X122)),'const.infer.guard_2'(s(bool,X123),s(X121,X124))),s(X122,X125)))) )),
  inference(superposition,[],[f211,f183])).
fof(f2526,plain,(
  ( ! [X111,X118,X116,X114,X112,X120,X119,X117,X115,X113] : (s('type.pair.prod'('type.infer.exc'(X116,X117),'type.pair.prod'('type.infer.exc'('type.one.one',X111),X112)),'const.pair.,_2'(s('type.infer.exc'(X116,X117),'const.infer.Success_1'(s(X116,X119))),s('type.pair.prod'('type.infer.exc'('type.one.one',X111),X112),X120))) != s('type.pair.prod'('type.infer.exc'(X116,X117),'type.pair.prod'('type.infer.exc'('type.one.one',X111),X112)),'const.infer.st_ex_return_2'(s(X116,X118),s('type.pair.prod'('type.infer.exc'('type.one.one',X111),X112),'const.infer.guard_3'(s(bool,X113),s(X111,X114),s(X112,X115))))) | s('type.pair.prod'('type.infer.exc'('type.one.one',X111),X112),X120) = s('type.pair.prod'('type.infer.exc'('type.one.one',X111),X112),happ(s(fun(X112,'type.pair.prod'('type.infer.exc'('type.one.one',X111),X112)),'const.infer.guard_2'(s(bool,X113),s(X111,X114))),s(X112,X115)))) )),
  inference(superposition,[],[f211,f183])).
fof(f2521,plain,(
  ( ! [X61,X70,X68,X66,X64,X62,X69,X67,X65,X63] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one',X61),X62),X66),X67),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one',X61),X62),X66),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.one.one',X61),X62),X69))),s(X67,X70))) != s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.one.one',X61),X62),X66),X67),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.one.one',X61),X62),'const.infer.guard_3'(s(bool,X63),s(X61,X64),s(X62,X65))),s(X67,X68))) | s('type.pair.prod'('type.infer.exc'('type.one.one',X61),X62),X69) = s('type.pair.prod'('type.infer.exc'('type.one.one',X61),X62),happ(s(fun(X62,'type.pair.prod'('type.infer.exc'('type.one.one',X61),X62)),'const.infer.guard_2'(s(bool,X63),s(X61,X64))),s(X62,X65)))) )),
  inference(superposition,[],[f210,f183])).
fof(f2514,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s(X5,happ(s(fun('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),X5),X6),s('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),'const.infer.guard_3'(s(bool,X2),s(X0,X3),s(X1,X4))))) = s(X5,happ(s(fun(X1,X5),'_dst_x0x1_2'(s(fun('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),X5),X6),s(fun(X1,'type.pair.prod'('type.infer.exc'('type.one.one',X0),X1)),'const.infer.guard_2'(s(bool,X2),s(X0,X3))))),s(X1,X4)))) )),
  inference(superposition,[],[f206,f183])).
fof(f2226,plain,(
  ( ! [X494,X496,X493,X495,X497] : (s(bool,'T_0') = s(bool,happ(s(fun('type.infer.infer_st'(bool),bool),'const.infer.infer_st_subst_0'),s('type.infer.infer_st'(bool),happ(s(fun(X494,'type.infer.infer_st'(bool)),X495),s(X494,happ(s(fun(X493,X494),X496),s(X493,X497))))))) | s(bool,'F_0') = s(bool,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(bool),happ(s(fun(X493,'type.infer.infer_st'(bool)),'_dst_x0x1_2'(s(fun(X494,'type.infer.infer_st'(bool)),X495),s(fun(X493,X494),X496))),s(X493,X497)))))) )),
  inference(superposition,[],[f293,f206])).
fof(f2185,plain,(
  ( ! [X198,X196,X206,X204,X202,X200,X199,X197,X205,X203,X201] : (p(s(bool,happ(s(fun(X197,bool),X198),s(X197,happ(s(fun(X196,X197),X199),s(X196,X200)))))) | s('type.pair.prod'('type.infer.exc'('type.one.one',X201),X202),'const.pair.,_2'(s('type.infer.exc'('type.one.one',X201),'const.infer.Success_1'(s('type.one.one',X205))),s(X202,X206))) != s('type.pair.prod'('type.infer.exc'('type.one.one',X201),X202),'const.infer.guard_3'(s(bool,happ(s(fun(X196,bool),'_dst_x0x1_2'(s(fun(X197,bool),X198),s(fun(X196,X197),X199))),s(X196,X200))),s(X201,X203),s(X202,X204)))) )),
  inference(superposition,[],[f195,f206])).
fof(f2176,plain,(
  ( ! [X111,X109,X118,X116,X114,X112,X110,X119,X117,X115,X113] : (s('type.pair.prod'('type.infer.exc'(X115,X116),X109),'const.infer.st_ex_return_2'(s(X115,X117),s(X109,X118))) != s('type.pair.prod'('type.infer.exc'(X115,X116),X109),'const.pair.,_2'(s('type.infer.exc'(X115,X116),'const.infer.Success_1'(s(X115,X119))),s(X109,happ(s(fun(X111,X109),X112),s(X111,happ(s(fun(X110,X111),X113),s(X110,X114))))))) | s(X109,X118) = s(X109,happ(s(fun(X110,X109),'_dst_x0x1_2'(s(fun(X111,X109),X112),s(fun(X110,X111),X113))),s(X110,X114)))) )),
  inference(superposition,[],[f211,f206])).
fof(f2175,plain,(
  ( ! [X103,X101,X99,X107,X105,X102,X100,X98,X108,X106,X104] : (s('type.pair.prod'('type.infer.exc'(X104,X105),X98),'const.pair.,_2'(s('type.infer.exc'(X104,X105),'const.infer.Success_1'(s(X104,X107))),s(X98,X108))) != s('type.pair.prod'('type.infer.exc'(X104,X105),X98),'const.infer.st_ex_return_2'(s(X104,X106),s(X98,happ(s(fun(X100,X98),X101),s(X100,happ(s(fun(X99,X100),X102),s(X99,X103))))))) | s(X98,X108) = s(X98,happ(s(fun(X99,X98),'_dst_x0x1_2'(s(fun(X100,X98),X101),s(fun(X99,X100),X102))),s(X99,X103)))) )),
  inference(superposition,[],[f211,f206])).
fof(f2170,plain,(
  ( ! [X47,X45,X43,X52,X50,X48,X46,X44,X53,X51,X49] : (s('type.pair.prod'('type.infer.exc'(X43,X49),X50),'const.pair.,_2'(s('type.infer.exc'(X43,X49),'const.infer.Success_1'(s(X43,X52))),s(X50,X53))) != s('type.pair.prod'('type.infer.exc'(X43,X49),X50),'const.infer.st_ex_return_2'(s(X43,happ(s(fun(X45,X43),X46),s(X45,happ(s(fun(X44,X45),X47),s(X44,X48))))),s(X50,X51))) | s(X43,X52) = s(X43,happ(s(fun(X44,X43),'_dst_x0x1_2'(s(fun(X45,X43),X46),s(fun(X44,X45),X47))),s(X44,X48)))) )),
  inference(superposition,[],[f210,f206])).
fof(f2169,plain,(
  ( ! [X39,X37,X35,X33,X41,X38,X36,X34,X32,X42,X40] : (s('type.pair.prod'('type.infer.exc'(X32,X38),X39),'const.infer.st_ex_return_2'(s(X32,X40),s(X39,X41))) != s('type.pair.prod'('type.infer.exc'(X32,X38),X39),'const.pair.,_2'(s('type.infer.exc'(X32,X38),'const.infer.Success_1'(s(X32,happ(s(fun(X34,X32),X35),s(X34,happ(s(fun(X33,X34),X36),s(X33,X37))))))),s(X39,X42))) | s(X32,X40) = s(X32,happ(s(fun(X33,X32),'_dst_x0x1_2'(s(fun(X34,X32),X35),s(fun(X33,X34),X36))),s(X33,X37)))) )),
  inference(superposition,[],[f210,f206])).
fof(f2162,plain,(
  ( ! [X516,X518,X514,X517,X515] : (s(bool,'T_0') = s(bool,happ(s(fun('type.infer.infer_st'(bool),bool),'const.infer.infer_st_subst_0'),s('type.infer.infer_st'(bool),happ(s(fun(X516,'type.infer.infer_st'(bool)),'_dst_x0x1_2'(s(fun(X514,'type.infer.infer_st'(bool)),X515),s(fun(X516,X514),X517))),s(X516,X518))))) | s(bool,'F_0') = s(bool,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(bool),happ(s(fun(X514,'type.infer.infer_st'(bool)),X515),s(X514,happ(s(fun(X516,X514),X517),s(X516,X518)))))))) )),
  inference(superposition,[],[f293,f206])).
fof(f2121,plain,(
  ( ! [X212,X210,X208,X206,X204,X213,X211,X209,X207,X205,X203] : (p(s(bool,happ(s(fun(X205,bool),'_dst_x0x1_2'(s(fun(X203,bool),X204),s(fun(X205,X203),X206))),s(X205,X207)))) | s('type.pair.prod'('type.infer.exc'('type.one.one',X208),X209),'const.pair.,_2'(s('type.infer.exc'('type.one.one',X208),'const.infer.Success_1'(s('type.one.one',X212))),s(X209,X213))) != s('type.pair.prod'('type.infer.exc'('type.one.one',X208),X209),'const.infer.guard_3'(s(bool,happ(s(fun(X203,bool),X204),s(X203,happ(s(fun(X205,X203),X206),s(X205,X207))))),s(X208,X210),s(X209,X211)))) )),
  inference(superposition,[],[f195,f206])).
fof(f2112,plain,(
  ( ! [X123,X121,X118,X116,X114,X122,X120,X119,X117,X115,X113] : (s('type.pair.prod'('type.infer.exc'(X119,X120),X113),'const.infer.st_ex_return_2'(s(X119,X121),s(X113,X122))) != s('type.pair.prod'('type.infer.exc'(X119,X120),X113),'const.pair.,_2'(s('type.infer.exc'(X119,X120),'const.infer.Success_1'(s(X119,X123))),s(X113,happ(s(fun(X116,X113),'_dst_x0x1_2'(s(fun(X114,X113),X115),s(fun(X116,X114),X117))),s(X116,X118))))) | s(X113,X122) = s(X113,happ(s(fun(X114,X113),X115),s(X114,happ(s(fun(X116,X114),X117),s(X116,X118)))))) )),
  inference(superposition,[],[f211,f206])).
fof(f2111,plain,(
  ( ! [X103,X111,X109,X107,X105,X112,X102,X110,X108,X106,X104] : (s('type.pair.prod'('type.infer.exc'(X108,X109),X102),'const.pair.,_2'(s('type.infer.exc'(X108,X109),'const.infer.Success_1'(s(X108,X111))),s(X102,X112))) != s('type.pair.prod'('type.infer.exc'(X108,X109),X102),'const.infer.st_ex_return_2'(s(X108,X110),s(X102,happ(s(fun(X105,X102),'_dst_x0x1_2'(s(fun(X103,X102),X104),s(fun(X105,X103),X106))),s(X105,X107))))) | s(X102,X112) = s(X102,happ(s(fun(X103,X102),X104),s(X103,happ(s(fun(X105,X103),X106),s(X105,X107)))))) )),
  inference(superposition,[],[f211,f206])).
fof(f2106,plain,(
  ( ! [X57,X47,X54,X52,X50,X48,X56,X55,X53,X51,X49] : (s('type.pair.prod'('type.infer.exc'(X47,X53),X54),'const.pair.,_2'(s('type.infer.exc'(X47,X53),'const.infer.Success_1'(s(X47,X56))),s(X54,X57))) != s('type.pair.prod'('type.infer.exc'(X47,X53),X54),'const.infer.st_ex_return_2'(s(X47,happ(s(fun(X50,X47),'_dst_x0x1_2'(s(fun(X48,X47),X49),s(fun(X50,X48),X51))),s(X50,X52))),s(X54,X55))) | s(X47,X56) = s(X47,happ(s(fun(X48,X47),X49),s(X48,happ(s(fun(X50,X48),X51),s(X50,X52)))))) )),
  inference(superposition,[],[f210,f206])).
fof(f2105,plain,(
  ( ! [X39,X37,X45,X43,X41,X38,X36,X46,X44,X42,X40] : (s('type.pair.prod'('type.infer.exc'(X36,X42),X43),'const.infer.st_ex_return_2'(s(X36,X44),s(X43,X45))) != s('type.pair.prod'('type.infer.exc'(X36,X42),X43),'const.pair.,_2'(s('type.infer.exc'(X36,X42),'const.infer.Success_1'(s(X36,happ(s(fun(X39,X36),'_dst_x0x1_2'(s(fun(X37,X36),X38),s(fun(X39,X37),X40))),s(X39,X41))))),s(X43,X46))) | s(X36,X44) = s(X36,happ(s(fun(X37,X36),X38),s(X37,happ(s(fun(X39,X37),X40),s(X39,X41)))))) )),
  inference(superposition,[],[f210,f206])).
fof(f1910,plain,(
  ( ! [X37,X35,X33,X38,X36,X34] : (s(bool,X38) = s(bool,happ(s(fun(X35,bool),'_dst_x0x1_2'(s(fun(X33,bool),X34),s(fun(X35,X33),X36))),s(X35,X37))) | s(bool,'T_0') = s(bool,happ(s(fun(X33,bool),X34),s(X33,happ(s(fun(X35,X33),X36),s(X35,X37))))) | s(bool,'T_0') = s(bool,X38)) )),
  inference(superposition,[],[f206,f272])).
fof(f1908,plain,(
  ( ! [X26,X24,X23,X21,X25,X22] : (s(bool,'T_0') = s(bool,happ(s(fun(X23,bool),'_dst_x0x1_2'(s(fun(X21,bool),X22),s(fun(X23,X21),X24))),s(X23,X25))) | s(bool,X26) = s(bool,happ(s(fun(X21,bool),X22),s(X21,happ(s(fun(X23,X21),X24),s(X23,X25))))) | s(bool,'T_0') = s(bool,X26)) )),
  inference(superposition,[],[f206,f272])).
fof(f1907,plain,(
  ( ! [X14,X12,X10,X17,X15,X13,X11,X16] : (s(X10,happ(s(fun(X12,X10),X13),s(X12,happ(s(fun(X11,X12),X14),s(X11,happ(s(fun(X15,X11),X16),s(X15,X17))))))) = s(X10,happ(s(fun(X15,X10),'_dst_x0x1_2'(s(fun(X11,X10),'_dst_x0x1_2'(s(fun(X12,X10),X13),s(fun(X11,X12),X14))),s(fun(X15,X11),X16))),s(X15,X17)))) )),
  inference(superposition,[],[f206,f206])).
fof(f1906,plain,(
  ( ! [X282,X285,X283,X284,X286] : (s(X285,happ(s(fun('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X282),'type.infer.infer_st'(X283)),X285),X286),s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X282),'type.infer.infer_st'(X283)),'const.infer.fresh_uvar_1'(s('type.infer.infer_st'(X283),X284))))) = s(X285,happ(s(fun('type.infer.infer_st'(X283),X285),'_dst_x0x1_2'(s(fun('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X282),'type.infer.infer_st'(X283)),X285),X286),s(fun('type.infer.infer_st'(X283),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X282),'type.infer.infer_st'(X283))),'const.infer.fresh_uvar_0'))),s('type.infer.infer_st'(X283),X284)))) )),
  inference(superposition,[],[f206,f179])).
fof(f1905,plain,(
  ( ! [X280,X277,X279,X275,X281,X276,X278] : (s(X280,happ(s(fun('type.pair.prod'('type.infer.exc'(X275,X276),X277),X280),X281),s('type.pair.prod'('type.infer.exc'(X275,X276),X277),'const.infer.failwith_2'(s(X276,X278),s(X277,X279))))) = s(X280,happ(s(fun(X277,X280),'_dst_x0x1_2'(s(fun('type.pair.prod'('type.infer.exc'(X275,X276),X277),X280),X281),s(fun(X277,'type.pair.prod'('type.infer.exc'(X275,X276),X277)),'const.infer.failwith_1'(s(X276,X278))))),s(X277,X279)))) )),
  inference(superposition,[],[f206,f204])).
fof(f1904,plain,(
  ( ! [X271,X273,X270,X272,X274] : (s(X273,happ(s(fun('type.pair.prod'('type.infer.exc'(X270,X271),X270),X273),X274),s('type.pair.prod'('type.infer.exc'(X270,X271),X270),'const.infer.read_1'(s(X270,X272))))) = s(X273,happ(s(fun(X270,X273),'_dst_x0x1_2'(s(fun('type.pair.prod'('type.infer.exc'(X270,X271),X270),X273),X274),s(fun(X270,'type.pair.prod'('type.infer.exc'(X270,X271),X270)),'const.infer.read_0'))),s(X270,X272)))) )),
  inference(superposition,[],[f206,f178])).
fof(f1896,plain,(
  ( ! [X167,X175,X173,X171,X169,X176,X166,X174,X172,X170,X168] : (s(X175,happ(s(fun(fun(X166,fun(X167,fun(X168,fun(X169,fun(X170,'type.one.one'))))),X175),X176),s(fun(X166,fun(X167,fun(X168,fun(X169,fun(X170,'type.one.one'))))),X174))) = s(X175,happ(s(fun(X171,X175),'_dst_x0x1_2'(s(fun(fun(X166,fun(X167,fun(X168,fun(X169,fun(X170,'type.one.one'))))),X175),X176),s(fun(X171,fun(X166,fun(X167,fun(X168,fun(X169,fun(X170,'type.one.one')))))),X172))),s(X171,X173)))) )),
  inference(superposition,[],[f206,f815])).
fof(f1894,plain,(
  ( ! [X146,X154,X152,X151,X149,X147,X155,X153,X150,X148] : (s(X154,happ(s(fun(fun(X146,fun(X147,fun(X148,fun(X149,'type.one.one')))),X154),X155),s(fun(X146,fun(X147,fun(X148,fun(X149,'type.one.one')))),X153))) = s(X154,happ(s(fun(X150,X154),'_dst_x0x1_2'(s(fun(fun(X146,fun(X147,fun(X148,fun(X149,'type.one.one')))),X154),X155),s(fun(X150,fun(X146,fun(X147,fun(X148,fun(X149,'type.one.one'))))),X151))),s(X150,X152)))) )),
  inference(superposition,[],[f206,f787])).
fof(f1890,plain,(
  ( ! [X111,X118,X116,X114,X112,X110,X117,X115,X113] : (s(X117,happ(s(fun(fun(X110,fun(X111,fun(X112,'type.one.one'))),X117),X118),s(fun(X110,fun(X111,fun(X112,'type.one.one'))),X116))) = s(X117,happ(s(fun(X113,X117),'_dst_x0x1_2'(s(fun(fun(X110,fun(X111,fun(X112,'type.one.one'))),X117),X118),s(fun(X113,fun(X110,fun(X111,fun(X112,'type.one.one')))),X114))),s(X113,X115)))) )),
  inference(superposition,[],[f206,f752])).
fof(f1886,plain,(
  ( ! [X80,X78,X85,X83,X81,X79,X84,X82] : (s(X84,happ(s(fun(fun(X78,fun(X79,'type.one.one')),X84),X85),s(fun(X78,fun(X79,'type.one.one')),X83))) = s(X84,happ(s(fun(X80,X84),'_dst_x0x1_2'(s(fun(fun(X78,fun(X79,'type.one.one')),X84),X85),s(fun(X80,fun(X78,fun(X79,'type.one.one'))),X81))),s(X80,X82)))) )),
  inference(superposition,[],[f206,f724])).
fof(f1882,plain,(
  ( ! [X54,X52,X50,X56,X55,X53,X51] : (s(X55,happ(s(fun(fun(X50,'type.one.one'),X55),X56),s(fun(X50,'type.one.one'),X54))) = s(X55,happ(s(fun(X51,X55),'_dst_x0x1_2'(s(fun(fun(X50,'type.one.one'),X55),X56),s(fun(X51,fun(X50,'type.one.one')),X52))),s(X51,X53)))) )),
  inference(superposition,[],[f206,f605])).
fof(f1881,plain,(
  ( ! [X14,X12,X19,X17,X15,X13,X18,X16] : (s(X18,happ(s(fun(X12,X18),X19),s(X12,happ(s(fun(X14,X12),X15),s(X14,happ(s(fun(X13,X14),X16),s(X13,X17))))))) = s(X18,happ(s(fun(X13,X18),'_dst_x0x1_2'(s(fun(X12,X18),X19),s(fun(X13,X12),'_dst_x0x1_2'(s(fun(X14,X12),X15),s(fun(X13,X14),X16))))),s(X13,X17)))) )),
  inference(superposition,[],[f206,f206])).
fof(f1880,plain,(
  ( ! [X6,X4,X10,X8,X7,X5,X11,X9] : (s(X10,happ(s(fun(X4,X10),X11),s(X4,happ(s(fun(X7,X4),'_dst_x0x1_2'(s(fun(X5,X4),X6),s(fun(X7,X5),X8))),s(X7,X9))))) = s(X10,happ(s(fun(X5,X10),'_dst_x0x1_2'(s(fun(X4,X10),X11),s(fun(X5,X4),X6))),s(X5,happ(s(fun(X7,X5),X8),s(X7,X9)))))) )),
  inference(superposition,[],[f206,f206])).
fof(f1855,plain,(
  ( ! [X261,X263,X257,X259,X265,X260,X262,X258,X264] : (s(X264,f(s(fun(X257,fun(X258,fun(X259,fun(X260,fun(X261,'type.one.one'))))),X265))) != s(X264,g(s(fun(X257,fun(X258,fun(X259,fun(X260,fun(X261,'type.one.one'))))),X265))) | s(fun(fun(X257,fun(X258,fun(X259,fun(X260,fun(X261,'type.one.one'))))),X264),X262) = s(fun(fun(X257,fun(X258,fun(X259,fun(X260,fun(X261,'type.one.one'))))),X264),X263)) )),
  inference(superposition,[],[f182,f815])).
fof(f1824,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (s(fun(X0,fun(X1,fun(X2,fun(X3,fun(X4,fun(X5,'type.one.one')))))),X6) = s(fun(X0,fun(X1,fun(X2,fun(X3,fun(X4,fun(X5,'type.one.one')))))),X7)) )),
  inference(unit_resulting_resolution,[],[f815,f182])).
fof(f1825,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s(fun('type.one.one',fun(X0,fun(X1,fun(X2,fun(X3,fun(X4,'type.one.one')))))),X5) = s(fun('type.one.one',fun(X0,fun(X1,fun(X2,fun(X3,fun(X4,'type.one.one')))))),X6)) )),
  inference(unit_resulting_resolution,[],[f815,f611])).
fof(f1740,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s('type.pair.prod'('type.infer.exc'(X0,X1),X0),'const.infer.read_1'(s(X0,X2))) != s('type.pair.prod'('type.infer.exc'(X0,X1),X0),'const.infer.st_ex_return_2'(s(X0,X3),s(X0,X4))) | s(X0,X2) = s(X0,X4)) )),
  inference(superposition,[],[f211,f177])).
fof(f1739,plain,(
  ( ! [X333,X335,X329,X331,X332,X334,X328,X330] : (s('type.pair.prod'('type.infer.exc'(X331,X332),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X328),'type.infer.infer_st'(X329))),'const.infer.st_ex_return_2'(s(X331,X333),s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X328),'type.infer.infer_st'(X329)),X334))) != s('type.pair.prod'('type.infer.exc'(X331,X332),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X328),'type.infer.infer_st'(X329))),'const.pair.,_2'(s('type.infer.exc'(X331,X332),'const.infer.Success_1'(s(X331,X335))),s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X328),'type.infer.infer_st'(X329)),'const.infer.fresh_uvar_1'(s('type.infer.infer_st'(X329),X330))))) | s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X328),'type.infer.infer_st'(X329)),X334) = s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X328),'type.infer.infer_st'(X329)),happ(s(fun('type.infer.infer_st'(X329),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X328),'type.infer.infer_st'(X329))),'const.infer.fresh_uvar_0'),s('type.infer.infer_st'(X329),X330)))) )),
  inference(superposition,[],[f211,f179])).
fof(f1738,plain,(
  ( ! [X325,X327,X321,X323,X318,X324,X326,X320,X322,X319] : (s('type.pair.prod'('type.infer.exc'(X323,X324),'type.pair.prod'('type.infer.exc'(X318,X319),X320)),'const.infer.st_ex_return_2'(s(X323,X325),s('type.pair.prod'('type.infer.exc'(X318,X319),X320),X326))) != s('type.pair.prod'('type.infer.exc'(X323,X324),'type.pair.prod'('type.infer.exc'(X318,X319),X320)),'const.pair.,_2'(s('type.infer.exc'(X323,X324),'const.infer.Success_1'(s(X323,X327))),s('type.pair.prod'('type.infer.exc'(X318,X319),X320),'const.infer.failwith_2'(s(X319,X321),s(X320,X322))))) | s('type.pair.prod'('type.infer.exc'(X318,X319),X320),X326) = s('type.pair.prod'('type.infer.exc'(X318,X319),X320),happ(s(fun(X320,'type.pair.prod'('type.infer.exc'(X318,X319),X320)),'const.infer.failwith_1'(s(X319,X321))),s(X320,X322)))) )),
  inference(superposition,[],[f211,f204])).
fof(f1737,plain,(
  ( ! [X313,X315,X310,X316,X312,X314,X311,X317] : (s('type.pair.prod'('type.infer.exc'(X313,X314),'type.pair.prod'('type.infer.exc'(X310,X311),X310)),'const.infer.st_ex_return_2'(s(X313,X315),s('type.pair.prod'('type.infer.exc'(X310,X311),X310),X316))) != s('type.pair.prod'('type.infer.exc'(X313,X314),'type.pair.prod'('type.infer.exc'(X310,X311),X310)),'const.pair.,_2'(s('type.infer.exc'(X313,X314),'const.infer.Success_1'(s(X313,X317))),s('type.pair.prod'('type.infer.exc'(X310,X311),X310),'const.infer.read_1'(s(X310,X312))))) | s('type.pair.prod'('type.infer.exc'(X310,X311),X310),X316) = s('type.pair.prod'('type.infer.exc'(X310,X311),X310),happ(s(fun(X310,'type.pair.prod'('type.infer.exc'(X310,X311),X310)),'const.infer.read_0'),s(X310,X312)))) )),
  inference(superposition,[],[f211,f178])).
fof(f1736,plain,(
  ( ! [X302,X308,X304,X306,X303,X309,X305,X307] : (s('type.pair.prod'('type.infer.exc'(X305,X306),'type.pair.prod'('type.infer.exc'(X302,X303),X302)),'const.infer.st_ex_return_2'(s(X305,X307),s('type.pair.prod'('type.infer.exc'(X302,X303),X302),X308))) != s('type.pair.prod'('type.infer.exc'(X305,X306),'type.pair.prod'('type.infer.exc'(X302,X303),X302)),'const.pair.,_2'(s('type.infer.exc'(X305,X306),'const.infer.Success_1'(s(X305,X309))),s('type.pair.prod'('type.infer.exc'(X302,X303),X302),'const.infer.read_1'(s(X302,X304))))) | s('type.pair.prod'('type.infer.exc'(X302,X303),X302),X308) = s('type.pair.prod'('type.infer.exc'(X302,X303),X302),'const.pair.,_2'(s('type.infer.exc'(X302,X303),'const.infer.Success_1'(s(X302,X304))),s(X302,X304)))) )),
  inference(superposition,[],[f211,f177])).
fof(f1706,plain,(
  ( ! [X70,X68,X66,X71,X69,X67] : (s('type.pair.prod'('type.infer.exc'(X67,X68),bool),'const.infer.st_ex_return_2'(s(X67,X69),s(bool,X70))) != s('type.pair.prod'('type.infer.exc'(X67,X68),bool),'const.pair.,_2'(s('type.infer.exc'(X67,X68),'const.infer.Success_1'(s(X67,X71))),s(bool,'T_0'))) | s(bool,X70) = s(bool,happ(s(fun('type.infer.infer_st'(bool),bool),'const.infer.infer_st_subst_0'),s('type.infer.infer_st'(bool),X66))) | s(bool,'F_0') = s(bool,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(bool),X66)))) )),
  inference(superposition,[],[f211,f293])).
fof(f1697,plain,(
  ( ! [X12,X10,X8,X7,X13,X11,X9] : (s('type.pair.prod'('type.infer.exc'(X8,X9),bool),'const.infer.st_ex_return_2'(s(X8,X10),s(bool,X11))) != s('type.pair.prod'('type.infer.exc'(X8,X9),bool),'const.pair.,_2'(s('type.infer.exc'(X8,X9),'const.infer.Success_1'(s(X8,X12))),s(bool,'T_0'))) | s(bool,X7) = s(bool,X11) | s(bool,X7) = s(bool,X13) | s(bool,'T_0') = s(bool,X13)) )),
  inference(superposition,[],[f211,f272])).
fof(f1696,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'(X2,X3),X0),'const.infer.st_ex_return_2'(s(X2,X4),s(X0,X5))) != s('type.pair.prod'('type.infer.exc'(X2,X3),X0),'const.pair.,_2'(s('type.infer.exc'(X2,X3),'const.infer.Success_1'(s(X2,X6))),s(X0,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(X0),X1))))) | s(X0,X5) = s(X0,happ(s(fun('type.infer.infer_st'(X0),X0),'const.infer.infer_st_subst_0'),s('type.infer.infer_st'(X0),X1)))) )),
  inference(superposition,[],[f211,f168])).
fof(f1651,plain,(
  ( ! [X333,X335,X329,X331,X332,X334,X328,X330] : (s('type.pair.prod'('type.infer.exc'(X331,X332),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X328),'type.infer.infer_st'(X329))),'const.infer.st_ex_return_2'(s(X331,X333),s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X328),'type.infer.infer_st'(X329)),'const.infer.fresh_uvar_1'(s('type.infer.infer_st'(X329),X330))))) != s('type.pair.prod'('type.infer.exc'(X331,X332),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X328),'type.infer.infer_st'(X329))),'const.pair.,_2'(s('type.infer.exc'(X331,X332),'const.infer.Success_1'(s(X331,X334))),s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X328),'type.infer.infer_st'(X329)),X335))) | s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X328),'type.infer.infer_st'(X329)),X335) = s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X328),'type.infer.infer_st'(X329)),happ(s(fun('type.infer.infer_st'(X329),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X328),'type.infer.infer_st'(X329))),'const.infer.fresh_uvar_0'),s('type.infer.infer_st'(X329),X330)))) )),
  inference(superposition,[],[f211,f179])).
fof(f1650,plain,(
  ( ! [X325,X327,X321,X323,X318,X324,X326,X320,X322,X319] : (s('type.pair.prod'('type.infer.exc'(X323,X324),'type.pair.prod'('type.infer.exc'(X318,X319),X320)),'const.pair.,_2'(s('type.infer.exc'(X323,X324),'const.infer.Success_1'(s(X323,X326))),s('type.pair.prod'('type.infer.exc'(X318,X319),X320),X327))) != s('type.pair.prod'('type.infer.exc'(X323,X324),'type.pair.prod'('type.infer.exc'(X318,X319),X320)),'const.infer.st_ex_return_2'(s(X323,X325),s('type.pair.prod'('type.infer.exc'(X318,X319),X320),'const.infer.failwith_2'(s(X319,X321),s(X320,X322))))) | s('type.pair.prod'('type.infer.exc'(X318,X319),X320),X327) = s('type.pair.prod'('type.infer.exc'(X318,X319),X320),happ(s(fun(X320,'type.pair.prod'('type.infer.exc'(X318,X319),X320)),'const.infer.failwith_1'(s(X319,X321))),s(X320,X322)))) )),
  inference(superposition,[],[f211,f204])).
fof(f1649,plain,(
  ( ! [X313,X315,X310,X316,X312,X314,X311,X317] : (s('type.pair.prod'('type.infer.exc'(X313,X314),'type.pair.prod'('type.infer.exc'(X310,X311),X310)),'const.infer.st_ex_return_2'(s(X313,X315),s('type.pair.prod'('type.infer.exc'(X310,X311),X310),'const.infer.read_1'(s(X310,X312))))) != s('type.pair.prod'('type.infer.exc'(X313,X314),'type.pair.prod'('type.infer.exc'(X310,X311),X310)),'const.pair.,_2'(s('type.infer.exc'(X313,X314),'const.infer.Success_1'(s(X313,X316))),s('type.pair.prod'('type.infer.exc'(X310,X311),X310),X317))) | s('type.pair.prod'('type.infer.exc'(X310,X311),X310),X317) = s('type.pair.prod'('type.infer.exc'(X310,X311),X310),happ(s(fun(X310,'type.pair.prod'('type.infer.exc'(X310,X311),X310)),'const.infer.read_0'),s(X310,X312)))) )),
  inference(superposition,[],[f211,f178])).
fof(f1648,plain,(
  ( ! [X302,X308,X304,X306,X303,X309,X305,X307] : (s('type.pair.prod'('type.infer.exc'(X305,X306),'type.pair.prod'('type.infer.exc'(X302,X303),X302)),'const.infer.st_ex_return_2'(s(X305,X307),s('type.pair.prod'('type.infer.exc'(X302,X303),X302),'const.infer.read_1'(s(X302,X304))))) != s('type.pair.prod'('type.infer.exc'(X305,X306),'type.pair.prod'('type.infer.exc'(X302,X303),X302)),'const.pair.,_2'(s('type.infer.exc'(X305,X306),'const.infer.Success_1'(s(X305,X308))),s('type.pair.prod'('type.infer.exc'(X302,X303),X302),X309))) | s('type.pair.prod'('type.infer.exc'(X302,X303),X302),X309) = s('type.pair.prod'('type.infer.exc'(X302,X303),X302),'const.pair.,_2'(s('type.infer.exc'(X302,X303),'const.infer.Success_1'(s(X302,X304))),s(X302,X304)))) )),
  inference(superposition,[],[f211,f177])).
fof(f1647,plain,(
  ( ! [X300,X296,X298,X295,X301,X297,X299] : (s('type.pair.prod'('type.infer.exc'(X297,X298),'type.infer_t.infer_t'),'const.pair.,_2'(s('type.infer.exc'(X297,X298),'const.infer.Success_1'(s(X297,X300))),s('type.infer_t.infer_t',X301))) != s('type.pair.prod'('type.infer.exc'(X297,X298),'type.infer_t.infer_t'),'const.infer.st_ex_return_2'(s(X297,X299),s('type.infer_t.infer_t','const.unify.t_walkstar_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X295),s('type.infer_t.infer_t',X296))))) | s('type.infer_t.infer_t',X301) = s('type.infer_t.infer_t',happ(s(fun('type.infer_t.infer_t','type.infer_t.infer_t'),happ(s(fun('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),fun('type.infer_t.infer_t','type.infer_t.infer_t')),'const.unify.t_walkstar_0'),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X295))),s('type.infer_t.infer_t',X296)))) )),
  inference(superposition,[],[f211,f176])).
fof(f1618,plain,(
  ( ! [X70,X68,X66,X71,X69,X67] : (s('type.pair.prod'('type.infer.exc'(X67,X68),bool),'const.infer.st_ex_return_2'(s(X67,X69),s(bool,'T_0'))) != s('type.pair.prod'('type.infer.exc'(X67,X68),bool),'const.pair.,_2'(s('type.infer.exc'(X67,X68),'const.infer.Success_1'(s(X67,X70))),s(bool,X71))) | s(bool,X71) = s(bool,happ(s(fun('type.infer.infer_st'(bool),bool),'const.infer.infer_st_subst_0'),s('type.infer.infer_st'(bool),X66))) | s(bool,'F_0') = s(bool,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(bool),X66)))) )),
  inference(superposition,[],[f211,f293])).
fof(f1614,plain,(
  ( ! [X47,X45,X43,X41,X46,X44,X42] : (s('type.pair.prod'('type.infer.exc'(X42,X43),bool),'const.infer.st_ex_return_2'(s(X42,X44),s(bool,X41))) != s('type.pair.prod'('type.infer.exc'(X42,X43),bool),'const.pair.,_2'(s('type.infer.exc'(X42,X43),'const.infer.Success_1'(s(X42,X45))),s(bool,X46))) | s(bool,'T_0') = s(bool,X46) | s(bool,X41) = s(bool,X47) | s(bool,'T_0') = s(bool,X47)) )),
  inference(superposition,[],[f211,f272])).
fof(f1611,plain,(
  ( ! [X26,X24,X23,X21,X27,X25,X22] : (s('type.pair.prod'('type.infer.exc'(X23,X24),bool),'const.infer.st_ex_return_2'(s(X23,X25),s(bool,X22))) != s('type.pair.prod'('type.infer.exc'(X23,X24),bool),'const.pair.,_2'(s('type.infer.exc'(X23,X24),'const.infer.Success_1'(s(X23,X26))),s(bool,X27))) | s(bool,X21) = s(bool,X27) | s(bool,'T_0') = s(bool,X21) | s(bool,'T_0') = s(bool,X22)) )),
  inference(superposition,[],[f211,f272])).
fof(f1609,plain,(
  ( ! [X12,X10,X8,X7,X13,X11,X9] : (s('type.pair.prod'('type.infer.exc'(X8,X9),bool),'const.infer.st_ex_return_2'(s(X8,X10),s(bool,'T_0'))) != s('type.pair.prod'('type.infer.exc'(X8,X9),bool),'const.pair.,_2'(s('type.infer.exc'(X8,X9),'const.infer.Success_1'(s(X8,X11))),s(bool,X12))) | s(bool,X7) = s(bool,X12) | s(bool,X7) = s(bool,X13) | s(bool,'T_0') = s(bool,X13)) )),
  inference(superposition,[],[f211,f272])).
fof(f1608,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'(X2,X3),X0),'const.infer.st_ex_return_2'(s(X2,X4),s(X0,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(X0),X1))))) != s('type.pair.prod'('type.infer.exc'(X2,X3),X0),'const.pair.,_2'(s('type.infer.exc'(X2,X3),'const.infer.Success_1'(s(X2,X5))),s(X0,X6))) | s(X0,X6) = s(X0,happ(s(fun('type.infer.infer_st'(X0),X0),'const.infer.infer_st_subst_0'),s('type.infer.infer_st'(X0),X1)))) )),
  inference(superposition,[],[f211,f168])).
fof(f1557,plain,(
  ( ! [X6,X4,X2,X0,X10,X8,X7,X5,X3,X1,X9] : (s('type.pair.prod'('type.infer.exc'(X0,X1),'type.pair.prod'('type.infer.exc'(X2,X3),X4)),'const.infer.st_ex_return_2'(s(X0,X5),s('type.pair.prod'('type.infer.exc'(X2,X3),X4),'const.infer.failwith_2'(s(X3,X6),s(X4,X7))))) != s('type.pair.prod'('type.infer.exc'(X0,X1),'type.pair.prod'('type.infer.exc'(X2,X3),X4)),'const.pair.,_2'(s('type.infer.exc'(X0,X1),'const.infer.Success_1'(s(X0,X8))),s('type.pair.prod'('type.infer.exc'(X2,X3),X4),'const.pair.,_2'(s('type.infer.exc'(X2,X3),'const.infer.Success_1'(s(X2,X9))),s(X4,X10)))))) )),
  inference(unit_resulting_resolution,[],[f253,f211])).
fof(f1558,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'(X0,X1),'type.pair.prod'('type.infer.exc'(X2,X3),X2)),'const.infer.st_ex_return_2'(s(X0,X4),s('type.pair.prod'('type.infer.exc'(X2,X3),X2),'const.infer.read_1'(s(X2,X5))))) != s('type.pair.prod'('type.infer.exc'(X0,X1),'type.pair.prod'('type.infer.exc'(X2,X3),X2)),'const.pair.,_2'(s('type.infer.exc'(X0,X1),'const.infer.Success_1'(s(X0,X6))),s('type.pair.prod'('type.infer.exc'(X2,X3),X2),'const.infer.failwith_2'(s(X3,X7),s(X2,X8)))))) )),
  inference(unit_resulting_resolution,[],[f706,f211])).
fof(f1562,plain,(
  ( ! [X6,X4,X2,X0,X10,X8,X7,X5,X3,X1,X9] : (s('type.pair.prod'('type.infer.exc'(X0,X1),'type.pair.prod'('type.infer.exc'(X2,X3),X4)),'const.pair.,_2'(s('type.infer.exc'(X0,X1),'const.infer.Success_1'(s(X0,X5))),s('type.pair.prod'('type.infer.exc'(X2,X3),X4),'const.infer.failwith_2'(s(X3,X6),s(X4,X7))))) != s('type.pair.prod'('type.infer.exc'(X0,X1),'type.pair.prod'('type.infer.exc'(X2,X3),X4)),'const.infer.st_ex_return_2'(s(X0,X8),s('type.pair.prod'('type.infer.exc'(X2,X3),X4),'const.pair.,_2'(s('type.infer.exc'(X2,X3),'const.infer.Success_1'(s(X2,X9))),s(X4,X10)))))) )),
  inference(unit_resulting_resolution,[],[f253,f211])).
fof(f1563,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'(X0,X1),'type.pair.prod'('type.infer.exc'(X2,X3),X2)),'const.infer.st_ex_return_2'(s(X0,X4),s('type.pair.prod'('type.infer.exc'(X2,X3),X2),'const.infer.failwith_2'(s(X3,X5),s(X2,X6))))) != s('type.pair.prod'('type.infer.exc'(X0,X1),'type.pair.prod'('type.infer.exc'(X2,X3),X2)),'const.pair.,_2'(s('type.infer.exc'(X0,X1),'const.infer.Success_1'(s(X0,X7))),s('type.pair.prod'('type.infer.exc'(X2,X3),X2),'const.infer.read_1'(s(X2,X8)))))) )),
  inference(unit_resulting_resolution,[],[f706,f211])).
fof(f1426,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s('type.pair.prod'('type.infer.exc'(X0,X1),X0),'const.infer.read_1'(s(X0,X2))) != s('type.pair.prod'('type.infer.exc'(X0,X1),X0),'const.infer.st_ex_return_2'(s(X0,X3),s(X0,X4))) | s(X0,X2) = s(X0,X3)) )),
  inference(superposition,[],[f210,f177])).
fof(f1382,plain,(
  ( ! [X269,X271,X267,X273,X268,X270,X266,X272] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X266,X267),X266),X269),X270),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'(X266,X267),X266),X271),s(X270,X272))) != s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X266,X267),X266),X269),X270),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'(X266,X267),X266),X269),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'(X266,X267),X266),'const.infer.read_1'(s(X266,X268))))),s(X270,X273))) | s('type.pair.prod'('type.infer.exc'(X266,X267),X266),X271) = s('type.pair.prod'('type.infer.exc'(X266,X267),X266),'const.pair.,_2'(s('type.infer.exc'(X266,X267),'const.infer.Success_1'(s(X266,X268))),s(X266,X268)))) )),
  inference(superposition,[],[f210,f177])).
fof(f1356,plain,(
  ( ! [X70,X68,X66,X71,X69,X67] : (s('type.pair.prod'('type.infer.exc'(bool,X67),X68),'const.infer.st_ex_return_2'(s(bool,X69),s(X68,X70))) != s('type.pair.prod'('type.infer.exc'(bool,X67),X68),'const.pair.,_2'(s('type.infer.exc'(bool,X67),'const.infer.Success_1'(s(bool,'T_0'))),s(X68,X71))) | s(bool,X69) = s(bool,happ(s(fun('type.infer.infer_st'(bool),bool),'const.infer.infer_st_subst_0'),s('type.infer.infer_st'(bool),X66))) | s(bool,'F_0') = s(bool,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(bool),X66)))) )),
  inference(superposition,[],[f210,f293])).
fof(f1347,plain,(
  ( ! [X12,X10,X8,X7,X13,X11,X9] : (s('type.pair.prod'('type.infer.exc'(bool,X8),X9),'const.infer.st_ex_return_2'(s(bool,X10),s(X9,X11))) != s('type.pair.prod'('type.infer.exc'(bool,X8),X9),'const.pair.,_2'(s('type.infer.exc'(bool,X8),'const.infer.Success_1'(s(bool,'T_0'))),s(X9,X12))) | s(bool,X7) = s(bool,X10) | s(bool,X7) = s(bool,X13) | s(bool,'T_0') = s(bool,X13)) )),
  inference(superposition,[],[f210,f272])).
fof(f1305,plain,(
  ( ! [X292,X294,X296,X298,X293,X295,X297,X299] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X292),'type.infer.infer_st'(X293)),X295),X296),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X292),'type.infer.infer_st'(X293)),'const.infer.fresh_uvar_1'(s('type.infer.infer_st'(X293),X294))),s(X296,X297))) != s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X292),'type.infer.infer_st'(X293)),X295),X296),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X292),'type.infer.infer_st'(X293)),X295),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X292),'type.infer.infer_st'(X293)),X298))),s(X296,X299))) | s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X292),'type.infer.infer_st'(X293)),X298) = s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X292),'type.infer.infer_st'(X293)),happ(s(fun('type.infer.infer_st'(X293),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X292),'type.infer.infer_st'(X293))),'const.infer.fresh_uvar_0'),s('type.infer.infer_st'(X293),X294)))) )),
  inference(superposition,[],[f210,f179])).
fof(f1304,plain,(
  ( ! [X282,X288,X290,X285,X287,X283,X289,X291,X284,X286] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X282,X283),X284),X287),X288),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'(X282,X283),X284),'const.infer.failwith_2'(s(X283,X285),s(X284,X286))),s(X288,X289))) != s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X282,X283),X284),X287),X288),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'(X282,X283),X284),X287),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'(X282,X283),X284),X290))),s(X288,X291))) | s('type.pair.prod'('type.infer.exc'(X282,X283),X284),X290) = s('type.pair.prod'('type.infer.exc'(X282,X283),X284),happ(s(fun(X284,'type.pair.prod'('type.infer.exc'(X282,X283),X284)),'const.infer.failwith_1'(s(X283,X285))),s(X284,X286)))) )),
  inference(superposition,[],[f210,f204])).
fof(f1303,plain,(
  ( ! [X280,X277,X279,X275,X281,X276,X278,X274] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X274,X275),X274),X277),X278),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'(X274,X275),X274),'const.infer.read_1'(s(X274,X276))),s(X278,X279))) != s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X274,X275),X274),X277),X278),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'(X274,X275),X274),X277),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'(X274,X275),X274),X280))),s(X278,X281))) | s('type.pair.prod'('type.infer.exc'(X274,X275),X274),X280) = s('type.pair.prod'('type.infer.exc'(X274,X275),X274),happ(s(fun(X274,'type.pair.prod'('type.infer.exc'(X274,X275),X274)),'const.infer.read_0'),s(X274,X276)))) )),
  inference(superposition,[],[f210,f178])).
fof(f1302,plain,(
  ( ! [X269,X271,X267,X273,X268,X270,X266,X272] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X266,X267),X266),X269),X270),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'(X266,X267),X266),'const.infer.read_1'(s(X266,X268))),s(X270,X271))) != s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X266,X267),X266),X269),X270),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'(X266,X267),X266),X269),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'(X266,X267),X266),X272))),s(X270,X273))) | s('type.pair.prod'('type.infer.exc'(X266,X267),X266),X272) = s('type.pair.prod'('type.infer.exc'(X266,X267),X266),'const.pair.,_2'(s('type.infer.exc'(X266,X267),'const.infer.Success_1'(s(X266,X268))),s(X266,X268)))) )),
  inference(superposition,[],[f210,f177])).
fof(f1301,plain,(
  ( ! [X261,X263,X259,X265,X260,X262,X264] : (s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X261),X262),'const.pair.,_2'(s('type.infer.exc'('type.infer_t.infer_t',X261),'const.infer.Success_1'(s('type.infer_t.infer_t',X264))),s(X262,X265))) != s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X261),X262),'const.infer.st_ex_return_2'(s('type.infer_t.infer_t','const.unify.t_walkstar_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X259),s('type.infer_t.infer_t',X260))),s(X262,X263))) | s('type.infer_t.infer_t',X264) = s('type.infer_t.infer_t',happ(s(fun('type.infer_t.infer_t','type.infer_t.infer_t'),happ(s(fun('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),fun('type.infer_t.infer_t','type.infer_t.infer_t')),'const.unify.t_walkstar_0'),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X259))),s('type.infer_t.infer_t',X260)))) )),
  inference(superposition,[],[f210,f176])).
fof(f1276,plain,(
  ( ! [X70,X68,X66,X71,X69,X67] : (s('type.pair.prod'('type.infer.exc'(bool,X67),X68),'const.infer.st_ex_return_2'(s(bool,'T_0'),s(X68,X69))) != s('type.pair.prod'('type.infer.exc'(bool,X67),X68),'const.pair.,_2'(s('type.infer.exc'(bool,X67),'const.infer.Success_1'(s(bool,X70))),s(X68,X71))) | s(bool,X70) = s(bool,happ(s(fun('type.infer.infer_st'(bool),bool),'const.infer.infer_st_subst_0'),s('type.infer.infer_st'(bool),X66))) | s(bool,'F_0') = s(bool,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(bool),X66)))) )),
  inference(superposition,[],[f210,f293])).
fof(f1272,plain,(
  ( ! [X47,X45,X43,X41,X46,X44,X42] : (s('type.pair.prod'('type.infer.exc'(bool,X42),X43),'const.infer.st_ex_return_2'(s(bool,X41),s(X43,X44))) != s('type.pair.prod'('type.infer.exc'(bool,X42),X43),'const.pair.,_2'(s('type.infer.exc'(bool,X42),'const.infer.Success_1'(s(bool,X45))),s(X43,X46))) | s(bool,'T_0') = s(bool,X45) | s(bool,X41) = s(bool,X47) | s(bool,'T_0') = s(bool,X47)) )),
  inference(superposition,[],[f210,f272])).
fof(f1269,plain,(
  ( ! [X26,X24,X23,X21,X27,X25,X22] : (s('type.pair.prod'('type.infer.exc'(bool,X23),X24),'const.infer.st_ex_return_2'(s(bool,X22),s(X24,X25))) != s('type.pair.prod'('type.infer.exc'(bool,X23),X24),'const.pair.,_2'(s('type.infer.exc'(bool,X23),'const.infer.Success_1'(s(bool,X26))),s(X24,X27))) | s(bool,X21) = s(bool,X26) | s(bool,'T_0') = s(bool,X21) | s(bool,'T_0') = s(bool,X22)) )),
  inference(superposition,[],[f210,f272])).
fof(f1267,plain,(
  ( ! [X12,X10,X8,X7,X13,X11,X9] : (s('type.pair.prod'('type.infer.exc'(bool,X8),X9),'const.infer.st_ex_return_2'(s(bool,'T_0'),s(X9,X10))) != s('type.pair.prod'('type.infer.exc'(bool,X8),X9),'const.pair.,_2'(s('type.infer.exc'(bool,X8),'const.infer.Success_1'(s(bool,X11))),s(X9,X12))) | s(bool,X7) = s(bool,X11) | s(bool,X7) = s(bool,X13) | s(bool,'T_0') = s(bool,X13)) )),
  inference(superposition,[],[f210,f272])).
fof(f1266,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'(X0,X2),X3),'const.infer.st_ex_return_2'(s(X0,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(X0),X1))),s(X3,X4))) != s('type.pair.prod'('type.infer.exc'(X0,X2),X3),'const.pair.,_2'(s('type.infer.exc'(X0,X2),'const.infer.Success_1'(s(X0,X5))),s(X3,X6))) | s(X0,X5) = s(X0,happ(s(fun('type.infer.infer_st'(X0),X0),'const.infer.infer_st_subst_0'),s('type.infer.infer_st'(X0),X1)))) )),
  inference(superposition,[],[f210,f168])).
fof(f1259,plain,(
  ( ! [X6,X4,X2,X0,X10,X8,X7,X5,X3,X1,X9] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),X4),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'(X0,X1),X2),'const.infer.failwith_2'(s(X1,X5),s(X2,X6))),s(X4,X7))) != s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),X4),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'(X0,X1),X2),'const.pair.,_2'(s('type.infer.exc'(X0,X1),'const.infer.Success_1'(s(X0,X8))),s(X2,X9))))),s(X4,X10)))) )),
  inference(unit_resulting_resolution,[],[f253,f210])).
fof(f1260,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X0),X2),X3),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'(X0,X1),X0),'const.infer.read_1'(s(X0,X4))),s(X3,X5))) != s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X0),X2),X3),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X0),X2),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'(X0,X1),X0),'const.infer.failwith_2'(s(X1,X6),s(X0,X7))))),s(X3,X8)))) )),
  inference(unit_resulting_resolution,[],[f706,f210])).
fof(f1264,plain,(
  ( ! [X6,X4,X2,X0,X10,X8,X7,X5,X3,X1,X9] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),X4),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'(X0,X1),X2),'const.pair.,_2'(s('type.infer.exc'(X0,X1),'const.infer.Success_1'(s(X0,X5))),s(X2,X6))),s(X4,X7))) != s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),X4),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X2),X3),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'(X0,X1),X2),'const.infer.failwith_2'(s(X1,X8),s(X2,X9))))),s(X4,X10)))) )),
  inference(unit_resulting_resolution,[],[f253,f210])).
fof(f1265,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X0),X2),X3),'const.infer.st_ex_return_2'(s('type.pair.prod'('type.infer.exc'(X0,X1),X0),'const.infer.failwith_2'(s(X1,X4),s(X0,X5))),s(X3,X6))) != s('type.pair.prod'('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X0),X2),X3),'const.pair.,_2'(s('type.infer.exc'('type.pair.prod'('type.infer.exc'(X0,X1),X0),X2),'const.infer.Success_1'(s('type.pair.prod'('type.infer.exc'(X0,X1),X0),'const.infer.read_1'(s(X0,X7))))),s(X3,X8)))) )),
  inference(unit_resulting_resolution,[],[f706,f210])).
fof(f1164,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s(bool,'T_0') = s(bool,X0) | s('type.pair.prod'('type.infer.exc'('type.one.one',X1),X2),'const.infer.guard_3'(s(bool,X0),s(X1,X3),s(X2,X4))) != s('type.pair.prod'('type.infer.exc'('type.one.one',X1),X2),'const.pair.,_2'(s('type.infer.exc'('type.one.one',X1),'const.infer.Success_1'(s('type.one.one',X5))),s(X2,X6)))) )),
  inference(condensation,[],[f1163])).
fof(f1163,plain,(
  ( ! [X23,X21,X19,X17,X22,X20,X18,X16] : (s('type.pair.prod'('type.infer.exc'('type.one.one',X18),X19),'const.infer.guard_3'(s(bool,X16),s(X18,X20),s(X19,X21))) != s('type.pair.prod'('type.infer.exc'('type.one.one',X18),X19),'const.pair.,_2'(s('type.infer.exc'('type.one.one',X18),'const.infer.Success_1'(s('type.one.one',X22))),s(X19,X23))) | s(bool,'T_0') = s(bool,X16) | s(bool,'T_0') = s(bool,X17)) )),
  inference(subsumption_resolution,[],[f1154,f274])).
fof(f1154,plain,(
  ( ! [X23,X21,X19,X17,X22,X20,X18,X16] : (p(s(bool,X17)) | s('type.pair.prod'('type.infer.exc'('type.one.one',X18),X19),'const.infer.guard_3'(s(bool,X16),s(X18,X20),s(X19,X21))) != s('type.pair.prod'('type.infer.exc'('type.one.one',X18),X19),'const.pair.,_2'(s('type.infer.exc'('type.one.one',X18),'const.infer.Success_1'(s('type.one.one',X22))),s(X19,X23))) | s(bool,'T_0') = s(bool,X16) | s(bool,'T_0') = s(bool,X17)) )),
  inference(superposition,[],[f195,f272])).
fof(f831,plain,(
  ( ! [X92,X90,X88,X87,X85,X91,X89,X86] : (s(X91,f(s(fun(X85,fun(X86,fun(X87,fun(X88,'type.one.one')))),X92))) != s(X91,g(s(fun(X85,fun(X86,fun(X87,fun(X88,'type.one.one')))),X92))) | s(fun(fun(X85,fun(X86,fun(X87,fun(X88,'type.one.one')))),X91),X89) = s(fun(fun(X85,fun(X86,fun(X87,fun(X88,'type.one.one')))),X91),X90)) )),
  inference(superposition,[],[f182,f787])).
fof(f815,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s(fun(X0,fun(X1,fun(X2,fun(X3,fun(X4,'type.one.one'))))),X5) = s(fun(X0,fun(X1,fun(X2,fun(X3,fun(X4,'type.one.one'))))),X6)) )),
  inference(unit_resulting_resolution,[],[f787,f182])).
fof(f803,plain,(
  ( ! [X80,X78,X76,X81,X79,X77,X75] : (s(X80,f(s(fun(X75,fun(X76,fun(X77,'type.one.one'))),X81))) != s(X80,g(s(fun(X75,fun(X76,fun(X77,'type.one.one'))),X81))) | s(fun(fun(X75,fun(X76,fun(X77,'type.one.one'))),X80),X78) = s(fun(fun(X75,fun(X76,fun(X77,'type.one.one'))),X80),X79)) )),
  inference(superposition,[],[f182,f752])).
fof(f787,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s(fun(X0,fun(X1,fun(X2,fun(X3,'type.one.one')))),X4) = s(fun(X0,fun(X1,fun(X2,fun(X3,'type.one.one')))),X5)) )),
  inference(unit_resulting_resolution,[],[f752,f182])).
fof(f768,plain,(
  ( ! [X70,X68,X66,X69,X67,X65] : (s(X69,f(s(fun(X65,fun(X66,'type.one.one')),X70))) != s(X69,g(s(fun(X65,fun(X66,'type.one.one')),X70))) | s(fun(fun(X65,fun(X66,'type.one.one')),X69),X67) = s(fun(fun(X65,fun(X66,'type.one.one')),X69),X68)) )),
  inference(superposition,[],[f182,f724])).
fof(f752,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s(fun(X0,fun(X1,fun(X2,'type.one.one'))),X3) = s(fun(X0,fun(X1,fun(X2,'type.one.one'))),X4)) )),
  inference(unit_resulting_resolution,[],[f724,f182])).
fof(f740,plain,(
  ( ! [X59,X57,X58,X56,X55] : (s(X58,f(s(fun(X55,'type.one.one'),X59))) != s(X58,g(s(fun(X55,'type.one.one'),X59))) | s(fun(fun(X55,'type.one.one'),X58),X56) = s(fun(fun(X55,'type.one.one'),X58),X57)) )),
  inference(superposition,[],[f182,f605])).
fof(f724,plain,(
  ( ! [X2,X0,X3,X1] : (s(fun(X0,fun(X1,'type.one.one')),X2) = s(fun(X0,fun(X1,'type.one.one')),X3)) )),
  inference(unit_resulting_resolution,[],[f605,f182])).
fof(f706,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s('type.pair.prod'('type.infer.exc'(X0,X1),X0),'const.infer.read_1'(s(X0,X2))) != s('type.pair.prod'('type.infer.exc'(X0,X1),X0),'const.infer.failwith_2'(s(X1,X3),s(X0,X4)))) )),
  inference(superposition,[],[f253,f177])).
fof(f608,plain,(
  ( ! [X10,X8,X11,X9] : (s(X10,f(s(bool,X11))) != s(X10,g(s(bool,X11))) | s(fun(bool,X10),X8) = s(fun(bool,X10),X9) | s(bool,'T_0') = s(bool,sK5(X8,X9,X10,bool)) | s(bool,'T_0') = s(bool,X11)) )),
  inference(superposition,[],[f182,f272])).
fof(f606,plain,(
  ( ! [X2,X0,X3,X1] : (s(X2,f(s(bool,'T_0'))) != s(X2,g(s(bool,'T_0'))) | s(fun(bool,X2),X0) = s(fun(bool,X2),X1) | s(bool,X3) = s(bool,sK5(X0,X1,X2,bool)) | s(bool,'T_0') = s(bool,X3)) )),
  inference(superposition,[],[f182,f272])).
fof(f605,plain,(
  ( ! [X2,X0,X1] : (s(fun(X0,'type.one.one'),X1) = s(fun(X0,'type.one.one'),X2)) )),
  inference(unit_resulting_resolution,[],[f258,f182])).
fof(f325,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,X0) = s(bool,X1) | s(bool,X1) = s(bool,X2) | s(bool,'T_0') = s(bool,X2) | s(bool,X0) = s(bool,X3) | s(bool,'T_0') = s(bool,X3)) )),
  inference(superposition,[],[f272,f272])).
fof(f234,plain,(
  ( ! [X6,X4,X2,X0,X10,X8,X7,X5,X3,X1,X9] : (s('type.pair.prod'('type.infer.exc'(X3,X2),X4),'const.pair.,_2'(s('type.infer.exc'(X3,X2),'const.infer.Success_1'(s(X3,X8))),s(X4,X10))) != s('type.pair.prod'('type.infer.exc'(X3,X2),X4),happ(s(fun(X1,'type.pair.prod'('type.infer.exc'(X3,X2),X4)),'const.option.option_CASE_3'(s('type.option.option'(X0),X5),s(fun(X1,'type.pair.prod'('type.infer.exc'(X3,X2),X4)),X6),s(fun(X0,fun(X1,'type.pair.prod'('type.infer.exc'(X3,X2),X4))),X7))),s(X1,X9))) | s('type.option.option'(X0),'const.option.NONE_0') = s('type.option.option'(X0),X5) | s('type.option.option'(X0),X5) = s('type.option.option'(X0),'const.option.SOME_1'(s(X0,sK9(X10,X9,X8,X7,X6,X5,X4,X3,X2,X1,X0))))) )),
  inference(cnf_transformation,[],[f157])).
fof(f157,plain,(
  ! [X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10] : ((s('type.pair.prod'('type.infer.exc'(X3,X2),X4),'const.pair.,_2'(s('type.infer.exc'(X3,X2),'const.infer.Success_1'(s(X3,X8))),s(X4,X10))) != s('type.pair.prod'('type.infer.exc'(X3,X2),X4),happ(s(fun(X1,'type.pair.prod'('type.infer.exc'(X3,X2),X4)),'const.option.option_CASE_3'(s('type.option.option'(X0),X5),s(fun(X1,'type.pair.prod'('type.infer.exc'(X3,X2),X4)),X6),s(fun(X0,fun(X1,'type.pair.prod'('type.infer.exc'(X3,X2),X4))),X7))),s(X1,X9))) | (s('type.option.option'(X0),'const.option.NONE_0') = s('type.option.option'(X0),X5) & s('type.pair.prod'('type.infer.exc'(X3,X2),X4),'const.pair.,_2'(s('type.infer.exc'(X3,X2),'const.infer.Success_1'(s(X3,X8))),s(X4,X10))) = s('type.pair.prod'('type.infer.exc'(X3,X2),X4),happ(s(fun(X1,'type.pair.prod'('type.infer.exc'(X3,X2),X4)),X6),s(X1,X9)))) | (s('type.option.option'(X0),X5) = s('type.option.option'(X0),'const.option.SOME_1'(s(X0,sK9(X10,X9,X8,X7,X6,X5,X4,X3,X2,X1,X0)))) & s('type.pair.prod'('type.infer.exc'(X3,X2),X4),'const.pair.,_2'(s('type.infer.exc'(X3,X2),'const.infer.Success_1'(s(X3,X8))),s(X4,X10))) = s('type.pair.prod'('type.infer.exc'(X3,X2),X4),happ(s(fun(X1,'type.pair.prod'('type.infer.exc'(X3,X2),X4)),happ(s(fun(X0,fun(X1,'type.pair.prod'('type.infer.exc'(X3,X2),X4))),X7),s(X0,sK9(X10,X9,X8,X7,X6,X5,X4,X3,X2,X1,X0)))),s(X1,X9))))) & (((s('type.option.option'(X0),'const.option.NONE_0') != s('type.option.option'(X0),X5) | s('type.pair.prod'('type.infer.exc'(X3,X2),X4),'const.pair.,_2'(s('type.infer.exc'(X3,X2),'const.infer.Success_1'(s(X3,X8))),s(X4,X10))) != s('type.pair.prod'('type.infer.exc'(X3,X2),X4),happ(s(fun(X1,'type.pair.prod'('type.infer.exc'(X3,X2),X4)),X6),s(X1,X9)))) & ! [X11] : (s('type.option.option'(X0),X5) != s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X11))) | s('type.pair.prod'('type.infer.exc'(X3,X2),X4),'const.pair.,_2'(s('type.infer.exc'(X3,X2),'const.infer.Success_1'(s(X3,X8))),s(X4,X10))) != s('type.pair.prod'('type.infer.exc'(X3,X2),X4),happ(s(fun(X1,'type.pair.prod'('type.infer.exc'(X3,X2),X4)),happ(s(fun(X0,fun(X1,'type.pair.prod'('type.infer.exc'(X3,X2),X4))),X7),s(X0,X11))),s(X1,X9))))) | s('type.pair.prod'('type.infer.exc'(X3,X2),X4),'const.pair.,_2'(s('type.infer.exc'(X3,X2),'const.infer.Success_1'(s(X3,X8))),s(X4,X10))) = s('type.pair.prod'('type.infer.exc'(X3,X2),X4),happ(s(fun(X1,'type.pair.prod'('type.infer.exc'(X3,X2),X4)),'const.option.option_CASE_3'(s('type.option.option'(X0),X5),s(fun(X1,'type.pair.prod'('type.infer.exc'(X3,X2),X4)),X6),s(fun(X0,fun(X1,'type.pair.prod'('type.infer.exc'(X3,X2),X4))),X7))),s(X1,X9)))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK9])],[f156])).
fof(f156,plain,(
  ! [X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10] : ((s('type.pair.prod'('type.infer.exc'(X3,X2),X4),'const.pair.,_2'(s('type.infer.exc'(X3,X2),'const.infer.Success_1'(s(X3,X8))),s(X4,X10))) != s('type.pair.prod'('type.infer.exc'(X3,X2),X4),happ(s(fun(X1,'type.pair.prod'('type.infer.exc'(X3,X2),X4)),'const.option.option_CASE_3'(s('type.option.option'(X0),X5),s(fun(X1,'type.pair.prod'('type.infer.exc'(X3,X2),X4)),X6),s(fun(X0,fun(X1,'type.pair.prod'('type.infer.exc'(X3,X2),X4))),X7))),s(X1,X9))) | (s('type.option.option'(X0),'const.option.NONE_0') = s('type.option.option'(X0),X5) & s('type.pair.prod'('type.infer.exc'(X3,X2),X4),'const.pair.,_2'(s('type.infer.exc'(X3,X2),'const.infer.Success_1'(s(X3,X8))),s(X4,X10))) = s('type.pair.prod'('type.infer.exc'(X3,X2),X4),happ(s(fun(X1,'type.pair.prod'('type.infer.exc'(X3,X2),X4)),X6),s(X1,X9)))) | ? [X12] : (s('type.option.option'(X0),X5) = s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X12))) & s('type.pair.prod'('type.infer.exc'(X3,X2),X4),'const.pair.,_2'(s('type.infer.exc'(X3,X2),'const.infer.Success_1'(s(X3,X8))),s(X4,X10))) = s('type.pair.prod'('type.infer.exc'(X3,X2),X4),happ(s(fun(X1,'type.pair.prod'('type.infer.exc'(X3,X2),X4)),happ(s(fun(X0,fun(X1,'type.pair.prod'('type.infer.exc'(X3,X2),X4))),X7),s(X0,X12))),s(X1,X9))))) & (((s('type.option.option'(X0),'const.option.NONE_0') != s('type.option.option'(X0),X5) | s('type.pair.prod'('type.infer.exc'(X3,X2),X4),'const.pair.,_2'(s('type.infer.exc'(X3,X2),'const.infer.Success_1'(s(X3,X8))),s(X4,X10))) != s('type.pair.prod'('type.infer.exc'(X3,X2),X4),happ(s(fun(X1,'type.pair.prod'('type.infer.exc'(X3,X2),X4)),X6),s(X1,X9)))) & ! [X11] : (s('type.option.option'(X0),X5) != s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X11))) | s('type.pair.prod'('type.infer.exc'(X3,X2),X4),'const.pair.,_2'(s('type.infer.exc'(X3,X2),'const.infer.Success_1'(s(X3,X8))),s(X4,X10))) != s('type.pair.prod'('type.infer.exc'(X3,X2),X4),happ(s(fun(X1,'type.pair.prod'('type.infer.exc'(X3,X2),X4)),happ(s(fun(X0,fun(X1,'type.pair.prod'('type.infer.exc'(X3,X2),X4))),X7),s(X0,X11))),s(X1,X9))))) | s('type.pair.prod'('type.infer.exc'(X3,X2),X4),'const.pair.,_2'(s('type.infer.exc'(X3,X2),'const.infer.Success_1'(s(X3,X8))),s(X4,X10))) = s('type.pair.prod'('type.infer.exc'(X3,X2),X4),happ(s(fun(X1,'type.pair.prod'('type.infer.exc'(X3,X2),X4)),'const.option.option_CASE_3'(s('type.option.option'(X0),X5),s(fun(X1,'type.pair.prod'('type.infer.exc'(X3,X2),X4)),X6),s(fun(X0,fun(X1,'type.pair.prod'('type.infer.exc'(X3,X2),X4))),X7))),s(X1,X9)))))),
  inference(rectify,[],[f155])).
fof(f155,plain,(
  ! [X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10] : ((s('type.pair.prod'('type.infer.exc'(X3,X2),X4),'const.pair.,_2'(s('type.infer.exc'(X3,X2),'const.infer.Success_1'(s(X3,X8))),s(X4,X10))) != s('type.pair.prod'('type.infer.exc'(X3,X2),X4),happ(s(fun(X1,'type.pair.prod'('type.infer.exc'(X3,X2),X4)),'const.option.option_CASE_3'(s('type.option.option'(X0),X5),s(fun(X1,'type.pair.prod'('type.infer.exc'(X3,X2),X4)),X6),s(fun(X0,fun(X1,'type.pair.prod'('type.infer.exc'(X3,X2),X4))),X7))),s(X1,X9))) | (s('type.option.option'(X0),'const.option.NONE_0') = s('type.option.option'(X0),X5) & s('type.pair.prod'('type.infer.exc'(X3,X2),X4),'const.pair.,_2'(s('type.infer.exc'(X3,X2),'const.infer.Success_1'(s(X3,X8))),s(X4,X10))) = s('type.pair.prod'('type.infer.exc'(X3,X2),X4),happ(s(fun(X1,'type.pair.prod'('type.infer.exc'(X3,X2),X4)),X6),s(X1,X9)))) | ? [X11] : (s('type.option.option'(X0),X5) = s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X11))) & s('type.pair.prod'('type.infer.exc'(X3,X2),X4),'const.pair.,_2'(s('type.infer.exc'(X3,X2),'const.infer.Success_1'(s(X3,X8))),s(X4,X10))) = s('type.pair.prod'('type.infer.exc'(X3,X2),X4),happ(s(fun(X1,'type.pair.prod'('type.infer.exc'(X3,X2),X4)),happ(s(fun(X0,fun(X1,'type.pair.prod'('type.infer.exc'(X3,X2),X4))),X7),s(X0,X11))),s(X1,X9))))) & (((s('type.option.option'(X0),'const.option.NONE_0') != s('type.option.option'(X0),X5) | s('type.pair.prod'('type.infer.exc'(X3,X2),X4),'const.pair.,_2'(s('type.infer.exc'(X3,X2),'const.infer.Success_1'(s(X3,X8))),s(X4,X10))) != s('type.pair.prod'('type.infer.exc'(X3,X2),X4),happ(s(fun(X1,'type.pair.prod'('type.infer.exc'(X3,X2),X4)),X6),s(X1,X9)))) & ! [X11] : (s('type.option.option'(X0),X5) != s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X11))) | s('type.pair.prod'('type.infer.exc'(X3,X2),X4),'const.pair.,_2'(s('type.infer.exc'(X3,X2),'const.infer.Success_1'(s(X3,X8))),s(X4,X10))) != s('type.pair.prod'('type.infer.exc'(X3,X2),X4),happ(s(fun(X1,'type.pair.prod'('type.infer.exc'(X3,X2),X4)),happ(s(fun(X0,fun(X1,'type.pair.prod'('type.infer.exc'(X3,X2),X4))),X7),s(X0,X11))),s(X1,X9))))) | s('type.pair.prod'('type.infer.exc'(X3,X2),X4),'const.pair.,_2'(s('type.infer.exc'(X3,X2),'const.infer.Success_1'(s(X3,X8))),s(X4,X10))) = s('type.pair.prod'('type.infer.exc'(X3,X2),X4),happ(s(fun(X1,'type.pair.prod'('type.infer.exc'(X3,X2),X4)),'const.option.option_CASE_3'(s('type.option.option'(X0),X5),s(fun(X1,'type.pair.prod'('type.infer.exc'(X3,X2),X4)),X6),s(fun(X0,fun(X1,'type.pair.prod'('type.infer.exc'(X3,X2),X4))),X7))),s(X1,X9)))))),
  inference(flattening,[],[f154])).
fof(f154,plain,(
  ! [X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10] : ((s('type.pair.prod'('type.infer.exc'(X3,X2),X4),'const.pair.,_2'(s('type.infer.exc'(X3,X2),'const.infer.Success_1'(s(X3,X8))),s(X4,X10))) != s('type.pair.prod'('type.infer.exc'(X3,X2),X4),happ(s(fun(X1,'type.pair.prod'('type.infer.exc'(X3,X2),X4)),'const.option.option_CASE_3'(s('type.option.option'(X0),X5),s(fun(X1,'type.pair.prod'('type.infer.exc'(X3,X2),X4)),X6),s(fun(X0,fun(X1,'type.pair.prod'('type.infer.exc'(X3,X2),X4))),X7))),s(X1,X9))) | ((s('type.option.option'(X0),'const.option.NONE_0') = s('type.option.option'(X0),X5) & s('type.pair.prod'('type.infer.exc'(X3,X2),X4),'const.pair.,_2'(s('type.infer.exc'(X3,X2),'const.infer.Success_1'(s(X3,X8))),s(X4,X10))) = s('type.pair.prod'('type.infer.exc'(X3,X2),X4),happ(s(fun(X1,'type.pair.prod'('type.infer.exc'(X3,X2),X4)),X6),s(X1,X9)))) | ? [X11] : (s('type.option.option'(X0),X5) = s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X11))) & s('type.pair.prod'('type.infer.exc'(X3,X2),X4),'const.pair.,_2'(s('type.infer.exc'(X3,X2),'const.infer.Success_1'(s(X3,X8))),s(X4,X10))) = s('type.pair.prod'('type.infer.exc'(X3,X2),X4),happ(s(fun(X1,'type.pair.prod'('type.infer.exc'(X3,X2),X4)),happ(s(fun(X0,fun(X1,'type.pair.prod'('type.infer.exc'(X3,X2),X4))),X7),s(X0,X11))),s(X1,X9)))))) & (((s('type.option.option'(X0),'const.option.NONE_0') != s('type.option.option'(X0),X5) | s('type.pair.prod'('type.infer.exc'(X3,X2),X4),'const.pair.,_2'(s('type.infer.exc'(X3,X2),'const.infer.Success_1'(s(X3,X8))),s(X4,X10))) != s('type.pair.prod'('type.infer.exc'(X3,X2),X4),happ(s(fun(X1,'type.pair.prod'('type.infer.exc'(X3,X2),X4)),X6),s(X1,X9)))) & ! [X11] : (s('type.option.option'(X0),X5) != s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X11))) | s('type.pair.prod'('type.infer.exc'(X3,X2),X4),'const.pair.,_2'(s('type.infer.exc'(X3,X2),'const.infer.Success_1'(s(X3,X8))),s(X4,X10))) != s('type.pair.prod'('type.infer.exc'(X3,X2),X4),happ(s(fun(X1,'type.pair.prod'('type.infer.exc'(X3,X2),X4)),happ(s(fun(X0,fun(X1,'type.pair.prod'('type.infer.exc'(X3,X2),X4))),X7),s(X0,X11))),s(X1,X9))))) | s('type.pair.prod'('type.infer.exc'(X3,X2),X4),'const.pair.,_2'(s('type.infer.exc'(X3,X2),'const.infer.Success_1'(s(X3,X8))),s(X4,X10))) = s('type.pair.prod'('type.infer.exc'(X3,X2),X4),happ(s(fun(X1,'type.pair.prod'('type.infer.exc'(X3,X2),X4)),'const.option.option_CASE_3'(s('type.option.option'(X0),X5),s(fun(X1,'type.pair.prod'('type.infer.exc'(X3,X2),X4)),X6),s(fun(X0,fun(X1,'type.pair.prod'('type.infer.exc'(X3,X2),X4))),X7))),s(X1,X9)))))),
  inference(nnf_transformation,[],[f119])).
fof(f119,plain,(
  ! [X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10] : (s('type.pair.prod'('type.infer.exc'(X3,X2),X4),'const.pair.,_2'(s('type.infer.exc'(X3,X2),'const.infer.Success_1'(s(X3,X8))),s(X4,X10))) = s('type.pair.prod'('type.infer.exc'(X3,X2),X4),happ(s(fun(X1,'type.pair.prod'('type.infer.exc'(X3,X2),X4)),'const.option.option_CASE_3'(s('type.option.option'(X0),X5),s(fun(X1,'type.pair.prod'('type.infer.exc'(X3,X2),X4)),X6),s(fun(X0,fun(X1,'type.pair.prod'('type.infer.exc'(X3,X2),X4))),X7))),s(X1,X9))) <=> ((s('type.option.option'(X0),'const.option.NONE_0') = s('type.option.option'(X0),X5) & s('type.pair.prod'('type.infer.exc'(X3,X2),X4),'const.pair.,_2'(s('type.infer.exc'(X3,X2),'const.infer.Success_1'(s(X3,X8))),s(X4,X10))) = s('type.pair.prod'('type.infer.exc'(X3,X2),X4),happ(s(fun(X1,'type.pair.prod'('type.infer.exc'(X3,X2),X4)),X6),s(X1,X9)))) | ? [X11] : (s('type.option.option'(X0),X5) = s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X11))) & s('type.pair.prod'('type.infer.exc'(X3,X2),X4),'const.pair.,_2'(s('type.infer.exc'(X3,X2),'const.infer.Success_1'(s(X3,X8))),s(X4,X10))) = s('type.pair.prod'('type.infer.exc'(X3,X2),X4),happ(s(fun(X1,'type.pair.prod'('type.infer.exc'(X3,X2),X4)),happ(s(fun(X0,fun(X1,'type.pair.prod'('type.infer.exc'(X3,X2),X4))),X7),s(X0,X11))),s(X1,X9))))))),
  inference(flattening,[],[f118])).
fof(f118,plain,(
  ! [X0,X1,X2,X3,X4] : ! [X5,X6,X7,X8,X9,X10] : (s('type.pair.prod'('type.infer.exc'(X3,X2),X4),'const.pair.,_2'(s('type.infer.exc'(X3,X2),'const.infer.Success_1'(s(X3,X8))),s(X4,X10))) = s('type.pair.prod'('type.infer.exc'(X3,X2),X4),happ(s(fun(X1,'type.pair.prod'('type.infer.exc'(X3,X2),X4)),'const.option.option_CASE_3'(s('type.option.option'(X0),X5),s(fun(X1,'type.pair.prod'('type.infer.exc'(X3,X2),X4)),X6),s(fun(X0,fun(X1,'type.pair.prod'('type.infer.exc'(X3,X2),X4))),X7))),s(X1,X9))) <=> ((s('type.option.option'(X0),'const.option.NONE_0') = s('type.option.option'(X0),X5) & s('type.pair.prod'('type.infer.exc'(X3,X2),X4),'const.pair.,_2'(s('type.infer.exc'(X3,X2),'const.infer.Success_1'(s(X3,X8))),s(X4,X10))) = s('type.pair.prod'('type.infer.exc'(X3,X2),X4),happ(s(fun(X1,'type.pair.prod'('type.infer.exc'(X3,X2),X4)),X6),s(X1,X9)))) | ? [X11] : (s('type.option.option'(X0),X5) = s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X11))) & s('type.pair.prod'('type.infer.exc'(X3,X2),X4),'const.pair.,_2'(s('type.infer.exc'(X3,X2),'const.infer.Success_1'(s(X3,X8))),s(X4,X10))) = s('type.pair.prod'('type.infer.exc'(X3,X2),X4),happ(s(fun(X1,'type.pair.prod'('type.infer.exc'(X3,X2),X4)),happ(s(fun(X0,fun(X1,'type.pair.prod'('type.infer.exc'(X3,X2),X4))),X7),s(X0,X11))),s(X1,X9))))))),
  inference(rectify,[],[f22])).
fof(f22,axiom,(
  ! [X12,X11,X19,X14,X35] : ! [X36,X20,X21,X15,X16,X18] : (s('type.pair.prod'('type.infer.exc'(X14,X19),X35),'const.pair.,_2'(s('type.infer.exc'(X14,X19),'const.infer.Success_1'(s(X14,X15))),s(X35,X18))) = s('type.pair.prod'('type.infer.exc'(X14,X19),X35),happ(s(fun(X11,'type.pair.prod'('type.infer.exc'(X14,X19),X35)),'const.option.option_CASE_3'(s('type.option.option'(X12),X36),s(fun(X11,'type.pair.prod'('type.infer.exc'(X14,X19),X35)),X20),s(fun(X12,fun(X11,'type.pair.prod'('type.infer.exc'(X14,X19),X35))),X21))),s(X11,X16))) <=> ((s('type.option.option'(X12),'const.option.NONE_0') = s('type.option.option'(X12),X36) & s('type.pair.prod'('type.infer.exc'(X14,X19),X35),'const.pair.,_2'(s('type.infer.exc'(X14,X19),'const.infer.Success_1'(s(X14,X15))),s(X35,X18))) = s('type.pair.prod'('type.infer.exc'(X14,X19),X35),happ(s(fun(X11,'type.pair.prod'('type.infer.exc'(X14,X19),X35)),X20),s(X11,X16)))) | ? [X10] : (s('type.option.option'(X12),X36) = s('type.option.option'(X12),'const.option.SOME_1'(s(X12,X10))) & s('type.pair.prod'('type.infer.exc'(X14,X19),X35),'const.pair.,_2'(s('type.infer.exc'(X14,X19),'const.infer.Success_1'(s(X14,X15))),s(X35,X18))) = s('type.pair.prod'('type.infer.exc'(X14,X19),X35),happ(s(fun(X11,'type.pair.prod'('type.infer.exc'(X14,X19),X35)),happ(s(fun(X12,fun(X11,'type.pair.prod'('type.infer.exc'(X14,X19),X35))),X21),s(X12,X10))),s(X11,X16))))))),
  file('thm.inferProps.success_eqns|split|8','thm.inferProps.inferProps_39_prove_ltb')).
fof(f235,plain,(
  ( ! [X6,X4,X2,X0,X10,X8,X7,X5,X3,X1,X9] : (s('type.pair.prod'('type.infer.exc'(X3,X2),X4),'const.pair.,_2'(s('type.infer.exc'(X3,X2),'const.infer.Success_1'(s(X3,X8))),s(X4,X10))) != s('type.pair.prod'('type.infer.exc'(X3,X2),X4),happ(s(fun(X1,'type.pair.prod'('type.infer.exc'(X3,X2),X4)),'const.option.option_CASE_3'(s('type.option.option'(X0),X5),s(fun(X1,'type.pair.prod'('type.infer.exc'(X3,X2),X4)),X6),s(fun(X0,fun(X1,'type.pair.prod'('type.infer.exc'(X3,X2),X4))),X7))),s(X1,X9))) | s('type.pair.prod'('type.infer.exc'(X3,X2),X4),'const.pair.,_2'(s('type.infer.exc'(X3,X2),'const.infer.Success_1'(s(X3,X8))),s(X4,X10))) = s('type.pair.prod'('type.infer.exc'(X3,X2),X4),happ(s(fun(X1,'type.pair.prod'('type.infer.exc'(X3,X2),X4)),X6),s(X1,X9))) | s('type.option.option'(X0),X5) = s('type.option.option'(X0),'const.option.SOME_1'(s(X0,sK9(X10,X9,X8,X7,X6,X5,X4,X3,X2,X1,X0))))) )),
  inference(cnf_transformation,[],[f157])).
fof(f236,plain,(
  ( ! [X6,X4,X2,X0,X10,X8,X7,X5,X3,X1,X9] : (s('type.pair.prod'('type.infer.exc'(X3,X2),X4),'const.pair.,_2'(s('type.infer.exc'(X3,X2),'const.infer.Success_1'(s(X3,X8))),s(X4,X10))) = s('type.pair.prod'('type.infer.exc'(X3,X2),X4),happ(s(fun(X1,'type.pair.prod'('type.infer.exc'(X3,X2),X4)),happ(s(fun(X0,fun(X1,'type.pair.prod'('type.infer.exc'(X3,X2),X4))),X7),s(X0,sK9(X10,X9,X8,X7,X6,X5,X4,X3,X2,X1,X0)))),s(X1,X9))) | s('type.option.option'(X0),'const.option.NONE_0') = s('type.option.option'(X0),X5) | s('type.pair.prod'('type.infer.exc'(X3,X2),X4),'const.pair.,_2'(s('type.infer.exc'(X3,X2),'const.infer.Success_1'(s(X3,X8))),s(X4,X10))) != s('type.pair.prod'('type.infer.exc'(X3,X2),X4),happ(s(fun(X1,'type.pair.prod'('type.infer.exc'(X3,X2),X4)),'const.option.option_CASE_3'(s('type.option.option'(X0),X5),s(fun(X1,'type.pair.prod'('type.infer.exc'(X3,X2),X4)),X6),s(fun(X0,fun(X1,'type.pair.prod'('type.infer.exc'(X3,X2),X4))),X7))),s(X1,X9)))) )),
  inference(cnf_transformation,[],[f157])).
fof(f237,plain,(
  ( ! [X6,X4,X2,X0,X10,X8,X7,X5,X3,X1,X9] : (s('type.pair.prod'('type.infer.exc'(X3,X2),X4),'const.pair.,_2'(s('type.infer.exc'(X3,X2),'const.infer.Success_1'(s(X3,X8))),s(X4,X10))) = s('type.pair.prod'('type.infer.exc'(X3,X2),X4),happ(s(fun(X1,'type.pair.prod'('type.infer.exc'(X3,X2),X4)),happ(s(fun(X0,fun(X1,'type.pair.prod'('type.infer.exc'(X3,X2),X4))),X7),s(X0,sK9(X10,X9,X8,X7,X6,X5,X4,X3,X2,X1,X0)))),s(X1,X9))) | s('type.pair.prod'('type.infer.exc'(X3,X2),X4),'const.pair.,_2'(s('type.infer.exc'(X3,X2),'const.infer.Success_1'(s(X3,X8))),s(X4,X10))) = s('type.pair.prod'('type.infer.exc'(X3,X2),X4),happ(s(fun(X1,'type.pair.prod'('type.infer.exc'(X3,X2),X4)),X6),s(X1,X9))) | s('type.pair.prod'('type.infer.exc'(X3,X2),X4),'const.pair.,_2'(s('type.infer.exc'(X3,X2),'const.infer.Success_1'(s(X3,X8))),s(X4,X10))) != s('type.pair.prod'('type.infer.exc'(X3,X2),X4),happ(s(fun(X1,'type.pair.prod'('type.infer.exc'(X3,X2),X4)),'const.option.option_CASE_3'(s('type.option.option'(X0),X5),s(fun(X1,'type.pair.prod'('type.infer.exc'(X3,X2),X4)),X6),s(fun(X0,fun(X1,'type.pair.prod'('type.infer.exc'(X3,X2),X4))),X7))),s(X1,X9)))) )),
  inference(cnf_transformation,[],[f157])).
fof(f238,plain,(
  ( ! [X6,X4,X2,X0,X10,X8,X7,X5,X3,X1,X9] : (s('type.option.option'(X0),'const.option.NONE_0') != s('type.option.option'(X0),X5) | s('type.pair.prod'('type.infer.exc'(X3,X2),X4),'const.pair.,_2'(s('type.infer.exc'(X3,X2),'const.infer.Success_1'(s(X3,X8))),s(X4,X10))) != s('type.pair.prod'('type.infer.exc'(X3,X2),X4),happ(s(fun(X1,'type.pair.prod'('type.infer.exc'(X3,X2),X4)),X6),s(X1,X9))) | s('type.pair.prod'('type.infer.exc'(X3,X2),X4),'const.pair.,_2'(s('type.infer.exc'(X3,X2),'const.infer.Success_1'(s(X3,X8))),s(X4,X10))) = s('type.pair.prod'('type.infer.exc'(X3,X2),X4),happ(s(fun(X1,'type.pair.prod'('type.infer.exc'(X3,X2),X4)),'const.option.option_CASE_3'(s('type.option.option'(X0),X5),s(fun(X1,'type.pair.prod'('type.infer.exc'(X3,X2),X4)),X6),s(fun(X0,fun(X1,'type.pair.prod'('type.infer.exc'(X3,X2),X4))),X7))),s(X1,X9)))) )),
  inference(cnf_transformation,[],[f157])).
fof(f239,plain,(
  ( ! [X6,X4,X2,X0,X10,X8,X7,X5,X3,X1,X11,X9] : (s('type.option.option'(X0),X5) != s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X11))) | s('type.pair.prod'('type.infer.exc'(X3,X2),X4),'const.pair.,_2'(s('type.infer.exc'(X3,X2),'const.infer.Success_1'(s(X3,X8))),s(X4,X10))) != s('type.pair.prod'('type.infer.exc'(X3,X2),X4),happ(s(fun(X1,'type.pair.prod'('type.infer.exc'(X3,X2),X4)),happ(s(fun(X0,fun(X1,'type.pair.prod'('type.infer.exc'(X3,X2),X4))),X7),s(X0,X11))),s(X1,X9))) | s('type.pair.prod'('type.infer.exc'(X3,X2),X4),'const.pair.,_2'(s('type.infer.exc'(X3,X2),'const.infer.Success_1'(s(X3,X8))),s(X4,X10))) = s('type.pair.prod'('type.infer.exc'(X3,X2),X4),happ(s(fun(X1,'type.pair.prod'('type.infer.exc'(X3,X2),X4)),'const.option.option_CASE_3'(s('type.option.option'(X0),X5),s(fun(X1,'type.pair.prod'('type.infer.exc'(X3,X2),X4)),X6),s(fun(X0,fun(X1,'type.pair.prod'('type.infer.exc'(X3,X2),X4))),X7))),s(X1,X9)))) )),
  inference(cnf_transformation,[],[f157])).
fof(f229,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraints_3'(s('type.list.list'('type.infer_t.infer_t'),X0),s('type.list.list'('type.infer_t.infer_t'),X1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X2))) != s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'const.infer.Success_1'(s('type.one.one',X4))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X3))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.infer_t.infer_t'),X0))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.infer_t.infer_t'),X1)))) )),
  inference(cnf_transformation,[],[f153])).
fof(f231,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraints_3'(s('type.list.list'('type.infer_t.infer_t'),X0),s('type.list.list'('type.infer_t.infer_t'),X1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X2))) != s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'const.infer.Success_1'(s('type.one.one',X4))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X3))) | s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X2))) = s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X3)))) )),
  inference(cnf_transformation,[],[f153])).
fof(f226,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraint_3'(s('type.infer_t.infer_t',X0),s('type.infer_t.infer_t',X1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X2))) != s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'const.infer.Success_1'(s('type.one.one',X4))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X3))) | s('type.option.option'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.option.SOME_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK8(X4,X3,X2,X1,X0)))) = s('type.option.option'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.unify.t_unify_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X2))),s('type.infer_t.infer_t',X0),s('type.infer_t.infer_t',X1)))) )),
  inference(cnf_transformation,[],[f151])).
fof(f151,plain,(
  ! [X0,X1,X2,X3,X4] : ((s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraint_3'(s('type.infer_t.infer_t',X0),s('type.infer_t.infer_t',X1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X2))) != s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'const.infer.Success_1'(s('type.one.one',X4))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X3))) | (s('type.one.one','const.one.one_0') = s('type.one.one',X4) & (s('type.option.option'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.option.SOME_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK8(X4,X3,X2,X1,X0)))) = s('type.option.option'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.unify.t_unify_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X2))),s('type.infer_t.infer_t',X0),s('type.infer_t.infer_t',X1))) & s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X3) = s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.infer.infer_st_subst_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK8(X4,X3,X2,X1,X0)))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X2)))))) & (s('type.one.one','const.one.one_0') != s('type.one.one',X4) | ! [X5] : (s('type.option.option'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.option.SOME_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X5))) != s('type.option.option'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.unify.t_unify_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X2))),s('type.infer_t.infer_t',X0),s('type.infer_t.infer_t',X1))) | s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X3) != s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.infer.infer_st_subst_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X5))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X2)))) | s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraint_3'(s('type.infer_t.infer_t',X0),s('type.infer_t.infer_t',X1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X2))) = s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'const.infer.Success_1'(s('type.one.one',X4))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X3)))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK8])],[f150])).
fof(f150,plain,(
  ! [X0,X1,X2,X3,X4] : ((s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraint_3'(s('type.infer_t.infer_t',X0),s('type.infer_t.infer_t',X1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X2))) != s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'const.infer.Success_1'(s('type.one.one',X4))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X3))) | (s('type.one.one','const.one.one_0') = s('type.one.one',X4) & ? [X6] : (s('type.option.option'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.option.SOME_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X6))) = s('type.option.option'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.unify.t_unify_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X2))),s('type.infer_t.infer_t',X0),s('type.infer_t.infer_t',X1))) & s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X3) = s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.infer.infer_st_subst_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X6))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X2)))))) & (s('type.one.one','const.one.one_0') != s('type.one.one',X4) | ! [X5] : (s('type.option.option'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.option.SOME_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X5))) != s('type.option.option'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.unify.t_unify_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X2))),s('type.infer_t.infer_t',X0),s('type.infer_t.infer_t',X1))) | s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X3) != s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.infer.infer_st_subst_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X5))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X2)))) | s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraint_3'(s('type.infer_t.infer_t',X0),s('type.infer_t.infer_t',X1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X2))) = s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'const.infer.Success_1'(s('type.one.one',X4))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X3)))))),
  inference(rectify,[],[f149])).
fof(f149,plain,(
  ! [X0,X1,X2,X3,X4] : ((s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraint_3'(s('type.infer_t.infer_t',X0),s('type.infer_t.infer_t',X1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X2))) != s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'const.infer.Success_1'(s('type.one.one',X4))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X3))) | (s('type.one.one','const.one.one_0') = s('type.one.one',X4) & ? [X5] : (s('type.option.option'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.option.SOME_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X5))) = s('type.option.option'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.unify.t_unify_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X2))),s('type.infer_t.infer_t',X0),s('type.infer_t.infer_t',X1))) & s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X3) = s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.infer.infer_st_subst_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X5))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X2)))))) & (s('type.one.one','const.one.one_0') != s('type.one.one',X4) | ! [X5] : (s('type.option.option'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.option.SOME_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X5))) != s('type.option.option'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.unify.t_unify_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X2))),s('type.infer_t.infer_t',X0),s('type.infer_t.infer_t',X1))) | s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X3) != s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.infer.infer_st_subst_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X5))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X2)))) | s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraint_3'(s('type.infer_t.infer_t',X0),s('type.infer_t.infer_t',X1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X2))) = s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'const.infer.Success_1'(s('type.one.one',X4))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X3)))))),
  inference(flattening,[],[f148])).
fof(f148,plain,(
  ! [X0,X1,X2,X3,X4] : ((s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraint_3'(s('type.infer_t.infer_t',X0),s('type.infer_t.infer_t',X1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X2))) != s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'const.infer.Success_1'(s('type.one.one',X4))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X3))) | (s('type.one.one','const.one.one_0') = s('type.one.one',X4) & ? [X5] : (s('type.option.option'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.option.SOME_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X5))) = s('type.option.option'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.unify.t_unify_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X2))),s('type.infer_t.infer_t',X0),s('type.infer_t.infer_t',X1))) & s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X3) = s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.infer.infer_st_subst_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X5))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X2)))))) & ((s('type.one.one','const.one.one_0') != s('type.one.one',X4) | ! [X5] : (s('type.option.option'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.option.SOME_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X5))) != s('type.option.option'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.unify.t_unify_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X2))),s('type.infer_t.infer_t',X0),s('type.infer_t.infer_t',X1))) | s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X3) != s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.infer.infer_st_subst_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X5))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X2))))) | s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraint_3'(s('type.infer_t.infer_t',X0),s('type.infer_t.infer_t',X1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X2))) = s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'const.infer.Success_1'(s('type.one.one',X4))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X3)))))),
  inference(nnf_transformation,[],[f116])).
fof(f116,plain,(
  ! [X0,X1,X2,X3,X4] : (s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraint_3'(s('type.infer_t.infer_t',X0),s('type.infer_t.infer_t',X1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X2))) = s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'const.infer.Success_1'(s('type.one.one',X4))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X3))) <=> (s('type.one.one','const.one.one_0') = s('type.one.one',X4) & ? [X5] : (s('type.option.option'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.option.SOME_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X5))) = s('type.option.option'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.unify.t_unify_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X2))),s('type.infer_t.infer_t',X0),s('type.infer_t.infer_t',X1))) & s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X3) = s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.infer.infer_st_subst_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X5))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X2))))))),
  inference(rectify,[],[f14])).
fof(f14,axiom,(
  ! [X25,X27,X16,X18,X10] : (s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraint_3'(s('type.infer_t.infer_t',X25),s('type.infer_t.infer_t',X27),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X16))) = s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'const.infer.Success_1'(s('type.one.one',X10))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X18))) <=> (s('type.one.one','const.one.one_0') = s('type.one.one',X10) & ? [X29] : (s('type.option.option'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.option.SOME_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X29))) = s('type.option.option'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.unify.t_unify_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X16))),s('type.infer_t.infer_t',X25),s('type.infer_t.infer_t',X27))) & s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X18) = s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.infer.infer_st_subst_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X29))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X16))))))),
  file('thm.inferProps.success_eqns|split|8','thm.inferProps.add_constraint_success')).
fof(f227,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraint_3'(s('type.infer_t.infer_t',X0),s('type.infer_t.infer_t',X1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X2))) != s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'const.infer.Success_1'(s('type.one.one',X4))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X3))) | s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X3) = s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.infer.infer_st_subst_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK8(X4,X3,X2,X1,X0)))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X2)))) )),
  inference(cnf_transformation,[],[f151])).
fof(f255,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X3) != s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.infer.infer_st_subst_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X5))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X2))) | s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraint_3'(s('type.infer_t.infer_t',X0),s('type.infer_t.infer_t',X1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X2))) = s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'const.infer.Success_1'(s('type.one.one',X4))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X3))) | s('type.option.option'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.option.SOME_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X5))) != s('type.option.option'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.unify.t_unify_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X2))),s('type.infer_t.infer_t',X0),s('type.infer_t.infer_t',X1)))) )),
  inference(subsumption_resolution,[],[f228,f165])).
fof(f228,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraint_3'(s('type.infer_t.infer_t',X0),s('type.infer_t.infer_t',X1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X2))) = s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'const.infer.Success_1'(s('type.one.one',X4))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X3))) | s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X3) != s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.infer.infer_st_subst_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X5))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X2))) | s('type.option.option'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.option.SOME_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X5))) != s('type.option.option'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.unify.t_unify_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X2))),s('type.infer_t.infer_t',X0),s('type.infer_t.infer_t',X1))) | s('type.one.one','const.one.one_0') != s('type.one.one',X4)) )),
  inference(cnf_transformation,[],[f151])).
fof(f222,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'(X2,X1),X3),'const.pair.,_2'(s('type.infer.exc'(X2,X1),'const.infer.Success_1'(s(X2,X8))),s(X3,X7))) != s('type.pair.prod'('type.infer.exc'(X2,X1),X3),'const.infer.st_ex_bind_3'(s(fun(X3,'type.pair.prod'('type.infer.exc'(X0,X1),X3)),X4),s(fun(X0,fun(X3,'type.pair.prod'('type.infer.exc'(X2,X1),X3))),X5),s(X3,X6))) | s('type.pair.prod'('type.infer.exc'(X0,X1),X3),happ(s(fun(X3,'type.pair.prod'('type.infer.exc'(X0,X1),X3)),X4),s(X3,X6))) = s('type.pair.prod'('type.infer.exc'(X0,X1),X3),'const.pair.,_2'(s('type.infer.exc'(X0,X1),'const.infer.Success_1'(s(X0,sK6(X8,X7,X6,X5,X4,X3,X2,X1,X0)))),s(X3,sK7(X8,X7,X6,X5,X4,X3,X2,X1,X0))))) )),
  inference(cnf_transformation,[],[f147])).
fof(f147,plain,(
  ! [X0,X1,X2,X3,X4,X5,X6,X7,X8] : ((s('type.pair.prod'('type.infer.exc'(X2,X1),X3),'const.pair.,_2'(s('type.infer.exc'(X2,X1),'const.infer.Success_1'(s(X2,X8))),s(X3,X7))) != s('type.pair.prod'('type.infer.exc'(X2,X1),X3),'const.infer.st_ex_bind_3'(s(fun(X3,'type.pair.prod'('type.infer.exc'(X0,X1),X3)),X4),s(fun(X0,fun(X3,'type.pair.prod'('type.infer.exc'(X2,X1),X3))),X5),s(X3,X6))) | (s('type.pair.prod'('type.infer.exc'(X0,X1),X3),happ(s(fun(X3,'type.pair.prod'('type.infer.exc'(X0,X1),X3)),X4),s(X3,X6))) = s('type.pair.prod'('type.infer.exc'(X0,X1),X3),'const.pair.,_2'(s('type.infer.exc'(X0,X1),'const.infer.Success_1'(s(X0,sK6(X8,X7,X6,X5,X4,X3,X2,X1,X0)))),s(X3,sK7(X8,X7,X6,X5,X4,X3,X2,X1,X0)))) & s('type.pair.prod'('type.infer.exc'(X2,X1),X3),'const.pair.,_2'(s('type.infer.exc'(X2,X1),'const.infer.Success_1'(s(X2,X8))),s(X3,X7))) = s('type.pair.prod'('type.infer.exc'(X2,X1),X3),happ(s(fun(X3,'type.pair.prod'('type.infer.exc'(X2,X1),X3)),happ(s(fun(X0,fun(X3,'type.pair.prod'('type.infer.exc'(X2,X1),X3))),X5),s(X0,sK6(X8,X7,X6,X5,X4,X3,X2,X1,X0)))),s(X3,sK7(X8,X7,X6,X5,X4,X3,X2,X1,X0)))))) & (! [X9,X10] : (s('type.pair.prod'('type.infer.exc'(X0,X1),X3),'const.pair.,_2'(s('type.infer.exc'(X0,X1),'const.infer.Success_1'(s(X0,X9))),s(X3,X10))) != s('type.pair.prod'('type.infer.exc'(X0,X1),X3),happ(s(fun(X3,'type.pair.prod'('type.infer.exc'(X0,X1),X3)),X4),s(X3,X6))) | s('type.pair.prod'('type.infer.exc'(X2,X1),X3),'const.pair.,_2'(s('type.infer.exc'(X2,X1),'const.infer.Success_1'(s(X2,X8))),s(X3,X7))) != s('type.pair.prod'('type.infer.exc'(X2,X1),X3),happ(s(fun(X3,'type.pair.prod'('type.infer.exc'(X2,X1),X3)),happ(s(fun(X0,fun(X3,'type.pair.prod'('type.infer.exc'(X2,X1),X3))),X5),s(X0,X9))),s(X3,X10)))) | s('type.pair.prod'('type.infer.exc'(X2,X1),X3),'const.pair.,_2'(s('type.infer.exc'(X2,X1),'const.infer.Success_1'(s(X2,X8))),s(X3,X7))) = s('type.pair.prod'('type.infer.exc'(X2,X1),X3),'const.infer.st_ex_bind_3'(s(fun(X3,'type.pair.prod'('type.infer.exc'(X0,X1),X3)),X4),s(fun(X0,fun(X3,'type.pair.prod'('type.infer.exc'(X2,X1),X3))),X5),s(X3,X6)))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK6,sK7])],[f146])).
fof(f146,plain,(
  ! [X0,X1,X2,X3,X4,X5,X6,X7,X8] : ((s('type.pair.prod'('type.infer.exc'(X2,X1),X3),'const.pair.,_2'(s('type.infer.exc'(X2,X1),'const.infer.Success_1'(s(X2,X8))),s(X3,X7))) != s('type.pair.prod'('type.infer.exc'(X2,X1),X3),'const.infer.st_ex_bind_3'(s(fun(X3,'type.pair.prod'('type.infer.exc'(X0,X1),X3)),X4),s(fun(X0,fun(X3,'type.pair.prod'('type.infer.exc'(X2,X1),X3))),X5),s(X3,X6))) | ? [X11,X12] : (s('type.pair.prod'('type.infer.exc'(X0,X1),X3),'const.pair.,_2'(s('type.infer.exc'(X0,X1),'const.infer.Success_1'(s(X0,X11))),s(X3,X12))) = s('type.pair.prod'('type.infer.exc'(X0,X1),X3),happ(s(fun(X3,'type.pair.prod'('type.infer.exc'(X0,X1),X3)),X4),s(X3,X6))) & s('type.pair.prod'('type.infer.exc'(X2,X1),X3),'const.pair.,_2'(s('type.infer.exc'(X2,X1),'const.infer.Success_1'(s(X2,X8))),s(X3,X7))) = s('type.pair.prod'('type.infer.exc'(X2,X1),X3),happ(s(fun(X3,'type.pair.prod'('type.infer.exc'(X2,X1),X3)),happ(s(fun(X0,fun(X3,'type.pair.prod'('type.infer.exc'(X2,X1),X3))),X5),s(X0,X11))),s(X3,X12))))) & (! [X9,X10] : (s('type.pair.prod'('type.infer.exc'(X0,X1),X3),'const.pair.,_2'(s('type.infer.exc'(X0,X1),'const.infer.Success_1'(s(X0,X9))),s(X3,X10))) != s('type.pair.prod'('type.infer.exc'(X0,X1),X3),happ(s(fun(X3,'type.pair.prod'('type.infer.exc'(X0,X1),X3)),X4),s(X3,X6))) | s('type.pair.prod'('type.infer.exc'(X2,X1),X3),'const.pair.,_2'(s('type.infer.exc'(X2,X1),'const.infer.Success_1'(s(X2,X8))),s(X3,X7))) != s('type.pair.prod'('type.infer.exc'(X2,X1),X3),happ(s(fun(X3,'type.pair.prod'('type.infer.exc'(X2,X1),X3)),happ(s(fun(X0,fun(X3,'type.pair.prod'('type.infer.exc'(X2,X1),X3))),X5),s(X0,X9))),s(X3,X10)))) | s('type.pair.prod'('type.infer.exc'(X2,X1),X3),'const.pair.,_2'(s('type.infer.exc'(X2,X1),'const.infer.Success_1'(s(X2,X8))),s(X3,X7))) = s('type.pair.prod'('type.infer.exc'(X2,X1),X3),'const.infer.st_ex_bind_3'(s(fun(X3,'type.pair.prod'('type.infer.exc'(X0,X1),X3)),X4),s(fun(X0,fun(X3,'type.pair.prod'('type.infer.exc'(X2,X1),X3))),X5),s(X3,X6)))))),
  inference(rectify,[],[f145])).
fof(f145,plain,(
  ! [X0,X1,X2,X3,X4,X5,X6,X7,X8] : ((s('type.pair.prod'('type.infer.exc'(X2,X1),X3),'const.pair.,_2'(s('type.infer.exc'(X2,X1),'const.infer.Success_1'(s(X2,X8))),s(X3,X7))) != s('type.pair.prod'('type.infer.exc'(X2,X1),X3),'const.infer.st_ex_bind_3'(s(fun(X3,'type.pair.prod'('type.infer.exc'(X0,X1),X3)),X4),s(fun(X0,fun(X3,'type.pair.prod'('type.infer.exc'(X2,X1),X3))),X5),s(X3,X6))) | ? [X9,X10] : (s('type.pair.prod'('type.infer.exc'(X0,X1),X3),'const.pair.,_2'(s('type.infer.exc'(X0,X1),'const.infer.Success_1'(s(X0,X9))),s(X3,X10))) = s('type.pair.prod'('type.infer.exc'(X0,X1),X3),happ(s(fun(X3,'type.pair.prod'('type.infer.exc'(X0,X1),X3)),X4),s(X3,X6))) & s('type.pair.prod'('type.infer.exc'(X2,X1),X3),'const.pair.,_2'(s('type.infer.exc'(X2,X1),'const.infer.Success_1'(s(X2,X8))),s(X3,X7))) = s('type.pair.prod'('type.infer.exc'(X2,X1),X3),happ(s(fun(X3,'type.pair.prod'('type.infer.exc'(X2,X1),X3)),happ(s(fun(X0,fun(X3,'type.pair.prod'('type.infer.exc'(X2,X1),X3))),X5),s(X0,X9))),s(X3,X10))))) & (! [X9,X10] : (s('type.pair.prod'('type.infer.exc'(X0,X1),X3),'const.pair.,_2'(s('type.infer.exc'(X0,X1),'const.infer.Success_1'(s(X0,X9))),s(X3,X10))) != s('type.pair.prod'('type.infer.exc'(X0,X1),X3),happ(s(fun(X3,'type.pair.prod'('type.infer.exc'(X0,X1),X3)),X4),s(X3,X6))) | s('type.pair.prod'('type.infer.exc'(X2,X1),X3),'const.pair.,_2'(s('type.infer.exc'(X2,X1),'const.infer.Success_1'(s(X2,X8))),s(X3,X7))) != s('type.pair.prod'('type.infer.exc'(X2,X1),X3),happ(s(fun(X3,'type.pair.prod'('type.infer.exc'(X2,X1),X3)),happ(s(fun(X0,fun(X3,'type.pair.prod'('type.infer.exc'(X2,X1),X3))),X5),s(X0,X9))),s(X3,X10)))) | s('type.pair.prod'('type.infer.exc'(X2,X1),X3),'const.pair.,_2'(s('type.infer.exc'(X2,X1),'const.infer.Success_1'(s(X2,X8))),s(X3,X7))) = s('type.pair.prod'('type.infer.exc'(X2,X1),X3),'const.infer.st_ex_bind_3'(s(fun(X3,'type.pair.prod'('type.infer.exc'(X0,X1),X3)),X4),s(fun(X0,fun(X3,'type.pair.prod'('type.infer.exc'(X2,X1),X3))),X5),s(X3,X6)))))),
  inference(nnf_transformation,[],[f115])).
fof(f115,plain,(
  ! [X0,X1,X2,X3,X4,X5,X6,X7,X8] : (s('type.pair.prod'('type.infer.exc'(X2,X1),X3),'const.pair.,_2'(s('type.infer.exc'(X2,X1),'const.infer.Success_1'(s(X2,X8))),s(X3,X7))) = s('type.pair.prod'('type.infer.exc'(X2,X1),X3),'const.infer.st_ex_bind_3'(s(fun(X3,'type.pair.prod'('type.infer.exc'(X0,X1),X3)),X4),s(fun(X0,fun(X3,'type.pair.prod'('type.infer.exc'(X2,X1),X3))),X5),s(X3,X6))) <=> ? [X9,X10] : (s('type.pair.prod'('type.infer.exc'(X0,X1),X3),'const.pair.,_2'(s('type.infer.exc'(X0,X1),'const.infer.Success_1'(s(X0,X9))),s(X3,X10))) = s('type.pair.prod'('type.infer.exc'(X0,X1),X3),happ(s(fun(X3,'type.pair.prod'('type.infer.exc'(X0,X1),X3)),X4),s(X3,X6))) & s('type.pair.prod'('type.infer.exc'(X2,X1),X3),'const.pair.,_2'(s('type.infer.exc'(X2,X1),'const.infer.Success_1'(s(X2,X8))),s(X3,X7))) = s('type.pair.prod'('type.infer.exc'(X2,X1),X3),happ(s(fun(X3,'type.pair.prod'('type.infer.exc'(X2,X1),X3)),happ(s(fun(X0,fun(X3,'type.pair.prod'('type.infer.exc'(X2,X1),X3))),X5),s(X0,X9))),s(X3,X10)))))),
  inference(flattening,[],[f114])).
fof(f114,plain,(
  ! [X0,X1,X2,X3] : ! [X4,X5,X6,X7,X8] : (s('type.pair.prod'('type.infer.exc'(X2,X1),X3),'const.pair.,_2'(s('type.infer.exc'(X2,X1),'const.infer.Success_1'(s(X2,X8))),s(X3,X7))) = s('type.pair.prod'('type.infer.exc'(X2,X1),X3),'const.infer.st_ex_bind_3'(s(fun(X3,'type.pair.prod'('type.infer.exc'(X0,X1),X3)),X4),s(fun(X0,fun(X3,'type.pair.prod'('type.infer.exc'(X2,X1),X3))),X5),s(X3,X6))) <=> ? [X9,X10] : (s('type.pair.prod'('type.infer.exc'(X0,X1),X3),'const.pair.,_2'(s('type.infer.exc'(X0,X1),'const.infer.Success_1'(s(X0,X9))),s(X3,X10))) = s('type.pair.prod'('type.infer.exc'(X0,X1),X3),happ(s(fun(X3,'type.pair.prod'('type.infer.exc'(X0,X1),X3)),X4),s(X3,X6))) & s('type.pair.prod'('type.infer.exc'(X2,X1),X3),'const.pair.,_2'(s('type.infer.exc'(X2,X1),'const.infer.Success_1'(s(X2,X8))),s(X3,X7))) = s('type.pair.prod'('type.infer.exc'(X2,X1),X3),happ(s(fun(X3,'type.pair.prod'('type.infer.exc'(X2,X1),X3)),happ(s(fun(X0,fun(X3,'type.pair.prod'('type.infer.exc'(X2,X1),X3))),X5),s(X0,X9))),s(X3,X10)))))),
  inference(rectify,[],[f10])).
fof(f10,axiom,(
  ! [X11,X14,X19,X12] : ! [X20,X21,X16,X18,X15] : (s('type.pair.prod'('type.infer.exc'(X19,X14),X12),'const.pair.,_2'(s('type.infer.exc'(X19,X14),'const.infer.Success_1'(s(X19,X15))),s(X12,X18))) = s('type.pair.prod'('type.infer.exc'(X19,X14),X12),'const.infer.st_ex_bind_3'(s(fun(X12,'type.pair.prod'('type.infer.exc'(X11,X14),X12)),X20),s(fun(X11,fun(X12,'type.pair.prod'('type.infer.exc'(X19,X14),X12))),X21),s(X12,X16))) <=> ? [X17,X22] : (s('type.pair.prod'('type.infer.exc'(X11,X14),X12),'const.pair.,_2'(s('type.infer.exc'(X11,X14),'const.infer.Success_1'(s(X11,X17))),s(X12,X22))) = s('type.pair.prod'('type.infer.exc'(X11,X14),X12),happ(s(fun(X12,'type.pair.prod'('type.infer.exc'(X11,X14),X12)),X20),s(X12,X16))) & s('type.pair.prod'('type.infer.exc'(X19,X14),X12),'const.pair.,_2'(s('type.infer.exc'(X19,X14),'const.infer.Success_1'(s(X19,X15))),s(X12,X18))) = s('type.pair.prod'('type.infer.exc'(X19,X14),X12),happ(s(fun(X12,'type.pair.prod'('type.infer.exc'(X19,X14),X12)),happ(s(fun(X11,fun(X12,'type.pair.prod'('type.infer.exc'(X19,X14),X12))),X21),s(X11,X17))),s(X12,X22)))))),
  file('thm.inferProps.success_eqns|split|8','thm.inferProps.inferProps_25_prove_ltb')).
fof(f223,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'(X2,X1),X3),'const.pair.,_2'(s('type.infer.exc'(X2,X1),'const.infer.Success_1'(s(X2,X8))),s(X3,X7))) = s('type.pair.prod'('type.infer.exc'(X2,X1),X3),happ(s(fun(X3,'type.pair.prod'('type.infer.exc'(X2,X1),X3)),happ(s(fun(X0,fun(X3,'type.pair.prod'('type.infer.exc'(X2,X1),X3))),X5),s(X0,sK6(X8,X7,X6,X5,X4,X3,X2,X1,X0)))),s(X3,sK7(X8,X7,X6,X5,X4,X3,X2,X1,X0)))) | s('type.pair.prod'('type.infer.exc'(X2,X1),X3),'const.pair.,_2'(s('type.infer.exc'(X2,X1),'const.infer.Success_1'(s(X2,X8))),s(X3,X7))) != s('type.pair.prod'('type.infer.exc'(X2,X1),X3),'const.infer.st_ex_bind_3'(s(fun(X3,'type.pair.prod'('type.infer.exc'(X0,X1),X3)),X4),s(fun(X0,fun(X3,'type.pair.prod'('type.infer.exc'(X2,X1),X3))),X5),s(X3,X6)))) )),
  inference(cnf_transformation,[],[f147])).
fof(f224,plain,(
  ( ! [X6,X4,X2,X0,X10,X8,X7,X5,X3,X1,X9] : (s('type.pair.prod'('type.infer.exc'(X2,X1),X3),'const.pair.,_2'(s('type.infer.exc'(X2,X1),'const.infer.Success_1'(s(X2,X8))),s(X3,X7))) = s('type.pair.prod'('type.infer.exc'(X2,X1),X3),'const.infer.st_ex_bind_3'(s(fun(X3,'type.pair.prod'('type.infer.exc'(X0,X1),X3)),X4),s(fun(X0,fun(X3,'type.pair.prod'('type.infer.exc'(X2,X1),X3))),X5),s(X3,X6))) | s('type.pair.prod'('type.infer.exc'(X2,X1),X3),'const.pair.,_2'(s('type.infer.exc'(X2,X1),'const.infer.Success_1'(s(X2,X8))),s(X3,X7))) != s('type.pair.prod'('type.infer.exc'(X2,X1),X3),happ(s(fun(X3,'type.pair.prod'('type.infer.exc'(X2,X1),X3)),happ(s(fun(X0,fun(X3,'type.pair.prod'('type.infer.exc'(X2,X1),X3))),X5),s(X0,X9))),s(X3,X10))) | s('type.pair.prod'('type.infer.exc'(X0,X1),X3),'const.pair.,_2'(s('type.infer.exc'(X0,X1),'const.infer.Success_1'(s(X0,X9))),s(X3,X10))) != s('type.pair.prod'('type.infer.exc'(X0,X1),X3),happ(s(fun(X3,'type.pair.prod'('type.infer.exc'(X0,X1),X3)),X4),s(X3,X6)))) )),
  inference(cnf_transformation,[],[f147])).
fof(f221,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (s(X0,happ(s(fun(X2,X0),'_dst_x0x1x0_3'(s(fun(X1,fun(X3,X0)),X4),s(fun(X2,X1),X5),s(X3,X6))),s(X2,X7))) = s(X0,happ(s(fun(X3,X0),happ(s(fun(X1,fun(X3,X0)),X4),s(X1,happ(s(fun(X2,X1),X5),s(X2,X7))))),s(X3,X6)))) )),
  inference(cnf_transformation,[],[f113])).
fof(f113,plain,(
  ! [X0,X1,X2,X3,X4,X5,X6,X7] : s(X0,happ(s(fun(X2,X0),'_dst_x0x1x0_3'(s(fun(X1,fun(X3,X0)),X4),s(fun(X2,X1),X5),s(X3,X6))),s(X2,X7))) = s(X0,happ(s(fun(X3,X0),happ(s(fun(X1,fun(X3,X0)),X4),s(X1,happ(s(fun(X2,X1),X5),s(X2,X7))))),s(X3,X6)))),
  inference(flattening,[],[f112])).
fof(f112,plain,(
  ! [X0,X1,X2,X3] : ! [X4,X5,X6,X7] : s(X0,happ(s(fun(X2,X0),'_dst_x0x1x0_3'(s(fun(X1,fun(X3,X0)),X4),s(fun(X2,X1),X5),s(X3,X6))),s(X2,X7))) = s(X0,happ(s(fun(X3,X0),happ(s(fun(X1,fun(X3,X0)),X4),s(X1,happ(s(fun(X2,X1),X5),s(X2,X7))))),s(X3,X6)))),
  inference(rectify,[],[f30])).
fof(f30,axiom,(
  ! [X39,X40,X41,X42] : ! [X43,X44,X45,X46] : s(X39,happ(s(fun(X41,X39),'_dst_x0x1x0_3'(s(fun(X40,fun(X42,X39)),X43),s(fun(X41,X40),X44),s(X42,X45))),s(X41,X46))) = s(X39,happ(s(fun(X42,X39),happ(s(fun(X40,fun(X42,X39)),X43),s(X40,happ(s(fun(X41,X40),X44),s(X41,X46))))),s(X42,X45)))),
  file('thm.inferProps.success_eqns|split|8','_dst_x0x1x0_ax')).
fof(f254,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'(X1,X2),X3),'const.infer.st_ex_bind_3'(s(fun(X3,'type.pair.prod'('type.infer.exc'(X0,X2),X3)),X4),s(fun(X0,fun(X3,'type.pair.prod'('type.infer.exc'(X1,X2),X3))),X5),s(X3,X6))) = s('type.pair.prod'('type.infer.exc'(X1,X2),X3),happ(s(fun(X3,'type.pair.prod'('type.infer.exc'(X1,X2),X3)),'const.infer.st_ex_bind_2'(s(fun(X3,'type.pair.prod'('type.infer.exc'(X0,X2),X3)),X4),s(fun(X0,fun(X3,'type.pair.prod'('type.infer.exc'(X1,X2),X3))),X5))),s(X3,X6)))) )),
  inference(forward_demodulation,[],[f220,f219])).
fof(f220,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'(X1,X2),X3),'const.infer.st_ex_bind_3'(s(fun(X3,'type.pair.prod'('type.infer.exc'(X0,X2),X3)),X4),s(fun(X0,fun(X3,'type.pair.prod'('type.infer.exc'(X1,X2),X3))),X5),s(X3,X6))) = s('type.pair.prod'('type.infer.exc'(X1,X2),X3),happ(s(fun(X3,'type.pair.prod'('type.infer.exc'(X1,X2),X3)),happ(s(fun(fun(X0,fun(X3,'type.pair.prod'('type.infer.exc'(X1,X2),X3))),fun(X3,'type.pair.prod'('type.infer.exc'(X1,X2),X3))),happ(s(fun(fun(X3,'type.pair.prod'('type.infer.exc'(X0,X2),X3)),fun(fun(X0,fun(X3,'type.pair.prod'('type.infer.exc'(X1,X2),X3))),fun(X3,'type.pair.prod'('type.infer.exc'(X1,X2),X3)))),'const.infer.st_ex_bind_0'),s(fun(X3,'type.pair.prod'('type.infer.exc'(X0,X2),X3)),X4))),s(fun(X0,fun(X3,'type.pair.prod'('type.infer.exc'(X1,X2),X3))),X5))),s(X3,X6)))) )),
  inference(cnf_transformation,[],[f111])).
fof(f111,plain,(
  ! [X0,X1,X2,X3,X4,X5,X6] : s('type.pair.prod'('type.infer.exc'(X1,X2),X3),'const.infer.st_ex_bind_3'(s(fun(X3,'type.pair.prod'('type.infer.exc'(X0,X2),X3)),X4),s(fun(X0,fun(X3,'type.pair.prod'('type.infer.exc'(X1,X2),X3))),X5),s(X3,X6))) = s('type.pair.prod'('type.infer.exc'(X1,X2),X3),happ(s(fun(X3,'type.pair.prod'('type.infer.exc'(X1,X2),X3)),happ(s(fun(fun(X0,fun(X3,'type.pair.prod'('type.infer.exc'(X1,X2),X3))),fun(X3,'type.pair.prod'('type.infer.exc'(X1,X2),X3))),happ(s(fun(fun(X3,'type.pair.prod'('type.infer.exc'(X0,X2),X3)),fun(fun(X0,fun(X3,'type.pair.prod'('type.infer.exc'(X1,X2),X3))),fun(X3,'type.pair.prod'('type.infer.exc'(X1,X2),X3)))),'const.infer.st_ex_bind_0'),s(fun(X3,'type.pair.prod'('type.infer.exc'(X0,X2),X3)),X4))),s(fun(X0,fun(X3,'type.pair.prod'('type.infer.exc'(X1,X2),X3))),X5))),s(X3,X6)))),
  inference(flattening,[],[f110])).
fof(f110,plain,(
  ! [X0,X1,X2,X3] : ! [X4,X5,X6] : s('type.pair.prod'('type.infer.exc'(X1,X2),X3),'const.infer.st_ex_bind_3'(s(fun(X3,'type.pair.prod'('type.infer.exc'(X0,X2),X3)),X4),s(fun(X0,fun(X3,'type.pair.prod'('type.infer.exc'(X1,X2),X3))),X5),s(X3,X6))) = s('type.pair.prod'('type.infer.exc'(X1,X2),X3),happ(s(fun(X3,'type.pair.prod'('type.infer.exc'(X1,X2),X3)),happ(s(fun(fun(X0,fun(X3,'type.pair.prod'('type.infer.exc'(X1,X2),X3))),fun(X3,'type.pair.prod'('type.infer.exc'(X1,X2),X3))),happ(s(fun(fun(X3,'type.pair.prod'('type.infer.exc'(X0,X2),X3)),fun(fun(X0,fun(X3,'type.pair.prod'('type.infer.exc'(X1,X2),X3))),fun(X3,'type.pair.prod'('type.infer.exc'(X1,X2),X3)))),'const.infer.st_ex_bind_0'),s(fun(X3,'type.pair.prod'('type.infer.exc'(X0,X2),X3)),X4))),s(fun(X0,fun(X3,'type.pair.prod'('type.infer.exc'(X1,X2),X3))),X5))),s(X3,X6)))),
  inference(rectify,[],[f32])).
fof(f32,axiom,(
  ! [X11,X19,X14,X12] : ! [X37,X38,X47] : s('type.pair.prod'('type.infer.exc'(X19,X14),X12),'const.infer.st_ex_bind_3'(s(fun(X12,'type.pair.prod'('type.infer.exc'(X11,X14),X12)),X37),s(fun(X11,fun(X12,'type.pair.prod'('type.infer.exc'(X19,X14),X12))),X38),s(X12,X47))) = s('type.pair.prod'('type.infer.exc'(X19,X14),X12),happ(s(fun(X12,'type.pair.prod'('type.infer.exc'(X19,X14),X12)),happ(s(fun(fun(X11,fun(X12,'type.pair.prod'('type.infer.exc'(X19,X14),X12))),fun(X12,'type.pair.prod'('type.infer.exc'(X19,X14),X12))),happ(s(fun(fun(X12,'type.pair.prod'('type.infer.exc'(X11,X14),X12)),fun(fun(X11,fun(X12,'type.pair.prod'('type.infer.exc'(X19,X14),X12))),fun(X12,'type.pair.prod'('type.infer.exc'(X19,X14),X12)))),'const.infer.st_ex_bind_0'),s(fun(X12,'type.pair.prod'('type.infer.exc'(X11,X14),X12)),X37))),s(fun(X11,fun(X12,'type.pair.prod'('type.infer.exc'(X19,X14),X12))),X38))),s(X12,X47)))),
  file('thm.inferProps.success_eqns|split|8','ARITY_0_3_const.infer.st_ex_bind')).
fof(f219,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s(fun(X3,'type.pair.prod'('type.infer.exc'(X1,X2),X3)),'const.infer.st_ex_bind_2'(s(fun(X3,'type.pair.prod'('type.infer.exc'(X0,X2),X3)),X4),s(fun(X0,fun(X3,'type.pair.prod'('type.infer.exc'(X1,X2),X3))),X5))) = s(fun(X3,'type.pair.prod'('type.infer.exc'(X1,X2),X3)),happ(s(fun(fun(X0,fun(X3,'type.pair.prod'('type.infer.exc'(X1,X2),X3))),fun(X3,'type.pair.prod'('type.infer.exc'(X1,X2),X3))),happ(s(fun(fun(X3,'type.pair.prod'('type.infer.exc'(X0,X2),X3)),fun(fun(X0,fun(X3,'type.pair.prod'('type.infer.exc'(X1,X2),X3))),fun(X3,'type.pair.prod'('type.infer.exc'(X1,X2),X3)))),'const.infer.st_ex_bind_0'),s(fun(X3,'type.pair.prod'('type.infer.exc'(X0,X2),X3)),X4))),s(fun(X0,fun(X3,'type.pair.prod'('type.infer.exc'(X1,X2),X3))),X5)))) )),
  inference(cnf_transformation,[],[f109])).
fof(f109,plain,(
  ! [X0,X1,X2,X3,X4,X5] : s(fun(X3,'type.pair.prod'('type.infer.exc'(X1,X2),X3)),'const.infer.st_ex_bind_2'(s(fun(X3,'type.pair.prod'('type.infer.exc'(X0,X2),X3)),X4),s(fun(X0,fun(X3,'type.pair.prod'('type.infer.exc'(X1,X2),X3))),X5))) = s(fun(X3,'type.pair.prod'('type.infer.exc'(X1,X2),X3)),happ(s(fun(fun(X0,fun(X3,'type.pair.prod'('type.infer.exc'(X1,X2),X3))),fun(X3,'type.pair.prod'('type.infer.exc'(X1,X2),X3))),happ(s(fun(fun(X3,'type.pair.prod'('type.infer.exc'(X0,X2),X3)),fun(fun(X0,fun(X3,'type.pair.prod'('type.infer.exc'(X1,X2),X3))),fun(X3,'type.pair.prod'('type.infer.exc'(X1,X2),X3)))),'const.infer.st_ex_bind_0'),s(fun(X3,'type.pair.prod'('type.infer.exc'(X0,X2),X3)),X4))),s(fun(X0,fun(X3,'type.pair.prod'('type.infer.exc'(X1,X2),X3))),X5)))),
  inference(flattening,[],[f108])).
fof(f108,plain,(
  ! [X0,X1,X2,X3] : ! [X4,X5] : s(fun(X3,'type.pair.prod'('type.infer.exc'(X1,X2),X3)),'const.infer.st_ex_bind_2'(s(fun(X3,'type.pair.prod'('type.infer.exc'(X0,X2),X3)),X4),s(fun(X0,fun(X3,'type.pair.prod'('type.infer.exc'(X1,X2),X3))),X5))) = s(fun(X3,'type.pair.prod'('type.infer.exc'(X1,X2),X3)),happ(s(fun(fun(X0,fun(X3,'type.pair.prod'('type.infer.exc'(X1,X2),X3))),fun(X3,'type.pair.prod'('type.infer.exc'(X1,X2),X3))),happ(s(fun(fun(X3,'type.pair.prod'('type.infer.exc'(X0,X2),X3)),fun(fun(X0,fun(X3,'type.pair.prod'('type.infer.exc'(X1,X2),X3))),fun(X3,'type.pair.prod'('type.infer.exc'(X1,X2),X3)))),'const.infer.st_ex_bind_0'),s(fun(X3,'type.pair.prod'('type.infer.exc'(X0,X2),X3)),X4))),s(fun(X0,fun(X3,'type.pair.prod'('type.infer.exc'(X1,X2),X3))),X5)))),
  inference(rectify,[],[f29])).
fof(f29,axiom,(
  ! [X11,X19,X14,X12] : ! [X37,X38] : s(fun(X12,'type.pair.prod'('type.infer.exc'(X19,X14),X12)),'const.infer.st_ex_bind_2'(s(fun(X12,'type.pair.prod'('type.infer.exc'(X11,X14),X12)),X37),s(fun(X11,fun(X12,'type.pair.prod'('type.infer.exc'(X19,X14),X12))),X38))) = s(fun(X12,'type.pair.prod'('type.infer.exc'(X19,X14),X12)),happ(s(fun(fun(X11,fun(X12,'type.pair.prod'('type.infer.exc'(X19,X14),X12))),fun(X12,'type.pair.prod'('type.infer.exc'(X19,X14),X12))),happ(s(fun(fun(X12,'type.pair.prod'('type.infer.exc'(X11,X14),X12)),fun(fun(X11,fun(X12,'type.pair.prod'('type.infer.exc'(X19,X14),X12))),fun(X12,'type.pair.prod'('type.infer.exc'(X19,X14),X12)))),'const.infer.st_ex_bind_0'),s(fun(X12,'type.pair.prod'('type.infer.exc'(X11,X14),X12)),X37))),s(fun(X11,fun(X12,'type.pair.prod'('type.infer.exc'(X19,X14),X12))),X38)))),
  file('thm.inferProps.success_eqns|split|8','ARITY_0_2_const.infer.st_ex_bind')).
fof(f216,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'(X1,'type.list.list'('type.string.char')),X2),'const.pair.,_2'(s('type.infer.exc'(X1,'type.list.list'('type.string.char')),'const.infer.Success_1'(s(X1,X7))),s(X2,X8))) != s('type.pair.prod'('type.infer.exc'(X1,'type.list.list'('type.string.char')),X2),'const.infer.lookup_st_ex_4'(s(fun(X0,'type.list.list'('type.string.char')),X3),s(X0,X4),s('type.list.list'('type.pair.prod'(X0,X1)),X5),s(X2,X6))) | s('type.option.option'(X1),'const.option.SOME_1'(s(X1,X7))) = s('type.option.option'(X1),'const.alist.ALOOKUP_2'(s('type.list.list'('type.pair.prod'(X0,X1)),X5),s(X0,X4)))) )),
  inference(cnf_transformation,[],[f144])).
fof(f144,plain,(
  ! [X0,X1,X2,X3,X4,X5,X6,X7,X8] : ((s('type.pair.prod'('type.infer.exc'(X1,'type.list.list'('type.string.char')),X2),'const.pair.,_2'(s('type.infer.exc'(X1,'type.list.list'('type.string.char')),'const.infer.Success_1'(s(X1,X7))),s(X2,X8))) != s('type.pair.prod'('type.infer.exc'(X1,'type.list.list'('type.string.char')),X2),'const.infer.lookup_st_ex_4'(s(fun(X0,'type.list.list'('type.string.char')),X3),s(X0,X4),s('type.list.list'('type.pair.prod'(X0,X1)),X5),s(X2,X6))) | (s('type.option.option'(X1),'const.option.SOME_1'(s(X1,X7))) = s('type.option.option'(X1),'const.alist.ALOOKUP_2'(s('type.list.list'('type.pair.prod'(X0,X1)),X5),s(X0,X4))) & s(X2,X6) = s(X2,X8))) & (s('type.option.option'(X1),'const.option.SOME_1'(s(X1,X7))) != s('type.option.option'(X1),'const.alist.ALOOKUP_2'(s('type.list.list'('type.pair.prod'(X0,X1)),X5),s(X0,X4))) | s(X2,X6) != s(X2,X8) | s('type.pair.prod'('type.infer.exc'(X1,'type.list.list'('type.string.char')),X2),'const.pair.,_2'(s('type.infer.exc'(X1,'type.list.list'('type.string.char')),'const.infer.Success_1'(s(X1,X7))),s(X2,X8))) = s('type.pair.prod'('type.infer.exc'(X1,'type.list.list'('type.string.char')),X2),'const.infer.lookup_st_ex_4'(s(fun(X0,'type.list.list'('type.string.char')),X3),s(X0,X4),s('type.list.list'('type.pair.prod'(X0,X1)),X5),s(X2,X6)))))),
  inference(flattening,[],[f143])).
fof(f143,plain,(
  ! [X0,X1,X2,X3,X4,X5,X6,X7,X8] : ((s('type.pair.prod'('type.infer.exc'(X1,'type.list.list'('type.string.char')),X2),'const.pair.,_2'(s('type.infer.exc'(X1,'type.list.list'('type.string.char')),'const.infer.Success_1'(s(X1,X7))),s(X2,X8))) != s('type.pair.prod'('type.infer.exc'(X1,'type.list.list'('type.string.char')),X2),'const.infer.lookup_st_ex_4'(s(fun(X0,'type.list.list'('type.string.char')),X3),s(X0,X4),s('type.list.list'('type.pair.prod'(X0,X1)),X5),s(X2,X6))) | (s('type.option.option'(X1),'const.option.SOME_1'(s(X1,X7))) = s('type.option.option'(X1),'const.alist.ALOOKUP_2'(s('type.list.list'('type.pair.prod'(X0,X1)),X5),s(X0,X4))) & s(X2,X6) = s(X2,X8))) & ((s('type.option.option'(X1),'const.option.SOME_1'(s(X1,X7))) != s('type.option.option'(X1),'const.alist.ALOOKUP_2'(s('type.list.list'('type.pair.prod'(X0,X1)),X5),s(X0,X4))) | s(X2,X6) != s(X2,X8)) | s('type.pair.prod'('type.infer.exc'(X1,'type.list.list'('type.string.char')),X2),'const.pair.,_2'(s('type.infer.exc'(X1,'type.list.list'('type.string.char')),'const.infer.Success_1'(s(X1,X7))),s(X2,X8))) = s('type.pair.prod'('type.infer.exc'(X1,'type.list.list'('type.string.char')),X2),'const.infer.lookup_st_ex_4'(s(fun(X0,'type.list.list'('type.string.char')),X3),s(X0,X4),s('type.list.list'('type.pair.prod'(X0,X1)),X5),s(X2,X6)))))),
  inference(nnf_transformation,[],[f107])).
fof(f107,plain,(
  ! [X0,X1,X2,X3,X4,X5,X6,X7,X8] : (s('type.pair.prod'('type.infer.exc'(X1,'type.list.list'('type.string.char')),X2),'const.pair.,_2'(s('type.infer.exc'(X1,'type.list.list'('type.string.char')),'const.infer.Success_1'(s(X1,X7))),s(X2,X8))) = s('type.pair.prod'('type.infer.exc'(X1,'type.list.list'('type.string.char')),X2),'const.infer.lookup_st_ex_4'(s(fun(X0,'type.list.list'('type.string.char')),X3),s(X0,X4),s('type.list.list'('type.pair.prod'(X0,X1)),X5),s(X2,X6))) <=> (s('type.option.option'(X1),'const.option.SOME_1'(s(X1,X7))) = s('type.option.option'(X1),'const.alist.ALOOKUP_2'(s('type.list.list'('type.pair.prod'(X0,X1)),X5),s(X0,X4))) & s(X2,X6) = s(X2,X8)))),
  inference(flattening,[],[f106])).
fof(f106,plain,(
  ! [X0,X1,X2] : ! [X3,X4,X5,X6,X7,X8] : (s('type.pair.prod'('type.infer.exc'(X1,'type.list.list'('type.string.char')),X2),'const.pair.,_2'(s('type.infer.exc'(X1,'type.list.list'('type.string.char')),'const.infer.Success_1'(s(X1,X7))),s(X2,X8))) = s('type.pair.prod'('type.infer.exc'(X1,'type.list.list'('type.string.char')),X2),'const.infer.lookup_st_ex_4'(s(fun(X0,'type.list.list'('type.string.char')),X3),s(X0,X4),s('type.list.list'('type.pair.prod'(X0,X1)),X5),s(X2,X6))) <=> (s('type.option.option'(X1),'const.option.SOME_1'(s(X1,X7))) = s('type.option.option'(X1),'const.alist.ALOOKUP_2'(s('type.list.list'('type.pair.prod'(X0,X1)),X5),s(X0,X4))) & s(X2,X6) = s(X2,X8)))),
  inference(rectify,[],[f17])).
fof(f17,axiom,(
  ! [X12,X11,X14] : ! [X31,X10,X32,X16,X15,X18] : (s('type.pair.prod'('type.infer.exc'(X11,'type.list.list'('type.string.char')),X14),'const.pair.,_2'(s('type.infer.exc'(X11,'type.list.list'('type.string.char')),'const.infer.Success_1'(s(X11,X15))),s(X14,X18))) = s('type.pair.prod'('type.infer.exc'(X11,'type.list.list'('type.string.char')),X14),'const.infer.lookup_st_ex_4'(s(fun(X12,'type.list.list'('type.string.char')),X31),s(X12,X10),s('type.list.list'('type.pair.prod'(X12,X11)),X32),s(X14,X16))) <=> (s('type.option.option'(X11),'const.option.SOME_1'(s(X11,X15))) = s('type.option.option'(X11),'const.alist.ALOOKUP_2'(s('type.list.list'('type.pair.prod'(X12,X11)),X32),s(X12,X10))) & s(X14,X16) = s(X14,X18)))),
  file('thm.inferProps.success_eqns|split|8','thm.inferProps.inferProps_32_prove_ltb')).
fof(f217,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'(X1,'type.list.list'('type.string.char')),X2),'const.pair.,_2'(s('type.infer.exc'(X1,'type.list.list'('type.string.char')),'const.infer.Success_1'(s(X1,X7))),s(X2,X8))) != s('type.pair.prod'('type.infer.exc'(X1,'type.list.list'('type.string.char')),X2),'const.infer.lookup_st_ex_4'(s(fun(X0,'type.list.list'('type.string.char')),X3),s(X0,X4),s('type.list.list'('type.pair.prod'(X0,X1)),X5),s(X2,X6))) | s(X2,X6) = s(X2,X8)) )),
  inference(cnf_transformation,[],[f144])).
fof(f218,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1] : (s('type.option.option'(X1),'const.option.SOME_1'(s(X1,X7))) != s('type.option.option'(X1),'const.alist.ALOOKUP_2'(s('type.list.list'('type.pair.prod'(X0,X1)),X5),s(X0,X4))) | s(X2,X6) != s(X2,X8) | s('type.pair.prod'('type.infer.exc'(X1,'type.list.list'('type.string.char')),X2),'const.pair.,_2'(s('type.infer.exc'(X1,'type.list.list'('type.string.char')),'const.infer.Success_1'(s(X1,X7))),s(X2,X8))) = s('type.pair.prod'('type.infer.exc'(X1,'type.list.list'('type.string.char')),X2),'const.infer.lookup_st_ex_4'(s(fun(X0,'type.list.list'('type.string.char')),X3),s(X0,X4),s('type.list.list'('type.pair.prod'(X0,X1)),X5),s(X2,X6)))) )),
  inference(cnf_transformation,[],[f144])).
fof(f213,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'(X1,'type.list.list'('type.string.char')),X2),'const.pair.,_2'(s('type.infer.exc'(X1,'type.list.list'('type.string.char')),'const.infer.Success_1'(s(X1,X7))),s(X2,X8))) != s('type.pair.prod'('type.infer.exc'(X1,'type.list.list'('type.string.char')),X2),'const.infer.flookup_st_ex_4'(s(fun(X0,'type.list.list'('type.string.char')),X3),s(X0,X4),s('type.finite_map.fmap'(X0,X1),X5),s(X2,X6))) | s('type.option.option'(X1),'const.option.SOME_1'(s(X1,X7))) = s('type.option.option'(X1),'const.finite_map.FLOOKUP_2'(s('type.finite_map.fmap'(X0,X1),X5),s(X0,X4)))) )),
  inference(cnf_transformation,[],[f142])).
fof(f142,plain,(
  ! [X0,X1,X2,X3,X4,X5,X6,X7,X8] : ((s('type.pair.prod'('type.infer.exc'(X1,'type.list.list'('type.string.char')),X2),'const.pair.,_2'(s('type.infer.exc'(X1,'type.list.list'('type.string.char')),'const.infer.Success_1'(s(X1,X7))),s(X2,X8))) != s('type.pair.prod'('type.infer.exc'(X1,'type.list.list'('type.string.char')),X2),'const.infer.flookup_st_ex_4'(s(fun(X0,'type.list.list'('type.string.char')),X3),s(X0,X4),s('type.finite_map.fmap'(X0,X1),X5),s(X2,X6))) | (s('type.option.option'(X1),'const.option.SOME_1'(s(X1,X7))) = s('type.option.option'(X1),'const.finite_map.FLOOKUP_2'(s('type.finite_map.fmap'(X0,X1),X5),s(X0,X4))) & s(X2,X6) = s(X2,X8))) & (s('type.option.option'(X1),'const.option.SOME_1'(s(X1,X7))) != s('type.option.option'(X1),'const.finite_map.FLOOKUP_2'(s('type.finite_map.fmap'(X0,X1),X5),s(X0,X4))) | s(X2,X6) != s(X2,X8) | s('type.pair.prod'('type.infer.exc'(X1,'type.list.list'('type.string.char')),X2),'const.pair.,_2'(s('type.infer.exc'(X1,'type.list.list'('type.string.char')),'const.infer.Success_1'(s(X1,X7))),s(X2,X8))) = s('type.pair.prod'('type.infer.exc'(X1,'type.list.list'('type.string.char')),X2),'const.infer.flookup_st_ex_4'(s(fun(X0,'type.list.list'('type.string.char')),X3),s(X0,X4),s('type.finite_map.fmap'(X0,X1),X5),s(X2,X6)))))),
  inference(flattening,[],[f141])).
fof(f141,plain,(
  ! [X0,X1,X2,X3,X4,X5,X6,X7,X8] : ((s('type.pair.prod'('type.infer.exc'(X1,'type.list.list'('type.string.char')),X2),'const.pair.,_2'(s('type.infer.exc'(X1,'type.list.list'('type.string.char')),'const.infer.Success_1'(s(X1,X7))),s(X2,X8))) != s('type.pair.prod'('type.infer.exc'(X1,'type.list.list'('type.string.char')),X2),'const.infer.flookup_st_ex_4'(s(fun(X0,'type.list.list'('type.string.char')),X3),s(X0,X4),s('type.finite_map.fmap'(X0,X1),X5),s(X2,X6))) | (s('type.option.option'(X1),'const.option.SOME_1'(s(X1,X7))) = s('type.option.option'(X1),'const.finite_map.FLOOKUP_2'(s('type.finite_map.fmap'(X0,X1),X5),s(X0,X4))) & s(X2,X6) = s(X2,X8))) & ((s('type.option.option'(X1),'const.option.SOME_1'(s(X1,X7))) != s('type.option.option'(X1),'const.finite_map.FLOOKUP_2'(s('type.finite_map.fmap'(X0,X1),X5),s(X0,X4))) | s(X2,X6) != s(X2,X8)) | s('type.pair.prod'('type.infer.exc'(X1,'type.list.list'('type.string.char')),X2),'const.pair.,_2'(s('type.infer.exc'(X1,'type.list.list'('type.string.char')),'const.infer.Success_1'(s(X1,X7))),s(X2,X8))) = s('type.pair.prod'('type.infer.exc'(X1,'type.list.list'('type.string.char')),X2),'const.infer.flookup_st_ex_4'(s(fun(X0,'type.list.list'('type.string.char')),X3),s(X0,X4),s('type.finite_map.fmap'(X0,X1),X5),s(X2,X6)))))),
  inference(nnf_transformation,[],[f105])).
fof(f105,plain,(
  ! [X0,X1,X2,X3,X4,X5,X6,X7,X8] : (s('type.pair.prod'('type.infer.exc'(X1,'type.list.list'('type.string.char')),X2),'const.pair.,_2'(s('type.infer.exc'(X1,'type.list.list'('type.string.char')),'const.infer.Success_1'(s(X1,X7))),s(X2,X8))) = s('type.pair.prod'('type.infer.exc'(X1,'type.list.list'('type.string.char')),X2),'const.infer.flookup_st_ex_4'(s(fun(X0,'type.list.list'('type.string.char')),X3),s(X0,X4),s('type.finite_map.fmap'(X0,X1),X5),s(X2,X6))) <=> (s('type.option.option'(X1),'const.option.SOME_1'(s(X1,X7))) = s('type.option.option'(X1),'const.finite_map.FLOOKUP_2'(s('type.finite_map.fmap'(X0,X1),X5),s(X0,X4))) & s(X2,X6) = s(X2,X8)))),
  inference(flattening,[],[f104])).
fof(f104,plain,(
  ! [X0,X1,X2] : ! [X3,X4,X5,X6,X7,X8] : (s('type.pair.prod'('type.infer.exc'(X1,'type.list.list'('type.string.char')),X2),'const.pair.,_2'(s('type.infer.exc'(X1,'type.list.list'('type.string.char')),'const.infer.Success_1'(s(X1,X7))),s(X2,X8))) = s('type.pair.prod'('type.infer.exc'(X1,'type.list.list'('type.string.char')),X2),'const.infer.flookup_st_ex_4'(s(fun(X0,'type.list.list'('type.string.char')),X3),s(X0,X4),s('type.finite_map.fmap'(X0,X1),X5),s(X2,X6))) <=> (s('type.option.option'(X1),'const.option.SOME_1'(s(X1,X7))) = s('type.option.option'(X1),'const.finite_map.FLOOKUP_2'(s('type.finite_map.fmap'(X0,X1),X5),s(X0,X4))) & s(X2,X6) = s(X2,X8)))),
  inference(rectify,[],[f18])).
fof(f18,axiom,(
  ! [X12,X11,X14] : ! [X31,X10,X32,X16,X15,X18] : (s('type.pair.prod'('type.infer.exc'(X11,'type.list.list'('type.string.char')),X14),'const.pair.,_2'(s('type.infer.exc'(X11,'type.list.list'('type.string.char')),'const.infer.Success_1'(s(X11,X15))),s(X14,X18))) = s('type.pair.prod'('type.infer.exc'(X11,'type.list.list'('type.string.char')),X14),'const.infer.flookup_st_ex_4'(s(fun(X12,'type.list.list'('type.string.char')),X31),s(X12,X10),s('type.finite_map.fmap'(X12,X11),X32),s(X14,X16))) <=> (s('type.option.option'(X11),'const.option.SOME_1'(s(X11,X15))) = s('type.option.option'(X11),'const.finite_map.FLOOKUP_2'(s('type.finite_map.fmap'(X12,X11),X32),s(X12,X10))) & s(X14,X16) = s(X14,X18)))),
  file('thm.inferProps.success_eqns|split|8','thm.inferProps.inferProps_33_prove_ltb')).
fof(f214,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'(X1,'type.list.list'('type.string.char')),X2),'const.pair.,_2'(s('type.infer.exc'(X1,'type.list.list'('type.string.char')),'const.infer.Success_1'(s(X1,X7))),s(X2,X8))) != s('type.pair.prod'('type.infer.exc'(X1,'type.list.list'('type.string.char')),X2),'const.infer.flookup_st_ex_4'(s(fun(X0,'type.list.list'('type.string.char')),X3),s(X0,X4),s('type.finite_map.fmap'(X0,X1),X5),s(X2,X6))) | s(X2,X6) = s(X2,X8)) )),
  inference(cnf_transformation,[],[f142])).
fof(f215,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1] : (s('type.option.option'(X1),'const.option.SOME_1'(s(X1,X7))) != s('type.option.option'(X1),'const.finite_map.FLOOKUP_2'(s('type.finite_map.fmap'(X0,X1),X5),s(X0,X4))) | s(X2,X6) != s(X2,X8) | s('type.pair.prod'('type.infer.exc'(X1,'type.list.list'('type.string.char')),X2),'const.pair.,_2'(s('type.infer.exc'(X1,'type.list.list'('type.string.char')),'const.infer.Success_1'(s(X1,X7))),s(X2,X8))) = s('type.pair.prod'('type.infer.exc'(X1,'type.list.list'('type.string.char')),X2),'const.infer.flookup_st_ex_4'(s(fun(X0,'type.list.list'('type.string.char')),X3),s(X0,X4),s('type.finite_map.fmap'(X0,X1),X5),s(X2,X6)))) )),
  inference(cnf_transformation,[],[f142])).
fof(f210,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'(X1,X0),X2),'const.infer.st_ex_return_2'(s(X1,X3),s(X2,X4))) != s('type.pair.prod'('type.infer.exc'(X1,X0),X2),'const.pair.,_2'(s('type.infer.exc'(X1,X0),'const.infer.Success_1'(s(X1,X5))),s(X2,X6))) | s(X1,X3) = s(X1,X5)) )),
  inference(cnf_transformation,[],[f140])).
fof(f253,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'(X1,X0),X2),'const.infer.failwith_2'(s(X0,X3),s(X2,X4))) != s('type.pair.prod'('type.infer.exc'(X1,X0),X2),'const.pair.,_2'(s('type.infer.exc'(X1,X0),'const.infer.Success_1'(s(X1,X5))),s(X2,X6)))) )),
  inference(subsumption_resolution,[],[f208,f164])).
fof(f208,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (p(s(bool,'F_0')) | s('type.pair.prod'('type.infer.exc'(X1,X0),X2),'const.infer.failwith_2'(s(X0,X3),s(X2,X4))) != s('type.pair.prod'('type.infer.exc'(X1,X0),X2),'const.pair.,_2'(s('type.infer.exc'(X1,X0),'const.infer.Success_1'(s(X1,X5))),s(X2,X6)))) )),
  inference(cnf_transformation,[],[f138])).
fof(f138,plain,(
  ! [X0,X1,X2,X3,X4,X5,X6] : ((s('type.pair.prod'('type.infer.exc'(X1,X0),X2),'const.infer.failwith_2'(s(X0,X3),s(X2,X4))) != s('type.pair.prod'('type.infer.exc'(X1,X0),X2),'const.pair.,_2'(s('type.infer.exc'(X1,X0),'const.infer.Success_1'(s(X1,X5))),s(X2,X6))) | p(s(bool,'F_0'))) & (~p(s(bool,'F_0')) | s('type.pair.prod'('type.infer.exc'(X1,X0),X2),'const.infer.failwith_2'(s(X0,X3),s(X2,X4))) = s('type.pair.prod'('type.infer.exc'(X1,X0),X2),'const.pair.,_2'(s('type.infer.exc'(X1,X0),'const.infer.Success_1'(s(X1,X5))),s(X2,X6)))))),
  inference(nnf_transformation,[],[f101])).
fof(f101,plain,(
  ! [X0,X1,X2,X3,X4,X5,X6] : (s('type.pair.prod'('type.infer.exc'(X1,X0),X2),'const.infer.failwith_2'(s(X0,X3),s(X2,X4))) = s('type.pair.prod'('type.infer.exc'(X1,X0),X2),'const.pair.,_2'(s('type.infer.exc'(X1,X0),'const.infer.Success_1'(s(X1,X5))),s(X2,X6))) <=> p(s(bool,'F_0')))),
  inference(flattening,[],[f100])).
fof(f100,plain,(
  ! [X0,X1,X2] : ! [X3,X4,X5,X6] : (s('type.pair.prod'('type.infer.exc'(X1,X0),X2),'const.infer.failwith_2'(s(X0,X3),s(X2,X4))) = s('type.pair.prod'('type.infer.exc'(X1,X0),X2),'const.pair.,_2'(s('type.infer.exc'(X1,X0),'const.infer.Success_1'(s(X1,X5))),s(X2,X6))) <=> p(s(bool,'F_0')))),
  inference(rectify,[],[f16])).
fof(f16,axiom,(
  ! [X12,X14,X11] : ! [X30,X16,X15,X18] : (s('type.pair.prod'('type.infer.exc'(X14,X12),X11),'const.infer.failwith_2'(s(X12,X30),s(X11,X16))) = s('type.pair.prod'('type.infer.exc'(X14,X12),X11),'const.pair.,_2'(s('type.infer.exc'(X14,X12),'const.infer.Success_1'(s(X14,X15))),s(X11,X18))) <=> p(s(bool,'F_0')))),
  file('thm.inferProps.success_eqns|split|8','thm.inferProps.inferProps_3|49|_prove_ltb')).
fof(f207,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'(X1,'type.list.list'('type.string.char')),X2),'const.infer.lookup_st_ex_4'(s(fun(X0,'type.list.list'('type.string.char')),X3),s(X0,X4),s('type.list.list'('type.pair.prod'(X0,X1)),X5),s(X2,X6))) = s('type.pair.prod'('type.infer.exc'(X1,'type.list.list'('type.string.char')),X2),happ(s(fun(X2,'type.pair.prod'('type.infer.exc'(X1,'type.list.list'('type.string.char')),X2)),'const.infer.lookup_st_ex_3'(s(fun(X0,'type.list.list'('type.string.char')),X3),s(X0,X4),s('type.list.list'('type.pair.prod'(X0,X1)),X5))),s(X2,X6)))) )),
  inference(cnf_transformation,[],[f99])).
fof(f99,plain,(
  ! [X0,X1,X2,X3,X4,X5,X6] : s('type.pair.prod'('type.infer.exc'(X1,'type.list.list'('type.string.char')),X2),'const.infer.lookup_st_ex_4'(s(fun(X0,'type.list.list'('type.string.char')),X3),s(X0,X4),s('type.list.list'('type.pair.prod'(X0,X1)),X5),s(X2,X6))) = s('type.pair.prod'('type.infer.exc'(X1,'type.list.list'('type.string.char')),X2),happ(s(fun(X2,'type.pair.prod'('type.infer.exc'(X1,'type.list.list'('type.string.char')),X2)),'const.infer.lookup_st_ex_3'(s(fun(X0,'type.list.list'('type.string.char')),X3),s(X0,X4),s('type.list.list'('type.pair.prod'(X0,X1)),X5))),s(X2,X6)))),
  inference(flattening,[],[f98])).
fof(f98,plain,(
  ! [X0,X1,X2] : ! [X3,X4,X5,X6] : s('type.pair.prod'('type.infer.exc'(X1,'type.list.list'('type.string.char')),X2),'const.infer.lookup_st_ex_4'(s(fun(X0,'type.list.list'('type.string.char')),X3),s(X0,X4),s('type.list.list'('type.pair.prod'(X0,X1)),X5),s(X2,X6))) = s('type.pair.prod'('type.infer.exc'(X1,'type.list.list'('type.string.char')),X2),happ(s(fun(X2,'type.pair.prod'('type.infer.exc'(X1,'type.list.list'('type.string.char')),X2)),'const.infer.lookup_st_ex_3'(s(fun(X0,'type.list.list'('type.string.char')),X3),s(X0,X4),s('type.list.list'('type.pair.prod'(X0,X1)),X5))),s(X2,X6)))),
  inference(rectify,[],[f42])).
fof(f42,axiom,(
  ! [X14,X11,X12] : ! [X37,X38,X47,X48] : s('type.pair.prod'('type.infer.exc'(X11,'type.list.list'('type.string.char')),X12),'const.infer.lookup_st_ex_4'(s(fun(X14,'type.list.list'('type.string.char')),X37),s(X14,X38),s('type.list.list'('type.pair.prod'(X14,X11)),X47),s(X12,X48))) = s('type.pair.prod'('type.infer.exc'(X11,'type.list.list'('type.string.char')),X12),happ(s(fun(X12,'type.pair.prod'('type.infer.exc'(X11,'type.list.list'('type.string.char')),X12)),'const.infer.lookup_st_ex_3'(s(fun(X14,'type.list.list'('type.string.char')),X37),s(X14,X38),s('type.list.list'('type.pair.prod'(X14,X11)),X47))),s(X12,X48)))),
  file('thm.inferProps.success_eqns|split|8','ARITY_3_4_const.infer.lookup_st_ex')).
fof(f206,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s(X0,happ(s(fun(X1,X0),X3),s(X1,happ(s(fun(X2,X1),X4),s(X2,X5))))) = s(X0,happ(s(fun(X2,X0),'_dst_x0x1_2'(s(fun(X1,X0),X3),s(fun(X2,X1),X4))),s(X2,X5)))) )),
  inference(cnf_transformation,[],[f97])).
fof(f97,plain,(
  ! [X0,X1,X2,X3,X4,X5] : s(X0,happ(s(fun(X1,X0),X3),s(X1,happ(s(fun(X2,X1),X4),s(X2,X5))))) = s(X0,happ(s(fun(X2,X0),'_dst_x0x1_2'(s(fun(X1,X0),X3),s(fun(X2,X1),X4))),s(X2,X5)))),
  inference(flattening,[],[f96])).
fof(f96,plain,(
  ! [X0,X1,X2] : ! [X3,X4,X5] : s(X0,happ(s(fun(X1,X0),X3),s(X1,happ(s(fun(X2,X1),X4),s(X2,X5))))) = s(X0,happ(s(fun(X2,X0),'_dst_x0x1_2'(s(fun(X1,X0),X3),s(fun(X2,X1),X4))),s(X2,X5)))),
  inference(rectify,[],[f37])).
fof(f37,axiom,(
  ! [X39,X40,X41] : ! [X43,X44,X46] : s(X39,happ(s(fun(X40,X39),X43),s(X40,happ(s(fun(X41,X40),X44),s(X41,X46))))) = s(X39,happ(s(fun(X41,X39),'_dst_x0x1_2'(s(fun(X40,X39),X43),s(fun(X41,X40),X44))),s(X41,X46)))),
  file('thm.inferProps.success_eqns|split|8','_dst_x0x1_ax')).
fof(f205,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s('type.pair.prod'('type.infer.exc'(X1,X0),X2),'const.infer.st_ex_return_2'(s(X1,X3),s(X2,X4))) = s('type.pair.prod'('type.infer.exc'(X1,X0),X2),happ(s(fun(X2,'type.pair.prod'('type.infer.exc'(X1,X0),X2)),happ(s(fun(X1,fun(X2,'type.pair.prod'('type.infer.exc'(X1,X0),X2))),'const.infer.st_ex_return_0'),s(X1,X3))),s(X2,X4)))) )),
  inference(cnf_transformation,[],[f95])).
fof(f95,plain,(
  ! [X0,X1,X2,X3,X4] : s('type.pair.prod'('type.infer.exc'(X1,X0),X2),'const.infer.st_ex_return_2'(s(X1,X3),s(X2,X4))) = s('type.pair.prod'('type.infer.exc'(X1,X0),X2),happ(s(fun(X2,'type.pair.prod'('type.infer.exc'(X1,X0),X2)),happ(s(fun(X1,fun(X2,'type.pair.prod'('type.infer.exc'(X1,X0),X2))),'const.infer.st_ex_return_0'),s(X1,X3))),s(X2,X4)))),
  inference(flattening,[],[f94])).
fof(f94,plain,(
  ! [X0,X1,X2] : ! [X3,X4] : s('type.pair.prod'('type.infer.exc'(X1,X0),X2),'const.infer.st_ex_return_2'(s(X1,X3),s(X2,X4))) = s('type.pair.prod'('type.infer.exc'(X1,X0),X2),happ(s(fun(X2,'type.pair.prod'('type.infer.exc'(X1,X0),X2)),happ(s(fun(X1,fun(X2,'type.pair.prod'('type.infer.exc'(X1,X0),X2))),'const.infer.st_ex_return_0'),s(X1,X3))),s(X2,X4)))),
  inference(rectify,[],[f31])).
fof(f31,axiom,(
  ! [X14,X11,X12] : ! [X37,X38] : s('type.pair.prod'('type.infer.exc'(X11,X14),X12),'const.infer.st_ex_return_2'(s(X11,X37),s(X12,X38))) = s('type.pair.prod'('type.infer.exc'(X11,X14),X12),happ(s(fun(X12,'type.pair.prod'('type.infer.exc'(X11,X14),X12)),happ(s(fun(X11,fun(X12,'type.pair.prod'('type.infer.exc'(X11,X14),X12))),'const.infer.st_ex_return_0'),s(X11,X37))),s(X12,X38)))),
  file('thm.inferProps.success_eqns|split|8','ARITY_0_2_const.infer.st_ex_return')).
fof(f204,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s('type.pair.prod'('type.infer.exc'(X0,X1),X2),'const.infer.failwith_2'(s(X1,X3),s(X2,X4))) = s('type.pair.prod'('type.infer.exc'(X0,X1),X2),happ(s(fun(X2,'type.pair.prod'('type.infer.exc'(X0,X1),X2)),'const.infer.failwith_1'(s(X1,X3))),s(X2,X4)))) )),
  inference(cnf_transformation,[],[f93])).
fof(f93,plain,(
  ! [X0,X1,X2,X3,X4] : s('type.pair.prod'('type.infer.exc'(X0,X1),X2),'const.infer.failwith_2'(s(X1,X3),s(X2,X4))) = s('type.pair.prod'('type.infer.exc'(X0,X1),X2),happ(s(fun(X2,'type.pair.prod'('type.infer.exc'(X0,X1),X2)),'const.infer.failwith_1'(s(X1,X3))),s(X2,X4)))),
  inference(flattening,[],[f92])).
fof(f92,plain,(
  ! [X0,X1,X2] : ! [X3,X4] : s('type.pair.prod'('type.infer.exc'(X0,X1),X2),'const.infer.failwith_2'(s(X1,X3),s(X2,X4))) = s('type.pair.prod'('type.infer.exc'(X0,X1),X2),happ(s(fun(X2,'type.pair.prod'('type.infer.exc'(X0,X1),X2)),'const.infer.failwith_1'(s(X1,X3))),s(X2,X4)))),
  inference(rectify,[],[f41])).
fof(f41,axiom,(
  ! [X14,X12,X11] : ! [X37,X38] : s('type.pair.prod'('type.infer.exc'(X14,X12),X11),'const.infer.failwith_2'(s(X12,X37),s(X11,X38))) = s('type.pair.prod'('type.infer.exc'(X14,X12),X11),happ(s(fun(X11,'type.pair.prod'('type.infer.exc'(X14,X12),X11)),'const.infer.failwith_1'(s(X12,X37))),s(X11,X38)))),
  file('thm.inferProps.success_eqns|split|8','ARITY_1_2_const.infer.failwith')).
fof(f203,plain,(
  ( ! [X2,X0,X1] : (s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraints_3'(s('type.list.list'('type.infer_t.infer_t'),X0),s('type.list.list'('type.infer_t.infer_t'),X1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X2))) = s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),happ(s(fun('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),happ(s(fun('type.list.list'('type.infer_t.infer_t'),fun('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))))),happ(s(fun('type.list.list'('type.infer_t.infer_t'),fun('type.list.list'('type.infer_t.infer_t'),fun('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))))),'const.infer.add_constraints_0'),s('type.list.list'('type.infer_t.infer_t'),X0))),s('type.list.list'('type.infer_t.infer_t'),X1))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X2)))) )),
  inference(cnf_transformation,[],[f91])).
fof(f91,plain,(
  ! [X0,X1,X2] : s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraints_3'(s('type.list.list'('type.infer_t.infer_t'),X0),s('type.list.list'('type.infer_t.infer_t'),X1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X2))) = s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),happ(s(fun('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),happ(s(fun('type.list.list'('type.infer_t.infer_t'),fun('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))))),happ(s(fun('type.list.list'('type.infer_t.infer_t'),fun('type.list.list'('type.infer_t.infer_t'),fun('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))))),'const.infer.add_constraints_0'),s('type.list.list'('type.infer_t.infer_t'),X0))),s('type.list.list'('type.infer_t.infer_t'),X1))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X2)))),
  inference(rectify,[],[f40])).
fof(f40,axiom,(
  ! [X37,X38,X47] : s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraints_3'(s('type.list.list'('type.infer_t.infer_t'),X37),s('type.list.list'('type.infer_t.infer_t'),X38),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X47))) = s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),happ(s(fun('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),happ(s(fun('type.list.list'('type.infer_t.infer_t'),fun('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))))),happ(s(fun('type.list.list'('type.infer_t.infer_t'),fun('type.list.list'('type.infer_t.infer_t'),fun('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))))),'const.infer.add_constraints_0'),s('type.list.list'('type.infer_t.infer_t'),X37))),s('type.list.list'('type.infer_t.infer_t'),X38))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X47)))),
  file('thm.inferProps.success_eqns|split|8','ARITY_0_3_const.infer.add_constraints')).
fof(f202,plain,(
  ( ! [X2,X0,X1] : (s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraint_3'(s('type.infer_t.infer_t',X0),s('type.infer_t.infer_t',X1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X2))) = s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),happ(s(fun('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),happ(s(fun('type.infer_t.infer_t',fun('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))))),happ(s(fun('type.infer_t.infer_t',fun('type.infer_t.infer_t',fun('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))))),'const.infer.add_constraint_0'),s('type.infer_t.infer_t',X0))),s('type.infer_t.infer_t',X1))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X2)))) )),
  inference(cnf_transformation,[],[f90])).
fof(f90,plain,(
  ! [X0,X1,X2] : s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraint_3'(s('type.infer_t.infer_t',X0),s('type.infer_t.infer_t',X1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X2))) = s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),happ(s(fun('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),happ(s(fun('type.infer_t.infer_t',fun('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))))),happ(s(fun('type.infer_t.infer_t',fun('type.infer_t.infer_t',fun('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))))),'const.infer.add_constraint_0'),s('type.infer_t.infer_t',X0))),s('type.infer_t.infer_t',X1))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X2)))),
  inference(rectify,[],[f39])).
fof(f39,axiom,(
  ! [X37,X38,X47] : s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraint_3'(s('type.infer_t.infer_t',X37),s('type.infer_t.infer_t',X38),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X47))) = s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),happ(s(fun('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),happ(s(fun('type.infer_t.infer_t',fun('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))))),happ(s(fun('type.infer_t.infer_t',fun('type.infer_t.infer_t',fun('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))))),'const.infer.add_constraint_0'),s('type.infer_t.infer_t',X37))),s('type.infer_t.infer_t',X38))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X47)))),
  file('thm.inferProps.success_eqns|split|8','ARITY_0_3_const.infer.add_constraint')).
fof(f199,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'(X0,'type.list.list'('type.string.char')),X1),'const.pair.,_2'(s('type.infer.exc'(X0,'type.list.list'('type.string.char')),'const.infer.Success_1'(s(X0,X5))),s(X1,X6))) != s('type.pair.prod'('type.infer.exc'(X0,'type.list.list'('type.string.char')),X1),'const.infer.lookup_tenvC_st_ex_3'(s('type.ast.id'('type.list.list'('type.string.char')),X2),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X0)))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X0))),X3),s(X1,X4))) | s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X5))) = s('type.option.option'(X0),'const.semanticPrimitives.lookup_alist_mod_env_2'(s('type.ast.id'('type.list.list'('type.string.char')),X2),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X0)))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X0))),X3)))) )),
  inference(cnf_transformation,[],[f137])).
fof(f137,plain,(
  ! [X0,X1,X2,X3,X4,X5,X6] : ((s('type.pair.prod'('type.infer.exc'(X0,'type.list.list'('type.string.char')),X1),'const.pair.,_2'(s('type.infer.exc'(X0,'type.list.list'('type.string.char')),'const.infer.Success_1'(s(X0,X5))),s(X1,X6))) != s('type.pair.prod'('type.infer.exc'(X0,'type.list.list'('type.string.char')),X1),'const.infer.lookup_tenvC_st_ex_3'(s('type.ast.id'('type.list.list'('type.string.char')),X2),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X0)))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X0))),X3),s(X1,X4))) | (s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X5))) = s('type.option.option'(X0),'const.semanticPrimitives.lookup_alist_mod_env_2'(s('type.ast.id'('type.list.list'('type.string.char')),X2),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X0)))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X0))),X3))) & s(X1,X4) = s(X1,X6))) & (s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X5))) != s('type.option.option'(X0),'const.semanticPrimitives.lookup_alist_mod_env_2'(s('type.ast.id'('type.list.list'('type.string.char')),X2),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X0)))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X0))),X3))) | s(X1,X4) != s(X1,X6) | s('type.pair.prod'('type.infer.exc'(X0,'type.list.list'('type.string.char')),X1),'const.pair.,_2'(s('type.infer.exc'(X0,'type.list.list'('type.string.char')),'const.infer.Success_1'(s(X0,X5))),s(X1,X6))) = s('type.pair.prod'('type.infer.exc'(X0,'type.list.list'('type.string.char')),X1),'const.infer.lookup_tenvC_st_ex_3'(s('type.ast.id'('type.list.list'('type.string.char')),X2),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X0)))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X0))),X3),s(X1,X4)))))),
  inference(flattening,[],[f136])).
fof(f136,plain,(
  ! [X0,X1,X2,X3,X4,X5,X6] : ((s('type.pair.prod'('type.infer.exc'(X0,'type.list.list'('type.string.char')),X1),'const.pair.,_2'(s('type.infer.exc'(X0,'type.list.list'('type.string.char')),'const.infer.Success_1'(s(X0,X5))),s(X1,X6))) != s('type.pair.prod'('type.infer.exc'(X0,'type.list.list'('type.string.char')),X1),'const.infer.lookup_tenvC_st_ex_3'(s('type.ast.id'('type.list.list'('type.string.char')),X2),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X0)))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X0))),X3),s(X1,X4))) | (s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X5))) = s('type.option.option'(X0),'const.semanticPrimitives.lookup_alist_mod_env_2'(s('type.ast.id'('type.list.list'('type.string.char')),X2),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X0)))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X0))),X3))) & s(X1,X4) = s(X1,X6))) & ((s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X5))) != s('type.option.option'(X0),'const.semanticPrimitives.lookup_alist_mod_env_2'(s('type.ast.id'('type.list.list'('type.string.char')),X2),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X0)))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X0))),X3))) | s(X1,X4) != s(X1,X6)) | s('type.pair.prod'('type.infer.exc'(X0,'type.list.list'('type.string.char')),X1),'const.pair.,_2'(s('type.infer.exc'(X0,'type.list.list'('type.string.char')),'const.infer.Success_1'(s(X0,X5))),s(X1,X6))) = s('type.pair.prod'('type.infer.exc'(X0,'type.list.list'('type.string.char')),X1),'const.infer.lookup_tenvC_st_ex_3'(s('type.ast.id'('type.list.list'('type.string.char')),X2),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X0)))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X0))),X3),s(X1,X4)))))),
  inference(nnf_transformation,[],[f89])).
fof(f89,plain,(
  ! [X0,X1,X2,X3,X4,X5,X6] : (s('type.pair.prod'('type.infer.exc'(X0,'type.list.list'('type.string.char')),X1),'const.pair.,_2'(s('type.infer.exc'(X0,'type.list.list'('type.string.char')),'const.infer.Success_1'(s(X0,X5))),s(X1,X6))) = s('type.pair.prod'('type.infer.exc'(X0,'type.list.list'('type.string.char')),X1),'const.infer.lookup_tenvC_st_ex_3'(s('type.ast.id'('type.list.list'('type.string.char')),X2),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X0)))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X0))),X3),s(X1,X4))) <=> (s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X5))) = s('type.option.option'(X0),'const.semanticPrimitives.lookup_alist_mod_env_2'(s('type.ast.id'('type.list.list'('type.string.char')),X2),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X0)))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X0))),X3))) & s(X1,X4) = s(X1,X6)))),
  inference(flattening,[],[f88])).
fof(f88,plain,(
  ! [X0,X1] : ! [X2,X3,X4,X5,X6] : (s('type.pair.prod'('type.infer.exc'(X0,'type.list.list'('type.string.char')),X1),'const.pair.,_2'(s('type.infer.exc'(X0,'type.list.list'('type.string.char')),'const.infer.Success_1'(s(X0,X5))),s(X1,X6))) = s('type.pair.prod'('type.infer.exc'(X0,'type.list.list'('type.string.char')),X1),'const.infer.lookup_tenvC_st_ex_3'(s('type.ast.id'('type.list.list'('type.string.char')),X2),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X0)))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X0))),X3),s(X1,X4))) <=> (s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X5))) = s('type.option.option'(X0),'const.semanticPrimitives.lookup_alist_mod_env_2'(s('type.ast.id'('type.list.list'('type.string.char')),X2),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X0)))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X0))),X3))) & s(X1,X4) = s(X1,X6)))),
  inference(rectify,[],[f19])).
fof(f19,axiom,(
  ! [X12,X11] : ! [X33,X32,X16,X15,X18] : (s('type.pair.prod'('type.infer.exc'(X12,'type.list.list'('type.string.char')),X11),'const.pair.,_2'(s('type.infer.exc'(X12,'type.list.list'('type.string.char')),'const.infer.Success_1'(s(X12,X15))),s(X11,X18))) = s('type.pair.prod'('type.infer.exc'(X12,'type.list.list'('type.string.char')),X11),'const.infer.lookup_tenvC_st_ex_3'(s('type.ast.id'('type.list.list'('type.string.char')),X33),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X12)))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X12))),X32),s(X11,X16))) <=> (s('type.option.option'(X12),'const.option.SOME_1'(s(X12,X15))) = s('type.option.option'(X12),'const.semanticPrimitives.lookup_alist_mod_env_2'(s('type.ast.id'('type.list.list'('type.string.char')),X33),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X12)))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X12))),X32))) & s(X11,X16) = s(X11,X18)))),
  file('thm.inferProps.success_eqns|split|8','thm.inferProps.inferProps_34_prove_ltb')).
fof(f200,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'(X0,'type.list.list'('type.string.char')),X1),'const.pair.,_2'(s('type.infer.exc'(X0,'type.list.list'('type.string.char')),'const.infer.Success_1'(s(X0,X5))),s(X1,X6))) != s('type.pair.prod'('type.infer.exc'(X0,'type.list.list'('type.string.char')),X1),'const.infer.lookup_tenvC_st_ex_3'(s('type.ast.id'('type.list.list'('type.string.char')),X2),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X0)))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X0))),X3),s(X1,X4))) | s(X1,X4) = s(X1,X6)) )),
  inference(cnf_transformation,[],[f137])).
fof(f201,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X5))) != s('type.option.option'(X0),'const.semanticPrimitives.lookup_alist_mod_env_2'(s('type.ast.id'('type.list.list'('type.string.char')),X2),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X0)))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X0))),X3))) | s(X1,X4) != s(X1,X6) | s('type.pair.prod'('type.infer.exc'(X0,'type.list.list'('type.string.char')),X1),'const.pair.,_2'(s('type.infer.exc'(X0,'type.list.list'('type.string.char')),'const.infer.Success_1'(s(X0,X5))),s(X1,X6))) = s('type.pair.prod'('type.infer.exc'(X0,'type.list.list'('type.string.char')),X1),'const.infer.lookup_tenvC_st_ex_3'(s('type.ast.id'('type.list.list'('type.string.char')),X2),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X0)))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X0))),X3),s(X1,X4)))) )),
  inference(cnf_transformation,[],[f137])).
fof(f195,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (p(s(bool,X2)) | s('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),'const.infer.guard_3'(s(bool,X2),s(X0,X3),s(X1,X4))) != s('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),'const.pair.,_2'(s('type.infer.exc'('type.one.one',X0),'const.infer.Success_1'(s('type.one.one',X5))),s(X1,X6)))) )),
  inference(cnf_transformation,[],[f135])).
fof(f197,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),'const.infer.guard_3'(s(bool,X2),s(X0,X3),s(X1,X4))) != s('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),'const.pair.,_2'(s('type.infer.exc'('type.one.one',X0),'const.infer.Success_1'(s('type.one.one',X5))),s(X1,X6))) | s(X1,X4) = s(X1,X6)) )),
  inference(cnf_transformation,[],[f135])).
fof(f192,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),'const.infer.n_fresh_uvar_2'(s('type.num.num',X2),s('type.infer.infer_st'(X1),X3))) != s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),'const.pair.,_2'(s('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'const.infer.Success_1'(s('type.list.list'('type.infer_t.infer_t'),X4))),s('type.infer.infer_st'(X1),X5))) | s('type.list.list'('type.infer_t.infer_t'),X4) = s('type.list.list'('type.infer_t.infer_t'),'const.list.MAP_2'(s(fun('type.num.num','type.infer_t.infer_t'),'_dst_x0x1_2'(s(fun('type.num.num','type.infer_t.infer_t'),'const.infer_t.Infer_Tuvar_0'),s(fun('type.num.num','type.num.num'),'const.arithmetic.+_1'(s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'(X1),X3))))))),s('type.list.list'('type.num.num'),'const.rich_list.COUNT_LIST_1'(s('type.num.num',X2)))))) )),
  inference(cnf_transformation,[],[f133])).
fof(f133,plain,(
  ! [X0,X1,X2,X3,X4,X5] : ((s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),'const.infer.n_fresh_uvar_2'(s('type.num.num',X2),s('type.infer.infer_st'(X1),X3))) != s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),'const.pair.,_2'(s('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'const.infer.Success_1'(s('type.list.list'('type.infer_t.infer_t'),X4))),s('type.infer.infer_st'(X1),X5))) | (s('type.list.list'('type.infer_t.infer_t'),X4) = s('type.list.list'('type.infer_t.infer_t'),'const.list.MAP_2'(s(fun('type.num.num','type.infer_t.infer_t'),'_dst_x0x1_2'(s(fun('type.num.num','type.infer_t.infer_t'),'const.infer_t.Infer_Tuvar_0'),s(fun('type.num.num','type.num.num'),'const.arithmetic.+_1'(s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'(X1),X3))))))),s('type.list.list'('type.num.num'),'const.rich_list.COUNT_LIST_1'(s('type.num.num',X2))))) & s('type.infer.infer_st'(X1),X5) = s('type.infer.infer_st'(X1),'const.infer.infer_st_next_uvar_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.arithmetic.+_1'(s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'(X1),X3))))),s('type.num.num',X2))))),s('type.infer.infer_st'(X1),X3))))) & (s('type.list.list'('type.infer_t.infer_t'),X4) != s('type.list.list'('type.infer_t.infer_t'),'const.list.MAP_2'(s(fun('type.num.num','type.infer_t.infer_t'),'_dst_x0x1_2'(s(fun('type.num.num','type.infer_t.infer_t'),'const.infer_t.Infer_Tuvar_0'),s(fun('type.num.num','type.num.num'),'const.arithmetic.+_1'(s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'(X1),X3))))))),s('type.list.list'('type.num.num'),'const.rich_list.COUNT_LIST_1'(s('type.num.num',X2))))) | s('type.infer.infer_st'(X1),X5) != s('type.infer.infer_st'(X1),'const.infer.infer_st_next_uvar_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.arithmetic.+_1'(s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'(X1),X3))))),s('type.num.num',X2))))),s('type.infer.infer_st'(X1),X3))) | s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),'const.infer.n_fresh_uvar_2'(s('type.num.num',X2),s('type.infer.infer_st'(X1),X3))) = s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),'const.pair.,_2'(s('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'const.infer.Success_1'(s('type.list.list'('type.infer_t.infer_t'),X4))),s('type.infer.infer_st'(X1),X5)))))),
  inference(flattening,[],[f132])).
fof(f132,plain,(
  ! [X0,X1,X2,X3,X4,X5] : ((s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),'const.infer.n_fresh_uvar_2'(s('type.num.num',X2),s('type.infer.infer_st'(X1),X3))) != s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),'const.pair.,_2'(s('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'const.infer.Success_1'(s('type.list.list'('type.infer_t.infer_t'),X4))),s('type.infer.infer_st'(X1),X5))) | (s('type.list.list'('type.infer_t.infer_t'),X4) = s('type.list.list'('type.infer_t.infer_t'),'const.list.MAP_2'(s(fun('type.num.num','type.infer_t.infer_t'),'_dst_x0x1_2'(s(fun('type.num.num','type.infer_t.infer_t'),'const.infer_t.Infer_Tuvar_0'),s(fun('type.num.num','type.num.num'),'const.arithmetic.+_1'(s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'(X1),X3))))))),s('type.list.list'('type.num.num'),'const.rich_list.COUNT_LIST_1'(s('type.num.num',X2))))) & s('type.infer.infer_st'(X1),X5) = s('type.infer.infer_st'(X1),'const.infer.infer_st_next_uvar_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.arithmetic.+_1'(s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'(X1),X3))))),s('type.num.num',X2))))),s('type.infer.infer_st'(X1),X3))))) & ((s('type.list.list'('type.infer_t.infer_t'),X4) != s('type.list.list'('type.infer_t.infer_t'),'const.list.MAP_2'(s(fun('type.num.num','type.infer_t.infer_t'),'_dst_x0x1_2'(s(fun('type.num.num','type.infer_t.infer_t'),'const.infer_t.Infer_Tuvar_0'),s(fun('type.num.num','type.num.num'),'const.arithmetic.+_1'(s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'(X1),X3))))))),s('type.list.list'('type.num.num'),'const.rich_list.COUNT_LIST_1'(s('type.num.num',X2))))) | s('type.infer.infer_st'(X1),X5) != s('type.infer.infer_st'(X1),'const.infer.infer_st_next_uvar_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.arithmetic.+_1'(s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'(X1),X3))))),s('type.num.num',X2))))),s('type.infer.infer_st'(X1),X3)))) | s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),'const.infer.n_fresh_uvar_2'(s('type.num.num',X2),s('type.infer.infer_st'(X1),X3))) = s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),'const.pair.,_2'(s('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'const.infer.Success_1'(s('type.list.list'('type.infer_t.infer_t'),X4))),s('type.infer.infer_st'(X1),X5)))))),
  inference(nnf_transformation,[],[f85])).
fof(f85,plain,(
  ! [X0,X1,X2,X3,X4,X5] : (s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),'const.infer.n_fresh_uvar_2'(s('type.num.num',X2),s('type.infer.infer_st'(X1),X3))) = s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),'const.pair.,_2'(s('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'const.infer.Success_1'(s('type.list.list'('type.infer_t.infer_t'),X4))),s('type.infer.infer_st'(X1),X5))) <=> (s('type.list.list'('type.infer_t.infer_t'),X4) = s('type.list.list'('type.infer_t.infer_t'),'const.list.MAP_2'(s(fun('type.num.num','type.infer_t.infer_t'),'_dst_x0x1_2'(s(fun('type.num.num','type.infer_t.infer_t'),'const.infer_t.Infer_Tuvar_0'),s(fun('type.num.num','type.num.num'),'const.arithmetic.+_1'(s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'(X1),X3))))))),s('type.list.list'('type.num.num'),'const.rich_list.COUNT_LIST_1'(s('type.num.num',X2))))) & s('type.infer.infer_st'(X1),X5) = s('type.infer.infer_st'(X1),'const.infer.infer_st_next_uvar_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.arithmetic.+_1'(s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'(X1),X3))))),s('type.num.num',X2))))),s('type.infer.infer_st'(X1),X3)))))),
  inference(flattening,[],[f84])).
fof(f84,plain,(
  ! [X0,X1] : ! [X2,X3,X4,X5] : (s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),'const.infer.n_fresh_uvar_2'(s('type.num.num',X2),s('type.infer.infer_st'(X1),X3))) = s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),'const.pair.,_2'(s('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'const.infer.Success_1'(s('type.list.list'('type.infer_t.infer_t'),X4))),s('type.infer.infer_st'(X1),X5))) <=> (s('type.list.list'('type.infer_t.infer_t'),X4) = s('type.list.list'('type.infer_t.infer_t'),'const.list.MAP_2'(s(fun('type.num.num','type.infer_t.infer_t'),'_dst_x0x1_2'(s(fun('type.num.num','type.infer_t.infer_t'),'const.infer_t.Infer_Tuvar_0'),s(fun('type.num.num','type.num.num'),'const.arithmetic.+_1'(s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'(X1),X3))))))),s('type.list.list'('type.num.num'),'const.rich_list.COUNT_LIST_1'(s('type.num.num',X2))))) & s('type.infer.infer_st'(X1),X5) = s('type.infer.infer_st'(X1),'const.infer.infer_st_next_uvar_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.arithmetic.+_1'(s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'(X1),X3))))),s('type.num.num',X2))))),s('type.infer.infer_st'(X1),X3)))))),
  inference(rectify,[],[f12])).
fof(f12,axiom,(
  ! [X11,X12] : ! [X24,X16,X13,X18] : (s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X11),'type.infer.infer_st'(X12)),'const.infer.n_fresh_uvar_2'(s('type.num.num',X24),s('type.infer.infer_st'(X12),X16))) = s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X11),'type.infer.infer_st'(X12)),'const.pair.,_2'(s('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X11),'const.infer.Success_1'(s('type.list.list'('type.infer_t.infer_t'),X13))),s('type.infer.infer_st'(X12),X18))) <=> (s('type.list.list'('type.infer_t.infer_t'),X13) = s('type.list.list'('type.infer_t.infer_t'),'const.list.MAP_2'(s(fun('type.num.num','type.infer_t.infer_t'),'_dst_x0x1_2'(s(fun('type.num.num','type.infer_t.infer_t'),'const.infer_t.Infer_Tuvar_0'),s(fun('type.num.num','type.num.num'),'const.arithmetic.+_1'(s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'(X12),X16))))))),s('type.list.list'('type.num.num'),'const.rich_list.COUNT_LIST_1'(s('type.num.num',X24))))) & s('type.infer.infer_st'(X12),X18) = s('type.infer.infer_st'(X12),'const.infer.infer_st_next_uvar_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.arithmetic.+_1'(s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'(X12),X16))))),s('type.num.num',X24))))),s('type.infer.infer_st'(X12),X16)))))),
  file('thm.inferProps.success_eqns|split|8','thm.inferProps.inferProps_27_prove_ltb')).
fof(f251,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),'const.infer.n_fresh_uvar_2'(s('type.num.num',X2),s('type.infer.infer_st'(X1),X3))) != s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),'const.pair.,_2'(s('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'const.infer.Success_1'(s('type.list.list'('type.infer_t.infer_t'),X4))),s('type.infer.infer_st'(X1),X5))) | s('type.infer.infer_st'(X1),X5) = s('type.infer.infer_st'(X1),'const.infer.infer_st_next_uvar_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'(X1),X3))),s('type.num.num',X2))))),s('type.infer.infer_st'(X1),X3)))) )),
  inference(forward_demodulation,[],[f193,f175])).
fof(f193,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s('type.infer.infer_st'(X1),X5) = s('type.infer.infer_st'(X1),'const.infer.infer_st_next_uvar_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.arithmetic.+_1'(s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'(X1),X3))))),s('type.num.num',X2))))),s('type.infer.infer_st'(X1),X3))) | s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),'const.infer.n_fresh_uvar_2'(s('type.num.num',X2),s('type.infer.infer_st'(X1),X3))) != s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),'const.pair.,_2'(s('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'const.infer.Success_1'(s('type.list.list'('type.infer_t.infer_t'),X4))),s('type.infer.infer_st'(X1),X5)))) )),
  inference(cnf_transformation,[],[f133])).
fof(f250,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s('type.infer.infer_st'(X1),X5) != s('type.infer.infer_st'(X1),'const.infer.infer_st_next_uvar_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'(X1),X3))),s('type.num.num',X2))))),s('type.infer.infer_st'(X1),X3))) | s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),'const.infer.n_fresh_uvar_2'(s('type.num.num',X2),s('type.infer.infer_st'(X1),X3))) = s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),'const.pair.,_2'(s('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'const.infer.Success_1'(s('type.list.list'('type.infer_t.infer_t'),X4))),s('type.infer.infer_st'(X1),X5))) | s('type.list.list'('type.infer_t.infer_t'),X4) != s('type.list.list'('type.infer_t.infer_t'),'const.list.MAP_2'(s(fun('type.num.num','type.infer_t.infer_t'),'_dst_x0x1_2'(s(fun('type.num.num','type.infer_t.infer_t'),'const.infer_t.Infer_Tuvar_0'),s(fun('type.num.num','type.num.num'),'const.arithmetic.+_1'(s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'(X1),X3))))))),s('type.list.list'('type.num.num'),'const.rich_list.COUNT_LIST_1'(s('type.num.num',X2)))))) )),
  inference(forward_demodulation,[],[f194,f175])).
fof(f194,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),'const.infer.n_fresh_uvar_2'(s('type.num.num',X2),s('type.infer.infer_st'(X1),X3))) = s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),'const.pair.,_2'(s('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'const.infer.Success_1'(s('type.list.list'('type.infer_t.infer_t'),X4))),s('type.infer.infer_st'(X1),X5))) | s('type.infer.infer_st'(X1),X5) != s('type.infer.infer_st'(X1),'const.infer.infer_st_next_uvar_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.arithmetic.+_1'(s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'(X1),X3))))),s('type.num.num',X2))))),s('type.infer.infer_st'(X1),X3))) | s('type.list.list'('type.infer_t.infer_t'),X4) != s('type.list.list'('type.infer_t.infer_t'),'const.list.MAP_2'(s(fun('type.num.num','type.infer_t.infer_t'),'_dst_x0x1_2'(s(fun('type.num.num','type.infer_t.infer_t'),'const.infer_t.Infer_Tuvar_0'),s(fun('type.num.num','type.num.num'),'const.arithmetic.+_1'(s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'(X1),X3))))))),s('type.list.list'('type.num.num'),'const.rich_list.COUNT_LIST_1'(s('type.num.num',X2)))))) )),
  inference(cnf_transformation,[],[f133])).
fof(f189,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),'const.infer.fresh_uvar_1'(s('type.infer.infer_st'(X1),X2))) != s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),'const.pair.,_2'(s('type.infer.exc'('type.infer_t.infer_t',X0),'const.infer.Success_1'(s('type.infer_t.infer_t',X3))),s('type.infer.infer_st'(X1),X4))) | s('type.infer_t.infer_t',X3) = s('type.infer_t.infer_t','const.infer_t.Infer_Tuvar_1'(s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'(X1),X2)))))) )),
  inference(cnf_transformation,[],[f131])).
fof(f131,plain,(
  ! [X0,X1,X2,X3,X4] : ((s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),'const.infer.fresh_uvar_1'(s('type.infer.infer_st'(X1),X2))) != s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),'const.pair.,_2'(s('type.infer.exc'('type.infer_t.infer_t',X0),'const.infer.Success_1'(s('type.infer_t.infer_t',X3))),s('type.infer.infer_st'(X1),X4))) | (s('type.infer_t.infer_t',X3) = s('type.infer_t.infer_t','const.infer_t.Infer_Tuvar_1'(s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'(X1),X2))))) & s('type.infer.infer_st'(X1),X4) = s('type.infer.infer_st'(X1),'const.infer.infer_st_next_uvar_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'(X1),X2))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.infer.infer_st'(X1),X2))))) & (s('type.infer_t.infer_t',X3) != s('type.infer_t.infer_t','const.infer_t.Infer_Tuvar_1'(s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'(X1),X2))))) | s('type.infer.infer_st'(X1),X4) != s('type.infer.infer_st'(X1),'const.infer.infer_st_next_uvar_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'(X1),X2))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.infer.infer_st'(X1),X2))) | s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),'const.infer.fresh_uvar_1'(s('type.infer.infer_st'(X1),X2))) = s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),'const.pair.,_2'(s('type.infer.exc'('type.infer_t.infer_t',X0),'const.infer.Success_1'(s('type.infer_t.infer_t',X3))),s('type.infer.infer_st'(X1),X4)))))),
  inference(flattening,[],[f130])).
fof(f130,plain,(
  ! [X0,X1,X2,X3,X4] : ((s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),'const.infer.fresh_uvar_1'(s('type.infer.infer_st'(X1),X2))) != s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),'const.pair.,_2'(s('type.infer.exc'('type.infer_t.infer_t',X0),'const.infer.Success_1'(s('type.infer_t.infer_t',X3))),s('type.infer.infer_st'(X1),X4))) | (s('type.infer_t.infer_t',X3) = s('type.infer_t.infer_t','const.infer_t.Infer_Tuvar_1'(s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'(X1),X2))))) & s('type.infer.infer_st'(X1),X4) = s('type.infer.infer_st'(X1),'const.infer.infer_st_next_uvar_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'(X1),X2))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.infer.infer_st'(X1),X2))))) & ((s('type.infer_t.infer_t',X3) != s('type.infer_t.infer_t','const.infer_t.Infer_Tuvar_1'(s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'(X1),X2))))) | s('type.infer.infer_st'(X1),X4) != s('type.infer.infer_st'(X1),'const.infer.infer_st_next_uvar_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'(X1),X2))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.infer.infer_st'(X1),X2)))) | s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),'const.infer.fresh_uvar_1'(s('type.infer.infer_st'(X1),X2))) = s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),'const.pair.,_2'(s('type.infer.exc'('type.infer_t.infer_t',X0),'const.infer.Success_1'(s('type.infer_t.infer_t',X3))),s('type.infer.infer_st'(X1),X4)))))),
  inference(nnf_transformation,[],[f83])).
fof(f83,plain,(
  ! [X0,X1,X2,X3,X4] : (s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),'const.infer.fresh_uvar_1'(s('type.infer.infer_st'(X1),X2))) = s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),'const.pair.,_2'(s('type.infer.exc'('type.infer_t.infer_t',X0),'const.infer.Success_1'(s('type.infer_t.infer_t',X3))),s('type.infer.infer_st'(X1),X4))) <=> (s('type.infer_t.infer_t',X3) = s('type.infer_t.infer_t','const.infer_t.Infer_Tuvar_1'(s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'(X1),X2))))) & s('type.infer.infer_st'(X1),X4) = s('type.infer.infer_st'(X1),'const.infer.infer_st_next_uvar_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'(X1),X2))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.infer.infer_st'(X1),X2)))))),
  inference(flattening,[],[f82])).
fof(f82,plain,(
  ! [X0,X1] : ! [X2,X3,X4] : (s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),'const.infer.fresh_uvar_1'(s('type.infer.infer_st'(X1),X2))) = s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),'const.pair.,_2'(s('type.infer.exc'('type.infer_t.infer_t',X0),'const.infer.Success_1'(s('type.infer_t.infer_t',X3))),s('type.infer.infer_st'(X1),X4))) <=> (s('type.infer_t.infer_t',X3) = s('type.infer_t.infer_t','const.infer_t.Infer_Tuvar_1'(s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'(X1),X2))))) & s('type.infer.infer_st'(X1),X4) = s('type.infer.infer_st'(X1),'const.infer.infer_st_next_uvar_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'(X1),X2))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.infer.infer_st'(X1),X2)))))),
  inference(rectify,[],[f11])).
fof(f11,axiom,(
  ! [X11,X12] : ! [X16,X23,X18] : (s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X11),'type.infer.infer_st'(X12)),'const.infer.fresh_uvar_1'(s('type.infer.infer_st'(X12),X16))) = s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X11),'type.infer.infer_st'(X12)),'const.pair.,_2'(s('type.infer.exc'('type.infer_t.infer_t',X11),'const.infer.Success_1'(s('type.infer_t.infer_t',X23))),s('type.infer.infer_st'(X12),X18))) <=> (s('type.infer_t.infer_t',X23) = s('type.infer_t.infer_t','const.infer_t.Infer_Tuvar_1'(s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'(X12),X16))))) & s('type.infer.infer_st'(X12),X18) = s('type.infer.infer_st'(X12),'const.infer.infer_st_next_uvar_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'(X12),X16))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.infer.infer_st'(X12),X16)))))),
  file('thm.inferProps.success_eqns|split|8','thm.inferProps.inferProps_26_prove_ltb')).
fof(f190,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),'const.infer.fresh_uvar_1'(s('type.infer.infer_st'(X1),X2))) != s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),'const.pair.,_2'(s('type.infer.exc'('type.infer_t.infer_t',X0),'const.infer.Success_1'(s('type.infer_t.infer_t',X3))),s('type.infer.infer_st'(X1),X4))) | s('type.infer.infer_st'(X1),X4) = s('type.infer.infer_st'(X1),'const.infer.infer_st_next_uvar_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'(X1),X2))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.infer.infer_st'(X1),X2)))) )),
  inference(cnf_transformation,[],[f131])).
fof(f191,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s('type.infer.infer_st'(X1),X4) != s('type.infer.infer_st'(X1),'const.infer.infer_st_next_uvar_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'(X1),X2))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.infer.infer_st'(X1),X2))) | s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),'const.infer.fresh_uvar_1'(s('type.infer.infer_st'(X1),X2))) = s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),'const.pair.,_2'(s('type.infer.exc'('type.infer_t.infer_t',X0),'const.infer.Success_1'(s('type.infer_t.infer_t',X3))),s('type.infer.infer_st'(X1),X4))) | s('type.infer_t.infer_t',X3) != s('type.infer_t.infer_t','const.infer_t.Infer_Tuvar_1'(s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'(X1),X2)))))) )),
  inference(cnf_transformation,[],[f131])).
fof(f186,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.num.num',X0),'type.infer.infer_st'(X1)),'const.infer.get_next_uvar_1'(s('type.infer.infer_st'(X1),X2))) != s('type.pair.prod'('type.infer.exc'('type.num.num',X0),'type.infer.infer_st'(X1)),'const.pair.,_2'(s('type.infer.exc'('type.num.num',X0),'const.infer.Success_1'(s('type.num.num',X3))),s('type.infer.infer_st'(X1),X4))) | s('type.num.num',X3) = s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'(X1),X2)))) )),
  inference(cnf_transformation,[],[f129])).
fof(f129,plain,(
  ! [X0,X1,X2,X3,X4] : ((s('type.pair.prod'('type.infer.exc'('type.num.num',X0),'type.infer.infer_st'(X1)),'const.infer.get_next_uvar_1'(s('type.infer.infer_st'(X1),X2))) != s('type.pair.prod'('type.infer.exc'('type.num.num',X0),'type.infer.infer_st'(X1)),'const.pair.,_2'(s('type.infer.exc'('type.num.num',X0),'const.infer.Success_1'(s('type.num.num',X3))),s('type.infer.infer_st'(X1),X4))) | (s('type.num.num',X3) = s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'(X1),X2))) & s('type.infer.infer_st'(X1),X2) = s('type.infer.infer_st'(X1),X4))) & (s('type.num.num',X3) != s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'(X1),X2))) | s('type.infer.infer_st'(X1),X2) != s('type.infer.infer_st'(X1),X4) | s('type.pair.prod'('type.infer.exc'('type.num.num',X0),'type.infer.infer_st'(X1)),'const.infer.get_next_uvar_1'(s('type.infer.infer_st'(X1),X2))) = s('type.pair.prod'('type.infer.exc'('type.num.num',X0),'type.infer.infer_st'(X1)),'const.pair.,_2'(s('type.infer.exc'('type.num.num',X0),'const.infer.Success_1'(s('type.num.num',X3))),s('type.infer.infer_st'(X1),X4)))))),
  inference(flattening,[],[f128])).
fof(f128,plain,(
  ! [X0,X1,X2,X3,X4] : ((s('type.pair.prod'('type.infer.exc'('type.num.num',X0),'type.infer.infer_st'(X1)),'const.infer.get_next_uvar_1'(s('type.infer.infer_st'(X1),X2))) != s('type.pair.prod'('type.infer.exc'('type.num.num',X0),'type.infer.infer_st'(X1)),'const.pair.,_2'(s('type.infer.exc'('type.num.num',X0),'const.infer.Success_1'(s('type.num.num',X3))),s('type.infer.infer_st'(X1),X4))) | (s('type.num.num',X3) = s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'(X1),X2))) & s('type.infer.infer_st'(X1),X2) = s('type.infer.infer_st'(X1),X4))) & ((s('type.num.num',X3) != s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'(X1),X2))) | s('type.infer.infer_st'(X1),X2) != s('type.infer.infer_st'(X1),X4)) | s('type.pair.prod'('type.infer.exc'('type.num.num',X0),'type.infer.infer_st'(X1)),'const.infer.get_next_uvar_1'(s('type.infer.infer_st'(X1),X2))) = s('type.pair.prod'('type.infer.exc'('type.num.num',X0),'type.infer.infer_st'(X1)),'const.pair.,_2'(s('type.infer.exc'('type.num.num',X0),'const.infer.Success_1'(s('type.num.num',X3))),s('type.infer.infer_st'(X1),X4)))))),
  inference(nnf_transformation,[],[f81])).
fof(f81,plain,(
  ! [X0,X1,X2,X3,X4] : (s('type.pair.prod'('type.infer.exc'('type.num.num',X0),'type.infer.infer_st'(X1)),'const.infer.get_next_uvar_1'(s('type.infer.infer_st'(X1),X2))) = s('type.pair.prod'('type.infer.exc'('type.num.num',X0),'type.infer.infer_st'(X1)),'const.pair.,_2'(s('type.infer.exc'('type.num.num',X0),'const.infer.Success_1'(s('type.num.num',X3))),s('type.infer.infer_st'(X1),X4))) <=> (s('type.num.num',X3) = s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'(X1),X2))) & s('type.infer.infer_st'(X1),X2) = s('type.infer.infer_st'(X1),X4)))),
  inference(flattening,[],[f80])).
fof(f80,plain,(
  ! [X0,X1] : ! [X2,X3,X4] : (s('type.pair.prod'('type.infer.exc'('type.num.num',X0),'type.infer.infer_st'(X1)),'const.infer.get_next_uvar_1'(s('type.infer.infer_st'(X1),X2))) = s('type.pair.prod'('type.infer.exc'('type.num.num',X0),'type.infer.infer_st'(X1)),'const.pair.,_2'(s('type.infer.exc'('type.num.num',X0),'const.infer.Success_1'(s('type.num.num',X3))),s('type.infer.infer_st'(X1),X4))) <=> (s('type.num.num',X3) = s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'(X1),X2))) & s('type.infer.infer_st'(X1),X2) = s('type.infer.infer_st'(X1),X4)))),
  inference(rectify,[],[f20])).
fof(f20,axiom,(
  ! [X11,X12] : ! [X16,X15,X18] : (s('type.pair.prod'('type.infer.exc'('type.num.num',X11),'type.infer.infer_st'(X12)),'const.infer.get_next_uvar_1'(s('type.infer.infer_st'(X12),X16))) = s('type.pair.prod'('type.infer.exc'('type.num.num',X11),'type.infer.infer_st'(X12)),'const.pair.,_2'(s('type.infer.exc'('type.num.num',X11),'const.infer.Success_1'(s('type.num.num',X15))),s('type.infer.infer_st'(X12),X18))) <=> (s('type.num.num',X15) = s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'(X12),X16))) & s('type.infer.infer_st'(X12),X16) = s('type.infer.infer_st'(X12),X18)))),
  file('thm.inferProps.success_eqns|split|8','thm.inferProps.inferProps_37_prove_ltb')).
fof(f187,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.num.num',X0),'type.infer.infer_st'(X1)),'const.infer.get_next_uvar_1'(s('type.infer.infer_st'(X1),X2))) != s('type.pair.prod'('type.infer.exc'('type.num.num',X0),'type.infer.infer_st'(X1)),'const.pair.,_2'(s('type.infer.exc'('type.num.num',X0),'const.infer.Success_1'(s('type.num.num',X3))),s('type.infer.infer_st'(X1),X4))) | s('type.infer.infer_st'(X1),X2) = s('type.infer.infer_st'(X1),X4)) )),
  inference(cnf_transformation,[],[f129])).
fof(f188,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s('type.infer.infer_st'(X1),X2) != s('type.infer.infer_st'(X1),X4) | s('type.pair.prod'('type.infer.exc'('type.num.num',X0),'type.infer.infer_st'(X1)),'const.infer.get_next_uvar_1'(s('type.infer.infer_st'(X1),X2))) = s('type.pair.prod'('type.infer.exc'('type.num.num',X0),'type.infer.infer_st'(X1)),'const.pair.,_2'(s('type.infer.exc'('type.num.num',X0),'const.infer.Success_1'(s('type.num.num',X3))),s('type.infer.infer_st'(X1),X4))) | s('type.num.num',X3) != s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'(X1),X2)))) )),
  inference(cnf_transformation,[],[f129])).
fof(f185,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s('type.pair.prod'('type.infer.exc'(X0,'type.list.list'('type.string.char')),X1),'const.infer.lookup_tenvC_st_ex_3'(s('type.ast.id'('type.list.list'('type.string.char')),X2),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X0)))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X0))),X3),s(X1,X4))) = s('type.pair.prod'('type.infer.exc'(X0,'type.list.list'('type.string.char')),X1),happ(s(fun(X1,'type.pair.prod'('type.infer.exc'(X0,'type.list.list'('type.string.char')),X1)),happ(s(fun('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X0)))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X0))),fun(X1,'type.pair.prod'('type.infer.exc'(X0,'type.list.list'('type.string.char')),X1))),happ(s(fun('type.ast.id'('type.list.list'('type.string.char')),fun('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X0)))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X0))),fun(X1,'type.pair.prod'('type.infer.exc'(X0,'type.list.list'('type.string.char')),X1)))),'const.infer.lookup_tenvC_st_ex_0'),s('type.ast.id'('type.list.list'('type.string.char')),X2))),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X0)))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X0))),X3))),s(X1,X4)))) )),
  inference(cnf_transformation,[],[f79])).
fof(f79,plain,(
  ! [X0,X1,X2,X3,X4] : s('type.pair.prod'('type.infer.exc'(X0,'type.list.list'('type.string.char')),X1),'const.infer.lookup_tenvC_st_ex_3'(s('type.ast.id'('type.list.list'('type.string.char')),X2),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X0)))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X0))),X3),s(X1,X4))) = s('type.pair.prod'('type.infer.exc'(X0,'type.list.list'('type.string.char')),X1),happ(s(fun(X1,'type.pair.prod'('type.infer.exc'(X0,'type.list.list'('type.string.char')),X1)),happ(s(fun('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X0)))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X0))),fun(X1,'type.pair.prod'('type.infer.exc'(X0,'type.list.list'('type.string.char')),X1))),happ(s(fun('type.ast.id'('type.list.list'('type.string.char')),fun('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X0)))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X0))),fun(X1,'type.pair.prod'('type.infer.exc'(X0,'type.list.list'('type.string.char')),X1)))),'const.infer.lookup_tenvC_st_ex_0'),s('type.ast.id'('type.list.list'('type.string.char')),X2))),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X0)))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X0))),X3))),s(X1,X4)))),
  inference(flattening,[],[f78])).
fof(f78,plain,(
  ! [X0,X1] : ! [X2,X3,X4] : s('type.pair.prod'('type.infer.exc'(X0,'type.list.list'('type.string.char')),X1),'const.infer.lookup_tenvC_st_ex_3'(s('type.ast.id'('type.list.list'('type.string.char')),X2),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X0)))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X0))),X3),s(X1,X4))) = s('type.pair.prod'('type.infer.exc'(X0,'type.list.list'('type.string.char')),X1),happ(s(fun(X1,'type.pair.prod'('type.infer.exc'(X0,'type.list.list'('type.string.char')),X1)),happ(s(fun('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X0)))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X0))),fun(X1,'type.pair.prod'('type.infer.exc'(X0,'type.list.list'('type.string.char')),X1))),happ(s(fun('type.ast.id'('type.list.list'('type.string.char')),fun('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X0)))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X0))),fun(X1,'type.pair.prod'('type.infer.exc'(X0,'type.list.list'('type.string.char')),X1)))),'const.infer.lookup_tenvC_st_ex_0'),s('type.ast.id'('type.list.list'('type.string.char')),X2))),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X0)))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X0))),X3))),s(X1,X4)))),
  inference(rectify,[],[f43])).
fof(f43,axiom,(
  ! [X11,X12] : ! [X37,X38,X47] : s('type.pair.prod'('type.infer.exc'(X11,'type.list.list'('type.string.char')),X12),'const.infer.lookup_tenvC_st_ex_3'(s('type.ast.id'('type.list.list'('type.string.char')),X37),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X11)))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X11))),X38),s(X12,X47))) = s('type.pair.prod'('type.infer.exc'(X11,'type.list.list'('type.string.char')),X12),happ(s(fun(X12,'type.pair.prod'('type.infer.exc'(X11,'type.list.list'('type.string.char')),X12)),happ(s(fun('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X11)))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X11))),fun(X12,'type.pair.prod'('type.infer.exc'(X11,'type.list.list'('type.string.char')),X12))),happ(s(fun('type.ast.id'('type.list.list'('type.string.char')),fun('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X11)))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X11))),fun(X12,'type.pair.prod'('type.infer.exc'(X11,'type.list.list'('type.string.char')),X12)))),'const.infer.lookup_tenvC_st_ex_0'),s('type.ast.id'('type.list.list'('type.string.char')),X37))),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X11)))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X11))),X38))),s(X12,X47)))),
  file('thm.inferProps.success_eqns|split|8','ARITY_0_3_const.infer.lookup_tenvC_st_ex')).
fof(f184,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s(X1,'const.option.option_CASE_3'(s('type.option.option'(X0),X2),s(X1,X3),s(fun(X0,X1),X4))) = s(X1,happ(s(fun(fun(X0,X1),X1),happ(s(fun(X1,fun(fun(X0,X1),X1)),happ(s(fun('type.option.option'(X0),fun(X1,fun(fun(X0,X1),X1))),'const.option.option_CASE_0'),s('type.option.option'(X0),X2))),s(X1,X3))),s(fun(X0,X1),X4)))) )),
  inference(cnf_transformation,[],[f77])).
fof(f77,plain,(
  ! [X0,X1,X2,X3,X4] : s(X1,'const.option.option_CASE_3'(s('type.option.option'(X0),X2),s(X1,X3),s(fun(X0,X1),X4))) = s(X1,happ(s(fun(fun(X0,X1),X1),happ(s(fun(X1,fun(fun(X0,X1),X1)),happ(s(fun('type.option.option'(X0),fun(X1,fun(fun(X0,X1),X1))),'const.option.option_CASE_0'),s('type.option.option'(X0),X2))),s(X1,X3))),s(fun(X0,X1),X4)))),
  inference(flattening,[],[f76])).
fof(f76,plain,(
  ! [X0,X1] : ! [X2,X3,X4] : s(X1,'const.option.option_CASE_3'(s('type.option.option'(X0),X2),s(X1,X3),s(fun(X0,X1),X4))) = s(X1,happ(s(fun(fun(X0,X1),X1),happ(s(fun(X1,fun(fun(X0,X1),X1)),happ(s(fun('type.option.option'(X0),fun(X1,fun(fun(X0,X1),X1))),'const.option.option_CASE_0'),s('type.option.option'(X0),X2))),s(X1,X3))),s(fun(X0,X1),X4)))),
  inference(rectify,[],[f45])).
fof(f45,axiom,(
  ! [X12,X11] : ! [X37,X38,X47] : s(X11,'const.option.option_CASE_3'(s('type.option.option'(X12),X37),s(X11,X38),s(fun(X12,X11),X47))) = s(X11,happ(s(fun(fun(X12,X11),X11),happ(s(fun(X11,fun(fun(X12,X11),X11)),happ(s(fun('type.option.option'(X12),fun(X11,fun(fun(X12,X11),X11))),'const.option.option_CASE_0'),s('type.option.option'(X12),X37))),s(X11,X38))),s(fun(X12,X11),X47)))),
  file('thm.inferProps.success_eqns|split|8','ARITY_0_3_const.option.option_CASE')).
fof(f183,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),'const.infer.guard_3'(s(bool,X2),s(X0,X3),s(X1,X4))) = s('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),happ(s(fun(X1,'type.pair.prod'('type.infer.exc'('type.one.one',X0),X1)),'const.infer.guard_2'(s(bool,X2),s(X0,X3))),s(X1,X4)))) )),
  inference(cnf_transformation,[],[f75])).
fof(f75,plain,(
  ! [X0,X1,X2,X3,X4] : s('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),'const.infer.guard_3'(s(bool,X2),s(X0,X3),s(X1,X4))) = s('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),happ(s(fun(X1,'type.pair.prod'('type.infer.exc'('type.one.one',X0),X1)),'const.infer.guard_2'(s(bool,X2),s(X0,X3))),s(X1,X4)))),
  inference(flattening,[],[f74])).
fof(f74,plain,(
  ! [X0,X1] : ! [X2,X3,X4] : s('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),'const.infer.guard_3'(s(bool,X2),s(X0,X3),s(X1,X4))) = s('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),happ(s(fun(X1,'type.pair.prod'('type.infer.exc'('type.one.one',X0),X1)),'const.infer.guard_2'(s(bool,X2),s(X0,X3))),s(X1,X4)))),
  inference(rectify,[],[f44])).
fof(f44,axiom,(
  ! [X11,X12] : ! [X37,X38,X47] : s('type.pair.prod'('type.infer.exc'('type.one.one',X11),X12),'const.infer.guard_3'(s(bool,X37),s(X11,X38),s(X12,X47))) = s('type.pair.prod'('type.infer.exc'('type.one.one',X11),X12),happ(s(fun(X12,'type.pair.prod'('type.infer.exc'('type.one.one',X11),X12)),'const.infer.guard_2'(s(bool,X37),s(X11,X38))),s(X12,X47)))),
  file('thm.inferProps.success_eqns|split|8','ARITY_2_3_const.infer.guard')).
fof(f181,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),'const.infer.n_fresh_uvar_2'(s('type.num.num',X2),s('type.infer.infer_st'(X1),X3))) = s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),happ(s(fun('type.infer.infer_st'(X1),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1))),happ(s(fun('type.num.num',fun('type.infer.infer_st'(X1),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)))),'const.infer.n_fresh_uvar_0'),s('type.num.num',X2))),s('type.infer.infer_st'(X1),X3)))) )),
  inference(cnf_transformation,[],[f71])).
fof(f71,plain,(
  ! [X0,X1,X2,X3] : s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),'const.infer.n_fresh_uvar_2'(s('type.num.num',X2),s('type.infer.infer_st'(X1),X3))) = s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),happ(s(fun('type.infer.infer_st'(X1),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1))),happ(s(fun('type.num.num',fun('type.infer.infer_st'(X1),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)))),'const.infer.n_fresh_uvar_0'),s('type.num.num',X2))),s('type.infer.infer_st'(X1),X3)))),
  inference(flattening,[],[f70])).
fof(f70,plain,(
  ! [X0,X1] : ! [X2,X3] : s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),'const.infer.n_fresh_uvar_2'(s('type.num.num',X2),s('type.infer.infer_st'(X1),X3))) = s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)),happ(s(fun('type.infer.infer_st'(X1),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1))),happ(s(fun('type.num.num',fun('type.infer.infer_st'(X1),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'(X1)))),'const.infer.n_fresh_uvar_0'),s('type.num.num',X2))),s('type.infer.infer_st'(X1),X3)))),
  inference(rectify,[],[f34])).
fof(f34,axiom,(
  ! [X11,X12] : ! [X37,X38] : s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X11),'type.infer.infer_st'(X12)),'const.infer.n_fresh_uvar_2'(s('type.num.num',X37),s('type.infer.infer_st'(X12),X38))) = s('type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X11),'type.infer.infer_st'(X12)),happ(s(fun('type.infer.infer_st'(X12),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X11),'type.infer.infer_st'(X12))),happ(s(fun('type.num.num',fun('type.infer.infer_st'(X12),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X11),'type.infer.infer_st'(X12)))),'const.infer.n_fresh_uvar_0'),s('type.num.num',X37))),s('type.infer.infer_st'(X12),X38)))),
  file('thm.inferProps.success_eqns|split|8','ARITY_0_2_const.infer.n_fresh_uvar')).
fof(f180,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.list.list'(X0),'const.list.MAP_2'(s(fun(X1,X0),X2),s('type.list.list'(X1),X3))) = s('type.list.list'(X0),happ(s(fun('type.list.list'(X1),'type.list.list'(X0)),happ(s(fun(fun(X1,X0),fun('type.list.list'(X1),'type.list.list'(X0))),'const.list.MAP_0'),s(fun(X1,X0),X2))),s('type.list.list'(X1),X3)))) )),
  inference(cnf_transformation,[],[f69])).
fof(f69,plain,(
  ! [X0,X1,X2,X3] : s('type.list.list'(X0),'const.list.MAP_2'(s(fun(X1,X0),X2),s('type.list.list'(X1),X3))) = s('type.list.list'(X0),happ(s(fun('type.list.list'(X1),'type.list.list'(X0)),happ(s(fun(fun(X1,X0),fun('type.list.list'(X1),'type.list.list'(X0))),'const.list.MAP_0'),s(fun(X1,X0),X2))),s('type.list.list'(X1),X3)))),
  inference(flattening,[],[f68])).
fof(f68,plain,(
  ! [X0,X1] : ! [X2,X3] : s('type.list.list'(X0),'const.list.MAP_2'(s(fun(X1,X0),X2),s('type.list.list'(X1),X3))) = s('type.list.list'(X0),happ(s(fun('type.list.list'(X1),'type.list.list'(X0)),happ(s(fun(fun(X1,X0),fun('type.list.list'(X1),'type.list.list'(X0))),'const.list.MAP_0'),s(fun(X1,X0),X2))),s('type.list.list'(X1),X3)))),
  inference(rectify,[],[f27])).
fof(f27,axiom,(
  ! [X11,X12] : ! [X37,X38] : s('type.list.list'(X11),'const.list.MAP_2'(s(fun(X12,X11),X37),s('type.list.list'(X12),X38))) = s('type.list.list'(X11),happ(s(fun('type.list.list'(X12),'type.list.list'(X11)),happ(s(fun(fun(X12,X11),fun('type.list.list'(X12),'type.list.list'(X11))),'const.list.MAP_0'),s(fun(X12,X11),X37))),s('type.list.list'(X12),X38)))),
  file('thm.inferProps.success_eqns|split|8','ARITY_0_2_const.list.MAP')).
fof(f179,plain,(
  ( ! [X2,X0,X1] : (s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),'const.infer.fresh_uvar_1'(s('type.infer.infer_st'(X1),X2))) = s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),happ(s(fun('type.infer.infer_st'(X1),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1))),'const.infer.fresh_uvar_0'),s('type.infer.infer_st'(X1),X2)))) )),
  inference(cnf_transformation,[],[f67])).
fof(f67,plain,(
  ! [X0,X1,X2] : s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),'const.infer.fresh_uvar_1'(s('type.infer.infer_st'(X1),X2))) = s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),happ(s(fun('type.infer.infer_st'(X1),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1))),'const.infer.fresh_uvar_0'),s('type.infer.infer_st'(X1),X2)))),
  inference(flattening,[],[f66])).
fof(f66,plain,(
  ! [X0,X1] : ! [X2] : s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),'const.infer.fresh_uvar_1'(s('type.infer.infer_st'(X1),X2))) = s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),happ(s(fun('type.infer.infer_st'(X1),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1))),'const.infer.fresh_uvar_0'),s('type.infer.infer_st'(X1),X2)))),
  inference(rectify,[],[f33])).
fof(f33,axiom,(
  ! [X12,X11] : ! [X37] : s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X12),'type.infer.infer_st'(X11)),'const.infer.fresh_uvar_1'(s('type.infer.infer_st'(X11),X37))) = s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X12),'type.infer.infer_st'(X11)),happ(s(fun('type.infer.infer_st'(X11),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X12),'type.infer.infer_st'(X11))),'const.infer.fresh_uvar_0'),s('type.infer.infer_st'(X11),X37)))),
  file('thm.inferProps.success_eqns|split|8','ARITY_0_1_const.infer.fresh_uvar')).
fof(f178,plain,(
  ( ! [X2,X0,X1] : (s('type.pair.prod'('type.infer.exc'(X1,X0),X1),'const.infer.read_1'(s(X1,X2))) = s('type.pair.prod'('type.infer.exc'(X1,X0),X1),happ(s(fun(X1,'type.pair.prod'('type.infer.exc'(X1,X0),X1)),'const.infer.read_0'),s(X1,X2)))) )),
  inference(cnf_transformation,[],[f65])).
fof(f65,plain,(
  ! [X0,X1,X2] : s('type.pair.prod'('type.infer.exc'(X1,X0),X1),'const.infer.read_1'(s(X1,X2))) = s('type.pair.prod'('type.infer.exc'(X1,X0),X1),happ(s(fun(X1,'type.pair.prod'('type.infer.exc'(X1,X0),X1)),'const.infer.read_0'),s(X1,X2)))),
  inference(flattening,[],[f64])).
fof(f64,plain,(
  ! [X0,X1] : ! [X2] : s('type.pair.prod'('type.infer.exc'(X1,X0),X1),'const.infer.read_1'(s(X1,X2))) = s('type.pair.prod'('type.infer.exc'(X1,X0),X1),happ(s(fun(X1,'type.pair.prod'('type.infer.exc'(X1,X0),X1)),'const.infer.read_0'),s(X1,X2)))),
  inference(rectify,[],[f24])).
fof(f24,axiom,(
  ! [X11,X12] : ! [X37] : s('type.pair.prod'('type.infer.exc'(X12,X11),X12),'const.infer.read_1'(s(X12,X37))) = s('type.pair.prod'('type.infer.exc'(X12,X11),X12),happ(s(fun(X12,'type.pair.prod'('type.infer.exc'(X12,X11),X12)),'const.infer.read_0'),s(X12,X37)))),
  file('thm.inferProps.success_eqns|split|8','ARITY_0_1_const.infer.read')).
fof(f177,plain,(
  ( ! [X2,X0,X1] : (s('type.pair.prod'('type.infer.exc'(X1,X0),X1),'const.infer.read_1'(s(X1,X2))) = s('type.pair.prod'('type.infer.exc'(X1,X0),X1),'const.pair.,_2'(s('type.infer.exc'(X1,X0),'const.infer.Success_1'(s(X1,X2))),s(X1,X2)))) )),
  inference(cnf_transformation,[],[f63])).
fof(f63,plain,(
  ! [X0,X1,X2] : s('type.pair.prod'('type.infer.exc'(X1,X0),X1),'const.infer.read_1'(s(X1,X2))) = s('type.pair.prod'('type.infer.exc'(X1,X0),X1),'const.pair.,_2'(s('type.infer.exc'(X1,X0),'const.infer.Success_1'(s(X1,X2))),s(X1,X2)))),
  inference(flattening,[],[f62])).
fof(f62,plain,(
  ! [X0,X1] : ! [X2] : s('type.pair.prod'('type.infer.exc'(X1,X0),X1),'const.infer.read_1'(s(X1,X2))) = s('type.pair.prod'('type.infer.exc'(X1,X0),X1),'const.pair.,_2'(s('type.infer.exc'(X1,X0),'const.infer.Success_1'(s(X1,X2))),s(X1,X2)))),
  inference(rectify,[],[f7])).
fof(f7,axiom,(
  ! [X11,X12] : ! [X5] : s('type.pair.prod'('type.infer.exc'(X12,X11),X12),'const.infer.read_1'(s(X12,X5))) = s('type.pair.prod'('type.infer.exc'(X12,X11),X12),'const.pair.,_2'(s('type.infer.exc'(X12,X11),'const.infer.Success_1'(s(X12,X5))),s(X12,X5)))),
  file('thm.inferProps.success_eqns|split|8','thm.infer.read_def')).
fof(f176,plain,(
  ( ! [X0,X1] : (s('type.infer_t.infer_t','const.unify.t_walkstar_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X0),s('type.infer_t.infer_t',X1))) = s('type.infer_t.infer_t',happ(s(fun('type.infer_t.infer_t','type.infer_t.infer_t'),happ(s(fun('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),fun('type.infer_t.infer_t','type.infer_t.infer_t')),'const.unify.t_walkstar_0'),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X0))),s('type.infer_t.infer_t',X1)))) )),
  inference(cnf_transformation,[],[f61])).
fof(f61,plain,(
  ! [X0,X1] : s('type.infer_t.infer_t','const.unify.t_walkstar_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X0),s('type.infer_t.infer_t',X1))) = s('type.infer_t.infer_t',happ(s(fun('type.infer_t.infer_t','type.infer_t.infer_t'),happ(s(fun('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),fun('type.infer_t.infer_t','type.infer_t.infer_t')),'const.unify.t_walkstar_0'),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X0))),s('type.infer_t.infer_t',X1)))),
  inference(rectify,[],[f26])).
fof(f26,axiom,(
  ! [X37,X38] : s('type.infer_t.infer_t','const.unify.t_walkstar_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X37),s('type.infer_t.infer_t',X38))) = s('type.infer_t.infer_t',happ(s(fun('type.infer_t.infer_t','type.infer_t.infer_t'),happ(s(fun('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),fun('type.infer_t.infer_t','type.infer_t.infer_t')),'const.unify.t_walkstar_0'),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X37))),s('type.infer_t.infer_t',X38)))),
  file('thm.inferProps.success_eqns|split|8','ARITY_0_2_const.unify.t_walkstar')).
fof(f175,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1))) = s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.arithmetic.+_1'(s('type.num.num',X0))),s('type.num.num',X1)))) )),
  inference(cnf_transformation,[],[f60])).
fof(f60,plain,(
  ! [X0,X1] : s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1))) = s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.arithmetic.+_1'(s('type.num.num',X0))),s('type.num.num',X1)))),
  inference(rectify,[],[f36])).
fof(f36,axiom,(
  ! [X37,X38] : s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X37),s('type.num.num',X38))) = s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.arithmetic.+_1'(s('type.num.num',X37))),s('type.num.num',X38)))),
  file('thm.inferProps.success_eqns|split|8','ARITY_1_2_const.arithmetic.+')).
fof(f172,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.apply_subst_2'(s('type.infer_t.infer_t',X1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X2))) != s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.infer_t.infer_t',X0),'const.infer.Success_1'(s('type.infer_t.infer_t',X3))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X4))) | s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X2) = s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X4)) )),
  inference(cnf_transformation,[],[f126])).
fof(f126,plain,(
  ! [X0,X1,X2,X3,X4] : ((s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.apply_subst_2'(s('type.infer_t.infer_t',X1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X2))) != s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.infer_t.infer_t',X0),'const.infer.Success_1'(s('type.infer_t.infer_t',X3))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X4))) | (s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X2) = s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X4) & s('type.infer_t.infer_t',X3) = s('type.infer_t.infer_t','const.unify.t_walkstar_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X2))),s('type.infer_t.infer_t',X1))))) & (s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X2) != s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X4) | s('type.infer_t.infer_t',X3) != s('type.infer_t.infer_t','const.unify.t_walkstar_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X2))),s('type.infer_t.infer_t',X1))) | s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.apply_subst_2'(s('type.infer_t.infer_t',X1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X2))) = s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.infer_t.infer_t',X0),'const.infer.Success_1'(s('type.infer_t.infer_t',X3))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X4)))))),
  inference(flattening,[],[f125])).
fof(f125,plain,(
  ! [X0,X1,X2,X3,X4] : ((s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.apply_subst_2'(s('type.infer_t.infer_t',X1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X2))) != s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.infer_t.infer_t',X0),'const.infer.Success_1'(s('type.infer_t.infer_t',X3))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X4))) | (s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X2) = s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X4) & s('type.infer_t.infer_t',X3) = s('type.infer_t.infer_t','const.unify.t_walkstar_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X2))),s('type.infer_t.infer_t',X1))))) & ((s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X2) != s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X4) | s('type.infer_t.infer_t',X3) != s('type.infer_t.infer_t','const.unify.t_walkstar_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X2))),s('type.infer_t.infer_t',X1)))) | s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.apply_subst_2'(s('type.infer_t.infer_t',X1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X2))) = s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.infer_t.infer_t',X0),'const.infer.Success_1'(s('type.infer_t.infer_t',X3))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X4)))))),
  inference(nnf_transformation,[],[f59])).
fof(f59,plain,(
  ! [X0,X1,X2,X3,X4] : (s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.apply_subst_2'(s('type.infer_t.infer_t',X1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X2))) = s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.infer_t.infer_t',X0),'const.infer.Success_1'(s('type.infer_t.infer_t',X3))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X4))) <=> (s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X2) = s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X4) & s('type.infer_t.infer_t',X3) = s('type.infer_t.infer_t','const.unify.t_walkstar_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X2))),s('type.infer_t.infer_t',X1)))))),
  inference(flattening,[],[f58])).
fof(f58,plain,(
  ! [X0] : ! [X1,X2,X3,X4] : (s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.apply_subst_2'(s('type.infer_t.infer_t',X1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X2))) = s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.infer_t.infer_t',X0),'const.infer.Success_1'(s('type.infer_t.infer_t',X3))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X4))) <=> (s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X2) = s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X4) & s('type.infer_t.infer_t',X3) = s('type.infer_t.infer_t','const.unify.t_walkstar_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X2))),s('type.infer_t.infer_t',X1)))))),
  inference(rectify,[],[f13])).
fof(f13,axiom,(
  ! [X12] : ! [X25,X26,X27,X28] : (s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X12),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.apply_subst_2'(s('type.infer_t.infer_t',X25),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X26))) = s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X12),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.infer_t.infer_t',X12),'const.infer.Success_1'(s('type.infer_t.infer_t',X27))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X28))) <=> (s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X26) = s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X28) & s('type.infer_t.infer_t',X27) = s('type.infer_t.infer_t','const.unify.t_walkstar_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X26))),s('type.infer_t.infer_t',X25)))))),
  file('thm.inferProps.success_eqns|split|8','thm.inferProps.inferProps_28_prove_ltb')).
fof(f173,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.apply_subst_2'(s('type.infer_t.infer_t',X1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X2))) != s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.infer_t.infer_t',X0),'const.infer.Success_1'(s('type.infer_t.infer_t',X3))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X4))) | s('type.infer_t.infer_t',X3) = s('type.infer_t.infer_t','const.unify.t_walkstar_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X2))),s('type.infer_t.infer_t',X1)))) )),
  inference(cnf_transformation,[],[f126])).
fof(f174,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X2) != s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X4) | s('type.infer_t.infer_t',X3) != s('type.infer_t.infer_t','const.unify.t_walkstar_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X2))),s('type.infer_t.infer_t',X1))) | s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.apply_subst_2'(s('type.infer_t.infer_t',X1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X2))) = s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.infer_t.infer_t',X0),'const.infer.Success_1'(s('type.infer_t.infer_t',X3))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X4)))) )),
  inference(cnf_transformation,[],[f126])).
fof(f171,plain,(
  ( ! [X2,X0,X1] : (s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.apply_subst_2'(s('type.infer_t.infer_t',X1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X2))) = s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),happ(s(fun('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.infer.apply_subst_1'(s('type.infer_t.infer_t',X1))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X2)))) )),
  inference(cnf_transformation,[],[f57])).
fof(f57,plain,(
  ! [X0,X1,X2] : s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.apply_subst_2'(s('type.infer_t.infer_t',X1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X2))) = s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),happ(s(fun('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.infer.apply_subst_1'(s('type.infer_t.infer_t',X1))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X2)))),
  inference(flattening,[],[f56])).
fof(f56,plain,(
  ! [X0] : ! [X1,X2] : s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.apply_subst_2'(s('type.infer_t.infer_t',X1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X2))) = s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),happ(s(fun('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.infer.apply_subst_1'(s('type.infer_t.infer_t',X1))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X2)))),
  inference(rectify,[],[f38])).
fof(f38,axiom,(
  ! [X12] : ! [X37,X38] : s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X12),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.apply_subst_2'(s('type.infer_t.infer_t',X37),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X38))) = s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X12),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),happ(s(fun('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X12),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.infer.apply_subst_1'(s('type.infer_t.infer_t',X37))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X38)))),
  file('thm.inferProps.success_eqns|split|8','ARITY_1_2_const.infer.apply_subst')).
fof(f170,plain,(
  ( ! [X0,X1] : (s(fun('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.infer.apply_subst_list_1'(s('type.list.list'('type.infer_t.infer_t'),X1))) = s(fun('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.infer.st_ex_bind_2'(s(fun('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'type.pair.prod'('type.infer.exc'('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.infer.read_0'),s(fun('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),fun('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))))),'_dst_x0x1_2'(s(fun('type.list.list'('type.infer_t.infer_t'),fun('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))))),'const.infer.st_ex_return_0'),s(fun('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'type.list.list'('type.infer_t.infer_t')),'_dst_x0x1x0_3'(s(fun(fun('type.infer_t.infer_t','type.infer_t.infer_t'),fun('type.list.list'('type.infer_t.infer_t'),'type.list.list'('type.infer_t.infer_t'))),'const.list.MAP_0'),s(fun('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),fun('type.infer_t.infer_t','type.infer_t.infer_t')),'_dst_x0x1_2'(s(fun('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),fun('type.infer_t.infer_t','type.infer_t.infer_t')),'const.unify.t_walkstar_0'),s(fun('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.infer.infer_st_subst_0'))),s('type.list.list'('type.infer_t.infer_t'),X1)))))))) )),
  inference(cnf_transformation,[],[f55])).
fof(f55,plain,(
  ! [X0,X1] : s(fun('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.infer.apply_subst_list_1'(s('type.list.list'('type.infer_t.infer_t'),X1))) = s(fun('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.infer.st_ex_bind_2'(s(fun('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'type.pair.prod'('type.infer.exc'('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.infer.read_0'),s(fun('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),fun('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))))),'_dst_x0x1_2'(s(fun('type.list.list'('type.infer_t.infer_t'),fun('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))))),'const.infer.st_ex_return_0'),s(fun('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'type.list.list'('type.infer_t.infer_t')),'_dst_x0x1x0_3'(s(fun(fun('type.infer_t.infer_t','type.infer_t.infer_t'),fun('type.list.list'('type.infer_t.infer_t'),'type.list.list'('type.infer_t.infer_t'))),'const.list.MAP_0'),s(fun('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),fun('type.infer_t.infer_t','type.infer_t.infer_t')),'_dst_x0x1_2'(s(fun('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),fun('type.infer_t.infer_t','type.infer_t.infer_t')),'const.unify.t_walkstar_0'),s(fun('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.infer.infer_st_subst_0'))),s('type.list.list'('type.infer_t.infer_t'),X1)))))))),
  inference(flattening,[],[f54])).
fof(f54,plain,(
  ! [X0] : ! [X1] : s(fun('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.infer.apply_subst_list_1'(s('type.list.list'('type.infer_t.infer_t'),X1))) = s(fun('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.infer.st_ex_bind_2'(s(fun('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'type.pair.prod'('type.infer.exc'('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.infer.read_0'),s(fun('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),fun('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))))),'_dst_x0x1_2'(s(fun('type.list.list'('type.infer_t.infer_t'),fun('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))))),'const.infer.st_ex_return_0'),s(fun('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'type.list.list'('type.infer_t.infer_t')),'_dst_x0x1x0_3'(s(fun(fun('type.infer_t.infer_t','type.infer_t.infer_t'),fun('type.list.list'('type.infer_t.infer_t'),'type.list.list'('type.infer_t.infer_t'))),'const.list.MAP_0'),s(fun('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),fun('type.infer_t.infer_t','type.infer_t.infer_t')),'_dst_x0x1_2'(s(fun('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),fun('type.infer_t.infer_t','type.infer_t.infer_t')),'const.unify.t_walkstar_0'),s(fun('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.infer.infer_st_subst_0'))),s('type.list.list'('type.infer_t.infer_t'),X1)))))))),
  inference(rectify,[],[f8])).
fof(f8,axiom,(
  ! [X12] : ! [X13] : s(fun('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X12),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.infer.apply_subst_list_1'(s('type.list.list'('type.infer_t.infer_t'),X13))) = s(fun('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X12),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.infer.st_ex_bind_2'(s(fun('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'type.pair.prod'('type.infer.exc'('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X12),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.infer.read_0'),s(fun('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),fun('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X12),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))))),'_dst_x0x1_2'(s(fun('type.list.list'('type.infer_t.infer_t'),fun('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X12),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))))),'const.infer.st_ex_return_0'),s(fun('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'type.list.list'('type.infer_t.infer_t')),'_dst_x0x1x0_3'(s(fun(fun('type.infer_t.infer_t','type.infer_t.infer_t'),fun('type.list.list'('type.infer_t.infer_t'),'type.list.list'('type.infer_t.infer_t'))),'const.list.MAP_0'),s(fun('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),fun('type.infer_t.infer_t','type.infer_t.infer_t')),'_dst_x0x1_2'(s(fun('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),fun('type.infer_t.infer_t','type.infer_t.infer_t')),'const.unify.t_walkstar_0'),s(fun('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.infer.infer_st_subst_0'))),s('type.list.list'('type.infer_t.infer_t'),X13)))))))),
  file('thm.inferProps.success_eqns|split|8','thm.infer.apply_subst_list_def')).
fof(f169,plain,(
  ( ! [X0,X1] : (s(fun('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.infer.apply_subst_list_1'(s('type.list.list'('type.infer_t.infer_t'),X1))) = s(fun('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),happ(s(fun('type.list.list'('type.infer_t.infer_t'),fun('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))))),'const.infer.apply_subst_list_0'),s('type.list.list'('type.infer_t.infer_t'),X1)))) )),
  inference(cnf_transformation,[],[f53])).
fof(f53,plain,(
  ! [X0,X1] : s(fun('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.infer.apply_subst_list_1'(s('type.list.list'('type.infer_t.infer_t'),X1))) = s(fun('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),happ(s(fun('type.list.list'('type.infer_t.infer_t'),fun('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))))),'const.infer.apply_subst_list_0'),s('type.list.list'('type.infer_t.infer_t'),X1)))),
  inference(flattening,[],[f52])).
fof(f52,plain,(
  ! [X0] : ! [X1] : s(fun('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.infer.apply_subst_list_1'(s('type.list.list'('type.infer_t.infer_t'),X1))) = s(fun('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),happ(s(fun('type.list.list'('type.infer_t.infer_t'),fun('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X0),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))))),'const.infer.apply_subst_list_0'),s('type.list.list'('type.infer_t.infer_t'),X1)))),
  inference(rectify,[],[f28])).
fof(f28,axiom,(
  ! [X12] : ! [X37] : s(fun('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X12),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),'const.infer.apply_subst_list_1'(s('type.list.list'('type.infer_t.infer_t'),X37))) = s(fun('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X12),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')))),happ(s(fun('type.list.list'('type.infer_t.infer_t'),fun('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'type.pair.prod'('type.infer.exc'('type.list.list'('type.infer_t.infer_t'),X12),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))))),'const.infer.apply_subst_list_0'),s('type.list.list'('type.infer_t.infer_t'),X37)))),
  file('thm.inferProps.success_eqns|split|8','ARITY_0_1_const.infer.apply_subst_list')).
fof(f168,plain,(
  ( ! [X0,X1] : (s(X0,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(X0),X1))) = s(X0,happ(s(fun('type.infer.infer_st'(X0),X0),'const.infer.infer_st_subst_0'),s('type.infer.infer_st'(X0),X1)))) )),
  inference(cnf_transformation,[],[f51])).
fof(f51,plain,(
  ! [X0,X1] : s(X0,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(X0),X1))) = s(X0,happ(s(fun('type.infer.infer_st'(X0),X0),'const.infer.infer_st_subst_0'),s('type.infer.infer_st'(X0),X1)))),
  inference(flattening,[],[f50])).
fof(f50,plain,(
  ! [X0] : ! [X1] : s(X0,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(X0),X1))) = s(X0,happ(s(fun('type.infer.infer_st'(X0),X0),'const.infer.infer_st_subst_0'),s('type.infer.infer_st'(X0),X1)))),
  inference(rectify,[],[f25])).
fof(f25,axiom,(
  ! [X12] : ! [X37] : s(X12,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(X12),X37))) = s(X12,happ(s(fun('type.infer.infer_st'(X12),X12),'const.infer.infer_st_subst_0'),s('type.infer.infer_st'(X12),X37)))),
  file('thm.inferProps.success_eqns|split|8','ARITY_0_1_const.infer.infer_st_subst')).
fof(f166,plain,(
  ( ! [X0] : (s('type.infer_t.infer_t','const.infer_t.Infer_Tuvar_1'(s('type.num.num',X0))) = s('type.infer_t.infer_t',happ(s(fun('type.num.num','type.infer_t.infer_t'),'const.infer_t.Infer_Tuvar_0'),s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f49])).
fof(f49,plain,(
  ! [X0] : s('type.infer_t.infer_t','const.infer_t.Infer_Tuvar_1'(s('type.num.num',X0))) = s('type.infer_t.infer_t',happ(s(fun('type.num.num','type.infer_t.infer_t'),'const.infer_t.Infer_Tuvar_0'),s('type.num.num',X0)))),
  inference(rectify,[],[f35])).
fof(f35,axiom,(
  ! [X37] : s('type.infer_t.infer_t','const.infer_t.Infer_Tuvar_1'(s('type.num.num',X37))) = s('type.infer_t.infer_t',happ(s(fun('type.num.num','type.infer_t.infer_t'),'const.infer_t.Infer_Tuvar_0'),s('type.num.num',X37)))),
  file('thm.inferProps.success_eqns|split|8','ARITY_0_1_const.infer_t.Infer_Tuvar')).
fof(f38477,plain,(
  $false | ($spl0 | $spl7)),
  inference(subsumption_resolution,[],[f247,f29889])).
fof(f38475,plain,(
  $false | $spl5),
  inference(subsumption_resolution,[],[f245,f165])).
fof(f38474,plain,(
  $false | ($spl0 | $spl3)),
  inference(subsumption_resolution,[],[f243,f29890])).
fof(f38466,plain,(
  $false | ($spl0 | $spl9 | $spl13)),
  inference(subsumption_resolution,[],[f38465,f164])).
fof(f38465,plain,(
  p(s(bool,'F_0')) | ($spl0 | $spl9 | $spl13)),
  inference(forward_demodulation,[],[f38433,f29774])).
fof(f29774,plain,(
  s(bool,'F_0') = s(bool,'const.infer.pure_add_constraints_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),'const.list.ZIP_1'(s('type.pair.prod'('type.list.list'('type.infer_t.infer_t'),'type.list.list'('type.infer_t.infer_t')),'const.pair.,_2'(s('type.list.list'('type.infer_t.infer_t'),sK0),s('type.list.list'('type.infer_t.infer_t'),sK1))))),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK3))))) | ($spl9 | $spl13)),
  inference(unit_resulting_resolution,[],[f280,f249,f361])).
fof(f27489,plain,(
  ( ! [X2,X1] : (s('type.pair.prod'('type.infer.exc'(bool,X2),bool),'const.infer.read_1'(s(bool,X1))) = s('type.pair.prod'('type.infer.exc'(bool,X2),bool),'const.infer.st_ex_return_2'(s(bool,X1),s(bool,X1))) | s(bool,'F_0') = s(bool,X1)) ) | $spl50),
  inference(cnf_transformation,[],[f27489_D])).
fof(f27489_D,plain,(
  ( ! [X2,X1] : (s('type.pair.prod'('type.infer.exc'(bool,X2),bool),'const.infer.read_1'(s(bool,X1))) = s('type.pair.prod'('type.infer.exc'(bool,X2),bool),'const.infer.st_ex_return_2'(s(bool,X1),s(bool,X1))) | s(bool,'F_0') = s(bool,X1)) ) <=> ~$spl50),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl50])])).
fof(f32780,plain,(
  ( ! [X2,X0,X1] : (s(bool,'F_0') = s(bool,X1) | s(bool,'T_0') = s(bool,X0) | s('type.pair.prod'('type.infer.exc'(bool,X2),bool),'const.infer.read_1'(s(bool,X1))) = s('type.pair.prod'('type.infer.exc'(bool,X2),bool),'const.infer.st_ex_return_2'(s(bool,X1),s(bool,X1)))) ) | $spl54),
  inference(duplicate_literal_removal,[],[f32504])).
fof(f32504,plain,(
  ( ! [X2,X0,X1] : (s(bool,'F_0') = s(bool,X1) | s(bool,'T_0') = s(bool,X0) | s('type.pair.prod'('type.infer.exc'(bool,X2),bool),'const.infer.read_1'(s(bool,X1))) = s('type.pair.prod'('type.infer.exc'(bool,X2),bool),'const.infer.st_ex_return_2'(s(bool,X1),s(bool,X1))) | s(bool,'T_0') = s(bool,X0)) ) | $spl54),
  inference(superposition,[],[f167,f29799])).
fof(f29799,plain,(
  ( ! [X4,X2,X3] : (s('type.pair.prod'('type.infer.exc'(bool,X3),bool),'const.infer.read_1'(s(bool,X2))) = s('type.pair.prod'('type.infer.exc'(bool,X3),bool),'const.infer.st_ex_return_2'(s(bool,X2),s(bool,X2))) | s(bool,X2) = s(bool,X4) | s(bool,'T_0') = s(bool,X4)) ) | $spl54),
  inference(subsumption_resolution,[],[f29785,f163])).
fof(f29785,plain,(
  ( ! [X4,X2,X3] : (~p(s(bool,'T_0')) | s('type.pair.prod'('type.infer.exc'(bool,X3),bool),'const.infer.read_1'(s(bool,X2))) = s('type.pair.prod'('type.infer.exc'(bool,X3),bool),'const.infer.st_ex_return_2'(s(bool,X2),s(bool,X2))) | s(bool,X2) = s(bool,X4) | s(bool,'T_0') = s(bool,X4)) ) | $spl54),
  inference(superposition,[],[f27496,f272])).
fof(f32793,plain,(
  ( ! [X28,X29,X27] : (s(bool,'T_0') = s(bool,X27) | s('type.pair.prod'('type.infer.exc'(bool,X28),bool),'const.infer.read_1'(s(bool,X29))) = s('type.pair.prod'('type.infer.exc'(bool,X28),bool),'const.infer.st_ex_return_2'(s(bool,X29),s(bool,X29))) | s(bool,'F_0') = s(bool,X29)) ) | $spl54),
  inference(duplicate_literal_removal,[],[f32336])).
fof(f32336,plain,(
  ( ! [X28,X29,X27] : (s(bool,'T_0') = s(bool,X27) | s('type.pair.prod'('type.infer.exc'(bool,X28),bool),'const.infer.read_1'(s(bool,X29))) = s('type.pair.prod'('type.infer.exc'(bool,X28),bool),'const.infer.st_ex_return_2'(s(bool,X29),s(bool,X29))) | s(bool,'F_0') = s(bool,X29) | s(bool,'T_0') = s(bool,X27)) ) | $spl54),
  inference(superposition,[],[f29799,f167])).
fof(f32808,plain,(
  ( ! [X2,X0,X1] : (s(bool,'F_0') = s(bool,X1) | s('type.pair.prod'('type.infer.exc'(bool,X2),bool),'const.infer.read_1'(s(bool,X1))) = s('type.pair.prod'('type.infer.exc'(bool,X2),bool),'const.infer.st_ex_return_2'(s(bool,X1),s(bool,X1))) | s(bool,'T_0') = s(bool,X0)) ) | $spl54),
  inference(duplicate_literal_removal,[],[f32302])).
fof(f32302,plain,(
  ( ! [X2,X0,X1] : (s(bool,'F_0') = s(bool,X1) | s('type.pair.prod'('type.infer.exc'(bool,X2),bool),'const.infer.read_1'(s(bool,X1))) = s('type.pair.prod'('type.infer.exc'(bool,X2),bool),'const.infer.st_ex_return_2'(s(bool,X1),s(bool,X1))) | s(bool,'T_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X0)) ) | $spl54),
  inference(superposition,[],[f29799,f167])).
fof(f29743,plain,(
  ( ! [X2,X1] : (s('type.pair.prod'('type.infer.exc'(bool,X1),bool),'const.infer.read_1'(s(bool,'F_0'))) != s('type.pair.prod'('type.infer.exc'(bool,X1),bool),'const.infer.read_1'(s(bool,X2))) | s(bool,'F_0') = s(bool,X2)) ) | $spl70),
  inference(cnf_transformation,[],[f29743_D])).
fof(f29743_D,plain,(
  ( ! [X2,X1] : (s('type.pair.prod'('type.infer.exc'(bool,X1),bool),'const.infer.read_1'(s(bool,'F_0'))) != s('type.pair.prod'('type.infer.exc'(bool,X1),bool),'const.infer.read_1'(s(bool,X2))) | s(bool,'F_0') = s(bool,X2)) ) <=> ~$spl70),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl70])])).
fof(f30890,plain,(
  ( ! [X2,X0,X1] : (s('type.pair.prod'('type.infer.exc'(bool,X1),bool),'const.infer.read_1'(s(bool,'F_0'))) != s('type.pair.prod'('type.infer.exc'(bool,X1),bool),'const.infer.read_1'(s(bool,X2))) | s(bool,'F_0') = s(bool,X2) | s(bool,'T_0') = s(bool,X0)) ) | $spl50),
  inference(duplicate_literal_removal,[],[f30855])).
fof(f30855,plain,(
  ( ! [X2,X0,X1] : (s('type.pair.prod'('type.infer.exc'(bool,X1),bool),'const.infer.read_1'(s(bool,'F_0'))) != s('type.pair.prod'('type.infer.exc'(bool,X1),bool),'const.infer.read_1'(s(bool,X2))) | s(bool,'F_0') = s(bool,X2) | s(bool,'T_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X0)) ) | $spl50),
  inference(superposition,[],[f30748,f167])).
fof(f30748,plain,(
  ( ! [X28,X29,X27] : (s('type.pair.prod'('type.infer.exc'(bool,X28),bool),'const.infer.read_1'(s(bool,X27))) != s('type.pair.prod'('type.infer.exc'(bool,X28),bool),'const.infer.read_1'(s(bool,X29))) | s(bool,'F_0') = s(bool,X29) | s(bool,'T_0') = s(bool,X27)) ) | $spl50),
  inference(duplicate_literal_removal,[],[f30739])).
fof(f30739,plain,(
  ( ! [X28,X29,X27] : (s('type.pair.prod'('type.infer.exc'(bool,X28),bool),'const.infer.read_1'(s(bool,X27))) != s('type.pair.prod'('type.infer.exc'(bool,X28),bool),'const.infer.read_1'(s(bool,X29))) | s(bool,'F_0') = s(bool,X29) | s(bool,'F_0') = s(bool,X29) | s(bool,'T_0') = s(bool,X27)) ) | $spl50),
  inference(superposition,[],[f29822,f167])).
fof(f29822,plain,(
  ( ! [X10,X8,X9] : (s('type.pair.prod'('type.infer.exc'(bool,X8),bool),'const.infer.read_1'(s(bool,X9))) != s('type.pair.prod'('type.infer.exc'(bool,X8),bool),'const.infer.read_1'(s(bool,X10))) | s(bool,X9) = s(bool,X10) | s(bool,'F_0') = s(bool,X9)) ) | $spl50),
  inference(superposition,[],[f1740,f27489])).
fof(f29744,plain,(
  ( ! [X30,X33,X31,X32] : (s('type.pair.prod'('type.infer.exc'(bool,X31),bool),'const.infer.read_1'(s(bool,X30))) != s('type.pair.prod'('type.infer.exc'(bool,X31),bool),'const.infer.read_1'(s(bool,X32))) | s('type.pair.prod'('type.infer.exc'(bool,X33),bool),'const.infer.read_1'(s(bool,X30))) = s('type.pair.prod'('type.infer.exc'(bool,X33),bool),'const.infer.st_ex_return_2'(s(bool,X30),s(bool,X30))) | s(bool,'F_0') = s(bool,X32)) ) | $spl72),
  inference(cnf_transformation,[],[f29744_D])).
fof(f29744_D,plain,(
  ( ! [X30,X33,X31,X32] : (s('type.pair.prod'('type.infer.exc'(bool,X31),bool),'const.infer.read_1'(s(bool,X30))) != s('type.pair.prod'('type.infer.exc'(bool,X31),bool),'const.infer.read_1'(s(bool,X32))) | s('type.pair.prod'('type.infer.exc'(bool,X33),bool),'const.infer.read_1'(s(bool,X30))) = s('type.pair.prod'('type.infer.exc'(bool,X33),bool),'const.infer.st_ex_return_2'(s(bool,X30),s(bool,X30))) | s(bool,'F_0') = s(bool,X32)) ) <=> ~$spl72),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl72])])).
fof(f29737,plain,(
  ( ! [X30,X33,X31,X29,X32] : (s('type.pair.prod'('type.infer.exc'(bool,X31),bool),'const.infer.read_1'(s(bool,X30))) != s('type.pair.prod'('type.infer.exc'(bool,X31),bool),'const.infer.read_1'(s(bool,X32))) | s(bool,'F_0') = s(bool,X32) | s(bool,'T_0') = s(bool,X29) | s('type.pair.prod'('type.infer.exc'(bool,X33),bool),'const.infer.read_1'(s(bool,X30))) = s('type.pair.prod'('type.infer.exc'(bool,X33),bool),'const.infer.st_ex_return_2'(s(bool,X30),s(bool,X30)))) ) | $spl8),
  inference(duplicate_literal_removal,[],[f29703])).
fof(f29703,plain,(
  ( ! [X30,X33,X31,X29,X32] : (s('type.pair.prod'('type.infer.exc'(bool,X31),bool),'const.infer.read_1'(s(bool,X30))) != s('type.pair.prod'('type.infer.exc'(bool,X31),bool),'const.infer.read_1'(s(bool,X32))) | s(bool,'F_0') = s(bool,X32) | s(bool,'T_0') = s(bool,X29) | s('type.pair.prod'('type.infer.exc'(bool,X33),bool),'const.infer.read_1'(s(bool,X30))) = s('type.pair.prod'('type.infer.exc'(bool,X33),bool),'const.infer.st_ex_return_2'(s(bool,X30),s(bool,X30))) | s(bool,'T_0') = s(bool,X29)) ) | $spl8),
  inference(superposition,[],[f29690,f8371])).
fof(f8371,plain,(
  ( ! [X2,X0,X1] : (s('type.pair.prod'('type.infer.exc'(bool,X1),bool),'const.infer.read_1'(s(bool,X0))) = s('type.pair.prod'('type.infer.exc'(bool,X1),bool),'const.infer.st_ex_return_2'(s(bool,X0),s(bool,X0))) | s(bool,X0) = s(bool,X2) | s(bool,'T_0') = s(bool,X2)) ) | $spl8),
  inference(superposition,[],[f6870,f272])).
fof(f6870,plain,(
  ( ! [X0] : (s('type.pair.prod'('type.infer.exc'(bool,X0),bool),'const.infer.read_1'(s(bool,'T_0'))) = s('type.pair.prod'('type.infer.exc'(bool,X0),bool),'const.infer.st_ex_return_2'(s(bool,'T_0'),s(bool,'T_0')))) ) | $spl8),
  inference(forward_demodulation,[],[f6869,f177])).
fof(f6869,plain,(
  ( ! [X0] : (s('type.pair.prod'('type.infer.exc'(bool,X0),bool),'const.infer.st_ex_return_2'(s(bool,'T_0'),s(bool,'T_0'))) = s('type.pair.prod'('type.infer.exc'(bool,X0),bool),'const.pair.,_2'(s('type.infer.exc'(bool,X0),'const.infer.Success_1'(s(bool,'T_0'))),s(bool,'T_0')))) ) | $spl8),
  inference(forward_demodulation,[],[f4924,f488])).
fof(f488,plain,(
  s(bool,'T_0') = s(bool,'const.infer.pure_add_constraints_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),'const.list.ZIP_1'(s('type.pair.prod'('type.list.list'('type.infer_t.infer_t'),'type.list.list'('type.infer_t.infer_t')),'const.pair.,_2'(s('type.list.list'('type.infer_t.infer_t'),sK0),s('type.list.list'('type.infer_t.infer_t'),sK1))))),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK3))))) | $spl8),
  inference(unit_resulting_resolution,[],[f248,f274])).
fof(f4924,plain,(
  ( ! [X0] : (s('type.pair.prod'('type.infer.exc'(bool,X0),bool),'const.pair.,_2'(s('type.infer.exc'(bool,X0),'const.infer.Success_1'(s(bool,'T_0'))),s(bool,'T_0'))) = s('type.pair.prod'('type.infer.exc'(bool,X0),bool),'const.infer.st_ex_return_2'(s(bool,'const.infer.pure_add_constraints_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),'const.list.ZIP_1'(s('type.pair.prod'('type.list.list'('type.infer_t.infer_t'),'type.list.list'('type.infer_t.infer_t')),'const.pair.,_2'(s('type.list.list'('type.infer_t.infer_t'),sK0),s('type.list.list'('type.infer_t.infer_t'),sK1))))),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK3))))),s(bool,'const.infer.pure_add_constraints_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),'const.list.ZIP_1'(s('type.pair.prod'('type.list.list'('type.infer_t.infer_t'),'type.list.list'('type.infer_t.infer_t')),'const.pair.,_2'(s('type.list.list'('type.infer_t.infer_t'),sK0),s('type.list.list'('type.infer_t.infer_t'),sK1))))),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK3)))))))) ) | $spl8),
  inference(unit_resulting_resolution,[],[f488,f488,f212])).
fof(f29690,plain,(
  ( ! [X47,X48,X49] : (s('type.pair.prod'('type.infer.exc'(bool,X48),bool),'const.infer.read_1'(s(bool,X47))) != s('type.pair.prod'('type.infer.exc'(bool,X48),bool),'const.infer.read_1'(s(bool,X49))) | s(bool,'F_0') = s(bool,X49) | s(bool,'T_0') = s(bool,X47)) ) | $spl8),
  inference(duplicate_literal_removal,[],[f29680])).
fof(f29680,plain,(
  ( ! [X47,X48,X49] : (s('type.pair.prod'('type.infer.exc'(bool,X48),bool),'const.infer.read_1'(s(bool,X47))) != s('type.pair.prod'('type.infer.exc'(bool,X48),bool),'const.infer.read_1'(s(bool,X49))) | s(bool,'F_0') = s(bool,X49) | s(bool,'F_0') = s(bool,X49) | s(bool,'T_0') = s(bool,X47)) ) | $spl8),
  inference(superposition,[],[f29043,f167])).
fof(f29043,plain,(
  ( ! [X12,X13,X11] : (s('type.pair.prod'('type.infer.exc'(bool,X11),bool),'const.infer.read_1'(s(bool,X12))) != s('type.pair.prod'('type.infer.exc'(bool,X11),bool),'const.infer.read_1'(s(bool,X13))) | s(bool,X12) = s(bool,X13) | s(bool,'F_0') = s(bool,X12)) ) | $spl8),
  inference(superposition,[],[f1740,f27519])).
fof(f27519,plain,(
  ( ! [X335,X336] : (s('type.pair.prod'('type.infer.exc'(bool,X335),bool),'const.infer.read_1'(s(bool,X336))) = s('type.pair.prod'('type.infer.exc'(bool,X335),bool),'const.infer.st_ex_return_2'(s(bool,X336),s(bool,X336))) | s(bool,'F_0') = s(bool,X336)) ) | $spl8),
  inference(subsumption_resolution,[],[f27294,f163])).
fof(f27294,plain,(
  ( ! [X335,X336] : (~p(s(bool,'T_0')) | s('type.pair.prod'('type.infer.exc'(bool,X335),bool),'const.infer.read_1'(s(bool,X336))) = s('type.pair.prod'('type.infer.exc'(bool,X335),bool),'const.infer.st_ex_return_2'(s(bool,X336),s(bool,X336))) | s(bool,'F_0') = s(bool,X336)) ) | $spl8),
  inference(superposition,[],[f164,f8371])).
fof(f29742,plain,(
  ( ! [X2,X0,X1] : (s('type.pair.prod'('type.infer.exc'(bool,X1),bool),'const.infer.read_1'(s(bool,'F_0'))) != s('type.pair.prod'('type.infer.exc'(bool,X1),bool),'const.infer.read_1'(s(bool,X2))) | s(bool,'F_0') = s(bool,X2) | s(bool,'T_0') = s(bool,X0)) ) | $spl8),
  inference(duplicate_literal_removal,[],[f29696])).
fof(f29696,plain,(
  ( ! [X2,X0,X1] : (s('type.pair.prod'('type.infer.exc'(bool,X1),bool),'const.infer.read_1'(s(bool,'F_0'))) != s('type.pair.prod'('type.infer.exc'(bool,X1),bool),'const.infer.read_1'(s(bool,X2))) | s(bool,'F_0') = s(bool,X2) | s(bool,'T_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X0)) ) | $spl8),
  inference(superposition,[],[f29690,f167])).
fof(f27797,plain,(
  $false | ($spl8 | $spl13 | $spl44)),
  inference(subsumption_resolution,[],[f27614,f15978])).
fof(f15978,plain,(
  ( ! [X6,X4,X7] : (s('type.pair.prod'('type.infer.exc'('type.one.one',X4),bool),'const.infer.st_ex_return_2'(s('type.one.one',X6),s(bool,'T_0'))) = s('type.pair.prod'('type.infer.exc'('type.one.one',X4),bool),'const.infer.guard_3'(s(bool,'T_0'),s(X4,X7),s(bool,'T_0')))) ) | $spl8),
  inference(superposition,[],[f8859,f6861])).
fof(f6861,plain,(
  ( ! [X2,X0,X1] : (s('type.pair.prod'('type.infer.exc'('type.one.one',X0),bool),'const.infer.st_ex_return_2'(s('type.one.one',X2),s(bool,'T_0'))) = s('type.pair.prod'('type.infer.exc'('type.one.one',X0),bool),'const.pair.,_2'(s('type.infer.exc'('type.one.one',X0),'const.infer.Success_1'(s('type.one.one',X1))),s(bool,'T_0')))) ) | $spl8),
  inference(forward_demodulation,[],[f4932,f488])).
fof(f4932,plain,(
  ( ! [X2,X0,X1] : (s('type.pair.prod'('type.infer.exc'('type.one.one',X0),bool),'const.pair.,_2'(s('type.infer.exc'('type.one.one',X0),'const.infer.Success_1'(s('type.one.one',X1))),s(bool,'T_0'))) = s('type.pair.prod'('type.infer.exc'('type.one.one',X0),bool),'const.infer.st_ex_return_2'(s('type.one.one',X2),s(bool,'const.infer.pure_add_constraints_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),'const.list.ZIP_1'(s('type.pair.prod'('type.list.list'('type.infer_t.infer_t'),'type.list.list'('type.infer_t.infer_t')),'const.pair.,_2'(s('type.list.list'('type.infer_t.infer_t'),sK0),s('type.list.list'('type.infer_t.infer_t'),sK1))))),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK3)))))))) ) | $spl8),
  inference(unit_resulting_resolution,[],[f258,f488,f212])).
fof(f8859,plain,(
  ( ! [X2,X0,X1] : (s('type.pair.prod'('type.infer.exc'('type.one.one',X0),bool),'const.infer.guard_3'(s(bool,'T_0'),s(X0,X1),s(bool,'T_0'))) = s('type.pair.prod'('type.infer.exc'('type.one.one',X0),bool),'const.pair.,_2'(s('type.infer.exc'('type.one.one',X0),'const.infer.Success_1'(s('type.one.one',X2))),s(bool,'T_0')))) ) | $spl8),
  inference(forward_demodulation,[],[f8740,f488])).
fof(f8740,plain,(
  ( ! [X2,X0,X1] : (s('type.pair.prod'('type.infer.exc'('type.one.one',X0),bool),'const.infer.guard_3'(s(bool,'T_0'),s(X0,X1),s(bool,'T_0'))) = s('type.pair.prod'('type.infer.exc'('type.one.one',X0),bool),'const.pair.,_2'(s('type.infer.exc'('type.one.one',X0),'const.infer.Success_1'(s('type.one.one',X2))),s(bool,'const.infer.pure_add_constraints_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),'const.list.ZIP_1'(s('type.pair.prod'('type.list.list'('type.infer_t.infer_t'),'type.list.list'('type.infer_t.infer_t')),'const.pair.,_2'(s('type.list.list'('type.infer_t.infer_t'),sK0),s('type.list.list'('type.infer_t.infer_t'),sK1))))),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK3)))))))) ) | $spl8),
  inference(unit_resulting_resolution,[],[f163,f488,f252])).
fof(f27614,plain,(
  ( ! [X24,X25,X22] : (s('type.pair.prod'('type.infer.exc'('type.one.one',X22),bool),'const.infer.st_ex_return_2'(s('type.one.one',X25),s(bool,'T_0'))) != s('type.pair.prod'('type.infer.exc'('type.one.one',X22),bool),'const.infer.guard_3'(s(bool,'T_0'),s(X22,X24),s(bool,'T_0')))) ) | ($spl8 | $spl13 | $spl44)),
  inference(backward_demodulation,[],[f8848,f16592])).
fof(f16592,plain,(
  ( ! [X24,X25,X22] : (s('type.pair.prod'('type.infer.exc'('type.one.one',X22),bool),'const.infer.st_ex_return_2'(s('type.one.one',X25),s(bool,'F_0'))) != s('type.pair.prod'('type.infer.exc'('type.one.one',X22),bool),'const.infer.guard_3'(s(bool,'T_0'),s(X22,X24),s(bool,'T_0')))) ) | ($spl8 | $spl13)),
  inference(superposition,[],[f14554,f15978])).
fof(f14554,plain,(
  ( ! [X2,X0,X1] : (s('type.pair.prod'('type.infer.exc'('type.one.one',X0),bool),'const.infer.st_ex_return_2'(s('type.one.one',X1),s(bool,'T_0'))) != s('type.pair.prod'('type.infer.exc'('type.one.one',X0),bool),'const.infer.st_ex_return_2'(s('type.one.one',X2),s(bool,'F_0')))) ) | ($spl8 | $spl13)),
  inference(unit_resulting_resolution,[],[f280,f12430])).
fof(f12430,plain,(
  ( ! [X6,X10,X8,X9] : (s('type.pair.prod'('type.infer.exc'('type.one.one',X6),bool),'const.infer.st_ex_return_2'(s('type.one.one',X8),s(bool,'T_0'))) != s('type.pair.prod'('type.infer.exc'('type.one.one',X6),bool),'const.infer.st_ex_return_2'(s('type.one.one',X9),s(bool,X10))) | s(bool,'T_0') = s(bool,X10)) ) | $spl8),
  inference(superposition,[],[f211,f6861])).
fof(f27796,plain,(
  $false | ($spl8 | $spl13 | $spl44)),
  inference(subsumption_resolution,[],[f27598,f12390])).
fof(f12390,plain,(
  ( ! [X2,X0,X3] : (s('type.pair.prod'('type.infer.exc'('type.one.one',X0),bool),'const.infer.st_ex_return_2'(s('type.one.one',X2),s(bool,'T_0'))) = s('type.pair.prod'('type.infer.exc'('type.one.one',X0),bool),'const.infer.st_ex_return_2'(s('type.one.one',X3),s(bool,'T_0')))) ) | $spl8),
  inference(superposition,[],[f6861,f6861])).
fof(f27598,plain,(
  ( ! [X2,X0,X1] : (s('type.pair.prod'('type.infer.exc'('type.one.one',X0),bool),'const.infer.st_ex_return_2'(s('type.one.one',X1),s(bool,'T_0'))) != s('type.pair.prod'('type.infer.exc'('type.one.one',X0),bool),'const.infer.st_ex_return_2'(s('type.one.one',X2),s(bool,'T_0')))) ) | ($spl8 | $spl13 | $spl44)),
  inference(backward_demodulation,[],[f8848,f14554])).
fof(f27795,plain,(
  $false | ($spl8 | $spl13 | $spl44)),
  inference(subsumption_resolution,[],[f27578,f11355])).
fof(f11355,plain,(
  ( ! [X2,X0,X3] : (s('type.pair.prod'('type.infer.exc'(bool,X0),'type.one.one'),'const.infer.st_ex_return_2'(s(bool,'T_0'),s('type.one.one',X2))) = s('type.pair.prod'('type.infer.exc'(bool,X0),'type.one.one'),'const.infer.st_ex_return_2'(s(bool,'T_0'),s('type.one.one',X3)))) ) | $spl8),
  inference(superposition,[],[f6642,f6642])).
fof(f6642,plain,(
  ( ! [X2,X0,X1] : (s('type.pair.prod'('type.infer.exc'(bool,X0),'type.one.one'),'const.infer.st_ex_return_2'(s(bool,'T_0'),s('type.one.one',X2))) = s('type.pair.prod'('type.infer.exc'(bool,X0),'type.one.one'),'const.pair.,_2'(s('type.infer.exc'(bool,X0),'const.infer.Success_1'(s(bool,'T_0'))),s('type.one.one',X1)))) ) | $spl8),
  inference(forward_demodulation,[],[f5276,f488])).
fof(f5276,plain,(
  ( ! [X2,X0,X1] : (s('type.pair.prod'('type.infer.exc'(bool,X0),'type.one.one'),'const.pair.,_2'(s('type.infer.exc'(bool,X0),'const.infer.Success_1'(s(bool,'T_0'))),s('type.one.one',X1))) = s('type.pair.prod'('type.infer.exc'(bool,X0),'type.one.one'),'const.infer.st_ex_return_2'(s(bool,'const.infer.pure_add_constraints_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),'const.list.ZIP_1'(s('type.pair.prod'('type.list.list'('type.infer_t.infer_t'),'type.list.list'('type.infer_t.infer_t')),'const.pair.,_2'(s('type.list.list'('type.infer_t.infer_t'),sK0),s('type.list.list'('type.infer_t.infer_t'),sK1))))),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK3))))),s('type.one.one',X2)))) ) | $spl8),
  inference(unit_resulting_resolution,[],[f488,f258,f212])).
fof(f27578,plain,(
  ( ! [X2,X0,X1] : (s('type.pair.prod'('type.infer.exc'(bool,X0),'type.one.one'),'const.infer.st_ex_return_2'(s(bool,'T_0'),s('type.one.one',X1))) != s('type.pair.prod'('type.infer.exc'(bool,X0),'type.one.one'),'const.infer.st_ex_return_2'(s(bool,'T_0'),s('type.one.one',X2)))) ) | ($spl8 | $spl13 | $spl44)),
  inference(backward_demodulation,[],[f8848,f14176])).
fof(f14176,plain,(
  ( ! [X2,X0,X1] : (s('type.pair.prod'('type.infer.exc'(bool,X0),'type.one.one'),'const.infer.st_ex_return_2'(s(bool,'T_0'),s('type.one.one',X1))) != s('type.pair.prod'('type.infer.exc'(bool,X0),'type.one.one'),'const.infer.st_ex_return_2'(s(bool,'F_0'),s('type.one.one',X2)))) ) | ($spl8 | $spl13)),
  inference(unit_resulting_resolution,[],[f280,f11394])).
fof(f11394,plain,(
  ( ! [X8,X7,X5,X9] : (s('type.pair.prod'('type.infer.exc'(bool,X5),'type.one.one'),'const.infer.st_ex_return_2'(s(bool,'T_0'),s('type.one.one',X7))) != s('type.pair.prod'('type.infer.exc'(bool,X5),'type.one.one'),'const.infer.st_ex_return_2'(s(bool,X8),s('type.one.one',X9))) | s(bool,'T_0') = s(bool,X8)) ) | $spl8),
  inference(superposition,[],[f210,f6642])).
fof(f27794,plain,(
  $false | $spl44),
  inference(subsumption_resolution,[],[f27520,f163])).
fof(f27520,plain,(
  ~p(s(bool,'T_0')) | $spl44),
  inference(backward_demodulation,[],[f8848,f164])).
fof(f27793,plain,(
  $false | ($spl8 | $spl13 | $spl44)),
  inference(trivial_inequality_removal,[],[f27563])).
fof(f27563,plain,(
  ( ! [X0] : (s('type.pair.prod'('type.infer.exc'(bool,X0),bool),'const.infer.read_1'(s(bool,'T_0'))) != s('type.pair.prod'('type.infer.exc'(bool,X0),bool),'const.infer.read_1'(s(bool,'T_0')))) ) | ($spl8 | $spl13 | $spl44)),
  inference(backward_demodulation,[],[f8848,f8377])).
fof(f8377,plain,(
  ( ! [X0] : (s('type.pair.prod'('type.infer.exc'(bool,X0),bool),'const.infer.read_1'(s(bool,'T_0'))) != s('type.pair.prod'('type.infer.exc'(bool,X0),bool),'const.infer.read_1'(s(bool,'F_0')))) ) | ($spl8 | $spl13)),
  inference(superposition,[],[f2820,f6870])).
fof(f2820,plain,(
  ( ! [X0,X1] : (s('type.pair.prod'('type.infer.exc'(bool,X0),bool),'const.infer.read_1'(s(bool,'F_0'))) != s('type.pair.prod'('type.infer.exc'(bool,X0),bool),'const.infer.st_ex_return_2'(s(bool,X1),s(bool,'T_0')))) ) | $spl13),
  inference(unit_resulting_resolution,[],[f280,f1740])).
fof(f27503,plain,(
  ( ! [X146,X144,X147,X145,X143] : (s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X144),bool),'const.infer.st_ex_return_2'(s('type.infer_t.infer_t',X145),s(bool,X143))) != s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X144),bool),'const.infer.st_ex_return_2'(s('type.infer_t.infer_t','const.infer_t.Infer_Tuvar_1'(s('type.num.num',X146))),s(bool,'T_0'))) | s('type.pair.prod'('type.infer.exc'(bool,X147),bool),'const.infer.read_1'(s(bool,X143))) = s('type.pair.prod'('type.infer.exc'(bool,X147),bool),'const.infer.st_ex_return_2'(s(bool,X143),s(bool,X143)))) ) | $spl68),
  inference(cnf_transformation,[],[f27503_D])).
fof(f27503_D,plain,(
  ( ! [X146,X144,X147,X145,X143] : (s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X144),bool),'const.infer.st_ex_return_2'(s('type.infer_t.infer_t',X145),s(bool,X143))) != s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X144),bool),'const.infer.st_ex_return_2'(s('type.infer_t.infer_t','const.infer_t.Infer_Tuvar_1'(s('type.num.num',X146))),s(bool,'T_0'))) | s('type.pair.prod'('type.infer.exc'(bool,X147),bool),'const.infer.read_1'(s(bool,X143))) = s('type.pair.prod'('type.infer.exc'(bool,X147),bool),'const.infer.st_ex_return_2'(s(bool,X143),s(bool,X143)))) ) <=> ~$spl68),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl68])])).
fof(f27413,plain,(
  ( ! [X146,X144,X142,X147,X145,X143] : (s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X144),bool),'const.infer.st_ex_return_2'(s('type.infer_t.infer_t',X145),s(bool,X143))) != s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X144),bool),'const.infer.st_ex_return_2'(s('type.infer_t.infer_t','const.infer_t.Infer_Tuvar_1'(s('type.num.num',X146))),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X142) | s('type.pair.prod'('type.infer.exc'(bool,X147),bool),'const.infer.read_1'(s(bool,X143))) = s('type.pair.prod'('type.infer.exc'(bool,X147),bool),'const.infer.st_ex_return_2'(s(bool,X143),s(bool,X143)))) ) | $spl8),
  inference(duplicate_literal_removal,[],[f26960])).
fof(f26960,plain,(
  ( ! [X146,X144,X142,X147,X145,X143] : (s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X144),bool),'const.infer.st_ex_return_2'(s('type.infer_t.infer_t',X145),s(bool,X143))) != s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X144),bool),'const.infer.st_ex_return_2'(s('type.infer_t.infer_t','const.infer_t.Infer_Tuvar_1'(s('type.num.num',X146))),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X142) | s('type.pair.prod'('type.infer.exc'(bool,X147),bool),'const.infer.read_1'(s(bool,X143))) = s('type.pair.prod'('type.infer.exc'(bool,X147),bool),'const.infer.st_ex_return_2'(s(bool,X143),s(bool,X143))) | s(bool,'T_0') = s(bool,X142)) ) | $spl8),
  inference(superposition,[],[f25595,f8371])).
fof(f25595,plain,(
  ( ! [X24,X23,X25,X22] : (s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X22),bool),'const.infer.st_ex_return_2'(s('type.infer_t.infer_t',X24),s(bool,X25))) != s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X22),bool),'const.infer.st_ex_return_2'(s('type.infer_t.infer_t','const.infer_t.Infer_Tuvar_1'(s('type.num.num',X23))),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X25)) ) | $spl8),
  inference(superposition,[],[f211,f6852])).
fof(f6852,plain,(
  ( ! [X0,X1] : (s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),bool),'const.infer.st_ex_return_2'(s('type.infer_t.infer_t','const.infer_t.Infer_Tuvar_1'(s('type.num.num',X1))),s(bool,'T_0'))) = s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),bool),'const.pair.,_2'(s('type.infer.exc'('type.infer_t.infer_t',X0),'const.infer.Success_1'(s('type.infer_t.infer_t','const.infer_t.Infer_Tuvar_1'(s('type.num.num',X1))))),s(bool,'T_0')))) ) | $spl8),
  inference(forward_demodulation,[],[f6851,f166])).
fof(f6851,plain,(
  ( ! [X0,X1] : (s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),bool),'const.infer.st_ex_return_2'(s('type.infer_t.infer_t',happ(s(fun('type.num.num','type.infer_t.infer_t'),'const.infer_t.Infer_Tuvar_0'),s('type.num.num',X1))),s(bool,'T_0'))) = s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),bool),'const.pair.,_2'(s('type.infer.exc'('type.infer_t.infer_t',X0),'const.infer.Success_1'(s('type.infer_t.infer_t','const.infer_t.Infer_Tuvar_1'(s('type.num.num',X1))))),s(bool,'T_0')))) ) | $spl8),
  inference(forward_demodulation,[],[f4937,f488])).
fof(f4937,plain,(
  ( ! [X0,X1] : (s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),bool),'const.pair.,_2'(s('type.infer.exc'('type.infer_t.infer_t',X0),'const.infer.Success_1'(s('type.infer_t.infer_t','const.infer_t.Infer_Tuvar_1'(s('type.num.num',X1))))),s(bool,'T_0'))) = s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),bool),'const.infer.st_ex_return_2'(s('type.infer_t.infer_t',happ(s(fun('type.num.num','type.infer_t.infer_t'),'const.infer_t.Infer_Tuvar_0'),s('type.num.num',X1))),s(bool,'const.infer.pure_add_constraints_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),'const.list.ZIP_1'(s('type.pair.prod'('type.list.list'('type.infer_t.infer_t'),'type.list.list'('type.infer_t.infer_t')),'const.pair.,_2'(s('type.list.list'('type.infer_t.infer_t'),sK0),s('type.list.list'('type.infer_t.infer_t'),sK1))))),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK3)))))))) ) | $spl8),
  inference(unit_resulting_resolution,[],[f166,f488,f212])).
fof(f27502,plain,(
  ( ! [X140,X138,X141,X139,X137] : (s('type.pair.prod'('type.infer.exc'(bool,X138),'type.infer_t.infer_t'),'const.infer.st_ex_return_2'(s(bool,X137),s('type.infer_t.infer_t',X139))) != s('type.pair.prod'('type.infer.exc'(bool,X138),'type.infer_t.infer_t'),'const.infer.st_ex_return_2'(s(bool,'T_0'),s('type.infer_t.infer_t','const.infer_t.Infer_Tuvar_1'(s('type.num.num',X140))))) | s('type.pair.prod'('type.infer.exc'(bool,X141),bool),'const.infer.read_1'(s(bool,X137))) = s('type.pair.prod'('type.infer.exc'(bool,X141),bool),'const.infer.st_ex_return_2'(s(bool,X137),s(bool,X137)))) ) | $spl66),
  inference(cnf_transformation,[],[f27502_D])).
fof(f27502_D,plain,(
  ( ! [X140,X138,X141,X139,X137] : (s('type.pair.prod'('type.infer.exc'(bool,X138),'type.infer_t.infer_t'),'const.infer.st_ex_return_2'(s(bool,X137),s('type.infer_t.infer_t',X139))) != s('type.pair.prod'('type.infer.exc'(bool,X138),'type.infer_t.infer_t'),'const.infer.st_ex_return_2'(s(bool,'T_0'),s('type.infer_t.infer_t','const.infer_t.Infer_Tuvar_1'(s('type.num.num',X140))))) | s('type.pair.prod'('type.infer.exc'(bool,X141),bool),'const.infer.read_1'(s(bool,X137))) = s('type.pair.prod'('type.infer.exc'(bool,X141),bool),'const.infer.st_ex_return_2'(s(bool,X137),s(bool,X137)))) ) <=> ~$spl66),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl66])])).
fof(f27414,plain,(
  ( ! [X140,X138,X136,X141,X139,X137] : (s('type.pair.prod'('type.infer.exc'(bool,X138),'type.infer_t.infer_t'),'const.infer.st_ex_return_2'(s(bool,X137),s('type.infer_t.infer_t',X139))) != s('type.pair.prod'('type.infer.exc'(bool,X138),'type.infer_t.infer_t'),'const.infer.st_ex_return_2'(s(bool,'T_0'),s('type.infer_t.infer_t','const.infer_t.Infer_Tuvar_1'(s('type.num.num',X140))))) | s(bool,'T_0') = s(bool,X136) | s('type.pair.prod'('type.infer.exc'(bool,X141),bool),'const.infer.read_1'(s(bool,X137))) = s('type.pair.prod'('type.infer.exc'(bool,X141),bool),'const.infer.st_ex_return_2'(s(bool,X137),s(bool,X137)))) ) | $spl8),
  inference(duplicate_literal_removal,[],[f26959])).
fof(f26959,plain,(
  ( ! [X140,X138,X136,X141,X139,X137] : (s('type.pair.prod'('type.infer.exc'(bool,X138),'type.infer_t.infer_t'),'const.infer.st_ex_return_2'(s(bool,X137),s('type.infer_t.infer_t',X139))) != s('type.pair.prod'('type.infer.exc'(bool,X138),'type.infer_t.infer_t'),'const.infer.st_ex_return_2'(s(bool,'T_0'),s('type.infer_t.infer_t','const.infer_t.Infer_Tuvar_1'(s('type.num.num',X140))))) | s(bool,'T_0') = s(bool,X136) | s('type.pair.prod'('type.infer.exc'(bool,X141),bool),'const.infer.read_1'(s(bool,X137))) = s('type.pair.prod'('type.infer.exc'(bool,X141),bool),'const.infer.st_ex_return_2'(s(bool,X137),s(bool,X137))) | s(bool,'T_0') = s(bool,X136)) ) | $spl8),
  inference(superposition,[],[f24111,f8371])).
fof(f24111,plain,(
  ( ! [X23,X21,X22,X20] : (s('type.pair.prod'('type.infer.exc'(bool,X20),'type.infer_t.infer_t'),'const.infer.st_ex_return_2'(s(bool,X22),s('type.infer_t.infer_t',X23))) != s('type.pair.prod'('type.infer.exc'(bool,X20),'type.infer_t.infer_t'),'const.infer.st_ex_return_2'(s(bool,'T_0'),s('type.infer_t.infer_t','const.infer_t.Infer_Tuvar_1'(s('type.num.num',X21))))) | s(bool,'T_0') = s(bool,X22)) ) | $spl8),
  inference(superposition,[],[f210,f6312])).
fof(f6312,plain,(
  ( ! [X0,X1] : (s('type.pair.prod'('type.infer.exc'(bool,X0),'type.infer_t.infer_t'),'const.infer.st_ex_return_2'(s(bool,'T_0'),s('type.infer_t.infer_t','const.infer_t.Infer_Tuvar_1'(s('type.num.num',X1))))) = s('type.pair.prod'('type.infer.exc'(bool,X0),'type.infer_t.infer_t'),'const.pair.,_2'(s('type.infer.exc'(bool,X0),'const.infer.Success_1'(s(bool,'T_0'))),s('type.infer_t.infer_t','const.infer_t.Infer_Tuvar_1'(s('type.num.num',X1)))))) ) | $spl8),
  inference(forward_demodulation,[],[f6311,f488])).
fof(f6311,plain,(
  ( ! [X0,X1] : (s('type.pair.prod'('type.infer.exc'(bool,X0),'type.infer_t.infer_t'),'const.pair.,_2'(s('type.infer.exc'(bool,X0),'const.infer.Success_1'(s(bool,'T_0'))),s('type.infer_t.infer_t','const.infer_t.Infer_Tuvar_1'(s('type.num.num',X1))))) = s('type.pair.prod'('type.infer.exc'(bool,X0),'type.infer_t.infer_t'),'const.infer.st_ex_return_2'(s(bool,'const.infer.pure_add_constraints_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),'const.list.ZIP_1'(s('type.pair.prod'('type.list.list'('type.infer_t.infer_t'),'type.list.list'('type.infer_t.infer_t')),'const.pair.,_2'(s('type.list.list'('type.infer_t.infer_t'),sK0),s('type.list.list'('type.infer_t.infer_t'),sK1))))),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK3))))),s('type.infer_t.infer_t','const.infer_t.Infer_Tuvar_1'(s('type.num.num',X1)))))) ) | $spl8),
  inference(forward_demodulation,[],[f5496,f166])).
fof(f5496,plain,(
  ( ! [X0,X1] : (s('type.pair.prod'('type.infer.exc'(bool,X0),'type.infer_t.infer_t'),'const.pair.,_2'(s('type.infer.exc'(bool,X0),'const.infer.Success_1'(s(bool,'T_0'))),s('type.infer_t.infer_t','const.infer_t.Infer_Tuvar_1'(s('type.num.num',X1))))) = s('type.pair.prod'('type.infer.exc'(bool,X0),'type.infer_t.infer_t'),'const.infer.st_ex_return_2'(s(bool,'const.infer.pure_add_constraints_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),'const.list.ZIP_1'(s('type.pair.prod'('type.list.list'('type.infer_t.infer_t'),'type.list.list'('type.infer_t.infer_t')),'const.pair.,_2'(s('type.list.list'('type.infer_t.infer_t'),sK0),s('type.list.list'('type.infer_t.infer_t'),sK1))))),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK3))))),s('type.infer_t.infer_t',happ(s(fun('type.num.num','type.infer_t.infer_t'),'const.infer_t.Infer_Tuvar_0'),s('type.num.num',X1)))))) ) | $spl8),
  inference(unit_resulting_resolution,[],[f488,f166,f212])).
fof(f27501,plain,(
  ( ! [X116,X114,X117,X115,X113] : (s('type.pair.prod'('type.infer.exc'('type.one.one',X114),bool),'const.infer.st_ex_return_2'(s('type.one.one',X115),s(bool,X113))) != s('type.pair.prod'('type.infer.exc'('type.one.one',X114),bool),'const.infer.guard_3'(s(bool,'T_0'),s(X114,X116),s(bool,'T_0'))) | s('type.pair.prod'('type.infer.exc'(bool,X117),bool),'const.infer.read_1'(s(bool,X113))) = s('type.pair.prod'('type.infer.exc'(bool,X117),bool),'const.infer.st_ex_return_2'(s(bool,X113),s(bool,X113)))) ) | $spl64),
  inference(cnf_transformation,[],[f27501_D])).
fof(f27501_D,plain,(
  ( ! [X116,X114,X117,X115,X113] : (s('type.pair.prod'('type.infer.exc'('type.one.one',X114),bool),'const.infer.st_ex_return_2'(s('type.one.one',X115),s(bool,X113))) != s('type.pair.prod'('type.infer.exc'('type.one.one',X114),bool),'const.infer.guard_3'(s(bool,'T_0'),s(X114,X116),s(bool,'T_0'))) | s('type.pair.prod'('type.infer.exc'(bool,X117),bool),'const.infer.read_1'(s(bool,X113))) = s('type.pair.prod'('type.infer.exc'(bool,X117),bool),'const.infer.st_ex_return_2'(s(bool,X113),s(bool,X113)))) ) <=> ~$spl64),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl64])])).
fof(f27415,plain,(
  ( ! [X116,X114,X112,X117,X115,X113] : (s('type.pair.prod'('type.infer.exc'('type.one.one',X114),bool),'const.infer.st_ex_return_2'(s('type.one.one',X115),s(bool,X113))) != s('type.pair.prod'('type.infer.exc'('type.one.one',X114),bool),'const.infer.guard_3'(s(bool,'T_0'),s(X114,X116),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X112) | s('type.pair.prod'('type.infer.exc'(bool,X117),bool),'const.infer.read_1'(s(bool,X113))) = s('type.pair.prod'('type.infer.exc'(bool,X117),bool),'const.infer.st_ex_return_2'(s(bool,X113),s(bool,X113)))) ) | $spl8),
  inference(duplicate_literal_removal,[],[f26955])).
fof(f26955,plain,(
  ( ! [X116,X114,X112,X117,X115,X113] : (s('type.pair.prod'('type.infer.exc'('type.one.one',X114),bool),'const.infer.st_ex_return_2'(s('type.one.one',X115),s(bool,X113))) != s('type.pair.prod'('type.infer.exc'('type.one.one',X114),bool),'const.infer.guard_3'(s(bool,'T_0'),s(X114,X116),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X112) | s('type.pair.prod'('type.infer.exc'(bool,X117),bool),'const.infer.read_1'(s(bool,X113))) = s('type.pair.prod'('type.infer.exc'(bool,X117),bool),'const.infer.st_ex_return_2'(s(bool,X113),s(bool,X113))) | s(bool,'T_0') = s(bool,X112)) ) | $spl8),
  inference(superposition,[],[f16031,f8371])).
fof(f16031,plain,(
  ( ! [X28,X26,X24,X27] : (s('type.pair.prod'('type.infer.exc'('type.one.one',X24),bool),'const.infer.st_ex_return_2'(s('type.one.one',X27),s(bool,X28))) != s('type.pair.prod'('type.infer.exc'('type.one.one',X24),bool),'const.infer.guard_3'(s(bool,'T_0'),s(X24,X26),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X28)) ) | $spl8),
  inference(superposition,[],[f211,f8859])).
fof(f27500,plain,(
  ( ! [X103,X101,X105,X102,X104] : (s('type.pair.prod'('type.infer.exc'('type.one.one',X102),bool),'const.infer.st_ex_return_2'(s('type.one.one',X103),s(bool,'T_0'))) != s('type.pair.prod'('type.infer.exc'('type.one.one',X102),bool),'const.infer.st_ex_return_2'(s('type.one.one',X104),s(bool,X101))) | s('type.pair.prod'('type.infer.exc'(bool,X105),bool),'const.infer.read_1'(s(bool,X101))) = s('type.pair.prod'('type.infer.exc'(bool,X105),bool),'const.infer.st_ex_return_2'(s(bool,X101),s(bool,X101)))) ) | $spl62),
  inference(cnf_transformation,[],[f27500_D])).
fof(f27500_D,plain,(
  ( ! [X103,X101,X105,X102,X104] : (s('type.pair.prod'('type.infer.exc'('type.one.one',X102),bool),'const.infer.st_ex_return_2'(s('type.one.one',X103),s(bool,'T_0'))) != s('type.pair.prod'('type.infer.exc'('type.one.one',X102),bool),'const.infer.st_ex_return_2'(s('type.one.one',X104),s(bool,X101))) | s('type.pair.prod'('type.infer.exc'(bool,X105),bool),'const.infer.read_1'(s(bool,X101))) = s('type.pair.prod'('type.infer.exc'(bool,X105),bool),'const.infer.st_ex_return_2'(s(bool,X101),s(bool,X101)))) ) <=> ~$spl62),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl62])])).
fof(f27416,plain,(
  ( ! [X103,X101,X105,X102,X100,X104] : (s('type.pair.prod'('type.infer.exc'('type.one.one',X102),bool),'const.infer.st_ex_return_2'(s('type.one.one',X103),s(bool,'T_0'))) != s('type.pair.prod'('type.infer.exc'('type.one.one',X102),bool),'const.infer.st_ex_return_2'(s('type.one.one',X104),s(bool,X101))) | s(bool,'T_0') = s(bool,X100) | s('type.pair.prod'('type.infer.exc'(bool,X105),bool),'const.infer.read_1'(s(bool,X101))) = s('type.pair.prod'('type.infer.exc'(bool,X105),bool),'const.infer.st_ex_return_2'(s(bool,X101),s(bool,X101)))) ) | $spl8),
  inference(duplicate_literal_removal,[],[f26953])).
fof(f26953,plain,(
  ( ! [X103,X101,X105,X102,X100,X104] : (s('type.pair.prod'('type.infer.exc'('type.one.one',X102),bool),'const.infer.st_ex_return_2'(s('type.one.one',X103),s(bool,'T_0'))) != s('type.pair.prod'('type.infer.exc'('type.one.one',X102),bool),'const.infer.st_ex_return_2'(s('type.one.one',X104),s(bool,X101))) | s(bool,'T_0') = s(bool,X100) | s('type.pair.prod'('type.infer.exc'(bool,X105),bool),'const.infer.read_1'(s(bool,X101))) = s('type.pair.prod'('type.infer.exc'(bool,X105),bool),'const.infer.st_ex_return_2'(s(bool,X101),s(bool,X101))) | s(bool,'T_0') = s(bool,X100)) ) | $spl8),
  inference(superposition,[],[f12430,f8371])).
fof(f27499,plain,(
  ( ! [X94,X99,X97,X95,X98,X96] : (s('type.pair.prod'('type.infer.exc'('type.one.one',X95),bool),'const.infer.st_ex_return_2'(s('type.one.one',X96),s(bool,'T_0'))) != s('type.pair.prod'('type.infer.exc'('type.one.one',X95),bool),'const.infer.guard_3'(s(bool,X97),s(X95,X98),s(bool,X94))) | s('type.pair.prod'('type.infer.exc'(bool,X99),bool),'const.infer.read_1'(s(bool,X94))) = s('type.pair.prod'('type.infer.exc'(bool,X99),bool),'const.infer.st_ex_return_2'(s(bool,X94),s(bool,X94)))) ) | $spl60),
  inference(cnf_transformation,[],[f27499_D])).
fof(f27499_D,plain,(
  ( ! [X94,X99,X97,X95,X98,X96] : (s('type.pair.prod'('type.infer.exc'('type.one.one',X95),bool),'const.infer.st_ex_return_2'(s('type.one.one',X96),s(bool,'T_0'))) != s('type.pair.prod'('type.infer.exc'('type.one.one',X95),bool),'const.infer.guard_3'(s(bool,X97),s(X95,X98),s(bool,X94))) | s('type.pair.prod'('type.infer.exc'(bool,X99),bool),'const.infer.read_1'(s(bool,X94))) = s('type.pair.prod'('type.infer.exc'(bool,X99),bool),'const.infer.st_ex_return_2'(s(bool,X94),s(bool,X94)))) ) <=> ~$spl60),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl60])])).
fof(f27417,plain,(
  ( ! [X94,X99,X97,X95,X93,X98,X96] : (s('type.pair.prod'('type.infer.exc'('type.one.one',X95),bool),'const.infer.st_ex_return_2'(s('type.one.one',X96),s(bool,'T_0'))) != s('type.pair.prod'('type.infer.exc'('type.one.one',X95),bool),'const.infer.guard_3'(s(bool,X97),s(X95,X98),s(bool,X94))) | s(bool,'T_0') = s(bool,X93) | s('type.pair.prod'('type.infer.exc'(bool,X99),bool),'const.infer.read_1'(s(bool,X94))) = s('type.pair.prod'('type.infer.exc'(bool,X99),bool),'const.infer.st_ex_return_2'(s(bool,X94),s(bool,X94)))) ) | $spl8),
  inference(duplicate_literal_removal,[],[f26952])).
fof(f26952,plain,(
  ( ! [X94,X99,X97,X95,X93,X98,X96] : (s('type.pair.prod'('type.infer.exc'('type.one.one',X95),bool),'const.infer.st_ex_return_2'(s('type.one.one',X96),s(bool,'T_0'))) != s('type.pair.prod'('type.infer.exc'('type.one.one',X95),bool),'const.infer.guard_3'(s(bool,X97),s(X95,X98),s(bool,X94))) | s(bool,'T_0') = s(bool,X93) | s('type.pair.prod'('type.infer.exc'(bool,X99),bool),'const.infer.read_1'(s(bool,X94))) = s('type.pair.prod'('type.infer.exc'(bool,X99),bool),'const.infer.st_ex_return_2'(s(bool,X94),s(bool,X94))) | s(bool,'T_0') = s(bool,X93)) ) | $spl8),
  inference(superposition,[],[f12429,f8371])).
fof(f12429,plain,(
  ( ! [X4,X2,X0,X5,X3] : (s('type.pair.prod'('type.infer.exc'('type.one.one',X0),bool),'const.infer.st_ex_return_2'(s('type.one.one',X2),s(bool,'T_0'))) != s('type.pair.prod'('type.infer.exc'('type.one.one',X0),bool),'const.infer.guard_3'(s(bool,X3),s(X0,X4),s(bool,X5))) | s(bool,'T_0') = s(bool,X5)) ) | $spl8),
  inference(superposition,[],[f197,f6861])).
fof(f27498,plain,(
  ( ! [X85,X83,X81,X84,X82] : (s('type.pair.prod'('type.infer.exc'(bool,X82),'type.one.one'),'const.infer.st_ex_return_2'(s(bool,'T_0'),s('type.one.one',X83))) != s('type.pair.prod'('type.infer.exc'(bool,X82),'type.one.one'),'const.infer.st_ex_return_2'(s(bool,X81),s('type.one.one',X84))) | s('type.pair.prod'('type.infer.exc'(bool,X85),bool),'const.infer.read_1'(s(bool,X81))) = s('type.pair.prod'('type.infer.exc'(bool,X85),bool),'const.infer.st_ex_return_2'(s(bool,X81),s(bool,X81)))) ) | $spl58),
  inference(cnf_transformation,[],[f27498_D])).
fof(f27498_D,plain,(
  ( ! [X85,X83,X81,X84,X82] : (s('type.pair.prod'('type.infer.exc'(bool,X82),'type.one.one'),'const.infer.st_ex_return_2'(s(bool,'T_0'),s('type.one.one',X83))) != s('type.pair.prod'('type.infer.exc'(bool,X82),'type.one.one'),'const.infer.st_ex_return_2'(s(bool,X81),s('type.one.one',X84))) | s('type.pair.prod'('type.infer.exc'(bool,X85),bool),'const.infer.read_1'(s(bool,X81))) = s('type.pair.prod'('type.infer.exc'(bool,X85),bool),'const.infer.st_ex_return_2'(s(bool,X81),s(bool,X81)))) ) <=> ~$spl58),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl58])])).
fof(f27419,plain,(
  ( ! [X80,X85,X83,X81,X84,X82] : (s('type.pair.prod'('type.infer.exc'(bool,X82),'type.one.one'),'const.infer.st_ex_return_2'(s(bool,'T_0'),s('type.one.one',X83))) != s('type.pair.prod'('type.infer.exc'(bool,X82),'type.one.one'),'const.infer.st_ex_return_2'(s(bool,X81),s('type.one.one',X84))) | s(bool,'T_0') = s(bool,X80) | s('type.pair.prod'('type.infer.exc'(bool,X85),bool),'const.infer.read_1'(s(bool,X81))) = s('type.pair.prod'('type.infer.exc'(bool,X85),bool),'const.infer.st_ex_return_2'(s(bool,X81),s(bool,X81)))) ) | $spl8),
  inference(duplicate_literal_removal,[],[f26950])).
fof(f26950,plain,(
  ( ! [X80,X85,X83,X81,X84,X82] : (s('type.pair.prod'('type.infer.exc'(bool,X82),'type.one.one'),'const.infer.st_ex_return_2'(s(bool,'T_0'),s('type.one.one',X83))) != s('type.pair.prod'('type.infer.exc'(bool,X82),'type.one.one'),'const.infer.st_ex_return_2'(s(bool,X81),s('type.one.one',X84))) | s(bool,'T_0') = s(bool,X80) | s('type.pair.prod'('type.infer.exc'(bool,X85),bool),'const.infer.read_1'(s(bool,X81))) = s('type.pair.prod'('type.infer.exc'(bool,X85),bool),'const.infer.st_ex_return_2'(s(bool,X81),s(bool,X81))) | s(bool,'T_0') = s(bool,X80)) ) | $spl8),
  inference(superposition,[],[f11394,f8371])).
fof(f27497,plain,(
  ( ! [X78,X79,X77] : (s('type.pair.prod'('type.infer.exc'(bool,X78),bool),'const.infer.read_1'(s(bool,'T_0'))) != s('type.pair.prod'('type.infer.exc'(bool,X78),bool),'const.infer.read_1'(s(bool,X77))) | s('type.pair.prod'('type.infer.exc'(bool,X79),bool),'const.infer.read_1'(s(bool,X77))) = s('type.pair.prod'('type.infer.exc'(bool,X79),bool),'const.infer.st_ex_return_2'(s(bool,X77),s(bool,X77)))) ) | $spl56),
  inference(cnf_transformation,[],[f27497_D])).
fof(f27497_D,plain,(
  ( ! [X78,X79,X77] : (s('type.pair.prod'('type.infer.exc'(bool,X78),bool),'const.infer.read_1'(s(bool,'T_0'))) != s('type.pair.prod'('type.infer.exc'(bool,X78),bool),'const.infer.read_1'(s(bool,X77))) | s('type.pair.prod'('type.infer.exc'(bool,X79),bool),'const.infer.read_1'(s(bool,X77))) = s('type.pair.prod'('type.infer.exc'(bool,X79),bool),'const.infer.st_ex_return_2'(s(bool,X77),s(bool,X77)))) ) <=> ~$spl56),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl56])])).
fof(f27420,plain,(
  ( ! [X78,X76,X79,X77] : (s('type.pair.prod'('type.infer.exc'(bool,X78),bool),'const.infer.read_1'(s(bool,'T_0'))) != s('type.pair.prod'('type.infer.exc'(bool,X78),bool),'const.infer.read_1'(s(bool,X77))) | s(bool,'T_0') = s(bool,X76) | s('type.pair.prod'('type.infer.exc'(bool,X79),bool),'const.infer.read_1'(s(bool,X77))) = s('type.pair.prod'('type.infer.exc'(bool,X79),bool),'const.infer.st_ex_return_2'(s(bool,X77),s(bool,X77)))) ) | $spl8),
  inference(duplicate_literal_removal,[],[f26949])).
fof(f26949,plain,(
  ( ! [X78,X76,X79,X77] : (s('type.pair.prod'('type.infer.exc'(bool,X78),bool),'const.infer.read_1'(s(bool,'T_0'))) != s('type.pair.prod'('type.infer.exc'(bool,X78),bool),'const.infer.read_1'(s(bool,X77))) | s(bool,'T_0') = s(bool,X76) | s('type.pair.prod'('type.infer.exc'(bool,X79),bool),'const.infer.read_1'(s(bool,X77))) = s('type.pair.prod'('type.infer.exc'(bool,X79),bool),'const.infer.st_ex_return_2'(s(bool,X77),s(bool,X77))) | s(bool,'T_0') = s(bool,X76)) ) | $spl8),
  inference(superposition,[],[f8379,f8371])).
fof(f8379,plain,(
  ( ! [X8,X9] : (s('type.pair.prod'('type.infer.exc'(bool,X8),bool),'const.infer.read_1'(s(bool,'T_0'))) != s('type.pair.prod'('type.infer.exc'(bool,X8),bool),'const.infer.read_1'(s(bool,X9))) | s(bool,'T_0') = s(bool,X9)) ) | $spl8),
  inference(superposition,[],[f1740,f6870])).
fof(f27496,plain,(
  ( ! [X29,X36] : (~p(s(bool,X29)) | s('type.pair.prod'('type.infer.exc'(bool,X36),bool),'const.infer.read_1'(s(bool,X29))) = s('type.pair.prod'('type.infer.exc'(bool,X36),bool),'const.infer.st_ex_return_2'(s(bool,X29),s(bool,X29)))) ) | $spl54),
  inference(cnf_transformation,[],[f27496_D])).
fof(f27496_D,plain,(
  ( ! [X29,X36] : (~p(s(bool,X29)) | s('type.pair.prod'('type.infer.exc'(bool,X36),bool),'const.infer.read_1'(s(bool,X29))) = s('type.pair.prod'('type.infer.exc'(bool,X36),bool),'const.infer.st_ex_return_2'(s(bool,X29),s(bool,X29)))) ) <=> ~$spl54),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl54])])).
fof(f27421,plain,(
  ( ! [X54,X55,X53] : (~p(s(bool,X54)) | s(bool,'T_0') = s(bool,X53) | s('type.pair.prod'('type.infer.exc'(bool,X55),bool),'const.infer.read_1'(s(bool,X54))) = s('type.pair.prod'('type.infer.exc'(bool,X55),bool),'const.infer.st_ex_return_2'(s(bool,X54),s(bool,X54)))) ) | $spl8),
  inference(duplicate_literal_removal,[],[f26943])).
fof(f26943,plain,(
  ( ! [X54,X55,X53] : (~p(s(bool,X54)) | s(bool,'T_0') = s(bool,X53) | s('type.pair.prod'('type.infer.exc'(bool,X55),bool),'const.infer.read_1'(s(bool,X54))) = s('type.pair.prod'('type.infer.exc'(bool,X55),bool),'const.infer.st_ex_return_2'(s(bool,X54),s(bool,X54))) | s(bool,'T_0') = s(bool,X53)) ) | $spl8),
  inference(superposition,[],[f274,f8371])).
fof(f8847,plain,(
  ( ! [X2,X3,X1] : (s(X1,X2) != s(X1,X3)) ) | $spl42),
  inference(cnf_transformation,[],[f8847_D])).
fof(f8847_D,plain,(
  ( ! [X2,X3,X1] : (s(X1,X2) != s(X1,X3)) ) <=> ~$spl42),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl42])])).
fof(f27495,plain,(
  ( ! [X30,X28,X31,X29,X36,X32] : (~p(s(bool,X29)) | s(X30,X31) != s(X30,X32) | s('type.pair.prod'('type.infer.exc'(bool,X36),bool),'const.infer.read_1'(s(bool,X29))) = s('type.pair.prod'('type.infer.exc'(bool,X36),bool),'const.infer.st_ex_return_2'(s(bool,X29),s(bool,X29))) | s(bool,'T_0') = s(bool,X28)) ) | $spl8),
  inference(subsumption_resolution,[],[f26938,f1164])).
fof(f26938,plain,(
  ( ! [X30,X28,X35,X33,X31,X29,X36,X34,X32] : (~p(s(bool,X29)) | s(X30,X31) != s(X30,X32) | s('type.pair.prod'('type.infer.exc'('type.one.one',X33),X30),'const.infer.guard_3'(s(bool,X28),s(X33,X34),s(X30,X31))) = s('type.pair.prod'('type.infer.exc'('type.one.one',X33),X30),'const.pair.,_2'(s('type.infer.exc'('type.one.one',X33),'const.infer.Success_1'(s('type.one.one',X35))),s(X30,X32))) | s('type.pair.prod'('type.infer.exc'(bool,X36),bool),'const.infer.read_1'(s(bool,X29))) = s('type.pair.prod'('type.infer.exc'(bool,X36),bool),'const.infer.st_ex_return_2'(s(bool,X29),s(bool,X29))) | s(bool,'T_0') = s(bool,X28)) ) | $spl8),
  inference(superposition,[],[f252,f8371])).
fof(f27426,plain,(
  ( ! [X2,X0,X1] : (s(bool,'F_0') = s(bool,X1) | s(bool,'T_0') = s(bool,X0) | s('type.pair.prod'('type.infer.exc'(bool,X2),bool),'const.infer.read_1'(s(bool,X1))) = s('type.pair.prod'('type.infer.exc'(bool,X2),bool),'const.infer.st_ex_return_2'(s(bool,X1),s(bool,X1)))) ) | $spl8),
  inference(duplicate_literal_removal,[],[f26934])).
fof(f26934,plain,(
  ( ! [X2,X0,X1] : (s(bool,'F_0') = s(bool,X1) | s(bool,'T_0') = s(bool,X0) | s('type.pair.prod'('type.infer.exc'(bool,X2),bool),'const.infer.read_1'(s(bool,X1))) = s('type.pair.prod'('type.infer.exc'(bool,X2),bool),'const.infer.st_ex_return_2'(s(bool,X1),s(bool,X1))) | s(bool,'T_0') = s(bool,X0)) ) | $spl8),
  inference(superposition,[],[f167,f8371])).
fof(f27486,plain,(
  ( ! [X54,X52] : (s('type.pair.prod'('type.infer.exc'(bool,X54),bool),'const.infer.read_1'(s(bool,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(bool),X52))))) = s('type.pair.prod'('type.infer.exc'(bool,X54),bool),'const.infer.st_ex_return_2'(s(bool,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(bool),X52))),s(bool,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(bool),X52))))) | s(bool,'F_0') = s(bool,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(bool),X52)))) ) | $spl48),
  inference(cnf_transformation,[],[f27486_D])).
fof(f27486_D,plain,(
  ( ! [X54,X52] : (s('type.pair.prod'('type.infer.exc'(bool,X54),bool),'const.infer.read_1'(s(bool,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(bool),X52))))) = s('type.pair.prod'('type.infer.exc'(bool,X54),bool),'const.infer.st_ex_return_2'(s(bool,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(bool),X52))),s(bool,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(bool),X52))))) | s(bool,'F_0') = s(bool,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(bool),X52)))) ) <=> ~$spl48),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl48])])).
fof(f27492,plain,(
  ( ! [X408,X410,X409] : (s('type.pair.prod'('type.infer.exc'(bool,X410),bool),'const.infer.read_1'(s(bool,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(bool),X408))))) = s('type.pair.prod'('type.infer.exc'(bool,X410),bool),'const.infer.st_ex_return_2'(s(bool,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(bool),X408))),s(bool,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(bool),X408))))) | s(bool,'T_0') = s(bool,X409) | s(bool,'F_0') = s(bool,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(bool),X408)))) ) | $spl8),
  inference(forward_demodulation,[],[f27428,f168])).
fof(f27428,plain,(
  ( ! [X408,X410,X409] : (s(bool,'T_0') = s(bool,X409) | s(bool,'F_0') = s(bool,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(bool),X408))) | s('type.pair.prod'('type.infer.exc'(bool,X410),bool),'const.infer.read_1'(s(bool,happ(s(fun('type.infer.infer_st'(bool),bool),'const.infer.infer_st_subst_0'),s('type.infer.infer_st'(bool),X408))))) = s('type.pair.prod'('type.infer.exc'(bool,X410),bool),'const.infer.st_ex_return_2'(s(bool,happ(s(fun('type.infer.infer_st'(bool),bool),'const.infer.infer_st_subst_0'),s('type.infer.infer_st'(bool),X408))),s(bool,happ(s(fun('type.infer.infer_st'(bool),bool),'const.infer.infer_st_subst_0'),s('type.infer.infer_st'(bool),X408)))))) ) | $spl8),
  inference(duplicate_literal_removal,[],[f26847])).
fof(f26847,plain,(
  ( ! [X408,X410,X409] : (s(bool,'T_0') = s(bool,X409) | s(bool,'F_0') = s(bool,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(bool),X408))) | s('type.pair.prod'('type.infer.exc'(bool,X410),bool),'const.infer.read_1'(s(bool,happ(s(fun('type.infer.infer_st'(bool),bool),'const.infer.infer_st_subst_0'),s('type.infer.infer_st'(bool),X408))))) = s('type.pair.prod'('type.infer.exc'(bool,X410),bool),'const.infer.st_ex_return_2'(s(bool,happ(s(fun('type.infer.infer_st'(bool),bool),'const.infer.infer_st_subst_0'),s('type.infer.infer_st'(bool),X408))),s(bool,happ(s(fun('type.infer.infer_st'(bool),bool),'const.infer.infer_st_subst_0'),s('type.infer.infer_st'(bool),X408))))) | s(bool,'T_0') = s(bool,X409)) ) | $spl8),
  inference(superposition,[],[f293,f8371])).
fof(f27491,plain,(
  ( ! [X14,X12,X10,X17,X15,X13,X18,X16] : (s('type.pair.prod'('type.infer.exc'('type.one.one',X12),X13),'const.infer.guard_3'(s(bool,X10),s(X12,X14),s(X13,X15))) != s('type.pair.prod'('type.infer.exc'('type.one.one',X12),X13),'const.pair.,_2'(s('type.infer.exc'('type.one.one',X12),'const.infer.Success_1'(s('type.one.one',X16))),s(X13,X17))) | s('type.pair.prod'('type.infer.exc'(bool,X18),bool),'const.infer.read_1'(s(bool,X10))) = s('type.pair.prod'('type.infer.exc'(bool,X18),bool),'const.infer.st_ex_return_2'(s(bool,X10),s(bool,X10)))) ) | $spl52),
  inference(cnf_transformation,[],[f27491_D])).
fof(f27491_D,plain,(
  ( ! [X14,X12,X10,X17,X15,X13,X18,X16] : (s('type.pair.prod'('type.infer.exc'('type.one.one',X12),X13),'const.infer.guard_3'(s(bool,X10),s(X12,X14),s(X13,X15))) != s('type.pair.prod'('type.infer.exc'('type.one.one',X12),X13),'const.pair.,_2'(s('type.infer.exc'('type.one.one',X12),'const.infer.Success_1'(s('type.one.one',X16))),s(X13,X17))) | s('type.pair.prod'('type.infer.exc'(bool,X18),bool),'const.infer.read_1'(s(bool,X10))) = s('type.pair.prod'('type.infer.exc'(bool,X18),bool),'const.infer.st_ex_return_2'(s(bool,X10),s(bool,X10)))) ) <=> ~$spl52),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl52])])).
fof(f27490,plain,(
  ( ! [X14,X12,X10,X17,X15,X13,X11,X18,X16] : (s('type.pair.prod'('type.infer.exc'('type.one.one',X12),X13),'const.infer.guard_3'(s(bool,X10),s(X12,X14),s(X13,X15))) != s('type.pair.prod'('type.infer.exc'('type.one.one',X12),X13),'const.pair.,_2'(s('type.infer.exc'('type.one.one',X12),'const.infer.Success_1'(s('type.one.one',X16))),s(X13,X17))) | s('type.pair.prod'('type.infer.exc'(bool,X18),bool),'const.infer.read_1'(s(bool,X10))) = s('type.pair.prod'('type.infer.exc'(bool,X18),bool),'const.infer.st_ex_return_2'(s(bool,X10),s(bool,X10))) | s(bool,'T_0') = s(bool,X11)) ) | $spl8),
  inference(subsumption_resolution,[],[f26771,f274])).
fof(f26771,plain,(
  ( ! [X14,X12,X10,X17,X15,X13,X11,X18,X16] : (p(s(bool,X11)) | s('type.pair.prod'('type.infer.exc'('type.one.one',X12),X13),'const.infer.guard_3'(s(bool,X10),s(X12,X14),s(X13,X15))) != s('type.pair.prod'('type.infer.exc'('type.one.one',X12),X13),'const.pair.,_2'(s('type.infer.exc'('type.one.one',X12),'const.infer.Success_1'(s('type.one.one',X16))),s(X13,X17))) | s('type.pair.prod'('type.infer.exc'(bool,X18),bool),'const.infer.read_1'(s(bool,X10))) = s('type.pair.prod'('type.infer.exc'(bool,X18),bool),'const.infer.st_ex_return_2'(s(bool,X10),s(bool,X10))) | s(bool,'T_0') = s(bool,X11)) ) | $spl8),
  inference(superposition,[],[f195,f8371])).
fof(f27441,plain,(
  ( ! [X28,X29,X27] : (s(bool,'T_0') = s(bool,X27) | s('type.pair.prod'('type.infer.exc'(bool,X28),bool),'const.infer.read_1'(s(bool,X29))) = s('type.pair.prod'('type.infer.exc'(bool,X28),bool),'const.infer.st_ex_return_2'(s(bool,X29),s(bool,X29))) | s(bool,'F_0') = s(bool,X29)) ) | $spl8),
  inference(duplicate_literal_removal,[],[f26680])).
fof(f26680,plain,(
  ( ! [X28,X29,X27] : (s(bool,'T_0') = s(bool,X27) | s('type.pair.prod'('type.infer.exc'(bool,X28),bool),'const.infer.read_1'(s(bool,X29))) = s('type.pair.prod'('type.infer.exc'(bool,X28),bool),'const.infer.st_ex_return_2'(s(bool,X29),s(bool,X29))) | s(bool,'F_0') = s(bool,X29) | s(bool,'T_0') = s(bool,X27)) ) | $spl8),
  inference(superposition,[],[f8371,f167])).
fof(f27483,plain,(
  ( ! [X37,X35,X38,X34] : (s('type.pair.prod'('type.infer.exc'(bool,X35),bool),'const.infer.read_1'(s(bool,X34))) = s('type.pair.prod'('type.infer.exc'(bool,X35),bool),'const.infer.st_ex_return_2'(s(bool,X34),s(bool,X34))) | s(bool,X34) = s(bool,X38) | s('type.pair.prod'('type.infer.exc'(bool,X37),bool),'const.infer.read_1'(s(bool,X38))) = s('type.pair.prod'('type.infer.exc'(bool,X37),bool),'const.infer.st_ex_return_2'(s(bool,X38),s(bool,X38)))) ) | $spl46),
  inference(cnf_transformation,[],[f27483_D])).
fof(f27483_D,plain,(
  ( ! [X37,X35,X38,X34] : (s('type.pair.prod'('type.infer.exc'(bool,X35),bool),'const.infer.read_1'(s(bool,X34))) = s('type.pair.prod'('type.infer.exc'(bool,X35),bool),'const.infer.st_ex_return_2'(s(bool,X34),s(bool,X34))) | s(bool,X34) = s(bool,X38) | s('type.pair.prod'('type.infer.exc'(bool,X37),bool),'const.infer.read_1'(s(bool,X38))) = s('type.pair.prod'('type.infer.exc'(bool,X37),bool),'const.infer.st_ex_return_2'(s(bool,X38),s(bool,X38)))) ) <=> ~$spl46),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl46])])).
fof(f27442,plain,(
  ( ! [X14,X17,X15,X18,X16] : (s(bool,'T_0') = s(bool,X15) | s('type.pair.prod'('type.infer.exc'(bool,X16),bool),'const.infer.read_1'(s(bool,X17))) = s('type.pair.prod'('type.infer.exc'(bool,X16),bool),'const.infer.st_ex_return_2'(s(bool,X17),s(bool,X17))) | s(bool,X14) = s(bool,X17) | s('type.pair.prod'('type.infer.exc'(bool,X18),bool),'const.infer.read_1'(s(bool,X14))) = s('type.pair.prod'('type.infer.exc'(bool,X18),bool),'const.infer.st_ex_return_2'(s(bool,X14),s(bool,X14)))) ) | $spl8),
  inference(duplicate_literal_removal,[],[f26678])).
fof(f26678,plain,(
  ( ! [X14,X17,X15,X18,X16] : (s(bool,'T_0') = s(bool,X15) | s('type.pair.prod'('type.infer.exc'(bool,X16),bool),'const.infer.read_1'(s(bool,X17))) = s('type.pair.prod'('type.infer.exc'(bool,X16),bool),'const.infer.st_ex_return_2'(s(bool,X17),s(bool,X17))) | s(bool,X14) = s(bool,X17) | s('type.pair.prod'('type.infer.exc'(bool,X18),bool),'const.infer.read_1'(s(bool,X14))) = s('type.pair.prod'('type.infer.exc'(bool,X18),bool),'const.infer.st_ex_return_2'(s(bool,X14),s(bool,X14))) | s(bool,'T_0') = s(bool,X15)) ) | $spl8),
  inference(superposition,[],[f8371,f8371])).
fof(f27451,plain,(
  ( ! [X30,X33,X31,X29,X32] : (s(bool,X30) = s(bool,X31) | s('type.pair.prod'('type.infer.exc'(bool,X32),bool),'const.infer.read_1'(s(bool,X31))) = s('type.pair.prod'('type.infer.exc'(bool,X32),bool),'const.infer.st_ex_return_2'(s(bool,X31),s(bool,X31))) | s(bool,'T_0') = s(bool,X29) | s('type.pair.prod'('type.infer.exc'(bool,X33),bool),'const.infer.read_1'(s(bool,X30))) = s('type.pair.prod'('type.infer.exc'(bool,X33),bool),'const.infer.st_ex_return_2'(s(bool,X30),s(bool,X30)))) ) | $spl8),
  inference(duplicate_literal_removal,[],[f26651])).
fof(f26651,plain,(
  ( ! [X30,X33,X31,X29,X32] : (s(bool,X30) = s(bool,X31) | s('type.pair.prod'('type.infer.exc'(bool,X32),bool),'const.infer.read_1'(s(bool,X31))) = s('type.pair.prod'('type.infer.exc'(bool,X32),bool),'const.infer.st_ex_return_2'(s(bool,X31),s(bool,X31))) | s(bool,'T_0') = s(bool,X29) | s('type.pair.prod'('type.infer.exc'(bool,X33),bool),'const.infer.read_1'(s(bool,X30))) = s('type.pair.prod'('type.infer.exc'(bool,X33),bool),'const.infer.st_ex_return_2'(s(bool,X30),s(bool,X30))) | s(bool,'T_0') = s(bool,X29)) ) | $spl8),
  inference(superposition,[],[f8371,f8371])).
fof(f27456,plain,(
  ( ! [X2,X0,X1] : (s(bool,'F_0') = s(bool,X1) | s('type.pair.prod'('type.infer.exc'(bool,X2),bool),'const.infer.read_1'(s(bool,X1))) = s('type.pair.prod'('type.infer.exc'(bool,X2),bool),'const.infer.st_ex_return_2'(s(bool,X1),s(bool,X1))) | s(bool,'T_0') = s(bool,X0)) ) | $spl8),
  inference(duplicate_literal_removal,[],[f26644])).
fof(f26644,plain,(
  ( ! [X2,X0,X1] : (s(bool,'F_0') = s(bool,X1) | s('type.pair.prod'('type.infer.exc'(bool,X2),bool),'const.infer.read_1'(s(bool,X1))) = s('type.pair.prod'('type.infer.exc'(bool,X2),bool),'const.infer.st_ex_return_2'(s(bool,X1),s(bool,X1))) | s(bool,'T_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X0)) ) | $spl8),
  inference(superposition,[],[f8371,f167])).
fof(f27485,plain,(
  ( ! [X54,X52,X53] : (s('type.pair.prod'('type.infer.exc'(bool,X54),bool),'const.infer.read_1'(s(bool,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(bool),X52))))) = s('type.pair.prod'('type.infer.exc'(bool,X54),bool),'const.infer.st_ex_return_2'(s(bool,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(bool),X52))),s(bool,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(bool),X52))))) | s(bool,'T_0') = s(bool,X53) | s(bool,'F_0') = s(bool,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(bool),X52)))) ) | $spl8),
  inference(forward_demodulation,[],[f27458,f168])).
fof(f27458,plain,(
  ( ! [X54,X52,X53] : (s(bool,'T_0') = s(bool,X53) | s('type.pair.prod'('type.infer.exc'(bool,X54),bool),'const.infer.read_1'(s(bool,happ(s(fun('type.infer.infer_st'(bool),bool),'const.infer.infer_st_subst_0'),s('type.infer.infer_st'(bool),X52))))) = s('type.pair.prod'('type.infer.exc'(bool,X54),bool),'const.infer.st_ex_return_2'(s(bool,happ(s(fun('type.infer.infer_st'(bool),bool),'const.infer.infer_st_subst_0'),s('type.infer.infer_st'(bool),X52))),s(bool,happ(s(fun('type.infer.infer_st'(bool),bool),'const.infer.infer_st_subst_0'),s('type.infer.infer_st'(bool),X52))))) | s(bool,'F_0') = s(bool,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(bool),X52)))) ) | $spl8),
  inference(duplicate_literal_removal,[],[f26636])).
fof(f26636,plain,(
  ( ! [X54,X52,X53] : (s(bool,'T_0') = s(bool,X53) | s('type.pair.prod'('type.infer.exc'(bool,X54),bool),'const.infer.read_1'(s(bool,happ(s(fun('type.infer.infer_st'(bool),bool),'const.infer.infer_st_subst_0'),s('type.infer.infer_st'(bool),X52))))) = s('type.pair.prod'('type.infer.exc'(bool,X54),bool),'const.infer.st_ex_return_2'(s(bool,happ(s(fun('type.infer.infer_st'(bool),bool),'const.infer.infer_st_subst_0'),s('type.infer.infer_st'(bool),X52))),s(bool,happ(s(fun('type.infer.infer_st'(bool),bool),'const.infer.infer_st_subst_0'),s('type.infer.infer_st'(bool),X52))))) | s(bool,'T_0') = s(bool,X53) | s(bool,'F_0') = s(bool,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(bool),X52)))) ) | $spl8),
  inference(superposition,[],[f8371,f293])).
fof(f27466,plain,(
  ( ! [X23,X21,X19,X22,X20] : (s(bool,'T_0') = s(bool,X20) | s('type.pair.prod'('type.infer.exc'(bool,X21),bool),'const.infer.read_1'(s(bool,X19))) = s('type.pair.prod'('type.infer.exc'(bool,X21),bool),'const.infer.st_ex_return_2'(s(bool,X19),s(bool,X19))) | s('type.pair.prod'('type.infer.exc'(bool,X22),bool),'const.infer.read_1'(s(bool,X23))) = s('type.pair.prod'('type.infer.exc'(bool,X22),bool),'const.infer.st_ex_return_2'(s(bool,X23),s(bool,X23))) | s(bool,X19) = s(bool,X23)) ) | $spl8),
  inference(duplicate_literal_removal,[],[f26628])).
fof(f26628,plain,(
  ( ! [X23,X21,X19,X22,X20] : (s(bool,'T_0') = s(bool,X20) | s('type.pair.prod'('type.infer.exc'(bool,X21),bool),'const.infer.read_1'(s(bool,X19))) = s('type.pair.prod'('type.infer.exc'(bool,X21),bool),'const.infer.st_ex_return_2'(s(bool,X19),s(bool,X19))) | s(bool,'T_0') = s(bool,X20) | s('type.pair.prod'('type.infer.exc'(bool,X22),bool),'const.infer.read_1'(s(bool,X23))) = s('type.pair.prod'('type.infer.exc'(bool,X22),bool),'const.infer.st_ex_return_2'(s(bool,X23),s(bool,X23))) | s(bool,X19) = s(bool,X23)) ) | $spl8),
  inference(superposition,[],[f8371,f8371])).
fof(f27475,plain,(
  ( ! [X37,X35,X38,X36,X34] : (s('type.pair.prod'('type.infer.exc'(bool,X35),bool),'const.infer.read_1'(s(bool,X34))) = s('type.pair.prod'('type.infer.exc'(bool,X35),bool),'const.infer.st_ex_return_2'(s(bool,X34),s(bool,X34))) | s(bool,'T_0') = s(bool,X36) | s('type.pair.prod'('type.infer.exc'(bool,X37),bool),'const.infer.read_1'(s(bool,X38))) = s('type.pair.prod'('type.infer.exc'(bool,X37),bool),'const.infer.st_ex_return_2'(s(bool,X38),s(bool,X38))) | s(bool,X34) = s(bool,X38)) ) | $spl8),
  inference(duplicate_literal_removal,[],[f26610])).
fof(f26610,plain,(
  ( ! [X37,X35,X38,X36,X34] : (s('type.pair.prod'('type.infer.exc'(bool,X35),bool),'const.infer.read_1'(s(bool,X34))) = s('type.pair.prod'('type.infer.exc'(bool,X35),bool),'const.infer.st_ex_return_2'(s(bool,X34),s(bool,X34))) | s(bool,'T_0') = s(bool,X36) | s(bool,'T_0') = s(bool,X36) | s('type.pair.prod'('type.infer.exc'(bool,X37),bool),'const.infer.read_1'(s(bool,X38))) = s('type.pair.prod'('type.infer.exc'(bool,X37),bool),'const.infer.st_ex_return_2'(s(bool,X38),s(bool,X38))) | s(bool,X34) = s(bool,X38)) ) | $spl8),
  inference(superposition,[],[f8371,f8371])).
fof(f8851,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,X0) | s(X1,X2) != s(X1,X3)) ) | ($spl24 | $spl28)),
  inference(subsumption_resolution,[],[f8850,f3745])).
fof(f3745,plain,(
  ( ! [X30,X33,X31,X29,X34,X32] : (s('type.pair.prod'('type.infer.exc'('type.one.one',X29),X30),'const.infer.guard_3'(s(bool,'T_0'),s(X29,X31),s(X30,X32))) != s('type.pair.prod'('type.infer.exc'('type.one.one',X29),X30),'const.pair.,_2'(s('type.infer.exc'('type.one.one',X29),'const.infer.Success_1'(s('type.one.one',X33))),s(X30,X34)))) ) | ($spl24 | $spl28)),
  inference(backward_demodulation,[],[f3660,f3662])).
fof(f8846,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,X0) | s(X1,X2) != s(X1,X3)) ) | ($spl24 | $spl28)),
  inference(subsumption_resolution,[],[f8845,f3745])).
fof(f8842,plain,(
  $false | ($spl24 | $spl28)),
  inference(subsumption_resolution,[],[f8738,f3745])).
fof(f8841,plain,(
  $false | ($spl24 | $spl28)),
  inference(subsumption_resolution,[],[f8739,f3745])).
fof(f8840,plain,(
  $false | ($spl8 | $spl24 | $spl28)),
  inference(subsumption_resolution,[],[f8740,f3745])).
fof(f8839,plain,(
  $false | ($spl24 | $spl28)),
  inference(subsumption_resolution,[],[f8741,f3745])).
fof(f8838,plain,(
  $false | ($spl24 | $spl28)),
  inference(subsumption_resolution,[],[f8742,f3745])).
fof(f8837,plain,(
  $false | ($spl24 | $spl28)),
  inference(subsumption_resolution,[],[f8743,f3745])).
fof(f8836,plain,(
  $false | ($spl24 | $spl28)),
  inference(subsumption_resolution,[],[f8744,f3745])).
fof(f8835,plain,(
  $false | ($spl24 | $spl28)),
  inference(subsumption_resolution,[],[f8745,f3745])).
fof(f8834,plain,(
  $false | ($spl14 | $spl24 | $spl28)),
  inference(subsumption_resolution,[],[f8746,f3745])).
fof(f8746,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.one.one',X0),fun('type.one.one',bool)),'const.infer.guard_3'(s(bool,'T_0'),s(X0,X1),s(fun('type.one.one',bool),X2))) = s('type.pair.prod'('type.infer.exc'('type.one.one',X0),fun('type.one.one',bool)),'const.pair.,_2'(s('type.infer.exc'('type.one.one',X0),'const.infer.Success_1'(s('type.one.one',X3))),s(fun('type.one.one',bool),X4)))) ) | $spl14),
  inference(unit_resulting_resolution,[],[f163,f1050,f252])).
fof(f8833,plain,(
  $false | ($spl24 | $spl28)),
  inference(subsumption_resolution,[],[f8747,f3745])).
fof(f8832,plain,(
  $false | ($spl24 | $spl28)),
  inference(subsumption_resolution,[],[f8748,f3745])).
fof(f8831,plain,(
  $false | ($spl24 | $spl28)),
  inference(subsumption_resolution,[],[f8749,f3745])).
fof(f8830,plain,(
  $false | ($spl2 | $spl24 | $spl28)),
  inference(subsumption_resolution,[],[f8750,f3745])).
fof(f8750,plain,(
  ( ! [X2,X0,X1] : (s('type.pair.prod'('type.infer.exc'('type.one.one',X0),'type.num.num'),'const.infer.guard_3'(s(bool,'T_0'),s(X0,X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.infer_t.infer_t'),sK0))))) = s('type.pair.prod'('type.infer.exc'('type.one.one',X0),'type.num.num'),'const.pair.,_2'(s('type.infer.exc'('type.one.one',X0),'const.infer.Success_1'(s('type.one.one',X2))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.infer_t.infer_t'),sK1)))))) ) | $spl2),
  inference(unit_resulting_resolution,[],[f163,f242,f252])).
fof(f8829,plain,(
  $false | ($spl6 | $spl24 | $spl28)),
  inference(subsumption_resolution,[],[f8751,f3745])).
fof(f8751,plain,(
  ( ! [X2,X0,X1] : (s('type.pair.prod'('type.infer.exc'('type.one.one',X0),'type.num.num'),'const.infer.guard_3'(s(bool,'T_0'),s(X0,X1),s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))))) = s('type.pair.prod'('type.infer.exc'('type.one.one',X0),'type.num.num'),'const.pair.,_2'(s('type.infer.exc'('type.one.one',X0),'const.infer.Success_1'(s('type.one.one',X2))),s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK3)))))) ) | $spl6),
  inference(unit_resulting_resolution,[],[f163,f246,f252])).
fof(f8828,plain,(
  $false | ($spl24 | $spl28)),
  inference(subsumption_resolution,[],[f8752,f3745])).
fof(f8827,plain,(
  $false | ($spl24 | $spl28)),
  inference(subsumption_resolution,[],[f8753,f3745])).
fof(f8826,plain,(
  $false | ($spl24 | $spl28)),
  inference(subsumption_resolution,[],[f8754,f3745])).
fof(f8825,plain,(
  $false | ($spl24 | $spl28)),
  inference(subsumption_resolution,[],[f8755,f3745])).
fof(f8824,plain,(
  $false | ($spl24 | $spl28)),
  inference(subsumption_resolution,[],[f8756,f3745])).
fof(f8756,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.one.one',X0),'type.pair.prod'('type.infer.exc'(X1,X2),X1)),'const.infer.guard_3'(s(bool,'T_0'),s(X0,X3),s('type.pair.prod'('type.infer.exc'(X1,X2),X1),'const.infer.read_1'(s(X1,X4))))) = s('type.pair.prod'('type.infer.exc'('type.one.one',X0),'type.pair.prod'('type.infer.exc'(X1,X2),X1)),'const.pair.,_2'(s('type.infer.exc'('type.one.one',X0),'const.infer.Success_1'(s('type.one.one',X5))),s('type.pair.prod'('type.infer.exc'(X1,X2),X1),happ(s(fun(X1,'type.pair.prod'('type.infer.exc'(X1,X2),X1)),'const.infer.read_0'),s(X1,X4)))))) )),
  inference(unit_resulting_resolution,[],[f163,f178,f252])).
fof(f8823,plain,(
  $false | ($spl8 | $spl24 | $spl28)),
  inference(subsumption_resolution,[],[f8757,f3745])).
fof(f8757,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.one.one',X0),'type.pair.prod'('type.infer.exc'(bool,X1),bool)),'const.infer.guard_3'(s(bool,'T_0'),s(X0,X2),s('type.pair.prod'('type.infer.exc'(bool,X1),bool),'const.infer.read_1'(s(bool,'T_0'))))) = s('type.pair.prod'('type.infer.exc'('type.one.one',X0),'type.pair.prod'('type.infer.exc'(bool,X1),bool)),'const.pair.,_2'(s('type.infer.exc'('type.one.one',X0),'const.infer.Success_1'(s('type.one.one',X3))),s('type.pair.prod'('type.infer.exc'(bool,X1),bool),'const.infer.st_ex_return_2'(s(bool,'T_0'),s(bool,'T_0')))))) ) | $spl8),
  inference(unit_resulting_resolution,[],[f163,f6870,f252])).
fof(f8822,plain,(
  $false | ($spl24 | $spl28)),
  inference(subsumption_resolution,[],[f8758,f3745])).
fof(f8821,plain,(
  $false | ($spl24 | $spl28)),
  inference(subsumption_resolution,[],[f8759,f3745])).
fof(f8820,plain,(
  $false | ($spl24 | $spl28)),
  inference(subsumption_resolution,[],[f8760,f3745])).
fof(f8819,plain,(
  $false | ($spl24 | $spl28)),
  inference(subsumption_resolution,[],[f8761,f3745])).
fof(f8761,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),'const.pair.,_2'(s('type.infer.exc'('type.one.one',X0),'const.infer.Success_1'(s('type.one.one',X2))),s(X1,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(X1),X3))))) = s('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),'const.infer.guard_3'(s(bool,'T_0'),s(X0,X4),s(X1,happ(s(fun('type.infer.infer_st'(X1),X1),'const.infer.infer_st_subst_0'),s('type.infer.infer_st'(X1),X3)))))) )),
  inference(unit_resulting_resolution,[],[f163,f168,f252])).
fof(f8818,plain,(
  $false | ($spl24 | $spl28)),
  inference(subsumption_resolution,[],[f8762,f3745])).
fof(f8817,plain,(
  $false | ($spl8 | $spl24 | $spl28)),
  inference(subsumption_resolution,[],[f8763,f3745])).
fof(f8763,plain,(
  ( ! [X2,X0,X1] : (s('type.pair.prod'('type.infer.exc'('type.one.one',X0),bool),'const.pair.,_2'(s('type.infer.exc'('type.one.one',X0),'const.infer.Success_1'(s('type.one.one',X1))),s(bool,'T_0'))) = s('type.pair.prod'('type.infer.exc'('type.one.one',X0),bool),'const.infer.guard_3'(s(bool,'T_0'),s(X0,X2),s(bool,'const.infer.pure_add_constraints_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),'const.list.ZIP_1'(s('type.pair.prod'('type.list.list'('type.infer_t.infer_t'),'type.list.list'('type.infer_t.infer_t')),'const.pair.,_2'(s('type.list.list'('type.infer_t.infer_t'),sK0),s('type.list.list'('type.infer_t.infer_t'),sK1))))),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK3)))))))) ) | $spl8),
  inference(unit_resulting_resolution,[],[f163,f488,f252])).
fof(f8816,plain,(
  $false | ($spl24 | $spl28)),
  inference(subsumption_resolution,[],[f8764,f3745])).
fof(f8764,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.one.one',X0),fun(X1,'type.one.one')),'const.infer.guard_3'(s(bool,'T_0'),s(X0,X2),s(fun(X1,'type.one.one'),X3))) = s('type.pair.prod'('type.infer.exc'('type.one.one',X0),fun(X1,'type.one.one')),'const.pair.,_2'(s('type.infer.exc'('type.one.one',X0),'const.infer.Success_1'(s('type.one.one',X4))),s(fun(X1,'type.one.one'),X5)))) )),
  inference(unit_resulting_resolution,[],[f163,f605,f252])).
fof(f8815,plain,(
  $false | ($spl24 | $spl28)),
  inference(subsumption_resolution,[],[f8765,f3745])).
fof(f8765,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.one.one',X0),fun(X1,fun(X2,'type.one.one'))),'const.infer.guard_3'(s(bool,'T_0'),s(X0,X3),s(fun(X1,fun(X2,'type.one.one')),X4))) = s('type.pair.prod'('type.infer.exc'('type.one.one',X0),fun(X1,fun(X2,'type.one.one'))),'const.pair.,_2'(s('type.infer.exc'('type.one.one',X0),'const.infer.Success_1'(s('type.one.one',X5))),s(fun(X1,fun(X2,'type.one.one')),X6)))) )),
  inference(unit_resulting_resolution,[],[f163,f724,f252])).
fof(f8814,plain,(
  $false | ($spl24 | $spl28)),
  inference(subsumption_resolution,[],[f8766,f3745])).
fof(f8766,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.one.one',X0),fun(X1,fun(X2,fun(X3,'type.one.one')))),'const.infer.guard_3'(s(bool,'T_0'),s(X0,X4),s(fun(X1,fun(X2,fun(X3,'type.one.one'))),X5))) = s('type.pair.prod'('type.infer.exc'('type.one.one',X0),fun(X1,fun(X2,fun(X3,'type.one.one')))),'const.pair.,_2'(s('type.infer.exc'('type.one.one',X0),'const.infer.Success_1'(s('type.one.one',X6))),s(fun(X1,fun(X2,fun(X3,'type.one.one'))),X7)))) )),
  inference(unit_resulting_resolution,[],[f163,f752,f252])).
fof(f8813,plain,(
  $false | ($spl24 | $spl28)),
  inference(subsumption_resolution,[],[f8767,f3745])).
fof(f8767,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.one.one',X0),fun(X1,fun(X2,fun(X3,fun(X4,'type.one.one'))))),'const.infer.guard_3'(s(bool,'T_0'),s(X0,X5),s(fun(X1,fun(X2,fun(X3,fun(X4,'type.one.one')))),X6))) = s('type.pair.prod'('type.infer.exc'('type.one.one',X0),fun(X1,fun(X2,fun(X3,fun(X4,'type.one.one'))))),'const.pair.,_2'(s('type.infer.exc'('type.one.one',X0),'const.infer.Success_1'(s('type.one.one',X7))),s(fun(X1,fun(X2,fun(X3,fun(X4,'type.one.one')))),X8)))) )),
  inference(unit_resulting_resolution,[],[f163,f787,f252])).
fof(f8812,plain,(
  $false | ($spl24 | $spl28)),
  inference(subsumption_resolution,[],[f8768,f3745])).
fof(f8768,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1,X9] : (s('type.pair.prod'('type.infer.exc'('type.one.one',X0),fun(X1,fun(X2,fun(X3,fun(X4,fun(X5,'type.one.one')))))),'const.infer.guard_3'(s(bool,'T_0'),s(X0,X6),s(fun(X1,fun(X2,fun(X3,fun(X4,fun(X5,'type.one.one'))))),X7))) = s('type.pair.prod'('type.infer.exc'('type.one.one',X0),fun(X1,fun(X2,fun(X3,fun(X4,fun(X5,'type.one.one')))))),'const.pair.,_2'(s('type.infer.exc'('type.one.one',X0),'const.infer.Success_1'(s('type.one.one',X8))),s(fun(X1,fun(X2,fun(X3,fun(X4,fun(X5,'type.one.one'))))),X9)))) )),
  inference(unit_resulting_resolution,[],[f163,f815,f252])).
fof(f8811,plain,(
  $false | ($spl14 | $spl24 | $spl28)),
  inference(subsumption_resolution,[],[f8769,f3745])).
fof(f8769,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.one.one',X0),fun('type.one.one',bool)),'const.infer.guard_3'(s(bool,'T_0'),s(X0,X1),s(fun('type.one.one',bool),X2))) = s('type.pair.prod'('type.infer.exc'('type.one.one',X0),fun('type.one.one',bool)),'const.pair.,_2'(s('type.infer.exc'('type.one.one',X0),'const.infer.Success_1'(s('type.one.one',X3))),s(fun('type.one.one',bool),X4)))) ) | $spl14),
  inference(unit_resulting_resolution,[],[f163,f1050,f252])).
fof(f8810,plain,(
  $false | ($spl24 | $spl28)),
  inference(subsumption_resolution,[],[f8770,f3745])).
fof(f8770,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.one.one',X0),'type.one.one'),'const.infer.guard_3'(s(bool,'T_0'),s(X0,X1),s('type.one.one',X2))) = s('type.pair.prod'('type.infer.exc'('type.one.one',X0),'type.one.one'),'const.pair.,_2'(s('type.infer.exc'('type.one.one',X0),'const.infer.Success_1'(s('type.one.one',X3))),s('type.one.one','const.one.one_0')))) )),
  inference(unit_resulting_resolution,[],[f163,f165,f252])).
fof(f8809,plain,(
  $false | ($spl24 | $spl28)),
  inference(subsumption_resolution,[],[f8771,f3745])).
fof(f8771,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.one.one',X0),'type.one.one'),'const.infer.guard_3'(s(bool,'T_0'),s(X0,X1),s('type.one.one',X2))) = s('type.pair.prod'('type.infer.exc'('type.one.one',X0),'type.one.one'),'const.pair.,_2'(s('type.infer.exc'('type.one.one',X0),'const.infer.Success_1'(s('type.one.one',X3))),s('type.one.one',X4)))) )),
  inference(unit_resulting_resolution,[],[f163,f258,f252])).
fof(f8808,plain,(
  $false | ($spl24 | $spl28)),
  inference(subsumption_resolution,[],[f8772,f3745])).
fof(f8772,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.one.one',X0),'type.list.list'(X1)),'const.pair.,_2'(s('type.infer.exc'('type.one.one',X0),'const.infer.Success_1'(s('type.one.one',X2))),s('type.list.list'(X1),'const.list.MAP_2'(s(fun(X3,X1),X4),s('type.list.list'(X3),X5))))) = s('type.pair.prod'('type.infer.exc'('type.one.one',X0),'type.list.list'(X1)),'const.infer.guard_3'(s(bool,'T_0'),s(X0,X6),s('type.list.list'(X1),happ(s(fun('type.list.list'(X3),'type.list.list'(X1)),happ(s(fun(fun(X3,X1),fun('type.list.list'(X3),'type.list.list'(X1))),'const.list.MAP_0'),s(fun(X3,X1),X4))),s('type.list.list'(X3),X5)))))) )),
  inference(unit_resulting_resolution,[],[f163,f180,f252])).
fof(f8807,plain,(
  $false | ($spl2 | $spl24 | $spl28)),
  inference(subsumption_resolution,[],[f8773,f3745])).
fof(f8773,plain,(
  ( ! [X2,X0,X1] : (s('type.pair.prod'('type.infer.exc'('type.one.one',X0),'type.num.num'),'const.infer.guard_3'(s(bool,'T_0'),s(X0,X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.infer_t.infer_t'),sK1))))) = s('type.pair.prod'('type.infer.exc'('type.one.one',X0),'type.num.num'),'const.pair.,_2'(s('type.infer.exc'('type.one.one',X0),'const.infer.Success_1'(s('type.one.one',X2))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.infer_t.infer_t'),sK0)))))) ) | $spl2),
  inference(unit_resulting_resolution,[],[f163,f242,f252])).
fof(f8806,plain,(
  $false | ($spl6 | $spl24 | $spl28)),
  inference(subsumption_resolution,[],[f8774,f3745])).
fof(f8774,plain,(
  ( ! [X2,X0,X1] : (s('type.pair.prod'('type.infer.exc'('type.one.one',X0),'type.num.num'),'const.infer.guard_3'(s(bool,'T_0'),s(X0,X1),s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK3))))) = s('type.pair.prod'('type.infer.exc'('type.one.one',X0),'type.num.num'),'const.pair.,_2'(s('type.infer.exc'('type.one.one',X0),'const.infer.Success_1'(s('type.one.one',X2))),s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2)))))) ) | $spl6),
  inference(unit_resulting_resolution,[],[f163,f246,f252])).
fof(f8805,plain,(
  $false | ($spl24 | $spl28)),
  inference(subsumption_resolution,[],[f8775,f3745])).
fof(f8775,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.one.one',X0),'type.num.num'),'const.pair.,_2'(s('type.infer.exc'('type.one.one',X0),'const.infer.Success_1'(s('type.one.one',X1))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X3))))) = s('type.pair.prod'('type.infer.exc'('type.one.one',X0),'type.num.num'),'const.infer.guard_3'(s(bool,'T_0'),s(X0,X4),s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.arithmetic.+_1'(s('type.num.num',X2))),s('type.num.num',X3)))))) )),
  inference(unit_resulting_resolution,[],[f163,f175,f252])).
fof(f8804,plain,(
  $false | ($spl24 | $spl28)),
  inference(subsumption_resolution,[],[f8776,f3745])).
fof(f8776,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.one.one',X0),'type.infer_t.infer_t'),'const.pair.,_2'(s('type.infer.exc'('type.one.one',X0),'const.infer.Success_1'(s('type.one.one',X1))),s('type.infer_t.infer_t','const.infer_t.Infer_Tuvar_1'(s('type.num.num',X2))))) = s('type.pair.prod'('type.infer.exc'('type.one.one',X0),'type.infer_t.infer_t'),'const.infer.guard_3'(s(bool,'T_0'),s(X0,X3),s('type.infer_t.infer_t',happ(s(fun('type.num.num','type.infer_t.infer_t'),'const.infer_t.Infer_Tuvar_0'),s('type.num.num',X2)))))) )),
  inference(unit_resulting_resolution,[],[f163,f166,f252])).
fof(f8803,plain,(
  $false | ($spl24 | $spl28)),
  inference(subsumption_resolution,[],[f8777,f3745])).
fof(f8777,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.one.one',X0),'type.infer_t.infer_t'),'const.pair.,_2'(s('type.infer.exc'('type.one.one',X0),'const.infer.Success_1'(s('type.one.one',X1))),s('type.infer_t.infer_t','const.unify.t_walkstar_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X2),s('type.infer_t.infer_t',X3))))) = s('type.pair.prod'('type.infer.exc'('type.one.one',X0),'type.infer_t.infer_t'),'const.infer.guard_3'(s(bool,'T_0'),s(X0,X4),s('type.infer_t.infer_t',happ(s(fun('type.infer_t.infer_t','type.infer_t.infer_t'),happ(s(fun('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),fun('type.infer_t.infer_t','type.infer_t.infer_t')),'const.unify.t_walkstar_0'),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X2))),s('type.infer_t.infer_t',X3)))))) )),
  inference(unit_resulting_resolution,[],[f163,f176,f252])).
fof(f8802,plain,(
  $false | ($spl24 | $spl28)),
  inference(subsumption_resolution,[],[f8778,f3745])).
fof(f8778,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.one.one',X0),'type.pair.prod'('type.infer.exc'(X1,X2),X1)),'const.pair.,_2'(s('type.infer.exc'('type.one.one',X0),'const.infer.Success_1'(s('type.one.one',X3))),s('type.pair.prod'('type.infer.exc'(X1,X2),X1),'const.infer.read_1'(s(X1,X4))))) = s('type.pair.prod'('type.infer.exc'('type.one.one',X0),'type.pair.prod'('type.infer.exc'(X1,X2),X1)),'const.infer.guard_3'(s(bool,'T_0'),s(X0,X5),s('type.pair.prod'('type.infer.exc'(X1,X2),X1),'const.pair.,_2'(s('type.infer.exc'(X1,X2),'const.infer.Success_1'(s(X1,X4))),s(X1,X4)))))) )),
  inference(unit_resulting_resolution,[],[f163,f177,f252])).
fof(f8801,plain,(
  $false | ($spl24 | $spl28)),
  inference(subsumption_resolution,[],[f8779,f3745])).
fof(f8779,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.one.one',X0),'type.pair.prod'('type.infer.exc'(X1,X2),X1)),'const.pair.,_2'(s('type.infer.exc'('type.one.one',X0),'const.infer.Success_1'(s('type.one.one',X3))),s('type.pair.prod'('type.infer.exc'(X1,X2),X1),'const.infer.read_1'(s(X1,X4))))) = s('type.pair.prod'('type.infer.exc'('type.one.one',X0),'type.pair.prod'('type.infer.exc'(X1,X2),X1)),'const.infer.guard_3'(s(bool,'T_0'),s(X0,X5),s('type.pair.prod'('type.infer.exc'(X1,X2),X1),happ(s(fun(X1,'type.pair.prod'('type.infer.exc'(X1,X2),X1)),'const.infer.read_0'),s(X1,X4)))))) )),
  inference(unit_resulting_resolution,[],[f163,f178,f252])).
fof(f8800,plain,(
  $false | ($spl8 | $spl24 | $spl28)),
  inference(subsumption_resolution,[],[f8780,f3745])).
fof(f8780,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.one.one',X0),'type.pair.prod'('type.infer.exc'(bool,X1),bool)),'const.pair.,_2'(s('type.infer.exc'('type.one.one',X0),'const.infer.Success_1'(s('type.one.one',X2))),s('type.pair.prod'('type.infer.exc'(bool,X1),bool),'const.infer.read_1'(s(bool,'T_0'))))) = s('type.pair.prod'('type.infer.exc'('type.one.one',X0),'type.pair.prod'('type.infer.exc'(bool,X1),bool)),'const.infer.guard_3'(s(bool,'T_0'),s(X0,X3),s('type.pair.prod'('type.infer.exc'(bool,X1),bool),'const.infer.st_ex_return_2'(s(bool,'T_0'),s(bool,'T_0')))))) ) | $spl8),
  inference(unit_resulting_resolution,[],[f163,f6870,f252])).
fof(f8799,plain,(
  $false | ($spl24 | $spl28)),
  inference(subsumption_resolution,[],[f8781,f3745])).
fof(f8781,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.one.one',X0),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X1),'type.infer.infer_st'(X2))),'const.pair.,_2'(s('type.infer.exc'('type.one.one',X0),'const.infer.Success_1'(s('type.one.one',X3))),s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X1),'type.infer.infer_st'(X2)),'const.infer.fresh_uvar_1'(s('type.infer.infer_st'(X2),X4))))) = s('type.pair.prod'('type.infer.exc'('type.one.one',X0),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X1),'type.infer.infer_st'(X2))),'const.infer.guard_3'(s(bool,'T_0'),s(X0,X5),s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X1),'type.infer.infer_st'(X2)),happ(s(fun('type.infer.infer_st'(X2),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X1),'type.infer.infer_st'(X2))),'const.infer.fresh_uvar_0'),s('type.infer.infer_st'(X2),X4)))))) )),
  inference(unit_resulting_resolution,[],[f163,f179,f252])).
fof(f8798,plain,(
  $false | ($spl24 | $spl28)),
  inference(subsumption_resolution,[],[f8782,f3745])).
fof(f8782,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.one.one',X0),'type.pair.prod'('type.infer.exc'(X1,X2),X3)),'const.pair.,_2'(s('type.infer.exc'('type.one.one',X0),'const.infer.Success_1'(s('type.one.one',X4))),s('type.pair.prod'('type.infer.exc'(X1,X2),X3),'const.infer.failwith_2'(s(X2,X5),s(X3,X6))))) = s('type.pair.prod'('type.infer.exc'('type.one.one',X0),'type.pair.prod'('type.infer.exc'(X1,X2),X3)),'const.infer.guard_3'(s(bool,'T_0'),s(X0,X7),s('type.pair.prod'('type.infer.exc'(X1,X2),X3),happ(s(fun(X3,'type.pair.prod'('type.infer.exc'(X1,X2),X3)),'const.infer.failwith_1'(s(X2,X5))),s(X3,X6)))))) )),
  inference(unit_resulting_resolution,[],[f163,f204,f252])).
fof(f8797,plain,(
  $false | ($spl24 | $spl28)),
  inference(subsumption_resolution,[],[f8783,f3745])).
fof(f8783,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.one.one',X0),'type.pair.prod'('type.infer.exc'('type.one.one',X1),X2)),'const.pair.,_2'(s('type.infer.exc'('type.one.one',X0),'const.infer.Success_1'(s('type.one.one',X3))),s('type.pair.prod'('type.infer.exc'('type.one.one',X1),X2),'const.infer.guard_3'(s(bool,X4),s(X1,X5),s(X2,X6))))) = s('type.pair.prod'('type.infer.exc'('type.one.one',X0),'type.pair.prod'('type.infer.exc'('type.one.one',X1),X2)),'const.infer.guard_3'(s(bool,'T_0'),s(X0,X7),s('type.pair.prod'('type.infer.exc'('type.one.one',X1),X2),happ(s(fun(X2,'type.pair.prod'('type.infer.exc'('type.one.one',X1),X2)),'const.infer.guard_2'(s(bool,X4),s(X1,X5))),s(X2,X6)))))) )),
  inference(unit_resulting_resolution,[],[f163,f183,f252])).
fof(f3732,plain,(
  ( ! [X1] : (s(bool,'T_0') = s(bool,g(s('type.one.one',X1)))) ) | $spl38),
  inference(cnf_transformation,[],[f3732_D])).
fof(f3732_D,plain,(
  ( ! [X1] : (s(bool,'T_0') = s(bool,g(s('type.one.one',X1)))) ) <=> ~$spl38),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl38])])).
fof(f3734,plain,(
  s(bool,'F_0') != s(bool,f(s('type.one.one','const.one.one_0'))) | $spl41),
  inference(cnf_transformation,[],[f3734_D])).
fof(f3734_D,plain,(
  s(bool,'F_0') != s(bool,f(s('type.one.one','const.one.one_0'))) <=> ~$spl41),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl41])])).
fof(f3719,plain,(
  ( ! [X5] : (s(bool,'F_0') != s(bool,f(s('type.one.one','const.one.one_0'))) | s(bool,'T_0') = s(bool,g(s('type.one.one',X5)))) ) | $spl20),
  inference(superposition,[],[f1053,f165])).
fof(f3731,plain,(
  ( ! [X0] : (s(bool,'F_0') != s(bool,f(s('type.one.one',X0)))) ) | $spl36),
  inference(cnf_transformation,[],[f3731_D])).
fof(f3731_D,plain,(
  ( ! [X0] : (s(bool,'F_0') != s(bool,f(s('type.one.one',X0)))) ) <=> ~$spl36),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl36])])).
fof(f3718,plain,(
  ( ! [X4,X3] : (s(bool,'F_0') != s(bool,f(s('type.one.one',X4))) | s(bool,'T_0') = s(bool,g(s('type.one.one',X3)))) ) | $spl20),
  inference(superposition,[],[f1053,f258])).
fof(f3717,plain,(
  ( ! [X2,X1] : (s(bool,'F_0') != s(bool,f(s('type.one.one',X2))) | s(bool,'T_0') = s(bool,g(s('type.one.one',X1)))) ) | $spl20),
  inference(superposition,[],[f1053,f258])).
fof(f3730,plain,(
  s(bool,'T_0') = s(bool,g(s('type.one.one','const.one.one_0'))) | $spl34),
  inference(cnf_transformation,[],[f3730_D])).
fof(f3730_D,plain,(
  s(bool,'T_0') = s(bool,g(s('type.one.one','const.one.one_0'))) <=> ~$spl34),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl34])])).
fof(f3716,plain,(
  ( ! [X0] : (s(bool,'F_0') != s(bool,f(s('type.one.one',X0))) | s(bool,'T_0') = s(bool,g(s('type.one.one','const.one.one_0')))) ) | $spl20),
  inference(superposition,[],[f1053,f165])).
fof(f3659,plain,(
  ( ! [X26,X29,X25] : (s(bool,X29) = s(bool,happ(s(fun('type.one.one',bool),X25),s('type.one.one',X26))) | s(bool,'T_0') = s(bool,X29)) ) | $spl22),
  inference(cnf_transformation,[],[f3659_D])).
fof(f3659_D,plain,(
  ( ! [X26,X29,X25] : (s(bool,X29) = s(bool,happ(s(fun('type.one.one',bool),X25),s('type.one.one',X26))) | s(bool,'T_0') = s(bool,X29)) ) <=> ~$spl22),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl22])])).
fof(f3663,plain,(
  ( ! [X28,X27] : (p(s(bool,happ(s(fun('type.one.one',bool),X27),s('type.one.one',X28))))) ) | $spl30),
  inference(cnf_transformation,[],[f3663_D])).
fof(f3663_D,plain,(
  ( ! [X28,X27] : (p(s(bool,happ(s(fun('type.one.one',bool),X27),s('type.one.one',X28))))) ) <=> ~$spl30),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl30])])).
fof(f3621,plain,(
  ( ! [X70,X72,X71,X69,X73] : (p(s(bool,happ(s(fun('type.one.one',bool),X71),s('type.one.one',X72)))) | s(bool,X73) = s(bool,happ(s(fun('type.one.one',bool),X69),s('type.one.one',X70))) | s(bool,'T_0') = s(bool,X73)) ) | $spl14),
  inference(superposition,[],[f361,f3404])).
fof(f3404,plain,(
  ( ! [X255,X253,X254,X252] : (s(bool,happ(s(fun('type.one.one',bool),X254),s('type.one.one',X252))) = s(bool,happ(s(fun('type.one.one',bool),X255),s('type.one.one',X253)))) ) | $spl14),
  inference(superposition,[],[f2010,f258])).
fof(f2010,plain,(
  ( ! [X125,X123,X126,X124,X122] : (s(bool,happ(s(fun('type.one.one',bool),X125),s('type.one.one',X126))) = s(bool,happ(s(fun(X122,bool),X123),s(X122,happ(s(fun('type.one.one',X122),X124),s('type.one.one',X126)))))) ) | $spl14),
  inference(superposition,[],[f206,f1050])).
fof(f3660,plain,(
  ( ! [X28,X27] : (s(bool,'T_0') = s(bool,happ(s(fun('type.one.one',bool),X27),s('type.one.one',X28)))) ) | $spl24),
  inference(cnf_transformation,[],[f3660_D])).
fof(f3660_D,plain,(
  ( ! [X28,X27] : (s(bool,'T_0') = s(bool,happ(s(fun('type.one.one',bool),X27),s('type.one.one',X28)))) ) <=> ~$spl24),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl24])])).
fof(f3664,plain,(
  ( ! [X68,X67] : (~p(s(bool,happ(s(fun('type.one.one',bool),X67),s('type.one.one',X68))))) ) | $spl32),
  inference(cnf_transformation,[],[f3664_D])).
fof(f3664_D,plain,(
  ( ! [X68,X67] : (~p(s(bool,happ(s(fun('type.one.one',bool),X67),s('type.one.one',X68))))) ) <=> ~$spl32),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl32])])).
fof(f3620,plain,(
  ( ! [X68,X66,X67,X65] : (~p(s(bool,happ(s(fun('type.one.one',bool),X67),s('type.one.one',X68)))) | s(bool,'T_0') = s(bool,happ(s(fun('type.one.one',bool),X65),s('type.one.one',X66)))) ) | $spl14),
  inference(superposition,[],[f274,f3404])).
fof(f3619,plain,(
  ( ! [X61,X64,X62,X60,X63] : (s(bool,'T_0') = s(bool,happ(s(fun('type.one.one',bool),X62),s('type.one.one',X63))) | s(bool,X64) = s(bool,happ(s(fun('type.one.one',bool),X60),s('type.one.one',X61))) | s(bool,'T_0') = s(bool,X64)) ) | $spl14),
  inference(superposition,[],[f272,f3404])).
fof(f3618,plain,(
  ( ! [X59,X57,X58,X56,X55] : (s(bool,X59) = s(bool,happ(s(fun('type.one.one',bool),X57),s('type.one.one',X58))) | s(bool,'T_0') = s(bool,happ(s(fun('type.one.one',bool),X55),s('type.one.one',X56))) | s(bool,'T_0') = s(bool,X59)) ) | $spl14),
  inference(superposition,[],[f272,f3404])).
fof(f3617,plain,(
  ( ! [X54,X52,X50,X53,X51] : (s(bool,X54) = s(bool,happ(s(fun('type.one.one',bool),X52),s('type.one.one',X53))) | s(bool,'T_0') = s(bool,X54) | s(bool,'T_0') = s(bool,happ(s(fun('type.one.one',bool),X50),s('type.one.one',X51)))) ) | $spl14),
  inference(superposition,[],[f272,f3404])).
fof(f3616,plain,(
  ( ! [X47,X45,X48,X46,X49] : (s(bool,'T_0') = s(bool,happ(s(fun('type.one.one',bool),X47),s('type.one.one',X48))) | s(bool,X49) = s(bool,happ(s(fun('type.one.one',bool),X45),s('type.one.one',X46))) | s(bool,'T_0') = s(bool,X49)) ) | $spl14),
  inference(superposition,[],[f272,f3404])).
fof(f3662,plain,(
  ( ! [X30,X26,X33,X31,X29,X25,X34,X32] : (s('type.pair.prod'('type.infer.exc'('type.one.one',X29),X30),'const.pair.,_2'(s('type.infer.exc'('type.one.one',X29),'const.infer.Success_1'(s('type.one.one',X33))),s(X30,X34))) != s('type.pair.prod'('type.infer.exc'('type.one.one',X29),X30),'const.infer.guard_3'(s(bool,happ(s(fun('type.one.one',bool),X25),s('type.one.one',X26))),s(X29,X31),s(X30,X32)))) ) | $spl28),
  inference(cnf_transformation,[],[f3662_D])).
fof(f3662_D,plain,(
  ( ! [X30,X26,X33,X31,X29,X25,X34,X32] : (s('type.pair.prod'('type.infer.exc'('type.one.one',X29),X30),'const.pair.,_2'(s('type.infer.exc'('type.one.one',X29),'const.infer.Success_1'(s('type.one.one',X33))),s(X30,X34))) != s('type.pair.prod'('type.infer.exc'('type.one.one',X29),X30),'const.infer.guard_3'(s(bool,happ(s(fun('type.one.one',bool),X25),s('type.one.one',X26))),s(X29,X31),s(X30,X32)))) ) <=> ~$spl28),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl28])])).
fof(f3614,plain,(
  ( ! [X30,X28,X26,X33,X31,X29,X27,X25,X34,X32] : (p(s(bool,happ(s(fun('type.one.one',bool),X27),s('type.one.one',X28)))) | s('type.pair.prod'('type.infer.exc'('type.one.one',X29),X30),'const.pair.,_2'(s('type.infer.exc'('type.one.one',X29),'const.infer.Success_1'(s('type.one.one',X33))),s(X30,X34))) != s('type.pair.prod'('type.infer.exc'('type.one.one',X29),X30),'const.infer.guard_3'(s(bool,happ(s(fun('type.one.one',bool),X25),s('type.one.one',X26))),s(X29,X31),s(X30,X32)))) ) | $spl14),
  inference(superposition,[],[f195,f3404])).
fof(f3661,plain,(
  ( ! [X47,X48] : (s(bool,'F_0') = s(bool,happ(s(fun('type.one.one',bool),X47),s('type.one.one',X48)))) ) | $spl26),
  inference(cnf_transformation,[],[f3661_D])).
fof(f3661_D,plain,(
  ( ! [X47,X48] : (s(bool,'F_0') = s(bool,happ(s(fun('type.one.one',bool),X47),s('type.one.one',X48)))) ) <=> ~$spl26),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl26])])).
fof(f3612,plain,(
  ( ! [X14,X15,X13,X16] : (s(bool,'F_0') = s(bool,happ(s(fun('type.one.one',bool),X15),s('type.one.one',X16))) | s(bool,'T_0') = s(bool,happ(s(fun('type.one.one',bool),X13),s('type.one.one',X14)))) ) | $spl14),
  inference(superposition,[],[f167,f3404])).
fof(f3572,plain,(
  ( ! [X70,X72,X71,X69,X73] : (p(s(bool,happ(s(fun('type.one.one',bool),X71),s('type.one.one',X72)))) | s(bool,X73) = s(bool,happ(s(fun('type.one.one',bool),X69),s('type.one.one',X70))) | s(bool,'T_0') = s(bool,X73)) ) | $spl14),
  inference(superposition,[],[f361,f3404])).
fof(f3571,plain,(
  ( ! [X68,X66,X67,X65] : (~p(s(bool,happ(s(fun('type.one.one',bool),X67),s('type.one.one',X68)))) | s(bool,'T_0') = s(bool,happ(s(fun('type.one.one',bool),X65),s('type.one.one',X66)))) ) | $spl14),
  inference(superposition,[],[f274,f3404])).
fof(f3570,plain,(
  ( ! [X61,X64,X62,X60,X63] : (s(bool,'T_0') = s(bool,happ(s(fun('type.one.one',bool),X62),s('type.one.one',X63))) | s(bool,X64) = s(bool,happ(s(fun('type.one.one',bool),X60),s('type.one.one',X61))) | s(bool,'T_0') = s(bool,X64)) ) | $spl14),
  inference(superposition,[],[f272,f3404])).
fof(f3569,plain,(
  ( ! [X59,X57,X58,X56,X55] : (s(bool,X59) = s(bool,happ(s(fun('type.one.one',bool),X57),s('type.one.one',X58))) | s(bool,'T_0') = s(bool,happ(s(fun('type.one.one',bool),X55),s('type.one.one',X56))) | s(bool,'T_0') = s(bool,X59)) ) | $spl14),
  inference(superposition,[],[f272,f3404])).
fof(f3568,plain,(
  ( ! [X54,X52,X50,X53,X51] : (s(bool,X54) = s(bool,happ(s(fun('type.one.one',bool),X52),s('type.one.one',X53))) | s(bool,'T_0') = s(bool,X54) | s(bool,'T_0') = s(bool,happ(s(fun('type.one.one',bool),X50),s('type.one.one',X51)))) ) | $spl14),
  inference(superposition,[],[f272,f3404])).
fof(f3567,plain,(
  ( ! [X47,X45,X48,X46,X49] : (s(bool,'T_0') = s(bool,happ(s(fun('type.one.one',bool),X47),s('type.one.one',X48))) | s(bool,X49) = s(bool,happ(s(fun('type.one.one',bool),X45),s('type.one.one',X46))) | s(bool,'T_0') = s(bool,X49)) ) | $spl14),
  inference(superposition,[],[f272,f3404])).
fof(f3565,plain,(
  ( ! [X30,X28,X26,X33,X31,X29,X27,X25,X34,X32] : (p(s(bool,happ(s(fun('type.one.one',bool),X27),s('type.one.one',X28)))) | s('type.pair.prod'('type.infer.exc'('type.one.one',X29),X30),'const.pair.,_2'(s('type.infer.exc'('type.one.one',X29),'const.infer.Success_1'(s('type.one.one',X33))),s(X30,X34))) != s('type.pair.prod'('type.infer.exc'('type.one.one',X29),X30),'const.infer.guard_3'(s(bool,happ(s(fun('type.one.one',bool),X25),s('type.one.one',X26))),s(X29,X31),s(X30,X32)))) ) | $spl14),
  inference(superposition,[],[f195,f3404])).
fof(f3563,plain,(
  ( ! [X14,X15,X13,X16] : (s(bool,'F_0') = s(bool,happ(s(fun('type.one.one',bool),X15),s('type.one.one',X16))) | s(bool,'T_0') = s(bool,happ(s(fun('type.one.one',bool),X13),s('type.one.one',X14)))) ) | $spl14),
  inference(superposition,[],[f167,f3404])).
fof(f3559,plain,(
  ( ! [X47,X45,X48,X46] : (s(bool,'F_0') = s(bool,happ(s(fun('type.one.one',bool),X47),s('type.one.one',X48))) | s(bool,'T_0') = s(bool,happ(s(fun('type.one.one',bool),X45),s('type.one.one',X46)))) ) | $spl14),
  inference(superposition,[],[f3404,f167])).
fof(f3558,plain,(
  ( ! [X43,X41,X44,X42,X40] : (s(bool,X42) = s(bool,happ(s(fun('type.one.one',bool),X43),s('type.one.one',X44))) | s(bool,'T_0') = s(bool,X42) | s(bool,'T_0') = s(bool,happ(s(fun('type.one.one',bool),X40),s('type.one.one',X41)))) ) | $spl14),
  inference(superposition,[],[f3404,f272])).
fof(f3557,plain,(
  ( ! [X39,X37,X35,X38,X36] : (s(bool,X37) = s(bool,happ(s(fun('type.one.one',bool),X38),s('type.one.one',X39))) | s(bool,'T_0') = s(bool,happ(s(fun('type.one.one',bool),X35),s('type.one.one',X36))) | s(bool,'T_0') = s(bool,X37)) ) | $spl14),
  inference(superposition,[],[f3404,f272])).
fof(f3556,plain,(
  ( ! [X30,X33,X31,X34,X32] : (s(bool,'T_0') = s(bool,happ(s(fun('type.one.one',bool),X32),s('type.one.one',X33))) | s(bool,X34) = s(bool,happ(s(fun('type.one.one',bool),X30),s('type.one.one',X31))) | s(bool,'T_0') = s(bool,X34)) ) | $spl14),
  inference(superposition,[],[f3404,f272])).
fof(f3555,plain,(
  ( ! [X28,X26,X29,X27,X25] : (s(bool,'T_0') = s(bool,happ(s(fun('type.one.one',bool),X27),s('type.one.one',X28))) | s(bool,X29) = s(bool,happ(s(fun('type.one.one',bool),X25),s('type.one.one',X26))) | s(bool,'T_0') = s(bool,X29)) ) | $spl14),
  inference(superposition,[],[f3404,f272])).
fof(f3537,plain,(
  ( ! [X47,X45,X48,X46] : (s(bool,'F_0') = s(bool,happ(s(fun('type.one.one',bool),X47),s('type.one.one',X48))) | s(bool,'T_0') = s(bool,happ(s(fun('type.one.one',bool),X45),s('type.one.one',X46)))) ) | $spl14),
  inference(superposition,[],[f3404,f167])).
fof(f3536,plain,(
  ( ! [X43,X41,X44,X42,X40] : (s(bool,X42) = s(bool,happ(s(fun('type.one.one',bool),X43),s('type.one.one',X44))) | s(bool,'T_0') = s(bool,X42) | s(bool,'T_0') = s(bool,happ(s(fun('type.one.one',bool),X40),s('type.one.one',X41)))) ) | $spl14),
  inference(superposition,[],[f3404,f272])).
fof(f3535,plain,(
  ( ! [X39,X37,X35,X38,X36] : (s(bool,X37) = s(bool,happ(s(fun('type.one.one',bool),X38),s('type.one.one',X39))) | s(bool,'T_0') = s(bool,happ(s(fun('type.one.one',bool),X35),s('type.one.one',X36))) | s(bool,'T_0') = s(bool,X37)) ) | $spl14),
  inference(superposition,[],[f3404,f272])).
fof(f3534,plain,(
  ( ! [X30,X33,X31,X34,X32] : (s(bool,'T_0') = s(bool,happ(s(fun('type.one.one',bool),X32),s('type.one.one',X33))) | s(bool,X34) = s(bool,happ(s(fun('type.one.one',bool),X30),s('type.one.one',X31))) | s(bool,'T_0') = s(bool,X34)) ) | $spl14),
  inference(superposition,[],[f3404,f272])).
fof(f3533,plain,(
  ( ! [X28,X26,X29,X27,X25] : (s(bool,'T_0') = s(bool,happ(s(fun('type.one.one',bool),X27),s('type.one.one',X28))) | s(bool,X29) = s(bool,happ(s(fun('type.one.one',bool),X25),s('type.one.one',X26))) | s(bool,'T_0') = s(bool,X29)) ) | $spl14),
  inference(superposition,[],[f3404,f272])).
fof(f1053,plain,(
  ( ! [X16] : (s(bool,'F_0') != s(bool,f(s('type.one.one',X16))) | s(bool,'T_0') = s(bool,g(s('type.one.one',X16)))) ) | $spl20),
  inference(cnf_transformation,[],[f1053_D])).
fof(f1053_D,plain,(
  ( ! [X16] : (s(bool,'F_0') != s(bool,f(s('type.one.one',X16))) | s(bool,'T_0') = s(bool,g(s('type.one.one',X16)))) ) <=> ~$spl20),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl20])])).
fof(f1038,plain,(
  ( ! [X17,X18,X16] : (s(bool,'F_0') != s(bool,f(s('type.one.one',X16))) | s(fun('type.one.one',bool),X17) = s(fun('type.one.one',bool),X18) | s(bool,'T_0') = s(bool,g(s('type.one.one',X16)))) )),
  inference(superposition,[],[f611,f167])).
fof(f1052,plain,(
  ( ! [X8,X9] : (s(bool,X9) != s(bool,f(s('type.one.one',X8))) | s(bool,'T_0') = s(bool,X9) | s(bool,'T_0') = s(bool,g(s('type.one.one',X8)))) ) | $spl18),
  inference(cnf_transformation,[],[f1052_D])).
fof(f1052_D,plain,(
  ( ! [X8,X9] : (s(bool,X9) != s(bool,f(s('type.one.one',X8))) | s(bool,'T_0') = s(bool,X9) | s(bool,'T_0') = s(bool,g(s('type.one.one',X8)))) ) <=> ~$spl18),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl18])])).
fof(f1037,plain,(
  ( ! [X14,X12,X15,X13] : (s(bool,X13) != s(bool,f(s('type.one.one',X12))) | s(fun('type.one.one',bool),X14) = s(fun('type.one.one',bool),X15) | s(bool,'T_0') = s(bool,X13) | s(bool,'T_0') = s(bool,g(s('type.one.one',X12)))) )),
  inference(superposition,[],[f611,f272])).
fof(f1036,plain,(
  ( ! [X10,X8,X11,X9] : (s(bool,X9) != s(bool,f(s('type.one.one',X8))) | s(fun('type.one.one',bool),X10) = s(fun('type.one.one',bool),X11) | s(bool,'T_0') = s(bool,g(s('type.one.one',X8))) | s(bool,'T_0') = s(bool,X9)) )),
  inference(superposition,[],[f611,f272])).
fof(f1051,plain,(
  ( ! [X0,X3] : (s(bool,'T_0') != s(bool,f(s('type.one.one',X0))) | s(bool,'T_0') = s(bool,X3) | s(bool,X3) = s(bool,g(s('type.one.one',X0)))) ) | $spl16),
  inference(cnf_transformation,[],[f1051_D])).
fof(f1051_D,plain,(
  ( ! [X0,X3] : (s(bool,'T_0') != s(bool,f(s('type.one.one',X0))) | s(bool,'T_0') = s(bool,X3) | s(bool,X3) = s(bool,g(s('type.one.one',X0)))) ) <=> ~$spl16),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl16])])).
fof(f1035,plain,(
  ( ! [X6,X4,X7,X5] : (s(bool,'T_0') != s(bool,f(s('type.one.one',X4))) | s(fun('type.one.one',bool),X5) = s(fun('type.one.one',bool),X6) | s(bool,X7) = s(bool,g(s('type.one.one',X4))) | s(bool,'T_0') = s(bool,X7)) )),
  inference(superposition,[],[f611,f272])).
fof(f1034,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'T_0') != s(bool,f(s('type.one.one',X0))) | s(fun('type.one.one',bool),X1) = s(fun('type.one.one',bool),X2) | s(bool,X3) = s(bool,g(s('type.one.one',X0))) | s(bool,'T_0') = s(bool,X3)) )),
  inference(superposition,[],[f611,f272])).
fof(f278,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0)) ) | $spl10),
  inference(cnf_transformation,[],[f278_D])).
fof(f278_D,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0)) ) <=> ~$spl10),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl10])])).
fof(f280,plain,(
  s(bool,'T_0') != s(bool,'F_0') | $spl13),
  inference(cnf_transformation,[],[f280_D])).
fof(f280_D,plain,(
  s(bool,'T_0') != s(bool,'F_0') <=> ~$spl13),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl13])])).
fof(f277,plain,(
  ( ! [X0] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,'F_0') = s(bool,X0)) )),
  inference(equality_factoring,[],[f167])).
fof(f240,plain,(
  s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraints_3'(s('type.list.list'('type.infer_t.infer_t'),sK0),s('type.list.list'('type.infer_t.infer_t'),sK1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))) = s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'const.infer.Success_1'(s('type.one.one',sK4))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK3))) | $spl0),
  inference(cnf_transformation,[],[f240_D])).
fof(f240_D,plain,(
  s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraints_3'(s('type.list.list'('type.infer_t.infer_t'),sK0),s('type.list.list'('type.infer_t.infer_t'),sK1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))) = s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'const.infer.Success_1'(s('type.one.one',sK4))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK3))) <=> ~$spl0),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl0])])).
fof(f242,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.infer_t.infer_t'),sK0))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.infer_t.infer_t'),sK1))) | $spl2),
  inference(cnf_transformation,[],[f242_D])).
fof(f242_D,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.infer_t.infer_t'),sK0))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.infer_t.infer_t'),sK1))) <=> ~$spl2),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl2])])).
fof(f158,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.infer_t.infer_t'),sK0))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.infer_t.infer_t'),sK1))) | s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraints_3'(s('type.list.list'('type.infer_t.infer_t'),sK0),s('type.list.list'('type.infer_t.infer_t'),sK1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))) = s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'const.infer.Success_1'(s('type.one.one',sK4))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK3)))),
  inference(cnf_transformation,[],[f124])).
fof(f124,plain,(
  (s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraints_3'(s('type.list.list'('type.infer_t.infer_t'),sK0),s('type.list.list'('type.infer_t.infer_t'),sK1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))) = s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'const.infer.Success_1'(s('type.one.one',sK4))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK3))) | (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.infer_t.infer_t'),sK0))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.infer_t.infer_t'),sK1))) & s('type.one.one','const.one.one_0') = s('type.one.one',sK4) & s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))) = s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK3))) & p(s(bool,'const.infer.pure_add_constraints_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),'const.list.ZIP_1'(s('type.pair.prod'('type.list.list'('type.infer_t.infer_t'),'type.list.list'('type.infer_t.infer_t')),'const.pair.,_2'(s('type.list.list'('type.infer_t.infer_t'),sK0),s('type.list.list'('type.infer_t.infer_t'),sK1))))),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK3)))))))) & (s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraints_3'(s('type.list.list'('type.infer_t.infer_t'),sK0),s('type.list.list'('type.infer_t.infer_t'),sK1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))) != s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'const.infer.Success_1'(s('type.one.one',sK4))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK3))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.infer_t.infer_t'),sK0))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.infer_t.infer_t'),sK1))) | s('type.one.one','const.one.one_0') != s('type.one.one',sK4) | s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))) != s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK3))) | ~p(s(bool,'const.infer.pure_add_constraints_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),'const.list.ZIP_1'(s('type.pair.prod'('type.list.list'('type.infer_t.infer_t'),'type.list.list'('type.infer_t.infer_t')),'const.pair.,_2'(s('type.list.list'('type.infer_t.infer_t'),sK0),s('type.list.list'('type.infer_t.infer_t'),sK1))))),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK3)))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1,sK2,sK3,sK4])],[f123])).
fof(f123,plain,(
  ? [X0,X1,X2,X3,X4] : ((s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraints_3'(s('type.list.list'('type.infer_t.infer_t'),X0),s('type.list.list'('type.infer_t.infer_t'),X1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X2))) = s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'const.infer.Success_1'(s('type.one.one',X4))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X3))) | (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.infer_t.infer_t'),X0))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.infer_t.infer_t'),X1))) & s('type.one.one','const.one.one_0') = s('type.one.one',X4) & s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X2))) = s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X3))) & p(s(bool,'const.infer.pure_add_constraints_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X2))),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),'const.list.ZIP_1'(s('type.pair.prod'('type.list.list'('type.infer_t.infer_t'),'type.list.list'('type.infer_t.infer_t')),'const.pair.,_2'(s('type.list.list'('type.infer_t.infer_t'),X0),s('type.list.list'('type.infer_t.infer_t'),X1))))),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X3)))))))) & (s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraints_3'(s('type.list.list'('type.infer_t.infer_t'),X0),s('type.list.list'('type.infer_t.infer_t'),X1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X2))) != s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'const.infer.Success_1'(s('type.one.one',X4))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X3))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.infer_t.infer_t'),X0))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.infer_t.infer_t'),X1))) | s('type.one.one','const.one.one_0') != s('type.one.one',X4) | s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X2))) != s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X3))) | ~p(s(bool,'const.infer.pure_add_constraints_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X2))),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),'const.list.ZIP_1'(s('type.pair.prod'('type.list.list'('type.infer_t.infer_t'),'type.list.list'('type.infer_t.infer_t')),'const.pair.,_2'(s('type.list.list'('type.infer_t.infer_t'),X0),s('type.list.list'('type.infer_t.infer_t'),X1))))),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X3))))))))),
  inference(flattening,[],[f122])).
fof(f122,plain,(
  ? [X0,X1,X2,X3,X4] : ((s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraints_3'(s('type.list.list'('type.infer_t.infer_t'),X0),s('type.list.list'('type.infer_t.infer_t'),X1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X2))) = s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'const.infer.Success_1'(s('type.one.one',X4))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X3))) | (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.infer_t.infer_t'),X0))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.infer_t.infer_t'),X1))) & s('type.one.one','const.one.one_0') = s('type.one.one',X4) & s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X2))) = s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X3))) & p(s(bool,'const.infer.pure_add_constraints_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X2))),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),'const.list.ZIP_1'(s('type.pair.prod'('type.list.list'('type.infer_t.infer_t'),'type.list.list'('type.infer_t.infer_t')),'const.pair.,_2'(s('type.list.list'('type.infer_t.infer_t'),X0),s('type.list.list'('type.infer_t.infer_t'),X1))))),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X3)))))))) & (s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraints_3'(s('type.list.list'('type.infer_t.infer_t'),X0),s('type.list.list'('type.infer_t.infer_t'),X1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X2))) != s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'const.infer.Success_1'(s('type.one.one',X4))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X3))) | (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.infer_t.infer_t'),X0))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.infer_t.infer_t'),X1))) | s('type.one.one','const.one.one_0') != s('type.one.one',X4) | s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X2))) != s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X3))) | ~p(s(bool,'const.infer.pure_add_constraints_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X2))),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),'const.list.ZIP_1'(s('type.pair.prod'('type.list.list'('type.infer_t.infer_t'),'type.list.list'('type.infer_t.infer_t')),'const.pair.,_2'(s('type.list.list'('type.infer_t.infer_t'),X0),s('type.list.list'('type.infer_t.infer_t'),X1))))),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X3)))))))))),
  inference(nnf_transformation,[],[f120])).
fof(f120,plain,(
  ? [X0,X1,X2,X3,X4] : (s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraints_3'(s('type.list.list'('type.infer_t.infer_t'),X0),s('type.list.list'('type.infer_t.infer_t'),X1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X2))) = s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'const.infer.Success_1'(s('type.one.one',X4))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X3))) <~> (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.infer_t.infer_t'),X0))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.infer_t.infer_t'),X1))) & s('type.one.one','const.one.one_0') = s('type.one.one',X4) & s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X2))) = s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X3))) & p(s(bool,'const.infer.pure_add_constraints_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X2))),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),'const.list.ZIP_1'(s('type.pair.prod'('type.list.list'('type.infer_t.infer_t'),'type.list.list'('type.infer_t.infer_t')),'const.pair.,_2'(s('type.list.list'('type.infer_t.infer_t'),X0),s('type.list.list'('type.infer_t.infer_t'),X1))))),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X3))))))))),
  inference(ennf_transformation,[],[f46])).
fof(f46,plain,(
  ~! [X0,X1,X2,X3,X4] : (s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraints_3'(s('type.list.list'('type.infer_t.infer_t'),X0),s('type.list.list'('type.infer_t.infer_t'),X1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X2))) = s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'const.infer.Success_1'(s('type.one.one',X4))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X3))) <=> (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.infer_t.infer_t'),X0))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.infer_t.infer_t'),X1))) & s('type.one.one','const.one.one_0') = s('type.one.one',X4) & s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X2))) = s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X3))) & p(s(bool,'const.infer.pure_add_constraints_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X2))),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),'const.list.ZIP_1'(s('type.pair.prod'('type.list.list'('type.infer_t.infer_t'),'type.list.list'('type.infer_t.infer_t')),'const.pair.,_2'(s('type.list.list'('type.infer_t.infer_t'),X0),s('type.list.list'('type.infer_t.infer_t'),X1))))),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X3))))))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6,X7,X8,X9,X10] : (s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraints_3'(s('type.list.list'('type.infer_t.infer_t'),X6),s('type.list.list'('type.infer_t.infer_t'),X7),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X8))) = s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'const.infer.Success_1'(s('type.one.one',X10))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X9))) <=> (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.infer_t.infer_t'),X6))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.infer_t.infer_t'),X7))) & s('type.one.one','const.one.one_0') = s('type.one.one',X10) & s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X8))) = s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X9))) & p(s(bool,'const.infer.pure_add_constraints_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X8))),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),'const.list.ZIP_1'(s('type.pair.prod'('type.list.list'('type.infer_t.infer_t'),'type.list.list'('type.infer_t.infer_t')),'const.pair.,_2'(s('type.list.list'('type.infer_t.infer_t'),X6),s('type.list.list'('type.infer_t.infer_t'),X7))))),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X9))))))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6,X7,X8,X9,X10] : (s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraints_3'(s('type.list.list'('type.infer_t.infer_t'),X6),s('type.list.list'('type.infer_t.infer_t'),X7),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X8))) = s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'const.infer.Success_1'(s('type.one.one',X10))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X9))) <=> (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.infer_t.infer_t'),X6))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.infer_t.infer_t'),X7))) & s('type.one.one','const.one.one_0') = s('type.one.one',X10) & s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X8))) = s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X9))) & p(s(bool,'const.infer.pure_add_constraints_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X8))),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),'const.list.ZIP_1'(s('type.pair.prod'('type.list.list'('type.infer_t.infer_t'),'type.list.list'('type.infer_t.infer_t')),'const.pair.,_2'(s('type.list.list'('type.infer_t.infer_t'),X6),s('type.list.list'('type.infer_t.infer_t'),X7))))),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),X9))))))))),
  file('thm.inferProps.success_eqns|split|8','thm.inferProps.success_eqns|split|8')).
fof(f244,plain,(
  s('type.one.one','const.one.one_0') = s('type.one.one',sK4) | $spl4),
  inference(cnf_transformation,[],[f244_D])).
fof(f244_D,plain,(
  s('type.one.one','const.one.one_0') = s('type.one.one',sK4) <=> ~$spl4),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl4])])).
fof(f159,plain,(
  s('type.one.one','const.one.one_0') = s('type.one.one',sK4) | s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraints_3'(s('type.list.list'('type.infer_t.infer_t'),sK0),s('type.list.list'('type.infer_t.infer_t'),sK1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))) = s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'const.infer.Success_1'(s('type.one.one',sK4))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK3)))),
  inference(cnf_transformation,[],[f124])).
fof(f246,plain,(
  s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))) = s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK3))) | $spl6),
  inference(cnf_transformation,[],[f246_D])).
fof(f246_D,plain,(
  s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))) = s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK3))) <=> ~$spl6),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl6])])).
fof(f160,plain,(
  s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))) = s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK3))) | s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraints_3'(s('type.list.list'('type.infer_t.infer_t'),sK0),s('type.list.list'('type.infer_t.infer_t'),sK1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))) = s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'const.infer.Success_1'(s('type.one.one',sK4))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK3)))),
  inference(cnf_transformation,[],[f124])).
fof(f248,plain,(
  p(s(bool,'const.infer.pure_add_constraints_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),'const.list.ZIP_1'(s('type.pair.prod'('type.list.list'('type.infer_t.infer_t'),'type.list.list'('type.infer_t.infer_t')),'const.pair.,_2'(s('type.list.list'('type.infer_t.infer_t'),sK0),s('type.list.list'('type.infer_t.infer_t'),sK1))))),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK3)))))) | $spl8),
  inference(cnf_transformation,[],[f248_D])).
fof(f248_D,plain,(
  p(s(bool,'const.infer.pure_add_constraints_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),'const.list.ZIP_1'(s('type.pair.prod'('type.list.list'('type.infer_t.infer_t'),'type.list.list'('type.infer_t.infer_t')),'const.pair.,_2'(s('type.list.list'('type.infer_t.infer_t'),sK0),s('type.list.list'('type.infer_t.infer_t'),sK1))))),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK3)))))) <=> ~$spl8),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl8])])).
fof(f161,plain,(
  p(s(bool,'const.infer.pure_add_constraints_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),'const.list.ZIP_1'(s('type.pair.prod'('type.list.list'('type.infer_t.infer_t'),'type.list.list'('type.infer_t.infer_t')),'const.pair.,_2'(s('type.list.list'('type.infer_t.infer_t'),sK0),s('type.list.list'('type.infer_t.infer_t'),sK1))))),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK3)))))) | s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraints_3'(s('type.list.list'('type.infer_t.infer_t'),sK0),s('type.list.list'('type.infer_t.infer_t'),sK1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))) = s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'const.infer.Success_1'(s('type.one.one',sK4))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK3)))),
  inference(cnf_transformation,[],[f124])).
fof(f241,plain,(
  s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraints_3'(s('type.list.list'('type.infer_t.infer_t'),sK0),s('type.list.list'('type.infer_t.infer_t'),sK1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))) != s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'const.infer.Success_1'(s('type.one.one',sK4))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK3))) | $spl1),
  inference(cnf_transformation,[],[f241_D])).
fof(f241_D,plain,(
  s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraints_3'(s('type.list.list'('type.infer_t.infer_t'),sK0),s('type.list.list'('type.infer_t.infer_t'),sK1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))) != s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'const.infer.Success_1'(s('type.one.one',sK4))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK3))) <=> ~$spl1),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1])])).
fof(f243,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.infer_t.infer_t'),sK0))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.infer_t.infer_t'),sK1))) | $spl3),
  inference(cnf_transformation,[],[f243_D])).
fof(f243_D,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.infer_t.infer_t'),sK0))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.infer_t.infer_t'),sK1))) <=> ~$spl3),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl3])])).
fof(f245,plain,(
  s('type.one.one','const.one.one_0') != s('type.one.one',sK4) | $spl5),
  inference(cnf_transformation,[],[f245_D])).
fof(f245_D,plain,(
  s('type.one.one','const.one.one_0') != s('type.one.one',sK4) <=> ~$spl5),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl5])])).
fof(f247,plain,(
  s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))) != s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK3))) | $spl7),
  inference(cnf_transformation,[],[f247_D])).
fof(f247_D,plain,(
  s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))) != s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK3))) <=> ~$spl7),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl7])])).
fof(f249,plain,(
  ~p(s(bool,'const.infer.pure_add_constraints_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),'const.list.ZIP_1'(s('type.pair.prod'('type.list.list'('type.infer_t.infer_t'),'type.list.list'('type.infer_t.infer_t')),'const.pair.,_2'(s('type.list.list'('type.infer_t.infer_t'),sK0),s('type.list.list'('type.infer_t.infer_t'),sK1))))),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK3)))))) | $spl9),
  inference(cnf_transformation,[],[f249_D])).
fof(f249_D,plain,(
  ~p(s(bool,'const.infer.pure_add_constraints_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),'const.list.ZIP_1'(s('type.pair.prod'('type.list.list'('type.infer_t.infer_t'),'type.list.list'('type.infer_t.infer_t')),'const.pair.,_2'(s('type.list.list'('type.infer_t.infer_t'),sK0),s('type.list.list'('type.infer_t.infer_t'),sK1))))),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK3)))))) <=> ~$spl9),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl9])])).
fof(f162,plain,(
  ~p(s(bool,'const.infer.pure_add_constraints_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),'const.list.ZIP_1'(s('type.pair.prod'('type.list.list'('type.infer_t.infer_t'),'type.list.list'('type.infer_t.infer_t')),'const.pair.,_2'(s('type.list.list'('type.infer_t.infer_t'),sK0),s('type.list.list'('type.infer_t.infer_t'),sK1))))),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.infer.infer_st_subst_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK3)))))) | s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))) != s('type.num.num','const.infer.infer_st_next_uvar_1'(s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK3))) | s('type.one.one','const.one.one_0') != s('type.one.one',sK4) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.infer_t.infer_t'),sK0))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.infer_t.infer_t'),sK1))) | s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.infer.add_constraints_3'(s('type.list.list'('type.infer_t.infer_t'),sK0),s('type.list.list'('type.infer_t.infer_t'),sK1),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK2))) != s('type.pair.prod'('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'))),'const.pair.,_2'(s('type.infer.exc'('type.one.one','type.list.list'('type.string.char')),'const.infer.Success_1'(s('type.one.one',sK4))),s('type.infer.infer_st'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),sK3)))),
  inference(cnf_transformation,[],[f124])).
% SZS output end Proof for thm.inferProps
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 218
% Passive clauses: 8125
% Generated clauses: 54035
% Final active clauses: 109
% Final passive clauses: 1266
% Input formulas: 44
% Initial clauses: 82
% Discarded non-redundant clauses: 7228
% 
% Duplicate literals: 360
% Trivial inequalities: 73
% Fw subsumption resolutions: 173
% Fw demodulations: 16388
% Bw demodulations: 321
% Condensations: 556
% Global subsumptions: 1
% 
% Simple tautologies: 42
% Equational tautologies: 86
% Forward subsumptions: 24189
% Fw demodulations to eq. taut.: 1178
% Bw demodulations to eq. taut.: 10
% 
% Unit resulting resolution: 18015
% Forward superposition: 9005
% Backward superposition: 7897
% Self superposition: 277
% Equality factoring: 52
% Equality resolution: 29
% 
% Split clauses: 82
% Split components: 168
% SAT solver clauses: 8351
% SAT solver unit clauses: 795
% SAT solver binary clauses: 3587
% 
% Sat splits: 82
% Sat splitting refutations: 59
% 
% Memory used [KB]: 54881
% Time elapsed: 4.774 s
% ------------------------------
% ------------------------------
% Success in time 6.14 s
