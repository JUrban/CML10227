Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 149 next slice time: 5
dis+11_7_3 on thm.modProps
% (22642)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 357
% Passive clauses: 2846
% Generated clauses: 18074
% Final active clauses: 357
% Final passive clauses: 2363
% Input formulas: 73
% Initial clauses: 160
% 
% Duplicate literals: 246
% Trivial inequalities: 19
% Fw subsumption resolutions: 544
% Fw demodulations: 2827
% 
% Simple tautologies: 225
% Equational tautologies: 29
% Forward subsumptions: 11231
% 
% Binary resolution: 3910
% Factoring: 19
% Forward superposition: 4946
% Backward superposition: 5835
% Self superposition: 129
% Equality factoring: 26
% Equality resolution: 5
% 
% Split clauses: 167
% Split components: 335
% SAT solver clauses: 236
% SAT solver unit clauses: 14
% SAT solver binary clauses: 76
% 
% Sat splits: 167
% 
% TWLsolver clauses: 236
% TWLsolver calls for satisfiability: 68
% 
% Memory used [KB]: 25202
% Time elapsed: 0.600 s
% ------------------------------
% ------------------------------
% remaining time: 143 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.modProps
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.modProps
% SZS output start Proof for thm.modProps
fof(f7064,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f7063,f288,f457,f296,f466,f297,f467,f391,f507,f3738,f3739,f3474,f3475,f588,f589,f298,f468,f443,f556,f3435,f3472,f397,f512,f3683,f3733,f440,f553])).
fof(f553,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s(fun(X1,X0),'const.combin.o_2'(s(fun(X2,X0),X3),s(fun(X1,X2),X4))) = s(fun(X1,X0),happ(s(fun(fun(X1,X2),fun(X1,X0)),happ(s(fun(fun(X2,X0),fun(fun(X1,X2),fun(X1,X0))),'const.combin.o_0'),s(fun(X2,X0),X3))),s(fun(X1,X2),X4)))) ) | $spl154),
  inference(cnf_transformation,[],[f553_D])).
fof(f553_D,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s(fun(X1,X0),'const.combin.o_2'(s(fun(X2,X0),X3),s(fun(X1,X2),X4))) = s(fun(X1,X0),happ(s(fun(fun(X1,X2),fun(X1,X0)),happ(s(fun(fun(X2,X0),fun(fun(X1,X2),fun(X1,X0))),'const.combin.o_0'),s(fun(X2,X0),X3))),s(fun(X1,X2),X4)))) ) <=> ~$spl154),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl154])])).
fof(f440,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s(fun(X1,X0),'const.combin.o_2'(s(fun(X2,X0),X3),s(fun(X1,X2),X4))) = s(fun(X1,X0),happ(s(fun(fun(X1,X2),fun(X1,X0)),happ(s(fun(fun(X2,X0),fun(fun(X1,X2),fun(X1,X0))),'const.combin.o_0'),s(fun(X2,X0),X3))),s(fun(X1,X2),X4)))) )),
  inference(cnf_transformation,[],[f178])).
fof(f178,plain,(
  ! [X0,X1,X2,X3,X4] : s(fun(X1,X0),'const.combin.o_2'(s(fun(X2,X0),X3),s(fun(X1,X2),X4))) = s(fun(X1,X0),happ(s(fun(fun(X1,X2),fun(X1,X0)),happ(s(fun(fun(X2,X0),fun(fun(X1,X2),fun(X1,X0))),'const.combin.o_0'),s(fun(X2,X0),X3))),s(fun(X1,X2),X4)))),
  inference(flattening,[],[f177])).
fof(f177,plain,(
  ! [X0,X1,X2] : ! [X3,X4] : s(fun(X1,X0),'const.combin.o_2'(s(fun(X2,X0),X3),s(fun(X1,X2),X4))) = s(fun(X1,X0),happ(s(fun(fun(X1,X2),fun(X1,X0)),happ(s(fun(fun(X2,X0),fun(fun(X1,X2),fun(X1,X0))),'const.combin.o_0'),s(fun(X2,X0),X3))),s(fun(X1,X2),X4)))),
  inference(rectify,[],[f69])).
fof(f69,axiom,(
  ! [X6,X7,X13] : ! [X37,X38] : s(fun(X7,X6),'const.combin.o_2'(s(fun(X13,X6),X37),s(fun(X7,X13),X38))) = s(fun(X7,X6),happ(s(fun(fun(X7,X13),fun(X7,X6)),happ(s(fun(fun(X13,X6),fun(fun(X7,X13),fun(X7,X6))),'const.combin.o_0'),s(fun(X13,X6),X37))),s(fun(X7,X13),X38)))),
  file('thm.modProps.tids_of_decs_thm|split|0','ARITY_0_2_const.combin.o')).
fof(f3733,plain,(
  ( ! [X14,X12,X15,X13,X16] : (s(fun(X12,X13),'const.combin.o_2'(s(fun(X14,X13),X15),s(fun(X12,X14),X16))) = s(fun(X12,X13),'const.combin.C_3'(s(fun(fun(X14,X13),fun(fun(X12,X14),fun(X12,X13))),'const.combin.o_0'),s(fun(X12,X14),X16),s(fun(X14,X13),X15)))) ) | $spl832),
  inference(cnf_transformation,[],[f3733_D])).
fof(f3733_D,plain,(
  ( ! [X14,X12,X15,X13,X16] : (s(fun(X12,X13),'const.combin.o_2'(s(fun(X14,X13),X15),s(fun(X12,X14),X16))) = s(fun(X12,X13),'const.combin.C_3'(s(fun(fun(X14,X13),fun(fun(X12,X14),fun(X12,X13))),'const.combin.o_0'),s(fun(X12,X14),X16),s(fun(X14,X13),X15)))) ) <=> ~$spl832),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl832])])).
fof(f3683,plain,(
  ( ! [X14,X12,X15,X13,X16] : (s(fun(X12,X13),'const.combin.o_2'(s(fun(X14,X13),X15),s(fun(X12,X14),X16))) = s(fun(X12,X13),'const.combin.C_3'(s(fun(fun(X14,X13),fun(fun(X12,X14),fun(X12,X13))),'const.combin.o_0'),s(fun(X12,X14),X16),s(fun(X14,X13),X15)))) ) | ($spl154 | $spl160)),
  inference(superposition,[],[f553,f556])).
fof(f512,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.list.list'(X0),'const.list.MAP_2'(s(fun(X1,X0),X2),s('type.list.list'(X1),X3))) = s('type.list.list'(X0),happ(s(fun('type.list.list'(X1),'type.list.list'(X0)),happ(s(fun(fun(X1,X0),fun('type.list.list'(X1),'type.list.list'(X0))),'const.list.MAP_0'),s(fun(X1,X0),X2))),s('type.list.list'(X1),X3)))) ) | $spl72),
  inference(cnf_transformation,[],[f512_D])).
fof(f512_D,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.list.list'(X0),'const.list.MAP_2'(s(fun(X1,X0),X2),s('type.list.list'(X1),X3))) = s('type.list.list'(X0),happ(s(fun('type.list.list'(X1),'type.list.list'(X0)),happ(s(fun(fun(X1,X0),fun('type.list.list'(X1),'type.list.list'(X0))),'const.list.MAP_0'),s(fun(X1,X0),X2))),s('type.list.list'(X1),X3)))) ) <=> ~$spl72),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl72])])).
fof(f397,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.list.list'(X0),'const.list.MAP_2'(s(fun(X1,X0),X2),s('type.list.list'(X1),X3))) = s('type.list.list'(X0),happ(s(fun('type.list.list'(X1),'type.list.list'(X0)),happ(s(fun(fun(X1,X0),fun('type.list.list'(X1),'type.list.list'(X0))),'const.list.MAP_0'),s(fun(X1,X0),X2))),s('type.list.list'(X1),X3)))) )),
  inference(cnf_transformation,[],[f168])).
fof(f168,plain,(
  ! [X0,X1,X2,X3] : s('type.list.list'(X0),'const.list.MAP_2'(s(fun(X1,X0),X2),s('type.list.list'(X1),X3))) = s('type.list.list'(X0),happ(s(fun('type.list.list'(X1),'type.list.list'(X0)),happ(s(fun(fun(X1,X0),fun('type.list.list'(X1),'type.list.list'(X0))),'const.list.MAP_0'),s(fun(X1,X0),X2))),s('type.list.list'(X1),X3)))),
  inference(flattening,[],[f167])).
fof(f167,plain,(
  ! [X0,X1] : ! [X2,X3] : s('type.list.list'(X0),'const.list.MAP_2'(s(fun(X1,X0),X2),s('type.list.list'(X1),X3))) = s('type.list.list'(X0),happ(s(fun('type.list.list'(X1),'type.list.list'(X0)),happ(s(fun(fun(X1,X0),fun('type.list.list'(X1),'type.list.list'(X0))),'const.list.MAP_0'),s(fun(X1,X0),X2))),s('type.list.list'(X1),X3)))),
  inference(rectify,[],[f66])).
fof(f66,axiom,(
  ! [X6,X7] : ! [X37,X38] : s('type.list.list'(X6),'const.list.MAP_2'(s(fun(X7,X6),X37),s('type.list.list'(X7),X38))) = s('type.list.list'(X6),happ(s(fun('type.list.list'(X7),'type.list.list'(X6)),happ(s(fun(fun(X7,X6),fun('type.list.list'(X7),'type.list.list'(X6))),'const.list.MAP_0'),s(fun(X7,X6),X37))),s('type.list.list'(X7),X38)))),
  file('thm.modProps.tids_of_decs_thm|split|0','ARITY_0_2_const.list.MAP')).
fof(f3472,plain,(
  ( ! [X12,X10,X13,X11] : (s('type.list.list'(X10),'const.list.MAP_2'(s(fun(X11,X10),X12),s('type.list.list'(X11),X13))) = s('type.list.list'(X10),'const.combin.C_3'(s(fun(fun(X11,X10),fun('type.list.list'(X11),'type.list.list'(X10))),'const.list.MAP_0'),s('type.list.list'(X11),X13),s(fun(X11,X10),X12)))) ) | $spl790),
  inference(cnf_transformation,[],[f3472_D])).
fof(f3472_D,plain,(
  ( ! [X12,X10,X13,X11] : (s('type.list.list'(X10),'const.list.MAP_2'(s(fun(X11,X10),X12),s('type.list.list'(X11),X13))) = s('type.list.list'(X10),'const.combin.C_3'(s(fun(fun(X11,X10),fun('type.list.list'(X11),'type.list.list'(X10))),'const.list.MAP_0'),s('type.list.list'(X11),X13),s(fun(X11,X10),X12)))) ) <=> ~$spl790),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl790])])).
fof(f3435,plain,(
  ( ! [X12,X10,X13,X11] : (s('type.list.list'(X10),'const.list.MAP_2'(s(fun(X11,X10),X12),s('type.list.list'(X11),X13))) = s('type.list.list'(X10),'const.combin.C_3'(s(fun(fun(X11,X10),fun('type.list.list'(X11),'type.list.list'(X10))),'const.list.MAP_0'),s('type.list.list'(X11),X13),s(fun(X11,X10),X12)))) ) | ($spl72 | $spl160)),
  inference(superposition,[],[f512,f556])).
fof(f556,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s(X0,'const.combin.C_3'(s(fun(X1,fun(X2,X0)),X3),s(X2,X4),s(X1,X5))) = s(X0,happ(s(fun(X2,X0),happ(s(fun(X1,fun(X2,X0)),X3),s(X1,X5))),s(X2,X4)))) ) | $spl160),
  inference(cnf_transformation,[],[f556_D])).
fof(f556_D,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s(X0,'const.combin.C_3'(s(fun(X1,fun(X2,X0)),X3),s(X2,X4),s(X1,X5))) = s(X0,happ(s(fun(X2,X0),happ(s(fun(X1,fun(X2,X0)),X3),s(X1,X5))),s(X2,X4)))) ) <=> ~$spl160),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl160])])).
fof(f443,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s(X0,'const.combin.C_3'(s(fun(X1,fun(X2,X0)),X3),s(X2,X4),s(X1,X5))) = s(X0,happ(s(fun(X2,X0),happ(s(fun(X1,fun(X2,X0)),X3),s(X1,X5))),s(X2,X4)))) )),
  inference(cnf_transformation,[],[f184])).
fof(f184,plain,(
  ! [X0,X1,X2,X3,X4,X5] : s(X0,'const.combin.C_3'(s(fun(X1,fun(X2,X0)),X3),s(X2,X4),s(X1,X5))) = s(X0,happ(s(fun(X2,X0),happ(s(fun(X1,fun(X2,X0)),X3),s(X1,X5))),s(X2,X4)))),
  inference(flattening,[],[f183])).
fof(f183,plain,(
  ! [X0,X1,X2] : ! [X3,X4,X5] : s(X0,'const.combin.C_3'(s(fun(X1,fun(X2,X0)),X3),s(X2,X4),s(X1,X5))) = s(X0,happ(s(fun(X2,X0),happ(s(fun(X1,fun(X2,X0)),X3),s(X1,X5))),s(X2,X4)))),
  inference(rectify,[],[f31])).
fof(f31,axiom,(
  ! [X13,X7,X6] : ! [X5,X12,X14] : s(X13,'const.combin.C_3'(s(fun(X7,fun(X6,X13)),X5),s(X6,X12),s(X7,X14))) = s(X13,happ(s(fun(X6,X13),happ(s(fun(X7,fun(X6,X13)),X5),s(X7,X14))),s(X6,X12)))),
  file('thm.modProps.tids_of_decs_thm|split|0','thm.combin.C_DEF')).
fof(f468,plain,(
  ( ! [X0] : (s(fun('type.ast.id'('type.list.list'('type.string.char')),bool),'const.modProps.tids_of_decs_1'(s('type.list.list'('type.modLang.dec'),X0))) = s(fun('type.ast.id'('type.list.list'('type.string.char')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.ast.id'('type.list.list'('type.string.char'))),'const.list.FLAT_1'(s('type.list.list'('type.list.list'('type.ast.id'('type.list.list'('type.string.char')))),happ(s(fun('type.list.list'('type.modLang.dec'),'type.list.list'('type.list.list'('type.ast.id'('type.list.list'('type.string.char'))))),happ(s(fun(fun('type.modLang.dec','type.list.list'('type.ast.id'('type.list.list'('type.string.char')))),fun('type.list.list'('type.modLang.dec'),'type.list.list'('type.list.list'('type.ast.id'('type.list.list'('type.string.char')))))),'const.list.MAP_0'),s(fun('type.modLang.dec','type.list.list'('type.ast.id'('type.list.list'('type.string.char')))),'_dst_x1x0x0x0x0_5'(s(fun('type.modLang.dec',fun(fun('type.num.num',fun('type.modLang.exp','type.list.list'('type.ast.id'('type.list.list'('type.string.char'))))),fun(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.modLang.exp'))),'type.list.list'('type.ast.id'('type.list.list'('type.string.char')))),fun(fun('type.option.option'('type.list.list'('type.string.char')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t')))))),'type.list.list'('type.ast.id'('type.list.list'('type.string.char'))))),fun(fun('type.option.option'('type.list.list'('type.string.char')),fun('type.list.list'('type.string.char'),fun('type.list.list'('type.ast.t'),'type.list.list'('type.ast.id'('type.list.list'('type.string.char')))))),'type.list.list'('type.ast.id'('type.list.list'('type.string.char')))))))),'const.modLang.dec_CASE_0'),s(fun('type.num.num',fun('type.modLang.exp','type.list.list'('type.ast.id'('type.list.list'('type.string.char'))))),'_dst_x0_1'(s(fun('type.modLang.exp','type.list.list'('type.ast.id'('type.list.list'('type.string.char')))),'_dst_x0_1'(s('type.list.list'('type.ast.id'('type.list.list'('type.string.char'))),'const.list.NIL_0'))))),s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.modLang.exp'))),'type.list.list'('type.ast.id'('type.list.list'('type.string.char')))),'_dst_x0_1'(s('type.list.list'('type.ast.id'('type.list.list'('type.string.char'))),'const.list.NIL_0'))),s(fun('type.option.option'('type.list.list'('type.string.char')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t')))))),'type.list.list'('type.ast.id'('type.list.list'('type.string.char'))))),'_dst_x0x1_2'(s(fun(fun('type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t'))))),'type.ast.id'('type.list.list'('type.string.char'))),fun('type.list.list'('type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t')))))),'type.list.list'('type.ast.id'('type.list.list'('type.string.char'))))),'const.list.MAP_0'),s(fun('type.option.option'('type.list.list'('type.string.char')),fun('type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t'))))),'type.ast.id'('type.list.list'('type.string.char')))),'_dst_x0x1x0_3'(s(fun(fun('type.list.list'('type.string.char'),'type.ast.id'('type.list.list'('type.string.char'))),fun(fun('type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t'))))),'type.list.list'('type.string.char')),fun('type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t'))))),'type.ast.id'('type.list.list'('type.string.char'))))),'const.combin.o_0'),s(fun('type.option.option'('type.list.list'('type.string.char')),fun('type.list.list'('type.string.char'),'type.ast.id'('type.list.list'('type.string.char')))),'const.ast.mk_id_0'),s(fun('type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t'))))),'type.list.list'('type.string.char')),happ(s(fun(fun('type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t'))))),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t'))))),fun('type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t'))))),'type.list.list'('type.string.char'))),happ(s(fun(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t')))),'type.list.list'('type.string.char')),fun(fun('type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t'))))),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t'))))),fun('type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t'))))),'type.list.list'('type.string.char')))),'const.combin.o_0'),s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t')))),'type.list.list'('type.string.char')),'const.pair.FST_0'))),s(fun('type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t'))))),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t'))))),'const.pair.SND_0'))))))),s(fun('type.option.option'('type.list.list'('type.string.char')),fun('type.list.list'('type.string.char'),fun('type.list.list'('type.ast.t'),'type.list.list'('type.ast.id'('type.list.list'('type.string.char')))))),'_dst_x0_1'(s(fun('type.list.list'('type.string.char'),fun('type.list.list'('type.ast.t'),'type.list.list'('type.ast.id'('type.list.list'('type.string.char'))))),'_dst_x0_1'(s(fun('type.list.list'('type.ast.t'),'type.list.list'('type.ast.id'('type.list.list'('type.string.char')))),'_dst_x0_1'(s('type.list.list'('type.ast.id'('type.list.list'('type.string.char'))),'const.list.NIL_0'))))))))))),s('type.list.list'('type.modLang.dec'),X0)))))))) ) | $spl10),
  inference(cnf_transformation,[],[f468_D])).
fof(f468_D,plain,(
  ( ! [X0] : (s(fun('type.ast.id'('type.list.list'('type.string.char')),bool),'const.modProps.tids_of_decs_1'(s('type.list.list'('type.modLang.dec'),X0))) = s(fun('type.ast.id'('type.list.list'('type.string.char')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.ast.id'('type.list.list'('type.string.char'))),'const.list.FLAT_1'(s('type.list.list'('type.list.list'('type.ast.id'('type.list.list'('type.string.char')))),happ(s(fun('type.list.list'('type.modLang.dec'),'type.list.list'('type.list.list'('type.ast.id'('type.list.list'('type.string.char'))))),happ(s(fun(fun('type.modLang.dec','type.list.list'('type.ast.id'('type.list.list'('type.string.char')))),fun('type.list.list'('type.modLang.dec'),'type.list.list'('type.list.list'('type.ast.id'('type.list.list'('type.string.char')))))),'const.list.MAP_0'),s(fun('type.modLang.dec','type.list.list'('type.ast.id'('type.list.list'('type.string.char')))),'_dst_x1x0x0x0x0_5'(s(fun('type.modLang.dec',fun(fun('type.num.num',fun('type.modLang.exp','type.list.list'('type.ast.id'('type.list.list'('type.string.char'))))),fun(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.modLang.exp'))),'type.list.list'('type.ast.id'('type.list.list'('type.string.char')))),fun(fun('type.option.option'('type.list.list'('type.string.char')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t')))))),'type.list.list'('type.ast.id'('type.list.list'('type.string.char'))))),fun(fun('type.option.option'('type.list.list'('type.string.char')),fun('type.list.list'('type.string.char'),fun('type.list.list'('type.ast.t'),'type.list.list'('type.ast.id'('type.list.list'('type.string.char')))))),'type.list.list'('type.ast.id'('type.list.list'('type.string.char')))))))),'const.modLang.dec_CASE_0'),s(fun('type.num.num',fun('type.modLang.exp','type.list.list'('type.ast.id'('type.list.list'('type.string.char'))))),'_dst_x0_1'(s(fun('type.modLang.exp','type.list.list'('type.ast.id'('type.list.list'('type.string.char')))),'_dst_x0_1'(s('type.list.list'('type.ast.id'('type.list.list'('type.string.char'))),'const.list.NIL_0'))))),s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.modLang.exp'))),'type.list.list'('type.ast.id'('type.list.list'('type.string.char')))),'_dst_x0_1'(s('type.list.list'('type.ast.id'('type.list.list'('type.string.char'))),'const.list.NIL_0'))),s(fun('type.option.option'('type.list.list'('type.string.char')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t')))))),'type.list.list'('type.ast.id'('type.list.list'('type.string.char'))))),'_dst_x0x1_2'(s(fun(fun('type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t'))))),'type.ast.id'('type.list.list'('type.string.char'))),fun('type.list.list'('type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t')))))),'type.list.list'('type.ast.id'('type.list.list'('type.string.char'))))),'const.list.MAP_0'),s(fun('type.option.option'('type.list.list'('type.string.char')),fun('type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t'))))),'type.ast.id'('type.list.list'('type.string.char')))),'_dst_x0x1x0_3'(s(fun(fun('type.list.list'('type.string.char'),'type.ast.id'('type.list.list'('type.string.char'))),fun(fun('type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t'))))),'type.list.list'('type.string.char')),fun('type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t'))))),'type.ast.id'('type.list.list'('type.string.char'))))),'const.combin.o_0'),s(fun('type.option.option'('type.list.list'('type.string.char')),fun('type.list.list'('type.string.char'),'type.ast.id'('type.list.list'('type.string.char')))),'const.ast.mk_id_0'),s(fun('type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t'))))),'type.list.list'('type.string.char')),happ(s(fun(fun('type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t'))))),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t'))))),fun('type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t'))))),'type.list.list'('type.string.char'))),happ(s(fun(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t')))),'type.list.list'('type.string.char')),fun(fun('type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t'))))),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t'))))),fun('type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t'))))),'type.list.list'('type.string.char')))),'const.combin.o_0'),s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t')))),'type.list.list'('type.string.char')),'const.pair.FST_0'))),s(fun('type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t'))))),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t'))))),'const.pair.SND_0'))))))),s(fun('type.option.option'('type.list.list'('type.string.char')),fun('type.list.list'('type.string.char'),fun('type.list.list'('type.ast.t'),'type.list.list'('type.ast.id'('type.list.list'('type.string.char')))))),'_dst_x0_1'(s(fun('type.list.list'('type.string.char'),fun('type.list.list'('type.ast.t'),'type.list.list'('type.ast.id'('type.list.list'('type.string.char'))))),'_dst_x0_1'(s(fun('type.list.list'('type.ast.t'),'type.list.list'('type.ast.id'('type.list.list'('type.string.char')))),'_dst_x0_1'(s('type.list.list'('type.ast.id'('type.list.list'('type.string.char'))),'const.list.NIL_0'))))))))))),s('type.list.list'('type.modLang.dec'),X0)))))))) ) <=> ~$spl10),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl10])])).
fof(f298,plain,(
  ( ! [X0] : (s(fun('type.ast.id'('type.list.list'('type.string.char')),bool),'const.modProps.tids_of_decs_1'(s('type.list.list'('type.modLang.dec'),X0))) = s(fun('type.ast.id'('type.list.list'('type.string.char')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.ast.id'('type.list.list'('type.string.char'))),'const.list.FLAT_1'(s('type.list.list'('type.list.list'('type.ast.id'('type.list.list'('type.string.char')))),happ(s(fun('type.list.list'('type.modLang.dec'),'type.list.list'('type.list.list'('type.ast.id'('type.list.list'('type.string.char'))))),happ(s(fun(fun('type.modLang.dec','type.list.list'('type.ast.id'('type.list.list'('type.string.char')))),fun('type.list.list'('type.modLang.dec'),'type.list.list'('type.list.list'('type.ast.id'('type.list.list'('type.string.char')))))),'const.list.MAP_0'),s(fun('type.modLang.dec','type.list.list'('type.ast.id'('type.list.list'('type.string.char')))),'_dst_x1x0x0x0x0_5'(s(fun('type.modLang.dec',fun(fun('type.num.num',fun('type.modLang.exp','type.list.list'('type.ast.id'('type.list.list'('type.string.char'))))),fun(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.modLang.exp'))),'type.list.list'('type.ast.id'('type.list.list'('type.string.char')))),fun(fun('type.option.option'('type.list.list'('type.string.char')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t')))))),'type.list.list'('type.ast.id'('type.list.list'('type.string.char'))))),fun(fun('type.option.option'('type.list.list'('type.string.char')),fun('type.list.list'('type.string.char'),fun('type.list.list'('type.ast.t'),'type.list.list'('type.ast.id'('type.list.list'('type.string.char')))))),'type.list.list'('type.ast.id'('type.list.list'('type.string.char')))))))),'const.modLang.dec_CASE_0'),s(fun('type.num.num',fun('type.modLang.exp','type.list.list'('type.ast.id'('type.list.list'('type.string.char'))))),'_dst_x0_1'(s(fun('type.modLang.exp','type.list.list'('type.ast.id'('type.list.list'('type.string.char')))),'_dst_x0_1'(s('type.list.list'('type.ast.id'('type.list.list'('type.string.char'))),'const.list.NIL_0'))))),s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.modLang.exp'))),'type.list.list'('type.ast.id'('type.list.list'('type.string.char')))),'_dst_x0_1'(s('type.list.list'('type.ast.id'('type.list.list'('type.string.char'))),'const.list.NIL_0'))),s(fun('type.option.option'('type.list.list'('type.string.char')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t')))))),'type.list.list'('type.ast.id'('type.list.list'('type.string.char'))))),'_dst_x0x1_2'(s(fun(fun('type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t'))))),'type.ast.id'('type.list.list'('type.string.char'))),fun('type.list.list'('type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t')))))),'type.list.list'('type.ast.id'('type.list.list'('type.string.char'))))),'const.list.MAP_0'),s(fun('type.option.option'('type.list.list'('type.string.char')),fun('type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t'))))),'type.ast.id'('type.list.list'('type.string.char')))),'_dst_x0x1x0_3'(s(fun(fun('type.list.list'('type.string.char'),'type.ast.id'('type.list.list'('type.string.char'))),fun(fun('type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t'))))),'type.list.list'('type.string.char')),fun('type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t'))))),'type.ast.id'('type.list.list'('type.string.char'))))),'const.combin.o_0'),s(fun('type.option.option'('type.list.list'('type.string.char')),fun('type.list.list'('type.string.char'),'type.ast.id'('type.list.list'('type.string.char')))),'const.ast.mk_id_0'),s(fun('type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t'))))),'type.list.list'('type.string.char')),happ(s(fun(fun('type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t'))))),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t'))))),fun('type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t'))))),'type.list.list'('type.string.char'))),happ(s(fun(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t')))),'type.list.list'('type.string.char')),fun(fun('type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t'))))),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t'))))),fun('type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t'))))),'type.list.list'('type.string.char')))),'const.combin.o_0'),s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t')))),'type.list.list'('type.string.char')),'const.pair.FST_0'))),s(fun('type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t'))))),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t'))))),'const.pair.SND_0'))))))),s(fun('type.option.option'('type.list.list'('type.string.char')),fun('type.list.list'('type.string.char'),fun('type.list.list'('type.ast.t'),'type.list.list'('type.ast.id'('type.list.list'('type.string.char')))))),'_dst_x0_1'(s(fun('type.list.list'('type.string.char'),fun('type.list.list'('type.ast.t'),'type.list.list'('type.ast.id'('type.list.list'('type.string.char'))))),'_dst_x0_1'(s(fun('type.list.list'('type.ast.t'),'type.list.list'('type.ast.id'('type.list.list'('type.string.char')))),'_dst_x0_1'(s('type.list.list'('type.ast.id'('type.list.list'('type.string.char'))),'const.list.NIL_0'))))))))))),s('type.list.list'('type.modLang.dec'),X0)))))))) )),
  inference(cnf_transformation,[],[f81])).
fof(f81,plain,(
  ! [X0] : s(fun('type.ast.id'('type.list.list'('type.string.char')),bool),'const.modProps.tids_of_decs_1'(s('type.list.list'('type.modLang.dec'),X0))) = s(fun('type.ast.id'('type.list.list'('type.string.char')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.ast.id'('type.list.list'('type.string.char'))),'const.list.FLAT_1'(s('type.list.list'('type.list.list'('type.ast.id'('type.list.list'('type.string.char')))),happ(s(fun('type.list.list'('type.modLang.dec'),'type.list.list'('type.list.list'('type.ast.id'('type.list.list'('type.string.char'))))),happ(s(fun(fun('type.modLang.dec','type.list.list'('type.ast.id'('type.list.list'('type.string.char')))),fun('type.list.list'('type.modLang.dec'),'type.list.list'('type.list.list'('type.ast.id'('type.list.list'('type.string.char')))))),'const.list.MAP_0'),s(fun('type.modLang.dec','type.list.list'('type.ast.id'('type.list.list'('type.string.char')))),'_dst_x1x0x0x0x0_5'(s(fun('type.modLang.dec',fun(fun('type.num.num',fun('type.modLang.exp','type.list.list'('type.ast.id'('type.list.list'('type.string.char'))))),fun(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.modLang.exp'))),'type.list.list'('type.ast.id'('type.list.list'('type.string.char')))),fun(fun('type.option.option'('type.list.list'('type.string.char')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t')))))),'type.list.list'('type.ast.id'('type.list.list'('type.string.char'))))),fun(fun('type.option.option'('type.list.list'('type.string.char')),fun('type.list.list'('type.string.char'),fun('type.list.list'('type.ast.t'),'type.list.list'('type.ast.id'('type.list.list'('type.string.char')))))),'type.list.list'('type.ast.id'('type.list.list'('type.string.char')))))))),'const.modLang.dec_CASE_0'),s(fun('type.num.num',fun('type.modLang.exp','type.list.list'('type.ast.id'('type.list.list'('type.string.char'))))),'_dst_x0_1'(s(fun('type.modLang.exp','type.list.list'('type.ast.id'('type.list.list'('type.string.char')))),'_dst_x0_1'(s('type.list.list'('type.ast.id'('type.list.list'('type.string.char'))),'const.list.NIL_0'))))),s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.modLang.exp'))),'type.list.list'('type.ast.id'('type.list.list'('type.string.char')))),'_dst_x0_1'(s('type.list.list'('type.ast.id'('type.list.list'('type.string.char'))),'const.list.NIL_0'))),s(fun('type.option.option'('type.list.list'('type.string.char')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t')))))),'type.list.list'('type.ast.id'('type.list.list'('type.string.char'))))),'_dst_x0x1_2'(s(fun(fun('type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t'))))),'type.ast.id'('type.list.list'('type.string.char'))),fun('type.list.list'('type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t')))))),'type.list.list'('type.ast.id'('type.list.list'('type.string.char'))))),'const.list.MAP_0'),s(fun('type.option.option'('type.list.list'('type.string.char')),fun('type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t'))))),'type.ast.id'('type.list.list'('type.string.char')))),'_dst_x0x1x0_3'(s(fun(fun('type.list.list'('type.string.char'),'type.ast.id'('type.list.list'('type.string.char'))),fun(fun('type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t'))))),'type.list.list'('type.string.char')),fun('type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t'))))),'type.ast.id'('type.list.list'('type.string.char'))))),'const.combin.o_0'),s(fun('type.option.option'('type.list.list'('type.string.char')),fun('type.list.list'('type.string.char'),'type.ast.id'('type.list.list'('type.string.char')))),'const.ast.mk_id_0'),s(fun('type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t'))))),'type.list.list'('type.string.char')),happ(s(fun(fun('type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t'))))),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t'))))),fun('type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t'))))),'type.list.list'('type.string.char'))),happ(s(fun(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t')))),'type.list.list'('type.string.char')),fun(fun('type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t'))))),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t'))))),fun('type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t'))))),'type.list.list'('type.string.char')))),'const.combin.o_0'),s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t')))),'type.list.list'('type.string.char')),'const.pair.FST_0'))),s(fun('type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t'))))),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t'))))),'const.pair.SND_0'))))))),s(fun('type.option.option'('type.list.list'('type.string.char')),fun('type.list.list'('type.string.char'),fun('type.list.list'('type.ast.t'),'type.list.list'('type.ast.id'('type.list.list'('type.string.char')))))),'_dst_x0_1'(s(fun('type.list.list'('type.string.char'),fun('type.list.list'('type.ast.t'),'type.list.list'('type.ast.id'('type.list.list'('type.string.char'))))),'_dst_x0_1'(s(fun('type.list.list'('type.ast.t'),'type.list.list'('type.ast.id'('type.list.list'('type.string.char')))),'_dst_x0_1'(s('type.list.list'('type.ast.id'('type.list.list'('type.string.char'))),'const.list.NIL_0'))))))))))),s('type.list.list'('type.modLang.dec'),X0)))))))),
  inference(rectify,[],[f46])).
fof(f46,axiom,(
  ! [X33] : s(fun('type.ast.id'('type.list.list'('type.string.char')),bool),'const.modProps.tids_of_decs_1'(s('type.list.list'('type.modLang.dec'),X33))) = s(fun('type.ast.id'('type.list.list'('type.string.char')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.ast.id'('type.list.list'('type.string.char'))),'const.list.FLAT_1'(s('type.list.list'('type.list.list'('type.ast.id'('type.list.list'('type.string.char')))),happ(s(fun('type.list.list'('type.modLang.dec'),'type.list.list'('type.list.list'('type.ast.id'('type.list.list'('type.string.char'))))),happ(s(fun(fun('type.modLang.dec','type.list.list'('type.ast.id'('type.list.list'('type.string.char')))),fun('type.list.list'('type.modLang.dec'),'type.list.list'('type.list.list'('type.ast.id'('type.list.list'('type.string.char')))))),'const.list.MAP_0'),s(fun('type.modLang.dec','type.list.list'('type.ast.id'('type.list.list'('type.string.char')))),'_dst_x1x0x0x0x0_5'(s(fun('type.modLang.dec',fun(fun('type.num.num',fun('type.modLang.exp','type.list.list'('type.ast.id'('type.list.list'('type.string.char'))))),fun(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.modLang.exp'))),'type.list.list'('type.ast.id'('type.list.list'('type.string.char')))),fun(fun('type.option.option'('type.list.list'('type.string.char')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t')))))),'type.list.list'('type.ast.id'('type.list.list'('type.string.char'))))),fun(fun('type.option.option'('type.list.list'('type.string.char')),fun('type.list.list'('type.string.char'),fun('type.list.list'('type.ast.t'),'type.list.list'('type.ast.id'('type.list.list'('type.string.char')))))),'type.list.list'('type.ast.id'('type.list.list'('type.string.char')))))))),'const.modLang.dec_CASE_0'),s(fun('type.num.num',fun('type.modLang.exp','type.list.list'('type.ast.id'('type.list.list'('type.string.char'))))),'_dst_x0_1'(s(fun('type.modLang.exp','type.list.list'('type.ast.id'('type.list.list'('type.string.char')))),'_dst_x0_1'(s('type.list.list'('type.ast.id'('type.list.list'('type.string.char'))),'const.list.NIL_0'))))),s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.modLang.exp'))),'type.list.list'('type.ast.id'('type.list.list'('type.string.char')))),'_dst_x0_1'(s('type.list.list'('type.ast.id'('type.list.list'('type.string.char'))),'const.list.NIL_0'))),s(fun('type.option.option'('type.list.list'('type.string.char')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t')))))),'type.list.list'('type.ast.id'('type.list.list'('type.string.char'))))),'_dst_x0x1_2'(s(fun(fun('type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t'))))),'type.ast.id'('type.list.list'('type.string.char'))),fun('type.list.list'('type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t')))))),'type.list.list'('type.ast.id'('type.list.list'('type.string.char'))))),'const.list.MAP_0'),s(fun('type.option.option'('type.list.list'('type.string.char')),fun('type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t'))))),'type.ast.id'('type.list.list'('type.string.char')))),'_dst_x0x1x0_3'(s(fun(fun('type.list.list'('type.string.char'),'type.ast.id'('type.list.list'('type.string.char'))),fun(fun('type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t'))))),'type.list.list'('type.string.char')),fun('type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t'))))),'type.ast.id'('type.list.list'('type.string.char'))))),'const.combin.o_0'),s(fun('type.option.option'('type.list.list'('type.string.char')),fun('type.list.list'('type.string.char'),'type.ast.id'('type.list.list'('type.string.char')))),'const.ast.mk_id_0'),s(fun('type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t'))))),'type.list.list'('type.string.char')),happ(s(fun(fun('type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t'))))),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t'))))),fun('type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t'))))),'type.list.list'('type.string.char'))),happ(s(fun(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t')))),'type.list.list'('type.string.char')),fun(fun('type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t'))))),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t'))))),fun('type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t'))))),'type.list.list'('type.string.char')))),'const.combin.o_0'),s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t')))),'type.list.list'('type.string.char')),'const.pair.FST_0'))),s(fun('type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t'))))),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t'))))),'const.pair.SND_0'))))))),s(fun('type.option.option'('type.list.list'('type.string.char')),fun('type.list.list'('type.string.char'),fun('type.list.list'('type.ast.t'),'type.list.list'('type.ast.id'('type.list.list'('type.string.char')))))),'_dst_x0_1'(s(fun('type.list.list'('type.string.char'),fun('type.list.list'('type.ast.t'),'type.list.list'('type.ast.id'('type.list.list'('type.string.char'))))),'_dst_x0_1'(s(fun('type.list.list'('type.ast.t'),'type.list.list'('type.ast.id'('type.list.list'('type.string.char')))),'_dst_x0_1'(s('type.list.list'('type.ast.id'('type.list.list'('type.string.char'))),'const.list.NIL_0'))))))))))),s('type.list.list'('type.modLang.dec'),X33)))))))),
  file('thm.modProps.tids_of_decs_thm|split|0','thm.modProps.tids_of_decs_def')).
fof(f589,plain,(
  ( ! [X0] : (s(fun('type.ast.id'('type.list.list'('type.string.char')),bool),'const.modProps.tids_of_decs_1'(s('type.list.list'('type.modLang.dec'),X0))) = s(fun('type.ast.id'('type.list.list'('type.string.char')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.ast.id'('type.list.list'('type.string.char'))),'const.list.FLAT_1'(s('type.list.list'('type.list.list'('type.ast.id'('type.list.list'('type.string.char')))),'const.combin.C_3'(s(fun(fun('type.modLang.dec','type.list.list'('type.ast.id'('type.list.list'('type.string.char')))),fun('type.list.list'('type.modLang.dec'),'type.list.list'('type.list.list'('type.ast.id'('type.list.list'('type.string.char')))))),'const.list.MAP_0'),s('type.list.list'('type.modLang.dec'),X0),s(fun('type.modLang.dec','type.list.list'('type.ast.id'('type.list.list'('type.string.char')))),'_dst_x1x0x0x0x0_5'(s(fun('type.modLang.dec',fun(fun('type.num.num',fun('type.modLang.exp','type.list.list'('type.ast.id'('type.list.list'('type.string.char'))))),fun(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.modLang.exp'))),'type.list.list'('type.ast.id'('type.list.list'('type.string.char')))),fun(fun('type.option.option'('type.list.list'('type.string.char')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t')))))),'type.list.list'('type.ast.id'('type.list.list'('type.string.char'))))),fun(fun('type.option.option'('type.list.list'('type.string.char')),fun('type.list.list'('type.string.char'),fun('type.list.list'('type.ast.t'),'type.list.list'('type.ast.id'('type.list.list'('type.string.char')))))),'type.list.list'('type.ast.id'('type.list.list'('type.string.char')))))))),'const.modLang.dec_CASE_0'),s(fun('type.num.num',fun('type.modLang.exp','type.list.list'('type.ast.id'('type.list.list'('type.string.char'))))),'_dst_x0_1'(s(fun('type.modLang.exp','type.list.list'('type.ast.id'('type.list.list'('type.string.char')))),'_dst_x0_1'(s('type.list.list'('type.ast.id'('type.list.list'('type.string.char'))),'const.list.NIL_0'))))),s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.modLang.exp'))),'type.list.list'('type.ast.id'('type.list.list'('type.string.char')))),'_dst_x0_1'(s('type.list.list'('type.ast.id'('type.list.list'('type.string.char'))),'const.list.NIL_0'))),s(fun('type.option.option'('type.list.list'('type.string.char')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t')))))),'type.list.list'('type.ast.id'('type.list.list'('type.string.char'))))),'_dst_x0x1_2'(s(fun(fun('type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t'))))),'type.ast.id'('type.list.list'('type.string.char'))),fun('type.list.list'('type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t')))))),'type.list.list'('type.ast.id'('type.list.list'('type.string.char'))))),'const.list.MAP_0'),s(fun('type.option.option'('type.list.list'('type.string.char')),fun('type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t'))))),'type.ast.id'('type.list.list'('type.string.char')))),'_dst_x0x1x0_3'(s(fun(fun('type.list.list'('type.string.char'),'type.ast.id'('type.list.list'('type.string.char'))),fun(fun('type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t'))))),'type.list.list'('type.string.char')),fun('type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t'))))),'type.ast.id'('type.list.list'('type.string.char'))))),'const.combin.o_0'),s(fun('type.option.option'('type.list.list'('type.string.char')),fun('type.list.list'('type.string.char'),'type.ast.id'('type.list.list'('type.string.char')))),'const.ast.mk_id_0'),s(fun('type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t'))))),'type.list.list'('type.string.char')),'const.combin.C_3'(s(fun(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t')))),'type.list.list'('type.string.char')),fun(fun('type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t'))))),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t'))))),fun('type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t'))))),'type.list.list'('type.string.char')))),'const.combin.o_0'),s(fun('type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t'))))),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t'))))),'const.pair.SND_0'),s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t')))),'type.list.list'('type.string.char')),'const.pair.FST_0'))))))),s(fun('type.option.option'('type.list.list'('type.string.char')),fun('type.list.list'('type.string.char'),fun('type.list.list'('type.ast.t'),'type.list.list'('type.ast.id'('type.list.list'('type.string.char')))))),'_dst_x0_1'(s(fun('type.list.list'('type.string.char'),fun('type.list.list'('type.ast.t'),'type.list.list'('type.ast.id'('type.list.list'('type.string.char'))))),'_dst_x0_1'(s(fun('type.list.list'('type.ast.t'),'type.list.list'('type.ast.id'('type.list.list'('type.string.char')))),'_dst_x0_1'(s('type.list.list'('type.ast.id'('type.list.list'('type.string.char'))),'const.list.NIL_0')))))))))))))))) ) | $spl194),
  inference(cnf_transformation,[],[f589_D])).
fof(f589_D,plain,(
  ( ! [X0] : (s(fun('type.ast.id'('type.list.list'('type.string.char')),bool),'const.modProps.tids_of_decs_1'(s('type.list.list'('type.modLang.dec'),X0))) = s(fun('type.ast.id'('type.list.list'('type.string.char')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.ast.id'('type.list.list'('type.string.char'))),'const.list.FLAT_1'(s('type.list.list'('type.list.list'('type.ast.id'('type.list.list'('type.string.char')))),'const.combin.C_3'(s(fun(fun('type.modLang.dec','type.list.list'('type.ast.id'('type.list.list'('type.string.char')))),fun('type.list.list'('type.modLang.dec'),'type.list.list'('type.list.list'('type.ast.id'('type.list.list'('type.string.char')))))),'const.list.MAP_0'),s('type.list.list'('type.modLang.dec'),X0),s(fun('type.modLang.dec','type.list.list'('type.ast.id'('type.list.list'('type.string.char')))),'_dst_x1x0x0x0x0_5'(s(fun('type.modLang.dec',fun(fun('type.num.num',fun('type.modLang.exp','type.list.list'('type.ast.id'('type.list.list'('type.string.char'))))),fun(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.modLang.exp'))),'type.list.list'('type.ast.id'('type.list.list'('type.string.char')))),fun(fun('type.option.option'('type.list.list'('type.string.char')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t')))))),'type.list.list'('type.ast.id'('type.list.list'('type.string.char'))))),fun(fun('type.option.option'('type.list.list'('type.string.char')),fun('type.list.list'('type.string.char'),fun('type.list.list'('type.ast.t'),'type.list.list'('type.ast.id'('type.list.list'('type.string.char')))))),'type.list.list'('type.ast.id'('type.list.list'('type.string.char')))))))),'const.modLang.dec_CASE_0'),s(fun('type.num.num',fun('type.modLang.exp','type.list.list'('type.ast.id'('type.list.list'('type.string.char'))))),'_dst_x0_1'(s(fun('type.modLang.exp','type.list.list'('type.ast.id'('type.list.list'('type.string.char')))),'_dst_x0_1'(s('type.list.list'('type.ast.id'('type.list.list'('type.string.char'))),'const.list.NIL_0'))))),s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.modLang.exp'))),'type.list.list'('type.ast.id'('type.list.list'('type.string.char')))),'_dst_x0_1'(s('type.list.list'('type.ast.id'('type.list.list'('type.string.char'))),'const.list.NIL_0'))),s(fun('type.option.option'('type.list.list'('type.string.char')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t')))))),'type.list.list'('type.ast.id'('type.list.list'('type.string.char'))))),'_dst_x0x1_2'(s(fun(fun('type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t'))))),'type.ast.id'('type.list.list'('type.string.char'))),fun('type.list.list'('type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t')))))),'type.list.list'('type.ast.id'('type.list.list'('type.string.char'))))),'const.list.MAP_0'),s(fun('type.option.option'('type.list.list'('type.string.char')),fun('type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t'))))),'type.ast.id'('type.list.list'('type.string.char')))),'_dst_x0x1x0_3'(s(fun(fun('type.list.list'('type.string.char'),'type.ast.id'('type.list.list'('type.string.char'))),fun(fun('type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t'))))),'type.list.list'('type.string.char')),fun('type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t'))))),'type.ast.id'('type.list.list'('type.string.char'))))),'const.combin.o_0'),s(fun('type.option.option'('type.list.list'('type.string.char')),fun('type.list.list'('type.string.char'),'type.ast.id'('type.list.list'('type.string.char')))),'const.ast.mk_id_0'),s(fun('type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t'))))),'type.list.list'('type.string.char')),'const.combin.C_3'(s(fun(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t')))),'type.list.list'('type.string.char')),fun(fun('type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t'))))),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t'))))),fun('type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t'))))),'type.list.list'('type.string.char')))),'const.combin.o_0'),s(fun('type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t'))))),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t'))))),'const.pair.SND_0'),s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t')))),'type.list.list'('type.string.char')),'const.pair.FST_0'))))))),s(fun('type.option.option'('type.list.list'('type.string.char')),fun('type.list.list'('type.string.char'),fun('type.list.list'('type.ast.t'),'type.list.list'('type.ast.id'('type.list.list'('type.string.char')))))),'_dst_x0_1'(s(fun('type.list.list'('type.string.char'),fun('type.list.list'('type.ast.t'),'type.list.list'('type.ast.id'('type.list.list'('type.string.char'))))),'_dst_x0_1'(s(fun('type.list.list'('type.ast.t'),'type.list.list'('type.ast.id'('type.list.list'('type.string.char')))),'_dst_x0_1'(s('type.list.list'('type.ast.id'('type.list.list'('type.string.char'))),'const.list.NIL_0')))))))))))))))) ) <=> ~$spl194),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl194])])).
fof(f588,plain,(
  ( ! [X0] : (s(fun('type.ast.id'('type.list.list'('type.string.char')),bool),'const.modProps.tids_of_decs_1'(s('type.list.list'('type.modLang.dec'),X0))) = s(fun('type.ast.id'('type.list.list'('type.string.char')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.ast.id'('type.list.list'('type.string.char'))),'const.list.FLAT_1'(s('type.list.list'('type.list.list'('type.ast.id'('type.list.list'('type.string.char')))),'const.combin.C_3'(s(fun(fun('type.modLang.dec','type.list.list'('type.ast.id'('type.list.list'('type.string.char')))),fun('type.list.list'('type.modLang.dec'),'type.list.list'('type.list.list'('type.ast.id'('type.list.list'('type.string.char')))))),'const.list.MAP_0'),s('type.list.list'('type.modLang.dec'),X0),s(fun('type.modLang.dec','type.list.list'('type.ast.id'('type.list.list'('type.string.char')))),'_dst_x1x0x0x0x0_5'(s(fun('type.modLang.dec',fun(fun('type.num.num',fun('type.modLang.exp','type.list.list'('type.ast.id'('type.list.list'('type.string.char'))))),fun(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.modLang.exp'))),'type.list.list'('type.ast.id'('type.list.list'('type.string.char')))),fun(fun('type.option.option'('type.list.list'('type.string.char')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t')))))),'type.list.list'('type.ast.id'('type.list.list'('type.string.char'))))),fun(fun('type.option.option'('type.list.list'('type.string.char')),fun('type.list.list'('type.string.char'),fun('type.list.list'('type.ast.t'),'type.list.list'('type.ast.id'('type.list.list'('type.string.char')))))),'type.list.list'('type.ast.id'('type.list.list'('type.string.char')))))))),'const.modLang.dec_CASE_0'),s(fun('type.num.num',fun('type.modLang.exp','type.list.list'('type.ast.id'('type.list.list'('type.string.char'))))),'_dst_x0_1'(s(fun('type.modLang.exp','type.list.list'('type.ast.id'('type.list.list'('type.string.char')))),'_dst_x0_1'(s('type.list.list'('type.ast.id'('type.list.list'('type.string.char'))),'const.list.NIL_0'))))),s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.modLang.exp'))),'type.list.list'('type.ast.id'('type.list.list'('type.string.char')))),'_dst_x0_1'(s('type.list.list'('type.ast.id'('type.list.list'('type.string.char'))),'const.list.NIL_0'))),s(fun('type.option.option'('type.list.list'('type.string.char')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t')))))),'type.list.list'('type.ast.id'('type.list.list'('type.string.char'))))),'_dst_x0x1_2'(s(fun(fun('type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t'))))),'type.ast.id'('type.list.list'('type.string.char'))),fun('type.list.list'('type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t')))))),'type.list.list'('type.ast.id'('type.list.list'('type.string.char'))))),'const.list.MAP_0'),s(fun('type.option.option'('type.list.list'('type.string.char')),fun('type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t'))))),'type.ast.id'('type.list.list'('type.string.char')))),'_dst_x0x1x0_3'(s(fun(fun('type.list.list'('type.string.char'),'type.ast.id'('type.list.list'('type.string.char'))),fun(fun('type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t'))))),'type.list.list'('type.string.char')),fun('type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t'))))),'type.ast.id'('type.list.list'('type.string.char'))))),'const.combin.o_0'),s(fun('type.option.option'('type.list.list'('type.string.char')),fun('type.list.list'('type.string.char'),'type.ast.id'('type.list.list'('type.string.char')))),'const.ast.mk_id_0'),s(fun('type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t'))))),'type.list.list'('type.string.char')),'const.combin.C_3'(s(fun(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t')))),'type.list.list'('type.string.char')),fun(fun('type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t'))))),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t'))))),fun('type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t'))))),'type.list.list'('type.string.char')))),'const.combin.o_0'),s(fun('type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t'))))),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t'))))),'const.pair.SND_0'),s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t')))),'type.list.list'('type.string.char')),'const.pair.FST_0'))))))),s(fun('type.option.option'('type.list.list'('type.string.char')),fun('type.list.list'('type.string.char'),fun('type.list.list'('type.ast.t'),'type.list.list'('type.ast.id'('type.list.list'('type.string.char')))))),'_dst_x0_1'(s(fun('type.list.list'('type.string.char'),fun('type.list.list'('type.ast.t'),'type.list.list'('type.ast.id'('type.list.list'('type.string.char'))))),'_dst_x0_1'(s(fun('type.list.list'('type.ast.t'),'type.list.list'('type.ast.id'('type.list.list'('type.string.char')))),'_dst_x0_1'(s('type.list.list'('type.ast.id'('type.list.list'('type.string.char'))),'const.list.NIL_0')))))))))))))))) ) | ($spl10 | $spl160)),
  inference(forward_demodulation,[],[f587,f556])).
fof(f587,plain,(
  ( ! [X0] : (s(fun('type.ast.id'('type.list.list'('type.string.char')),bool),'const.modProps.tids_of_decs_1'(s('type.list.list'('type.modLang.dec'),X0))) = s(fun('type.ast.id'('type.list.list'('type.string.char')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.ast.id'('type.list.list'('type.string.char'))),'const.list.FLAT_1'(s('type.list.list'('type.list.list'('type.ast.id'('type.list.list'('type.string.char')))),'const.combin.C_3'(s(fun(fun('type.modLang.dec','type.list.list'('type.ast.id'('type.list.list'('type.string.char')))),fun('type.list.list'('type.modLang.dec'),'type.list.list'('type.list.list'('type.ast.id'('type.list.list'('type.string.char')))))),'const.list.MAP_0'),s('type.list.list'('type.modLang.dec'),X0),s(fun('type.modLang.dec','type.list.list'('type.ast.id'('type.list.list'('type.string.char')))),'_dst_x1x0x0x0x0_5'(s(fun('type.modLang.dec',fun(fun('type.num.num',fun('type.modLang.exp','type.list.list'('type.ast.id'('type.list.list'('type.string.char'))))),fun(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.modLang.exp'))),'type.list.list'('type.ast.id'('type.list.list'('type.string.char')))),fun(fun('type.option.option'('type.list.list'('type.string.char')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t')))))),'type.list.list'('type.ast.id'('type.list.list'('type.string.char'))))),fun(fun('type.option.option'('type.list.list'('type.string.char')),fun('type.list.list'('type.string.char'),fun('type.list.list'('type.ast.t'),'type.list.list'('type.ast.id'('type.list.list'('type.string.char')))))),'type.list.list'('type.ast.id'('type.list.list'('type.string.char')))))))),'const.modLang.dec_CASE_0'),s(fun('type.num.num',fun('type.modLang.exp','type.list.list'('type.ast.id'('type.list.list'('type.string.char'))))),'_dst_x0_1'(s(fun('type.modLang.exp','type.list.list'('type.ast.id'('type.list.list'('type.string.char')))),'_dst_x0_1'(s('type.list.list'('type.ast.id'('type.list.list'('type.string.char'))),'const.list.NIL_0'))))),s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.modLang.exp'))),'type.list.list'('type.ast.id'('type.list.list'('type.string.char')))),'_dst_x0_1'(s('type.list.list'('type.ast.id'('type.list.list'('type.string.char'))),'const.list.NIL_0'))),s(fun('type.option.option'('type.list.list'('type.string.char')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t')))))),'type.list.list'('type.ast.id'('type.list.list'('type.string.char'))))),'_dst_x0x1_2'(s(fun(fun('type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t'))))),'type.ast.id'('type.list.list'('type.string.char'))),fun('type.list.list'('type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t')))))),'type.list.list'('type.ast.id'('type.list.list'('type.string.char'))))),'const.list.MAP_0'),s(fun('type.option.option'('type.list.list'('type.string.char')),fun('type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t'))))),'type.ast.id'('type.list.list'('type.string.char')))),'_dst_x0x1x0_3'(s(fun(fun('type.list.list'('type.string.char'),'type.ast.id'('type.list.list'('type.string.char'))),fun(fun('type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t'))))),'type.list.list'('type.string.char')),fun('type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t'))))),'type.ast.id'('type.list.list'('type.string.char'))))),'const.combin.o_0'),s(fun('type.option.option'('type.list.list'('type.string.char')),fun('type.list.list'('type.string.char'),'type.ast.id'('type.list.list'('type.string.char')))),'const.ast.mk_id_0'),s(fun('type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t'))))),'type.list.list'('type.string.char')),happ(s(fun(fun('type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t'))))),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t'))))),fun('type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t'))))),'type.list.list'('type.string.char'))),happ(s(fun(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t')))),'type.list.list'('type.string.char')),fun(fun('type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t'))))),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t'))))),fun('type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t'))))),'type.list.list'('type.string.char')))),'const.combin.o_0'),s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t')))),'type.list.list'('type.string.char')),'const.pair.FST_0'))),s(fun('type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t'))))),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t'))))),'const.pair.SND_0'))))))),s(fun('type.option.option'('type.list.list'('type.string.char')),fun('type.list.list'('type.string.char'),fun('type.list.list'('type.ast.t'),'type.list.list'('type.ast.id'('type.list.list'('type.string.char')))))),'_dst_x0_1'(s(fun('type.list.list'('type.string.char'),fun('type.list.list'('type.ast.t'),'type.list.list'('type.ast.id'('type.list.list'('type.string.char'))))),'_dst_x0_1'(s(fun('type.list.list'('type.ast.t'),'type.list.list'('type.ast.id'('type.list.list'('type.string.char')))),'_dst_x0_1'(s('type.list.list'('type.ast.id'('type.list.list'('type.string.char'))),'const.list.NIL_0')))))))))))))))) ) | ($spl10 | $spl160)),
  inference(forward_demodulation,[],[f468,f556])).
fof(f3475,plain,(
  ( ! [X0] : (s(fun('type.ast.id'('type.list.list'('type.string.char')),bool),'const.modProps.tids_of_decs_1'(s('type.list.list'('type.modLang.dec'),X0))) = s(fun('type.ast.id'('type.list.list'('type.string.char')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.ast.id'('type.list.list'('type.string.char'))),'const.list.FLAT_1'(s('type.list.list'('type.list.list'('type.ast.id'('type.list.list'('type.string.char')))),'const.list.MAP_2'(s(fun('type.modLang.dec','type.list.list'('type.ast.id'('type.list.list'('type.string.char')))),'_dst_x1x0x0x0x0_5'(s(fun('type.modLang.dec',fun(fun('type.num.num',fun('type.modLang.exp','type.list.list'('type.ast.id'('type.list.list'('type.string.char'))))),fun(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.modLang.exp'))),'type.list.list'('type.ast.id'('type.list.list'('type.string.char')))),fun(fun('type.option.option'('type.list.list'('type.string.char')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t')))))),'type.list.list'('type.ast.id'('type.list.list'('type.string.char'))))),fun(fun('type.option.option'('type.list.list'('type.string.char')),fun('type.list.list'('type.string.char'),fun('type.list.list'('type.ast.t'),'type.list.list'('type.ast.id'('type.list.list'('type.string.char')))))),'type.list.list'('type.ast.id'('type.list.list'('type.string.char')))))))),'const.modLang.dec_CASE_0'),s(fun('type.num.num',fun('type.modLang.exp','type.list.list'('type.ast.id'('type.list.list'('type.string.char'))))),'_dst_x0_1'(s(fun('type.modLang.exp','type.list.list'('type.ast.id'('type.list.list'('type.string.char')))),'_dst_x0_1'(s('type.list.list'('type.ast.id'('type.list.list'('type.string.char'))),'const.list.NIL_0'))))),s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.modLang.exp'))),'type.list.list'('type.ast.id'('type.list.list'('type.string.char')))),'_dst_x0_1'(s('type.list.list'('type.ast.id'('type.list.list'('type.string.char'))),'const.list.NIL_0'))),s(fun('type.option.option'('type.list.list'('type.string.char')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t')))))),'type.list.list'('type.ast.id'('type.list.list'('type.string.char'))))),'_dst_x0x1_2'(s(fun(fun('type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t'))))),'type.ast.id'('type.list.list'('type.string.char'))),fun('type.list.list'('type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t')))))),'type.list.list'('type.ast.id'('type.list.list'('type.string.char'))))),'const.list.MAP_0'),s(fun('type.option.option'('type.list.list'('type.string.char')),fun('type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t'))))),'type.ast.id'('type.list.list'('type.string.char')))),'_dst_x0x1x0_3'(s(fun(fun('type.list.list'('type.string.char'),'type.ast.id'('type.list.list'('type.string.char'))),fun(fun('type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t'))))),'type.list.list'('type.string.char')),fun('type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t'))))),'type.ast.id'('type.list.list'('type.string.char'))))),'const.combin.o_0'),s(fun('type.option.option'('type.list.list'('type.string.char')),fun('type.list.list'('type.string.char'),'type.ast.id'('type.list.list'('type.string.char')))),'const.ast.mk_id_0'),s(fun('type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t'))))),'type.list.list'('type.string.char')),'const.combin.C_3'(s(fun(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t')))),'type.list.list'('type.string.char')),fun(fun('type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t'))))),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t'))))),fun('type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t'))))),'type.list.list'('type.string.char')))),'const.combin.o_0'),s(fun('type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t'))))),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t'))))),'const.pair.SND_0'),s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t')))),'type.list.list'('type.string.char')),'const.pair.FST_0'))))))),s(fun('type.option.option'('type.list.list'('type.string.char')),fun('type.list.list'('type.string.char'),fun('type.list.list'('type.ast.t'),'type.list.list'('type.ast.id'('type.list.list'('type.string.char')))))),'_dst_x0_1'(s(fun('type.list.list'('type.string.char'),fun('type.list.list'('type.ast.t'),'type.list.list'('type.ast.id'('type.list.list'('type.string.char'))))),'_dst_x0_1'(s(fun('type.list.list'('type.ast.t'),'type.list.list'('type.ast.id'('type.list.list'('type.string.char')))),'_dst_x0_1'(s('type.list.list'('type.ast.id'('type.list.list'('type.string.char'))),'const.list.NIL_0'))))))))),s('type.list.list'('type.modLang.dec'),X0)))))))) ) | $spl794),
  inference(cnf_transformation,[],[f3475_D])).
fof(f3475_D,plain,(
  ( ! [X0] : (s(fun('type.ast.id'('type.list.list'('type.string.char')),bool),'const.modProps.tids_of_decs_1'(s('type.list.list'('type.modLang.dec'),X0))) = s(fun('type.ast.id'('type.list.list'('type.string.char')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.ast.id'('type.list.list'('type.string.char'))),'const.list.FLAT_1'(s('type.list.list'('type.list.list'('type.ast.id'('type.list.list'('type.string.char')))),'const.list.MAP_2'(s(fun('type.modLang.dec','type.list.list'('type.ast.id'('type.list.list'('type.string.char')))),'_dst_x1x0x0x0x0_5'(s(fun('type.modLang.dec',fun(fun('type.num.num',fun('type.modLang.exp','type.list.list'('type.ast.id'('type.list.list'('type.string.char'))))),fun(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.modLang.exp'))),'type.list.list'('type.ast.id'('type.list.list'('type.string.char')))),fun(fun('type.option.option'('type.list.list'('type.string.char')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t')))))),'type.list.list'('type.ast.id'('type.list.list'('type.string.char'))))),fun(fun('type.option.option'('type.list.list'('type.string.char')),fun('type.list.list'('type.string.char'),fun('type.list.list'('type.ast.t'),'type.list.list'('type.ast.id'('type.list.list'('type.string.char')))))),'type.list.list'('type.ast.id'('type.list.list'('type.string.char')))))))),'const.modLang.dec_CASE_0'),s(fun('type.num.num',fun('type.modLang.exp','type.list.list'('type.ast.id'('type.list.list'('type.string.char'))))),'_dst_x0_1'(s(fun('type.modLang.exp','type.list.list'('type.ast.id'('type.list.list'('type.string.char')))),'_dst_x0_1'(s('type.list.list'('type.ast.id'('type.list.list'('type.string.char'))),'const.list.NIL_0'))))),s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.modLang.exp'))),'type.list.list'('type.ast.id'('type.list.list'('type.string.char')))),'_dst_x0_1'(s('type.list.list'('type.ast.id'('type.list.list'('type.string.char'))),'const.list.NIL_0'))),s(fun('type.option.option'('type.list.list'('type.string.char')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t')))))),'type.list.list'('type.ast.id'('type.list.list'('type.string.char'))))),'_dst_x0x1_2'(s(fun(fun('type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t'))))),'type.ast.id'('type.list.list'('type.string.char'))),fun('type.list.list'('type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t')))))),'type.list.list'('type.ast.id'('type.list.list'('type.string.char'))))),'const.list.MAP_0'),s(fun('type.option.option'('type.list.list'('type.string.char')),fun('type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t'))))),'type.ast.id'('type.list.list'('type.string.char')))),'_dst_x0x1x0_3'(s(fun(fun('type.list.list'('type.string.char'),'type.ast.id'('type.list.list'('type.string.char'))),fun(fun('type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t'))))),'type.list.list'('type.string.char')),fun('type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t'))))),'type.ast.id'('type.list.list'('type.string.char'))))),'const.combin.o_0'),s(fun('type.option.option'('type.list.list'('type.string.char')),fun('type.list.list'('type.string.char'),'type.ast.id'('type.list.list'('type.string.char')))),'const.ast.mk_id_0'),s(fun('type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t'))))),'type.list.list'('type.string.char')),'const.combin.C_3'(s(fun(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t')))),'type.list.list'('type.string.char')),fun(fun('type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t'))))),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t'))))),fun('type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t'))))),'type.list.list'('type.string.char')))),'const.combin.o_0'),s(fun('type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t'))))),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t'))))),'const.pair.SND_0'),s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t')))),'type.list.list'('type.string.char')),'const.pair.FST_0'))))))),s(fun('type.option.option'('type.list.list'('type.string.char')),fun('type.list.list'('type.string.char'),fun('type.list.list'('type.ast.t'),'type.list.list'('type.ast.id'('type.list.list'('type.string.char')))))),'_dst_x0_1'(s(fun('type.list.list'('type.string.char'),fun('type.list.list'('type.ast.t'),'type.list.list'('type.ast.id'('type.list.list'('type.string.char'))))),'_dst_x0_1'(s(fun('type.list.list'('type.ast.t'),'type.list.list'('type.ast.id'('type.list.list'('type.string.char')))),'_dst_x0_1'(s('type.list.list'('type.ast.id'('type.list.list'('type.string.char'))),'const.list.NIL_0'))))))))),s('type.list.list'('type.modLang.dec'),X0)))))))) ) <=> ~$spl794),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl794])])).
fof(f3474,plain,(
  ( ! [X0] : (s(fun('type.ast.id'('type.list.list'('type.string.char')),bool),'const.modProps.tids_of_decs_1'(s('type.list.list'('type.modLang.dec'),X0))) = s(fun('type.ast.id'('type.list.list'('type.string.char')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.ast.id'('type.list.list'('type.string.char'))),'const.list.FLAT_1'(s('type.list.list'('type.list.list'('type.ast.id'('type.list.list'('type.string.char')))),'const.list.MAP_2'(s(fun('type.modLang.dec','type.list.list'('type.ast.id'('type.list.list'('type.string.char')))),'_dst_x1x0x0x0x0_5'(s(fun('type.modLang.dec',fun(fun('type.num.num',fun('type.modLang.exp','type.list.list'('type.ast.id'('type.list.list'('type.string.char'))))),fun(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.modLang.exp'))),'type.list.list'('type.ast.id'('type.list.list'('type.string.char')))),fun(fun('type.option.option'('type.list.list'('type.string.char')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t')))))),'type.list.list'('type.ast.id'('type.list.list'('type.string.char'))))),fun(fun('type.option.option'('type.list.list'('type.string.char')),fun('type.list.list'('type.string.char'),fun('type.list.list'('type.ast.t'),'type.list.list'('type.ast.id'('type.list.list'('type.string.char')))))),'type.list.list'('type.ast.id'('type.list.list'('type.string.char')))))))),'const.modLang.dec_CASE_0'),s(fun('type.num.num',fun('type.modLang.exp','type.list.list'('type.ast.id'('type.list.list'('type.string.char'))))),'_dst_x0_1'(s(fun('type.modLang.exp','type.list.list'('type.ast.id'('type.list.list'('type.string.char')))),'_dst_x0_1'(s('type.list.list'('type.ast.id'('type.list.list'('type.string.char'))),'const.list.NIL_0'))))),s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.modLang.exp'))),'type.list.list'('type.ast.id'('type.list.list'('type.string.char')))),'_dst_x0_1'(s('type.list.list'('type.ast.id'('type.list.list'('type.string.char'))),'const.list.NIL_0'))),s(fun('type.option.option'('type.list.list'('type.string.char')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t')))))),'type.list.list'('type.ast.id'('type.list.list'('type.string.char'))))),'_dst_x0x1_2'(s(fun(fun('type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t'))))),'type.ast.id'('type.list.list'('type.string.char'))),fun('type.list.list'('type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t')))))),'type.list.list'('type.ast.id'('type.list.list'('type.string.char'))))),'const.list.MAP_0'),s(fun('type.option.option'('type.list.list'('type.string.char')),fun('type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t'))))),'type.ast.id'('type.list.list'('type.string.char')))),'_dst_x0x1x0_3'(s(fun(fun('type.list.list'('type.string.char'),'type.ast.id'('type.list.list'('type.string.char'))),fun(fun('type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t'))))),'type.list.list'('type.string.char')),fun('type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t'))))),'type.ast.id'('type.list.list'('type.string.char'))))),'const.combin.o_0'),s(fun('type.option.option'('type.list.list'('type.string.char')),fun('type.list.list'('type.string.char'),'type.ast.id'('type.list.list'('type.string.char')))),'const.ast.mk_id_0'),s(fun('type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t'))))),'type.list.list'('type.string.char')),'const.combin.C_3'(s(fun(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t')))),'type.list.list'('type.string.char')),fun(fun('type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t'))))),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t'))))),fun('type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t'))))),'type.list.list'('type.string.char')))),'const.combin.o_0'),s(fun('type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t'))))),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t'))))),'const.pair.SND_0'),s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t')))),'type.list.list'('type.string.char')),'const.pair.FST_0'))))))),s(fun('type.option.option'('type.list.list'('type.string.char')),fun('type.list.list'('type.string.char'),fun('type.list.list'('type.ast.t'),'type.list.list'('type.ast.id'('type.list.list'('type.string.char')))))),'_dst_x0_1'(s(fun('type.list.list'('type.string.char'),fun('type.list.list'('type.ast.t'),'type.list.list'('type.ast.id'('type.list.list'('type.string.char'))))),'_dst_x0_1'(s(fun('type.list.list'('type.ast.t'),'type.list.list'('type.ast.id'('type.list.list'('type.string.char')))),'_dst_x0_1'(s('type.list.list'('type.ast.id'('type.list.list'('type.string.char'))),'const.list.NIL_0'))))))))),s('type.list.list'('type.modLang.dec'),X0)))))))) ) | ($spl194 | $spl790)),
  inference(backward_demodulation,[],[f3472,f589])).
fof(f3739,plain,(
  ( ! [X0] : (s(fun('type.ast.id'('type.list.list'('type.string.char')),bool),'const.modProps.tids_of_decs_1'(s('type.list.list'('type.modLang.dec'),X0))) = s(fun('type.ast.id'('type.list.list'('type.string.char')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.ast.id'('type.list.list'('type.string.char'))),'const.list.FLAT_1'(s('type.list.list'('type.list.list'('type.ast.id'('type.list.list'('type.string.char')))),'const.list.MAP_2'(s(fun('type.modLang.dec','type.list.list'('type.ast.id'('type.list.list'('type.string.char')))),'_dst_x1x0x0x0x0_5'(s(fun('type.modLang.dec',fun(fun('type.num.num',fun('type.modLang.exp','type.list.list'('type.ast.id'('type.list.list'('type.string.char'))))),fun(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.modLang.exp'))),'type.list.list'('type.ast.id'('type.list.list'('type.string.char')))),fun(fun('type.option.option'('type.list.list'('type.string.char')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t')))))),'type.list.list'('type.ast.id'('type.list.list'('type.string.char'))))),fun(fun('type.option.option'('type.list.list'('type.string.char')),fun('type.list.list'('type.string.char'),fun('type.list.list'('type.ast.t'),'type.list.list'('type.ast.id'('type.list.list'('type.string.char')))))),'type.list.list'('type.ast.id'('type.list.list'('type.string.char')))))))),'const.modLang.dec_CASE_0'),s(fun('type.num.num',fun('type.modLang.exp','type.list.list'('type.ast.id'('type.list.list'('type.string.char'))))),'_dst_x0_1'(s(fun('type.modLang.exp','type.list.list'('type.ast.id'('type.list.list'('type.string.char')))),'_dst_x0_1'(s('type.list.list'('type.ast.id'('type.list.list'('type.string.char'))),'const.list.NIL_0'))))),s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.modLang.exp'))),'type.list.list'('type.ast.id'('type.list.list'('type.string.char')))),'_dst_x0_1'(s('type.list.list'('type.ast.id'('type.list.list'('type.string.char'))),'const.list.NIL_0'))),s(fun('type.option.option'('type.list.list'('type.string.char')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t')))))),'type.list.list'('type.ast.id'('type.list.list'('type.string.char'))))),'_dst_x0x1_2'(s(fun(fun('type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t'))))),'type.ast.id'('type.list.list'('type.string.char'))),fun('type.list.list'('type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t')))))),'type.list.list'('type.ast.id'('type.list.list'('type.string.char'))))),'const.list.MAP_0'),s(fun('type.option.option'('type.list.list'('type.string.char')),fun('type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t'))))),'type.ast.id'('type.list.list'('type.string.char')))),'_dst_x0x1x0_3'(s(fun(fun('type.list.list'('type.string.char'),'type.ast.id'('type.list.list'('type.string.char'))),fun(fun('type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t'))))),'type.list.list'('type.string.char')),fun('type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t'))))),'type.ast.id'('type.list.list'('type.string.char'))))),'const.combin.o_0'),s(fun('type.option.option'('type.list.list'('type.string.char')),fun('type.list.list'('type.string.char'),'type.ast.id'('type.list.list'('type.string.char')))),'const.ast.mk_id_0'),s(fun('type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t'))))),'type.list.list'('type.string.char')),'const.combin.o_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t')))),'type.list.list'('type.string.char')),'const.pair.FST_0'),s(fun('type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t'))))),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t'))))),'const.pair.SND_0'))))))),s(fun('type.option.option'('type.list.list'('type.string.char')),fun('type.list.list'('type.string.char'),fun('type.list.list'('type.ast.t'),'type.list.list'('type.ast.id'('type.list.list'('type.string.char')))))),'_dst_x0_1'(s(fun('type.list.list'('type.string.char'),fun('type.list.list'('type.ast.t'),'type.list.list'('type.ast.id'('type.list.list'('type.string.char'))))),'_dst_x0_1'(s(fun('type.list.list'('type.ast.t'),'type.list.list'('type.ast.id'('type.list.list'('type.string.char')))),'_dst_x0_1'(s('type.list.list'('type.ast.id'('type.list.list'('type.string.char'))),'const.list.NIL_0'))))))))),s('type.list.list'('type.modLang.dec'),X0)))))))) ) | $spl840),
  inference(cnf_transformation,[],[f3739_D])).
fof(f3739_D,plain,(
  ( ! [X0] : (s(fun('type.ast.id'('type.list.list'('type.string.char')),bool),'const.modProps.tids_of_decs_1'(s('type.list.list'('type.modLang.dec'),X0))) = s(fun('type.ast.id'('type.list.list'('type.string.char')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.ast.id'('type.list.list'('type.string.char'))),'const.list.FLAT_1'(s('type.list.list'('type.list.list'('type.ast.id'('type.list.list'('type.string.char')))),'const.list.MAP_2'(s(fun('type.modLang.dec','type.list.list'('type.ast.id'('type.list.list'('type.string.char')))),'_dst_x1x0x0x0x0_5'(s(fun('type.modLang.dec',fun(fun('type.num.num',fun('type.modLang.exp','type.list.list'('type.ast.id'('type.list.list'('type.string.char'))))),fun(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.modLang.exp'))),'type.list.list'('type.ast.id'('type.list.list'('type.string.char')))),fun(fun('type.option.option'('type.list.list'('type.string.char')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t')))))),'type.list.list'('type.ast.id'('type.list.list'('type.string.char'))))),fun(fun('type.option.option'('type.list.list'('type.string.char')),fun('type.list.list'('type.string.char'),fun('type.list.list'('type.ast.t'),'type.list.list'('type.ast.id'('type.list.list'('type.string.char')))))),'type.list.list'('type.ast.id'('type.list.list'('type.string.char')))))))),'const.modLang.dec_CASE_0'),s(fun('type.num.num',fun('type.modLang.exp','type.list.list'('type.ast.id'('type.list.list'('type.string.char'))))),'_dst_x0_1'(s(fun('type.modLang.exp','type.list.list'('type.ast.id'('type.list.list'('type.string.char')))),'_dst_x0_1'(s('type.list.list'('type.ast.id'('type.list.list'('type.string.char'))),'const.list.NIL_0'))))),s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.modLang.exp'))),'type.list.list'('type.ast.id'('type.list.list'('type.string.char')))),'_dst_x0_1'(s('type.list.list'('type.ast.id'('type.list.list'('type.string.char'))),'const.list.NIL_0'))),s(fun('type.option.option'('type.list.list'('type.string.char')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t')))))),'type.list.list'('type.ast.id'('type.list.list'('type.string.char'))))),'_dst_x0x1_2'(s(fun(fun('type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t'))))),'type.ast.id'('type.list.list'('type.string.char'))),fun('type.list.list'('type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t')))))),'type.list.list'('type.ast.id'('type.list.list'('type.string.char'))))),'const.list.MAP_0'),s(fun('type.option.option'('type.list.list'('type.string.char')),fun('type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t'))))),'type.ast.id'('type.list.list'('type.string.char')))),'_dst_x0x1x0_3'(s(fun(fun('type.list.list'('type.string.char'),'type.ast.id'('type.list.list'('type.string.char'))),fun(fun('type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t'))))),'type.list.list'('type.string.char')),fun('type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t'))))),'type.ast.id'('type.list.list'('type.string.char'))))),'const.combin.o_0'),s(fun('type.option.option'('type.list.list'('type.string.char')),fun('type.list.list'('type.string.char'),'type.ast.id'('type.list.list'('type.string.char')))),'const.ast.mk_id_0'),s(fun('type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t'))))),'type.list.list'('type.string.char')),'const.combin.o_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t')))),'type.list.list'('type.string.char')),'const.pair.FST_0'),s(fun('type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t'))))),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t'))))),'const.pair.SND_0'))))))),s(fun('type.option.option'('type.list.list'('type.string.char')),fun('type.list.list'('type.string.char'),fun('type.list.list'('type.ast.t'),'type.list.list'('type.ast.id'('type.list.list'('type.string.char')))))),'_dst_x0_1'(s(fun('type.list.list'('type.string.char'),fun('type.list.list'('type.ast.t'),'type.list.list'('type.ast.id'('type.list.list'('type.string.char'))))),'_dst_x0_1'(s(fun('type.list.list'('type.ast.t'),'type.list.list'('type.ast.id'('type.list.list'('type.string.char')))),'_dst_x0_1'(s('type.list.list'('type.ast.id'('type.list.list'('type.string.char'))),'const.list.NIL_0'))))))))),s('type.list.list'('type.modLang.dec'),X0)))))))) ) <=> ~$spl840),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl840])])).
fof(f3738,plain,(
  ( ! [X0] : (s(fun('type.ast.id'('type.list.list'('type.string.char')),bool),'const.modProps.tids_of_decs_1'(s('type.list.list'('type.modLang.dec'),X0))) = s(fun('type.ast.id'('type.list.list'('type.string.char')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.ast.id'('type.list.list'('type.string.char'))),'const.list.FLAT_1'(s('type.list.list'('type.list.list'('type.ast.id'('type.list.list'('type.string.char')))),'const.list.MAP_2'(s(fun('type.modLang.dec','type.list.list'('type.ast.id'('type.list.list'('type.string.char')))),'_dst_x1x0x0x0x0_5'(s(fun('type.modLang.dec',fun(fun('type.num.num',fun('type.modLang.exp','type.list.list'('type.ast.id'('type.list.list'('type.string.char'))))),fun(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.modLang.exp'))),'type.list.list'('type.ast.id'('type.list.list'('type.string.char')))),fun(fun('type.option.option'('type.list.list'('type.string.char')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t')))))),'type.list.list'('type.ast.id'('type.list.list'('type.string.char'))))),fun(fun('type.option.option'('type.list.list'('type.string.char')),fun('type.list.list'('type.string.char'),fun('type.list.list'('type.ast.t'),'type.list.list'('type.ast.id'('type.list.list'('type.string.char')))))),'type.list.list'('type.ast.id'('type.list.list'('type.string.char')))))))),'const.modLang.dec_CASE_0'),s(fun('type.num.num',fun('type.modLang.exp','type.list.list'('type.ast.id'('type.list.list'('type.string.char'))))),'_dst_x0_1'(s(fun('type.modLang.exp','type.list.list'('type.ast.id'('type.list.list'('type.string.char')))),'_dst_x0_1'(s('type.list.list'('type.ast.id'('type.list.list'('type.string.char'))),'const.list.NIL_0'))))),s(fun('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.modLang.exp'))),'type.list.list'('type.ast.id'('type.list.list'('type.string.char')))),'_dst_x0_1'(s('type.list.list'('type.ast.id'('type.list.list'('type.string.char'))),'const.list.NIL_0'))),s(fun('type.option.option'('type.list.list'('type.string.char')),fun('type.list.list'('type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t')))))),'type.list.list'('type.ast.id'('type.list.list'('type.string.char'))))),'_dst_x0x1_2'(s(fun(fun('type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t'))))),'type.ast.id'('type.list.list'('type.string.char'))),fun('type.list.list'('type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t')))))),'type.list.list'('type.ast.id'('type.list.list'('type.string.char'))))),'const.list.MAP_0'),s(fun('type.option.option'('type.list.list'('type.string.char')),fun('type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t'))))),'type.ast.id'('type.list.list'('type.string.char')))),'_dst_x0x1x0_3'(s(fun(fun('type.list.list'('type.string.char'),'type.ast.id'('type.list.list'('type.string.char'))),fun(fun('type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t'))))),'type.list.list'('type.string.char')),fun('type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t'))))),'type.ast.id'('type.list.list'('type.string.char'))))),'const.combin.o_0'),s(fun('type.option.option'('type.list.list'('type.string.char')),fun('type.list.list'('type.string.char'),'type.ast.id'('type.list.list'('type.string.char')))),'const.ast.mk_id_0'),s(fun('type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t'))))),'type.list.list'('type.string.char')),'const.combin.o_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t')))),'type.list.list'('type.string.char')),'const.pair.FST_0'),s(fun('type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t'))))),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t'))))),'const.pair.SND_0'))))))),s(fun('type.option.option'('type.list.list'('type.string.char')),fun('type.list.list'('type.string.char'),fun('type.list.list'('type.ast.t'),'type.list.list'('type.ast.id'('type.list.list'('type.string.char')))))),'_dst_x0_1'(s(fun('type.list.list'('type.string.char'),fun('type.list.list'('type.ast.t'),'type.list.list'('type.ast.id'('type.list.list'('type.string.char'))))),'_dst_x0_1'(s(fun('type.list.list'('type.ast.t'),'type.list.list'('type.ast.id'('type.list.list'('type.string.char')))),'_dst_x0_1'(s('type.list.list'('type.ast.id'('type.list.list'('type.string.char'))),'const.list.NIL_0'))))))))),s('type.list.list'('type.modLang.dec'),X0)))))))) ) | ($spl794 | $spl832)),
  inference(backward_demodulation,[],[f3733,f3475])).
fof(f507,plain,(
  ( ! [X2,X0,X1] : (s('type.list.list'(X1),'const.list.NIL_0') = s('type.list.list'(X1),'const.list.MAP_2'(s(fun(X0,X1),X2),s('type.list.list'(X0),'const.list.NIL_0')))) ) | $spl62),
  inference(cnf_transformation,[],[f507_D])).
fof(f507_D,plain,(
  ( ! [X2,X0,X1] : (s('type.list.list'(X1),'const.list.NIL_0') = s('type.list.list'(X1),'const.list.MAP_2'(s(fun(X0,X1),X2),s('type.list.list'(X0),'const.list.NIL_0')))) ) <=> ~$spl62),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl62])])).
fof(f391,plain,(
  ( ! [X2,X0,X1] : (s('type.list.list'(X1),'const.list.NIL_0') = s('type.list.list'(X1),'const.list.MAP_2'(s(fun(X0,X1),X2),s('type.list.list'(X0),'const.list.NIL_0')))) )),
  inference(cnf_transformation,[],[f156])).
fof(f156,plain,(
  ! [X0,X1,X2] : s('type.list.list'(X1),'const.list.NIL_0') = s('type.list.list'(X1),'const.list.MAP_2'(s(fun(X0,X1),X2),s('type.list.list'(X0),'const.list.NIL_0')))),
  inference(flattening,[],[f155])).
fof(f155,plain,(
  ! [X0,X1] : ! [X2] : s('type.list.list'(X1),'const.list.NIL_0') = s('type.list.list'(X1),'const.list.MAP_2'(s(fun(X0,X1),X2),s('type.list.list'(X0),'const.list.NIL_0')))),
  inference(rectify,[],[f36])).
fof(f36,axiom,(
  ! [X7,X6] : ! [X15] : s('type.list.list'(X6),'const.list.NIL_0') = s('type.list.list'(X6),'const.list.MAP_2'(s(fun(X7,X6),X15),s('type.list.list'(X7),'const.list.NIL_0')))),
  file('thm.modProps.tids_of_decs_thm|split|0','thm.list.MAP|split|0')).
fof(f467,plain,(
  ( ! [X0] : (s(fun(X0,bool),'const.pred_set.EMPTY_0') = s(fun(X0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X0),'const.list.NIL_0')))) ) | $spl8),
  inference(cnf_transformation,[],[f467_D])).
fof(f467_D,plain,(
  ( ! [X0] : (s(fun(X0,bool),'const.pred_set.EMPTY_0') = s(fun(X0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X0),'const.list.NIL_0')))) ) <=> ~$spl8),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl8])])).
fof(f297,plain,(
  ( ! [X0] : (s(fun(X0,bool),'const.pred_set.EMPTY_0') = s(fun(X0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X0),'const.list.NIL_0')))) )),
  inference(cnf_transformation,[],[f80])).
fof(f80,plain,(
  ! [X0] : s(fun(X0,bool),'const.pred_set.EMPTY_0') = s(fun(X0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X0),'const.list.NIL_0')))),
  inference(rectify,[],[f38])).
fof(f38,axiom,(
  ! [X7] : s(fun(X7,bool),'const.pred_set.EMPTY_0') = s(fun(X7,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X7),'const.list.NIL_0')))),
  file('thm.modProps.tids_of_decs_thm|split|0','thm.list.LIST_TO_SET|split|0')).
fof(f466,plain,(
  ( ! [X0] : (s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),'const.list.FLAT_1'(s('type.list.list'('type.list.list'(X0)),'const.list.NIL_0')))) ) | $spl6),
  inference(cnf_transformation,[],[f466_D])).
fof(f466_D,plain,(
  ( ! [X0] : (s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),'const.list.FLAT_1'(s('type.list.list'('type.list.list'(X0)),'const.list.NIL_0')))) ) <=> ~$spl6),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl6])])).
fof(f296,plain,(
  ( ! [X0] : (s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),'const.list.FLAT_1'(s('type.list.list'('type.list.list'(X0)),'const.list.NIL_0')))) )),
  inference(cnf_transformation,[],[f79])).
fof(f79,plain,(
  ! [X0] : s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),'const.list.FLAT_1'(s('type.list.list'('type.list.list'(X0)),'const.list.NIL_0')))),
  inference(rectify,[],[f34])).
fof(f34,axiom,(
  ! [X7] : s('type.list.list'(X7),'const.list.NIL_0') = s('type.list.list'(X7),'const.list.FLAT_1'(s('type.list.list'('type.list.list'(X7)),'const.list.NIL_0')))),
  file('thm.modProps.tids_of_decs_thm|split|0','thm.list.FLAT|split|0')).
fof(f457,plain,(
  s(fun('type.ast.id'('type.list.list'('type.string.char')),bool),'const.pred_set.EMPTY_0') != s(fun('type.ast.id'('type.list.list'('type.string.char')),bool),'const.modProps.tids_of_decs_1'(s('type.list.list'('type.modLang.dec'),'const.list.NIL_0'))) | $spl1),
  inference(cnf_transformation,[],[f457_D])).
fof(f457_D,plain,(
  s(fun('type.ast.id'('type.list.list'('type.string.char')),bool),'const.pred_set.EMPTY_0') != s(fun('type.ast.id'('type.list.list'('type.string.char')),bool),'const.modProps.tids_of_decs_1'(s('type.list.list'('type.modLang.dec'),'const.list.NIL_0'))) <=> ~$spl1),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1])])).
fof(f288,plain,(
  s(fun('type.ast.id'('type.list.list'('type.string.char')),bool),'const.pred_set.EMPTY_0') != s(fun('type.ast.id'('type.list.list'('type.string.char')),bool),'const.modProps.tids_of_decs_1'(s('type.list.list'('type.modLang.dec'),'const.list.NIL_0')))),
  inference(cnf_transformation,[],[f75])).
fof(f75,plain,(
  s(fun('type.ast.id'('type.list.list'('type.string.char')),bool),'const.pred_set.EMPTY_0') != s(fun('type.ast.id'('type.list.list'('type.string.char')),bool),'const.modProps.tids_of_decs_1'(s('type.list.list'('type.modLang.dec'),'const.list.NIL_0')))),
  inference(flattening,[],[f6])).
fof(f6,negated_conjecture,(
  ~s(fun('type.ast.id'('type.list.list'('type.string.char')),bool),'const.pred_set.EMPTY_0') = s(fun('type.ast.id'('type.list.list'('type.string.char')),bool),'const.modProps.tids_of_decs_1'(s('type.list.list'('type.modLang.dec'),'const.list.NIL_0')))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  s(fun('type.ast.id'('type.list.list'('type.string.char')),bool),'const.pred_set.EMPTY_0') = s(fun('type.ast.id'('type.list.list'('type.string.char')),bool),'const.modProps.tids_of_decs_1'(s('type.list.list'('type.modLang.dec'),'const.list.NIL_0')))),
  file('thm.modProps.tids_of_decs_thm|split|0','thm.modProps.tids_of_decs_thm|split|0')).
fof(f7063,plain,(
  $false | ($spl1 | $spl6 | $spl8 | $spl62 | $spl840)),
  inference(subsumption_resolution,[],[f7062,f457])).
fof(f7062,plain,(
  s(fun('type.ast.id'('type.list.list'('type.string.char')),bool),'const.pred_set.EMPTY_0') = s(fun('type.ast.id'('type.list.list'('type.string.char')),bool),'const.modProps.tids_of_decs_1'(s('type.list.list'('type.modLang.dec'),'const.list.NIL_0'))) | ($spl6 | $spl8 | $spl62 | $spl840)),
  inference(forward_demodulation,[],[f7061,f467])).
fof(f7061,plain,(
  s(fun('type.ast.id'('type.list.list'('type.string.char')),bool),'const.modProps.tids_of_decs_1'(s('type.list.list'('type.modLang.dec'),'const.list.NIL_0'))) = s(fun('type.ast.id'('type.list.list'('type.string.char')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.ast.id'('type.list.list'('type.string.char'))),'const.list.NIL_0'))) | ($spl6 | $spl62 | $spl840)),
  inference(forward_demodulation,[],[f7002,f466])).
fof(f7002,plain,(
  s(fun('type.ast.id'('type.list.list'('type.string.char')),bool),'const.modProps.tids_of_decs_1'(s('type.list.list'('type.modLang.dec'),'const.list.NIL_0'))) = s(fun('type.ast.id'('type.list.list'('type.string.char')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.ast.id'('type.list.list'('type.string.char'))),'const.list.FLAT_1'(s('type.list.list'('type.list.list'('type.ast.id'('type.list.list'('type.string.char')))),'const.list.NIL_0'))))) | ($spl62 | $spl840)),
  inference(superposition,[],[f3739,f507])).
% SZS output end Proof for thm.modProps
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 170
% Passive clauses: 751
% Generated clauses: 6765
% Final active clauses: 170
% Final passive clauses: 535
% Input formulas: 73
% Initial clauses: 160
% 
% Duplicate literals: 39
% Trivial inequalities: 5
% Fw subsumption resolutions: 89
% Fw demodulations: 744
% Bw demodulations: 46
% Condensations: 54
% Global subsumptions: 17
% 
% Simple tautologies: 139
% Equational tautologies: 10
% Forward subsumptions: 4040
% 
% Binary resolution: 376
% Factoring: 6
% Forward superposition: 2275
% Backward superposition: 2096
% Self superposition: 95
% Equality factoring: 2
% Equality resolution: 2
% 
% Split clauses: 14
% Split components: 28
% SAT solver clauses: 1076
% SAT solver unit clauses: 205
% SAT solver binary clauses: 50
% SAT solver learnt clauses: 35
% SAT solver learnt literals: 10
% 
% Sat splits: 14
% Sat splitting refutations: 1
% 
% TWLsolver clauses: 1007
% TWLsolver calls for satisfiability: 999
% 
% Memory used [KB]: 19957
% Time elapsed: 0.271 s
% ------------------------------
% ------------------------------
% Success in time 0.895 s
