Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 149 next slice time: 5
dis+11_7_3 on thm.evalProps
% (108206)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 140
% Passive clauses: 2373
% Generated clauses: 14115
% Final active clauses: 133
% Final passive clauses: 2030
% Input formulas: 22
% Initial clauses: 30
% 
% Duplicate literals: 962
% Trivial inequalities: 102
% Fw subsumption resolutions: 1624
% Fw demodulations: 1696
% Bw demodulations: 5
% 
% Simple tautologies: 242
% Equational tautologies: 28
% Forward subsumptions: 6302
% Fw demodulations to eq. taut.: 47
% 
% Binary resolution: 146
% Forward superposition: 5296
% Backward superposition: 3925
% Self superposition: 133
% Equality factoring: 40
% Equality resolution: 32
% 
% Split clauses: 471
% Split components: 954
% SAT solver clauses: 904
% SAT solver unit clauses: 4
% SAT solver binary clauses: 104
% 
% Sat splits: 471
% Sat splitting refutations: 2
% 
% TWLsolver clauses: 899
% TWLsolver calls for satisfiability: 161
% 
% Memory used [KB]: 11513
% Time elapsed: 0.600 s
% ------------------------------
% ------------------------------
% remaining time: 144 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.evalProps
% (108227)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 108
% Passive clauses: 1387
% Generated clauses: 10835
% Final active clauses: 101
% Final passive clauses: 1254
% Input formulas: 22
% Initial clauses: 30
% 
% Duplicate literals: 612
% Trivial inequalities: 87
% Fw subsumption resolutions: 567
% Fw demodulations: 877
% Bw demodulations: 27
% Condensations: 664
% 
% Simple tautologies: 158
% Equational tautologies: 26
% Forward subsumptions: 4058
% Fw demodulations to eq. taut.: 18
% Bw demodulations to eq. taut.: 1
% 
% Binary resolution: 35
% Forward superposition: 3185
% Backward superposition: 3164
% Self superposition: 126
% Equality factoring: 44
% Equality resolution: 29
% 
% Split clauses: 128
% Split components: 261
% SAT solver clauses: 2194
% SAT solver unit clauses: 41
% SAT solver binary clauses: 50
% 
% Sat splits: 128
% Sat splitting refutations: 4
% 
% TWLsolver clauses: 2194
% TWLsolver calls for satisfiability: 193
% 
% Memory used [KB]: 15991
% Time elapsed: 0.700 s
% ------------------------------
% ------------------------------
% remaining time: 136 next slice time: 103
lrs+11_2_br=off:cond=on:fde=none:gs=on:gsaa=full_model:lwlo=on:nwc=2:sas=minisat:stl=30:ssfp=100000:ssfq=1.4:smm=sco:ssnc=none:sp=occurrence:urr=on_98 on thm.evalProps
% (108267)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 376
% Passive clauses: 5249
% Generated clauses: 131609
% Final active clauses: 168
% Final passive clauses: 632
% Input formulas: 22
% Initial clauses: 30
% Discarded non-redundant clauses: 8241
% 
% Duplicate literals: 7037
% Trivial inequalities: 1235
% Fw subsumption resolutions: 10946
% Fw demodulations: 12736
% Bw demodulations: 1318
% Condensations: 12787
% Global subsumptions: 65
% 
% Simple tautologies: 1395
% Equational tautologies: 705
% Forward subsumptions: 72373
% Fw demodulations to eq. taut.: 403
% Bw demodulations to eq. taut.: 105
% 
% Unit resulting resolution: 3259
% Forward superposition: 36699
% Backward superposition: 37170
% Self superposition: 698
% Equality factoring: 324
% Equality resolution: 139
% 
% Split clauses: 363
% Split components: 738
% SAT solver clauses: 6112
% SAT solver unit clauses: 187
% SAT solver binary clauses: 1164
% 
% Sat splits: 363
% Sat splitting refutations: 70
% 
% Memory used [KB]: 72919
% Time elapsed: 10.400 s
% ------------------------------
% ------------------------------
% remaining time: 31 next slice time: 31
dis+11_5_fde=none:nwc=1:sas=minisat:sd=1:ss=axioms:st=5.0:sos=all:sdd=large:sser=off:sfr=on:ssfp=100000:ssfq=2.0:ssnc=none_37 on thm.evalProps
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.evalProps
% SZS output start Proof for thm.evalProps
fof(f8103,plain,(
  $false),
  inference(trivial_inequality_removal,[],[f8062])).
fof(f8062,plain,(
  s('type.semanticPrimitives.store_v'('type.semanticPrimitives.store_v'(sK2)),'const.semanticPrimitives.Refv_1'(s('type.semanticPrimitives.store_v'(sK2),sK3))) != s('type.semanticPrimitives.store_v'('type.semanticPrimitives.store_v'(sK2)),'const.semanticPrimitives.Refv_1'(s('type.semanticPrimitives.store_v'(sK2),sK3)))),
  inference(superposition,[],[f7518,f6809])).
fof(f6809,plain,(
  s('type.semanticPrimitives.store_v'(sK2),sK3) = s('type.semanticPrimitives.store_v'(sK2),'const.semanticPrimitives.Varray_1'(s('type.list.list'(sK2),sK8(sK3,sK2))))),
  inference(equality_resolution,[],[f6771])).
fof(f6771,plain,(
  ( ! [X0] : (s('type.semanticPrimitives.store_v'('type.semanticPrimitives.store_v'(sK2)),'const.semanticPrimitives.Refv_1'(s('type.semanticPrimitives.store_v'(sK2),sK3))) != s('type.semanticPrimitives.store_v'('type.semanticPrimitives.store_v'(sK2)),'const.semanticPrimitives.Refv_1'(s('type.semanticPrimitives.store_v'(sK2),X0))) | s('type.semanticPrimitives.store_v'(sK2),X0) = s('type.semanticPrimitives.store_v'(sK2),'const.semanticPrimitives.Varray_1'(s('type.list.list'(sK2),sK8(X0,sK2))))) )),
  inference(trivial_inequality_removal,[],[f6770])).
fof(f6770,plain,(
  ( ! [X0] : (s('type.semanticPrimitives.store_v'(sK0),'const.semanticPrimitives.Refv_1'(s(sK0,'const.combin.o_3'(s(fun(sK1,sK0),sK5),s(fun(sK2,sK1),sK4),s(sK2,sK6(X0,sK2)))))) != s('type.semanticPrimitives.store_v'(sK0),'const.semanticPrimitives.Refv_1'(s(sK0,'const.combin.o_3'(s(fun(sK1,sK0),sK5),s(fun(sK2,sK1),sK4),s(sK2,sK6(X0,sK2)))))) | s('type.semanticPrimitives.store_v'('type.semanticPrimitives.store_v'(sK2)),'const.semanticPrimitives.Refv_1'(s('type.semanticPrimitives.store_v'(sK2),sK3))) != s('type.semanticPrimitives.store_v'('type.semanticPrimitives.store_v'(sK2)),'const.semanticPrimitives.Refv_1'(s('type.semanticPrimitives.store_v'(sK2),X0))) | s('type.semanticPrimitives.store_v'(sK2),X0) = s('type.semanticPrimitives.store_v'(sK2),'const.semanticPrimitives.Varray_1'(s('type.list.list'(sK2),sK8(X0,sK2))))) )),
  inference(forward_demodulation,[],[f6767,f87])).
fof(f87,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s(X0,'const.combin.o_3'(s(fun(X1,X0),X3),s(fun(X2,X1),X4),s(X2,X5))) = s(X0,happ(s(fun(X1,X0),X3),s(X1,happ(s(fun(X2,X1),X4),s(X2,X5)))))) )),
  inference(cnf_transformation,[],[f47])).
fof(f47,plain,(
  ! [X0,X1,X2,X3,X4,X5] : s(X0,'const.combin.o_3'(s(fun(X1,X0),X3),s(fun(X2,X1),X4),s(X2,X5))) = s(X0,happ(s(fun(X1,X0),X3),s(X1,happ(s(fun(X2,X1),X4),s(X2,X5)))))),
  inference(flattening,[],[f46])).
fof(f46,plain,(
  ! [X0,X1,X2] : ! [X3,X4,X5] : s(X0,'const.combin.o_3'(s(fun(X1,X0),X3),s(fun(X2,X1),X4),s(X2,X5))) = s(X0,happ(s(fun(X1,X0),X3),s(X1,happ(s(fun(X2,X1),X4),s(X2,X5)))))),
  inference(rectify,[],[f13])).
fof(f13,axiom,(
  ! [X7,X6,X8] : ! [X11,X10,X9] : s(X7,'const.combin.o_3'(s(fun(X6,X7),X11),s(fun(X8,X6),X10),s(X8,X9))) = s(X7,happ(s(fun(X6,X7),X11),s(X6,happ(s(fun(X8,X6),X10),s(X8,X9)))))),
  file('thm.evalProps.map_sv_compose','thm.combin.o_THM')).
fof(f6767,plain,(
  ( ! [X0] : (s('type.semanticPrimitives.store_v'(sK0),'const.semanticPrimitives.Refv_1'(s(sK0,'const.combin.o_3'(s(fun(sK1,sK0),sK5),s(fun(sK2,sK1),sK4),s(sK2,sK6(X0,sK2)))))) != s('type.semanticPrimitives.store_v'(sK0),'const.semanticPrimitives.Refv_1'(s(sK0,happ(s(fun(sK1,sK0),sK5),s(sK1,happ(s(fun(sK2,sK1),sK4),s(sK2,sK6(X0,sK2)))))))) | s('type.semanticPrimitives.store_v'('type.semanticPrimitives.store_v'(sK2)),'const.semanticPrimitives.Refv_1'(s('type.semanticPrimitives.store_v'(sK2),sK3))) != s('type.semanticPrimitives.store_v'('type.semanticPrimitives.store_v'(sK2)),'const.semanticPrimitives.Refv_1'(s('type.semanticPrimitives.store_v'(sK2),X0))) | s('type.semanticPrimitives.store_v'(sK2),X0) = s('type.semanticPrimitives.store_v'(sK2),'const.semanticPrimitives.Varray_1'(s('type.list.list'(sK2),sK8(X0,sK2))))) )),
  inference(superposition,[],[f6705,f84])).
fof(f84,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.semanticPrimitives.store_v'(X0),'const.semanticPrimitives.Refv_1'(s(X0,happ(s(fun(X1,X0),X2),s(X1,X3))))) = s('type.semanticPrimitives.store_v'(X0),'const.evalProps.map_sv_2'(s(fun(X1,X0),X2),s('type.semanticPrimitives.store_v'(X1),'const.semanticPrimitives.Refv_1'(s(X1,X3)))))) )),
  inference(cnf_transformation,[],[f45])).
fof(f45,plain,(
  ! [X0,X1,X2,X3] : s('type.semanticPrimitives.store_v'(X0),'const.semanticPrimitives.Refv_1'(s(X0,happ(s(fun(X1,X0),X2),s(X1,X3))))) = s('type.semanticPrimitives.store_v'(X0),'const.evalProps.map_sv_2'(s(fun(X1,X0),X2),s('type.semanticPrimitives.store_v'(X1),'const.semanticPrimitives.Refv_1'(s(X1,X3)))))),
  inference(flattening,[],[f44])).
fof(f44,plain,(
  ! [X0,X1] : ! [X2,X3] : s('type.semanticPrimitives.store_v'(X0),'const.semanticPrimitives.Refv_1'(s(X0,happ(s(fun(X1,X0),X2),s(X1,X3))))) = s('type.semanticPrimitives.store_v'(X0),'const.evalProps.map_sv_2'(s(fun(X1,X0),X2),s('type.semanticPrimitives.store_v'(X1),'const.semanticPrimitives.Refv_1'(s(X1,X3)))))),
  inference(rectify,[],[f14])).
fof(f14,axiom,(
  ! [X6,X7] : ! [X11,X13] : s('type.semanticPrimitives.store_v'(X6),'const.semanticPrimitives.Refv_1'(s(X6,happ(s(fun(X7,X6),X11),s(X7,X13))))) = s('type.semanticPrimitives.store_v'(X6),'const.evalProps.map_sv_2'(s(fun(X7,X6),X11),s('type.semanticPrimitives.store_v'(X7),'const.semanticPrimitives.Refv_1'(s(X7,X13)))))),
  file('thm.evalProps.map_sv_compose','thm.evalProps.map_sv_def|split|0')).
fof(f6705,plain,(
  ( ! [X19] : (s('type.semanticPrimitives.store_v'(sK0),'const.semanticPrimitives.Refv_1'(s(sK0,'const.combin.o_3'(s(fun(sK1,sK0),sK5),s(fun(sK2,sK1),sK4),s(sK2,sK6(X19,sK2)))))) != s('type.semanticPrimitives.store_v'(sK0),'const.evalProps.map_sv_2'(s(fun(sK1,sK0),sK5),s('type.semanticPrimitives.store_v'(sK1),'const.semanticPrimitives.Refv_1'(s(sK1,happ(s(fun(sK2,sK1),sK4),s(sK2,sK6(X19,sK2)))))))) | s('type.semanticPrimitives.store_v'('type.semanticPrimitives.store_v'(sK2)),'const.semanticPrimitives.Refv_1'(s('type.semanticPrimitives.store_v'(sK2),sK3))) != s('type.semanticPrimitives.store_v'('type.semanticPrimitives.store_v'(sK2)),'const.semanticPrimitives.Refv_1'(s('type.semanticPrimitives.store_v'(sK2),X19))) | s('type.semanticPrimitives.store_v'(sK2),X19) = s('type.semanticPrimitives.store_v'(sK2),'const.semanticPrimitives.Varray_1'(s('type.list.list'(sK2),sK8(X19,sK2))))) )),
  inference(subsumption_resolution,[],[f147,f233])).
fof(f233,plain,(
  ( ! [X0,X1] : (s('type.semanticPrimitives.store_v'('type.semanticPrimitives.store_v'(sK2)),'const.semanticPrimitives.Refv_1'(s('type.semanticPrimitives.store_v'(sK2),sK3))) != s('type.semanticPrimitives.store_v'('type.semanticPrimitives.store_v'(sK2)),'const.semanticPrimitives.Refv_1'(s('type.semanticPrimitives.store_v'(sK2),X0))) | s('type.semanticPrimitives.store_v'(sK2),X0) != s('type.semanticPrimitives.store_v'(sK2),'const.semanticPrimitives.W8array_1'(s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X1)))) )),
  inference(equality_resolution,[],[f180])).
fof(f180,plain,(
  ( ! [X2,X0,X1] : (s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X0) != s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X2) | s('type.semanticPrimitives.store_v'('type.semanticPrimitives.store_v'(sK2)),'const.semanticPrimitives.Refv_1'(s('type.semanticPrimitives.store_v'(sK2),sK3))) != s('type.semanticPrimitives.store_v'('type.semanticPrimitives.store_v'(sK2)),'const.semanticPrimitives.Refv_1'(s('type.semanticPrimitives.store_v'(sK2),X1))) | s('type.semanticPrimitives.store_v'(sK2),X1) != s('type.semanticPrimitives.store_v'(sK2),'const.semanticPrimitives.W8array_1'(s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X0)))) )),
  inference(superposition,[],[f150,f93])).
fof(f93,plain,(
  ( ! [X2,X0,X1] : (s('type.semanticPrimitives.store_v'(X0),'const.semanticPrimitives.Refv_1'(s(X0,X1))) = s('type.semanticPrimitives.store_v'(X0),'const.semanticPrimitives.Refv_1'(s(X0,X2))) | s(X0,X1) != s(X0,X2)) )),
  inference(cnf_transformation,[],[f65])).
fof(f65,plain,(
  ! [X0,X1,X2] : ((s('type.semanticPrimitives.store_v'(X0),'const.semanticPrimitives.Refv_1'(s(X0,X1))) != s('type.semanticPrimitives.store_v'(X0),'const.semanticPrimitives.Refv_1'(s(X0,X2))) | s(X0,X1) = s(X0,X2)) & (s(X0,X1) != s(X0,X2) | s('type.semanticPrimitives.store_v'(X0),'const.semanticPrimitives.Refv_1'(s(X0,X1))) = s('type.semanticPrimitives.store_v'(X0),'const.semanticPrimitives.Refv_1'(s(X0,X2)))))),
  inference(nnf_transformation,[],[f53])).
fof(f53,plain,(
  ! [X0,X1,X2] : (s('type.semanticPrimitives.store_v'(X0),'const.semanticPrimitives.Refv_1'(s(X0,X1))) = s('type.semanticPrimitives.store_v'(X0),'const.semanticPrimitives.Refv_1'(s(X0,X2))) <=> s(X0,X1) = s(X0,X2))),
  inference(flattening,[],[f52])).
fof(f52,plain,(
  ! [X0] : ! [X1,X2] : (s('type.semanticPrimitives.store_v'(X0),'const.semanticPrimitives.Refv_1'(s(X0,X1))) = s('type.semanticPrimitives.store_v'(X0),'const.semanticPrimitives.Refv_1'(s(X0,X2))) <=> s(X0,X1) = s(X0,X2))),
  inference(rectify,[],[f18])).
fof(f18,axiom,(
  ! [X6] : ! [X18,X19] : (s('type.semanticPrimitives.store_v'(X6),'const.semanticPrimitives.Refv_1'(s(X6,X18))) = s('type.semanticPrimitives.store_v'(X6),'const.semanticPrimitives.Refv_1'(s(X6,X19))) <=> s(X6,X18) = s(X6,X19))),
  file('thm.evalProps.map_sv_compose','thm.semanticPrimitives.store_v_|49||49||split|0')).
fof(f150,plain,(
  ( ! [X21,X20] : (s('type.semanticPrimitives.store_v'('type.semanticPrimitives.store_v'(sK2)),'const.semanticPrimitives.Refv_1'(s('type.semanticPrimitives.store_v'(sK2),sK3))) != s('type.semanticPrimitives.store_v'('type.semanticPrimitives.store_v'(sK2)),'const.semanticPrimitives.Refv_1'(s('type.semanticPrimitives.store_v'(sK2),'const.semanticPrimitives.W8array_1'(s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X21))))) | s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X20) != s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X21)) )),
  inference(subsumption_resolution,[],[f149,f81])).
fof(f81,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.semanticPrimitives.store_v'(X1),'const.semanticPrimitives.W8array_1'(s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X3))) = s('type.semanticPrimitives.store_v'(X1),'const.evalProps.map_sv_2'(s(fun(X0,X1),X2),s('type.semanticPrimitives.store_v'(X0),'const.semanticPrimitives.W8array_1'(s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X3)))))) )),
  inference(cnf_transformation,[],[f39])).
fof(f39,plain,(
  ! [X0,X1,X2,X3] : s('type.semanticPrimitives.store_v'(X1),'const.semanticPrimitives.W8array_1'(s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X3))) = s('type.semanticPrimitives.store_v'(X1),'const.evalProps.map_sv_2'(s(fun(X0,X1),X2),s('type.semanticPrimitives.store_v'(X0),'const.semanticPrimitives.W8array_1'(s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X3)))))),
  inference(flattening,[],[f38])).
fof(f38,plain,(
  ! [X0,X1] : ! [X2,X3] : s('type.semanticPrimitives.store_v'(X1),'const.semanticPrimitives.W8array_1'(s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X3))) = s('type.semanticPrimitives.store_v'(X1),'const.evalProps.map_sv_2'(s(fun(X0,X1),X2),s('type.semanticPrimitives.store_v'(X0),'const.semanticPrimitives.W8array_1'(s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X3)))))),
  inference(rectify,[],[f15])).
fof(f15,axiom,(
  ! [X7,X6] : ! [X14,X15] : s('type.semanticPrimitives.store_v'(X6),'const.semanticPrimitives.W8array_1'(s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X15))) = s('type.semanticPrimitives.store_v'(X6),'const.evalProps.map_sv_2'(s(fun(X7,X6),X14),s('type.semanticPrimitives.store_v'(X7),'const.semanticPrimitives.W8array_1'(s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X15)))))),
  file('thm.evalProps.map_sv_compose','thm.evalProps.map_sv_def|split|1')).
fof(f149,plain,(
  ( ! [X21,X20] : (s('type.semanticPrimitives.store_v'(sK0),'const.semanticPrimitives.W8array_1'(s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X20))) != s('type.semanticPrimitives.store_v'(sK0),'const.evalProps.map_sv_2'(s(fun(sK1,sK0),sK5),s('type.semanticPrimitives.store_v'(sK1),'const.semanticPrimitives.W8array_1'(s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X20))))) | s('type.semanticPrimitives.store_v'('type.semanticPrimitives.store_v'(sK2)),'const.semanticPrimitives.Refv_1'(s('type.semanticPrimitives.store_v'(sK2),sK3))) != s('type.semanticPrimitives.store_v'('type.semanticPrimitives.store_v'(sK2)),'const.semanticPrimitives.Refv_1'(s('type.semanticPrimitives.store_v'(sK2),'const.semanticPrimitives.W8array_1'(s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X21))))) | s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X20) != s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X21)) )),
  inference(forward_demodulation,[],[f148,f81])).
fof(f148,plain,(
  ( ! [X21,X20] : (s('type.semanticPrimitives.store_v'(sK0),'const.semanticPrimitives.W8array_1'(s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X20))) != s('type.semanticPrimitives.store_v'(sK0),'const.evalProps.map_sv_2'(s(fun(sK1,sK0),sK5),s('type.semanticPrimitives.store_v'(sK1),'const.evalProps.map_sv_2'(s(fun(sK2,sK1),sK4),s('type.semanticPrimitives.store_v'(sK2),'const.semanticPrimitives.W8array_1'(s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X20))))))) | s('type.semanticPrimitives.store_v'('type.semanticPrimitives.store_v'(sK2)),'const.semanticPrimitives.Refv_1'(s('type.semanticPrimitives.store_v'(sK2),sK3))) != s('type.semanticPrimitives.store_v'('type.semanticPrimitives.store_v'(sK2)),'const.semanticPrimitives.Refv_1'(s('type.semanticPrimitives.store_v'(sK2),'const.semanticPrimitives.W8array_1'(s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X21))))) | s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X20) != s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X21)) )),
  inference(forward_demodulation,[],[f119,f81])).
fof(f119,plain,(
  ( ! [X21,X20] : (s('type.semanticPrimitives.store_v'('type.semanticPrimitives.store_v'(sK2)),'const.semanticPrimitives.Refv_1'(s('type.semanticPrimitives.store_v'(sK2),sK3))) != s('type.semanticPrimitives.store_v'('type.semanticPrimitives.store_v'(sK2)),'const.semanticPrimitives.Refv_1'(s('type.semanticPrimitives.store_v'(sK2),'const.semanticPrimitives.W8array_1'(s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X21))))) | s('type.semanticPrimitives.store_v'(sK0),'const.evalProps.map_sv_2'(s(fun(sK1,sK0),sK5),s('type.semanticPrimitives.store_v'(sK1),'const.evalProps.map_sv_2'(s(fun(sK2,sK1),sK4),s('type.semanticPrimitives.store_v'(sK2),'const.semanticPrimitives.W8array_1'(s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X20))))))) != s('type.semanticPrimitives.store_v'(sK0),'const.evalProps.map_sv_2'(s(fun(sK2,sK0),'const.combin.o_2'(s(fun(sK1,sK0),sK5),s(fun(sK2,sK1),sK4))),s('type.semanticPrimitives.store_v'(sK2),'const.semanticPrimitives.W8array_1'(s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X20))))) | s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X20) != s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X21)) )),
  inference(superposition,[],[f102,f89])).
fof(f89,plain,(
  ( ! [X2,X0,X1] : (s('type.semanticPrimitives.store_v'(X0),'const.semanticPrimitives.W8array_1'(s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X1))) = s('type.semanticPrimitives.store_v'(X0),'const.semanticPrimitives.W8array_1'(s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X2))) | s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X1) != s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X2)) )),
  inference(cnf_transformation,[],[f63])).
fof(f63,plain,(
  ! [X0,X1,X2] : ((s('type.semanticPrimitives.store_v'(X0),'const.semanticPrimitives.W8array_1'(s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X1))) != s('type.semanticPrimitives.store_v'(X0),'const.semanticPrimitives.W8array_1'(s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X2))) | s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X1) = s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X2)) & (s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X1) != s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X2) | s('type.semanticPrimitives.store_v'(X0),'const.semanticPrimitives.W8array_1'(s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X1))) = s('type.semanticPrimitives.store_v'(X0),'const.semanticPrimitives.W8array_1'(s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X2)))))),
  inference(nnf_transformation,[],[f49])).
fof(f49,plain,(
  ! [X0,X1,X2] : (s('type.semanticPrimitives.store_v'(X0),'const.semanticPrimitives.W8array_1'(s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X1))) = s('type.semanticPrimitives.store_v'(X0),'const.semanticPrimitives.W8array_1'(s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X2))) <=> s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X1) = s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X2))),
  inference(flattening,[],[f48])).
fof(f48,plain,(
  ! [X0] : ! [X1,X2] : (s('type.semanticPrimitives.store_v'(X0),'const.semanticPrimitives.W8array_1'(s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X1))) = s('type.semanticPrimitives.store_v'(X0),'const.semanticPrimitives.W8array_1'(s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X2))) <=> s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X1) = s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X2))),
  inference(rectify,[],[f19])).
fof(f19,axiom,(
  ! [X6] : ! [X18,X19] : (s('type.semanticPrimitives.store_v'(X6),'const.semanticPrimitives.W8array_1'(s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X18))) = s('type.semanticPrimitives.store_v'(X6),'const.semanticPrimitives.W8array_1'(s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X19))) <=> s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X18) = s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X19))),
  file('thm.evalProps.map_sv_compose','thm.semanticPrimitives.store_v_|49||49||split|1')).
fof(f102,plain,(
  ( ! [X0] : (s('type.semanticPrimitives.store_v'('type.semanticPrimitives.store_v'(sK2)),'const.semanticPrimitives.Refv_1'(s('type.semanticPrimitives.store_v'(sK2),sK3))) != s('type.semanticPrimitives.store_v'('type.semanticPrimitives.store_v'(sK2)),'const.semanticPrimitives.Refv_1'(s('type.semanticPrimitives.store_v'(sK2),X0))) | s('type.semanticPrimitives.store_v'(sK0),'const.evalProps.map_sv_2'(s(fun(sK1,sK0),sK5),s('type.semanticPrimitives.store_v'(sK1),'const.evalProps.map_sv_2'(s(fun(sK2,sK1),sK4),s('type.semanticPrimitives.store_v'(sK2),X0))))) != s('type.semanticPrimitives.store_v'(sK0),'const.evalProps.map_sv_2'(s(fun(sK2,sK0),'const.combin.o_2'(s(fun(sK1,sK0),sK5),s(fun(sK2,sK1),sK4))),s('type.semanticPrimitives.store_v'(sK2),X0)))) )),
  inference(superposition,[],[f67,f92])).
fof(f92,plain,(
  ( ! [X2,X0,X1] : (s(X0,X1) = s(X0,X2) | s('type.semanticPrimitives.store_v'(X0),'const.semanticPrimitives.Refv_1'(s(X0,X1))) != s('type.semanticPrimitives.store_v'(X0),'const.semanticPrimitives.Refv_1'(s(X0,X2)))) )),
  inference(cnf_transformation,[],[f65])).
fof(f67,plain,(
  s('type.semanticPrimitives.store_v'(sK0),'const.evalProps.map_sv_2'(s(fun(sK1,sK0),sK5),s('type.semanticPrimitives.store_v'(sK1),'const.evalProps.map_sv_2'(s(fun(sK2,sK1),sK4),s('type.semanticPrimitives.store_v'(sK2),sK3))))) != s('type.semanticPrimitives.store_v'(sK0),'const.evalProps.map_sv_2'(s(fun(sK2,sK0),'const.combin.o_2'(s(fun(sK1,sK0),sK5),s(fun(sK2,sK1),sK4))),s('type.semanticPrimitives.store_v'(sK2),sK3)))),
  inference(cnf_transformation,[],[f57])).
fof(f57,plain,(
  s('type.semanticPrimitives.store_v'(sK0),'const.evalProps.map_sv_2'(s(fun(sK1,sK0),sK5),s('type.semanticPrimitives.store_v'(sK1),'const.evalProps.map_sv_2'(s(fun(sK2,sK1),sK4),s('type.semanticPrimitives.store_v'(sK2),sK3))))) != s('type.semanticPrimitives.store_v'(sK0),'const.evalProps.map_sv_2'(s(fun(sK2,sK0),'const.combin.o_2'(s(fun(sK1,sK0),sK5),s(fun(sK2,sK1),sK4))),s('type.semanticPrimitives.store_v'(sK2),sK3)))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1,sK2,sK3,sK4,sK5])],[f56])).
fof(f56,plain,(
  ? [X0,X1,X2,X3,X4,X5] : s('type.semanticPrimitives.store_v'(X0),'const.evalProps.map_sv_2'(s(fun(X1,X0),X5),s('type.semanticPrimitives.store_v'(X1),'const.evalProps.map_sv_2'(s(fun(X2,X1),X4),s('type.semanticPrimitives.store_v'(X2),X3))))) != s('type.semanticPrimitives.store_v'(X0),'const.evalProps.map_sv_2'(s(fun(X2,X0),'const.combin.o_2'(s(fun(X1,X0),X5),s(fun(X2,X1),X4))),s('type.semanticPrimitives.store_v'(X2),X3)))),
  inference(ennf_transformation,[],[f25])).
fof(f25,plain,(
  ~! [X0,X1,X2,X3,X4,X5] : s('type.semanticPrimitives.store_v'(X0),'const.evalProps.map_sv_2'(s(fun(X1,X0),X5),s('type.semanticPrimitives.store_v'(X1),'const.evalProps.map_sv_2'(s(fun(X2,X1),X4),s('type.semanticPrimitives.store_v'(X2),X3))))) = s('type.semanticPrimitives.store_v'(X0),'const.evalProps.map_sv_2'(s(fun(X2,X0),'const.combin.o_2'(s(fun(X1,X0),X5),s(fun(X2,X1),X4))),s('type.semanticPrimitives.store_v'(X2),X3)))),
  inference(flattening,[],[f24])).
fof(f24,plain,(
  ~! [X0,X1,X2] : ! [X3,X4,X5] : s('type.semanticPrimitives.store_v'(X0),'const.evalProps.map_sv_2'(s(fun(X1,X0),X5),s('type.semanticPrimitives.store_v'(X1),'const.evalProps.map_sv_2'(s(fun(X2,X1),X4),s('type.semanticPrimitives.store_v'(X2),X3))))) = s('type.semanticPrimitives.store_v'(X0),'const.evalProps.map_sv_2'(s(fun(X2,X0),'const.combin.o_2'(s(fun(X1,X0),X5),s(fun(X2,X1),X4))),s('type.semanticPrimitives.store_v'(X2),X3)))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6,X7,X8] : ! [X9,X10,X11] : s('type.semanticPrimitives.store_v'(X6),'const.evalProps.map_sv_2'(s(fun(X7,X6),X11),s('type.semanticPrimitives.store_v'(X7),'const.evalProps.map_sv_2'(s(fun(X8,X7),X10),s('type.semanticPrimitives.store_v'(X8),X9))))) = s('type.semanticPrimitives.store_v'(X6),'const.evalProps.map_sv_2'(s(fun(X8,X6),'const.combin.o_2'(s(fun(X7,X6),X11),s(fun(X8,X7),X10))),s('type.semanticPrimitives.store_v'(X8),X9)))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6,X7,X8] : ! [X9,X10,X11] : s('type.semanticPrimitives.store_v'(X6),'const.evalProps.map_sv_2'(s(fun(X7,X6),X11),s('type.semanticPrimitives.store_v'(X7),'const.evalProps.map_sv_2'(s(fun(X8,X7),X10),s('type.semanticPrimitives.store_v'(X8),X9))))) = s('type.semanticPrimitives.store_v'(X6),'const.evalProps.map_sv_2'(s(fun(X8,X6),'const.combin.o_2'(s(fun(X7,X6),X11),s(fun(X8,X7),X10))),s('type.semanticPrimitives.store_v'(X8),X9)))),
  file('thm.evalProps.map_sv_compose','thm.evalProps.map_sv_compose')).
fof(f147,plain,(
  ( ! [X19] : (s('type.semanticPrimitives.store_v'(sK0),'const.semanticPrimitives.Refv_1'(s(sK0,'const.combin.o_3'(s(fun(sK1,sK0),sK5),s(fun(sK2,sK1),sK4),s(sK2,sK6(X19,sK2)))))) != s('type.semanticPrimitives.store_v'(sK0),'const.evalProps.map_sv_2'(s(fun(sK1,sK0),sK5),s('type.semanticPrimitives.store_v'(sK1),'const.semanticPrimitives.Refv_1'(s(sK1,happ(s(fun(sK2,sK1),sK4),s(sK2,sK6(X19,sK2)))))))) | s('type.semanticPrimitives.store_v'('type.semanticPrimitives.store_v'(sK2)),'const.semanticPrimitives.Refv_1'(s('type.semanticPrimitives.store_v'(sK2),sK3))) != s('type.semanticPrimitives.store_v'('type.semanticPrimitives.store_v'(sK2)),'const.semanticPrimitives.Refv_1'(s('type.semanticPrimitives.store_v'(sK2),X19))) | s('type.semanticPrimitives.store_v'(sK2),X19) = s('type.semanticPrimitives.store_v'(sK2),'const.semanticPrimitives.Varray_1'(s('type.list.list'(sK2),sK8(X19,sK2)))) | s('type.semanticPrimitives.store_v'(sK2),X19) = s('type.semanticPrimitives.store_v'(sK2),'const.semanticPrimitives.W8array_1'(s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),sK7(X19,sK2))))) )),
  inference(forward_demodulation,[],[f146,f84])).
fof(f146,plain,(
  ( ! [X19] : (s('type.semanticPrimitives.store_v'(sK0),'const.semanticPrimitives.Refv_1'(s(sK0,'const.combin.o_3'(s(fun(sK1,sK0),sK5),s(fun(sK2,sK1),sK4),s(sK2,sK6(X19,sK2)))))) != s('type.semanticPrimitives.store_v'(sK0),'const.evalProps.map_sv_2'(s(fun(sK1,sK0),sK5),s('type.semanticPrimitives.store_v'(sK1),'const.evalProps.map_sv_2'(s(fun(sK2,sK1),sK4),s('type.semanticPrimitives.store_v'(sK2),'const.semanticPrimitives.Refv_1'(s(sK2,sK6(X19,sK2)))))))) | s('type.semanticPrimitives.store_v'('type.semanticPrimitives.store_v'(sK2)),'const.semanticPrimitives.Refv_1'(s('type.semanticPrimitives.store_v'(sK2),sK3))) != s('type.semanticPrimitives.store_v'('type.semanticPrimitives.store_v'(sK2)),'const.semanticPrimitives.Refv_1'(s('type.semanticPrimitives.store_v'(sK2),X19))) | s('type.semanticPrimitives.store_v'(sK2),X19) = s('type.semanticPrimitives.store_v'(sK2),'const.semanticPrimitives.Varray_1'(s('type.list.list'(sK2),sK8(X19,sK2)))) | s('type.semanticPrimitives.store_v'(sK2),X19) = s('type.semanticPrimitives.store_v'(sK2),'const.semanticPrimitives.W8array_1'(s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),sK7(X19,sK2))))) )),
  inference(forward_demodulation,[],[f145,f80])).
fof(f80,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s(X0,'const.combin.o_3'(s(fun(X1,X0),X3),s(fun(X2,X1),X4),s(X2,X5))) = s(X0,happ(s(fun(X2,X0),'const.combin.o_2'(s(fun(X1,X0),X3),s(fun(X2,X1),X4))),s(X2,X5)))) )),
  inference(cnf_transformation,[],[f37])).
fof(f37,plain,(
  ! [X0,X1,X2,X3,X4,X5] : s(X0,'const.combin.o_3'(s(fun(X1,X0),X3),s(fun(X2,X1),X4),s(X2,X5))) = s(X0,happ(s(fun(X2,X0),'const.combin.o_2'(s(fun(X1,X0),X3),s(fun(X2,X1),X4))),s(X2,X5)))),
  inference(flattening,[],[f36])).
fof(f36,plain,(
  ! [X0,X1,X2] : ! [X3,X4,X5] : s(X0,'const.combin.o_3'(s(fun(X1,X0),X3),s(fun(X2,X1),X4),s(X2,X5))) = s(X0,happ(s(fun(X2,X0),'const.combin.o_2'(s(fun(X1,X0),X3),s(fun(X2,X1),X4))),s(X2,X5)))),
  inference(rectify,[],[f22])).
fof(f22,axiom,(
  ! [X7,X8,X6] : ! [X21,X22,X23] : s(X7,'const.combin.o_3'(s(fun(X8,X7),X21),s(fun(X6,X8),X22),s(X6,X23))) = s(X7,happ(s(fun(X6,X7),'const.combin.o_2'(s(fun(X8,X7),X21),s(fun(X6,X8),X22))),s(X6,X23)))),
  file('thm.evalProps.map_sv_compose','ARITY_2_3_const.combin.o')).
fof(f145,plain,(
  ( ! [X19] : (s('type.semanticPrimitives.store_v'(sK0),'const.evalProps.map_sv_2'(s(fun(sK1,sK0),sK5),s('type.semanticPrimitives.store_v'(sK1),'const.evalProps.map_sv_2'(s(fun(sK2,sK1),sK4),s('type.semanticPrimitives.store_v'(sK2),'const.semanticPrimitives.Refv_1'(s(sK2,sK6(X19,sK2)))))))) != s('type.semanticPrimitives.store_v'(sK0),'const.semanticPrimitives.Refv_1'(s(sK0,happ(s(fun(sK2,sK0),'const.combin.o_2'(s(fun(sK1,sK0),sK5),s(fun(sK2,sK1),sK4))),s(sK2,sK6(X19,sK2)))))) | s('type.semanticPrimitives.store_v'('type.semanticPrimitives.store_v'(sK2)),'const.semanticPrimitives.Refv_1'(s('type.semanticPrimitives.store_v'(sK2),sK3))) != s('type.semanticPrimitives.store_v'('type.semanticPrimitives.store_v'(sK2)),'const.semanticPrimitives.Refv_1'(s('type.semanticPrimitives.store_v'(sK2),X19))) | s('type.semanticPrimitives.store_v'(sK2),X19) = s('type.semanticPrimitives.store_v'(sK2),'const.semanticPrimitives.Varray_1'(s('type.list.list'(sK2),sK8(X19,sK2)))) | s('type.semanticPrimitives.store_v'(sK2),X19) = s('type.semanticPrimitives.store_v'(sK2),'const.semanticPrimitives.W8array_1'(s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),sK7(X19,sK2))))) )),
  inference(forward_demodulation,[],[f118,f84])).
fof(f118,plain,(
  ( ! [X19] : (s('type.semanticPrimitives.store_v'('type.semanticPrimitives.store_v'(sK2)),'const.semanticPrimitives.Refv_1'(s('type.semanticPrimitives.store_v'(sK2),sK3))) != s('type.semanticPrimitives.store_v'('type.semanticPrimitives.store_v'(sK2)),'const.semanticPrimitives.Refv_1'(s('type.semanticPrimitives.store_v'(sK2),X19))) | s('type.semanticPrimitives.store_v'(sK0),'const.evalProps.map_sv_2'(s(fun(sK1,sK0),sK5),s('type.semanticPrimitives.store_v'(sK1),'const.evalProps.map_sv_2'(s(fun(sK2,sK1),sK4),s('type.semanticPrimitives.store_v'(sK2),'const.semanticPrimitives.Refv_1'(s(sK2,sK6(X19,sK2)))))))) != s('type.semanticPrimitives.store_v'(sK0),'const.evalProps.map_sv_2'(s(fun(sK2,sK0),'const.combin.o_2'(s(fun(sK1,sK0),sK5),s(fun(sK2,sK1),sK4))),s('type.semanticPrimitives.store_v'(sK2),'const.semanticPrimitives.Refv_1'(s(sK2,sK6(X19,sK2)))))) | s('type.semanticPrimitives.store_v'(sK2),X19) = s('type.semanticPrimitives.store_v'(sK2),'const.semanticPrimitives.Varray_1'(s('type.list.list'(sK2),sK8(X19,sK2)))) | s('type.semanticPrimitives.store_v'(sK2),X19) = s('type.semanticPrimitives.store_v'(sK2),'const.semanticPrimitives.W8array_1'(s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),sK7(X19,sK2))))) )),
  inference(superposition,[],[f102,f94])).
fof(f94,plain,(
  ( ! [X0,X1] : (s('type.semanticPrimitives.store_v'(X0),X1) = s('type.semanticPrimitives.store_v'(X0),'const.semanticPrimitives.Varray_1'(s('type.list.list'(X0),sK8(X1,X0)))) | s('type.semanticPrimitives.store_v'(X0),X1) = s('type.semanticPrimitives.store_v'(X0),'const.semanticPrimitives.W8array_1'(s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),sK7(X1,X0)))) | s('type.semanticPrimitives.store_v'(X0),X1) = s('type.semanticPrimitives.store_v'(X0),'const.semanticPrimitives.Refv_1'(s(X0,sK6(X1,X0))))) )),
  inference(cnf_transformation,[],[f66])).
fof(f66,plain,(
  ! [X0,X1] : (s('type.semanticPrimitives.store_v'(X0),X1) = s('type.semanticPrimitives.store_v'(X0),'const.semanticPrimitives.Refv_1'(s(X0,sK6(X1,X0)))) | s('type.semanticPrimitives.store_v'(X0),X1) = s('type.semanticPrimitives.store_v'(X0),'const.semanticPrimitives.W8array_1'(s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),sK7(X1,X0)))) | s('type.semanticPrimitives.store_v'(X0),X1) = s('type.semanticPrimitives.store_v'(X0),'const.semanticPrimitives.Varray_1'(s('type.list.list'(X0),sK8(X1,X0)))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK6,sK7,sK8])],[f55])).
fof(f55,plain,(
  ! [X0,X1] : (? [X4] : s('type.semanticPrimitives.store_v'(X0),X1) = s('type.semanticPrimitives.store_v'(X0),'const.semanticPrimitives.Refv_1'(s(X0,X4))) | ? [X3] : s('type.semanticPrimitives.store_v'(X0),X1) = s('type.semanticPrimitives.store_v'(X0),'const.semanticPrimitives.W8array_1'(s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X3))) | ? [X2] : s('type.semanticPrimitives.store_v'(X0),X1) = s('type.semanticPrimitives.store_v'(X0),'const.semanticPrimitives.Varray_1'(s('type.list.list'(X0),X2))))),
  inference(flattening,[],[f54])).
fof(f54,plain,(
  ! [X0] : ! [X1] : (? [X4] : s('type.semanticPrimitives.store_v'(X0),X1) = s('type.semanticPrimitives.store_v'(X0),'const.semanticPrimitives.Refv_1'(s(X0,X4))) | ? [X3] : s('type.semanticPrimitives.store_v'(X0),X1) = s('type.semanticPrimitives.store_v'(X0),'const.semanticPrimitives.W8array_1'(s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X3))) | ? [X2] : s('type.semanticPrimitives.store_v'(X0),X1) = s('type.semanticPrimitives.store_v'(X0),'const.semanticPrimitives.Varray_1'(s('type.list.list'(X0),X2))))),
  inference(rectify,[],[f21])).
fof(f21,axiom,(
  ! [X6] : ! [X20] : (? [X18] : s('type.semanticPrimitives.store_v'(X6),X20) = s('type.semanticPrimitives.store_v'(X6),'const.semanticPrimitives.Refv_1'(s(X6,X18))) | ? [X17] : s('type.semanticPrimitives.store_v'(X6),X20) = s('type.semanticPrimitives.store_v'(X6),'const.semanticPrimitives.W8array_1'(s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X17))) | ? [X17] : s('type.semanticPrimitives.store_v'(X6),X20) = s('type.semanticPrimitives.store_v'(X6),'const.semanticPrimitives.Varray_1'(s('type.list.list'(X6),X17))))),
  file('thm.evalProps.map_sv_compose','thm.semanticPrimitives.store_v_nchotomy')).
fof(f7518,plain,(
  ( ! [X0] : (s('type.semanticPrimitives.store_v'('type.semanticPrimitives.store_v'(sK2)),'const.semanticPrimitives.Refv_1'(s('type.semanticPrimitives.store_v'(sK2),sK3))) != s('type.semanticPrimitives.store_v'('type.semanticPrimitives.store_v'(sK2)),'const.semanticPrimitives.Refv_1'(s('type.semanticPrimitives.store_v'(sK2),'const.semanticPrimitives.Varray_1'(s('type.list.list'(sK2),X0)))))) )),
  inference(equality_resolution,[],[f2918])).
fof(f2918,plain,(
  ( ! [X2,X3] : (s('type.semanticPrimitives.store_v'('type.semanticPrimitives.store_v'('type.semanticPrimitives.store_v'(sK2))),'const.semanticPrimitives.Refv_1'(s('type.semanticPrimitives.store_v'('type.semanticPrimitives.store_v'(sK2)),X3))) != s('type.semanticPrimitives.store_v'('type.semanticPrimitives.store_v'('type.semanticPrimitives.store_v'(sK2))),'const.semanticPrimitives.Refv_1'(s('type.semanticPrimitives.store_v'('type.semanticPrimitives.store_v'(sK2)),'const.semanticPrimitives.Refv_1'(s('type.semanticPrimitives.store_v'(sK2),sK3))))) | s('type.semanticPrimitives.store_v'('type.semanticPrimitives.store_v'(sK2)),X3) != s('type.semanticPrimitives.store_v'('type.semanticPrimitives.store_v'(sK2)),'const.semanticPrimitives.Refv_1'(s('type.semanticPrimitives.store_v'(sK2),'const.semanticPrimitives.Varray_1'(s('type.list.list'(sK2),X2)))))) )),
  inference(subsumption_resolution,[],[f2917,f82])).
fof(f82,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.semanticPrimitives.store_v'(X0),'const.evalProps.map_sv_2'(s(fun(X1,X0),X2),s('type.semanticPrimitives.store_v'(X1),'const.semanticPrimitives.Varray_1'(s('type.list.list'(X1),X3))))) = s('type.semanticPrimitives.store_v'(X0),'const.semanticPrimitives.Varray_1'(s('type.list.list'(X0),'const.list.MAP_2'(s(fun(X1,X0),X2),s('type.list.list'(X1),X3)))))) )),
  inference(cnf_transformation,[],[f41])).
fof(f41,plain,(
  ! [X0,X1,X2,X3] : s('type.semanticPrimitives.store_v'(X0),'const.evalProps.map_sv_2'(s(fun(X1,X0),X2),s('type.semanticPrimitives.store_v'(X1),'const.semanticPrimitives.Varray_1'(s('type.list.list'(X1),X3))))) = s('type.semanticPrimitives.store_v'(X0),'const.semanticPrimitives.Varray_1'(s('type.list.list'(X0),'const.list.MAP_2'(s(fun(X1,X0),X2),s('type.list.list'(X1),X3)))))),
  inference(flattening,[],[f40])).
fof(f40,plain,(
  ! [X0,X1] : ! [X2,X3] : s('type.semanticPrimitives.store_v'(X0),'const.evalProps.map_sv_2'(s(fun(X1,X0),X2),s('type.semanticPrimitives.store_v'(X1),'const.semanticPrimitives.Varray_1'(s('type.list.list'(X1),X3))))) = s('type.semanticPrimitives.store_v'(X0),'const.semanticPrimitives.Varray_1'(s('type.list.list'(X0),'const.list.MAP_2'(s(fun(X1,X0),X2),s('type.list.list'(X1),X3)))))),
  inference(rectify,[],[f16])).
fof(f16,axiom,(
  ! [X6,X7] : ! [X11,X16] : s('type.semanticPrimitives.store_v'(X6),'const.evalProps.map_sv_2'(s(fun(X7,X6),X11),s('type.semanticPrimitives.store_v'(X7),'const.semanticPrimitives.Varray_1'(s('type.list.list'(X7),X16))))) = s('type.semanticPrimitives.store_v'(X6),'const.semanticPrimitives.Varray_1'(s('type.list.list'(X6),'const.list.MAP_2'(s(fun(X7,X6),X11),s('type.list.list'(X7),X16)))))),
  file('thm.evalProps.map_sv_compose','thm.evalProps.map_sv_def|split|2')).
fof(f2917,plain,(
  ( ! [X2,X3] : (s('type.semanticPrimitives.store_v'(sK0),'const.evalProps.map_sv_2'(s(fun(sK1,sK0),sK5),s('type.semanticPrimitives.store_v'(sK1),'const.semanticPrimitives.Varray_1'(s('type.list.list'(sK1),'const.list.MAP_2'(s(fun(sK2,sK1),sK4),s('type.list.list'(sK2),X2))))))) != s('type.semanticPrimitives.store_v'(sK0),'const.semanticPrimitives.Varray_1'(s('type.list.list'(sK0),'const.list.MAP_2'(s(fun(sK1,sK0),sK5),s('type.list.list'(sK1),'const.list.MAP_2'(s(fun(sK2,sK1),sK4),s('type.list.list'(sK2),X2))))))) | s('type.semanticPrimitives.store_v'('type.semanticPrimitives.store_v'(sK2)),X3) != s('type.semanticPrimitives.store_v'('type.semanticPrimitives.store_v'(sK2)),'const.semanticPrimitives.Refv_1'(s('type.semanticPrimitives.store_v'(sK2),'const.semanticPrimitives.Varray_1'(s('type.list.list'(sK2),X2))))) | s('type.semanticPrimitives.store_v'('type.semanticPrimitives.store_v'('type.semanticPrimitives.store_v'(sK2))),'const.semanticPrimitives.Refv_1'(s('type.semanticPrimitives.store_v'('type.semanticPrimitives.store_v'(sK2)),X3))) != s('type.semanticPrimitives.store_v'('type.semanticPrimitives.store_v'('type.semanticPrimitives.store_v'(sK2))),'const.semanticPrimitives.Refv_1'(s('type.semanticPrimitives.store_v'('type.semanticPrimitives.store_v'(sK2)),'const.semanticPrimitives.Refv_1'(s('type.semanticPrimitives.store_v'(sK2),sK3)))))) )),
  inference(forward_demodulation,[],[f2916,f82])).
fof(f2916,plain,(
  ( ! [X2,X3] : (s('type.semanticPrimitives.store_v'(sK0),'const.evalProps.map_sv_2'(s(fun(sK1,sK0),sK5),s('type.semanticPrimitives.store_v'(sK1),'const.evalProps.map_sv_2'(s(fun(sK2,sK1),sK4),s('type.semanticPrimitives.store_v'(sK2),'const.semanticPrimitives.Varray_1'(s('type.list.list'(sK2),X2))))))) != s('type.semanticPrimitives.store_v'(sK0),'const.semanticPrimitives.Varray_1'(s('type.list.list'(sK0),'const.list.MAP_2'(s(fun(sK1,sK0),sK5),s('type.list.list'(sK1),'const.list.MAP_2'(s(fun(sK2,sK1),sK4),s('type.list.list'(sK2),X2))))))) | s('type.semanticPrimitives.store_v'('type.semanticPrimitives.store_v'(sK2)),X3) != s('type.semanticPrimitives.store_v'('type.semanticPrimitives.store_v'(sK2)),'const.semanticPrimitives.Refv_1'(s('type.semanticPrimitives.store_v'(sK2),'const.semanticPrimitives.Varray_1'(s('type.list.list'(sK2),X2))))) | s('type.semanticPrimitives.store_v'('type.semanticPrimitives.store_v'('type.semanticPrimitives.store_v'(sK2))),'const.semanticPrimitives.Refv_1'(s('type.semanticPrimitives.store_v'('type.semanticPrimitives.store_v'(sK2)),X3))) != s('type.semanticPrimitives.store_v'('type.semanticPrimitives.store_v'('type.semanticPrimitives.store_v'(sK2))),'const.semanticPrimitives.Refv_1'(s('type.semanticPrimitives.store_v'('type.semanticPrimitives.store_v'(sK2)),'const.semanticPrimitives.Refv_1'(s('type.semanticPrimitives.store_v'(sK2),sK3)))))) )),
  inference(forward_demodulation,[],[f2877,f79])).
fof(f79,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s('type.list.list'(X0),'const.list.MAP_2'(s(fun(X1,X0),X3),s('type.list.list'(X1),'const.list.MAP_2'(s(fun(X2,X1),X4),s('type.list.list'(X2),X5))))) = s('type.list.list'(X0),'const.list.MAP_2'(s(fun(X2,X0),'const.combin.o_2'(s(fun(X1,X0),X3),s(fun(X2,X1),X4))),s('type.list.list'(X2),X5)))) )),
  inference(cnf_transformation,[],[f35])).
fof(f35,plain,(
  ! [X0,X1,X2,X3,X4,X5] : s('type.list.list'(X0),'const.list.MAP_2'(s(fun(X1,X0),X3),s('type.list.list'(X1),'const.list.MAP_2'(s(fun(X2,X1),X4),s('type.list.list'(X2),X5))))) = s('type.list.list'(X0),'const.list.MAP_2'(s(fun(X2,X0),'const.combin.o_2'(s(fun(X1,X0),X3),s(fun(X2,X1),X4))),s('type.list.list'(X2),X5)))),
  inference(flattening,[],[f34])).
fof(f34,plain,(
  ! [X0,X1,X2] : ! [X3,X4,X5] : s('type.list.list'(X0),'const.list.MAP_2'(s(fun(X1,X0),X3),s('type.list.list'(X1),'const.list.MAP_2'(s(fun(X2,X1),X4),s('type.list.list'(X2),X5))))) = s('type.list.list'(X0),'const.list.MAP_2'(s(fun(X2,X0),'const.combin.o_2'(s(fun(X1,X0),X3),s(fun(X2,X1),X4))),s('type.list.list'(X2),X5)))),
  inference(rectify,[],[f17])).
fof(f17,axiom,(
  ! [X8,X7,X6] : ! [X11,X10,X17] : s('type.list.list'(X8),'const.list.MAP_2'(s(fun(X7,X8),X11),s('type.list.list'(X7),'const.list.MAP_2'(s(fun(X6,X7),X10),s('type.list.list'(X6),X17))))) = s('type.list.list'(X8),'const.list.MAP_2'(s(fun(X6,X8),'const.combin.o_2'(s(fun(X7,X8),X11),s(fun(X6,X7),X10))),s('type.list.list'(X6),X17)))),
  file('thm.evalProps.map_sv_compose','thm.list.MAP_MAP_o')).
fof(f2877,plain,(
  ( ! [X2,X3] : (s('type.semanticPrimitives.store_v'(sK0),'const.evalProps.map_sv_2'(s(fun(sK1,sK0),sK5),s('type.semanticPrimitives.store_v'(sK1),'const.evalProps.map_sv_2'(s(fun(sK2,sK1),sK4),s('type.semanticPrimitives.store_v'(sK2),'const.semanticPrimitives.Varray_1'(s('type.list.list'(sK2),X2))))))) != s('type.semanticPrimitives.store_v'(sK0),'const.semanticPrimitives.Varray_1'(s('type.list.list'(sK0),'const.list.MAP_2'(s(fun(sK2,sK0),'const.combin.o_2'(s(fun(sK1,sK0),sK5),s(fun(sK2,sK1),sK4))),s('type.list.list'(sK2),X2))))) | s('type.semanticPrimitives.store_v'('type.semanticPrimitives.store_v'(sK2)),X3) != s('type.semanticPrimitives.store_v'('type.semanticPrimitives.store_v'(sK2)),'const.semanticPrimitives.Refv_1'(s('type.semanticPrimitives.store_v'(sK2),'const.semanticPrimitives.Varray_1'(s('type.list.list'(sK2),X2))))) | s('type.semanticPrimitives.store_v'('type.semanticPrimitives.store_v'('type.semanticPrimitives.store_v'(sK2))),'const.semanticPrimitives.Refv_1'(s('type.semanticPrimitives.store_v'('type.semanticPrimitives.store_v'(sK2)),X3))) != s('type.semanticPrimitives.store_v'('type.semanticPrimitives.store_v'('type.semanticPrimitives.store_v'(sK2))),'const.semanticPrimitives.Refv_1'(s('type.semanticPrimitives.store_v'('type.semanticPrimitives.store_v'(sK2)),'const.semanticPrimitives.Refv_1'(s('type.semanticPrimitives.store_v'(sK2),sK3)))))) )),
  inference(superposition,[],[f110,f82])).
fof(f110,plain,(
  ( ! [X4,X5] : (s('type.semanticPrimitives.store_v'(sK0),'const.evalProps.map_sv_2'(s(fun(sK1,sK0),sK5),s('type.semanticPrimitives.store_v'(sK1),'const.evalProps.map_sv_2'(s(fun(sK2,sK1),sK4),s('type.semanticPrimitives.store_v'(sK2),X5))))) != s('type.semanticPrimitives.store_v'(sK0),'const.evalProps.map_sv_2'(s(fun(sK2,sK0),'const.combin.o_2'(s(fun(sK1,sK0),sK5),s(fun(sK2,sK1),sK4))),s('type.semanticPrimitives.store_v'(sK2),X5))) | s('type.semanticPrimitives.store_v'('type.semanticPrimitives.store_v'(sK2)),X4) != s('type.semanticPrimitives.store_v'('type.semanticPrimitives.store_v'(sK2)),'const.semanticPrimitives.Refv_1'(s('type.semanticPrimitives.store_v'(sK2),X5))) | s('type.semanticPrimitives.store_v'('type.semanticPrimitives.store_v'('type.semanticPrimitives.store_v'(sK2))),'const.semanticPrimitives.Refv_1'(s('type.semanticPrimitives.store_v'('type.semanticPrimitives.store_v'(sK2)),X4))) != s('type.semanticPrimitives.store_v'('type.semanticPrimitives.store_v'('type.semanticPrimitives.store_v'(sK2))),'const.semanticPrimitives.Refv_1'(s('type.semanticPrimitives.store_v'('type.semanticPrimitives.store_v'(sK2)),'const.semanticPrimitives.Refv_1'(s('type.semanticPrimitives.store_v'(sK2),sK3)))))) )),
  inference(superposition,[],[f102,f92])).
% SZS output end Proof for thm.evalProps
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 300
% Passive clauses: 4032
% Generated clauses: 8210
% Final active clauses: 95
% Final passive clauses: 1073
% Input formulas: 22
% Initial clauses: 28
% 
% Selected by SInE selection: 20
% SInE iterations: 1
% 
% Duplicate literals: 29
% Trivial inequalities: 346
% Fw subsumption resolutions: 170
% Fw demodulations: 1831
% Bw demodulations: 7
% 
% Simple tautologies: 86
% Equational tautologies: 1
% Forward subsumptions: 1811
% Fw demodulations to eq. taut.: 27
% 
% Binary resolution: 4
% Forward superposition: 4411
% Backward superposition: 996
% Equality resolution: 115
% 
% Split clauses: 56
% Split components: 128
% SAT solver clauses: 71
% SAT solver unit clauses: 4
% SAT solver binary clauses: 8
% 
% Sat splits: 56
% Sat splitting refutations: 14
% 
% Memory used [KB]: 4861
% Time elapsed: 0.596 s
% ------------------------------
% ------------------------------
% Success in time 12.41 s
