Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 150 next slice time: 5
dis+11_7_3 on thm.misc
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.misc
% SZS output start Proof for thm.misc
fof(f1044,plain,(
  $false),
  inference(subsumption_resolution,[],[f1038,f66])).
fof(f66,plain,(
  ~p(s(bool,'F_0'))),
  inference(cnf_transformation,[],[f21])).
fof(f21,plain,(
  ~p(s(bool,'F_0'))),
  inference(flattening,[],[f2])).
fof(f2,axiom,(
  ~p(s(bool,'F_0'))),
  file('thm.misc.IS_SUFFIX_CONS',aHL_FALSITY)).
fof(f1038,plain,(
  p(s(bool,'F_0'))),
  inference(superposition,[],[f1018,f174])).
fof(f174,plain,(
  s(bool,'F_0') = s(bool,'const.rich_list.IS_SUFFIX_2'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),sK1))),s('type.list.list'(sK0),sK2)))),
  inference(resolution,[],[f63,f73])).
fof(f73,plain,(
  ( ! [X0] : (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f51])).
fof(f51,plain,(
  ! [X0] : ((s(bool,'F_0') != s(bool,X0) | ~p(s(bool,X0))) & (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f25])).
fof(f25,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(flattening,[],[f24])).
fof(f24,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(rectify,[],[f12])).
fof(f12,axiom,(
  ! [X12] : (s(bool,'F_0') = s(bool,X12) <=> ~p(s(bool,X12)))),
  file('thm.misc.IS_SUFFIX_CONS','thm.bool.EQ_CLAUSES|split|3')).
fof(f63,plain,(
  ~p(s(bool,'const.rich_list.IS_SUFFIX_2'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),sK1))),s('type.list.list'(sK0),sK2))))),
  inference(cnf_transformation,[],[f48])).
fof(f48,plain,(
  p(s(bool,'const.rich_list.IS_SUFFIX_2'(s('type.list.list'(sK0),sK1),s('type.list.list'(sK0),sK2)))) & ~p(s(bool,'const.rich_list.IS_SUFFIX_2'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),sK1))),s('type.list.list'(sK0),sK2))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1,sK2,sK3])],[f42])).
fof(f42,plain,(
  ? [X0,X1,X2,X3] : (p(s(bool,'const.rich_list.IS_SUFFIX_2'(s('type.list.list'(X0),X1),s('type.list.list'(X0),X2)))) & ~p(s(bool,'const.rich_list.IS_SUFFIX_2'(s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),X1))),s('type.list.list'(X0),X2)))))),
  inference(ennf_transformation,[],[f20])).
fof(f20,plain,(
  ~! [X0,X1,X2,X3] : (p(s(bool,'const.rich_list.IS_SUFFIX_2'(s('type.list.list'(X0),X1),s('type.list.list'(X0),X2)))) => p(s(bool,'const.rich_list.IS_SUFFIX_2'(s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),X1))),s('type.list.list'(X0),X2)))))),
  inference(flattening,[],[f19])).
fof(f19,plain,(
  ~! [X0] : ! [X1,X2,X3] : (p(s(bool,'const.rich_list.IS_SUFFIX_2'(s('type.list.list'(X0),X1),s('type.list.list'(X0),X2)))) => p(s(bool,'const.rich_list.IS_SUFFIX_2'(s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),X1))),s('type.list.list'(X0),X2)))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : ! [X7,X8,X9] : (p(s(bool,'const.rich_list.IS_SUFFIX_2'(s('type.list.list'(X6),X7),s('type.list.list'(X6),X8)))) => p(s(bool,'const.rich_list.IS_SUFFIX_2'(s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X9),s('type.list.list'(X6),X7))),s('type.list.list'(X6),X8)))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : ! [X7,X8,X9] : (p(s(bool,'const.rich_list.IS_SUFFIX_2'(s('type.list.list'(X6),X7),s('type.list.list'(X6),X8)))) => p(s(bool,'const.rich_list.IS_SUFFIX_2'(s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X9),s('type.list.list'(X6),X7))),s('type.list.list'(X6),X8)))))),
  file('thm.misc.IS_SUFFIX_CONS','thm.misc.IS_SUFFIX_CONS')).
fof(f1018,plain,(
  ( ! [X20] : (p(s(bool,'const.rich_list.IS_SUFFIX_2'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X20),s('type.list.list'(sK0),sK1))),s('type.list.list'(sK0),sK2))))) )),
  inference(superposition,[],[f734,f500])).
fof(f500,plain,(
  s('type.list.list'(sK0),sK1) = s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),sK4(sK2,sK1,sK0)),s('type.list.list'(sK0),sK2)))),
  inference(subsumption_resolution,[],[f491,f64])).
fof(f64,plain,(
  p(s(bool,'T_0'))),
  inference(cnf_transformation,[],[f7])).
fof(f7,axiom,(
  p(s(bool,'T_0'))),
  file('thm.misc.IS_SUFFIX_CONS','thm.bool.TRUTH')).
fof(f491,plain,(
  ~p(s(bool,'T_0')) | s('type.list.list'(sK0),sK1) = s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),sK4(sK2,sK1,sK0)),s('type.list.list'(sK0),sK2)))),
  inference(superposition,[],[f79,f116])).
fof(f116,plain,(
  s(bool,'T_0') = s(bool,'const.rich_list.IS_SUFFIX_2'(s('type.list.list'(sK0),sK1),s('type.list.list'(sK0),sK2)))),
  inference(resolution,[],[f62,f69])).
fof(f69,plain,(
  ( ! [X0] : (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f49])).
fof(f49,plain,(
  ! [X0] : ((s(bool,'T_0') != s(bool,X0) | p(s(bool,X0))) & (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f22])).
fof(f22,plain,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) <=> p(s(bool,X0)))),
  inference(rectify,[],[f9])).
fof(f9,axiom,(
  ! [X12] : (s(bool,'T_0') = s(bool,X12) <=> p(s(bool,X12)))),
  file('thm.misc.IS_SUFFIX_CONS','thm.bool.EQ_CLAUSES|split|0')).
fof(f62,plain,(
  p(s(bool,'const.rich_list.IS_SUFFIX_2'(s('type.list.list'(sK0),sK1),s('type.list.list'(sK0),sK2))))),
  inference(cnf_transformation,[],[f48])).
fof(f79,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'const.rich_list.IS_SUFFIX_2'(s('type.list.list'(X0),X1),s('type.list.list'(X0),X2)))) | s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),sK4(X2,X1,X0)),s('type.list.list'(X0),X2)))) )),
  inference(cnf_transformation,[],[f56])).
fof(f56,plain,(
  ! [X0,X1,X2] : ((~p(s(bool,'const.rich_list.IS_SUFFIX_2'(s('type.list.list'(X0),X1),s('type.list.list'(X0),X2)))) | s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),sK4(X2,X1,X0)),s('type.list.list'(X0),X2)))) & (! [X3] : s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X3),s('type.list.list'(X0),X2))) | p(s(bool,'const.rich_list.IS_SUFFIX_2'(s('type.list.list'(X0),X1),s('type.list.list'(X0),X2))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK4])],[f55])).
fof(f55,plain,(
  ! [X0,X1,X2] : ((~p(s(bool,'const.rich_list.IS_SUFFIX_2'(s('type.list.list'(X0),X1),s('type.list.list'(X0),X2)))) | ? [X4] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X4),s('type.list.list'(X0),X2)))) & (! [X3] : s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X3),s('type.list.list'(X0),X2))) | p(s(bool,'const.rich_list.IS_SUFFIX_2'(s('type.list.list'(X0),X1),s('type.list.list'(X0),X2))))))),
  inference(rectify,[],[f54])).
fof(f54,plain,(
  ! [X0,X1,X2] : ((~p(s(bool,'const.rich_list.IS_SUFFIX_2'(s('type.list.list'(X0),X1),s('type.list.list'(X0),X2)))) | ? [X3] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X3),s('type.list.list'(X0),X2)))) & (! [X3] : s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X3),s('type.list.list'(X0),X2))) | p(s(bool,'const.rich_list.IS_SUFFIX_2'(s('type.list.list'(X0),X1),s('type.list.list'(X0),X2))))))),
  inference(nnf_transformation,[],[f33])).
fof(f33,plain,(
  ! [X0,X1,X2] : (p(s(bool,'const.rich_list.IS_SUFFIX_2'(s('type.list.list'(X0),X1),s('type.list.list'(X0),X2)))) <=> ? [X3] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X3),s('type.list.list'(X0),X2))))),
  inference(flattening,[],[f32])).
fof(f32,plain,(
  ! [X0] : ! [X1,X2] : (p(s(bool,'const.rich_list.IS_SUFFIX_2'(s('type.list.list'(X0),X1),s('type.list.list'(X0),X2)))) <=> ? [X3] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X3),s('type.list.list'(X0),X2))))),
  inference(rectify,[],[f18])).
fof(f18,axiom,(
  ! [X6] : ! [X7,X8] : (p(s(bool,'const.rich_list.IS_SUFFIX_2'(s('type.list.list'(X6),X7),s('type.list.list'(X6),X8)))) <=> ? [X18] : s('type.list.list'(X6),X7) = s('type.list.list'(X6),'const.list.APPEND_2'(s('type.list.list'(X6),X18),s('type.list.list'(X6),X8))))),
  file('thm.misc.IS_SUFFIX_CONS','thm.rich_list.IS_SUFFIX_APPEND')).
fof(f734,plain,(
  ( ! [X6,X4,X5,X3] : (p(s(bool,'const.rich_list.IS_SUFFIX_2'(s('type.list.list'(X3),'const.list.CONS_2'(s(X3,X4),s('type.list.list'(X3),'const.list.APPEND_2'(s('type.list.list'(X3),X5),s('type.list.list'(X3),X6))))),s('type.list.list'(X3),X6))))) )),
  inference(superposition,[],[f420,f81])).
fof(f81,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X1),s('type.list.list'(X0),X2))))) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),X1))),s('type.list.list'(X0),X2)))) )),
  inference(cnf_transformation,[],[f35])).
fof(f35,plain,(
  ! [X0,X1,X2,X3] : s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X1),s('type.list.list'(X0),X2))))) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),X1))),s('type.list.list'(X0),X2)))),
  inference(flattening,[],[f34])).
fof(f34,plain,(
  ! [X0] : ! [X1,X2,X3] : s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X1),s('type.list.list'(X0),X2))))) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),X1))),s('type.list.list'(X0),X2)))),
  inference(rectify,[],[f16])).
fof(f16,axiom,(
  ! [X6] : ! [X7,X8,X19] : s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X19),s('type.list.list'(X6),'const.list.APPEND_2'(s('type.list.list'(X6),X7),s('type.list.list'(X6),X8))))) = s('type.list.list'(X6),'const.list.APPEND_2'(s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X19),s('type.list.list'(X6),X7))),s('type.list.list'(X6),X8)))),
  file('thm.misc.IS_SUFFIX_CONS','thm.list.APPEND|split|1')).
fof(f420,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,'const.rich_list.IS_SUFFIX_2'(s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X1),s('type.list.list'(X0),X2))),s('type.list.list'(X0),X2))))) )),
  inference(equality_resolution,[],[f80])).
fof(f80,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X3),s('type.list.list'(X0),X2))) | p(s(bool,'const.rich_list.IS_SUFFIX_2'(s('type.list.list'(X0),X1),s('type.list.list'(X0),X2))))) )),
  inference(cnf_transformation,[],[f56])).
% SZS output end Proof for thm.misc
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 48
% Passive clauses: 191
% Generated clauses: 962
% Final active clauses: 40
% Final passive clauses: 113
% Input formulas: 17
% Initial clauses: 36
% 
% Duplicate literals: 63
% Trivial inequalities: 28
% Fw subsumption resolutions: 86
% Fw demodulations: 61
% Bw demodulations: 4
% 
% Simple tautologies: 61
% Equational tautologies: 15
% Forward subsumptions: 427
% Fw demodulations to eq. taut.: 2
% 
% Binary resolution: 58
% Forward superposition: 311
% Backward superposition: 230
% Self superposition: 32
% Equality factoring: 26
% Equality resolution: 13
% 
% Split clauses: 22
% Split components: 45
% SAT solver clauses: 50
% SAT solver unit clauses: 14
% SAT solver binary clauses: 25
% 
% Sat splits: 22
% Sat splitting refutations: 2
% 
% TWLsolver clauses: 50
% TWLsolver calls for satisfiability: 23
% 
% Memory used [KB]: 1407
% Time elapsed: 0.036 s
% ------------------------------
% ------------------------------
% Success in time 0.06 s
