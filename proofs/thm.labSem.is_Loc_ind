Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 150 next slice time: 5
dis+11_7_3 on thm.labSem
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.labSem
% SZS output start Proof for thm.labSem
fof(f1058,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f1039,f1007,f331,f1009,f1022,f603,f669])).
fof(f669,plain,(
  $false | $spl6),
  inference(trivial_inequality_removal,[],[f665])).
fof(f665,plain,(
  s(bool,'T_0') != s(bool,'T_0') | $spl6),
  inference(superposition,[],[f86,f603])).
fof(f86,plain,(
  s(bool,'T_0') != s(bool,happ(s(fun('type.wordSem.word_loc'(sK0),bool),sK1),s('type.wordSem.word_loc'(sK0),sK2)))),
  inference(resolution,[],[f57,f63])).
fof(f63,plain,(
  ( ! [X0] : (p(s(bool,X0)) | s(bool,'T_0') != s(bool,X0)) )),
  inference(cnf_transformation,[],[f45])).
fof(f45,plain,(
  ! [X0] : ((s(bool,'T_0') != s(bool,X0) | p(s(bool,X0))) & (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f21])).
fof(f21,plain,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) <=> p(s(bool,X0)))),
  inference(rectify,[],[f8])).
fof(f8,axiom,(
  ! [X11] : (s(bool,'T_0') = s(bool,X11) <=> p(s(bool,X11)))),
  file('thm.labSem.is_Loc_ind','thm.bool.EQ_CLAUSES|split|0')).
fof(f57,plain,(
  ~p(s(bool,happ(s(fun('type.wordSem.word_loc'(sK0),bool),sK1),s('type.wordSem.word_loc'(sK0),sK2))))),
  inference(cnf_transformation,[],[f44])).
fof(f44,plain,(
  ! [X4,X5] : p(s(bool,happ(s(fun('type.wordSem.word_loc'(sK0),bool),sK1),s('type.wordSem.word_loc'(sK0),'const.wordSem.Loc_2'(s('type.num.num',X4),s('type.num.num',X5)))))) & ! [X3] : p(s(bool,happ(s(fun('type.wordSem.word_loc'(sK0),bool),sK1),s('type.wordSem.word_loc'(sK0),'const.wordSem.Word_1'(s('type.fcp.cart'(bool,sK0),X3)))))) & ~p(s(bool,happ(s(fun('type.wordSem.word_loc'(sK0),bool),sK1),s('type.wordSem.word_loc'(sK0),sK2))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1,sK2])],[f43])).
fof(f43,plain,(
  ? [X0,X1] : (! [X4,X5] : p(s(bool,happ(s(fun('type.wordSem.word_loc'(X0),bool),X1),s('type.wordSem.word_loc'(X0),'const.wordSem.Loc_2'(s('type.num.num',X4),s('type.num.num',X5)))))) & ! [X3] : p(s(bool,happ(s(fun('type.wordSem.word_loc'(X0),bool),X1),s('type.wordSem.word_loc'(X0),'const.wordSem.Word_1'(s('type.fcp.cart'(bool,X0),X3)))))) & ? [X2] : ~p(s(bool,happ(s(fun('type.wordSem.word_loc'(X0),bool),X1),s('type.wordSem.word_loc'(X0),X2)))))),
  inference(rectify,[],[f38])).
fof(f38,plain,(
  ? [X0,X1] : (! [X3,X4] : p(s(bool,happ(s(fun('type.wordSem.word_loc'(X0),bool),X1),s('type.wordSem.word_loc'(X0),'const.wordSem.Loc_2'(s('type.num.num',X3),s('type.num.num',X4)))))) & ! [X2] : p(s(bool,happ(s(fun('type.wordSem.word_loc'(X0),bool),X1),s('type.wordSem.word_loc'(X0),'const.wordSem.Word_1'(s('type.fcp.cart'(bool,X0),X2)))))) & ? [X5] : ~p(s(bool,happ(s(fun('type.wordSem.word_loc'(X0),bool),X1),s('type.wordSem.word_loc'(X0),X5)))))),
  inference(flattening,[],[f37])).
fof(f37,plain,(
  ? [X0,X1] : ((! [X3,X4] : p(s(bool,happ(s(fun('type.wordSem.word_loc'(X0),bool),X1),s('type.wordSem.word_loc'(X0),'const.wordSem.Loc_2'(s('type.num.num',X3),s('type.num.num',X4)))))) & ! [X2] : p(s(bool,happ(s(fun('type.wordSem.word_loc'(X0),bool),X1),s('type.wordSem.word_loc'(X0),'const.wordSem.Word_1'(s('type.fcp.cart'(bool,X0),X2))))))) & ? [X5] : ~p(s(bool,happ(s(fun('type.wordSem.word_loc'(X0),bool),X1),s('type.wordSem.word_loc'(X0),X5)))))),
  inference(ennf_transformation,[],[f18])).
fof(f18,plain,(
  ~! [X0,X1] : ((! [X3,X4] : p(s(bool,happ(s(fun('type.wordSem.word_loc'(X0),bool),X1),s('type.wordSem.word_loc'(X0),'const.wordSem.Loc_2'(s('type.num.num',X3),s('type.num.num',X4)))))) & ! [X2] : p(s(bool,happ(s(fun('type.wordSem.word_loc'(X0),bool),X1),s('type.wordSem.word_loc'(X0),'const.wordSem.Word_1'(s('type.fcp.cart'(bool,X0),X2))))))) => ! [X5] : p(s(bool,happ(s(fun('type.wordSem.word_loc'(X0),bool),X1),s('type.wordSem.word_loc'(X0),X5)))))),
  inference(flattening,[],[f17])).
fof(f17,plain,(
  ~! [X0] : ! [X1] : ((! [X3,X4] : p(s(bool,happ(s(fun('type.wordSem.word_loc'(X0),bool),X1),s('type.wordSem.word_loc'(X0),'const.wordSem.Loc_2'(s('type.num.num',X3),s('type.num.num',X4)))))) & ! [X2] : p(s(bool,happ(s(fun('type.wordSem.word_loc'(X0),bool),X1),s('type.wordSem.word_loc'(X0),'const.wordSem.Word_1'(s('type.fcp.cart'(bool,X0),X2))))))) => ! [X5] : p(s(bool,happ(s(fun('type.wordSem.word_loc'(X0),bool),X1),s('type.wordSem.word_loc'(X0),X5)))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : ! [X7] : ((! [X8,X9] : p(s(bool,happ(s(fun('type.wordSem.word_loc'(X6),bool),X7),s('type.wordSem.word_loc'(X6),'const.wordSem.Loc_2'(s('type.num.num',X8),s('type.num.num',X9)))))) & ! [X10] : p(s(bool,happ(s(fun('type.wordSem.word_loc'(X6),bool),X7),s('type.wordSem.word_loc'(X6),'const.wordSem.Word_1'(s('type.fcp.cart'(bool,X6),X10))))))) => ! [X10] : p(s(bool,happ(s(fun('type.wordSem.word_loc'(X6),bool),X7),s('type.wordSem.word_loc'(X6),X10)))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : ! [X7] : ((! [X8,X9] : p(s(bool,happ(s(fun('type.wordSem.word_loc'(X6),bool),X7),s('type.wordSem.word_loc'(X6),'const.wordSem.Loc_2'(s('type.num.num',X8),s('type.num.num',X9)))))) & ! [X10] : p(s(bool,happ(s(fun('type.wordSem.word_loc'(X6),bool),X7),s('type.wordSem.word_loc'(X6),'const.wordSem.Word_1'(s('type.fcp.cart'(bool,X6),X10))))))) => ! [X10] : p(s(bool,happ(s(fun('type.wordSem.word_loc'(X6),bool),X7),s('type.wordSem.word_loc'(X6),X10)))))),
  file('thm.labSem.is_Loc_ind','thm.labSem.is_Loc_ind')).
fof(f603,plain,(
  ( ! [X15] : (s(bool,'T_0') = s(bool,X15)) ) | $spl6),
  inference(cnf_transformation,[],[f603_D])).
fof(f603_D,plain,(
  ( ! [X15] : (s(bool,'T_0') = s(bool,X15)) ) <=> ~$spl6),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl6])])).
fof(f1022,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,X0)) ) | $spl22),
  inference(subsumption_resolution,[],[f1016,f288])).
fof(f288,plain,(
  ( ! [X22] : (s(bool,X22) = s(bool,happ(s(fun('type.wordSem.word_loc'(sK0),bool),sK1),s('type.wordSem.word_loc'(sK0),sK2))) | s(bool,'T_0') = s(bool,X22)) )),
  inference(trivial_inequality_removal,[],[f255])).
fof(f255,plain,(
  ( ! [X22] : (s(bool,'T_0') != s(bool,'T_0') | s(bool,X22) = s(bool,happ(s(fun('type.wordSem.word_loc'(sK0),bool),sK1),s('type.wordSem.word_loc'(sK0),sK2))) | s(bool,'T_0') = s(bool,X22)) )),
  inference(superposition,[],[f86,f87])).
fof(f87,plain,(
  ( ! [X0,X1] : (s(bool,X0) = s(bool,X1) | s(bool,'T_0') = s(bool,X1) | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f62,f62])).
fof(f62,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f3])).
fof(f3,axiom,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) | s(bool,'F_0') = s(bool,X0))),
  file('thm.labSem.is_Loc_ind',aHL_BOOL_CASES)).
fof(f1016,plain,(
  ( ! [X0] : (s(bool,X0) != s(bool,happ(s(fun('type.wordSem.word_loc'(sK0),bool),sK1),s('type.wordSem.word_loc'(sK0),sK2))) | s(bool,'T_0') = s(bool,X0)) ) | $spl22),
  inference(superposition,[],[f134,f1009])).
fof(f134,plain,(
  ( ! [X6,X5] : (s(bool,X5) != s(bool,happ(s(fun('type.wordSem.word_loc'(sK0),bool),sK1),s('type.wordSem.word_loc'(sK0),'const.wordSem.Word_1'(s('type.fcp.cart'(bool,sK0),X6))))) | s(bool,'T_0') = s(bool,X5)) )),
  inference(resolution,[],[f89,f56])).
fof(f56,plain,(
  ( ! [X3] : (p(s(bool,happ(s(fun('type.wordSem.word_loc'(sK0),bool),sK1),s('type.wordSem.word_loc'(sK0),'const.wordSem.Word_1'(s('type.fcp.cart'(bool,sK0),X3))))))) )),
  inference(cnf_transformation,[],[f44])).
fof(f89,plain,(
  ( ! [X0,X1] : (~p(s(bool,X1)) | s(bool,X0) != s(bool,X1) | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f67,f62])).
fof(f67,plain,(
  ( ! [X0] : (s(bool,'F_0') != s(bool,X0) | ~p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f47])).
fof(f47,plain,(
  ! [X0] : ((s(bool,'F_0') != s(bool,X0) | ~p(s(bool,X0))) & (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f24])).
fof(f24,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(flattening,[],[f23])).
fof(f23,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(rectify,[],[f10])).
fof(f10,axiom,(
  ! [X11] : (s(bool,'F_0') = s(bool,X11) <=> ~p(s(bool,X11)))),
  file('thm.labSem.is_Loc_ind','thm.bool.EQ_CLAUSES|split|2')).
fof(f1009,plain,(
  s('type.wordSem.word_loc'(sK0),sK2) = s('type.wordSem.word_loc'(sK0),'const.wordSem.Word_1'(s('type.fcp.cart'(bool,sK0),sK3(sK2,sK0)))) | $spl22),
  inference(cnf_transformation,[],[f1009_D])).
fof(f1009_D,plain,(
  s('type.wordSem.word_loc'(sK0),sK2) = s('type.wordSem.word_loc'(sK0),'const.wordSem.Word_1'(s('type.fcp.cart'(bool,sK0),sK3(sK2,sK0)))) <=> ~$spl22),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl22])])).
fof(f331,plain,(
  ( ! [X23] : (p(s(bool,X23))) ) | $spl2),
  inference(cnf_transformation,[],[f331_D])).
fof(f331_D,plain,(
  ( ! [X23] : (p(s(bool,X23))) ) <=> ~$spl2),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl2])])).
fof(f1007,plain,(
  ( ! [X0] : (p(s(bool,X0)) | s('type.wordSem.word_loc'(sK0),sK2) = s('type.wordSem.word_loc'(sK0),'const.wordSem.Word_1'(s('type.fcp.cart'(bool,sK0),sK3(sK2,sK0))))) )),
  inference(subsumption_resolution,[],[f994,f63])).
fof(f994,plain,(
  ( ! [X0] : (p(s(bool,X0)) | s('type.wordSem.word_loc'(sK0),sK2) = s('type.wordSem.word_loc'(sK0),'const.wordSem.Word_1'(s('type.fcp.cart'(bool,sK0),sK3(sK2,sK0)))) | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f500,f288])).
fof(f500,plain,(
  ( ! [X0] : (p(s(bool,happ(s(fun('type.wordSem.word_loc'(sK0),bool),sK1),s('type.wordSem.word_loc'(sK0),X0)))) | s('type.wordSem.word_loc'(sK0),X0) = s('type.wordSem.word_loc'(sK0),'const.wordSem.Word_1'(s('type.fcp.cart'(bool,sK0),sK3(X0,sK0))))) )),
  inference(superposition,[],[f55,f72])).
fof(f72,plain,(
  ( ! [X0,X1] : (s('type.wordSem.word_loc'(X0),X1) = s('type.wordSem.word_loc'(X0),'const.wordSem.Loc_2'(s('type.num.num',sK4(X1,X0)),s('type.num.num',sK5(X1,X0)))) | s('type.wordSem.word_loc'(X0),X1) = s('type.wordSem.word_loc'(X0),'const.wordSem.Word_1'(s('type.fcp.cart'(bool,X0),sK3(X1,X0))))) )),
  inference(cnf_transformation,[],[f49])).
fof(f49,plain,(
  ! [X0,X1] : (s('type.wordSem.word_loc'(X0),X1) = s('type.wordSem.word_loc'(X0),'const.wordSem.Word_1'(s('type.fcp.cart'(bool,X0),sK3(X1,X0)))) | s('type.wordSem.word_loc'(X0),X1) = s('type.wordSem.word_loc'(X0),'const.wordSem.Loc_2'(s('type.num.num',sK4(X1,X0)),s('type.num.num',sK5(X1,X0)))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK3,sK4,sK5])],[f30])).
fof(f30,plain,(
  ! [X0,X1] : (? [X4] : s('type.wordSem.word_loc'(X0),X1) = s('type.wordSem.word_loc'(X0),'const.wordSem.Word_1'(s('type.fcp.cart'(bool,X0),X4))) | ? [X2,X3] : s('type.wordSem.word_loc'(X0),X1) = s('type.wordSem.word_loc'(X0),'const.wordSem.Loc_2'(s('type.num.num',X2),s('type.num.num',X3))))),
  inference(flattening,[],[f29])).
fof(f29,plain,(
  ! [X0] : ! [X1] : (? [X4] : s('type.wordSem.word_loc'(X0),X1) = s('type.wordSem.word_loc'(X0),'const.wordSem.Word_1'(s('type.fcp.cart'(bool,X0),X4))) | ? [X2,X3] : s('type.wordSem.word_loc'(X0),X1) = s('type.wordSem.word_loc'(X0),'const.wordSem.Loc_2'(s('type.num.num',X2),s('type.num.num',X3))))),
  inference(rectify,[],[f15])).
fof(f15,axiom,(
  ! [X6] : ! [X16] : (? [X17] : s('type.wordSem.word_loc'(X6),X16) = s('type.wordSem.word_loc'(X6),'const.wordSem.Word_1'(s('type.fcp.cart'(bool,X6),X17))) | ? [X18,X19] : s('type.wordSem.word_loc'(X6),X16) = s('type.wordSem.word_loc'(X6),'const.wordSem.Loc_2'(s('type.num.num',X18),s('type.num.num',X19))))),
  file('thm.labSem.is_Loc_ind','thm.wordSem.word_loc_nchotomy')).
fof(f55,plain,(
  ( ! [X4,X5] : (p(s(bool,happ(s(fun('type.wordSem.word_loc'(sK0),bool),sK1),s('type.wordSem.word_loc'(sK0),'const.wordSem.Loc_2'(s('type.num.num',X4),s('type.num.num',X5))))))) )),
  inference(cnf_transformation,[],[f44])).
fof(f1039,plain,(
  $false | $spl2),
  inference(resolution,[],[f331,f60])).
fof(f60,plain,(
  ~p(s(bool,'F_0'))),
  inference(cnf_transformation,[],[f19])).
fof(f19,plain,(
  ~p(s(bool,'F_0'))),
  inference(flattening,[],[f2])).
fof(f2,axiom,(
  ~p(s(bool,'F_0'))),
  file('thm.labSem.is_Loc_ind',aHL_FALSITY)).
% SZS output end Proof for thm.labSem
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 46
% Passive clauses: 180
% Generated clauses: 971
% Final active clauses: 34
% Final passive clauses: 95
% Input formulas: 15
% Initial clauses: 23
% 
% Duplicate literals: 91
% Trivial inequalities: 27
% Fw subsumption resolutions: 87
% Fw demodulations: 44
% Bw demodulations: 10
% 
% Simple tautologies: 60
% Equational tautologies: 17
% Forward subsumptions: 466
% 
% Binary resolution: 44
% Forward superposition: 322
% Backward superposition: 240
% Self superposition: 26
% Equality factoring: 28
% Equality resolution: 11
% 
% Split clauses: 15
% Split components: 32
% SAT solver clauses: 33
% SAT solver unit clauses: 9
% SAT solver binary clauses: 21
% SAT solver learnt clauses: 1
% 
% Sat splits: 15
% Sat splitting refutations: 5
% 
% TWLsolver clauses: 31
% TWLsolver calls for satisfiability: 14
% 
% Memory used [KB]: 1151
% Time elapsed: 0.031 s
% ------------------------------
% ------------------------------
% Success in time 0.04 s
