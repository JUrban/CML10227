Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 149 next slice time: 5
dis+11_7_3 on thm.closProps
% (131842)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 160
% Passive clauses: 1289
% Generated clauses: 16458
% Final active clauses: 134
% Final passive clauses: 941
% Input formulas: 15
% Initial clauses: 31
% 
% Duplicate literals: 1058
% Trivial inequalities: 214
% Fw subsumption resolutions: 2423
% Fw demodulations: 1941
% Bw demodulations: 25
% 
% Simple tautologies: 420
% Equational tautologies: 42
% Forward subsumptions: 7252
% 
% Binary resolution: 264
% Forward superposition: 5037
% Backward superposition: 4980
% Self superposition: 169
% Equality factoring: 130
% Equality resolution: 40
% 
% Split clauses: 850
% Split components: 1780
% SAT solver clauses: 1346
% SAT solver unit clauses: 37
% SAT solver binary clauses: 302
% 
% Sat splits: 850
% Sat splitting refutations: 3
% 
% TWLsolver clauses: 1344
% TWLsolver calls for satisfiability: 149
% 
% Memory used [KB]: 11001
% Time elapsed: 0.600 s
% ------------------------------
% ------------------------------
% remaining time: 143 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.closProps
% (131873)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 155
% Passive clauses: 361
% Generated clauses: 10264
% Final active clauses: 131
% Final passive clauses: 166
% Input formulas: 15
% Initial clauses: 31
% 
% Duplicate literals: 773
% Trivial inequalities: 105
% Fw subsumption resolutions: 842
% Fw demodulations: 1097
% Bw demodulations: 58
% Condensations: 592
% 
% Simple tautologies: 262
% Equational tautologies: 47
% Forward subsumptions: 5437
% Bw demodulations to eq. taut.: 6
% 
% Binary resolution: 114
% Forward superposition: 4080
% Backward superposition: 3867
% Self superposition: 161
% Equality factoring: 142
% Equality resolution: 33
% 
% Split clauses: 127
% Split components: 263
% SAT solver clauses: 738
% SAT solver unit clauses: 43
% SAT solver binary clauses: 21
% 
% Sat splits: 127
% 
% TWLsolver clauses: 738
% TWLsolver calls for satisfiability: 747
% 
% Memory used [KB]: 15479
% Time elapsed: 0.700 s
% ------------------------------
% ------------------------------
% remaining time: 136 next slice time: 103
lrs+11_2_br=off:cond=on:fde=none:gs=on:gsaa=full_model:lwlo=on:nwc=2:sas=minisat:stl=30:ssfp=100000:ssfq=1.4:smm=sco:ssnc=none:sp=occurrence:urr=on_98 on thm.closProps
% (131904)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 473
% Passive clauses: 4966
% Generated clauses: 134943
% Final active clauses: 128
% Final passive clauses: 585
% Input formulas: 15
% Initial clauses: 31
% 
% Duplicate literals: 7765
% Trivial inequalities: 1148
% Fw subsumption resolutions: 11231
% Fw demodulations: 15393
% Bw demodulations: 3183
% Condensations: 17072
% Global subsumptions: 716
% 
% Simple tautologies: 1148
% Equational tautologies: 3263
% Forward subsumptions: 69615
% Fw demodulations to eq. taut.: 1
% Bw demodulations to eq. taut.: 160
% 
% Unit resulting resolution: 10666
% Forward superposition: 31291
% Backward superposition: 23208
% Self superposition: 872
% Equality factoring: 532
% Equality resolution: 78
% 
% Split clauses: 603
% Split components: 1219
% SAT solver clauses: 7760
% SAT solver unit clauses: 58
% SAT solver binary clauses: 664
% 
% Sat splits: 603
% Sat splitting refutations: 870
% 
% Memory used [KB]: 61662
% Time elapsed: 10.400 s
% ------------------------------
% ------------------------------
% remaining time: 32 next slice time: 32
dis+11_5_fde=none:nwc=1:sas=minisat:sd=1:ss=axioms:st=5.0:sos=all:sdd=large:sser=off:sfr=on:ssfp=100000:ssfq=2.0:ssnc=none_37 on thm.closProps
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.closProps
% SZS output start Proof for thm.closProps
fof(f2528,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f83,f122,f278,f98,f528,f592,f543,f657,f673,f658,f675,f688,f708,f709,f885,f724,f886,f674,f725,f903,f980,f921,f920,f1373,f1451,f1391,f1390,f1626,f1696,f1627,f1628,f1629,f1630,f1631,f1632,f1717,f1702,f1718,f1720,f1742,f1766,f1780,f1804,f1819,f1856,f1926,f1927,f1928,f1929,f1930,f1931,f1932,f1934,f1708,f1936,f1722,f1951,f1998,f2030,f1706,f2034,f1704,f2039,f1768,f1710,f2042,f2112,f2043,f2044,f2045,f2046,f2047,f2048,f2124,f2117,f2113,f2125,f2130,f2126,f2167,f2219,f1726,f2234,f2286,f2356,f99,f2357,f2359,f2360,f1698,f2361,f1714,f1712,f2362,f2363,f1700,f1716,f2365,f2123,f2121,f2119,f2115,f2358,f2367,f2136,f2134,f2132,f2128,f2368,f2384,f2432,f1724,f2437,f1806,f1728,f2455])).
fof(f2455,plain,(
  $false | $spl38),
  inference(subsumption_resolution,[],[f2438,f86])).
fof(f86,plain,(
  s(bool,'T_0') != s(bool,happ(s(fun('type.closSem.v',bool),sK0),s('type.closSem.v',sK1)))),
  inference(resolution,[],[f58,f74])).
fof(f74,plain,(
  ( ! [X0] : (p(s(bool,X0)) | s(bool,'T_0') != s(bool,X0)) )),
  inference(cnf_transformation,[],[f50])).
fof(f50,plain,(
  ! [X0] : ((s(bool,'T_0') != s(bool,X0) | p(s(bool,X0))) & (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f27])).
fof(f27,plain,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) <=> p(s(bool,X0)))),
  inference(rectify,[],[f8])).
fof(f8,axiom,(
  ! [X22] : (s(bool,'T_0') = s(bool,X22) <=> p(s(bool,X22)))),
  file('thm.closProps.is_closure_ind','thm.bool.EQ_CLAUSES|split|0')).
fof(f58,plain,(
  ~p(s(bool,happ(s(fun('type.closSem.v',bool),sK0),s('type.closSem.v',sK1))))),
  inference(cnf_transformation,[],[f41])).
fof(f41,plain,(
  ! [X12,X13,X14,X15,X16] : p(s(bool,happ(s(fun('type.closSem.v',bool),sK0),s('type.closSem.v','const.closSem.Closure_5'(s('type.option.option'('type.num.num'),X12),s('type.list.list'('type.closSem.v'),X13),s('type.list.list'('type.closSem.v'),X14),s('type.num.num',X15),s('type.closLang.exp',X16)))))) & ! [X7,X8,X9,X10,X11] : p(s(bool,happ(s(fun('type.closSem.v',bool),sK0),s('type.closSem.v','const.closSem.Recclosure_5'(s('type.option.option'('type.num.num'),X7),s('type.list.list'('type.closSem.v'),X8),s('type.list.list'('type.closSem.v'),X9),s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),X10),s('type.num.num',X11)))))) & ! [X6] : p(s(bool,happ(s(fun('type.closSem.v',bool),sK0),s('type.closSem.v','const.closSem.Number_1'(s('type.integer.int',X6)))))) & ! [X5] : p(s(bool,happ(s(fun('type.closSem.v',bool),sK0),s('type.closSem.v','const.closSem.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),X5)))))) & ! [X3,X4] : p(s(bool,happ(s(fun('type.closSem.v',bool),sK0),s('type.closSem.v','const.closSem.Block_2'(s('type.num.num',X3),s('type.list.list'('type.closSem.v'),X4)))))) & ! [X2] : p(s(bool,happ(s(fun('type.closSem.v',bool),sK0),s('type.closSem.v','const.closSem.RefPtr_1'(s('type.num.num',X2)))))) & ~p(s(bool,happ(s(fun('type.closSem.v',bool),sK0),s('type.closSem.v',sK1))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1])],[f40])).
fof(f40,plain,(
  ? [X0] : (! [X12,X13,X14,X15,X16] : p(s(bool,happ(s(fun('type.closSem.v',bool),X0),s('type.closSem.v','const.closSem.Closure_5'(s('type.option.option'('type.num.num'),X12),s('type.list.list'('type.closSem.v'),X13),s('type.list.list'('type.closSem.v'),X14),s('type.num.num',X15),s('type.closLang.exp',X16)))))) & ! [X7,X8,X9,X10,X11] : p(s(bool,happ(s(fun('type.closSem.v',bool),X0),s('type.closSem.v','const.closSem.Recclosure_5'(s('type.option.option'('type.num.num'),X7),s('type.list.list'('type.closSem.v'),X8),s('type.list.list'('type.closSem.v'),X9),s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),X10),s('type.num.num',X11)))))) & ! [X6] : p(s(bool,happ(s(fun('type.closSem.v',bool),X0),s('type.closSem.v','const.closSem.Number_1'(s('type.integer.int',X6)))))) & ! [X5] : p(s(bool,happ(s(fun('type.closSem.v',bool),X0),s('type.closSem.v','const.closSem.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),X5)))))) & ! [X3,X4] : p(s(bool,happ(s(fun('type.closSem.v',bool),X0),s('type.closSem.v','const.closSem.Block_2'(s('type.num.num',X3),s('type.list.list'('type.closSem.v'),X4)))))) & ! [X2] : p(s(bool,happ(s(fun('type.closSem.v',bool),X0),s('type.closSem.v','const.closSem.RefPtr_1'(s('type.num.num',X2)))))) & ? [X1] : ~p(s(bool,happ(s(fun('type.closSem.v',bool),X0),s('type.closSem.v',X1)))))),
  inference(rectify,[],[f35])).
fof(f35,plain,(
  ? [X0] : (! [X11,X12,X13,X14,X15] : p(s(bool,happ(s(fun('type.closSem.v',bool),X0),s('type.closSem.v','const.closSem.Closure_5'(s('type.option.option'('type.num.num'),X11),s('type.list.list'('type.closSem.v'),X12),s('type.list.list'('type.closSem.v'),X13),s('type.num.num',X14),s('type.closLang.exp',X15)))))) & ! [X6,X7,X8,X9,X10] : p(s(bool,happ(s(fun('type.closSem.v',bool),X0),s('type.closSem.v','const.closSem.Recclosure_5'(s('type.option.option'('type.num.num'),X6),s('type.list.list'('type.closSem.v'),X7),s('type.list.list'('type.closSem.v'),X8),s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),X9),s('type.num.num',X10)))))) & ! [X5] : p(s(bool,happ(s(fun('type.closSem.v',bool),X0),s('type.closSem.v','const.closSem.Number_1'(s('type.integer.int',X5)))))) & ! [X4] : p(s(bool,happ(s(fun('type.closSem.v',bool),X0),s('type.closSem.v','const.closSem.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),X4)))))) & ! [X2,X3] : p(s(bool,happ(s(fun('type.closSem.v',bool),X0),s('type.closSem.v','const.closSem.Block_2'(s('type.num.num',X2),s('type.list.list'('type.closSem.v'),X3)))))) & ! [X1] : p(s(bool,happ(s(fun('type.closSem.v',bool),X0),s('type.closSem.v','const.closSem.RefPtr_1'(s('type.num.num',X1)))))) & ? [X16] : ~p(s(bool,happ(s(fun('type.closSem.v',bool),X0),s('type.closSem.v',X16)))))),
  inference(flattening,[],[f34])).
fof(f34,plain,(
  ? [X0] : ((! [X11,X12,X13,X14,X15] : p(s(bool,happ(s(fun('type.closSem.v',bool),X0),s('type.closSem.v','const.closSem.Closure_5'(s('type.option.option'('type.num.num'),X11),s('type.list.list'('type.closSem.v'),X12),s('type.list.list'('type.closSem.v'),X13),s('type.num.num',X14),s('type.closLang.exp',X15)))))) & ! [X6,X7,X8,X9,X10] : p(s(bool,happ(s(fun('type.closSem.v',bool),X0),s('type.closSem.v','const.closSem.Recclosure_5'(s('type.option.option'('type.num.num'),X6),s('type.list.list'('type.closSem.v'),X7),s('type.list.list'('type.closSem.v'),X8),s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),X9),s('type.num.num',X10)))))) & ! [X5] : p(s(bool,happ(s(fun('type.closSem.v',bool),X0),s('type.closSem.v','const.closSem.Number_1'(s('type.integer.int',X5)))))) & ! [X4] : p(s(bool,happ(s(fun('type.closSem.v',bool),X0),s('type.closSem.v','const.closSem.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),X4)))))) & ! [X2,X3] : p(s(bool,happ(s(fun('type.closSem.v',bool),X0),s('type.closSem.v','const.closSem.Block_2'(s('type.num.num',X2),s('type.list.list'('type.closSem.v'),X3)))))) & ! [X1] : p(s(bool,happ(s(fun('type.closSem.v',bool),X0),s('type.closSem.v','const.closSem.RefPtr_1'(s('type.num.num',X1))))))) & ? [X16] : ~p(s(bool,happ(s(fun('type.closSem.v',bool),X0),s('type.closSem.v',X16)))))),
  inference(ennf_transformation,[],[f17])).
fof(f17,plain,(
  ~! [X0] : ((! [X11,X12,X13,X14,X15] : p(s(bool,happ(s(fun('type.closSem.v',bool),X0),s('type.closSem.v','const.closSem.Closure_5'(s('type.option.option'('type.num.num'),X11),s('type.list.list'('type.closSem.v'),X12),s('type.list.list'('type.closSem.v'),X13),s('type.num.num',X14),s('type.closLang.exp',X15)))))) & ! [X6,X7,X8,X9,X10] : p(s(bool,happ(s(fun('type.closSem.v',bool),X0),s('type.closSem.v','const.closSem.Recclosure_5'(s('type.option.option'('type.num.num'),X6),s('type.list.list'('type.closSem.v'),X7),s('type.list.list'('type.closSem.v'),X8),s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),X9),s('type.num.num',X10)))))) & ! [X5] : p(s(bool,happ(s(fun('type.closSem.v',bool),X0),s('type.closSem.v','const.closSem.Number_1'(s('type.integer.int',X5)))))) & ! [X4] : p(s(bool,happ(s(fun('type.closSem.v',bool),X0),s('type.closSem.v','const.closSem.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),X4)))))) & ! [X2,X3] : p(s(bool,happ(s(fun('type.closSem.v',bool),X0),s('type.closSem.v','const.closSem.Block_2'(s('type.num.num',X2),s('type.list.list'('type.closSem.v'),X3)))))) & ! [X1] : p(s(bool,happ(s(fun('type.closSem.v',bool),X0),s('type.closSem.v','const.closSem.RefPtr_1'(s('type.num.num',X1))))))) => ! [X16] : p(s(bool,happ(s(fun('type.closSem.v',bool),X0),s('type.closSem.v',X16)))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : ((! [X7,X8,X9,X10,X11] : p(s(bool,happ(s(fun('type.closSem.v',bool),X6),s('type.closSem.v','const.closSem.Closure_5'(s('type.option.option'('type.num.num'),X7),s('type.list.list'('type.closSem.v'),X8),s('type.list.list'('type.closSem.v'),X9),s('type.num.num',X10),s('type.closLang.exp',X11)))))) & ! [X12,X13,X14,X15,X16] : p(s(bool,happ(s(fun('type.closSem.v',bool),X6),s('type.closSem.v','const.closSem.Recclosure_5'(s('type.option.option'('type.num.num'),X12),s('type.list.list'('type.closSem.v'),X13),s('type.list.list'('type.closSem.v'),X14),s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),X15),s('type.num.num',X16)))))) & ! [X17] : p(s(bool,happ(s(fun('type.closSem.v',bool),X6),s('type.closSem.v','const.closSem.Number_1'(s('type.integer.int',X17)))))) & ! [X18] : p(s(bool,happ(s(fun('type.closSem.v',bool),X6),s('type.closSem.v','const.closSem.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),X18)))))) & ! [X19,X20] : p(s(bool,happ(s(fun('type.closSem.v',bool),X6),s('type.closSem.v','const.closSem.Block_2'(s('type.num.num',X19),s('type.list.list'('type.closSem.v'),X20)))))) & ! [X21] : p(s(bool,happ(s(fun('type.closSem.v',bool),X6),s('type.closSem.v','const.closSem.RefPtr_1'(s('type.num.num',X21))))))) => ! [X17] : p(s(bool,happ(s(fun('type.closSem.v',bool),X6),s('type.closSem.v',X17)))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : ((! [X7,X8,X9,X10,X11] : p(s(bool,happ(s(fun('type.closSem.v',bool),X6),s('type.closSem.v','const.closSem.Closure_5'(s('type.option.option'('type.num.num'),X7),s('type.list.list'('type.closSem.v'),X8),s('type.list.list'('type.closSem.v'),X9),s('type.num.num',X10),s('type.closLang.exp',X11)))))) & ! [X12,X13,X14,X15,X16] : p(s(bool,happ(s(fun('type.closSem.v',bool),X6),s('type.closSem.v','const.closSem.Recclosure_5'(s('type.option.option'('type.num.num'),X12),s('type.list.list'('type.closSem.v'),X13),s('type.list.list'('type.closSem.v'),X14),s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),X15),s('type.num.num',X16)))))) & ! [X17] : p(s(bool,happ(s(fun('type.closSem.v',bool),X6),s('type.closSem.v','const.closSem.Number_1'(s('type.integer.int',X17)))))) & ! [X18] : p(s(bool,happ(s(fun('type.closSem.v',bool),X6),s('type.closSem.v','const.closSem.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),X18)))))) & ! [X19,X20] : p(s(bool,happ(s(fun('type.closSem.v',bool),X6),s('type.closSem.v','const.closSem.Block_2'(s('type.num.num',X19),s('type.list.list'('type.closSem.v'),X20)))))) & ! [X21] : p(s(bool,happ(s(fun('type.closSem.v',bool),X6),s('type.closSem.v','const.closSem.RefPtr_1'(s('type.num.num',X21))))))) => ! [X17] : p(s(bool,happ(s(fun('type.closSem.v',bool),X6),s('type.closSem.v',X17)))))),
  file('thm.closProps.is_closure_ind','thm.closProps.is_closure_ind')).
fof(f2438,plain,(
  s(bool,'T_0') = s(bool,happ(s(fun('type.closSem.v',bool),sK0),s('type.closSem.v',sK1))) | $spl38),
  inference(superposition,[],[f364,f1710])).
fof(f364,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,happ(s(fun('type.closSem.v',bool),sK0),s('type.closSem.v','const.closSem.Closure_5'(s('type.option.option'('type.num.num'),X0),s('type.list.list'('type.closSem.v'),X1),s('type.list.list'('type.closSem.v'),X2),s('type.num.num',X3),s('type.closLang.exp',X4)))))) )),
  inference(resolution,[],[f52,f75])).
fof(f75,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f50])).
fof(f52,plain,(
  ( ! [X14,X12,X15,X13,X16] : (p(s(bool,happ(s(fun('type.closSem.v',bool),sK0),s('type.closSem.v','const.closSem.Closure_5'(s('type.option.option'('type.num.num'),X12),s('type.list.list'('type.closSem.v'),X13),s('type.list.list'('type.closSem.v'),X14),s('type.num.num',X15),s('type.closLang.exp',X16))))))) )),
  inference(cnf_transformation,[],[f41])).
fof(f1728,plain,(
  s('type.closSem.v',sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v')) = s('type.closSem.v','const.closSem.Closure_5'(s('type.option.option'('type.num.num'),sK22(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))),s('type.list.list'('type.closSem.v'),sK23(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))),s('type.list.list'('type.closSem.v'),sK24(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))),s('type.num.num',sK25(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))),s('type.closLang.exp',sK26(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))))) | $spl54),
  inference(cnf_transformation,[],[f1728_D])).
fof(f1728_D,plain,(
  s('type.closSem.v',sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v')) = s('type.closSem.v','const.closSem.Closure_5'(s('type.option.option'('type.num.num'),sK22(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))),s('type.list.list'('type.closSem.v'),sK23(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))),s('type.list.list'('type.closSem.v'),sK24(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))),s('type.num.num',sK25(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))),s('type.closLang.exp',sK26(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))))) <=> ~$spl54),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl54])])).
fof(f1806,plain,(
  s('type.closSem.v',sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v')) = s('type.closSem.v','const.closSem.Recclosure_5'(s('type.option.option'('type.num.num'),sK27(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))),s('type.list.list'('type.closSem.v'),sK28(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))),s('type.list.list'('type.closSem.v'),sK29(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))),s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),sK30(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))),s('type.num.num',sK31(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))))) | $spl58),
  inference(cnf_transformation,[],[f1806_D])).
fof(f1806_D,plain,(
  s('type.closSem.v',sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v')) = s('type.closSem.v','const.closSem.Recclosure_5'(s('type.option.option'('type.num.num'),sK27(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))),s('type.list.list'('type.closSem.v'),sK28(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))),s('type.list.list'('type.closSem.v'),sK29(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))),s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),sK30(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))),s('type.num.num',sK31(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))))) <=> ~$spl58),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl58])])).
fof(f2437,plain,(
  s('type.closSem.v',sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v')) = s('type.closSem.v','const.closSem.Recclosure_5'(s('type.option.option'('type.num.num'),sK27(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))),s('type.list.list'('type.closSem.v'),sK28(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))),s('type.list.list'('type.closSem.v'),sK29(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))),s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),sK30(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))),s('type.num.num',sK31(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))))) | s('type.closSem.v',sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v')) = s('type.closSem.v','const.closSem.Closure_5'(s('type.option.option'('type.num.num'),sK22(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))),s('type.list.list'('type.closSem.v'),sK23(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))),s('type.list.list'('type.closSem.v'),sK24(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))),s('type.num.num',sK25(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))),s('type.closLang.exp',sK26(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))))) | ($spl47 | $spl49 | $spl51 | $spl53)),
  inference(subsumption_resolution,[],[f2436,f1719])).
fof(f1719,plain,(
  s('type.closSem.v',sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v')) != s('type.closSem.v','const.closSem.Number_1'(s('type.integer.int',sK17(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))))) | $spl47),
  inference(cnf_transformation,[],[f1719_D])).
fof(f1719_D,plain,(
  s('type.closSem.v',sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v')) != s('type.closSem.v','const.closSem.Number_1'(s('type.integer.int',sK17(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))))) <=> ~$spl47),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl47])])).
fof(f2436,plain,(
  s('type.closSem.v',sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v')) = s('type.closSem.v','const.closSem.Recclosure_5'(s('type.option.option'('type.num.num'),sK27(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))),s('type.list.list'('type.closSem.v'),sK28(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))),s('type.list.list'('type.closSem.v'),sK29(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))),s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),sK30(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))),s('type.num.num',sK31(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))))) | s('type.closSem.v',sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v')) = s('type.closSem.v','const.closSem.Closure_5'(s('type.option.option'('type.num.num'),sK22(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))),s('type.list.list'('type.closSem.v'),sK23(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))),s('type.list.list'('type.closSem.v'),sK24(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))),s('type.num.num',sK25(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))),s('type.closLang.exp',sK26(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))))) | s('type.closSem.v',sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v')) = s('type.closSem.v','const.closSem.Number_1'(s('type.integer.int',sK17(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))))) | ($spl49 | $spl51 | $spl53)),
  inference(subsumption_resolution,[],[f2435,f1721])).
fof(f1721,plain,(
  s('type.closSem.v',sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v')) != s('type.closSem.v','const.closSem.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK18(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))))) | $spl49),
  inference(cnf_transformation,[],[f1721_D])).
fof(f1721_D,plain,(
  s('type.closSem.v',sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v')) != s('type.closSem.v','const.closSem.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK18(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))))) <=> ~$spl49),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl49])])).
fof(f2435,plain,(
  s('type.closSem.v',sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v')) = s('type.closSem.v','const.closSem.Recclosure_5'(s('type.option.option'('type.num.num'),sK27(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))),s('type.list.list'('type.closSem.v'),sK28(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))),s('type.list.list'('type.closSem.v'),sK29(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))),s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),sK30(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))),s('type.num.num',sK31(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))))) | s('type.closSem.v',sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v')) = s('type.closSem.v','const.closSem.Closure_5'(s('type.option.option'('type.num.num'),sK22(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))),s('type.list.list'('type.closSem.v'),sK23(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))),s('type.list.list'('type.closSem.v'),sK24(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))),s('type.num.num',sK25(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))),s('type.closLang.exp',sK26(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))))) | s('type.closSem.v',sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v')) = s('type.closSem.v','const.closSem.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK18(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))))) | s('type.closSem.v',sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v')) = s('type.closSem.v','const.closSem.Number_1'(s('type.integer.int',sK17(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))))) | ($spl51 | $spl53)),
  inference(subsumption_resolution,[],[f2434,f1725])).
fof(f1725,plain,(
  s('type.closSem.v',sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v')) != s('type.closSem.v','const.closSem.RefPtr_1'(s('type.num.num',sK21(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))))) | $spl53),
  inference(cnf_transformation,[],[f1725_D])).
fof(f1725_D,plain,(
  s('type.closSem.v',sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v')) != s('type.closSem.v','const.closSem.RefPtr_1'(s('type.num.num',sK21(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))))) <=> ~$spl53),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl53])])).
fof(f2434,plain,(
  s('type.closSem.v',sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v')) = s('type.closSem.v','const.closSem.Recclosure_5'(s('type.option.option'('type.num.num'),sK27(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))),s('type.list.list'('type.closSem.v'),sK28(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))),s('type.list.list'('type.closSem.v'),sK29(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))),s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),sK30(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))),s('type.num.num',sK31(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))))) | s('type.closSem.v',sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v')) = s('type.closSem.v','const.closSem.Closure_5'(s('type.option.option'('type.num.num'),sK22(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))),s('type.list.list'('type.closSem.v'),sK23(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))),s('type.list.list'('type.closSem.v'),sK24(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))),s('type.num.num',sK25(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))),s('type.closLang.exp',sK26(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))))) | s('type.closSem.v',sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v')) = s('type.closSem.v','const.closSem.RefPtr_1'(s('type.num.num',sK21(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))))) | s('type.closSem.v',sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v')) = s('type.closSem.v','const.closSem.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK18(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))))) | s('type.closSem.v',sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v')) = s('type.closSem.v','const.closSem.Number_1'(s('type.integer.int',sK17(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))))) | $spl51),
  inference(trivial_inequality_removal,[],[f2433])).
fof(f2433,plain,(
  s('type.closSem.v',sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v')) != s('type.closSem.v',sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v')) | s('type.closSem.v',sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v')) = s('type.closSem.v','const.closSem.Recclosure_5'(s('type.option.option'('type.num.num'),sK27(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))),s('type.list.list'('type.closSem.v'),sK28(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))),s('type.list.list'('type.closSem.v'),sK29(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))),s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),sK30(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))),s('type.num.num',sK31(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))))) | s('type.closSem.v',sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v')) = s('type.closSem.v','const.closSem.Closure_5'(s('type.option.option'('type.num.num'),sK22(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))),s('type.list.list'('type.closSem.v'),sK23(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))),s('type.list.list'('type.closSem.v'),sK24(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))),s('type.num.num',sK25(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))),s('type.closLang.exp',sK26(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))))) | s('type.closSem.v',sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v')) = s('type.closSem.v','const.closSem.RefPtr_1'(s('type.num.num',sK21(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))))) | s('type.closSem.v',sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v')) = s('type.closSem.v','const.closSem.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK18(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))))) | s('type.closSem.v',sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v')) = s('type.closSem.v','const.closSem.Number_1'(s('type.integer.int',sK17(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))))) | $spl51),
  inference(superposition,[],[f1723,f65])).
fof(f65,plain,(
  ( ! [X0] : (s('type.closSem.v',X0) = s('type.closSem.v','const.closSem.Recclosure_5'(s('type.option.option'('type.num.num'),sK27(X0)),s('type.list.list'('type.closSem.v'),sK28(X0)),s('type.list.list'('type.closSem.v'),sK29(X0)),s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),sK30(X0)),s('type.num.num',sK31(X0)))) | s('type.closSem.v',X0) = s('type.closSem.v','const.closSem.Closure_5'(s('type.option.option'('type.num.num'),sK22(X0)),s('type.list.list'('type.closSem.v'),sK23(X0)),s('type.list.list'('type.closSem.v'),sK24(X0)),s('type.num.num',sK25(X0)),s('type.closLang.exp',sK26(X0)))) | s('type.closSem.v',X0) = s('type.closSem.v','const.closSem.RefPtr_1'(s('type.num.num',sK21(X0)))) | s('type.closSem.v',X0) = s('type.closSem.v','const.closSem.Block_2'(s('type.num.num',sK19(X0)),s('type.list.list'('type.closSem.v'),sK20(X0)))) | s('type.closSem.v',X0) = s('type.closSem.v','const.closSem.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK18(X0)))) | s('type.closSem.v',X0) = s('type.closSem.v','const.closSem.Number_1'(s('type.integer.int',sK17(X0))))) )),
  inference(cnf_transformation,[],[f44])).
fof(f44,plain,(
  ! [X0] : (s('type.closSem.v',X0) = s('type.closSem.v','const.closSem.Number_1'(s('type.integer.int',sK17(X0)))) | s('type.closSem.v',X0) = s('type.closSem.v','const.closSem.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK18(X0)))) | s('type.closSem.v',X0) = s('type.closSem.v','const.closSem.Block_2'(s('type.num.num',sK19(X0)),s('type.list.list'('type.closSem.v'),sK20(X0)))) | s('type.closSem.v',X0) = s('type.closSem.v','const.closSem.RefPtr_1'(s('type.num.num',sK21(X0)))) | s('type.closSem.v',X0) = s('type.closSem.v','const.closSem.Closure_5'(s('type.option.option'('type.num.num'),sK22(X0)),s('type.list.list'('type.closSem.v'),sK23(X0)),s('type.list.list'('type.closSem.v'),sK24(X0)),s('type.num.num',sK25(X0)),s('type.closLang.exp',sK26(X0)))) | s('type.closSem.v',X0) = s('type.closSem.v','const.closSem.Recclosure_5'(s('type.option.option'('type.num.num'),sK27(X0)),s('type.list.list'('type.closSem.v'),sK28(X0)),s('type.list.list'('type.closSem.v'),sK29(X0)),s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),sK30(X0)),s('type.num.num',sK31(X0)))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK17,sK18,sK19,sK20,sK21,sK22,sK23,sK24,sK25,sK26,sK27,sK28,sK29,sK30,sK31])],[f19])).
fof(f19,plain,(
  ! [X0] : (? [X15] : s('type.closSem.v',X0) = s('type.closSem.v','const.closSem.Number_1'(s('type.integer.int',X15))) | ? [X14] : s('type.closSem.v',X0) = s('type.closSem.v','const.closSem.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),X14))) | ? [X12,X13] : s('type.closSem.v',X0) = s('type.closSem.v','const.closSem.Block_2'(s('type.num.num',X12),s('type.list.list'('type.closSem.v'),X13))) | ? [X11] : s('type.closSem.v',X0) = s('type.closSem.v','const.closSem.RefPtr_1'(s('type.num.num',X11))) | ? [X6,X7,X8,X9,X10] : s('type.closSem.v',X0) = s('type.closSem.v','const.closSem.Closure_5'(s('type.option.option'('type.num.num'),X6),s('type.list.list'('type.closSem.v'),X7),s('type.list.list'('type.closSem.v'),X8),s('type.num.num',X9),s('type.closLang.exp',X10))) | ? [X1,X2,X3,X4,X5] : s('type.closSem.v',X0) = s('type.closSem.v','const.closSem.Recclosure_5'(s('type.option.option'('type.num.num'),X1),s('type.list.list'('type.closSem.v'),X2),s('type.list.list'('type.closSem.v'),X3),s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),X4),s('type.num.num',X5))))),
  inference(rectify,[],[f13])).
fof(f13,axiom,(
  ! [X24] : (? [X25] : s('type.closSem.v',X24) = s('type.closSem.v','const.closSem.Number_1'(s('type.integer.int',X25))) | ? [X26] : s('type.closSem.v',X24) = s('type.closSem.v','const.closSem.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),X26))) | ? [X27,X28] : s('type.closSem.v',X24) = s('type.closSem.v','const.closSem.Block_2'(s('type.num.num',X27),s('type.list.list'('type.closSem.v'),X28))) | ? [X27] : s('type.closSem.v',X24) = s('type.closSem.v','const.closSem.RefPtr_1'(s('type.num.num',X27))) | ? [X29,X28,X30,X27,X31] : s('type.closSem.v',X24) = s('type.closSem.v','const.closSem.Closure_5'(s('type.option.option'('type.num.num'),X29),s('type.list.list'('type.closSem.v'),X28),s('type.list.list'('type.closSem.v'),X30),s('type.num.num',X27),s('type.closLang.exp',X31))) | ? [X29,X28,X30,X32,X27] : s('type.closSem.v',X24) = s('type.closSem.v','const.closSem.Recclosure_5'(s('type.option.option'('type.num.num'),X29),s('type.list.list'('type.closSem.v'),X28),s('type.list.list'('type.closSem.v'),X30),s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),X32),s('type.num.num',X27))))),
  file('thm.closProps.is_closure_ind','thm.closSem.v_nchotomy')).
fof(f1723,plain,(
  s('type.closSem.v',sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v')) != s('type.closSem.v','const.closSem.Block_2'(s('type.num.num',sK19(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))),s('type.list.list'('type.closSem.v'),sK20(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))))) | $spl51),
  inference(cnf_transformation,[],[f1723_D])).
fof(f1723_D,plain,(
  s('type.closSem.v',sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v')) != s('type.closSem.v','const.closSem.Block_2'(s('type.num.num',sK19(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))),s('type.list.list'('type.closSem.v'),sK20(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))))) <=> ~$spl51),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl51])])).
fof(f1724,plain,(
  s('type.closSem.v',sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v')) = s('type.closSem.v','const.closSem.Block_2'(s('type.num.num',sK19(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))),s('type.list.list'('type.closSem.v'),sK20(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))))) | $spl50),
  inference(cnf_transformation,[],[f1724_D])).
fof(f1724_D,plain,(
  s('type.closSem.v',sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v')) = s('type.closSem.v','const.closSem.Block_2'(s('type.num.num',sK19(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))),s('type.list.list'('type.closSem.v'),sK20(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))))) <=> ~$spl50),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl50])])).
fof(f2432,plain,(
  s('type.closSem.v',sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v')) = s('type.closSem.v','const.closSem.Recclosure_5'(s('type.option.option'('type.num.num'),sK27(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))),s('type.list.list'('type.closSem.v'),sK28(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))),s('type.list.list'('type.closSem.v'),sK29(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))),s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),sK30(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))),s('type.num.num',sK31(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))))) | s('type.closSem.v',sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v')) = s('type.closSem.v','const.closSem.Closure_5'(s('type.option.option'('type.num.num'),sK22(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))),s('type.list.list'('type.closSem.v'),sK23(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))),s('type.list.list'('type.closSem.v'),sK24(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))),s('type.num.num',sK25(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))),s('type.closLang.exp',sK26(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))))) | s('type.closSem.v',sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v')) = s('type.closSem.v','const.closSem.Block_2'(s('type.num.num',sK19(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))),s('type.list.list'('type.closSem.v'),sK20(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))))) | ($spl47 | $spl49 | $spl53)),
  inference(subsumption_resolution,[],[f2431,f1719])).
fof(f2431,plain,(
  s('type.closSem.v',sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v')) = s('type.closSem.v','const.closSem.Recclosure_5'(s('type.option.option'('type.num.num'),sK27(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))),s('type.list.list'('type.closSem.v'),sK28(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))),s('type.list.list'('type.closSem.v'),sK29(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))),s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),sK30(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))),s('type.num.num',sK31(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))))) | s('type.closSem.v',sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v')) = s('type.closSem.v','const.closSem.Closure_5'(s('type.option.option'('type.num.num'),sK22(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))),s('type.list.list'('type.closSem.v'),sK23(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))),s('type.list.list'('type.closSem.v'),sK24(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))),s('type.num.num',sK25(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))),s('type.closLang.exp',sK26(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))))) | s('type.closSem.v',sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v')) = s('type.closSem.v','const.closSem.Block_2'(s('type.num.num',sK19(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))),s('type.list.list'('type.closSem.v'),sK20(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))))) | s('type.closSem.v',sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v')) = s('type.closSem.v','const.closSem.Number_1'(s('type.integer.int',sK17(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))))) | ($spl49 | $spl53)),
  inference(subsumption_resolution,[],[f2430,f1721])).
fof(f2430,plain,(
  s('type.closSem.v',sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v')) = s('type.closSem.v','const.closSem.Recclosure_5'(s('type.option.option'('type.num.num'),sK27(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))),s('type.list.list'('type.closSem.v'),sK28(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))),s('type.list.list'('type.closSem.v'),sK29(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))),s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),sK30(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))),s('type.num.num',sK31(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))))) | s('type.closSem.v',sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v')) = s('type.closSem.v','const.closSem.Closure_5'(s('type.option.option'('type.num.num'),sK22(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))),s('type.list.list'('type.closSem.v'),sK23(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))),s('type.list.list'('type.closSem.v'),sK24(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))),s('type.num.num',sK25(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))),s('type.closLang.exp',sK26(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))))) | s('type.closSem.v',sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v')) = s('type.closSem.v','const.closSem.Block_2'(s('type.num.num',sK19(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))),s('type.list.list'('type.closSem.v'),sK20(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))))) | s('type.closSem.v',sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v')) = s('type.closSem.v','const.closSem.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK18(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))))) | s('type.closSem.v',sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v')) = s('type.closSem.v','const.closSem.Number_1'(s('type.integer.int',sK17(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))))) | $spl53),
  inference(trivial_inequality_removal,[],[f2429])).
fof(f2429,plain,(
  s('type.closSem.v',sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v')) != s('type.closSem.v',sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v')) | s('type.closSem.v',sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v')) = s('type.closSem.v','const.closSem.Recclosure_5'(s('type.option.option'('type.num.num'),sK27(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))),s('type.list.list'('type.closSem.v'),sK28(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))),s('type.list.list'('type.closSem.v'),sK29(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))),s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),sK30(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))),s('type.num.num',sK31(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))))) | s('type.closSem.v',sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v')) = s('type.closSem.v','const.closSem.Closure_5'(s('type.option.option'('type.num.num'),sK22(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))),s('type.list.list'('type.closSem.v'),sK23(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))),s('type.list.list'('type.closSem.v'),sK24(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))),s('type.num.num',sK25(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))),s('type.closLang.exp',sK26(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))))) | s('type.closSem.v',sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v')) = s('type.closSem.v','const.closSem.Block_2'(s('type.num.num',sK19(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))),s('type.list.list'('type.closSem.v'),sK20(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))))) | s('type.closSem.v',sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v')) = s('type.closSem.v','const.closSem.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK18(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))))) | s('type.closSem.v',sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v')) = s('type.closSem.v','const.closSem.Number_1'(s('type.integer.int',sK17(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))))) | $spl53),
  inference(superposition,[],[f1725,f65])).
fof(f2384,plain,(
  $false | $spl52),
  inference(subsumption_resolution,[],[f2371,f531])).
fof(f531,plain,(
  s(bool,'T_0') != s(bool,happ(s(fun('type.closSem.v',bool),sK0),s('type.closSem.v',sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))))),
  inference(resolution,[],[f514,f74])).
fof(f514,plain,(
  ~p(s(bool,happ(s(fun('type.closSem.v',bool),sK0),s('type.closSem.v',sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v')))))),
  inference(resolution,[],[f85,f82])).
fof(f82,plain,(
  ( ! [X0] : (p(s(bool,'const.relation.WF_1'(s(fun(X0,fun(X0,bool)),'const.relation.EMPTY_REL_0'))))) )),
  inference(cnf_transformation,[],[f33])).
fof(f33,plain,(
  ! [X0] : p(s(bool,'const.relation.WF_1'(s(fun(X0,fun(X0,bool)),'const.relation.EMPTY_REL_0'))))),
  inference(rectify,[],[f15])).
fof(f15,axiom,(
  ! [X33] : p(s(bool,'const.relation.WF_1'(s(fun(X33,fun(X33,bool)),'const.relation.EMPTY_REL_0'))))),
  file('thm.closProps.is_closure_ind','thm.relation.WF_EMPTY_REL')).
fof(f85,plain,(
  ( ! [X4] : (~p(s(bool,'const.relation.WF_1'(s(fun('type.closSem.v',fun('type.closSem.v',bool)),X4)))) | ~p(s(bool,happ(s(fun('type.closSem.v',bool),sK0),s('type.closSem.v',sK32(sK0,X4,'type.closSem.v')))))) )),
  inference(resolution,[],[f58,f67])).
fof(f67,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X3)))) | ~p(s(bool,happ(s(fun(X0,bool),X2),s(X0,sK32(X2,X1,X0))))) | ~p(s(bool,'const.relation.WF_1'(s(fun(X0,fun(X0,bool)),X1))))) )),
  inference(cnf_transformation,[],[f46])).
fof(f46,plain,(
  ! [X0,X1] : (~p(s(bool,'const.relation.WF_1'(s(fun(X0,fun(X0,bool)),X1)))) | ! [X2] : ((! [X5] : (~p(s(bool,happ(s(fun(X0,bool),happ(s(fun(X0,fun(X0,bool)),X1),s(X0,X5))),s(X0,sK32(X2,X1,X0))))) | p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X5))))) & ~p(s(bool,happ(s(fun(X0,bool),X2),s(X0,sK32(X2,X1,X0)))))) | ! [X3] : p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X3))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK32])],[f45])).
fof(f45,plain,(
  ! [X0,X1] : (~p(s(bool,'const.relation.WF_1'(s(fun(X0,fun(X0,bool)),X1)))) | ! [X2] : (? [X4] : (! [X5] : (~p(s(bool,happ(s(fun(X0,bool),happ(s(fun(X0,fun(X0,bool)),X1),s(X0,X5))),s(X0,X4)))) | p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X5))))) & ~p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X4))))) | ! [X3] : p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X3))))))),
  inference(rectify,[],[f38])).
fof(f38,plain,(
  ! [X0,X1] : (~p(s(bool,'const.relation.WF_1'(s(fun(X0,fun(X0,bool)),X1)))) | ! [X2] : (? [X3] : (! [X4] : (~p(s(bool,happ(s(fun(X0,bool),happ(s(fun(X0,fun(X0,bool)),X1),s(X0,X4))),s(X0,X3)))) | p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X4))))) & ~p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X3))))) | ! [X5] : p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X5))))))),
  inference(ennf_transformation,[],[f21])).
fof(f21,plain,(
  ! [X0,X1] : (p(s(bool,'const.relation.WF_1'(s(fun(X0,fun(X0,bool)),X1)))) => ! [X2] : (! [X3] : (! [X4] : (p(s(bool,happ(s(fun(X0,bool),happ(s(fun(X0,fun(X0,bool)),X1),s(X0,X4))),s(X0,X3)))) => p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X4))))) => p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X3))))) => ! [X5] : p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X5))))))),
  inference(flattening,[],[f20])).
fof(f20,plain,(
  ! [X0] : ! [X1] : (p(s(bool,'const.relation.WF_1'(s(fun(X0,fun(X0,bool)),X1)))) => ! [X2] : (! [X3] : (! [X4] : (p(s(bool,happ(s(fun(X0,bool),happ(s(fun(X0,fun(X0,bool)),X1),s(X0,X4))),s(X0,X3)))) => p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X4))))) => p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X3))))) => ! [X5] : p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X5))))))),
  inference(rectify,[],[f14])).
fof(f14,axiom,(
  ! [X33] : ! [X34] : (p(s(bool,'const.relation.WF_1'(s(fun(X33,fun(X33,bool)),X34)))) => ! [X6] : (! [X35] : (! [X36] : (p(s(bool,happ(s(fun(X33,bool),happ(s(fun(X33,fun(X33,bool)),X34),s(X33,X36))),s(X33,X35)))) => p(s(bool,happ(s(fun(X33,bool),X6),s(X33,X36))))) => p(s(bool,happ(s(fun(X33,bool),X6),s(X33,X35))))) => ! [X35] : p(s(bool,happ(s(fun(X33,bool),X6),s(X33,X35))))))),
  file('thm.closProps.is_closure_ind','thm.relation.WF_INDUCTION_THM')).
fof(f2371,plain,(
  s(bool,'T_0') = s(bool,happ(s(fun('type.closSem.v',bool),sK0),s('type.closSem.v',sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v')))) | $spl52),
  inference(superposition,[],[f178,f1726])).
fof(f178,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,happ(s(fun('type.closSem.v',bool),sK0),s('type.closSem.v','const.closSem.RefPtr_1'(s('type.num.num',X0)))))) )),
  inference(resolution,[],[f57,f75])).
fof(f57,plain,(
  ( ! [X2] : (p(s(bool,happ(s(fun('type.closSem.v',bool),sK0),s('type.closSem.v','const.closSem.RefPtr_1'(s('type.num.num',X2))))))) )),
  inference(cnf_transformation,[],[f41])).
fof(f2368,plain,(
  ( ! [X22] : (s('type.closSem.v',sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v')) != s('type.closSem.v','const.closSem.RefPtr_1'(s('type.num.num',X22)))) ) | $spl92),
  inference(cnf_transformation,[],[f2368_D])).
fof(f2368_D,plain,(
  ( ! [X22] : (s('type.closSem.v',sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v')) != s('type.closSem.v','const.closSem.RefPtr_1'(s('type.num.num',X22)))) ) <=> ~$spl92),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl92])])).
fof(f2128,plain,(
  s('type.closSem.v',sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v')) = s('type.closSem.v','const.closSem.Closure_5'(s('type.option.option'('type.num.num'),sK2(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))),s('type.list.list'('type.closSem.v'),sK3(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))),s('type.list.list'('type.closSem.v'),sK4(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))),s('type.num.num',sK5(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))),s('type.closLang.exp',sK6(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))))) | $spl78),
  inference(cnf_transformation,[],[f2128_D])).
fof(f2128_D,plain,(
  s('type.closSem.v',sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v')) = s('type.closSem.v','const.closSem.Closure_5'(s('type.option.option'('type.num.num'),sK2(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))),s('type.list.list'('type.closSem.v'),sK3(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))),s('type.list.list'('type.closSem.v'),sK4(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))),s('type.num.num',sK5(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))),s('type.closLang.exp',sK6(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))))) <=> ~$spl78),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl78])])).
fof(f2132,plain,(
  s('type.closSem.v',sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v')) = s('type.closSem.v','const.closSem.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK13(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))))) | $spl82),
  inference(cnf_transformation,[],[f2132_D])).
fof(f2132_D,plain,(
  s('type.closSem.v',sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v')) = s('type.closSem.v','const.closSem.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK13(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))))) <=> ~$spl82),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl82])])).
fof(f2134,plain,(
  s('type.closSem.v',sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v')) = s('type.closSem.v','const.closSem.Block_2'(s('type.num.num',sK14(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))),s('type.list.list'('type.closSem.v'),sK15(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))))) | $spl84),
  inference(cnf_transformation,[],[f2134_D])).
fof(f2134_D,plain,(
  s('type.closSem.v',sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v')) = s('type.closSem.v','const.closSem.Block_2'(s('type.num.num',sK14(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))),s('type.list.list'('type.closSem.v'),sK15(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))))) <=> ~$spl84),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl84])])).
fof(f2136,plain,(
  s('type.closSem.v',sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v')) = s('type.closSem.v','const.closSem.RefPtr_1'(s('type.num.num',sK16(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))))) | $spl86),
  inference(cnf_transformation,[],[f2136_D])).
fof(f2136_D,plain,(
  s('type.closSem.v',sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v')) = s('type.closSem.v','const.closSem.RefPtr_1'(s('type.num.num',sK16(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))))) <=> ~$spl86),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl86])])).
fof(f2367,plain,(
  ( ! [X22] : (s('type.closSem.v',sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v')) = s('type.closSem.v','const.closSem.RefPtr_1'(s('type.num.num',sK16(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))))) | s('type.closSem.v',sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v')) = s('type.closSem.v','const.closSem.Block_2'(s('type.num.num',sK14(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))),s('type.list.list'('type.closSem.v'),sK15(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))))) | s('type.closSem.v',sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v')) = s('type.closSem.v','const.closSem.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK13(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))))) | s('type.closSem.v',sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v')) = s('type.closSem.v','const.closSem.Closure_5'(s('type.option.option'('type.num.num'),sK2(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))),s('type.list.list'('type.closSem.v'),sK3(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))),s('type.list.list'('type.closSem.v'),sK4(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))),s('type.num.num',sK5(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))),s('type.closLang.exp',sK6(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))))) | s('type.closSem.v',sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v')) != s('type.closSem.v','const.closSem.RefPtr_1'(s('type.num.num',X22)))) ) | $spl76),
  inference(subsumption_resolution,[],[f2366,f2126])).
fof(f2366,plain,(
  ( ! [X22] : (s('type.closSem.v',sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v')) = s('type.closSem.v','const.closSem.RefPtr_1'(s('type.num.num',sK16(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))))) | s('type.closSem.v',sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v')) = s('type.closSem.v','const.closSem.Block_2'(s('type.num.num',sK14(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))),s('type.list.list'('type.closSem.v'),sK15(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))))) | s('type.closSem.v',sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v')) = s('type.closSem.v','const.closSem.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK13(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))))) | s('type.closSem.v',sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v')) = s('type.closSem.v','const.closSem.Number_1'(s('type.integer.int',sK12(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))))) | s('type.closSem.v',sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v')) = s('type.closSem.v','const.closSem.Closure_5'(s('type.option.option'('type.num.num'),sK2(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))),s('type.list.list'('type.closSem.v'),sK3(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))),s('type.list.list'('type.closSem.v'),sK4(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))),s('type.num.num',sK5(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))),s('type.closLang.exp',sK6(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))))) | s('type.closSem.v',sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v')) != s('type.closSem.v','const.closSem.RefPtr_1'(s('type.num.num',X22)))) )),
  inference(subsumption_resolution,[],[f2348,f76])).
fof(f76,plain,(
  ~p(s(bool,'F_0'))),
  inference(cnf_transformation,[],[f28])).
fof(f28,plain,(
  ~p(s(bool,'F_0'))),
  inference(flattening,[],[f2])).
fof(f2,axiom,(
  ~p(s(bool,'F_0'))),
  file('thm.closProps.is_closure_ind',aHL_FALSITY)).
fof(f2348,plain,(
  ( ! [X22] : (p(s(bool,'F_0')) | s('type.closSem.v',sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v')) = s('type.closSem.v','const.closSem.RefPtr_1'(s('type.num.num',sK16(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))))) | s('type.closSem.v',sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v')) = s('type.closSem.v','const.closSem.Block_2'(s('type.num.num',sK14(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))),s('type.list.list'('type.closSem.v'),sK15(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))))) | s('type.closSem.v',sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v')) = s('type.closSem.v','const.closSem.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK13(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))))) | s('type.closSem.v',sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v')) = s('type.closSem.v','const.closSem.Number_1'(s('type.integer.int',sK12(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))))) | s('type.closSem.v',sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v')) = s('type.closSem.v','const.closSem.Closure_5'(s('type.option.option'('type.num.num'),sK2(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))),s('type.list.list'('type.closSem.v'),sK3(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))),s('type.list.list'('type.closSem.v'),sK4(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))),s('type.num.num',sK5(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))),s('type.closLang.exp',sK6(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))))) | s('type.closSem.v',sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v')) != s('type.closSem.v','const.closSem.RefPtr_1'(s('type.num.num',X22)))) )),
  inference(superposition,[],[f448,f533])).
fof(f533,plain,(
  s(bool,'F_0') = s(bool,happ(s(fun('type.closSem.v',bool),sK0),s('type.closSem.v',sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))))),
  inference(resolution,[],[f514,f71])).
fof(f71,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f48])).
fof(f48,plain,(
  ! [X0] : ((s(bool,'F_0') != s(bool,X0) | ~p(s(bool,X0))) & (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f25])).
fof(f25,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(flattening,[],[f24])).
fof(f24,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(rectify,[],[f11])).
fof(f11,axiom,(
  ! [X22] : (s(bool,'F_0') = s(bool,X22) <=> ~p(s(bool,X22)))),
  file('thm.closProps.is_closure_ind','thm.bool.EQ_CLAUSES|split|3')).
fof(f448,plain,(
  ( ! [X8,X7] : (p(s(bool,happ(s(fun('type.closSem.v',bool),sK0),s('type.closSem.v',X7)))) | s('type.closSem.v',X7) = s('type.closSem.v','const.closSem.RefPtr_1'(s('type.num.num',sK16(X7)))) | s('type.closSem.v',X7) = s('type.closSem.v','const.closSem.Block_2'(s('type.num.num',sK14(X7)),s('type.list.list'('type.closSem.v'),sK15(X7)))) | s('type.closSem.v',X7) = s('type.closSem.v','const.closSem.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK13(X7)))) | s('type.closSem.v',X7) = s('type.closSem.v','const.closSem.Number_1'(s('type.integer.int',sK12(X7)))) | s('type.closSem.v',X7) = s('type.closSem.v','const.closSem.Closure_5'(s('type.option.option'('type.num.num'),sK2(X7)),s('type.list.list'('type.closSem.v'),sK3(X7)),s('type.list.list'('type.closSem.v'),sK4(X7)),s('type.num.num',sK5(X7)),s('type.closLang.exp',sK6(X7)))) | s('type.closSem.v',X7) != s('type.closSem.v','const.closSem.RefPtr_1'(s('type.num.num',X8)))) )),
  inference(superposition,[],[f53,f62])).
fof(f62,plain,(
  ( ! [X26,X0] : (s('type.closSem.v',X0) = s('type.closSem.v','const.closSem.RefPtr_1'(s('type.num.num',sK16(X0)))) | s('type.closSem.v',X0) = s('type.closSem.v','const.closSem.Block_2'(s('type.num.num',sK14(X0)),s('type.list.list'('type.closSem.v'),sK15(X0)))) | s('type.closSem.v',X0) = s('type.closSem.v','const.closSem.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK13(X0)))) | s('type.closSem.v',X0) = s('type.closSem.v','const.closSem.Number_1'(s('type.integer.int',sK12(X0)))) | s('type.closSem.v',X0) = s('type.closSem.v','const.closSem.Recclosure_5'(s('type.option.option'('type.num.num'),sK7(X0)),s('type.list.list'('type.closSem.v'),sK8(X0)),s('type.list.list'('type.closSem.v'),sK9(X0)),s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),sK10(X0)),s('type.num.num',sK11(X0)))) | s('type.closSem.v',X0) = s('type.closSem.v','const.closSem.Closure_5'(s('type.option.option'('type.num.num'),sK2(X0)),s('type.list.list'('type.closSem.v'),sK3(X0)),s('type.list.list'('type.closSem.v'),sK4(X0)),s('type.num.num',sK5(X0)),s('type.closLang.exp',sK6(X0)))) | s('type.closSem.v',X0) != s('type.closSem.v','const.closSem.RefPtr_1'(s('type.num.num',X26)))) )),
  inference(cnf_transformation,[],[f43])).
fof(f43,plain,(
  ! [X0] : ((! [X30] : s('type.closSem.v',X0) != s('type.closSem.v','const.closSem.Number_1'(s('type.integer.int',X30))) & ! [X29] : s('type.closSem.v',X0) != s('type.closSem.v','const.closSem.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),X29))) & ! [X27,X28] : s('type.closSem.v',X0) != s('type.closSem.v','const.closSem.Block_2'(s('type.num.num',X27),s('type.list.list'('type.closSem.v'),X28))) & ! [X26] : s('type.closSem.v',X0) != s('type.closSem.v','const.closSem.RefPtr_1'(s('type.num.num',X26))) & ! [X21,X22,X23,X24,X25] : s('type.closSem.v',X0) != s('type.closSem.v','const.closSem.Closure_5'(s('type.option.option'('type.num.num'),X21),s('type.list.list'('type.closSem.v'),X22),s('type.list.list'('type.closSem.v'),X23),s('type.num.num',X24),s('type.closLang.exp',X25))) & ! [X16,X17,X18,X19,X20] : s('type.closSem.v',X0) != s('type.closSem.v','const.closSem.Recclosure_5'(s('type.option.option'('type.num.num'),X16),s('type.list.list'('type.closSem.v'),X17),s('type.list.list'('type.closSem.v'),X18),s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),X19),s('type.num.num',X20)))) | s('type.closSem.v',X0) = s('type.closSem.v','const.closSem.Closure_5'(s('type.option.option'('type.num.num'),sK2(X0)),s('type.list.list'('type.closSem.v'),sK3(X0)),s('type.list.list'('type.closSem.v'),sK4(X0)),s('type.num.num',sK5(X0)),s('type.closLang.exp',sK6(X0)))) | s('type.closSem.v',X0) = s('type.closSem.v','const.closSem.Recclosure_5'(s('type.option.option'('type.num.num'),sK7(X0)),s('type.list.list'('type.closSem.v'),sK8(X0)),s('type.list.list'('type.closSem.v'),sK9(X0)),s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),sK10(X0)),s('type.num.num',sK11(X0)))) | s('type.closSem.v',X0) = s('type.closSem.v','const.closSem.Number_1'(s('type.integer.int',sK12(X0)))) | s('type.closSem.v',X0) = s('type.closSem.v','const.closSem.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK13(X0)))) | s('type.closSem.v',X0) = s('type.closSem.v','const.closSem.Block_2'(s('type.num.num',sK14(X0)),s('type.list.list'('type.closSem.v'),sK15(X0)))) | s('type.closSem.v',X0) = s('type.closSem.v','const.closSem.RefPtr_1'(s('type.num.num',sK16(X0)))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK2,sK3,sK4,sK5,sK6,sK7,sK8,sK9,sK10,sK11,sK12,sK13,sK14,sK15,sK16])],[f42])).
fof(f42,plain,(
  ! [X0] : ((! [X30] : s('type.closSem.v',X0) != s('type.closSem.v','const.closSem.Number_1'(s('type.integer.int',X30))) & ! [X29] : s('type.closSem.v',X0) != s('type.closSem.v','const.closSem.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),X29))) & ! [X27,X28] : s('type.closSem.v',X0) != s('type.closSem.v','const.closSem.Block_2'(s('type.num.num',X27),s('type.list.list'('type.closSem.v'),X28))) & ! [X26] : s('type.closSem.v',X0) != s('type.closSem.v','const.closSem.RefPtr_1'(s('type.num.num',X26))) & ! [X21,X22,X23,X24,X25] : s('type.closSem.v',X0) != s('type.closSem.v','const.closSem.Closure_5'(s('type.option.option'('type.num.num'),X21),s('type.list.list'('type.closSem.v'),X22),s('type.list.list'('type.closSem.v'),X23),s('type.num.num',X24),s('type.closLang.exp',X25))) & ! [X16,X17,X18,X19,X20] : s('type.closSem.v',X0) != s('type.closSem.v','const.closSem.Recclosure_5'(s('type.option.option'('type.num.num'),X16),s('type.list.list'('type.closSem.v'),X17),s('type.list.list'('type.closSem.v'),X18),s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),X19),s('type.num.num',X20)))) | ? [X11,X12,X13,X14,X15] : s('type.closSem.v',X0) = s('type.closSem.v','const.closSem.Closure_5'(s('type.option.option'('type.num.num'),X11),s('type.list.list'('type.closSem.v'),X12),s('type.list.list'('type.closSem.v'),X13),s('type.num.num',X14),s('type.closLang.exp',X15))) | ? [X6,X7,X8,X9,X10] : s('type.closSem.v',X0) = s('type.closSem.v','const.closSem.Recclosure_5'(s('type.option.option'('type.num.num'),X6),s('type.list.list'('type.closSem.v'),X7),s('type.list.list'('type.closSem.v'),X8),s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),X9),s('type.num.num',X10))) | ? [X5] : s('type.closSem.v',X0) = s('type.closSem.v','const.closSem.Number_1'(s('type.integer.int',X5))) | ? [X4] : s('type.closSem.v',X0) = s('type.closSem.v','const.closSem.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),X4))) | ? [X2,X3] : s('type.closSem.v',X0) = s('type.closSem.v','const.closSem.Block_2'(s('type.num.num',X2),s('type.list.list'('type.closSem.v'),X3))) | ? [X1] : s('type.closSem.v',X0) = s('type.closSem.v','const.closSem.RefPtr_1'(s('type.num.num',X1))))),
  inference(rectify,[],[f37])).
fof(f37,plain,(
  ! [X0] : ((! [X15] : s('type.closSem.v',X0) != s('type.closSem.v','const.closSem.Number_1'(s('type.integer.int',X15))) & ! [X14] : s('type.closSem.v',X0) != s('type.closSem.v','const.closSem.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),X14))) & ! [X12,X13] : s('type.closSem.v',X0) != s('type.closSem.v','const.closSem.Block_2'(s('type.num.num',X12),s('type.list.list'('type.closSem.v'),X13))) & ! [X11] : s('type.closSem.v',X0) != s('type.closSem.v','const.closSem.RefPtr_1'(s('type.num.num',X11))) & ! [X6,X7,X8,X9,X10] : s('type.closSem.v',X0) != s('type.closSem.v','const.closSem.Closure_5'(s('type.option.option'('type.num.num'),X6),s('type.list.list'('type.closSem.v'),X7),s('type.list.list'('type.closSem.v'),X8),s('type.num.num',X9),s('type.closLang.exp',X10))) & ! [X1,X2,X3,X4,X5] : s('type.closSem.v',X0) != s('type.closSem.v','const.closSem.Recclosure_5'(s('type.option.option'('type.num.num'),X1),s('type.list.list'('type.closSem.v'),X2),s('type.list.list'('type.closSem.v'),X3),s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),X4),s('type.num.num',X5)))) | ? [X26,X27,X28,X29,X30] : s('type.closSem.v',X0) = s('type.closSem.v','const.closSem.Closure_5'(s('type.option.option'('type.num.num'),X26),s('type.list.list'('type.closSem.v'),X27),s('type.list.list'('type.closSem.v'),X28),s('type.num.num',X29),s('type.closLang.exp',X30))) | ? [X21,X22,X23,X24,X25] : s('type.closSem.v',X0) = s('type.closSem.v','const.closSem.Recclosure_5'(s('type.option.option'('type.num.num'),X21),s('type.list.list'('type.closSem.v'),X22),s('type.list.list'('type.closSem.v'),X23),s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),X24),s('type.num.num',X25))) | ? [X20] : s('type.closSem.v',X0) = s('type.closSem.v','const.closSem.Number_1'(s('type.integer.int',X20))) | ? [X19] : s('type.closSem.v',X0) = s('type.closSem.v','const.closSem.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),X19))) | ? [X17,X18] : s('type.closSem.v',X0) = s('type.closSem.v','const.closSem.Block_2'(s('type.num.num',X17),s('type.list.list'('type.closSem.v'),X18))) | ? [X16] : s('type.closSem.v',X0) = s('type.closSem.v','const.closSem.RefPtr_1'(s('type.num.num',X16))))),
  inference(flattening,[],[f36])).
fof(f36,plain,(
  ! [X0] : ((! [X15] : s('type.closSem.v',X0) != s('type.closSem.v','const.closSem.Number_1'(s('type.integer.int',X15))) & ! [X14] : s('type.closSem.v',X0) != s('type.closSem.v','const.closSem.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),X14))) & ! [X12,X13] : s('type.closSem.v',X0) != s('type.closSem.v','const.closSem.Block_2'(s('type.num.num',X12),s('type.list.list'('type.closSem.v'),X13))) & ! [X11] : s('type.closSem.v',X0) != s('type.closSem.v','const.closSem.RefPtr_1'(s('type.num.num',X11))) & ! [X6,X7,X8,X9,X10] : s('type.closSem.v',X0) != s('type.closSem.v','const.closSem.Closure_5'(s('type.option.option'('type.num.num'),X6),s('type.list.list'('type.closSem.v'),X7),s('type.list.list'('type.closSem.v'),X8),s('type.num.num',X9),s('type.closLang.exp',X10))) & ! [X1,X2,X3,X4,X5] : s('type.closSem.v',X0) != s('type.closSem.v','const.closSem.Recclosure_5'(s('type.option.option'('type.num.num'),X1),s('type.list.list'('type.closSem.v'),X2),s('type.list.list'('type.closSem.v'),X3),s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),X4),s('type.num.num',X5)))) | (? [X26,X27,X28,X29,X30] : s('type.closSem.v',X0) = s('type.closSem.v','const.closSem.Closure_5'(s('type.option.option'('type.num.num'),X26),s('type.list.list'('type.closSem.v'),X27),s('type.list.list'('type.closSem.v'),X28),s('type.num.num',X29),s('type.closLang.exp',X30))) | ? [X21,X22,X23,X24,X25] : s('type.closSem.v',X0) = s('type.closSem.v','const.closSem.Recclosure_5'(s('type.option.option'('type.num.num'),X21),s('type.list.list'('type.closSem.v'),X22),s('type.list.list'('type.closSem.v'),X23),s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),X24),s('type.num.num',X25))) | ? [X20] : s('type.closSem.v',X0) = s('type.closSem.v','const.closSem.Number_1'(s('type.integer.int',X20))) | ? [X19] : s('type.closSem.v',X0) = s('type.closSem.v','const.closSem.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),X19))) | ? [X17,X18] : s('type.closSem.v',X0) = s('type.closSem.v','const.closSem.Block_2'(s('type.num.num',X17),s('type.list.list'('type.closSem.v'),X18))) | ? [X16] : s('type.closSem.v',X0) = s('type.closSem.v','const.closSem.RefPtr_1'(s('type.num.num',X16)))))),
  inference(ennf_transformation,[],[f18])).
fof(f18,plain,(
  ! [X0] : ((? [X15] : s('type.closSem.v',X0) = s('type.closSem.v','const.closSem.Number_1'(s('type.integer.int',X15))) | ? [X14] : s('type.closSem.v',X0) = s('type.closSem.v','const.closSem.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),X14))) | ? [X12,X13] : s('type.closSem.v',X0) = s('type.closSem.v','const.closSem.Block_2'(s('type.num.num',X12),s('type.list.list'('type.closSem.v'),X13))) | ? [X11] : s('type.closSem.v',X0) = s('type.closSem.v','const.closSem.RefPtr_1'(s('type.num.num',X11))) | ? [X6,X7,X8,X9,X10] : s('type.closSem.v',X0) = s('type.closSem.v','const.closSem.Closure_5'(s('type.option.option'('type.num.num'),X6),s('type.list.list'('type.closSem.v'),X7),s('type.list.list'('type.closSem.v'),X8),s('type.num.num',X9),s('type.closLang.exp',X10))) | ? [X1,X2,X3,X4,X5] : s('type.closSem.v',X0) = s('type.closSem.v','const.closSem.Recclosure_5'(s('type.option.option'('type.num.num'),X1),s('type.list.list'('type.closSem.v'),X2),s('type.list.list'('type.closSem.v'),X3),s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),X4),s('type.num.num',X5)))) => (? [X26,X27,X28,X29,X30] : s('type.closSem.v',X0) = s('type.closSem.v','const.closSem.Closure_5'(s('type.option.option'('type.num.num'),X26),s('type.list.list'('type.closSem.v'),X27),s('type.list.list'('type.closSem.v'),X28),s('type.num.num',X29),s('type.closLang.exp',X30))) | ? [X21,X22,X23,X24,X25] : s('type.closSem.v',X0) = s('type.closSem.v','const.closSem.Recclosure_5'(s('type.option.option'('type.num.num'),X21),s('type.list.list'('type.closSem.v'),X22),s('type.list.list'('type.closSem.v'),X23),s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),X24),s('type.num.num',X25))) | ? [X20] : s('type.closSem.v',X0) = s('type.closSem.v','const.closSem.Number_1'(s('type.integer.int',X20))) | ? [X19] : s('type.closSem.v',X0) = s('type.closSem.v','const.closSem.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),X19))) | ? [X17,X18] : s('type.closSem.v',X0) = s('type.closSem.v','const.closSem.Block_2'(s('type.num.num',X17),s('type.list.list'('type.closSem.v'),X18))) | ? [X16] : s('type.closSem.v',X0) = s('type.closSem.v','const.closSem.RefPtr_1'(s('type.num.num',X16)))))),
  inference(rectify,[],[f12])).
fof(f12,axiom,(
  ! [X23] : ((? [X17] : s('type.closSem.v',X23) = s('type.closSem.v','const.closSem.Number_1'(s('type.integer.int',X17))) | ? [X18] : s('type.closSem.v',X23) = s('type.closSem.v','const.closSem.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),X18))) | ? [X19,X20] : s('type.closSem.v',X23) = s('type.closSem.v','const.closSem.Block_2'(s('type.num.num',X19),s('type.list.list'('type.closSem.v'),X20))) | ? [X21] : s('type.closSem.v',X23) = s('type.closSem.v','const.closSem.RefPtr_1'(s('type.num.num',X21))) | ? [X7,X8,X9,X10,X11] : s('type.closSem.v',X23) = s('type.closSem.v','const.closSem.Closure_5'(s('type.option.option'('type.num.num'),X7),s('type.list.list'('type.closSem.v'),X8),s('type.list.list'('type.closSem.v'),X9),s('type.num.num',X10),s('type.closLang.exp',X11))) | ? [X12,X13,X14,X15,X16] : s('type.closSem.v',X23) = s('type.closSem.v','const.closSem.Recclosure_5'(s('type.option.option'('type.num.num'),X12),s('type.list.list'('type.closSem.v'),X13),s('type.list.list'('type.closSem.v'),X14),s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),X15),s('type.num.num',X16)))) => (? [X7,X8,X9,X10,X11] : s('type.closSem.v',X23) = s('type.closSem.v','const.closSem.Closure_5'(s('type.option.option'('type.num.num'),X7),s('type.list.list'('type.closSem.v'),X8),s('type.list.list'('type.closSem.v'),X9),s('type.num.num',X10),s('type.closLang.exp',X11))) | ? [X12,X13,X14,X15,X16] : s('type.closSem.v',X23) = s('type.closSem.v','const.closSem.Recclosure_5'(s('type.option.option'('type.num.num'),X12),s('type.list.list'('type.closSem.v'),X13),s('type.list.list'('type.closSem.v'),X14),s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),X15),s('type.num.num',X16))) | ? [X17] : s('type.closSem.v',X23) = s('type.closSem.v','const.closSem.Number_1'(s('type.integer.int',X17))) | ? [X18] : s('type.closSem.v',X23) = s('type.closSem.v','const.closSem.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),X18))) | ? [X19,X20] : s('type.closSem.v',X23) = s('type.closSem.v','const.closSem.Block_2'(s('type.num.num',X19),s('type.list.list'('type.closSem.v'),X20))) | ? [X21] : s('type.closSem.v',X23) = s('type.closSem.v','const.closSem.RefPtr_1'(s('type.num.num',X21)))))),
  file('thm.closProps.is_closure_ind','thm.closProps.closProps_9|49|_prove_ltb')).
fof(f53,plain,(
  ( ! [X10,X8,X7,X11,X9] : (p(s(bool,happ(s(fun('type.closSem.v',bool),sK0),s('type.closSem.v','const.closSem.Recclosure_5'(s('type.option.option'('type.num.num'),X7),s('type.list.list'('type.closSem.v'),X8),s('type.list.list'('type.closSem.v'),X9),s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),X10),s('type.num.num',X11))))))) )),
  inference(cnf_transformation,[],[f41])).
fof(f2358,plain,(
  ( ! [X7] : (s('type.closSem.v',sK1) != s('type.closSem.v','const.closSem.RefPtr_1'(s('type.num.num',X7)))) ) | $spl90),
  inference(cnf_transformation,[],[f2358_D])).
fof(f2358_D,plain,(
  ( ! [X7] : (s('type.closSem.v',sK1) != s('type.closSem.v','const.closSem.RefPtr_1'(s('type.num.num',X7)))) ) <=> ~$spl90),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl90])])).
fof(f2115,plain,(
  s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.Closure_5'(s('type.option.option'('type.num.num'),sK2(sK1)),s('type.list.list'('type.closSem.v'),sK3(sK1)),s('type.list.list'('type.closSem.v'),sK4(sK1)),s('type.num.num',sK5(sK1)),s('type.closLang.exp',sK6(sK1)))) | $spl66),
  inference(cnf_transformation,[],[f2115_D])).
fof(f2115_D,plain,(
  s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.Closure_5'(s('type.option.option'('type.num.num'),sK2(sK1)),s('type.list.list'('type.closSem.v'),sK3(sK1)),s('type.list.list'('type.closSem.v'),sK4(sK1)),s('type.num.num',sK5(sK1)),s('type.closLang.exp',sK6(sK1)))) <=> ~$spl66),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl66])])).
fof(f2119,plain,(
  s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK13(sK1)))) | $spl70),
  inference(cnf_transformation,[],[f2119_D])).
fof(f2119_D,plain,(
  s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK13(sK1)))) <=> ~$spl70),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl70])])).
fof(f2121,plain,(
  s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.Block_2'(s('type.num.num',sK14(sK1)),s('type.list.list'('type.closSem.v'),sK15(sK1)))) | $spl72),
  inference(cnf_transformation,[],[f2121_D])).
fof(f2121_D,plain,(
  s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.Block_2'(s('type.num.num',sK14(sK1)),s('type.list.list'('type.closSem.v'),sK15(sK1)))) <=> ~$spl72),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl72])])).
fof(f2123,plain,(
  s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.RefPtr_1'(s('type.num.num',sK16(sK1)))) | $spl74),
  inference(cnf_transformation,[],[f2123_D])).
fof(f2123_D,plain,(
  s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.RefPtr_1'(s('type.num.num',sK16(sK1)))) <=> ~$spl74),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl74])])).
fof(f2365,plain,(
  ( ! [X21] : (s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.RefPtr_1'(s('type.num.num',sK16(sK1)))) | s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.Block_2'(s('type.num.num',sK14(sK1)),s('type.list.list'('type.closSem.v'),sK15(sK1)))) | s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK13(sK1)))) | s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.Closure_5'(s('type.option.option'('type.num.num'),sK2(sK1)),s('type.list.list'('type.closSem.v'),sK3(sK1)),s('type.list.list'('type.closSem.v'),sK4(sK1)),s('type.num.num',sK5(sK1)),s('type.closLang.exp',sK6(sK1)))) | s('type.closSem.v',sK1) != s('type.closSem.v','const.closSem.RefPtr_1'(s('type.num.num',X21)))) ) | $spl64),
  inference(subsumption_resolution,[],[f2364,f2113])).
fof(f2364,plain,(
  ( ! [X21] : (s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.RefPtr_1'(s('type.num.num',sK16(sK1)))) | s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.Block_2'(s('type.num.num',sK14(sK1)),s('type.list.list'('type.closSem.v'),sK15(sK1)))) | s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK13(sK1)))) | s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.Number_1'(s('type.integer.int',sK12(sK1)))) | s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.Closure_5'(s('type.option.option'('type.num.num'),sK2(sK1)),s('type.list.list'('type.closSem.v'),sK3(sK1)),s('type.list.list'('type.closSem.v'),sK4(sK1)),s('type.num.num',sK5(sK1)),s('type.closLang.exp',sK6(sK1)))) | s('type.closSem.v',sK1) != s('type.closSem.v','const.closSem.RefPtr_1'(s('type.num.num',X21)))) )),
  inference(subsumption_resolution,[],[f2347,f76])).
fof(f2347,plain,(
  ( ! [X21] : (p(s(bool,'F_0')) | s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.RefPtr_1'(s('type.num.num',sK16(sK1)))) | s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.Block_2'(s('type.num.num',sK14(sK1)),s('type.list.list'('type.closSem.v'),sK15(sK1)))) | s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK13(sK1)))) | s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.Number_1'(s('type.integer.int',sK12(sK1)))) | s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.Closure_5'(s('type.option.option'('type.num.num'),sK2(sK1)),s('type.list.list'('type.closSem.v'),sK3(sK1)),s('type.list.list'('type.closSem.v'),sK4(sK1)),s('type.num.num',sK5(sK1)),s('type.closLang.exp',sK6(sK1)))) | s('type.closSem.v',sK1) != s('type.closSem.v','const.closSem.RefPtr_1'(s('type.num.num',X21)))) )),
  inference(superposition,[],[f448,f88])).
fof(f88,plain,(
  s(bool,'F_0') = s(bool,happ(s(fun('type.closSem.v',bool),sK0),s('type.closSem.v',sK1)))),
  inference(resolution,[],[f58,f71])).
fof(f1716,plain,(
  p(s(bool,g(s('type.closSem.v',sK33(sK0,sK0,bool,'type.closSem.v'))))) | $spl44),
  inference(cnf_transformation,[],[f1716_D])).
fof(f1716_D,plain,(
  p(s(bool,g(s('type.closSem.v',sK33(sK0,sK0,bool,'type.closSem.v'))))) <=> ~$spl44),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl44])])).
fof(f1700,plain,(
  s(bool,'F_0') != s(bool,f(s('type.closSem.v',sK33(sK0,sK0,bool,'type.closSem.v')))) | $spl29),
  inference(cnf_transformation,[],[f1700_D])).
fof(f1700_D,plain,(
  s(bool,'F_0') != s(bool,f(s('type.closSem.v',sK33(sK0,sK0,bool,'type.closSem.v')))) <=> ~$spl29),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl29])])).
fof(f2363,plain,(
  ( ! [X12] : (s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.RefPtr_1'(s('type.num.num',sK16(sK1)))) | s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.Block_2'(s('type.num.num',sK14(sK1)),s('type.list.list'('type.closSem.v'),sK15(sK1)))) | s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK13(sK1)))) | s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.Closure_5'(s('type.option.option'('type.num.num'),sK2(sK1)),s('type.list.list'('type.closSem.v'),sK3(sK1)),s('type.list.list'('type.closSem.v'),sK4(sK1)),s('type.num.num',sK5(sK1)),s('type.closLang.exp',sK6(sK1)))) | s('type.closSem.v',sK1) != s('type.closSem.v','const.closSem.RefPtr_1'(s('type.num.num',X12))) | s(bool,'F_0') != s(bool,f(s('type.closSem.v',sK33(sK0,sK0,bool,'type.closSem.v')))) | p(s(bool,g(s('type.closSem.v',sK33(sK0,sK0,bool,'type.closSem.v')))))) ) | $spl64),
  inference(subsumption_resolution,[],[f2292,f2113])).
fof(f2292,plain,(
  ( ! [X12] : (s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.RefPtr_1'(s('type.num.num',sK16(sK1)))) | s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.Block_2'(s('type.num.num',sK14(sK1)),s('type.list.list'('type.closSem.v'),sK15(sK1)))) | s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK13(sK1)))) | s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.Number_1'(s('type.integer.int',sK12(sK1)))) | s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.Closure_5'(s('type.option.option'('type.num.num'),sK2(sK1)),s('type.list.list'('type.closSem.v'),sK3(sK1)),s('type.list.list'('type.closSem.v'),sK4(sK1)),s('type.num.num',sK5(sK1)),s('type.closLang.exp',sK6(sK1)))) | s('type.closSem.v',sK1) != s('type.closSem.v','const.closSem.RefPtr_1'(s('type.num.num',X12))) | s(bool,'F_0') != s(bool,f(s('type.closSem.v',sK33(sK0,sK0,bool,'type.closSem.v')))) | p(s(bool,g(s('type.closSem.v',sK33(sK0,sK0,bool,'type.closSem.v')))))) )),
  inference(resolution,[],[f448,f706])).
fof(f706,plain,(
  ( ! [X4] : (~p(s(bool,happ(s(fun('type.closSem.v',bool),X4),s('type.closSem.v',sK1)))) | s(bool,'F_0') != s(bool,f(s('type.closSem.v',sK33(sK0,X4,bool,'type.closSem.v')))) | p(s(bool,g(s('type.closSem.v',sK33(sK0,X4,bool,'type.closSem.v')))))) )),
  inference(superposition,[],[f90,f71])).
fof(f90,plain,(
  ( ! [X0] : (s(bool,f(s('type.closSem.v',sK33(sK0,X0,bool,'type.closSem.v')))) != s(bool,g(s('type.closSem.v',sK33(sK0,X0,bool,'type.closSem.v')))) | ~p(s(bool,happ(s(fun('type.closSem.v',bool),X0),s('type.closSem.v',sK1))))) )),
  inference(superposition,[],[f58,f81])).
fof(f81,plain,(
  ( ! [X2,X0,X3,X1] : (s(fun(X0,X1),X2) = s(fun(X0,X1),X3) | s(X1,f(s(X0,sK33(X3,X2,X1,X0)))) != s(X1,g(s(X0,sK33(X3,X2,X1,X0))))) )),
  inference(cnf_transformation,[],[f51])).
fof(f51,plain,(
  ! [X0,X1,X2,X3] : (s(X1,f(s(X0,sK33(X3,X2,X1,X0)))) != s(X1,g(s(X0,sK33(X3,X2,X1,X0)))) | s(fun(X0,X1),X2) = s(fun(X0,X1),X3))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK33])],[f39])).
fof(f39,plain,(
  ! [X0,X1,X2,X3] : (? [X4] : s(X1,f(s(X0,X4))) != s(X1,g(s(X0,X4))) | s(fun(X0,X1),X2) = s(fun(X0,X1),X3))),
  inference(ennf_transformation,[],[f32])).
fof(f32,plain,(
  ! [X0,X1,X2,X3] : (! [X4] : s(X1,f(s(X0,X4))) = s(X1,g(s(X0,X4))) => s(fun(X0,X1),X2) = s(fun(X0,X1),X3))),
  inference(flattening,[],[f31])).
fof(f31,plain,(
  ! [X0,X1] : ! [X2,X3] : (! [X4] : s(X1,f(s(X0,X4))) = s(X1,g(s(X0,X4))) => s(fun(X0,X1),X2) = s(fun(X0,X1),X3))),
  inference(rectify,[],[f4])).
fof(f4,axiom,(
  ! [X1,X2] : ! [X3,X4] : (! [X5] : s(X2,f(s(X1,X5))) = s(X2,g(s(X1,X5))) => s(fun(X1,X2),X3) = s(fun(X1,X2),X4))),
  file('thm.closProps.is_closure_ind',aHL_EXT)).
fof(f2362,plain,(
  ( ! [X11] : (s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.RefPtr_1'(s('type.num.num',sK16(sK1)))) | s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.Block_2'(s('type.num.num',sK14(sK1)),s('type.list.list'('type.closSem.v'),sK15(sK1)))) | s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK13(sK1)))) | s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.Closure_5'(s('type.option.option'('type.num.num'),sK2(sK1)),s('type.list.list'('type.closSem.v'),sK3(sK1)),s('type.list.list'('type.closSem.v'),sK4(sK1)),s('type.num.num',sK5(sK1)),s('type.closLang.exp',sK6(sK1)))) | s('type.closSem.v',sK1) != s('type.closSem.v','const.closSem.RefPtr_1'(s('type.num.num',X11))) | s(bool,'F_0') != s(bool,f(s('type.closSem.v',sK33(sK0,sK0,bool,'type.closSem.v')))) | p(s(bool,g(s('type.closSem.v',sK33(sK0,sK0,bool,'type.closSem.v')))))) ) | $spl64),
  inference(subsumption_resolution,[],[f2291,f2113])).
fof(f2291,plain,(
  ( ! [X11] : (s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.RefPtr_1'(s('type.num.num',sK16(sK1)))) | s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.Block_2'(s('type.num.num',sK14(sK1)),s('type.list.list'('type.closSem.v'),sK15(sK1)))) | s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK13(sK1)))) | s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.Number_1'(s('type.integer.int',sK12(sK1)))) | s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.Closure_5'(s('type.option.option'('type.num.num'),sK2(sK1)),s('type.list.list'('type.closSem.v'),sK3(sK1)),s('type.list.list'('type.closSem.v'),sK4(sK1)),s('type.num.num',sK5(sK1)),s('type.closLang.exp',sK6(sK1)))) | s('type.closSem.v',sK1) != s('type.closSem.v','const.closSem.RefPtr_1'(s('type.num.num',X11))) | s(bool,'F_0') != s(bool,f(s('type.closSem.v',sK33(sK0,sK0,bool,'type.closSem.v')))) | p(s(bool,g(s('type.closSem.v',sK33(sK0,sK0,bool,'type.closSem.v')))))) )),
  inference(resolution,[],[f448,f742])).
fof(f742,plain,(
  ( ! [X4] : (~p(s(bool,happ(s(fun('type.closSem.v',bool),X4),s('type.closSem.v',sK1)))) | s(bool,'F_0') != s(bool,f(s('type.closSem.v',sK33(X4,sK0,bool,'type.closSem.v')))) | p(s(bool,g(s('type.closSem.v',sK33(X4,sK0,bool,'type.closSem.v')))))) )),
  inference(superposition,[],[f91,f71])).
fof(f91,plain,(
  ( ! [X1] : (s(bool,f(s('type.closSem.v',sK33(X1,sK0,bool,'type.closSem.v')))) != s(bool,g(s('type.closSem.v',sK33(X1,sK0,bool,'type.closSem.v')))) | ~p(s(bool,happ(s(fun('type.closSem.v',bool),X1),s('type.closSem.v',sK1))))) )),
  inference(superposition,[],[f58,f81])).
fof(f1712,plain,(
  s(bool,'F_0') = s(bool,g(s('type.closSem.v',sK33(sK0,sK0,bool,'type.closSem.v')))) | $spl40),
  inference(cnf_transformation,[],[f1712_D])).
fof(f1712_D,plain,(
  s(bool,'F_0') = s(bool,g(s('type.closSem.v',sK33(sK0,sK0,bool,'type.closSem.v')))) <=> ~$spl40),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl40])])).
fof(f1714,plain,(
  s(bool,'T_0') != s(bool,f(s('type.closSem.v',sK33(sK0,sK0,bool,'type.closSem.v')))) | $spl43),
  inference(cnf_transformation,[],[f1714_D])).
fof(f1714_D,plain,(
  s(bool,'T_0') != s(bool,f(s('type.closSem.v',sK33(sK0,sK0,bool,'type.closSem.v')))) <=> ~$spl43),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl43])])).
fof(f2361,plain,(
  ( ! [X10] : (s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.RefPtr_1'(s('type.num.num',sK16(sK1)))) | s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.Block_2'(s('type.num.num',sK14(sK1)),s('type.list.list'('type.closSem.v'),sK15(sK1)))) | s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK13(sK1)))) | s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.Closure_5'(s('type.option.option'('type.num.num'),sK2(sK1)),s('type.list.list'('type.closSem.v'),sK3(sK1)),s('type.list.list'('type.closSem.v'),sK4(sK1)),s('type.num.num',sK5(sK1)),s('type.closLang.exp',sK6(sK1)))) | s('type.closSem.v',sK1) != s('type.closSem.v','const.closSem.RefPtr_1'(s('type.num.num',X10))) | s(bool,'T_0') != s(bool,f(s('type.closSem.v',sK33(sK0,sK0,bool,'type.closSem.v')))) | s(bool,'F_0') = s(bool,g(s('type.closSem.v',sK33(sK0,sK0,bool,'type.closSem.v'))))) ) | $spl64),
  inference(subsumption_resolution,[],[f2290,f2113])).
fof(f2290,plain,(
  ( ! [X10] : (s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.RefPtr_1'(s('type.num.num',sK16(sK1)))) | s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.Block_2'(s('type.num.num',sK14(sK1)),s('type.list.list'('type.closSem.v'),sK15(sK1)))) | s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK13(sK1)))) | s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.Number_1'(s('type.integer.int',sK12(sK1)))) | s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.Closure_5'(s('type.option.option'('type.num.num'),sK2(sK1)),s('type.list.list'('type.closSem.v'),sK3(sK1)),s('type.list.list'('type.closSem.v'),sK4(sK1)),s('type.num.num',sK5(sK1)),s('type.closLang.exp',sK6(sK1)))) | s('type.closSem.v',sK1) != s('type.closSem.v','const.closSem.RefPtr_1'(s('type.num.num',X10))) | s(bool,'T_0') != s(bool,f(s('type.closSem.v',sK33(sK0,sK0,bool,'type.closSem.v')))) | s(bool,'F_0') = s(bool,g(s('type.closSem.v',sK33(sK0,sK0,bool,'type.closSem.v'))))) )),
  inference(resolution,[],[f448,f702])).
fof(f702,plain,(
  ( ! [X0] : (~p(s(bool,happ(s(fun('type.closSem.v',bool),X0),s('type.closSem.v',sK1)))) | s(bool,'T_0') != s(bool,f(s('type.closSem.v',sK33(sK0,X0,bool,'type.closSem.v')))) | s(bool,'F_0') = s(bool,g(s('type.closSem.v',sK33(sK0,X0,bool,'type.closSem.v'))))) )),
  inference(superposition,[],[f90,f80])).
fof(f80,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f3])).
fof(f3,axiom,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) | s(bool,'F_0') = s(bool,X0))),
  file('thm.closProps.is_closure_ind',aHL_BOOL_CASES)).
fof(f1698,plain,(
  s(bool,'T_0') = s(bool,g(s('type.closSem.v',sK33(sK0,sK0,bool,'type.closSem.v')))) | $spl26),
  inference(cnf_transformation,[],[f1698_D])).
fof(f1698_D,plain,(
  s(bool,'T_0') = s(bool,g(s('type.closSem.v',sK33(sK0,sK0,bool,'type.closSem.v')))) <=> ~$spl26),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl26])])).
fof(f2360,plain,(
  ( ! [X9] : (s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.RefPtr_1'(s('type.num.num',sK16(sK1)))) | s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.Block_2'(s('type.num.num',sK14(sK1)),s('type.list.list'('type.closSem.v'),sK15(sK1)))) | s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK13(sK1)))) | s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.Closure_5'(s('type.option.option'('type.num.num'),sK2(sK1)),s('type.list.list'('type.closSem.v'),sK3(sK1)),s('type.list.list'('type.closSem.v'),sK4(sK1)),s('type.num.num',sK5(sK1)),s('type.closLang.exp',sK6(sK1)))) | s('type.closSem.v',sK1) != s('type.closSem.v','const.closSem.RefPtr_1'(s('type.num.num',X9))) | s(bool,'F_0') != s(bool,f(s('type.closSem.v',sK33(sK0,sK0,bool,'type.closSem.v')))) | s(bool,'T_0') = s(bool,g(s('type.closSem.v',sK33(sK0,sK0,bool,'type.closSem.v'))))) ) | $spl64),
  inference(subsumption_resolution,[],[f2289,f2113])).
fof(f2289,plain,(
  ( ! [X9] : (s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.RefPtr_1'(s('type.num.num',sK16(sK1)))) | s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.Block_2'(s('type.num.num',sK14(sK1)),s('type.list.list'('type.closSem.v'),sK15(sK1)))) | s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK13(sK1)))) | s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.Number_1'(s('type.integer.int',sK12(sK1)))) | s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.Closure_5'(s('type.option.option'('type.num.num'),sK2(sK1)),s('type.list.list'('type.closSem.v'),sK3(sK1)),s('type.list.list'('type.closSem.v'),sK4(sK1)),s('type.num.num',sK5(sK1)),s('type.closLang.exp',sK6(sK1)))) | s('type.closSem.v',sK1) != s('type.closSem.v','const.closSem.RefPtr_1'(s('type.num.num',X9))) | s(bool,'F_0') != s(bool,f(s('type.closSem.v',sK33(sK0,sK0,bool,'type.closSem.v')))) | s(bool,'T_0') = s(bool,g(s('type.closSem.v',sK33(sK0,sK0,bool,'type.closSem.v'))))) )),
  inference(resolution,[],[f448,f703])).
fof(f703,plain,(
  ( ! [X1] : (~p(s(bool,happ(s(fun('type.closSem.v',bool),X1),s('type.closSem.v',sK1)))) | s(bool,'F_0') != s(bool,f(s('type.closSem.v',sK33(sK0,X1,bool,'type.closSem.v')))) | s(bool,'T_0') = s(bool,g(s('type.closSem.v',sK33(sK0,X1,bool,'type.closSem.v'))))) )),
  inference(superposition,[],[f90,f80])).
fof(f2359,plain,(
  ( ! [X8] : (s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.RefPtr_1'(s('type.num.num',sK16(sK1)))) | s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.Block_2'(s('type.num.num',sK14(sK1)),s('type.list.list'('type.closSem.v'),sK15(sK1)))) | s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK13(sK1)))) | s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.Closure_5'(s('type.option.option'('type.num.num'),sK2(sK1)),s('type.list.list'('type.closSem.v'),sK3(sK1)),s('type.list.list'('type.closSem.v'),sK4(sK1)),s('type.num.num',sK5(sK1)),s('type.closLang.exp',sK6(sK1)))) | s('type.closSem.v',sK1) != s('type.closSem.v','const.closSem.RefPtr_1'(s('type.num.num',X8))) | s(bool,'T_0') != s(bool,f(s('type.closSem.v',sK33(sK0,sK0,bool,'type.closSem.v')))) | s(bool,'F_0') = s(bool,g(s('type.closSem.v',sK33(sK0,sK0,bool,'type.closSem.v'))))) ) | $spl64),
  inference(subsumption_resolution,[],[f2288,f2113])).
fof(f2288,plain,(
  ( ! [X8] : (s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.RefPtr_1'(s('type.num.num',sK16(sK1)))) | s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.Block_2'(s('type.num.num',sK14(sK1)),s('type.list.list'('type.closSem.v'),sK15(sK1)))) | s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK13(sK1)))) | s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.Number_1'(s('type.integer.int',sK12(sK1)))) | s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.Closure_5'(s('type.option.option'('type.num.num'),sK2(sK1)),s('type.list.list'('type.closSem.v'),sK3(sK1)),s('type.list.list'('type.closSem.v'),sK4(sK1)),s('type.num.num',sK5(sK1)),s('type.closLang.exp',sK6(sK1)))) | s('type.closSem.v',sK1) != s('type.closSem.v','const.closSem.RefPtr_1'(s('type.num.num',X8))) | s(bool,'T_0') != s(bool,f(s('type.closSem.v',sK33(sK0,sK0,bool,'type.closSem.v')))) | s(bool,'F_0') = s(bool,g(s('type.closSem.v',sK33(sK0,sK0,bool,'type.closSem.v'))))) )),
  inference(resolution,[],[f448,f738])).
fof(f738,plain,(
  ( ! [X0] : (~p(s(bool,happ(s(fun('type.closSem.v',bool),X0),s('type.closSem.v',sK1)))) | s(bool,'T_0') != s(bool,f(s('type.closSem.v',sK33(X0,sK0,bool,'type.closSem.v')))) | s(bool,'F_0') = s(bool,g(s('type.closSem.v',sK33(X0,sK0,bool,'type.closSem.v'))))) )),
  inference(superposition,[],[f91,f80])).
fof(f2357,plain,(
  ( ! [X7] : (s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.RefPtr_1'(s('type.num.num',sK16(sK1)))) | s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.Block_2'(s('type.num.num',sK14(sK1)),s('type.list.list'('type.closSem.v'),sK15(sK1)))) | s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK13(sK1)))) | s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.Closure_5'(s('type.option.option'('type.num.num'),sK2(sK1)),s('type.list.list'('type.closSem.v'),sK3(sK1)),s('type.list.list'('type.closSem.v'),sK4(sK1)),s('type.num.num',sK5(sK1)),s('type.closLang.exp',sK6(sK1)))) | s('type.closSem.v',sK1) != s('type.closSem.v','const.closSem.RefPtr_1'(s('type.num.num',X7))) | s(bool,'F_0') != s(bool,f(s('type.closSem.v',sK33(sK0,sK0,bool,'type.closSem.v')))) | s(bool,'T_0') = s(bool,g(s('type.closSem.v',sK33(sK0,sK0,bool,'type.closSem.v'))))) ) | $spl64),
  inference(subsumption_resolution,[],[f2287,f2113])).
fof(f2287,plain,(
  ( ! [X7] : (s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.RefPtr_1'(s('type.num.num',sK16(sK1)))) | s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.Block_2'(s('type.num.num',sK14(sK1)),s('type.list.list'('type.closSem.v'),sK15(sK1)))) | s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK13(sK1)))) | s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.Number_1'(s('type.integer.int',sK12(sK1)))) | s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.Closure_5'(s('type.option.option'('type.num.num'),sK2(sK1)),s('type.list.list'('type.closSem.v'),sK3(sK1)),s('type.list.list'('type.closSem.v'),sK4(sK1)),s('type.num.num',sK5(sK1)),s('type.closLang.exp',sK6(sK1)))) | s('type.closSem.v',sK1) != s('type.closSem.v','const.closSem.RefPtr_1'(s('type.num.num',X7))) | s(bool,'F_0') != s(bool,f(s('type.closSem.v',sK33(sK0,sK0,bool,'type.closSem.v')))) | s(bool,'T_0') = s(bool,g(s('type.closSem.v',sK33(sK0,sK0,bool,'type.closSem.v'))))) )),
  inference(resolution,[],[f448,f739])).
fof(f739,plain,(
  ( ! [X1] : (~p(s(bool,happ(s(fun('type.closSem.v',bool),X1),s('type.closSem.v',sK1)))) | s(bool,'F_0') != s(bool,f(s('type.closSem.v',sK33(X1,sK0,bool,'type.closSem.v')))) | s(bool,'T_0') = s(bool,g(s('type.closSem.v',sK33(X1,sK0,bool,'type.closSem.v'))))) )),
  inference(superposition,[],[f91,f80])).
fof(f99,plain,(
  ( ! [X0] : (p(s(bool,happ(s(fun('type.closSem.v',bool),sK0),s('type.closSem.v',X0))))) ) | $spl2),
  inference(cnf_transformation,[],[f99_D])).
fof(f99_D,plain,(
  ( ! [X0] : (p(s(bool,happ(s(fun('type.closSem.v',bool),sK0),s('type.closSem.v',X0))))) ) <=> ~$spl2),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl2])])).
fof(f2356,plain,(
  ( ! [X4,X5] : (s('type.closSem.v',sK32(sK0,X4,'type.closSem.v')) = s('type.closSem.v','const.closSem.RefPtr_1'(s('type.num.num',sK16(sK32(sK0,X4,'type.closSem.v'))))) | ~p(s(bool,'const.relation.WF_1'(s(fun('type.closSem.v',fun('type.closSem.v',bool)),X4)))) | s('type.closSem.v','const.closSem.RefPtr_1'(s('type.num.num',X5))) != s('type.closSem.v',sK32(sK0,X4,'type.closSem.v')) | s('type.closSem.v',sK32(sK0,X4,'type.closSem.v')) = s('type.closSem.v','const.closSem.Closure_5'(s('type.option.option'('type.num.num'),sK2(sK32(sK0,X4,'type.closSem.v'))),s('type.list.list'('type.closSem.v'),sK3(sK32(sK0,X4,'type.closSem.v'))),s('type.list.list'('type.closSem.v'),sK4(sK32(sK0,X4,'type.closSem.v'))),s('type.num.num',sK5(sK32(sK0,X4,'type.closSem.v'))),s('type.closLang.exp',sK6(sK32(sK0,X4,'type.closSem.v'))))) | s('type.closSem.v',sK32(sK0,X4,'type.closSem.v')) = s('type.closSem.v','const.closSem.Number_1'(s('type.integer.int',sK12(sK32(sK0,X4,'type.closSem.v'))))) | s('type.closSem.v',sK32(sK0,X4,'type.closSem.v')) = s('type.closSem.v','const.closSem.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK13(sK32(sK0,X4,'type.closSem.v'))))) | s('type.closSem.v',sK32(sK0,X4,'type.closSem.v')) = s('type.closSem.v','const.closSem.Block_2'(s('type.num.num',sK14(sK32(sK0,X4,'type.closSem.v'))),s('type.list.list'('type.closSem.v'),sK15(sK32(sK0,X4,'type.closSem.v')))))) ) | $spl88),
  inference(cnf_transformation,[],[f2356_D])).
fof(f2356_D,plain,(
  ( ! [X4,X5] : (s('type.closSem.v',sK32(sK0,X4,'type.closSem.v')) = s('type.closSem.v','const.closSem.RefPtr_1'(s('type.num.num',sK16(sK32(sK0,X4,'type.closSem.v'))))) | ~p(s(bool,'const.relation.WF_1'(s(fun('type.closSem.v',fun('type.closSem.v',bool)),X4)))) | s('type.closSem.v','const.closSem.RefPtr_1'(s('type.num.num',X5))) != s('type.closSem.v',sK32(sK0,X4,'type.closSem.v')) | s('type.closSem.v',sK32(sK0,X4,'type.closSem.v')) = s('type.closSem.v','const.closSem.Closure_5'(s('type.option.option'('type.num.num'),sK2(sK32(sK0,X4,'type.closSem.v'))),s('type.list.list'('type.closSem.v'),sK3(sK32(sK0,X4,'type.closSem.v'))),s('type.list.list'('type.closSem.v'),sK4(sK32(sK0,X4,'type.closSem.v'))),s('type.num.num',sK5(sK32(sK0,X4,'type.closSem.v'))),s('type.closLang.exp',sK6(sK32(sK0,X4,'type.closSem.v'))))) | s('type.closSem.v',sK32(sK0,X4,'type.closSem.v')) = s('type.closSem.v','const.closSem.Number_1'(s('type.integer.int',sK12(sK32(sK0,X4,'type.closSem.v'))))) | s('type.closSem.v',sK32(sK0,X4,'type.closSem.v')) = s('type.closSem.v','const.closSem.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK13(sK32(sK0,X4,'type.closSem.v'))))) | s('type.closSem.v',sK32(sK0,X4,'type.closSem.v')) = s('type.closSem.v','const.closSem.Block_2'(s('type.num.num',sK14(sK32(sK0,X4,'type.closSem.v'))),s('type.list.list'('type.closSem.v'),sK15(sK32(sK0,X4,'type.closSem.v')))))) ) <=> ~$spl88),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl88])])).
fof(f2286,plain,(
  ( ! [X6,X4,X5] : (s('type.closSem.v',sK32(sK0,X4,'type.closSem.v')) = s('type.closSem.v','const.closSem.RefPtr_1'(s('type.num.num',sK16(sK32(sK0,X4,'type.closSem.v'))))) | s('type.closSem.v',sK32(sK0,X4,'type.closSem.v')) = s('type.closSem.v','const.closSem.Block_2'(s('type.num.num',sK14(sK32(sK0,X4,'type.closSem.v'))),s('type.list.list'('type.closSem.v'),sK15(sK32(sK0,X4,'type.closSem.v'))))) | s('type.closSem.v',sK32(sK0,X4,'type.closSem.v')) = s('type.closSem.v','const.closSem.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK13(sK32(sK0,X4,'type.closSem.v'))))) | s('type.closSem.v',sK32(sK0,X4,'type.closSem.v')) = s('type.closSem.v','const.closSem.Number_1'(s('type.integer.int',sK12(sK32(sK0,X4,'type.closSem.v'))))) | s('type.closSem.v',sK32(sK0,X4,'type.closSem.v')) = s('type.closSem.v','const.closSem.Closure_5'(s('type.option.option'('type.num.num'),sK2(sK32(sK0,X4,'type.closSem.v'))),s('type.list.list'('type.closSem.v'),sK3(sK32(sK0,X4,'type.closSem.v'))),s('type.list.list'('type.closSem.v'),sK4(sK32(sK0,X4,'type.closSem.v'))),s('type.num.num',sK5(sK32(sK0,X4,'type.closSem.v'))),s('type.closLang.exp',sK6(sK32(sK0,X4,'type.closSem.v'))))) | s('type.closSem.v','const.closSem.RefPtr_1'(s('type.num.num',X5))) != s('type.closSem.v',sK32(sK0,X4,'type.closSem.v')) | p(s(bool,happ(s(fun('type.closSem.v',bool),sK0),s('type.closSem.v',X6)))) | ~p(s(bool,'const.relation.WF_1'(s(fun('type.closSem.v',fun('type.closSem.v',bool)),X4))))) )),
  inference(resolution,[],[f448,f67])).
fof(f2234,plain,(
  $false | $spl50),
  inference(subsumption_resolution,[],[f2220,f531])).
fof(f2220,plain,(
  s(bool,'T_0') = s(bool,happ(s(fun('type.closSem.v',bool),sK0),s('type.closSem.v',sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v')))) | $spl50),
  inference(superposition,[],[f223,f1724])).
fof(f223,plain,(
  ( ! [X0,X1] : (s(bool,'T_0') = s(bool,happ(s(fun('type.closSem.v',bool),sK0),s('type.closSem.v','const.closSem.Block_2'(s('type.num.num',X0),s('type.list.list'('type.closSem.v'),X1)))))) )),
  inference(resolution,[],[f56,f75])).
fof(f56,plain,(
  ( ! [X4,X3] : (p(s(bool,happ(s(fun('type.closSem.v',bool),sK0),s('type.closSem.v','const.closSem.Block_2'(s('type.num.num',X3),s('type.list.list'('type.closSem.v'),X4))))))) )),
  inference(cnf_transformation,[],[f41])).
fof(f1726,plain,(
  s('type.closSem.v',sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v')) = s('type.closSem.v','const.closSem.RefPtr_1'(s('type.num.num',sK21(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))))) | $spl52),
  inference(cnf_transformation,[],[f1726_D])).
fof(f1726_D,plain,(
  s('type.closSem.v',sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v')) = s('type.closSem.v','const.closSem.RefPtr_1'(s('type.num.num',sK21(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))))) <=> ~$spl52),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl52])])).
fof(f2219,plain,(
  s('type.closSem.v',sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v')) = s('type.closSem.v','const.closSem.Recclosure_5'(s('type.option.option'('type.num.num'),sK27(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))),s('type.list.list'('type.closSem.v'),sK28(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))),s('type.list.list'('type.closSem.v'),sK29(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))),s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),sK30(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))),s('type.num.num',sK31(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))))) | s('type.closSem.v',sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v')) = s('type.closSem.v','const.closSem.Closure_5'(s('type.option.option'('type.num.num'),sK22(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))),s('type.list.list'('type.closSem.v'),sK23(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))),s('type.list.list'('type.closSem.v'),sK24(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))),s('type.num.num',sK25(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))),s('type.closLang.exp',sK26(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))))) | s('type.closSem.v',sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v')) = s('type.closSem.v','const.closSem.RefPtr_1'(s('type.num.num',sK21(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))))) | s('type.closSem.v',sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v')) = s('type.closSem.v','const.closSem.Block_2'(s('type.num.num',sK19(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))),s('type.list.list'('type.closSem.v'),sK20(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))))) | ($spl47 | $spl49)),
  inference(subsumption_resolution,[],[f2218,f1719])).
fof(f2218,plain,(
  s('type.closSem.v',sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v')) = s('type.closSem.v','const.closSem.Recclosure_5'(s('type.option.option'('type.num.num'),sK27(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))),s('type.list.list'('type.closSem.v'),sK28(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))),s('type.list.list'('type.closSem.v'),sK29(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))),s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),sK30(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))),s('type.num.num',sK31(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))))) | s('type.closSem.v',sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v')) = s('type.closSem.v','const.closSem.Closure_5'(s('type.option.option'('type.num.num'),sK22(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))),s('type.list.list'('type.closSem.v'),sK23(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))),s('type.list.list'('type.closSem.v'),sK24(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))),s('type.num.num',sK25(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))),s('type.closLang.exp',sK26(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))))) | s('type.closSem.v',sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v')) = s('type.closSem.v','const.closSem.RefPtr_1'(s('type.num.num',sK21(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))))) | s('type.closSem.v',sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v')) = s('type.closSem.v','const.closSem.Block_2'(s('type.num.num',sK19(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))),s('type.list.list'('type.closSem.v'),sK20(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))))) | s('type.closSem.v',sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v')) = s('type.closSem.v','const.closSem.Number_1'(s('type.integer.int',sK17(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))))) | $spl49),
  inference(trivial_inequality_removal,[],[f2217])).
fof(f2217,plain,(
  s('type.closSem.v',sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v')) != s('type.closSem.v',sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v')) | s('type.closSem.v',sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v')) = s('type.closSem.v','const.closSem.Recclosure_5'(s('type.option.option'('type.num.num'),sK27(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))),s('type.list.list'('type.closSem.v'),sK28(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))),s('type.list.list'('type.closSem.v'),sK29(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))),s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),sK30(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))),s('type.num.num',sK31(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))))) | s('type.closSem.v',sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v')) = s('type.closSem.v','const.closSem.Closure_5'(s('type.option.option'('type.num.num'),sK22(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))),s('type.list.list'('type.closSem.v'),sK23(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))),s('type.list.list'('type.closSem.v'),sK24(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))),s('type.num.num',sK25(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))),s('type.closLang.exp',sK26(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))))) | s('type.closSem.v',sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v')) = s('type.closSem.v','const.closSem.RefPtr_1'(s('type.num.num',sK21(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))))) | s('type.closSem.v',sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v')) = s('type.closSem.v','const.closSem.Block_2'(s('type.num.num',sK19(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))),s('type.list.list'('type.closSem.v'),sK20(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))))) | s('type.closSem.v',sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v')) = s('type.closSem.v','const.closSem.Number_1'(s('type.integer.int',sK17(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))))) | $spl49),
  inference(superposition,[],[f1721,f65])).
fof(f2167,plain,(
  $false | $spl48),
  inference(subsumption_resolution,[],[f2153,f531])).
fof(f2153,plain,(
  s(bool,'T_0') = s(bool,happ(s(fun('type.closSem.v',bool),sK0),s('type.closSem.v',sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v')))) | $spl48),
  inference(superposition,[],[f289,f1722])).
fof(f289,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,happ(s(fun('type.closSem.v',bool),sK0),s('type.closSem.v','const.closSem.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),X0)))))) )),
  inference(resolution,[],[f55,f75])).
fof(f55,plain,(
  ( ! [X5] : (p(s(bool,happ(s(fun('type.closSem.v',bool),sK0),s('type.closSem.v','const.closSem.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),X5))))))) )),
  inference(cnf_transformation,[],[f41])).
fof(f2126,plain,(
  ( ! [X22] : (s('type.closSem.v',sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v')) != s('type.closSem.v','const.closSem.Number_1'(s('type.integer.int',X22)))) ) | $spl76),
  inference(cnf_transformation,[],[f2126_D])).
fof(f2126_D,plain,(
  ( ! [X22] : (s('type.closSem.v',sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v')) != s('type.closSem.v','const.closSem.Number_1'(s('type.integer.int',X22)))) ) <=> ~$spl76),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl76])])).
fof(f2130,plain,(
  s('type.closSem.v',sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v')) = s('type.closSem.v','const.closSem.Number_1'(s('type.integer.int',sK12(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))))) | $spl80),
  inference(cnf_transformation,[],[f2130_D])).
fof(f2130_D,plain,(
  s('type.closSem.v',sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v')) = s('type.closSem.v','const.closSem.Number_1'(s('type.integer.int',sK12(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))))) <=> ~$spl80),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl80])])).
fof(f2125,plain,(
  ( ! [X22] : (s('type.closSem.v',sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v')) = s('type.closSem.v','const.closSem.RefPtr_1'(s('type.num.num',sK16(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))))) | s('type.closSem.v',sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v')) = s('type.closSem.v','const.closSem.Block_2'(s('type.num.num',sK14(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))),s('type.list.list'('type.closSem.v'),sK15(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))))) | s('type.closSem.v',sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v')) = s('type.closSem.v','const.closSem.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK13(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))))) | s('type.closSem.v',sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v')) = s('type.closSem.v','const.closSem.Number_1'(s('type.integer.int',sK12(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))))) | s('type.closSem.v',sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v')) = s('type.closSem.v','const.closSem.Closure_5'(s('type.option.option'('type.num.num'),sK2(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))),s('type.list.list'('type.closSem.v'),sK3(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))),s('type.list.list'('type.closSem.v'),sK4(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))),s('type.num.num',sK5(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))),s('type.closLang.exp',sK6(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))))) | s('type.closSem.v',sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v')) != s('type.closSem.v','const.closSem.Number_1'(s('type.integer.int',X22)))) )),
  inference(subsumption_resolution,[],[f2104,f76])).
fof(f2104,plain,(
  ( ! [X22] : (p(s(bool,'F_0')) | s('type.closSem.v',sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v')) = s('type.closSem.v','const.closSem.RefPtr_1'(s('type.num.num',sK16(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))))) | s('type.closSem.v',sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v')) = s('type.closSem.v','const.closSem.Block_2'(s('type.num.num',sK14(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))),s('type.list.list'('type.closSem.v'),sK15(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))))) | s('type.closSem.v',sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v')) = s('type.closSem.v','const.closSem.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK13(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))))) | s('type.closSem.v',sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v')) = s('type.closSem.v','const.closSem.Number_1'(s('type.integer.int',sK12(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))))) | s('type.closSem.v',sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v')) = s('type.closSem.v','const.closSem.Closure_5'(s('type.option.option'('type.num.num'),sK2(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))),s('type.list.list'('type.closSem.v'),sK3(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))),s('type.list.list'('type.closSem.v'),sK4(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))),s('type.num.num',sK5(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))),s('type.closLang.exp',sK6(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))))) | s('type.closSem.v',sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v')) != s('type.closSem.v','const.closSem.Number_1'(s('type.integer.int',X22)))) )),
  inference(superposition,[],[f445,f533])).
fof(f445,plain,(
  ( ! [X0,X1] : (p(s(bool,happ(s(fun('type.closSem.v',bool),sK0),s('type.closSem.v',X0)))) | s('type.closSem.v',X0) = s('type.closSem.v','const.closSem.RefPtr_1'(s('type.num.num',sK16(X0)))) | s('type.closSem.v',X0) = s('type.closSem.v','const.closSem.Block_2'(s('type.num.num',sK14(X0)),s('type.list.list'('type.closSem.v'),sK15(X0)))) | s('type.closSem.v',X0) = s('type.closSem.v','const.closSem.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK13(X0)))) | s('type.closSem.v',X0) = s('type.closSem.v','const.closSem.Number_1'(s('type.integer.int',sK12(X0)))) | s('type.closSem.v',X0) = s('type.closSem.v','const.closSem.Closure_5'(s('type.option.option'('type.num.num'),sK2(X0)),s('type.list.list'('type.closSem.v'),sK3(X0)),s('type.list.list'('type.closSem.v'),sK4(X0)),s('type.num.num',sK5(X0)),s('type.closLang.exp',sK6(X0)))) | s('type.closSem.v',X0) != s('type.closSem.v','const.closSem.Number_1'(s('type.integer.int',X1)))) )),
  inference(superposition,[],[f53,f59])).
fof(f59,plain,(
  ( ! [X30,X0] : (s('type.closSem.v',X0) = s('type.closSem.v','const.closSem.RefPtr_1'(s('type.num.num',sK16(X0)))) | s('type.closSem.v',X0) = s('type.closSem.v','const.closSem.Block_2'(s('type.num.num',sK14(X0)),s('type.list.list'('type.closSem.v'),sK15(X0)))) | s('type.closSem.v',X0) = s('type.closSem.v','const.closSem.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK13(X0)))) | s('type.closSem.v',X0) = s('type.closSem.v','const.closSem.Number_1'(s('type.integer.int',sK12(X0)))) | s('type.closSem.v',X0) = s('type.closSem.v','const.closSem.Recclosure_5'(s('type.option.option'('type.num.num'),sK7(X0)),s('type.list.list'('type.closSem.v'),sK8(X0)),s('type.list.list'('type.closSem.v'),sK9(X0)),s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),sK10(X0)),s('type.num.num',sK11(X0)))) | s('type.closSem.v',X0) = s('type.closSem.v','const.closSem.Closure_5'(s('type.option.option'('type.num.num'),sK2(X0)),s('type.list.list'('type.closSem.v'),sK3(X0)),s('type.list.list'('type.closSem.v'),sK4(X0)),s('type.num.num',sK5(X0)),s('type.closLang.exp',sK6(X0)))) | s('type.closSem.v',X0) != s('type.closSem.v','const.closSem.Number_1'(s('type.integer.int',X30)))) )),
  inference(cnf_transformation,[],[f43])).
fof(f2113,plain,(
  ( ! [X7] : (s('type.closSem.v',sK1) != s('type.closSem.v','const.closSem.Number_1'(s('type.integer.int',X7)))) ) | $spl64),
  inference(cnf_transformation,[],[f2113_D])).
fof(f2113_D,plain,(
  ( ! [X7] : (s('type.closSem.v',sK1) != s('type.closSem.v','const.closSem.Number_1'(s('type.integer.int',X7)))) ) <=> ~$spl64),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl64])])).
fof(f2117,plain,(
  s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.Number_1'(s('type.integer.int',sK12(sK1)))) | $spl68),
  inference(cnf_transformation,[],[f2117_D])).
fof(f2117_D,plain,(
  s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.Number_1'(s('type.integer.int',sK12(sK1)))) <=> ~$spl68),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl68])])).
fof(f2124,plain,(
  ( ! [X21] : (s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.RefPtr_1'(s('type.num.num',sK16(sK1)))) | s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.Block_2'(s('type.num.num',sK14(sK1)),s('type.list.list'('type.closSem.v'),sK15(sK1)))) | s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK13(sK1)))) | s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.Number_1'(s('type.integer.int',sK12(sK1)))) | s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.Closure_5'(s('type.option.option'('type.num.num'),sK2(sK1)),s('type.list.list'('type.closSem.v'),sK3(sK1)),s('type.list.list'('type.closSem.v'),sK4(sK1)),s('type.num.num',sK5(sK1)),s('type.closLang.exp',sK6(sK1)))) | s('type.closSem.v',sK1) != s('type.closSem.v','const.closSem.Number_1'(s('type.integer.int',X21)))) )),
  inference(subsumption_resolution,[],[f2103,f76])).
fof(f2103,plain,(
  ( ! [X21] : (p(s(bool,'F_0')) | s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.RefPtr_1'(s('type.num.num',sK16(sK1)))) | s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.Block_2'(s('type.num.num',sK14(sK1)),s('type.list.list'('type.closSem.v'),sK15(sK1)))) | s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK13(sK1)))) | s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.Number_1'(s('type.integer.int',sK12(sK1)))) | s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.Closure_5'(s('type.option.option'('type.num.num'),sK2(sK1)),s('type.list.list'('type.closSem.v'),sK3(sK1)),s('type.list.list'('type.closSem.v'),sK4(sK1)),s('type.num.num',sK5(sK1)),s('type.closLang.exp',sK6(sK1)))) | s('type.closSem.v',sK1) != s('type.closSem.v','const.closSem.Number_1'(s('type.integer.int',X21)))) )),
  inference(superposition,[],[f445,f88])).
fof(f2048,plain,(
  ( ! [X12] : (s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.RefPtr_1'(s('type.num.num',sK16(sK1)))) | s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.Block_2'(s('type.num.num',sK14(sK1)),s('type.list.list'('type.closSem.v'),sK15(sK1)))) | s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK13(sK1)))) | s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.Number_1'(s('type.integer.int',sK12(sK1)))) | s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.Closure_5'(s('type.option.option'('type.num.num'),sK2(sK1)),s('type.list.list'('type.closSem.v'),sK3(sK1)),s('type.list.list'('type.closSem.v'),sK4(sK1)),s('type.num.num',sK5(sK1)),s('type.closLang.exp',sK6(sK1)))) | s('type.closSem.v',sK1) != s('type.closSem.v','const.closSem.Number_1'(s('type.integer.int',X12))) | s(bool,'F_0') != s(bool,f(s('type.closSem.v',sK33(sK0,sK0,bool,'type.closSem.v')))) | p(s(bool,g(s('type.closSem.v',sK33(sK0,sK0,bool,'type.closSem.v')))))) )),
  inference(resolution,[],[f445,f706])).
fof(f2047,plain,(
  ( ! [X11] : (s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.RefPtr_1'(s('type.num.num',sK16(sK1)))) | s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.Block_2'(s('type.num.num',sK14(sK1)),s('type.list.list'('type.closSem.v'),sK15(sK1)))) | s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK13(sK1)))) | s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.Number_1'(s('type.integer.int',sK12(sK1)))) | s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.Closure_5'(s('type.option.option'('type.num.num'),sK2(sK1)),s('type.list.list'('type.closSem.v'),sK3(sK1)),s('type.list.list'('type.closSem.v'),sK4(sK1)),s('type.num.num',sK5(sK1)),s('type.closLang.exp',sK6(sK1)))) | s('type.closSem.v',sK1) != s('type.closSem.v','const.closSem.Number_1'(s('type.integer.int',X11))) | s(bool,'F_0') != s(bool,f(s('type.closSem.v',sK33(sK0,sK0,bool,'type.closSem.v')))) | p(s(bool,g(s('type.closSem.v',sK33(sK0,sK0,bool,'type.closSem.v')))))) )),
  inference(resolution,[],[f445,f742])).
fof(f2046,plain,(
  ( ! [X10] : (s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.RefPtr_1'(s('type.num.num',sK16(sK1)))) | s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.Block_2'(s('type.num.num',sK14(sK1)),s('type.list.list'('type.closSem.v'),sK15(sK1)))) | s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK13(sK1)))) | s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.Number_1'(s('type.integer.int',sK12(sK1)))) | s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.Closure_5'(s('type.option.option'('type.num.num'),sK2(sK1)),s('type.list.list'('type.closSem.v'),sK3(sK1)),s('type.list.list'('type.closSem.v'),sK4(sK1)),s('type.num.num',sK5(sK1)),s('type.closLang.exp',sK6(sK1)))) | s('type.closSem.v',sK1) != s('type.closSem.v','const.closSem.Number_1'(s('type.integer.int',X10))) | s(bool,'T_0') != s(bool,f(s('type.closSem.v',sK33(sK0,sK0,bool,'type.closSem.v')))) | s(bool,'F_0') = s(bool,g(s('type.closSem.v',sK33(sK0,sK0,bool,'type.closSem.v'))))) )),
  inference(resolution,[],[f445,f702])).
fof(f2045,plain,(
  ( ! [X9] : (s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.RefPtr_1'(s('type.num.num',sK16(sK1)))) | s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.Block_2'(s('type.num.num',sK14(sK1)),s('type.list.list'('type.closSem.v'),sK15(sK1)))) | s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK13(sK1)))) | s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.Number_1'(s('type.integer.int',sK12(sK1)))) | s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.Closure_5'(s('type.option.option'('type.num.num'),sK2(sK1)),s('type.list.list'('type.closSem.v'),sK3(sK1)),s('type.list.list'('type.closSem.v'),sK4(sK1)),s('type.num.num',sK5(sK1)),s('type.closLang.exp',sK6(sK1)))) | s('type.closSem.v',sK1) != s('type.closSem.v','const.closSem.Number_1'(s('type.integer.int',X9))) | s(bool,'F_0') != s(bool,f(s('type.closSem.v',sK33(sK0,sK0,bool,'type.closSem.v')))) | s(bool,'T_0') = s(bool,g(s('type.closSem.v',sK33(sK0,sK0,bool,'type.closSem.v'))))) )),
  inference(resolution,[],[f445,f703])).
fof(f2044,plain,(
  ( ! [X8] : (s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.RefPtr_1'(s('type.num.num',sK16(sK1)))) | s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.Block_2'(s('type.num.num',sK14(sK1)),s('type.list.list'('type.closSem.v'),sK15(sK1)))) | s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK13(sK1)))) | s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.Number_1'(s('type.integer.int',sK12(sK1)))) | s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.Closure_5'(s('type.option.option'('type.num.num'),sK2(sK1)),s('type.list.list'('type.closSem.v'),sK3(sK1)),s('type.list.list'('type.closSem.v'),sK4(sK1)),s('type.num.num',sK5(sK1)),s('type.closLang.exp',sK6(sK1)))) | s('type.closSem.v',sK1) != s('type.closSem.v','const.closSem.Number_1'(s('type.integer.int',X8))) | s(bool,'T_0') != s(bool,f(s('type.closSem.v',sK33(sK0,sK0,bool,'type.closSem.v')))) | s(bool,'F_0') = s(bool,g(s('type.closSem.v',sK33(sK0,sK0,bool,'type.closSem.v'))))) )),
  inference(resolution,[],[f445,f738])).
fof(f2043,plain,(
  ( ! [X7] : (s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.RefPtr_1'(s('type.num.num',sK16(sK1)))) | s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.Block_2'(s('type.num.num',sK14(sK1)),s('type.list.list'('type.closSem.v'),sK15(sK1)))) | s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK13(sK1)))) | s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.Number_1'(s('type.integer.int',sK12(sK1)))) | s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.Closure_5'(s('type.option.option'('type.num.num'),sK2(sK1)),s('type.list.list'('type.closSem.v'),sK3(sK1)),s('type.list.list'('type.closSem.v'),sK4(sK1)),s('type.num.num',sK5(sK1)),s('type.closLang.exp',sK6(sK1)))) | s('type.closSem.v',sK1) != s('type.closSem.v','const.closSem.Number_1'(s('type.integer.int',X7))) | s(bool,'F_0') != s(bool,f(s('type.closSem.v',sK33(sK0,sK0,bool,'type.closSem.v')))) | s(bool,'T_0') = s(bool,g(s('type.closSem.v',sK33(sK0,sK0,bool,'type.closSem.v'))))) )),
  inference(resolution,[],[f445,f739])).
fof(f2112,plain,(
  ( ! [X4,X5] : (s('type.closSem.v',sK32(sK0,X4,'type.closSem.v')) = s('type.closSem.v','const.closSem.RefPtr_1'(s('type.num.num',sK16(sK32(sK0,X4,'type.closSem.v'))))) | ~p(s(bool,'const.relation.WF_1'(s(fun('type.closSem.v',fun('type.closSem.v',bool)),X4)))) | s('type.closSem.v','const.closSem.Number_1'(s('type.integer.int',X5))) != s('type.closSem.v',sK32(sK0,X4,'type.closSem.v')) | s('type.closSem.v',sK32(sK0,X4,'type.closSem.v')) = s('type.closSem.v','const.closSem.Closure_5'(s('type.option.option'('type.num.num'),sK2(sK32(sK0,X4,'type.closSem.v'))),s('type.list.list'('type.closSem.v'),sK3(sK32(sK0,X4,'type.closSem.v'))),s('type.list.list'('type.closSem.v'),sK4(sK32(sK0,X4,'type.closSem.v'))),s('type.num.num',sK5(sK32(sK0,X4,'type.closSem.v'))),s('type.closLang.exp',sK6(sK32(sK0,X4,'type.closSem.v'))))) | s('type.closSem.v',sK32(sK0,X4,'type.closSem.v')) = s('type.closSem.v','const.closSem.Number_1'(s('type.integer.int',sK12(sK32(sK0,X4,'type.closSem.v'))))) | s('type.closSem.v',sK32(sK0,X4,'type.closSem.v')) = s('type.closSem.v','const.closSem.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK13(sK32(sK0,X4,'type.closSem.v'))))) | s('type.closSem.v',sK32(sK0,X4,'type.closSem.v')) = s('type.closSem.v','const.closSem.Block_2'(s('type.num.num',sK14(sK32(sK0,X4,'type.closSem.v'))),s('type.list.list'('type.closSem.v'),sK15(sK32(sK0,X4,'type.closSem.v')))))) ) | $spl62),
  inference(cnf_transformation,[],[f2112_D])).
fof(f2112_D,plain,(
  ( ! [X4,X5] : (s('type.closSem.v',sK32(sK0,X4,'type.closSem.v')) = s('type.closSem.v','const.closSem.RefPtr_1'(s('type.num.num',sK16(sK32(sK0,X4,'type.closSem.v'))))) | ~p(s(bool,'const.relation.WF_1'(s(fun('type.closSem.v',fun('type.closSem.v',bool)),X4)))) | s('type.closSem.v','const.closSem.Number_1'(s('type.integer.int',X5))) != s('type.closSem.v',sK32(sK0,X4,'type.closSem.v')) | s('type.closSem.v',sK32(sK0,X4,'type.closSem.v')) = s('type.closSem.v','const.closSem.Closure_5'(s('type.option.option'('type.num.num'),sK2(sK32(sK0,X4,'type.closSem.v'))),s('type.list.list'('type.closSem.v'),sK3(sK32(sK0,X4,'type.closSem.v'))),s('type.list.list'('type.closSem.v'),sK4(sK32(sK0,X4,'type.closSem.v'))),s('type.num.num',sK5(sK32(sK0,X4,'type.closSem.v'))),s('type.closLang.exp',sK6(sK32(sK0,X4,'type.closSem.v'))))) | s('type.closSem.v',sK32(sK0,X4,'type.closSem.v')) = s('type.closSem.v','const.closSem.Number_1'(s('type.integer.int',sK12(sK32(sK0,X4,'type.closSem.v'))))) | s('type.closSem.v',sK32(sK0,X4,'type.closSem.v')) = s('type.closSem.v','const.closSem.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK13(sK32(sK0,X4,'type.closSem.v'))))) | s('type.closSem.v',sK32(sK0,X4,'type.closSem.v')) = s('type.closSem.v','const.closSem.Block_2'(s('type.num.num',sK14(sK32(sK0,X4,'type.closSem.v'))),s('type.list.list'('type.closSem.v'),sK15(sK32(sK0,X4,'type.closSem.v')))))) ) <=> ~$spl62),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl62])])).
fof(f2042,plain,(
  ( ! [X6,X4,X5] : (s('type.closSem.v',sK32(sK0,X4,'type.closSem.v')) = s('type.closSem.v','const.closSem.RefPtr_1'(s('type.num.num',sK16(sK32(sK0,X4,'type.closSem.v'))))) | s('type.closSem.v',sK32(sK0,X4,'type.closSem.v')) = s('type.closSem.v','const.closSem.Block_2'(s('type.num.num',sK14(sK32(sK0,X4,'type.closSem.v'))),s('type.list.list'('type.closSem.v'),sK15(sK32(sK0,X4,'type.closSem.v'))))) | s('type.closSem.v',sK32(sK0,X4,'type.closSem.v')) = s('type.closSem.v','const.closSem.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK13(sK32(sK0,X4,'type.closSem.v'))))) | s('type.closSem.v',sK32(sK0,X4,'type.closSem.v')) = s('type.closSem.v','const.closSem.Number_1'(s('type.integer.int',sK12(sK32(sK0,X4,'type.closSem.v'))))) | s('type.closSem.v',sK32(sK0,X4,'type.closSem.v')) = s('type.closSem.v','const.closSem.Closure_5'(s('type.option.option'('type.num.num'),sK2(sK32(sK0,X4,'type.closSem.v'))),s('type.list.list'('type.closSem.v'),sK3(sK32(sK0,X4,'type.closSem.v'))),s('type.list.list'('type.closSem.v'),sK4(sK32(sK0,X4,'type.closSem.v'))),s('type.num.num',sK5(sK32(sK0,X4,'type.closSem.v'))),s('type.closLang.exp',sK6(sK32(sK0,X4,'type.closSem.v'))))) | s('type.closSem.v','const.closSem.Number_1'(s('type.integer.int',X5))) != s('type.closSem.v',sK32(sK0,X4,'type.closSem.v')) | p(s(bool,happ(s(fun('type.closSem.v',bool),sK0),s('type.closSem.v',X6)))) | ~p(s(bool,'const.relation.WF_1'(s(fun('type.closSem.v',fun('type.closSem.v',bool)),X4))))) )),
  inference(resolution,[],[f445,f67])).
fof(f1710,plain,(
  s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.Closure_5'(s('type.option.option'('type.num.num'),sK22(sK1)),s('type.list.list'('type.closSem.v'),sK23(sK1)),s('type.list.list'('type.closSem.v'),sK24(sK1)),s('type.num.num',sK25(sK1)),s('type.closLang.exp',sK26(sK1)))) | $spl38),
  inference(cnf_transformation,[],[f1710_D])).
fof(f1710_D,plain,(
  s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.Closure_5'(s('type.option.option'('type.num.num'),sK22(sK1)),s('type.list.list'('type.closSem.v'),sK23(sK1)),s('type.list.list'('type.closSem.v'),sK24(sK1)),s('type.num.num',sK25(sK1)),s('type.closLang.exp',sK26(sK1)))) <=> ~$spl38),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl38])])).
fof(f1768,plain,(
  s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.Recclosure_5'(s('type.option.option'('type.num.num'),sK27(sK1)),s('type.list.list'('type.closSem.v'),sK28(sK1)),s('type.list.list'('type.closSem.v'),sK29(sK1)),s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),sK30(sK1)),s('type.num.num',sK31(sK1)))) | $spl56),
  inference(cnf_transformation,[],[f1768_D])).
fof(f1768_D,plain,(
  s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.Recclosure_5'(s('type.option.option'('type.num.num'),sK27(sK1)),s('type.list.list'('type.closSem.v'),sK28(sK1)),s('type.list.list'('type.closSem.v'),sK29(sK1)),s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),sK30(sK1)),s('type.num.num',sK31(sK1)))) <=> ~$spl56),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl56])])).
fof(f2039,plain,(
  s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.Recclosure_5'(s('type.option.option'('type.num.num'),sK27(sK1)),s('type.list.list'('type.closSem.v'),sK28(sK1)),s('type.list.list'('type.closSem.v'),sK29(sK1)),s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),sK30(sK1)),s('type.num.num',sK31(sK1)))) | s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.Closure_5'(s('type.option.option'('type.num.num'),sK22(sK1)),s('type.list.list'('type.closSem.v'),sK23(sK1)),s('type.list.list'('type.closSem.v'),sK24(sK1)),s('type.num.num',sK25(sK1)),s('type.closLang.exp',sK26(sK1)))) | ($spl31 | $spl33 | $spl35 | $spl37)),
  inference(subsumption_resolution,[],[f2038,f1701])).
fof(f1701,plain,(
  s('type.closSem.v',sK1) != s('type.closSem.v','const.closSem.Number_1'(s('type.integer.int',sK17(sK1)))) | $spl31),
  inference(cnf_transformation,[],[f1701_D])).
fof(f1701_D,plain,(
  s('type.closSem.v',sK1) != s('type.closSem.v','const.closSem.Number_1'(s('type.integer.int',sK17(sK1)))) <=> ~$spl31),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl31])])).
fof(f2038,plain,(
  s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.Recclosure_5'(s('type.option.option'('type.num.num'),sK27(sK1)),s('type.list.list'('type.closSem.v'),sK28(sK1)),s('type.list.list'('type.closSem.v'),sK29(sK1)),s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),sK30(sK1)),s('type.num.num',sK31(sK1)))) | s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.Closure_5'(s('type.option.option'('type.num.num'),sK22(sK1)),s('type.list.list'('type.closSem.v'),sK23(sK1)),s('type.list.list'('type.closSem.v'),sK24(sK1)),s('type.num.num',sK25(sK1)),s('type.closLang.exp',sK26(sK1)))) | s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.Number_1'(s('type.integer.int',sK17(sK1)))) | ($spl33 | $spl35 | $spl37)),
  inference(subsumption_resolution,[],[f2037,f1705])).
fof(f1705,plain,(
  s('type.closSem.v',sK1) != s('type.closSem.v','const.closSem.Block_2'(s('type.num.num',sK19(sK1)),s('type.list.list'('type.closSem.v'),sK20(sK1)))) | $spl35),
  inference(cnf_transformation,[],[f1705_D])).
fof(f1705_D,plain,(
  s('type.closSem.v',sK1) != s('type.closSem.v','const.closSem.Block_2'(s('type.num.num',sK19(sK1)),s('type.list.list'('type.closSem.v'),sK20(sK1)))) <=> ~$spl35),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl35])])).
fof(f2037,plain,(
  s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.Recclosure_5'(s('type.option.option'('type.num.num'),sK27(sK1)),s('type.list.list'('type.closSem.v'),sK28(sK1)),s('type.list.list'('type.closSem.v'),sK29(sK1)),s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),sK30(sK1)),s('type.num.num',sK31(sK1)))) | s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.Closure_5'(s('type.option.option'('type.num.num'),sK22(sK1)),s('type.list.list'('type.closSem.v'),sK23(sK1)),s('type.list.list'('type.closSem.v'),sK24(sK1)),s('type.num.num',sK25(sK1)),s('type.closLang.exp',sK26(sK1)))) | s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.Block_2'(s('type.num.num',sK19(sK1)),s('type.list.list'('type.closSem.v'),sK20(sK1)))) | s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.Number_1'(s('type.integer.int',sK17(sK1)))) | ($spl33 | $spl37)),
  inference(subsumption_resolution,[],[f2036,f1707])).
fof(f1707,plain,(
  s('type.closSem.v',sK1) != s('type.closSem.v','const.closSem.RefPtr_1'(s('type.num.num',sK21(sK1)))) | $spl37),
  inference(cnf_transformation,[],[f1707_D])).
fof(f1707_D,plain,(
  s('type.closSem.v',sK1) != s('type.closSem.v','const.closSem.RefPtr_1'(s('type.num.num',sK21(sK1)))) <=> ~$spl37),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl37])])).
fof(f2036,plain,(
  s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.Recclosure_5'(s('type.option.option'('type.num.num'),sK27(sK1)),s('type.list.list'('type.closSem.v'),sK28(sK1)),s('type.list.list'('type.closSem.v'),sK29(sK1)),s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),sK30(sK1)),s('type.num.num',sK31(sK1)))) | s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.Closure_5'(s('type.option.option'('type.num.num'),sK22(sK1)),s('type.list.list'('type.closSem.v'),sK23(sK1)),s('type.list.list'('type.closSem.v'),sK24(sK1)),s('type.num.num',sK25(sK1)),s('type.closLang.exp',sK26(sK1)))) | s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.RefPtr_1'(s('type.num.num',sK21(sK1)))) | s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.Block_2'(s('type.num.num',sK19(sK1)),s('type.list.list'('type.closSem.v'),sK20(sK1)))) | s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.Number_1'(s('type.integer.int',sK17(sK1)))) | $spl33),
  inference(trivial_inequality_removal,[],[f2035])).
fof(f2035,plain,(
  s('type.closSem.v',sK1) != s('type.closSem.v',sK1) | s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.Recclosure_5'(s('type.option.option'('type.num.num'),sK27(sK1)),s('type.list.list'('type.closSem.v'),sK28(sK1)),s('type.list.list'('type.closSem.v'),sK29(sK1)),s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),sK30(sK1)),s('type.num.num',sK31(sK1)))) | s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.Closure_5'(s('type.option.option'('type.num.num'),sK22(sK1)),s('type.list.list'('type.closSem.v'),sK23(sK1)),s('type.list.list'('type.closSem.v'),sK24(sK1)),s('type.num.num',sK25(sK1)),s('type.closLang.exp',sK26(sK1)))) | s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.RefPtr_1'(s('type.num.num',sK21(sK1)))) | s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.Block_2'(s('type.num.num',sK19(sK1)),s('type.list.list'('type.closSem.v'),sK20(sK1)))) | s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.Number_1'(s('type.integer.int',sK17(sK1)))) | $spl33),
  inference(superposition,[],[f1703,f65])).
fof(f1703,plain,(
  s('type.closSem.v',sK1) != s('type.closSem.v','const.closSem.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK18(sK1)))) | $spl33),
  inference(cnf_transformation,[],[f1703_D])).
fof(f1703_D,plain,(
  s('type.closSem.v',sK1) != s('type.closSem.v','const.closSem.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK18(sK1)))) <=> ~$spl33),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl33])])).
fof(f1704,plain,(
  s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK18(sK1)))) | $spl32),
  inference(cnf_transformation,[],[f1704_D])).
fof(f1704_D,plain,(
  s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK18(sK1)))) <=> ~$spl32),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl32])])).
fof(f2034,plain,(
  s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.Recclosure_5'(s('type.option.option'('type.num.num'),sK27(sK1)),s('type.list.list'('type.closSem.v'),sK28(sK1)),s('type.list.list'('type.closSem.v'),sK29(sK1)),s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),sK30(sK1)),s('type.num.num',sK31(sK1)))) | s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.Closure_5'(s('type.option.option'('type.num.num'),sK22(sK1)),s('type.list.list'('type.closSem.v'),sK23(sK1)),s('type.list.list'('type.closSem.v'),sK24(sK1)),s('type.num.num',sK25(sK1)),s('type.closLang.exp',sK26(sK1)))) | s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK18(sK1)))) | ($spl31 | $spl35 | $spl37)),
  inference(subsumption_resolution,[],[f2033,f1701])).
fof(f2033,plain,(
  s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.Recclosure_5'(s('type.option.option'('type.num.num'),sK27(sK1)),s('type.list.list'('type.closSem.v'),sK28(sK1)),s('type.list.list'('type.closSem.v'),sK29(sK1)),s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),sK30(sK1)),s('type.num.num',sK31(sK1)))) | s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.Closure_5'(s('type.option.option'('type.num.num'),sK22(sK1)),s('type.list.list'('type.closSem.v'),sK23(sK1)),s('type.list.list'('type.closSem.v'),sK24(sK1)),s('type.num.num',sK25(sK1)),s('type.closLang.exp',sK26(sK1)))) | s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK18(sK1)))) | s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.Number_1'(s('type.integer.int',sK17(sK1)))) | ($spl35 | $spl37)),
  inference(subsumption_resolution,[],[f2032,f1707])).
fof(f2032,plain,(
  s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.Recclosure_5'(s('type.option.option'('type.num.num'),sK27(sK1)),s('type.list.list'('type.closSem.v'),sK28(sK1)),s('type.list.list'('type.closSem.v'),sK29(sK1)),s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),sK30(sK1)),s('type.num.num',sK31(sK1)))) | s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.Closure_5'(s('type.option.option'('type.num.num'),sK22(sK1)),s('type.list.list'('type.closSem.v'),sK23(sK1)),s('type.list.list'('type.closSem.v'),sK24(sK1)),s('type.num.num',sK25(sK1)),s('type.closLang.exp',sK26(sK1)))) | s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.RefPtr_1'(s('type.num.num',sK21(sK1)))) | s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK18(sK1)))) | s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.Number_1'(s('type.integer.int',sK17(sK1)))) | $spl35),
  inference(trivial_inequality_removal,[],[f2031])).
fof(f2031,plain,(
  s('type.closSem.v',sK1) != s('type.closSem.v',sK1) | s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.Recclosure_5'(s('type.option.option'('type.num.num'),sK27(sK1)),s('type.list.list'('type.closSem.v'),sK28(sK1)),s('type.list.list'('type.closSem.v'),sK29(sK1)),s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),sK30(sK1)),s('type.num.num',sK31(sK1)))) | s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.Closure_5'(s('type.option.option'('type.num.num'),sK22(sK1)),s('type.list.list'('type.closSem.v'),sK23(sK1)),s('type.list.list'('type.closSem.v'),sK24(sK1)),s('type.num.num',sK25(sK1)),s('type.closLang.exp',sK26(sK1)))) | s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.RefPtr_1'(s('type.num.num',sK21(sK1)))) | s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK18(sK1)))) | s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.Number_1'(s('type.integer.int',sK17(sK1)))) | $spl35),
  inference(superposition,[],[f1705,f65])).
fof(f1706,plain,(
  s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.Block_2'(s('type.num.num',sK19(sK1)),s('type.list.list'('type.closSem.v'),sK20(sK1)))) | $spl34),
  inference(cnf_transformation,[],[f1706_D])).
fof(f1706_D,plain,(
  s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.Block_2'(s('type.num.num',sK19(sK1)),s('type.list.list'('type.closSem.v'),sK20(sK1)))) <=> ~$spl34),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl34])])).
fof(f2030,plain,(
  s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.Recclosure_5'(s('type.option.option'('type.num.num'),sK27(sK1)),s('type.list.list'('type.closSem.v'),sK28(sK1)),s('type.list.list'('type.closSem.v'),sK29(sK1)),s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),sK30(sK1)),s('type.num.num',sK31(sK1)))) | s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.Closure_5'(s('type.option.option'('type.num.num'),sK22(sK1)),s('type.list.list'('type.closSem.v'),sK23(sK1)),s('type.list.list'('type.closSem.v'),sK24(sK1)),s('type.num.num',sK25(sK1)),s('type.closLang.exp',sK26(sK1)))) | s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.Block_2'(s('type.num.num',sK19(sK1)),s('type.list.list'('type.closSem.v'),sK20(sK1)))) | s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK18(sK1)))) | ($spl31 | $spl37)),
  inference(subsumption_resolution,[],[f2029,f1701])).
fof(f2029,plain,(
  s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.Recclosure_5'(s('type.option.option'('type.num.num'),sK27(sK1)),s('type.list.list'('type.closSem.v'),sK28(sK1)),s('type.list.list'('type.closSem.v'),sK29(sK1)),s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),sK30(sK1)),s('type.num.num',sK31(sK1)))) | s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.Closure_5'(s('type.option.option'('type.num.num'),sK22(sK1)),s('type.list.list'('type.closSem.v'),sK23(sK1)),s('type.list.list'('type.closSem.v'),sK24(sK1)),s('type.num.num',sK25(sK1)),s('type.closLang.exp',sK26(sK1)))) | s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.Block_2'(s('type.num.num',sK19(sK1)),s('type.list.list'('type.closSem.v'),sK20(sK1)))) | s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK18(sK1)))) | s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.Number_1'(s('type.integer.int',sK17(sK1)))) | $spl37),
  inference(trivial_inequality_removal,[],[f2028])).
fof(f2028,plain,(
  s('type.closSem.v',sK1) != s('type.closSem.v',sK1) | s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.Recclosure_5'(s('type.option.option'('type.num.num'),sK27(sK1)),s('type.list.list'('type.closSem.v'),sK28(sK1)),s('type.list.list'('type.closSem.v'),sK29(sK1)),s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),sK30(sK1)),s('type.num.num',sK31(sK1)))) | s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.Closure_5'(s('type.option.option'('type.num.num'),sK22(sK1)),s('type.list.list'('type.closSem.v'),sK23(sK1)),s('type.list.list'('type.closSem.v'),sK24(sK1)),s('type.num.num',sK25(sK1)),s('type.closLang.exp',sK26(sK1)))) | s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.Block_2'(s('type.num.num',sK19(sK1)),s('type.list.list'('type.closSem.v'),sK20(sK1)))) | s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK18(sK1)))) | s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.Number_1'(s('type.integer.int',sK17(sK1)))) | $spl37),
  inference(superposition,[],[f1707,f65])).
fof(f1998,plain,(
  $false | $spl36),
  inference(subsumption_resolution,[],[f1987,f86])).
fof(f1987,plain,(
  s(bool,'T_0') = s(bool,happ(s(fun('type.closSem.v',bool),sK0),s('type.closSem.v',sK1))) | $spl36),
  inference(superposition,[],[f178,f1708])).
fof(f1951,plain,(
  $false | $spl34),
  inference(subsumption_resolution,[],[f1939,f86])).
fof(f1939,plain,(
  s(bool,'T_0') = s(bool,happ(s(fun('type.closSem.v',bool),sK0),s('type.closSem.v',sK1))) | $spl34),
  inference(superposition,[],[f223,f1706])).
fof(f1722,plain,(
  s('type.closSem.v',sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v')) = s('type.closSem.v','const.closSem.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK18(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))))) | $spl48),
  inference(cnf_transformation,[],[f1722_D])).
fof(f1722_D,plain,(
  s('type.closSem.v',sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v')) = s('type.closSem.v','const.closSem.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK18(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))))) <=> ~$spl48),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl48])])).
fof(f1936,plain,(
  s('type.closSem.v',sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v')) = s('type.closSem.v','const.closSem.Recclosure_5'(s('type.option.option'('type.num.num'),sK27(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))),s('type.list.list'('type.closSem.v'),sK28(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))),s('type.list.list'('type.closSem.v'),sK29(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))),s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),sK30(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))),s('type.num.num',sK31(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))))) | s('type.closSem.v',sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v')) = s('type.closSem.v','const.closSem.RefPtr_1'(s('type.num.num',sK21(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))))) | s('type.closSem.v',sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v')) = s('type.closSem.v','const.closSem.Block_2'(s('type.num.num',sK19(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))),s('type.list.list'('type.closSem.v'),sK20(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))))) | s('type.closSem.v',sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v')) = s('type.closSem.v','const.closSem.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK18(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))))) | $spl47),
  inference(subsumption_resolution,[],[f1935,f1719])).
fof(f1935,plain,(
  s('type.closSem.v',sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v')) = s('type.closSem.v','const.closSem.Recclosure_5'(s('type.option.option'('type.num.num'),sK27(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))),s('type.list.list'('type.closSem.v'),sK28(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))),s('type.list.list'('type.closSem.v'),sK29(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))),s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),sK30(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))),s('type.num.num',sK31(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))))) | s('type.closSem.v',sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v')) = s('type.closSem.v','const.closSem.RefPtr_1'(s('type.num.num',sK21(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))))) | s('type.closSem.v',sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v')) = s('type.closSem.v','const.closSem.Block_2'(s('type.num.num',sK19(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))),s('type.list.list'('type.closSem.v'),sK20(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))))) | s('type.closSem.v',sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v')) = s('type.closSem.v','const.closSem.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK18(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))))) | s('type.closSem.v',sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v')) = s('type.closSem.v','const.closSem.Number_1'(s('type.integer.int',sK17(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v')))))),
  inference(subsumption_resolution,[],[f1918,f76])).
fof(f1918,plain,(
  p(s(bool,'F_0')) | s('type.closSem.v',sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v')) = s('type.closSem.v','const.closSem.Recclosure_5'(s('type.option.option'('type.num.num'),sK27(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))),s('type.list.list'('type.closSem.v'),sK28(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))),s('type.list.list'('type.closSem.v'),sK29(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))),s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),sK30(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))),s('type.num.num',sK31(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))))) | s('type.closSem.v',sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v')) = s('type.closSem.v','const.closSem.RefPtr_1'(s('type.num.num',sK21(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))))) | s('type.closSem.v',sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v')) = s('type.closSem.v','const.closSem.Block_2'(s('type.num.num',sK19(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))),s('type.list.list'('type.closSem.v'),sK20(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))))) | s('type.closSem.v',sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v')) = s('type.closSem.v','const.closSem.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK18(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))))) | s('type.closSem.v',sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v')) = s('type.closSem.v','const.closSem.Number_1'(s('type.integer.int',sK17(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v')))))),
  inference(superposition,[],[f376,f533])).
fof(f376,plain,(
  ( ! [X21] : (p(s(bool,happ(s(fun('type.closSem.v',bool),sK0),s('type.closSem.v',X21)))) | s('type.closSem.v',X21) = s('type.closSem.v','const.closSem.Recclosure_5'(s('type.option.option'('type.num.num'),sK27(X21)),s('type.list.list'('type.closSem.v'),sK28(X21)),s('type.list.list'('type.closSem.v'),sK29(X21)),s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),sK30(X21)),s('type.num.num',sK31(X21)))) | s('type.closSem.v',X21) = s('type.closSem.v','const.closSem.RefPtr_1'(s('type.num.num',sK21(X21)))) | s('type.closSem.v',X21) = s('type.closSem.v','const.closSem.Block_2'(s('type.num.num',sK19(X21)),s('type.list.list'('type.closSem.v'),sK20(X21)))) | s('type.closSem.v',X21) = s('type.closSem.v','const.closSem.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK18(X21)))) | s('type.closSem.v',X21) = s('type.closSem.v','const.closSem.Number_1'(s('type.integer.int',sK17(X21))))) )),
  inference(superposition,[],[f52,f65])).
fof(f1708,plain,(
  s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.RefPtr_1'(s('type.num.num',sK21(sK1)))) | $spl36),
  inference(cnf_transformation,[],[f1708_D])).
fof(f1708_D,plain,(
  s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.RefPtr_1'(s('type.num.num',sK21(sK1)))) <=> ~$spl36),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl36])])).
fof(f1934,plain,(
  s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.Recclosure_5'(s('type.option.option'('type.num.num'),sK27(sK1)),s('type.list.list'('type.closSem.v'),sK28(sK1)),s('type.list.list'('type.closSem.v'),sK29(sK1)),s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),sK30(sK1)),s('type.num.num',sK31(sK1)))) | s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.RefPtr_1'(s('type.num.num',sK21(sK1)))) | s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.Block_2'(s('type.num.num',sK19(sK1)),s('type.list.list'('type.closSem.v'),sK20(sK1)))) | s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK18(sK1)))) | $spl31),
  inference(subsumption_resolution,[],[f1933,f1701])).
fof(f1933,plain,(
  s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.Recclosure_5'(s('type.option.option'('type.num.num'),sK27(sK1)),s('type.list.list'('type.closSem.v'),sK28(sK1)),s('type.list.list'('type.closSem.v'),sK29(sK1)),s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),sK30(sK1)),s('type.num.num',sK31(sK1)))) | s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.RefPtr_1'(s('type.num.num',sK21(sK1)))) | s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.Block_2'(s('type.num.num',sK19(sK1)),s('type.list.list'('type.closSem.v'),sK20(sK1)))) | s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK18(sK1)))) | s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.Number_1'(s('type.integer.int',sK17(sK1))))),
  inference(subsumption_resolution,[],[f1917,f76])).
fof(f1917,plain,(
  p(s(bool,'F_0')) | s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.Recclosure_5'(s('type.option.option'('type.num.num'),sK27(sK1)),s('type.list.list'('type.closSem.v'),sK28(sK1)),s('type.list.list'('type.closSem.v'),sK29(sK1)),s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),sK30(sK1)),s('type.num.num',sK31(sK1)))) | s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.RefPtr_1'(s('type.num.num',sK21(sK1)))) | s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.Block_2'(s('type.num.num',sK19(sK1)),s('type.list.list'('type.closSem.v'),sK20(sK1)))) | s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK18(sK1)))) | s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.Number_1'(s('type.integer.int',sK17(sK1))))),
  inference(superposition,[],[f376,f88])).
fof(f1932,plain,(
  s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.Recclosure_5'(s('type.option.option'('type.num.num'),sK27(sK1)),s('type.list.list'('type.closSem.v'),sK28(sK1)),s('type.list.list'('type.closSem.v'),sK29(sK1)),s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),sK30(sK1)),s('type.num.num',sK31(sK1)))) | s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.RefPtr_1'(s('type.num.num',sK21(sK1)))) | s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.Block_2'(s('type.num.num',sK19(sK1)),s('type.list.list'('type.closSem.v'),sK20(sK1)))) | s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK18(sK1)))) | s(bool,'F_0') != s(bool,f(s('type.closSem.v',sK33(sK0,sK0,bool,'type.closSem.v')))) | p(s(bool,g(s('type.closSem.v',sK33(sK0,sK0,bool,'type.closSem.v'))))) | $spl31),
  inference(subsumption_resolution,[],[f1862,f1701])).
fof(f1862,plain,(
  s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.Recclosure_5'(s('type.option.option'('type.num.num'),sK27(sK1)),s('type.list.list'('type.closSem.v'),sK28(sK1)),s('type.list.list'('type.closSem.v'),sK29(sK1)),s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),sK30(sK1)),s('type.num.num',sK31(sK1)))) | s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.RefPtr_1'(s('type.num.num',sK21(sK1)))) | s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.Block_2'(s('type.num.num',sK19(sK1)),s('type.list.list'('type.closSem.v'),sK20(sK1)))) | s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK18(sK1)))) | s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.Number_1'(s('type.integer.int',sK17(sK1)))) | s(bool,'F_0') != s(bool,f(s('type.closSem.v',sK33(sK0,sK0,bool,'type.closSem.v')))) | p(s(bool,g(s('type.closSem.v',sK33(sK0,sK0,bool,'type.closSem.v')))))),
  inference(resolution,[],[f376,f706])).
fof(f1931,plain,(
  s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.Recclosure_5'(s('type.option.option'('type.num.num'),sK27(sK1)),s('type.list.list'('type.closSem.v'),sK28(sK1)),s('type.list.list'('type.closSem.v'),sK29(sK1)),s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),sK30(sK1)),s('type.num.num',sK31(sK1)))) | s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.RefPtr_1'(s('type.num.num',sK21(sK1)))) | s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.Block_2'(s('type.num.num',sK19(sK1)),s('type.list.list'('type.closSem.v'),sK20(sK1)))) | s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK18(sK1)))) | s(bool,'F_0') != s(bool,f(s('type.closSem.v',sK33(sK0,sK0,bool,'type.closSem.v')))) | p(s(bool,g(s('type.closSem.v',sK33(sK0,sK0,bool,'type.closSem.v'))))) | $spl31),
  inference(subsumption_resolution,[],[f1861,f1701])).
fof(f1861,plain,(
  s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.Recclosure_5'(s('type.option.option'('type.num.num'),sK27(sK1)),s('type.list.list'('type.closSem.v'),sK28(sK1)),s('type.list.list'('type.closSem.v'),sK29(sK1)),s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),sK30(sK1)),s('type.num.num',sK31(sK1)))) | s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.RefPtr_1'(s('type.num.num',sK21(sK1)))) | s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.Block_2'(s('type.num.num',sK19(sK1)),s('type.list.list'('type.closSem.v'),sK20(sK1)))) | s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK18(sK1)))) | s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.Number_1'(s('type.integer.int',sK17(sK1)))) | s(bool,'F_0') != s(bool,f(s('type.closSem.v',sK33(sK0,sK0,bool,'type.closSem.v')))) | p(s(bool,g(s('type.closSem.v',sK33(sK0,sK0,bool,'type.closSem.v')))))),
  inference(resolution,[],[f376,f742])).
fof(f1930,plain,(
  s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.Recclosure_5'(s('type.option.option'('type.num.num'),sK27(sK1)),s('type.list.list'('type.closSem.v'),sK28(sK1)),s('type.list.list'('type.closSem.v'),sK29(sK1)),s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),sK30(sK1)),s('type.num.num',sK31(sK1)))) | s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.RefPtr_1'(s('type.num.num',sK21(sK1)))) | s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.Block_2'(s('type.num.num',sK19(sK1)),s('type.list.list'('type.closSem.v'),sK20(sK1)))) | s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK18(sK1)))) | s(bool,'T_0') != s(bool,f(s('type.closSem.v',sK33(sK0,sK0,bool,'type.closSem.v')))) | s(bool,'F_0') = s(bool,g(s('type.closSem.v',sK33(sK0,sK0,bool,'type.closSem.v')))) | $spl31),
  inference(subsumption_resolution,[],[f1860,f1701])).
fof(f1860,plain,(
  s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.Recclosure_5'(s('type.option.option'('type.num.num'),sK27(sK1)),s('type.list.list'('type.closSem.v'),sK28(sK1)),s('type.list.list'('type.closSem.v'),sK29(sK1)),s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),sK30(sK1)),s('type.num.num',sK31(sK1)))) | s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.RefPtr_1'(s('type.num.num',sK21(sK1)))) | s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.Block_2'(s('type.num.num',sK19(sK1)),s('type.list.list'('type.closSem.v'),sK20(sK1)))) | s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK18(sK1)))) | s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.Number_1'(s('type.integer.int',sK17(sK1)))) | s(bool,'T_0') != s(bool,f(s('type.closSem.v',sK33(sK0,sK0,bool,'type.closSem.v')))) | s(bool,'F_0') = s(bool,g(s('type.closSem.v',sK33(sK0,sK0,bool,'type.closSem.v'))))),
  inference(resolution,[],[f376,f702])).
fof(f1929,plain,(
  s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.Recclosure_5'(s('type.option.option'('type.num.num'),sK27(sK1)),s('type.list.list'('type.closSem.v'),sK28(sK1)),s('type.list.list'('type.closSem.v'),sK29(sK1)),s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),sK30(sK1)),s('type.num.num',sK31(sK1)))) | s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.RefPtr_1'(s('type.num.num',sK21(sK1)))) | s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.Block_2'(s('type.num.num',sK19(sK1)),s('type.list.list'('type.closSem.v'),sK20(sK1)))) | s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK18(sK1)))) | s(bool,'F_0') != s(bool,f(s('type.closSem.v',sK33(sK0,sK0,bool,'type.closSem.v')))) | s(bool,'T_0') = s(bool,g(s('type.closSem.v',sK33(sK0,sK0,bool,'type.closSem.v')))) | $spl31),
  inference(subsumption_resolution,[],[f1859,f1701])).
fof(f1859,plain,(
  s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.Recclosure_5'(s('type.option.option'('type.num.num'),sK27(sK1)),s('type.list.list'('type.closSem.v'),sK28(sK1)),s('type.list.list'('type.closSem.v'),sK29(sK1)),s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),sK30(sK1)),s('type.num.num',sK31(sK1)))) | s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.RefPtr_1'(s('type.num.num',sK21(sK1)))) | s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.Block_2'(s('type.num.num',sK19(sK1)),s('type.list.list'('type.closSem.v'),sK20(sK1)))) | s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK18(sK1)))) | s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.Number_1'(s('type.integer.int',sK17(sK1)))) | s(bool,'F_0') != s(bool,f(s('type.closSem.v',sK33(sK0,sK0,bool,'type.closSem.v')))) | s(bool,'T_0') = s(bool,g(s('type.closSem.v',sK33(sK0,sK0,bool,'type.closSem.v'))))),
  inference(resolution,[],[f376,f703])).
fof(f1928,plain,(
  s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.Recclosure_5'(s('type.option.option'('type.num.num'),sK27(sK1)),s('type.list.list'('type.closSem.v'),sK28(sK1)),s('type.list.list'('type.closSem.v'),sK29(sK1)),s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),sK30(sK1)),s('type.num.num',sK31(sK1)))) | s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.RefPtr_1'(s('type.num.num',sK21(sK1)))) | s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.Block_2'(s('type.num.num',sK19(sK1)),s('type.list.list'('type.closSem.v'),sK20(sK1)))) | s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK18(sK1)))) | s(bool,'T_0') != s(bool,f(s('type.closSem.v',sK33(sK0,sK0,bool,'type.closSem.v')))) | s(bool,'F_0') = s(bool,g(s('type.closSem.v',sK33(sK0,sK0,bool,'type.closSem.v')))) | $spl31),
  inference(subsumption_resolution,[],[f1858,f1701])).
fof(f1858,plain,(
  s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.Recclosure_5'(s('type.option.option'('type.num.num'),sK27(sK1)),s('type.list.list'('type.closSem.v'),sK28(sK1)),s('type.list.list'('type.closSem.v'),sK29(sK1)),s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),sK30(sK1)),s('type.num.num',sK31(sK1)))) | s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.RefPtr_1'(s('type.num.num',sK21(sK1)))) | s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.Block_2'(s('type.num.num',sK19(sK1)),s('type.list.list'('type.closSem.v'),sK20(sK1)))) | s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK18(sK1)))) | s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.Number_1'(s('type.integer.int',sK17(sK1)))) | s(bool,'T_0') != s(bool,f(s('type.closSem.v',sK33(sK0,sK0,bool,'type.closSem.v')))) | s(bool,'F_0') = s(bool,g(s('type.closSem.v',sK33(sK0,sK0,bool,'type.closSem.v'))))),
  inference(resolution,[],[f376,f738])).
fof(f1927,plain,(
  s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.Recclosure_5'(s('type.option.option'('type.num.num'),sK27(sK1)),s('type.list.list'('type.closSem.v'),sK28(sK1)),s('type.list.list'('type.closSem.v'),sK29(sK1)),s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),sK30(sK1)),s('type.num.num',sK31(sK1)))) | s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.RefPtr_1'(s('type.num.num',sK21(sK1)))) | s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.Block_2'(s('type.num.num',sK19(sK1)),s('type.list.list'('type.closSem.v'),sK20(sK1)))) | s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK18(sK1)))) | s(bool,'F_0') != s(bool,f(s('type.closSem.v',sK33(sK0,sK0,bool,'type.closSem.v')))) | s(bool,'T_0') = s(bool,g(s('type.closSem.v',sK33(sK0,sK0,bool,'type.closSem.v')))) | $spl31),
  inference(subsumption_resolution,[],[f1857,f1701])).
fof(f1857,plain,(
  s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.Recclosure_5'(s('type.option.option'('type.num.num'),sK27(sK1)),s('type.list.list'('type.closSem.v'),sK28(sK1)),s('type.list.list'('type.closSem.v'),sK29(sK1)),s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),sK30(sK1)),s('type.num.num',sK31(sK1)))) | s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.RefPtr_1'(s('type.num.num',sK21(sK1)))) | s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.Block_2'(s('type.num.num',sK19(sK1)),s('type.list.list'('type.closSem.v'),sK20(sK1)))) | s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK18(sK1)))) | s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.Number_1'(s('type.integer.int',sK17(sK1)))) | s(bool,'F_0') != s(bool,f(s('type.closSem.v',sK33(sK0,sK0,bool,'type.closSem.v')))) | s(bool,'T_0') = s(bool,g(s('type.closSem.v',sK33(sK0,sK0,bool,'type.closSem.v'))))),
  inference(resolution,[],[f376,f739])).
fof(f1926,plain,(
  ( ! [X2] : (s('type.closSem.v',sK32(sK0,X2,'type.closSem.v')) = s('type.closSem.v','const.closSem.Recclosure_5'(s('type.option.option'('type.num.num'),sK27(sK32(sK0,X2,'type.closSem.v'))),s('type.list.list'('type.closSem.v'),sK28(sK32(sK0,X2,'type.closSem.v'))),s('type.list.list'('type.closSem.v'),sK29(sK32(sK0,X2,'type.closSem.v'))),s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),sK30(sK32(sK0,X2,'type.closSem.v'))),s('type.num.num',sK31(sK32(sK0,X2,'type.closSem.v'))))) | ~p(s(bool,'const.relation.WF_1'(s(fun('type.closSem.v',fun('type.closSem.v',bool)),X2)))) | s('type.closSem.v',sK32(sK0,X2,'type.closSem.v')) = s('type.closSem.v','const.closSem.Number_1'(s('type.integer.int',sK17(sK32(sK0,X2,'type.closSem.v'))))) | s('type.closSem.v',sK32(sK0,X2,'type.closSem.v')) = s('type.closSem.v','const.closSem.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK18(sK32(sK0,X2,'type.closSem.v'))))) | s('type.closSem.v',sK32(sK0,X2,'type.closSem.v')) = s('type.closSem.v','const.closSem.Block_2'(s('type.num.num',sK19(sK32(sK0,X2,'type.closSem.v'))),s('type.list.list'('type.closSem.v'),sK20(sK32(sK0,X2,'type.closSem.v'))))) | s('type.closSem.v',sK32(sK0,X2,'type.closSem.v')) = s('type.closSem.v','const.closSem.RefPtr_1'(s('type.num.num',sK21(sK32(sK0,X2,'type.closSem.v')))))) ) | $spl60),
  inference(cnf_transformation,[],[f1926_D])).
fof(f1926_D,plain,(
  ( ! [X2] : (s('type.closSem.v',sK32(sK0,X2,'type.closSem.v')) = s('type.closSem.v','const.closSem.Recclosure_5'(s('type.option.option'('type.num.num'),sK27(sK32(sK0,X2,'type.closSem.v'))),s('type.list.list'('type.closSem.v'),sK28(sK32(sK0,X2,'type.closSem.v'))),s('type.list.list'('type.closSem.v'),sK29(sK32(sK0,X2,'type.closSem.v'))),s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),sK30(sK32(sK0,X2,'type.closSem.v'))),s('type.num.num',sK31(sK32(sK0,X2,'type.closSem.v'))))) | ~p(s(bool,'const.relation.WF_1'(s(fun('type.closSem.v',fun('type.closSem.v',bool)),X2)))) | s('type.closSem.v',sK32(sK0,X2,'type.closSem.v')) = s('type.closSem.v','const.closSem.Number_1'(s('type.integer.int',sK17(sK32(sK0,X2,'type.closSem.v'))))) | s('type.closSem.v',sK32(sK0,X2,'type.closSem.v')) = s('type.closSem.v','const.closSem.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK18(sK32(sK0,X2,'type.closSem.v'))))) | s('type.closSem.v',sK32(sK0,X2,'type.closSem.v')) = s('type.closSem.v','const.closSem.Block_2'(s('type.num.num',sK19(sK32(sK0,X2,'type.closSem.v'))),s('type.list.list'('type.closSem.v'),sK20(sK32(sK0,X2,'type.closSem.v'))))) | s('type.closSem.v',sK32(sK0,X2,'type.closSem.v')) = s('type.closSem.v','const.closSem.RefPtr_1'(s('type.num.num',sK21(sK32(sK0,X2,'type.closSem.v')))))) ) <=> ~$spl60),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl60])])).
fof(f1856,plain,(
  ( ! [X2,X3] : (s('type.closSem.v',sK32(sK0,X2,'type.closSem.v')) = s('type.closSem.v','const.closSem.Recclosure_5'(s('type.option.option'('type.num.num'),sK27(sK32(sK0,X2,'type.closSem.v'))),s('type.list.list'('type.closSem.v'),sK28(sK32(sK0,X2,'type.closSem.v'))),s('type.list.list'('type.closSem.v'),sK29(sK32(sK0,X2,'type.closSem.v'))),s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),sK30(sK32(sK0,X2,'type.closSem.v'))),s('type.num.num',sK31(sK32(sK0,X2,'type.closSem.v'))))) | s('type.closSem.v',sK32(sK0,X2,'type.closSem.v')) = s('type.closSem.v','const.closSem.RefPtr_1'(s('type.num.num',sK21(sK32(sK0,X2,'type.closSem.v'))))) | s('type.closSem.v',sK32(sK0,X2,'type.closSem.v')) = s('type.closSem.v','const.closSem.Block_2'(s('type.num.num',sK19(sK32(sK0,X2,'type.closSem.v'))),s('type.list.list'('type.closSem.v'),sK20(sK32(sK0,X2,'type.closSem.v'))))) | s('type.closSem.v',sK32(sK0,X2,'type.closSem.v')) = s('type.closSem.v','const.closSem.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK18(sK32(sK0,X2,'type.closSem.v'))))) | s('type.closSem.v',sK32(sK0,X2,'type.closSem.v')) = s('type.closSem.v','const.closSem.Number_1'(s('type.integer.int',sK17(sK32(sK0,X2,'type.closSem.v'))))) | p(s(bool,happ(s(fun('type.closSem.v',bool),sK0),s('type.closSem.v',X3)))) | ~p(s(bool,'const.relation.WF_1'(s(fun('type.closSem.v',fun('type.closSem.v',bool)),X2))))) )),
  inference(resolution,[],[f376,f67])).
fof(f1819,plain,(
  $false | $spl32),
  inference(subsumption_resolution,[],[f1807,f86])).
fof(f1807,plain,(
  s(bool,'T_0') = s(bool,happ(s(fun('type.closSem.v',bool),sK0),s('type.closSem.v',sK1))) | $spl32),
  inference(superposition,[],[f289,f1704])).
fof(f1804,plain,(
  s('type.closSem.v',sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v')) = s('type.closSem.v','const.closSem.Recclosure_5'(s('type.option.option'('type.num.num'),sK27(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))),s('type.list.list'('type.closSem.v'),sK28(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))),s('type.list.list'('type.closSem.v'),sK29(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))),s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),sK30(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))),s('type.num.num',sK31(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))))) | s('type.closSem.v',sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v')) = s('type.closSem.v','const.closSem.Closure_5'(s('type.option.option'('type.num.num'),sK22(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))),s('type.list.list'('type.closSem.v'),sK23(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))),s('type.list.list'('type.closSem.v'),sK24(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))),s('type.num.num',sK25(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))),s('type.closLang.exp',sK26(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))))) | s('type.closSem.v',sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v')) = s('type.closSem.v','const.closSem.RefPtr_1'(s('type.num.num',sK21(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))))) | s('type.closSem.v',sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v')) = s('type.closSem.v','const.closSem.Block_2'(s('type.num.num',sK19(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))),s('type.list.list'('type.closSem.v'),sK20(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))))) | s('type.closSem.v',sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v')) = s('type.closSem.v','const.closSem.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK18(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))))) | $spl47),
  inference(trivial_inequality_removal,[],[f1803])).
fof(f1803,plain,(
  s('type.closSem.v',sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v')) != s('type.closSem.v',sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v')) | s('type.closSem.v',sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v')) = s('type.closSem.v','const.closSem.Recclosure_5'(s('type.option.option'('type.num.num'),sK27(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))),s('type.list.list'('type.closSem.v'),sK28(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))),s('type.list.list'('type.closSem.v'),sK29(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))),s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),sK30(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))),s('type.num.num',sK31(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))))) | s('type.closSem.v',sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v')) = s('type.closSem.v','const.closSem.Closure_5'(s('type.option.option'('type.num.num'),sK22(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))),s('type.list.list'('type.closSem.v'),sK23(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))),s('type.list.list'('type.closSem.v'),sK24(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))),s('type.num.num',sK25(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))),s('type.closLang.exp',sK26(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))))) | s('type.closSem.v',sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v')) = s('type.closSem.v','const.closSem.RefPtr_1'(s('type.num.num',sK21(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))))) | s('type.closSem.v',sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v')) = s('type.closSem.v','const.closSem.Block_2'(s('type.num.num',sK19(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))),s('type.list.list'('type.closSem.v'),sK20(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))))) | s('type.closSem.v',sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v')) = s('type.closSem.v','const.closSem.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK18(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))))) | $spl47),
  inference(superposition,[],[f1719,f65])).
fof(f1780,plain,(
  $false | $spl46),
  inference(subsumption_resolution,[],[f1770,f531])).
fof(f1770,plain,(
  s(bool,'T_0') = s(bool,happ(s(fun('type.closSem.v',bool),sK0),s('type.closSem.v',sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v')))) | $spl46),
  inference(superposition,[],[f101,f1720])).
fof(f101,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,happ(s(fun('type.closSem.v',bool),sK0),s('type.closSem.v','const.closSem.Number_1'(s('type.integer.int',X0)))))) )),
  inference(resolution,[],[f54,f75])).
fof(f54,plain,(
  ( ! [X6] : (p(s(bool,happ(s(fun('type.closSem.v',bool),sK0),s('type.closSem.v','const.closSem.Number_1'(s('type.integer.int',X6))))))) )),
  inference(cnf_transformation,[],[f41])).
fof(f1766,plain,(
  s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.Recclosure_5'(s('type.option.option'('type.num.num'),sK27(sK1)),s('type.list.list'('type.closSem.v'),sK28(sK1)),s('type.list.list'('type.closSem.v'),sK29(sK1)),s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),sK30(sK1)),s('type.num.num',sK31(sK1)))) | s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.Closure_5'(s('type.option.option'('type.num.num'),sK22(sK1)),s('type.list.list'('type.closSem.v'),sK23(sK1)),s('type.list.list'('type.closSem.v'),sK24(sK1)),s('type.num.num',sK25(sK1)),s('type.closLang.exp',sK26(sK1)))) | s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.RefPtr_1'(s('type.num.num',sK21(sK1)))) | s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.Block_2'(s('type.num.num',sK19(sK1)),s('type.list.list'('type.closSem.v'),sK20(sK1)))) | s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK18(sK1)))) | $spl31),
  inference(trivial_inequality_removal,[],[f1765])).
fof(f1765,plain,(
  s('type.closSem.v',sK1) != s('type.closSem.v',sK1) | s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.Recclosure_5'(s('type.option.option'('type.num.num'),sK27(sK1)),s('type.list.list'('type.closSem.v'),sK28(sK1)),s('type.list.list'('type.closSem.v'),sK29(sK1)),s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),sK30(sK1)),s('type.num.num',sK31(sK1)))) | s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.Closure_5'(s('type.option.option'('type.num.num'),sK22(sK1)),s('type.list.list'('type.closSem.v'),sK23(sK1)),s('type.list.list'('type.closSem.v'),sK24(sK1)),s('type.num.num',sK25(sK1)),s('type.closLang.exp',sK26(sK1)))) | s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.RefPtr_1'(s('type.num.num',sK21(sK1)))) | s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.Block_2'(s('type.num.num',sK19(sK1)),s('type.list.list'('type.closSem.v'),sK20(sK1)))) | s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK18(sK1)))) | $spl31),
  inference(superposition,[],[f1701,f65])).
fof(f1742,plain,(
  $false | $spl30),
  inference(subsumption_resolution,[],[f1732,f86])).
fof(f1732,plain,(
  s(bool,'T_0') = s(bool,happ(s(fun('type.closSem.v',bool),sK0),s('type.closSem.v',sK1))) | $spl30),
  inference(superposition,[],[f101,f1702])).
fof(f1720,plain,(
  s('type.closSem.v',sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v')) = s('type.closSem.v','const.closSem.Number_1'(s('type.integer.int',sK17(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))))) | $spl46),
  inference(cnf_transformation,[],[f1720_D])).
fof(f1720_D,plain,(
  s('type.closSem.v',sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v')) = s('type.closSem.v','const.closSem.Number_1'(s('type.integer.int',sK17(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))))) <=> ~$spl46),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl46])])).
fof(f1718,plain,(
  s('type.closSem.v',sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v')) = s('type.closSem.v','const.closSem.Closure_5'(s('type.option.option'('type.num.num'),sK22(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))),s('type.list.list'('type.closSem.v'),sK23(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))),s('type.list.list'('type.closSem.v'),sK24(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))),s('type.num.num',sK25(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))),s('type.closLang.exp',sK26(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))))) | s('type.closSem.v',sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v')) = s('type.closSem.v','const.closSem.RefPtr_1'(s('type.num.num',sK21(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))))) | s('type.closSem.v',sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v')) = s('type.closSem.v','const.closSem.Block_2'(s('type.num.num',sK19(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))),s('type.list.list'('type.closSem.v'),sK20(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))))) | s('type.closSem.v',sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v')) = s('type.closSem.v','const.closSem.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK18(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))))) | s('type.closSem.v',sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v')) = s('type.closSem.v','const.closSem.Number_1'(s('type.integer.int',sK17(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v')))))),
  inference(subsumption_resolution,[],[f1688,f76])).
fof(f1688,plain,(
  p(s(bool,'F_0')) | s('type.closSem.v',sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v')) = s('type.closSem.v','const.closSem.Closure_5'(s('type.option.option'('type.num.num'),sK22(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))),s('type.list.list'('type.closSem.v'),sK23(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))),s('type.list.list'('type.closSem.v'),sK24(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))),s('type.num.num',sK25(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))),s('type.closLang.exp',sK26(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))))) | s('type.closSem.v',sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v')) = s('type.closSem.v','const.closSem.RefPtr_1'(s('type.num.num',sK21(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))))) | s('type.closSem.v',sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v')) = s('type.closSem.v','const.closSem.Block_2'(s('type.num.num',sK19(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))),s('type.list.list'('type.closSem.v'),sK20(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))))) | s('type.closSem.v',sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v')) = s('type.closSem.v','const.closSem.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK18(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))))) | s('type.closSem.v',sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v')) = s('type.closSem.v','const.closSem.Number_1'(s('type.integer.int',sK17(sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v')))))),
  inference(superposition,[],[f451,f533])).
fof(f451,plain,(
  ( ! [X21] : (p(s(bool,happ(s(fun('type.closSem.v',bool),sK0),s('type.closSem.v',X21)))) | s('type.closSem.v',X21) = s('type.closSem.v','const.closSem.Closure_5'(s('type.option.option'('type.num.num'),sK22(X21)),s('type.list.list'('type.closSem.v'),sK23(X21)),s('type.list.list'('type.closSem.v'),sK24(X21)),s('type.num.num',sK25(X21)),s('type.closLang.exp',sK26(X21)))) | s('type.closSem.v',X21) = s('type.closSem.v','const.closSem.RefPtr_1'(s('type.num.num',sK21(X21)))) | s('type.closSem.v',X21) = s('type.closSem.v','const.closSem.Block_2'(s('type.num.num',sK19(X21)),s('type.list.list'('type.closSem.v'),sK20(X21)))) | s('type.closSem.v',X21) = s('type.closSem.v','const.closSem.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK18(X21)))) | s('type.closSem.v',X21) = s('type.closSem.v','const.closSem.Number_1'(s('type.integer.int',sK17(X21))))) )),
  inference(superposition,[],[f53,f65])).
fof(f1702,plain,(
  s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.Number_1'(s('type.integer.int',sK17(sK1)))) | $spl30),
  inference(cnf_transformation,[],[f1702_D])).
fof(f1702_D,plain,(
  s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.Number_1'(s('type.integer.int',sK17(sK1)))) <=> ~$spl30),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl30])])).
fof(f1717,plain,(
  s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.Closure_5'(s('type.option.option'('type.num.num'),sK22(sK1)),s('type.list.list'('type.closSem.v'),sK23(sK1)),s('type.list.list'('type.closSem.v'),sK24(sK1)),s('type.num.num',sK25(sK1)),s('type.closLang.exp',sK26(sK1)))) | s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.RefPtr_1'(s('type.num.num',sK21(sK1)))) | s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.Block_2'(s('type.num.num',sK19(sK1)),s('type.list.list'('type.closSem.v'),sK20(sK1)))) | s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK18(sK1)))) | s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.Number_1'(s('type.integer.int',sK17(sK1))))),
  inference(subsumption_resolution,[],[f1687,f76])).
fof(f1687,plain,(
  p(s(bool,'F_0')) | s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.Closure_5'(s('type.option.option'('type.num.num'),sK22(sK1)),s('type.list.list'('type.closSem.v'),sK23(sK1)),s('type.list.list'('type.closSem.v'),sK24(sK1)),s('type.num.num',sK25(sK1)),s('type.closLang.exp',sK26(sK1)))) | s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.RefPtr_1'(s('type.num.num',sK21(sK1)))) | s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.Block_2'(s('type.num.num',sK19(sK1)),s('type.list.list'('type.closSem.v'),sK20(sK1)))) | s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK18(sK1)))) | s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.Number_1'(s('type.integer.int',sK17(sK1))))),
  inference(superposition,[],[f451,f88])).
fof(f1632,plain,(
  s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.Closure_5'(s('type.option.option'('type.num.num'),sK22(sK1)),s('type.list.list'('type.closSem.v'),sK23(sK1)),s('type.list.list'('type.closSem.v'),sK24(sK1)),s('type.num.num',sK25(sK1)),s('type.closLang.exp',sK26(sK1)))) | s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.RefPtr_1'(s('type.num.num',sK21(sK1)))) | s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.Block_2'(s('type.num.num',sK19(sK1)),s('type.list.list'('type.closSem.v'),sK20(sK1)))) | s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK18(sK1)))) | s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.Number_1'(s('type.integer.int',sK17(sK1)))) | s(bool,'F_0') != s(bool,f(s('type.closSem.v',sK33(sK0,sK0,bool,'type.closSem.v')))) | p(s(bool,g(s('type.closSem.v',sK33(sK0,sK0,bool,'type.closSem.v')))))),
  inference(resolution,[],[f451,f706])).
fof(f1631,plain,(
  s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.Closure_5'(s('type.option.option'('type.num.num'),sK22(sK1)),s('type.list.list'('type.closSem.v'),sK23(sK1)),s('type.list.list'('type.closSem.v'),sK24(sK1)),s('type.num.num',sK25(sK1)),s('type.closLang.exp',sK26(sK1)))) | s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.RefPtr_1'(s('type.num.num',sK21(sK1)))) | s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.Block_2'(s('type.num.num',sK19(sK1)),s('type.list.list'('type.closSem.v'),sK20(sK1)))) | s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK18(sK1)))) | s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.Number_1'(s('type.integer.int',sK17(sK1)))) | s(bool,'F_0') != s(bool,f(s('type.closSem.v',sK33(sK0,sK0,bool,'type.closSem.v')))) | p(s(bool,g(s('type.closSem.v',sK33(sK0,sK0,bool,'type.closSem.v')))))),
  inference(resolution,[],[f451,f742])).
fof(f1630,plain,(
  s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.Closure_5'(s('type.option.option'('type.num.num'),sK22(sK1)),s('type.list.list'('type.closSem.v'),sK23(sK1)),s('type.list.list'('type.closSem.v'),sK24(sK1)),s('type.num.num',sK25(sK1)),s('type.closLang.exp',sK26(sK1)))) | s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.RefPtr_1'(s('type.num.num',sK21(sK1)))) | s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.Block_2'(s('type.num.num',sK19(sK1)),s('type.list.list'('type.closSem.v'),sK20(sK1)))) | s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK18(sK1)))) | s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.Number_1'(s('type.integer.int',sK17(sK1)))) | s(bool,'T_0') != s(bool,f(s('type.closSem.v',sK33(sK0,sK0,bool,'type.closSem.v')))) | s(bool,'F_0') = s(bool,g(s('type.closSem.v',sK33(sK0,sK0,bool,'type.closSem.v'))))),
  inference(resolution,[],[f451,f702])).
fof(f1629,plain,(
  s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.Closure_5'(s('type.option.option'('type.num.num'),sK22(sK1)),s('type.list.list'('type.closSem.v'),sK23(sK1)),s('type.list.list'('type.closSem.v'),sK24(sK1)),s('type.num.num',sK25(sK1)),s('type.closLang.exp',sK26(sK1)))) | s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.RefPtr_1'(s('type.num.num',sK21(sK1)))) | s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.Block_2'(s('type.num.num',sK19(sK1)),s('type.list.list'('type.closSem.v'),sK20(sK1)))) | s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK18(sK1)))) | s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.Number_1'(s('type.integer.int',sK17(sK1)))) | s(bool,'F_0') != s(bool,f(s('type.closSem.v',sK33(sK0,sK0,bool,'type.closSem.v')))) | s(bool,'T_0') = s(bool,g(s('type.closSem.v',sK33(sK0,sK0,bool,'type.closSem.v'))))),
  inference(resolution,[],[f451,f703])).
fof(f1628,plain,(
  s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.Closure_5'(s('type.option.option'('type.num.num'),sK22(sK1)),s('type.list.list'('type.closSem.v'),sK23(sK1)),s('type.list.list'('type.closSem.v'),sK24(sK1)),s('type.num.num',sK25(sK1)),s('type.closLang.exp',sK26(sK1)))) | s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.RefPtr_1'(s('type.num.num',sK21(sK1)))) | s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.Block_2'(s('type.num.num',sK19(sK1)),s('type.list.list'('type.closSem.v'),sK20(sK1)))) | s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK18(sK1)))) | s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.Number_1'(s('type.integer.int',sK17(sK1)))) | s(bool,'T_0') != s(bool,f(s('type.closSem.v',sK33(sK0,sK0,bool,'type.closSem.v')))) | s(bool,'F_0') = s(bool,g(s('type.closSem.v',sK33(sK0,sK0,bool,'type.closSem.v'))))),
  inference(resolution,[],[f451,f738])).
fof(f1627,plain,(
  s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.Closure_5'(s('type.option.option'('type.num.num'),sK22(sK1)),s('type.list.list'('type.closSem.v'),sK23(sK1)),s('type.list.list'('type.closSem.v'),sK24(sK1)),s('type.num.num',sK25(sK1)),s('type.closLang.exp',sK26(sK1)))) | s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.RefPtr_1'(s('type.num.num',sK21(sK1)))) | s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.Block_2'(s('type.num.num',sK19(sK1)),s('type.list.list'('type.closSem.v'),sK20(sK1)))) | s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK18(sK1)))) | s('type.closSem.v',sK1) = s('type.closSem.v','const.closSem.Number_1'(s('type.integer.int',sK17(sK1)))) | s(bool,'F_0') != s(bool,f(s('type.closSem.v',sK33(sK0,sK0,bool,'type.closSem.v')))) | s(bool,'T_0') = s(bool,g(s('type.closSem.v',sK33(sK0,sK0,bool,'type.closSem.v'))))),
  inference(resolution,[],[f451,f739])).
fof(f1696,plain,(
  ( ! [X2] : (s('type.closSem.v',sK32(sK0,X2,'type.closSem.v')) = s('type.closSem.v','const.closSem.Closure_5'(s('type.option.option'('type.num.num'),sK22(sK32(sK0,X2,'type.closSem.v'))),s('type.list.list'('type.closSem.v'),sK23(sK32(sK0,X2,'type.closSem.v'))),s('type.list.list'('type.closSem.v'),sK24(sK32(sK0,X2,'type.closSem.v'))),s('type.num.num',sK25(sK32(sK0,X2,'type.closSem.v'))),s('type.closLang.exp',sK26(sK32(sK0,X2,'type.closSem.v'))))) | ~p(s(bool,'const.relation.WF_1'(s(fun('type.closSem.v',fun('type.closSem.v',bool)),X2)))) | s('type.closSem.v',sK32(sK0,X2,'type.closSem.v')) = s('type.closSem.v','const.closSem.Number_1'(s('type.integer.int',sK17(sK32(sK0,X2,'type.closSem.v'))))) | s('type.closSem.v',sK32(sK0,X2,'type.closSem.v')) = s('type.closSem.v','const.closSem.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK18(sK32(sK0,X2,'type.closSem.v'))))) | s('type.closSem.v',sK32(sK0,X2,'type.closSem.v')) = s('type.closSem.v','const.closSem.Block_2'(s('type.num.num',sK19(sK32(sK0,X2,'type.closSem.v'))),s('type.list.list'('type.closSem.v'),sK20(sK32(sK0,X2,'type.closSem.v'))))) | s('type.closSem.v',sK32(sK0,X2,'type.closSem.v')) = s('type.closSem.v','const.closSem.RefPtr_1'(s('type.num.num',sK21(sK32(sK0,X2,'type.closSem.v')))))) ) | $spl24),
  inference(cnf_transformation,[],[f1696_D])).
fof(f1696_D,plain,(
  ( ! [X2] : (s('type.closSem.v',sK32(sK0,X2,'type.closSem.v')) = s('type.closSem.v','const.closSem.Closure_5'(s('type.option.option'('type.num.num'),sK22(sK32(sK0,X2,'type.closSem.v'))),s('type.list.list'('type.closSem.v'),sK23(sK32(sK0,X2,'type.closSem.v'))),s('type.list.list'('type.closSem.v'),sK24(sK32(sK0,X2,'type.closSem.v'))),s('type.num.num',sK25(sK32(sK0,X2,'type.closSem.v'))),s('type.closLang.exp',sK26(sK32(sK0,X2,'type.closSem.v'))))) | ~p(s(bool,'const.relation.WF_1'(s(fun('type.closSem.v',fun('type.closSem.v',bool)),X2)))) | s('type.closSem.v',sK32(sK0,X2,'type.closSem.v')) = s('type.closSem.v','const.closSem.Number_1'(s('type.integer.int',sK17(sK32(sK0,X2,'type.closSem.v'))))) | s('type.closSem.v',sK32(sK0,X2,'type.closSem.v')) = s('type.closSem.v','const.closSem.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK18(sK32(sK0,X2,'type.closSem.v'))))) | s('type.closSem.v',sK32(sK0,X2,'type.closSem.v')) = s('type.closSem.v','const.closSem.Block_2'(s('type.num.num',sK19(sK32(sK0,X2,'type.closSem.v'))),s('type.list.list'('type.closSem.v'),sK20(sK32(sK0,X2,'type.closSem.v'))))) | s('type.closSem.v',sK32(sK0,X2,'type.closSem.v')) = s('type.closSem.v','const.closSem.RefPtr_1'(s('type.num.num',sK21(sK32(sK0,X2,'type.closSem.v')))))) ) <=> ~$spl24),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl24])])).
fof(f1626,plain,(
  ( ! [X2,X3] : (s('type.closSem.v',sK32(sK0,X2,'type.closSem.v')) = s('type.closSem.v','const.closSem.Closure_5'(s('type.option.option'('type.num.num'),sK22(sK32(sK0,X2,'type.closSem.v'))),s('type.list.list'('type.closSem.v'),sK23(sK32(sK0,X2,'type.closSem.v'))),s('type.list.list'('type.closSem.v'),sK24(sK32(sK0,X2,'type.closSem.v'))),s('type.num.num',sK25(sK32(sK0,X2,'type.closSem.v'))),s('type.closLang.exp',sK26(sK32(sK0,X2,'type.closSem.v'))))) | s('type.closSem.v',sK32(sK0,X2,'type.closSem.v')) = s('type.closSem.v','const.closSem.RefPtr_1'(s('type.num.num',sK21(sK32(sK0,X2,'type.closSem.v'))))) | s('type.closSem.v',sK32(sK0,X2,'type.closSem.v')) = s('type.closSem.v','const.closSem.Block_2'(s('type.num.num',sK19(sK32(sK0,X2,'type.closSem.v'))),s('type.list.list'('type.closSem.v'),sK20(sK32(sK0,X2,'type.closSem.v'))))) | s('type.closSem.v',sK32(sK0,X2,'type.closSem.v')) = s('type.closSem.v','const.closSem.Word64_1'(s('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),sK18(sK32(sK0,X2,'type.closSem.v'))))) | s('type.closSem.v',sK32(sK0,X2,'type.closSem.v')) = s('type.closSem.v','const.closSem.Number_1'(s('type.integer.int',sK17(sK32(sK0,X2,'type.closSem.v'))))) | p(s(bool,happ(s(fun('type.closSem.v',bool),sK0),s('type.closSem.v',X3)))) | ~p(s(bool,'const.relation.WF_1'(s(fun('type.closSem.v',fun('type.closSem.v',bool)),X2))))) )),
  inference(resolution,[],[f451,f67])).
fof(f1390,plain,(
  ( ! [X1] : (~p(s(bool,happ(s(fun('type.closSem.v',bool),happ(s(fun('type.closSem.v',fun('type.closSem.v',bool)),X1),s('type.closSem.v',sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v')))),s('type.closSem.v',sK32(happ(s(fun('type.closSem.v',fun('type.closSem.v',bool)),'const.relation.EMPTY_REL_0'),s('type.closSem.v',sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))),X1,'type.closSem.v'))))) | ~p(s(bool,'const.relation.WF_1'(s(fun('type.closSem.v',fun('type.closSem.v',bool)),X1))))) ) | $spl20),
  inference(cnf_transformation,[],[f1390_D])).
fof(f1390_D,plain,(
  ( ! [X1] : (~p(s(bool,happ(s(fun('type.closSem.v',bool),happ(s(fun('type.closSem.v',fun('type.closSem.v',bool)),X1),s('type.closSem.v',sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v')))),s('type.closSem.v',sK32(happ(s(fun('type.closSem.v',fun('type.closSem.v',bool)),'const.relation.EMPTY_REL_0'),s('type.closSem.v',sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))),X1,'type.closSem.v'))))) | ~p(s(bool,'const.relation.WF_1'(s(fun('type.closSem.v',fun('type.closSem.v',bool)),X1))))) ) <=> ~$spl20),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl20])])).
fof(f1391,plain,(
  ( ! [X0] : (p(s(bool,happ(s(fun('type.closSem.v',bool),happ(s(fun('type.closSem.v',fun('type.closSem.v',bool)),'const.relation.EMPTY_REL_0'),s('type.closSem.v',sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v')))),s('type.closSem.v',X0))))) ) | $spl22),
  inference(cnf_transformation,[],[f1391_D])).
fof(f1391_D,plain,(
  ( ! [X0] : (p(s(bool,happ(s(fun('type.closSem.v',bool),happ(s(fun('type.closSem.v',fun('type.closSem.v',bool)),'const.relation.EMPTY_REL_0'),s('type.closSem.v',sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v')))),s('type.closSem.v',X0))))) ) <=> ~$spl22),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl22])])).
fof(f1451,plain,(
  ( ! [X2,X1] : (p(s(bool,happ(s(fun('type.closSem.v',bool),happ(s(fun('type.closSem.v',fun('type.closSem.v',bool)),'const.relation.EMPTY_REL_0'),s('type.closSem.v',sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v')))),s('type.closSem.v',X1)))) | ~p(s(bool,happ(s(fun('type.closSem.v',bool),happ(s(fun('type.closSem.v',fun('type.closSem.v',bool)),X2),s('type.closSem.v',sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v')))),s('type.closSem.v',sK32(happ(s(fun('type.closSem.v',fun('type.closSem.v',bool)),'const.relation.EMPTY_REL_0'),s('type.closSem.v',sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))),X2,'type.closSem.v'))))) | ~p(s(bool,'const.relation.WF_1'(s(fun('type.closSem.v',fun('type.closSem.v',bool)),X2))))) ) | $spl4),
  inference(subsumption_resolution,[],[f1423,f76])).
fof(f1423,plain,(
  ( ! [X2,X1] : (p(s(bool,'F_0')) | p(s(bool,happ(s(fun('type.closSem.v',bool),happ(s(fun('type.closSem.v',fun('type.closSem.v',bool)),'const.relation.EMPTY_REL_0'),s('type.closSem.v',sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v')))),s('type.closSem.v',X1)))) | ~p(s(bool,happ(s(fun('type.closSem.v',bool),happ(s(fun('type.closSem.v',fun('type.closSem.v',bool)),X2),s('type.closSem.v',sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v')))),s('type.closSem.v',sK32(happ(s(fun('type.closSem.v',fun('type.closSem.v',bool)),'const.relation.EMPTY_REL_0'),s('type.closSem.v',sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))),X2,'type.closSem.v'))))) | ~p(s(bool,'const.relation.WF_1'(s(fun('type.closSem.v',fun('type.closSem.v',bool)),X2))))) ) | $spl4),
  inference(superposition,[],[f66,f1378])).
fof(f1378,plain,(
  s(bool,'F_0') = s(bool,happ(s(fun('type.closSem.v',bool),happ(s(fun('type.closSem.v',fun('type.closSem.v',bool)),'const.relation.EMPTY_REL_0'),s('type.closSem.v',sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v')))),s('type.closSem.v',sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v')))) | $spl4),
  inference(resolution,[],[f1359,f71])).
fof(f1359,plain,(
  ~p(s(bool,happ(s(fun('type.closSem.v',bool),happ(s(fun('type.closSem.v',fun('type.closSem.v',bool)),'const.relation.EMPTY_REL_0'),s('type.closSem.v',sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v')))),s('type.closSem.v',sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))))) | $spl4),
  inference(resolution,[],[f543,f82])).
fof(f66,plain,(
  ( ! [X2,X0,X5,X3,X1] : (p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X3)))) | p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X5)))) | ~p(s(bool,happ(s(fun(X0,bool),happ(s(fun(X0,fun(X0,bool)),X1),s(X0,X5))),s(X0,sK32(X2,X1,X0))))) | ~p(s(bool,'const.relation.WF_1'(s(fun(X0,fun(X0,bool)),X1))))) )),
  inference(cnf_transformation,[],[f46])).
fof(f1373,plain,(
  ( ! [X0,X1] : (p(s(bool,happ(s(fun('type.closSem.v',bool),happ(s(fun('type.closSem.v',fun('type.closSem.v',bool)),'const.relation.EMPTY_REL_0'),s('type.closSem.v',sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v')))),s('type.closSem.v',X0)))) | ~p(s(bool,happ(s(fun('type.closSem.v',bool),happ(s(fun('type.closSem.v',fun('type.closSem.v',bool)),X1),s('type.closSem.v',sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v')))),s('type.closSem.v',sK32(happ(s(fun('type.closSem.v',fun('type.closSem.v',bool)),'const.relation.EMPTY_REL_0'),s('type.closSem.v',sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))),X1,'type.closSem.v'))))) | ~p(s(bool,'const.relation.WF_1'(s(fun('type.closSem.v',fun('type.closSem.v',bool)),X1))))) ) | $spl4),
  inference(resolution,[],[f1359,f66])).
fof(f920,plain,(
  ( ! [X1] : (~p(s(bool,happ(s(fun('type.closSem.v',bool),happ(s(fun('type.closSem.v',fun('type.closSem.v',bool)),X1),s('type.closSem.v',sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v')))),s('type.closSem.v',sK32(happ(s(fun('type.closSem.v',fun('type.closSem.v',bool)),'const.relation.EMPTY_REL_0'),s('type.closSem.v',sK1)),X1,'type.closSem.v'))))) | ~p(s(bool,'const.relation.WF_1'(s(fun('type.closSem.v',fun('type.closSem.v',bool)),X1))))) ) | $spl16),
  inference(cnf_transformation,[],[f920_D])).
fof(f920_D,plain,(
  ( ! [X1] : (~p(s(bool,happ(s(fun('type.closSem.v',bool),happ(s(fun('type.closSem.v',fun('type.closSem.v',bool)),X1),s('type.closSem.v',sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v')))),s('type.closSem.v',sK32(happ(s(fun('type.closSem.v',fun('type.closSem.v',bool)),'const.relation.EMPTY_REL_0'),s('type.closSem.v',sK1)),X1,'type.closSem.v'))))) | ~p(s(bool,'const.relation.WF_1'(s(fun('type.closSem.v',fun('type.closSem.v',bool)),X1))))) ) <=> ~$spl16),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl16])])).
fof(f921,plain,(
  ( ! [X0] : (p(s(bool,happ(s(fun('type.closSem.v',bool),happ(s(fun('type.closSem.v',fun('type.closSem.v',bool)),'const.relation.EMPTY_REL_0'),s('type.closSem.v',sK1))),s('type.closSem.v',X0))))) ) | $spl18),
  inference(cnf_transformation,[],[f921_D])).
fof(f921_D,plain,(
  ( ! [X0] : (p(s(bool,happ(s(fun('type.closSem.v',bool),happ(s(fun('type.closSem.v',fun('type.closSem.v',bool)),'const.relation.EMPTY_REL_0'),s('type.closSem.v',sK1))),s('type.closSem.v',X0))))) ) <=> ~$spl18),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl18])])).
fof(f980,plain,(
  ( ! [X2,X1] : (p(s(bool,happ(s(fun('type.closSem.v',bool),happ(s(fun('type.closSem.v',fun('type.closSem.v',bool)),'const.relation.EMPTY_REL_0'),s('type.closSem.v',sK1))),s('type.closSem.v',X1)))) | ~p(s(bool,happ(s(fun('type.closSem.v',bool),happ(s(fun('type.closSem.v',fun('type.closSem.v',bool)),X2),s('type.closSem.v',sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v')))),s('type.closSem.v',sK32(happ(s(fun('type.closSem.v',fun('type.closSem.v',bool)),'const.relation.EMPTY_REL_0'),s('type.closSem.v',sK1)),X2,'type.closSem.v'))))) | ~p(s(bool,'const.relation.WF_1'(s(fun('type.closSem.v',fun('type.closSem.v',bool)),X2))))) ) | $spl0),
  inference(subsumption_resolution,[],[f952,f76])).
fof(f952,plain,(
  ( ! [X2,X1] : (p(s(bool,'F_0')) | p(s(bool,happ(s(fun('type.closSem.v',bool),happ(s(fun('type.closSem.v',fun('type.closSem.v',bool)),'const.relation.EMPTY_REL_0'),s('type.closSem.v',sK1))),s('type.closSem.v',X1)))) | ~p(s(bool,happ(s(fun('type.closSem.v',bool),happ(s(fun('type.closSem.v',fun('type.closSem.v',bool)),X2),s('type.closSem.v',sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v')))),s('type.closSem.v',sK32(happ(s(fun('type.closSem.v',fun('type.closSem.v',bool)),'const.relation.EMPTY_REL_0'),s('type.closSem.v',sK1)),X2,'type.closSem.v'))))) | ~p(s(bool,'const.relation.WF_1'(s(fun('type.closSem.v',fun('type.closSem.v',bool)),X2))))) ) | $spl0),
  inference(superposition,[],[f66,f908])).
fof(f908,plain,(
  s(bool,'F_0') = s(bool,happ(s(fun('type.closSem.v',bool),happ(s(fun('type.closSem.v',fun('type.closSem.v',bool)),'const.relation.EMPTY_REL_0'),s('type.closSem.v',sK1))),s('type.closSem.v',sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v')))) | $spl0),
  inference(resolution,[],[f889,f71])).
fof(f889,plain,(
  ~p(s(bool,happ(s(fun('type.closSem.v',bool),happ(s(fun('type.closSem.v',fun('type.closSem.v',bool)),'const.relation.EMPTY_REL_0'),s('type.closSem.v',sK1))),s('type.closSem.v',sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v'))))) | $spl0),
  inference(resolution,[],[f98,f82])).
fof(f903,plain,(
  ( ! [X0,X1] : (p(s(bool,happ(s(fun('type.closSem.v',bool),happ(s(fun('type.closSem.v',fun('type.closSem.v',bool)),'const.relation.EMPTY_REL_0'),s('type.closSem.v',sK1))),s('type.closSem.v',X0)))) | ~p(s(bool,happ(s(fun('type.closSem.v',bool),happ(s(fun('type.closSem.v',fun('type.closSem.v',bool)),X1),s('type.closSem.v',sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v')))),s('type.closSem.v',sK32(happ(s(fun('type.closSem.v',fun('type.closSem.v',bool)),'const.relation.EMPTY_REL_0'),s('type.closSem.v',sK1)),X1,'type.closSem.v'))))) | ~p(s(bool,'const.relation.WF_1'(s(fun('type.closSem.v',fun('type.closSem.v',bool)),X1))))) ) | $spl0),
  inference(resolution,[],[f889,f66])).
fof(f725,plain,(
  ( ! [X3] : (s(bool,'F_0') = s(bool,'const.relation.WF_1'(s(fun('type.closSem.v',fun('type.closSem.v',bool)),X3)))) ) | $spl14),
  inference(cnf_transformation,[],[f725_D])).
fof(f725_D,plain,(
  ( ! [X3] : (s(bool,'F_0') = s(bool,'const.relation.WF_1'(s(fun('type.closSem.v',fun('type.closSem.v',bool)),X3)))) ) <=> ~$spl14),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl14])])).
fof(f674,plain,(
  ( ! [X4,X5] : (p(s(bool,happ(s(fun('type.closSem.v',bool),sK0),s('type.closSem.v',X4)))) | ~p(s(bool,'const.relation.WF_1'(s(fun('type.closSem.v',fun('type.closSem.v',bool)),X5)))) | ~p(s(bool,happ(s(fun('type.closSem.v',bool),happ(s(fun('type.closSem.v',fun('type.closSem.v',bool)),X5),s('type.closSem.v',X4))),s('type.closSem.v',sK32(sK0,X5,'type.closSem.v')))))) ) | $spl8),
  inference(cnf_transformation,[],[f674_D])).
fof(f674_D,plain,(
  ( ! [X4,X5] : (p(s(bool,happ(s(fun('type.closSem.v',bool),sK0),s('type.closSem.v',X4)))) | ~p(s(bool,'const.relation.WF_1'(s(fun('type.closSem.v',fun('type.closSem.v',bool)),X5)))) | ~p(s(bool,happ(s(fun('type.closSem.v',bool),happ(s(fun('type.closSem.v',fun('type.closSem.v',bool)),X5),s('type.closSem.v',X4))),s('type.closSem.v',sK32(sK0,X5,'type.closSem.v')))))) ) <=> ~$spl8),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl8])])).
fof(f886,plain,(
  ( ! [X10,X8,X9] : (p(s(bool,happ(s(fun('type.closSem.v',bool),sK0),s('type.closSem.v',X9)))) | ~p(s(bool,happ(s(fun('type.closSem.v',bool),happ(s(fun('type.closSem.v',fun('type.closSem.v',bool)),X10),s('type.closSem.v',X9))),s('type.closSem.v',sK32(sK0,X10,'type.closSem.v'))))) | ~p(s(bool,'const.relation.WF_1'(s(fun('type.closSem.v',fun('type.closSem.v',bool)),X10)))) | s(bool,'F_0') = s(bool,'const.relation.WF_1'(s(fun('type.closSem.v',fun('type.closSem.v',bool)),X8)))) )),
  inference(subsumption_resolution,[],[f859,f76])).
fof(f859,plain,(
  ( ! [X10,X8,X9] : (p(s(bool,'F_0')) | p(s(bool,happ(s(fun('type.closSem.v',bool),sK0),s('type.closSem.v',X9)))) | ~p(s(bool,happ(s(fun('type.closSem.v',bool),happ(s(fun('type.closSem.v',fun('type.closSem.v',bool)),X10),s('type.closSem.v',X9))),s('type.closSem.v',sK32(sK0,X10,'type.closSem.v'))))) | ~p(s(bool,'const.relation.WF_1'(s(fun('type.closSem.v',fun('type.closSem.v',bool)),X10)))) | s(bool,'F_0') = s(bool,'const.relation.WF_1'(s(fun('type.closSem.v',fun('type.closSem.v',bool)),X8)))) )),
  inference(superposition,[],[f66,f713])).
fof(f713,plain,(
  ( ! [X10] : (s(bool,'F_0') = s(bool,happ(s(fun('type.closSem.v',bool),sK0),s('type.closSem.v',sK32(sK0,X10,'type.closSem.v')))) | s(bool,'F_0') = s(bool,'const.relation.WF_1'(s(fun('type.closSem.v',fun('type.closSem.v',bool)),X10)))) )),
  inference(resolution,[],[f517,f71])).
fof(f517,plain,(
  ( ! [X2] : (~p(s(bool,happ(s(fun('type.closSem.v',bool),sK0),s('type.closSem.v',sK32(sK0,X2,'type.closSem.v'))))) | s(bool,'F_0') = s(bool,'const.relation.WF_1'(s(fun('type.closSem.v',fun('type.closSem.v',bool)),X2)))) )),
  inference(resolution,[],[f85,f71])).
fof(f724,plain,(
  ( ! [X2,X0] : (s(bool,'F_0') = s(bool,'const.relation.WF_1'(s(fun('type.closSem.v',fun('type.closSem.v',bool)),X0))) | ~p(s(bool,'const.relation.WF_1'(s(fun('type.closSem.v',fun('type.closSem.v',bool)),X2)))) | ~p(s(bool,happ(s(fun('type.closSem.v',bool),happ(s(fun('type.closSem.v',fun('type.closSem.v',bool)),X2),s('type.closSem.v',sK32(sK0,X0,'type.closSem.v')))),s('type.closSem.v',sK32(sK0,X2,'type.closSem.v')))))) ) | $spl12),
  inference(cnf_transformation,[],[f724_D])).
fof(f724_D,plain,(
  ( ! [X2,X0] : (s(bool,'F_0') = s(bool,'const.relation.WF_1'(s(fun('type.closSem.v',fun('type.closSem.v',bool)),X0))) | ~p(s(bool,'const.relation.WF_1'(s(fun('type.closSem.v',fun('type.closSem.v',bool)),X2)))) | ~p(s(bool,happ(s(fun('type.closSem.v',bool),happ(s(fun('type.closSem.v',fun('type.closSem.v',bool)),X2),s('type.closSem.v',sK32(sK0,X0,'type.closSem.v')))),s('type.closSem.v',sK32(sK0,X2,'type.closSem.v')))))) ) <=> ~$spl12),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl12])])).
fof(f885,plain,(
  ( ! [X6,X7,X5] : (p(s(bool,happ(s(fun('type.closSem.v',bool),sK0),s('type.closSem.v',X6)))) | ~p(s(bool,happ(s(fun('type.closSem.v',bool),happ(s(fun('type.closSem.v',fun('type.closSem.v',bool)),X7),s('type.closSem.v',sK32(sK0,X5,'type.closSem.v')))),s('type.closSem.v',sK32(sK0,X7,'type.closSem.v'))))) | ~p(s(bool,'const.relation.WF_1'(s(fun('type.closSem.v',fun('type.closSem.v',bool)),X7)))) | s(bool,'F_0') = s(bool,'const.relation.WF_1'(s(fun('type.closSem.v',fun('type.closSem.v',bool)),X5)))) )),
  inference(subsumption_resolution,[],[f858,f76])).
fof(f858,plain,(
  ( ! [X6,X7,X5] : (p(s(bool,'F_0')) | p(s(bool,happ(s(fun('type.closSem.v',bool),sK0),s('type.closSem.v',X6)))) | ~p(s(bool,happ(s(fun('type.closSem.v',bool),happ(s(fun('type.closSem.v',fun('type.closSem.v',bool)),X7),s('type.closSem.v',sK32(sK0,X5,'type.closSem.v')))),s('type.closSem.v',sK32(sK0,X7,'type.closSem.v'))))) | ~p(s(bool,'const.relation.WF_1'(s(fun('type.closSem.v',fun('type.closSem.v',bool)),X7)))) | s(bool,'F_0') = s(bool,'const.relation.WF_1'(s(fun('type.closSem.v',fun('type.closSem.v',bool)),X5)))) )),
  inference(superposition,[],[f66,f713])).
fof(f709,plain,(
  ( ! [X4,X5,X3] : (s(bool,'F_0') = s(bool,'const.relation.WF_1'(s(fun('type.closSem.v',fun('type.closSem.v',bool)),X3))) | p(s(bool,happ(s(fun('type.closSem.v',bool),sK0),s('type.closSem.v',X4)))) | ~p(s(bool,happ(s(fun('type.closSem.v',bool),happ(s(fun('type.closSem.v',fun('type.closSem.v',bool)),X5),s('type.closSem.v',X4))),s('type.closSem.v',sK32(sK0,X5,'type.closSem.v'))))) | ~p(s(bool,'const.relation.WF_1'(s(fun('type.closSem.v',fun('type.closSem.v',bool)),X5))))) )),
  inference(resolution,[],[f517,f66])).
fof(f708,plain,(
  ( ! [X2,X0,X1] : (s(bool,'F_0') = s(bool,'const.relation.WF_1'(s(fun('type.closSem.v',fun('type.closSem.v',bool)),X0))) | p(s(bool,happ(s(fun('type.closSem.v',bool),sK0),s('type.closSem.v',X1)))) | ~p(s(bool,happ(s(fun('type.closSem.v',bool),happ(s(fun('type.closSem.v',fun('type.closSem.v',bool)),X2),s('type.closSem.v',sK32(sK0,X0,'type.closSem.v')))),s('type.closSem.v',sK32(sK0,X2,'type.closSem.v'))))) | ~p(s(bool,'const.relation.WF_1'(s(fun('type.closSem.v',fun('type.closSem.v',bool)),X2))))) )),
  inference(resolution,[],[f517,f66])).
fof(f688,plain,(
  $false | $spl10),
  inference(resolution,[],[f685,f82])).
fof(f685,plain,(
  ( ! [X3] : (~p(s(bool,'const.relation.WF_1'(s(fun('type.closSem.v',fun('type.closSem.v',bool)),X3))))) ) | $spl10),
  inference(trivial_inequality_removal,[],[f682])).
fof(f682,plain,(
  ( ! [X3] : (s(bool,'T_0') != s(bool,'T_0') | ~p(s(bool,'const.relation.WF_1'(s(fun('type.closSem.v',fun('type.closSem.v',bool)),X3))))) ) | $spl10),
  inference(superposition,[],[f675,f73])).
fof(f73,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f49])).
fof(f49,plain,(
  ! [X0] : ((s(bool,'T_0') != s(bool,X0) | p(s(bool,X0))) & (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f26])).
fof(f26,plain,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) <=> p(s(bool,X0)))),
  inference(rectify,[],[f9])).
fof(f9,axiom,(
  ! [X22] : (s(bool,'T_0') = s(bool,X22) <=> p(s(bool,X22)))),
  file('thm.closProps.is_closure_ind','thm.bool.EQ_CLAUSES|split|1')).
fof(f675,plain,(
  ( ! [X3] : (s(bool,'T_0') != s(bool,'const.relation.WF_1'(s(fun('type.closSem.v',fun('type.closSem.v',bool)),X3)))) ) | $spl10),
  inference(cnf_transformation,[],[f675_D])).
fof(f675_D,plain,(
  ( ! [X3] : (s(bool,'T_0') != s(bool,'const.relation.WF_1'(s(fun('type.closSem.v',fun('type.closSem.v',bool)),X3)))) ) <=> ~$spl10),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl10])])).
fof(f658,plain,(
  ( ! [X4,X5,X3] : (s(bool,'T_0') != s(bool,'const.relation.WF_1'(s(fun('type.closSem.v',fun('type.closSem.v',bool)),X3))) | p(s(bool,happ(s(fun('type.closSem.v',bool),sK0),s('type.closSem.v',X4)))) | ~p(s(bool,happ(s(fun('type.closSem.v',bool),happ(s(fun('type.closSem.v',fun('type.closSem.v',bool)),X5),s('type.closSem.v',X4))),s('type.closSem.v',sK32(sK0,X5,'type.closSem.v'))))) | ~p(s(bool,'const.relation.WF_1'(s(fun('type.closSem.v',fun('type.closSem.v',bool)),X5))))) )),
  inference(resolution,[],[f515,f66])).
fof(f515,plain,(
  ( ! [X0] : (~p(s(bool,happ(s(fun('type.closSem.v',bool),sK0),s('type.closSem.v',sK32(sK0,X0,'type.closSem.v'))))) | s(bool,'T_0') != s(bool,'const.relation.WF_1'(s(fun('type.closSem.v',fun('type.closSem.v',bool)),X0)))) )),
  inference(resolution,[],[f85,f74])).
fof(f673,plain,(
  ( ! [X2,X0] : (s(bool,'T_0') != s(bool,'const.relation.WF_1'(s(fun('type.closSem.v',fun('type.closSem.v',bool)),X0))) | ~p(s(bool,'const.relation.WF_1'(s(fun('type.closSem.v',fun('type.closSem.v',bool)),X2)))) | ~p(s(bool,happ(s(fun('type.closSem.v',bool),happ(s(fun('type.closSem.v',fun('type.closSem.v',bool)),X2),s('type.closSem.v',sK32(sK0,X0,'type.closSem.v')))),s('type.closSem.v',sK32(sK0,X2,'type.closSem.v')))))) ) | $spl6),
  inference(cnf_transformation,[],[f673_D])).
fof(f673_D,plain,(
  ( ! [X2,X0] : (s(bool,'T_0') != s(bool,'const.relation.WF_1'(s(fun('type.closSem.v',fun('type.closSem.v',bool)),X0))) | ~p(s(bool,'const.relation.WF_1'(s(fun('type.closSem.v',fun('type.closSem.v',bool)),X2)))) | ~p(s(bool,happ(s(fun('type.closSem.v',bool),happ(s(fun('type.closSem.v',fun('type.closSem.v',bool)),X2),s('type.closSem.v',sK32(sK0,X0,'type.closSem.v')))),s('type.closSem.v',sK32(sK0,X2,'type.closSem.v')))))) ) <=> ~$spl6),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl6])])).
fof(f657,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') != s(bool,'const.relation.WF_1'(s(fun('type.closSem.v',fun('type.closSem.v',bool)),X0))) | p(s(bool,happ(s(fun('type.closSem.v',bool),sK0),s('type.closSem.v',X1)))) | ~p(s(bool,happ(s(fun('type.closSem.v',bool),happ(s(fun('type.closSem.v',fun('type.closSem.v',bool)),X2),s('type.closSem.v',sK32(sK0,X0,'type.closSem.v')))),s('type.closSem.v',sK32(sK0,X2,'type.closSem.v'))))) | ~p(s(bool,'const.relation.WF_1'(s(fun('type.closSem.v',fun('type.closSem.v',bool)),X2))))) )),
  inference(resolution,[],[f515,f66])).
fof(f543,plain,(
  ( ! [X1] : (~p(s(bool,'const.relation.WF_1'(s(fun('type.closSem.v',fun('type.closSem.v',bool)),X1)))) | ~p(s(bool,happ(s(fun('type.closSem.v',bool),happ(s(fun('type.closSem.v',fun('type.closSem.v',bool)),X1),s('type.closSem.v',sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v')))),s('type.closSem.v',sK32(sK0,X1,'type.closSem.v')))))) ) | $spl4),
  inference(cnf_transformation,[],[f543_D])).
fof(f543_D,plain,(
  ( ! [X1] : (~p(s(bool,'const.relation.WF_1'(s(fun('type.closSem.v',fun('type.closSem.v',bool)),X1)))) | ~p(s(bool,happ(s(fun('type.closSem.v',bool),happ(s(fun('type.closSem.v',fun('type.closSem.v',bool)),X1),s('type.closSem.v',sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v')))),s('type.closSem.v',sK32(sK0,X1,'type.closSem.v')))))) ) <=> ~$spl4),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl4])])).
fof(f592,plain,(
  ( ! [X2,X1] : (p(s(bool,happ(s(fun('type.closSem.v',bool),sK0),s('type.closSem.v',X1)))) | ~p(s(bool,happ(s(fun('type.closSem.v',bool),happ(s(fun('type.closSem.v',fun('type.closSem.v',bool)),X2),s('type.closSem.v',sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v')))),s('type.closSem.v',sK32(sK0,X2,'type.closSem.v'))))) | ~p(s(bool,'const.relation.WF_1'(s(fun('type.closSem.v',fun('type.closSem.v',bool)),X2))))) )),
  inference(subsumption_resolution,[],[f564,f76])).
fof(f564,plain,(
  ( ! [X2,X1] : (p(s(bool,'F_0')) | p(s(bool,happ(s(fun('type.closSem.v',bool),sK0),s('type.closSem.v',X1)))) | ~p(s(bool,happ(s(fun('type.closSem.v',bool),happ(s(fun('type.closSem.v',fun('type.closSem.v',bool)),X2),s('type.closSem.v',sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v')))),s('type.closSem.v',sK32(sK0,X2,'type.closSem.v'))))) | ~p(s(bool,'const.relation.WF_1'(s(fun('type.closSem.v',fun('type.closSem.v',bool)),X2))))) )),
  inference(superposition,[],[f66,f533])).
fof(f528,plain,(
  ( ! [X0,X1] : (p(s(bool,happ(s(fun('type.closSem.v',bool),sK0),s('type.closSem.v',X0)))) | ~p(s(bool,happ(s(fun('type.closSem.v',bool),happ(s(fun('type.closSem.v',fun('type.closSem.v',bool)),X1),s('type.closSem.v',sK32(sK0,'const.relation.EMPTY_REL_0','type.closSem.v')))),s('type.closSem.v',sK32(sK0,X1,'type.closSem.v'))))) | ~p(s(bool,'const.relation.WF_1'(s(fun('type.closSem.v',fun('type.closSem.v',bool)),X1))))) )),
  inference(resolution,[],[f514,f66])).
fof(f98,plain,(
  ( ! [X1] : (~p(s(bool,'const.relation.WF_1'(s(fun('type.closSem.v',fun('type.closSem.v',bool)),X1)))) | ~p(s(bool,happ(s(fun('type.closSem.v',bool),happ(s(fun('type.closSem.v',fun('type.closSem.v',bool)),X1),s('type.closSem.v',sK1))),s('type.closSem.v',sK32(sK0,X1,'type.closSem.v')))))) ) | $spl0),
  inference(cnf_transformation,[],[f98_D])).
fof(f98_D,plain,(
  ( ! [X1] : (~p(s(bool,'const.relation.WF_1'(s(fun('type.closSem.v',fun('type.closSem.v',bool)),X1)))) | ~p(s(bool,happ(s(fun('type.closSem.v',bool),happ(s(fun('type.closSem.v',fun('type.closSem.v',bool)),X1),s('type.closSem.v',sK1))),s('type.closSem.v',sK32(sK0,X1,'type.closSem.v')))))) ) <=> ~$spl0),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl0])])).
fof(f278,plain,(
  ( ! [X0,X1] : (p(s(bool,happ(s(fun('type.closSem.v',bool),sK0),s('type.closSem.v',X0)))) | ~p(s(bool,happ(s(fun('type.closSem.v',bool),happ(s(fun('type.closSem.v',fun('type.closSem.v',bool)),X1),s('type.closSem.v',sK1))),s('type.closSem.v',sK32(sK0,X1,'type.closSem.v'))))) | ~p(s(bool,'const.relation.WF_1'(s(fun('type.closSem.v',fun('type.closSem.v',bool)),X1))))) )),
  inference(subsumption_resolution,[],[f250,f76])).
fof(f250,plain,(
  ( ! [X0,X1] : (p(s(bool,'F_0')) | p(s(bool,happ(s(fun('type.closSem.v',bool),sK0),s('type.closSem.v',X0)))) | ~p(s(bool,happ(s(fun('type.closSem.v',bool),happ(s(fun('type.closSem.v',fun('type.closSem.v',bool)),X1),s('type.closSem.v',sK1))),s('type.closSem.v',sK32(sK0,X1,'type.closSem.v'))))) | ~p(s(bool,'const.relation.WF_1'(s(fun('type.closSem.v',fun('type.closSem.v',bool)),X1))))) )),
  inference(superposition,[],[f66,f88])).
fof(f122,plain,(
  $false | $spl2),
  inference(resolution,[],[f99,f58])).
fof(f83,plain,(
  ( ! [X0,X1] : (p(s(bool,happ(s(fun('type.closSem.v',bool),sK0),s('type.closSem.v',X0)))) | ~p(s(bool,happ(s(fun('type.closSem.v',bool),happ(s(fun('type.closSem.v',fun('type.closSem.v',bool)),X1),s('type.closSem.v',sK1))),s('type.closSem.v',sK32(sK0,X1,'type.closSem.v'))))) | ~p(s(bool,'const.relation.WF_1'(s(fun('type.closSem.v',fun('type.closSem.v',bool)),X1))))) )),
  inference(resolution,[],[f58,f66])).
% SZS output end Proof for thm.closProps
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 130
% Passive clauses: 850
% Generated clauses: 2414
% Final active clauses: 109
% Final passive clauses: 666
% Input formulas: 15
% Initial clauses: 31
% 
% Selected by SInE selection: 15
% SInE iterations: 1
% 
% Duplicate literals: 2
% Trivial inequalities: 59
% Fw subsumption resolutions: 203
% Fw demodulations: 455
% Bw demodulations: 10
% 
% Simple tautologies: 2
% Forward subsumptions: 787
% 
% Binary resolution: 242
% Forward superposition: 1029
% Backward superposition: 370
% 
% Split clauses: 58
% Split components: 272
% SAT solver clauses: 70
% SAT solver unit clauses: 11
% SAT solver binary clauses: 14
% 
% Sat splits: 58
% Sat splitting refutations: 11
% 
% Memory used [KB]: 4349
% Time elapsed: 0.145 s
% ------------------------------
% ------------------------------
% Success in time 11.89 s
