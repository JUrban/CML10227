Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 149 next slice time: 5
dis+11_7_3 on thm.closProps
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.closProps
% SZS output start Proof for thm.closProps
fof(f159,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f158,f124,f131])).
fof(f131,plain,(
  p(s(bool,'T_0')) | $spl6),
  inference(cnf_transformation,[],[f131_D])).
fof(f131_D,plain,(
  p(s(bool,'T_0')) <=> ~$spl6),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl6])])).
fof(f124,plain,(
  p(s(bool,'T_0'))),
  inference(trivial_inequality_removal,[],[f119])).
fof(f119,plain,(
  ( ! [X0,X1] : (p(s(bool,'T_0')) | s(X0,X1) != s(X0,X1)) )),
  inference(cnf_transformation,[],[f76])).
fof(f76,plain,(
  ! [X0,X1] : ((s(X0,X1) != s(X0,X1) | p(s(bool,'T_0'))) & (~p(s(bool,'T_0')) | s(X0,X1) = s(X0,X1)))),
  inference(nnf_transformation,[],[f40])).
fof(f40,plain,(
  ! [X0,X1] : (s(X0,X1) = s(X0,X1) <=> p(s(bool,'T_0')))),
  inference(flattening,[],[f39])).
fof(f39,plain,(
  ! [X0] : ! [X1] : (s(X0,X1) = s(X0,X1) <=> p(s(bool,'T_0')))),
  inference(rectify,[],[f12])).
fof(f12,axiom,(
  ! [X9] : ! [X7] : (s(X9,X7) = s(X9,X7) <=> p(s(bool,'T_0')))),
  file('thm.closProps.is_closure_add_partial_args_nil','thm.bool.REFL_CLAUSE')).
fof(f158,plain,(
  $false | $spl6),
  inference(subsumption_resolution,[],[f157,f80])).
fof(f80,plain,(
  s('type.closSem.v',sK0) != s('type.closSem.v','const.closProps.clo_add_partial_args_2'(s('type.list.list'('type.closSem.v'),'const.list.NIL_0'),s('type.closSem.v',sK0)))),
  inference(cnf_transformation,[],[f54])).
fof(f54,plain,(
  p(s(bool,'const.closProps.is_closure_1'(s('type.closSem.v',sK0)))) & s('type.closSem.v',sK0) != s('type.closSem.v','const.closProps.clo_add_partial_args_2'(s('type.list.list'('type.closSem.v'),'const.list.NIL_0'),s('type.closSem.v',sK0)))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0])],[f45])).
fof(f45,plain,(
  ? [X0] : (p(s(bool,'const.closProps.is_closure_1'(s('type.closSem.v',X0)))) & s('type.closSem.v',X0) != s('type.closSem.v','const.closProps.clo_add_partial_args_2'(s('type.list.list'('type.closSem.v'),'const.list.NIL_0'),s('type.closSem.v',X0))))),
  inference(ennf_transformation,[],[f23])).
fof(f23,plain,(
  ~! [X0] : (p(s(bool,'const.closProps.is_closure_1'(s('type.closSem.v',X0)))) => s('type.closSem.v',X0) = s('type.closSem.v','const.closProps.clo_add_partial_args_2'(s('type.list.list'('type.closSem.v'),'const.list.NIL_0'),s('type.closSem.v',X0))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : (p(s(bool,'const.closProps.is_closure_1'(s('type.closSem.v',X6)))) => s('type.closSem.v',X6) = s('type.closSem.v','const.closProps.clo_add_partial_args_2'(s('type.list.list'('type.closSem.v'),'const.list.NIL_0'),s('type.closSem.v',X6))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : (p(s(bool,'const.closProps.is_closure_1'(s('type.closSem.v',X6)))) => s('type.closSem.v',X6) = s('type.closSem.v','const.closProps.clo_add_partial_args_2'(s('type.list.list'('type.closSem.v'),'const.list.NIL_0'),s('type.closSem.v',X6))))),
  file('thm.closProps.is_closure_add_partial_args_nil','thm.closProps.is_closure_add_partial_args_nil')).
fof(f157,plain,(
  s('type.closSem.v',sK0) = s('type.closSem.v','const.closProps.clo_add_partial_args_2'(s('type.list.list'('type.closSem.v'),'const.list.NIL_0'),s('type.closSem.v',sK0))) | $spl6),
  inference(subsumption_resolution,[],[f155,f131])).
fof(f155,plain,(
  ~p(s(bool,'T_0')) | s('type.closSem.v',sK0) = s('type.closSem.v','const.closProps.clo_add_partial_args_2'(s('type.list.list'('type.closSem.v'),'const.list.NIL_0'),s('type.closSem.v',sK0)))),
  inference(superposition,[],[f86,f134])).
fof(f134,plain,(
  s(bool,'T_0') = s(bool,'const.closProps.is_closure_1'(s('type.closSem.v',sK0)))),
  inference(resolution,[],[f88,f79])).
fof(f79,plain,(
  p(s(bool,'const.closProps.is_closure_1'(s('type.closSem.v',sK0))))),
  inference(cnf_transformation,[],[f54])).
fof(f88,plain,(
  ( ! [X0] : (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f55])).
fof(f55,plain,(
  ! [X0] : ((s(bool,'T_0') != s(bool,X0) | p(s(bool,X0))) & (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f27])).
fof(f27,plain,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) <=> p(s(bool,X0)))),
  inference(rectify,[],[f20])).
fof(f20,axiom,(
  ! [X8] : (s(bool,'T_0') = s(bool,X8) <=> p(s(bool,X8)))),
  file('thm.closProps.is_closure_add_partial_args_nil','thm.bool.EQ_CLAUSES|split|0')).
fof(f86,plain,(
  ( ! [X0] : (~p(s(bool,'const.closProps.is_closure_1'(s('type.closSem.v',X0)))) | s('type.closSem.v',X0) = s('type.closSem.v','const.closProps.clo_add_partial_args_2'(s('type.list.list'('type.closSem.v'),'const.list.NIL_0'),s('type.closSem.v',X0)))) )),
  inference(cnf_transformation,[],[f47])).
fof(f47,plain,(
  ! [X0] : (~p(s(bool,'const.closProps.is_closure_1'(s('type.closSem.v',X0)))) | s('type.closSem.v',X0) = s('type.closSem.v','const.closProps.clo_add_partial_args_2'(s('type.list.list'('type.closSem.v'),'const.list.NIL_0'),s('type.closSem.v',X0))))),
  inference(ennf_transformation,[],[f26])).
fof(f26,plain,(
  ! [X0] : (p(s(bool,'const.closProps.is_closure_1'(s('type.closSem.v',X0)))) => s('type.closSem.v',X0) = s('type.closSem.v','const.closProps.clo_add_partial_args_2'(s('type.list.list'('type.closSem.v'),'const.list.NIL_0'),s('type.closSem.v',X0))))),
  inference(rectify,[],[f7])).
fof(f7,axiom,(
  ! [X7] : (p(s(bool,'const.closProps.is_closure_1'(s('type.closSem.v',X7)))) => s('type.closSem.v',X7) = s('type.closSem.v','const.closProps.clo_add_partial_args_2'(s('type.list.list'('type.closSem.v'),'const.list.NIL_0'),s('type.closSem.v',X7))))),
  file('thm.closProps.is_closure_add_partial_args_nil','thm.closProps.clo_add_partial_args_nil')).
% SZS output end Proof for thm.closProps
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 10
% Passive clauses: 16
% Generated clauses: 76
% Final active clauses: 9
% Final passive clauses: 3
% Input formulas: 21
% Initial clauses: 45
% 
% Duplicate literals: 2
% Trivial inequalities: 1
% Fw subsumption resolutions: 2
% Bw demodulations: 1
% 
% Simple tautologies: 24
% Equational tautologies: 3
% Forward subsumptions: 13
% 
% Binary resolution: 5
% Forward superposition: 3
% Backward superposition: 11
% Self superposition: 2
% Equality factoring: 2
% 
% Split clauses: 13
% Split components: 27
% SAT solver clauses: 19
% SAT solver unit clauses: 5
% SAT solver binary clauses: 12
% SAT solver learnt clauses: 1
% 
% Sat splits: 13
% Sat splitting refutations: 1
% 
% TWLsolver clauses: 18
% TWLsolver calls for satisfiability: 4
% 
% Memory used [KB]: 639
% Time elapsed: 0.011 s
% ------------------------------
% ------------------------------
% Success in time 0.014 s
