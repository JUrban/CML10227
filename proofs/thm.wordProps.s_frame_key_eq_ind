Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 149 next slice time: 5
dis+11_7_3 on thm.wordProps
% (13088)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 185
% Passive clauses: 3754
% Generated clauses: 13831
% Final active clauses: 162
% Final passive clauses: 3342
% Input formulas: 19
% Initial clauses: 31
% 
% Duplicate literals: 384
% Trivial inequalities: 86
% Fw subsumption resolutions: 682
% Fw demodulations: 1116
% Bw demodulations: 19
% 
% Simple tautologies: 187
% Equational tautologies: 23
% Forward subsumptions: 7520
% Fw demodulations to eq. taut.: 4
% 
% Binary resolution: 116
% Forward superposition: 6490
% Backward superposition: 4498
% Self superposition: 252
% Equality factoring: 39
% Equality resolution: 24
% 
% Split clauses: 154
% Split components: 313
% SAT solver clauses: 275
% SAT solver unit clauses: 24
% SAT solver binary clauses: 88
% 
% Sat splits: 154
% Sat splitting refutations: 9
% 
% TWLsolver clauses: 275
% TWLsolver calls for satisfiability: 80
% 
% Memory used [KB]: 21492
% Time elapsed: 0.600 s
% ------------------------------
% ------------------------------
% remaining time: 143 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.wordProps
% (13124)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit

% Active clauses: 102
% Passive clauses: 666
% Generated clauses: 6372
% Final active clauses: 92
% Final passive clauses: 544
% Input formulas: 19
% Initial clauses: 31
% 
% Duplicate literals: 525
% Trivial inequalities: 66
% Fw subsumption resolutions: 312
% Fw demodulations: 492
% Bw demodulations: 27
% Condensations: 482
% 
% Simple tautologies: 96
% Equational tautologies: 21
% Forward subsumptions: 2719
% Fw demodulations to eq. taut.: 2
% 
% Binary resolution: 57
% Forward superposition: 2206
% Backward superposition: 1443
% Self superposition: 65
% Equality factoring: 36
% Equality resolution: 13
% 
% Split clauses: 48
% Split components: 109
% SAT solver clauses: 1037
% SAT solver unit clauses: 45
% SAT solver binary clauses: 32
% 
% Sat splits: 48
% Sat splitting refutations: 6
% 
% TWLsolver clauses: 1037
% TWLsolver calls for satisfiability: 344
% 
% Memory used [KB]: 10746
% Time elapsed: 0.727 s
% ------------------------------
% ------------------------------
% remaining time: 136 next slice time: 103
lrs+11_2_br=off:cond=on:fde=none:gs=on:gsaa=full_model:lwlo=on:nwc=2:sas=minisat:stl=30:ssfp=100000:ssfq=1.4:smm=sco:ssnc=none:sp=occurrence:urr=on_98 on thm.wordProps
% (13157)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 351
% Passive clauses: 5825
% Generated clauses: 111289
% Final active clauses: 103
% Final passive clauses: 618
% Input formulas: 19
% Initial clauses: 31
% Discarded non-redundant clauses: 1670
% 
% Duplicate literals: 5753
% Trivial inequalities: 891
% Fw subsumption resolutions: 8763
% Fw demodulations: 16255
% Bw demodulations: 3042
% Condensations: 10665
% Global subsumptions: 157
% 
% Simple tautologies: 1430
% Equational tautologies: 933
% Forward subsumptions: 57711
% Fw demodulations to eq. taut.: 43
% Bw demodulations to eq. taut.: 353
% 
% Unit resulting resolution: 3875
% Forward superposition: 29719
% Backward superposition: 22954
% Self superposition: 513
% Equality factoring: 288
% Equality resolution: 104
% 
% Split clauses: 296
% Split components: 599
% SAT solver clauses: 6738
% SAT solver unit clauses: 65
% SAT solver binary clauses: 538
% 
% Sat splits: 296
% Sat splitting refutations: 162
% 
% Memory used [KB]: 119870
% Time elapsed: 10.400 s
% ------------------------------
% ------------------------------
% remaining time: 32 next slice time: 32
dis+11_5_fde=none:nwc=1:sas=minisat:sd=1:ss=axioms:st=5.0:sos=all:sdd=large:sser=off:sfr=on:ssfp=100000:ssfq=2.0:ssnc=none_37 on thm.wordProps
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.wordProps
% SZS output start Proof for thm.wordProps
fof(f3066,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f93,f129,f228,f106,f378,f391,f107,f379,f393,f392,f1382,f1407,f1406,f1740,f1744,f1742,f1782,f1783,f1793,f1794,f1795,f1796,f1797,f1798,f1799,f1800,f1801,f1802,f1894,f1896,f1904,f1905,f1906,f1907,f1908,f1909,f1910,f1911,f1912,f1913,f1914,f1974,f1975,f1810,f1985,f1986,f1987,f1988,f1989,f1990,f1991,f1821,f1992,f1993,f1820,f1994,f1814,f2145,f2146,f2147,f2148,f2149,f2150,f2151,f2152,f2153,f1811,f2154,f2424,f2494,f2486,f1933,f2485,f2484,f2483,f1932,f1931,f2482,f1929,f2481,f1928,f2480,f1927,f2479,f2478,f1926,f2477,f1925,f2476,f1924,f2577,f2662,f1815,f2663,f1816,f2664,f2665,f1817,f2666,f1818,f2667,f2165,f2668,f1812,f2164,f2670,f1822,f2162,f2821,f2897,f2901,f2900,f1921,f2899,f2905,f1922,f2986,f3064])).
fof(f3064,plain,(
  $false | ($spl15 | $spl16)),
  inference(subsumption_resolution,[],[f3063,f1741])).
fof(f1741,plain,(
  s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') != s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK20(sK4,sK1)) | $spl15),
  inference(cnf_transformation,[],[f1741_D])).
fof(f1741_D,plain,(
  s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') != s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK20(sK4,sK1)) <=> ~$spl15),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl15])])).
fof(f3063,plain,(
  s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK20(sK4,sK1)) | $spl16),
  inference(subsumption_resolution,[],[f3052,f84])).
fof(f84,plain,(
  ~p(s(bool,'F_0'))),
  inference(cnf_transformation,[],[f35])).
fof(f35,plain,(
  ~p(s(bool,'F_0'))),
  inference(flattening,[],[f2])).
fof(f2,axiom,(
  ~p(s(bool,'F_0'))),
  file('thm.wordProps.s_frame_key_eq_ind',aHL_FALSITY)).
fof(f3052,plain,(
  p(s(bool,'F_0')) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK20(sK4,sK1)) | $spl16),
  inference(superposition,[],[f2862,f98])).
fof(f98,plain,(
  s(bool,'F_0') = s(bool,happ(s(fun('type.wordSem.stack_frame'(sK1),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK1),bool)),sK2),s('type.wordSem.stack_frame'(sK0),sK3))),s('type.wordSem.stack_frame'(sK1),sK4)))),
  inference(resolution,[],[f68,f79])).
fof(f79,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f59])).
fof(f59,plain,(
  ! [X0] : ((s(bool,'F_0') != s(bool,X0) | ~p(s(bool,X0))) & (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f32])).
fof(f32,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(flattening,[],[f31])).
fof(f31,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(rectify,[],[f10])).
fof(f10,axiom,(
  ! [X19] : (s(bool,'F_0') = s(bool,X19) <=> ~p(s(bool,X19)))),
  file('thm.wordProps.s_frame_key_eq_ind','thm.bool.EQ_CLAUSES|split|2')).
fof(f68,plain,(
  ~p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK1),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK1),bool)),sK2),s('type.wordSem.stack_frame'(sK0),sK3))),s('type.wordSem.stack_frame'(sK1),sK4))))),
  inference(cnf_transformation,[],[f52])).
fof(f52,plain,(
  ! [X15,X16] : p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK1),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK1),bool)),sK2),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X15),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0'))))),s('type.wordSem.stack_frame'(sK1),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK1))),X16),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')))))) & ! [X11,X12,X13,X14] : p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK1),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK1),bool)),sK2),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X11),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),X12))))))),s('type.wordSem.stack_frame'(sK1),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK1))),X13),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),X14)))))))) & ! [X8,X9,X10] : p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK1),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK1),bool)),sK2),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X8),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),X9))))))),s('type.wordSem.stack_frame'(sK1),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK1))),X10),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')))))) & ! [X5,X6,X7] : p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK1),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK1),bool)),sK2),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X5),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0'))))),s('type.wordSem.stack_frame'(sK1),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK1))),X6),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),X7)))))))) & ~p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK1),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK1),bool)),sK2),s('type.wordSem.stack_frame'(sK0),sK3))),s('type.wordSem.stack_frame'(sK1),sK4))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1,sK2,sK3,sK4])],[f51])).
fof(f51,plain,(
  ? [X0,X1,X2] : (! [X15,X16] : p(s(bool,happ(s(fun('type.wordSem.stack_frame'(X1),bool),happ(s(fun('type.wordSem.stack_frame'(X0),fun('type.wordSem.stack_frame'(X1),bool)),X2),s('type.wordSem.stack_frame'(X0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(X0))),X15),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0'))))),s('type.wordSem.stack_frame'(X1),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(X1))),X16),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')))))) & ! [X11,X12,X13,X14] : p(s(bool,happ(s(fun('type.wordSem.stack_frame'(X1),bool),happ(s(fun('type.wordSem.stack_frame'(X0),fun('type.wordSem.stack_frame'(X1),bool)),X2),s('type.wordSem.stack_frame'(X0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(X0))),X11),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),X12))))))),s('type.wordSem.stack_frame'(X1),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(X1))),X13),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),X14)))))))) & ! [X8,X9,X10] : p(s(bool,happ(s(fun('type.wordSem.stack_frame'(X1),bool),happ(s(fun('type.wordSem.stack_frame'(X0),fun('type.wordSem.stack_frame'(X1),bool)),X2),s('type.wordSem.stack_frame'(X0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(X0))),X8),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),X9))))))),s('type.wordSem.stack_frame'(X1),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(X1))),X10),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')))))) & ! [X5,X6,X7] : p(s(bool,happ(s(fun('type.wordSem.stack_frame'(X1),bool),happ(s(fun('type.wordSem.stack_frame'(X0),fun('type.wordSem.stack_frame'(X1),bool)),X2),s('type.wordSem.stack_frame'(X0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(X0))),X5),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0'))))),s('type.wordSem.stack_frame'(X1),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(X1))),X6),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),X7)))))))) & ? [X3,X4] : ~p(s(bool,happ(s(fun('type.wordSem.stack_frame'(X1),bool),happ(s(fun('type.wordSem.stack_frame'(X0),fun('type.wordSem.stack_frame'(X1),bool)),X2),s('type.wordSem.stack_frame'(X0),X3))),s('type.wordSem.stack_frame'(X1),X4)))))),
  inference(rectify,[],[f47])).
fof(f47,plain,(
  ? [X0,X1,X2] : (! [X13,X14] : p(s(bool,happ(s(fun('type.wordSem.stack_frame'(X1),bool),happ(s(fun('type.wordSem.stack_frame'(X0),fun('type.wordSem.stack_frame'(X1),bool)),X2),s('type.wordSem.stack_frame'(X0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(X0))),X13),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0'))))),s('type.wordSem.stack_frame'(X1),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(X1))),X14),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')))))) & ! [X9,X10,X11,X12] : p(s(bool,happ(s(fun('type.wordSem.stack_frame'(X1),bool),happ(s(fun('type.wordSem.stack_frame'(X0),fun('type.wordSem.stack_frame'(X1),bool)),X2),s('type.wordSem.stack_frame'(X0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(X0))),X9),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),X10))))))),s('type.wordSem.stack_frame'(X1),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(X1))),X11),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),X12)))))))) & ! [X6,X7,X8] : p(s(bool,happ(s(fun('type.wordSem.stack_frame'(X1),bool),happ(s(fun('type.wordSem.stack_frame'(X0),fun('type.wordSem.stack_frame'(X1),bool)),X2),s('type.wordSem.stack_frame'(X0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(X0))),X6),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),X7))))))),s('type.wordSem.stack_frame'(X1),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(X1))),X8),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')))))) & ! [X3,X4,X5] : p(s(bool,happ(s(fun('type.wordSem.stack_frame'(X1),bool),happ(s(fun('type.wordSem.stack_frame'(X0),fun('type.wordSem.stack_frame'(X1),bool)),X2),s('type.wordSem.stack_frame'(X0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(X0))),X3),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0'))))),s('type.wordSem.stack_frame'(X1),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(X1))),X4),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),X5)))))))) & ? [X15,X16] : ~p(s(bool,happ(s(fun('type.wordSem.stack_frame'(X1),bool),happ(s(fun('type.wordSem.stack_frame'(X0),fun('type.wordSem.stack_frame'(X1),bool)),X2),s('type.wordSem.stack_frame'(X0),X15))),s('type.wordSem.stack_frame'(X1),X16)))))),
  inference(flattening,[],[f46])).
fof(f46,plain,(
  ? [X0,X1,X2] : ((! [X13,X14] : p(s(bool,happ(s(fun('type.wordSem.stack_frame'(X1),bool),happ(s(fun('type.wordSem.stack_frame'(X0),fun('type.wordSem.stack_frame'(X1),bool)),X2),s('type.wordSem.stack_frame'(X0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(X0))),X13),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0'))))),s('type.wordSem.stack_frame'(X1),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(X1))),X14),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')))))) & ! [X9,X10,X11,X12] : p(s(bool,happ(s(fun('type.wordSem.stack_frame'(X1),bool),happ(s(fun('type.wordSem.stack_frame'(X0),fun('type.wordSem.stack_frame'(X1),bool)),X2),s('type.wordSem.stack_frame'(X0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(X0))),X9),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),X10))))))),s('type.wordSem.stack_frame'(X1),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(X1))),X11),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),X12)))))))) & ! [X6,X7,X8] : p(s(bool,happ(s(fun('type.wordSem.stack_frame'(X1),bool),happ(s(fun('type.wordSem.stack_frame'(X0),fun('type.wordSem.stack_frame'(X1),bool)),X2),s('type.wordSem.stack_frame'(X0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(X0))),X6),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),X7))))))),s('type.wordSem.stack_frame'(X1),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(X1))),X8),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')))))) & ! [X3,X4,X5] : p(s(bool,happ(s(fun('type.wordSem.stack_frame'(X1),bool),happ(s(fun('type.wordSem.stack_frame'(X0),fun('type.wordSem.stack_frame'(X1),bool)),X2),s('type.wordSem.stack_frame'(X0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(X0))),X3),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0'))))),s('type.wordSem.stack_frame'(X1),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(X1))),X4),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),X5))))))))) & ? [X15,X16] : ~p(s(bool,happ(s(fun('type.wordSem.stack_frame'(X1),bool),happ(s(fun('type.wordSem.stack_frame'(X0),fun('type.wordSem.stack_frame'(X1),bool)),X2),s('type.wordSem.stack_frame'(X0),X15))),s('type.wordSem.stack_frame'(X1),X16)))))),
  inference(ennf_transformation,[],[f22])).
fof(f22,plain,(
  ~! [X0,X1,X2] : ((! [X13,X14] : p(s(bool,happ(s(fun('type.wordSem.stack_frame'(X1),bool),happ(s(fun('type.wordSem.stack_frame'(X0),fun('type.wordSem.stack_frame'(X1),bool)),X2),s('type.wordSem.stack_frame'(X0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(X0))),X13),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0'))))),s('type.wordSem.stack_frame'(X1),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(X1))),X14),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')))))) & ! [X9,X10,X11,X12] : p(s(bool,happ(s(fun('type.wordSem.stack_frame'(X1),bool),happ(s(fun('type.wordSem.stack_frame'(X0),fun('type.wordSem.stack_frame'(X1),bool)),X2),s('type.wordSem.stack_frame'(X0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(X0))),X9),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),X10))))))),s('type.wordSem.stack_frame'(X1),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(X1))),X11),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),X12)))))))) & ! [X6,X7,X8] : p(s(bool,happ(s(fun('type.wordSem.stack_frame'(X1),bool),happ(s(fun('type.wordSem.stack_frame'(X0),fun('type.wordSem.stack_frame'(X1),bool)),X2),s('type.wordSem.stack_frame'(X0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(X0))),X6),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),X7))))))),s('type.wordSem.stack_frame'(X1),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(X1))),X8),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')))))) & ! [X3,X4,X5] : p(s(bool,happ(s(fun('type.wordSem.stack_frame'(X1),bool),happ(s(fun('type.wordSem.stack_frame'(X0),fun('type.wordSem.stack_frame'(X1),bool)),X2),s('type.wordSem.stack_frame'(X0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(X0))),X3),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0'))))),s('type.wordSem.stack_frame'(X1),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(X1))),X4),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),X5))))))))) => ! [X15,X16] : p(s(bool,happ(s(fun('type.wordSem.stack_frame'(X1),bool),happ(s(fun('type.wordSem.stack_frame'(X0),fun('type.wordSem.stack_frame'(X1),bool)),X2),s('type.wordSem.stack_frame'(X0),X15))),s('type.wordSem.stack_frame'(X1),X16)))))),
  inference(flattening,[],[f21])).
fof(f21,plain,(
  ~! [X0,X1] : ! [X2] : ((! [X13,X14] : p(s(bool,happ(s(fun('type.wordSem.stack_frame'(X1),bool),happ(s(fun('type.wordSem.stack_frame'(X0),fun('type.wordSem.stack_frame'(X1),bool)),X2),s('type.wordSem.stack_frame'(X0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(X0))),X13),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0'))))),s('type.wordSem.stack_frame'(X1),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(X1))),X14),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')))))) & ! [X9,X10,X11,X12] : p(s(bool,happ(s(fun('type.wordSem.stack_frame'(X1),bool),happ(s(fun('type.wordSem.stack_frame'(X0),fun('type.wordSem.stack_frame'(X1),bool)),X2),s('type.wordSem.stack_frame'(X0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(X0))),X9),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),X10))))))),s('type.wordSem.stack_frame'(X1),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(X1))),X11),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),X12)))))))) & ! [X6,X7,X8] : p(s(bool,happ(s(fun('type.wordSem.stack_frame'(X1),bool),happ(s(fun('type.wordSem.stack_frame'(X0),fun('type.wordSem.stack_frame'(X1),bool)),X2),s('type.wordSem.stack_frame'(X0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(X0))),X6),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),X7))))))),s('type.wordSem.stack_frame'(X1),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(X1))),X8),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')))))) & ! [X3,X4,X5] : p(s(bool,happ(s(fun('type.wordSem.stack_frame'(X1),bool),happ(s(fun('type.wordSem.stack_frame'(X0),fun('type.wordSem.stack_frame'(X1),bool)),X2),s('type.wordSem.stack_frame'(X0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(X0))),X3),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0'))))),s('type.wordSem.stack_frame'(X1),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(X1))),X4),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),X5))))))))) => ! [X15,X16] : p(s(bool,happ(s(fun('type.wordSem.stack_frame'(X1),bool),happ(s(fun('type.wordSem.stack_frame'(X0),fun('type.wordSem.stack_frame'(X1),bool)),X2),s('type.wordSem.stack_frame'(X0),X15))),s('type.wordSem.stack_frame'(X1),X16)))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6,X7] : ! [X8] : ((! [X9,X10] : p(s(bool,happ(s(fun('type.wordSem.stack_frame'(X7),bool),happ(s(fun('type.wordSem.stack_frame'(X6),fun('type.wordSem.stack_frame'(X7),bool)),X8),s('type.wordSem.stack_frame'(X6),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(X6))),X9),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0'))))),s('type.wordSem.stack_frame'(X7),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(X7))),X10),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')))))) & ! [X9,X11,X10,X12] : p(s(bool,happ(s(fun('type.wordSem.stack_frame'(X7),bool),happ(s(fun('type.wordSem.stack_frame'(X6),fun('type.wordSem.stack_frame'(X7),bool)),X8),s('type.wordSem.stack_frame'(X6),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(X6))),X9),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),X11))))))),s('type.wordSem.stack_frame'(X7),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(X7))),X10),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),X12)))))))) & ! [X13,X14,X15] : p(s(bool,happ(s(fun('type.wordSem.stack_frame'(X7),bool),happ(s(fun('type.wordSem.stack_frame'(X6),fun('type.wordSem.stack_frame'(X7),bool)),X8),s('type.wordSem.stack_frame'(X6),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(X6))),X13),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),X14))))))),s('type.wordSem.stack_frame'(X7),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(X7))),X15),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')))))) & ! [X13,X15,X16] : p(s(bool,happ(s(fun('type.wordSem.stack_frame'(X7),bool),happ(s(fun('type.wordSem.stack_frame'(X6),fun('type.wordSem.stack_frame'(X7),bool)),X8),s('type.wordSem.stack_frame'(X6),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(X6))),X13),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0'))))),s('type.wordSem.stack_frame'(X7),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(X7))),X15),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),X16))))))))) => ! [X17,X18] : p(s(bool,happ(s(fun('type.wordSem.stack_frame'(X7),bool),happ(s(fun('type.wordSem.stack_frame'(X6),fun('type.wordSem.stack_frame'(X7),bool)),X8),s('type.wordSem.stack_frame'(X6),X17))),s('type.wordSem.stack_frame'(X7),X18)))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6,X7] : ! [X8] : ((! [X9,X10] : p(s(bool,happ(s(fun('type.wordSem.stack_frame'(X7),bool),happ(s(fun('type.wordSem.stack_frame'(X6),fun('type.wordSem.stack_frame'(X7),bool)),X8),s('type.wordSem.stack_frame'(X6),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(X6))),X9),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0'))))),s('type.wordSem.stack_frame'(X7),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(X7))),X10),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')))))) & ! [X9,X11,X10,X12] : p(s(bool,happ(s(fun('type.wordSem.stack_frame'(X7),bool),happ(s(fun('type.wordSem.stack_frame'(X6),fun('type.wordSem.stack_frame'(X7),bool)),X8),s('type.wordSem.stack_frame'(X6),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(X6))),X9),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),X11))))))),s('type.wordSem.stack_frame'(X7),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(X7))),X10),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),X12)))))))) & ! [X13,X14,X15] : p(s(bool,happ(s(fun('type.wordSem.stack_frame'(X7),bool),happ(s(fun('type.wordSem.stack_frame'(X6),fun('type.wordSem.stack_frame'(X7),bool)),X8),s('type.wordSem.stack_frame'(X6),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(X6))),X13),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),X14))))))),s('type.wordSem.stack_frame'(X7),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(X7))),X15),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')))))) & ! [X13,X15,X16] : p(s(bool,happ(s(fun('type.wordSem.stack_frame'(X7),bool),happ(s(fun('type.wordSem.stack_frame'(X6),fun('type.wordSem.stack_frame'(X7),bool)),X8),s('type.wordSem.stack_frame'(X6),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(X6))),X13),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0'))))),s('type.wordSem.stack_frame'(X7),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(X7))),X15),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),X16))))))))) => ! [X17,X18] : p(s(bool,happ(s(fun('type.wordSem.stack_frame'(X7),bool),happ(s(fun('type.wordSem.stack_frame'(X6),fun('type.wordSem.stack_frame'(X7),bool)),X8),s('type.wordSem.stack_frame'(X6),X17))),s('type.wordSem.stack_frame'(X7),X18)))))),
  file('thm.wordProps.s_frame_key_eq_ind','thm.wordProps.s_frame_key_eq_ind')).
fof(f2862,plain,(
  ( ! [X9] : (p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK1),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK1),bool)),sK2),s('type.wordSem.stack_frame'(sK0),sK3))),s('type.wordSem.stack_frame'(sK1),X9)))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK20(X9,sK1))) ) | $spl16),
  inference(superposition,[],[f727,f2828])).
fof(f2828,plain,(
  s('type.wordSem.stack_frame'(sK0),sK3) = s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK19(sK3,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0'))) | $spl16),
  inference(superposition,[],[f90,f1744])).
fof(f90,plain,(
  ( ! [X0,X1] : (s('type.wordSem.stack_frame'(X0),X1) = s('type.wordSem.stack_frame'(X0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(X0))),sK19(X1,X0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK20(X1,X0))))) )),
  inference(cnf_transformation,[],[f62])).
fof(f62,plain,(
  ! [X0,X1] : s('type.wordSem.stack_frame'(X0),X1) = s('type.wordSem.stack_frame'(X0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(X0))),sK19(X1,X0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK20(X1,X0))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK19,sK20])],[f43])).
fof(f43,plain,(
  ! [X0,X1] : ? [X2,X3] : s('type.wordSem.stack_frame'(X0),X1) = s('type.wordSem.stack_frame'(X0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(X0))),X2),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),X3)))),
  inference(flattening,[],[f42])).
fof(f42,plain,(
  ! [X0] : ! [X1] : ? [X2,X3] : s('type.wordSem.stack_frame'(X0),X1) = s('type.wordSem.stack_frame'(X0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(X0))),X2),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),X3)))),
  inference(rectify,[],[f18])).
fof(f18,axiom,(
  ! [X6] : ! [X28] : ? [X29,X30] : s('type.wordSem.stack_frame'(X6),X28) = s('type.wordSem.stack_frame'(X6),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(X6))),X29),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),X30)))),
  file('thm.wordProps.s_frame_key_eq_ind','thm.wordSem.stack_frame_nchotomy')).
fof(f727,plain,(
  ( ! [X0,X1] : (p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK1),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK1),bool)),sK2),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X1),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0'))))),s('type.wordSem.stack_frame'(sK1),X0)))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK20(X0,sK1))) )),
  inference(superposition,[],[f255,f90])).
fof(f255,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK1),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK1),bool)),sK2),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X1),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0'))))),s('type.wordSem.stack_frame'(sK1),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK1))),X2),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),X0)))))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),X0)) )),
  inference(superposition,[],[f67,f73])).
fof(f73,plain,(
  ( ! [X0,X1] : (s('type.option.option'(X0),X1) = s('type.option.option'(X0),'const.option.SOME_1'(s(X0,sK17(X1,X0)))) | s('type.option.option'(X0),'const.option.NONE_0') = s('type.option.option'(X0),X1)) )),
  inference(cnf_transformation,[],[f55])).
fof(f55,plain,(
  ! [X0,X1] : (s('type.option.option'(X0),'const.option.NONE_0') = s('type.option.option'(X0),X1) | s('type.option.option'(X0),X1) = s('type.option.option'(X0),'const.option.SOME_1'(s(X0,sK17(X1,X0)))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK17])],[f26])).
fof(f26,plain,(
  ! [X0,X1] : (s('type.option.option'(X0),'const.option.NONE_0') = s('type.option.option'(X0),X1) | ? [X2] : s('type.option.option'(X0),X1) = s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X2))))),
  inference(flattening,[],[f25])).
fof(f25,plain,(
  ! [X0] : ! [X1] : (s('type.option.option'(X0),'const.option.NONE_0') = s('type.option.option'(X0),X1) | ? [X2] : s('type.option.option'(X0),X1) = s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X2))))),
  inference(rectify,[],[f12])).
fof(f12,axiom,(
  ! [X6] : ! [X20] : (s('type.option.option'(X6),'const.option.NONE_0') = s('type.option.option'(X6),X20) | ? [X21] : s('type.option.option'(X6),X20) = s('type.option.option'(X6),'const.option.SOME_1'(s(X6,X21))))),
  file('thm.wordProps.s_frame_key_eq_ind','thm.option.option_nchotomy')).
fof(f67,plain,(
  ( ! [X6,X7,X5] : (p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK1),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK1),bool)),sK2),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X5),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0'))))),s('type.wordSem.stack_frame'(sK1),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK1))),X6),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),X7))))))))) )),
  inference(cnf_transformation,[],[f52])).
fof(f2986,plain,(
  $false | ($spl16 | $spl28)),
  inference(subsumption_resolution,[],[f2985,f84])).
fof(f2985,plain,(
  p(s(bool,'F_0')) | ($spl16 | $spl28)),
  inference(forward_demodulation,[],[f2977,f98])).
fof(f2977,plain,(
  p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK1),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK1),bool)),sK2),s('type.wordSem.stack_frame'(sK0),sK3))),s('type.wordSem.stack_frame'(sK1),sK4)))) | ($spl16 | $spl28)),
  inference(superposition,[],[f2739,f2828])).
fof(f2739,plain,(
  ( ! [X7] : (p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK1),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK1),bool)),sK2),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X7),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0'))))),s('type.wordSem.stack_frame'(sK1),sK4))))) ) | $spl28),
  inference(trivial_inequality_removal,[],[f2738])).
fof(f2738,plain,(
  ( ! [X7] : (s(bool,'F_0') != s(bool,'F_0') | p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK1),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK1),bool)),sK2),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X7),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0'))))),s('type.wordSem.stack_frame'(sK1),sK4))))) ) | $spl28),
  inference(superposition,[],[f1816,f77])).
fof(f77,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f58])).
fof(f58,plain,(
  ! [X0] : ((s(bool,'F_0') != s(bool,X0) | ~p(s(bool,X0))) & (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f30])).
fof(f30,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(flattening,[],[f29])).
fof(f29,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(rectify,[],[f11])).
fof(f11,axiom,(
  ! [X19] : (s(bool,'F_0') = s(bool,X19) <=> ~p(s(bool,X19)))),
  file('thm.wordProps.s_frame_key_eq_ind','thm.bool.EQ_CLAUSES|split|3')).
fof(f1922,plain,(
  ( ! [X16] : (p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK1),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK1),bool)),sK2),s('type.wordSem.stack_frame'(sK0),sK3))),s('type.wordSem.stack_frame'(sK1),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK1))),X16),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0'))))))) ) | $spl42),
  inference(cnf_transformation,[],[f1922_D])).
fof(f1922_D,plain,(
  ( ! [X16] : (p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK1),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK1),bool)),sK2),s('type.wordSem.stack_frame'(sK0),sK3))),s('type.wordSem.stack_frame'(sK1),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK1))),X16),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0'))))))) ) <=> ~$spl42),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl42])])).
fof(f2905,plain,(
  s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),sK17(sK20('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK19(sK3,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0),'type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))))) | $spl68),
  inference(cnf_transformation,[],[f2905_D])).
fof(f2905_D,plain,(
  s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),sK17(sK20('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK19(sK3,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0),'type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))))) <=> ~$spl68),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl68])])).
fof(f2899,plain,(
  ( ! [X50] : (s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),sK17(sK20('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK19(sK3,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0),'type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))))) | p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK1),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK1),bool)),sK2),s('type.wordSem.stack_frame'(sK0),sK3))),s('type.wordSem.stack_frame'(sK1),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK1))),X50),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0'))))))) ) | ($spl16 | $spl44)),
  inference(forward_demodulation,[],[f2898,f1924])).
fof(f2898,plain,(
  ( ! [X50] : (p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK1),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK1),bool)),sK2),s('type.wordSem.stack_frame'(sK0),sK3))),s('type.wordSem.stack_frame'(sK1),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK1))),X50),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')))))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK20('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK19(sK3,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0)) = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),sK17(sK20('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK19(sK3,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0),'type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))))))) ) | ($spl16 | $spl44)),
  inference(forward_demodulation,[],[f2886,f1924])).
fof(f2886,plain,(
  ( ! [X50] : (p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK1),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK1),bool)),sK2),s('type.wordSem.stack_frame'(sK0),sK3))),s('type.wordSem.stack_frame'(sK1),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK1))),X50),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK20('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK19(sK3,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0))))))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK20('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK19(sK3,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0)) = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),sK17(sK20('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK19(sK3,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0),'type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))))))) ) | $spl16),
  inference(superposition,[],[f1253,f2828])).
fof(f1253,plain,(
  ( ! [X0,X1] : (p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK1),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK1),bool)),sK2),s('type.wordSem.stack_frame'(sK0),X0))),s('type.wordSem.stack_frame'(sK1),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK1))),X1),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK20(X0,sK0))))))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK20(X0,sK0)) = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),sK17(sK20(X0,sK0),'type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))))))) )),
  inference(superposition,[],[f119,f90])).
fof(f119,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK1),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK1),bool)),sK2),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X1),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),X0))))),s('type.wordSem.stack_frame'(sK1),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK1))),X2),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),X0)))))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),X0) = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),sK17(X0,'type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))))))) )),
  inference(superposition,[],[f64,f73])).
fof(f64,plain,(
  ( ! [X15,X16] : (p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK1),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK1),bool)),sK2),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X15),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0'))))),s('type.wordSem.stack_frame'(sK1),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK1))),X16),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0'))))))) )),
  inference(cnf_transformation,[],[f52])).
fof(f1921,plain,(
  ( ! [X14,X13] : (p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK1),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK1),bool)),sK2),s('type.wordSem.stack_frame'(sK0),sK3))),s('type.wordSem.stack_frame'(sK1),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK1))),X13),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),X14))))))))) ) | $spl40),
  inference(cnf_transformation,[],[f1921_D])).
fof(f1921_D,plain,(
  ( ! [X14,X13] : (p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK1),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK1),bool)),sK2),s('type.wordSem.stack_frame'(sK0),sK3))),s('type.wordSem.stack_frame'(sK1),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK1))),X13),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),X14))))))))) ) <=> ~$spl40),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl40])])).
fof(f2900,plain,(
  ( ! [X52,X51] : (s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),sK17(sK20('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK19(sK3,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0),'type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))))) | p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK1),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK1),bool)),sK2),s('type.wordSem.stack_frame'(sK0),sK3))),s('type.wordSem.stack_frame'(sK1),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK1))),X51),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),X52))))))))) ) | ($spl16 | $spl44)),
  inference(forward_demodulation,[],[f2887,f1924])).
fof(f2887,plain,(
  ( ! [X52,X51] : (p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK1),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK1),bool)),sK2),s('type.wordSem.stack_frame'(sK0),sK3))),s('type.wordSem.stack_frame'(sK1),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK1))),X51),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),X52)))))))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK20('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK19(sK3,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0)) = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),sK17(sK20('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK19(sK3,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0),'type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))))))) ) | $spl16),
  inference(superposition,[],[f1470,f2828])).
fof(f1470,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK1),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK1),bool)),sK2),s('type.wordSem.stack_frame'(sK0),X0))),s('type.wordSem.stack_frame'(sK1),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK1))),X1),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),X2)))))))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK20(X0,sK0)) = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),sK17(sK20(X0,sK0),'type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))))))) )),
  inference(superposition,[],[f246,f90])).
fof(f246,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK1),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK1),bool)),sK2),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X1),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),X0))))),s('type.wordSem.stack_frame'(sK1),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK1))),X2),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),X3)))))))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),X0) = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),sK17(X0,'type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))))))) )),
  inference(superposition,[],[f67,f73])).
fof(f2901,plain,(
  ( ! [X53] : (s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),sK17(sK20('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK19(sK3,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0),'type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))))) | p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK1),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK1),bool)),sK2),s('type.wordSem.stack_frame'(sK0),sK3))),s('type.wordSem.stack_frame'(sK1),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK1))),X53),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0'))))))) ) | ($spl16 | $spl44)),
  inference(forward_demodulation,[],[f2888,f1924])).
fof(f2888,plain,(
  ( ! [X53] : (p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK1),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK1),bool)),sK2),s('type.wordSem.stack_frame'(sK0),sK3))),s('type.wordSem.stack_frame'(sK1),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK1))),X53),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')))))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK20('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK19(sK3,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0)) = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),sK17(sK20('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK19(sK3,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0),'type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))))))) ) | $spl16),
  inference(superposition,[],[f1552,f2828])).
fof(f1552,plain,(
  ( ! [X0,X1] : (p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK1),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK1),bool)),sK2),s('type.wordSem.stack_frame'(sK0),X0))),s('type.wordSem.stack_frame'(sK1),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK1))),X1),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')))))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK20(X0,sK0)) = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),sK17(sK20(X0,sK0),'type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))))))) )),
  inference(duplicate_literal_removal,[],[f1542])).
fof(f1542,plain,(
  ( ! [X0,X1] : (p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK1),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK1),bool)),sK2),s('type.wordSem.stack_frame'(sK0),X0))),s('type.wordSem.stack_frame'(sK1),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK1))),X1),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')))))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK20(X0,sK0)) = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),sK17(sK20(X0,sK0),'type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK20(X0,sK0)) = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),sK17(sK20(X0,sK0),'type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))))))) )),
  inference(superposition,[],[f1253,f73])).
fof(f2897,plain,(
  $false | ($spl14 | $spl16)),
  inference(subsumption_resolution,[],[f2866,f96])).
fof(f96,plain,(
  s(bool,'T_0') != s(bool,happ(s(fun('type.wordSem.stack_frame'(sK1),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK1),bool)),sK2),s('type.wordSem.stack_frame'(sK0),sK3))),s('type.wordSem.stack_frame'(sK1),sK4)))),
  inference(resolution,[],[f68,f82])).
fof(f82,plain,(
  ( ! [X0] : (p(s(bool,X0)) | s(bool,'T_0') != s(bool,X0)) )),
  inference(cnf_transformation,[],[f61])).
fof(f61,plain,(
  ! [X0] : ((s(bool,'T_0') != s(bool,X0) | p(s(bool,X0))) & (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f34])).
fof(f34,plain,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) <=> p(s(bool,X0)))),
  inference(rectify,[],[f8])).
fof(f8,axiom,(
  ! [X19] : (s(bool,'T_0') = s(bool,X19) <=> p(s(bool,X19)))),
  file('thm.wordProps.s_frame_key_eq_ind','thm.bool.EQ_CLAUSES|split|0')).
fof(f2866,plain,(
  s(bool,'T_0') = s(bool,happ(s(fun('type.wordSem.stack_frame'(sK1),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK1),bool)),sK2),s('type.wordSem.stack_frame'(sK0),sK3))),s('type.wordSem.stack_frame'(sK1),sK4))) | ($spl14 | $spl16)),
  inference(superposition,[],[f1965,f2828])).
fof(f1965,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,happ(s(fun('type.wordSem.stack_frame'(sK1),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK1),bool)),sK2),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X0),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0'))))),s('type.wordSem.stack_frame'(sK1),sK4)))) ) | $spl14),
  inference(superposition,[],[f109,f1937])).
fof(f1937,plain,(
  s('type.wordSem.stack_frame'(sK1),sK4) = s('type.wordSem.stack_frame'(sK1),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK1))),sK19(sK4,sK1)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0'))) | $spl14),
  inference(superposition,[],[f90,f1742])).
fof(f109,plain,(
  ( ! [X0,X1] : (s(bool,'T_0') = s(bool,happ(s(fun('type.wordSem.stack_frame'(sK1),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK1),bool)),sK2),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X0),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0'))))),s('type.wordSem.stack_frame'(sK1),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK1))),X1),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')))))) )),
  inference(resolution,[],[f64,f83])).
fof(f83,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f61])).
fof(f2821,plain,(
  $false | ($spl14 | $spl17)),
  inference(subsumption_resolution,[],[f2820,f1743])).
fof(f1743,plain,(
  s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') != s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK20(sK3,sK0)) | $spl17),
  inference(cnf_transformation,[],[f1743_D])).
fof(f1743_D,plain,(
  s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') != s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK20(sK3,sK0)) <=> ~$spl17),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl17])])).
fof(f2820,plain,(
  s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK20(sK3,sK0)) | $spl14),
  inference(subsumption_resolution,[],[f2810,f84])).
fof(f2810,plain,(
  p(s(bool,'F_0')) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK20(sK3,sK0)) | $spl14),
  inference(superposition,[],[f1970,f98])).
fof(f1970,plain,(
  ( ! [X9] : (p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK1),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK1),bool)),sK2),s('type.wordSem.stack_frame'(sK0),X9))),s('type.wordSem.stack_frame'(sK1),sK4)))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK20(X9,sK0))) ) | $spl14),
  inference(superposition,[],[f606,f1937])).
fof(f606,plain,(
  ( ! [X0,X1] : (p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK1),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK1),bool)),sK2),s('type.wordSem.stack_frame'(sK0),X0))),s('type.wordSem.stack_frame'(sK1),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK1))),X1),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')))))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK20(X0,sK0))) )),
  inference(superposition,[],[f179,f90])).
fof(f179,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK1),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK1),bool)),sK2),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X1),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),X0))))),s('type.wordSem.stack_frame'(sK1),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK1))),X2),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')))))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),X0)) )),
  inference(superposition,[],[f66,f73])).
fof(f66,plain,(
  ( ! [X10,X8,X9] : (p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK1),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK1),bool)),sK2),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X8),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),X9))))))),s('type.wordSem.stack_frame'(sK1),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK1))),X10),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0'))))))) )),
  inference(cnf_transformation,[],[f52])).
fof(f2162,plain,(
  s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK20('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK1))),sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK1))),sK19(sK4,sK1)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK1)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK1)) | $spl62),
  inference(cnf_transformation,[],[f2162_D])).
fof(f2162_D,plain,(
  s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK20('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK1))),sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK1))),sK19(sK4,sK1)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK1)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK1)) <=> ~$spl62),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl62])])).
fof(f1822,plain,(
  ( ! [X49] : (p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK1),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK1),bool)),sK2),s('type.wordSem.stack_frame'(sK0),X49))),s('type.wordSem.stack_frame'(sK1),sK4)))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK20(X49,sK0))) ) | $spl38),
  inference(cnf_transformation,[],[f1822_D])).
fof(f1822_D,plain,(
  ( ! [X49] : (p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK1),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK1),bool)),sK2),s('type.wordSem.stack_frame'(sK0),X49))),s('type.wordSem.stack_frame'(sK1),sK4)))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK20(X49,sK0))) ) <=> ~$spl38),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl38])])).
fof(f2670,plain,(
  ( ! [X51] : (p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK1),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK1),bool)),sK2),s('type.wordSem.stack_frame'(sK0),X51))),s('type.wordSem.stack_frame'(sK1),sK4)))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK20(X51,sK0)) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK20('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK1))),sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK1))),sK19(sK4,sK1)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK1)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK1))) ) | ($spl14 | $spl24)),
  inference(superposition,[],[f1684,f2523])).
fof(f2523,plain,(
  s('type.wordSem.stack_frame'(sK1),sK4) = s('type.wordSem.stack_frame'(sK1),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK1))),sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK1))),sK19(sK4,sK1)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK1)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0'))) | ($spl14 | $spl24)),
  inference(forward_demodulation,[],[f2502,f1937])).
fof(f2502,plain,(
  s('type.wordSem.stack_frame'(sK1),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK1))),sK19(sK4,sK1)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0'))) = s('type.wordSem.stack_frame'(sK1),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK1))),sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK1))),sK19(sK4,sK1)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK1)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0'))) | $spl24),
  inference(superposition,[],[f90,f1814])).
fof(f1684,plain,(
  ( ! [X0,X1] : (p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK1),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK1),bool)),sK2),s('type.wordSem.stack_frame'(sK0),X1))),s('type.wordSem.stack_frame'(sK1),X0)))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK20(X1,sK0)) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK20(X0,sK1))) )),
  inference(superposition,[],[f1004,f90])).
fof(f1004,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK1),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK1),bool)),sK2),s('type.wordSem.stack_frame'(sK0),X1))),s('type.wordSem.stack_frame'(sK1),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK1))),X2),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),X0)))))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK20(X1,sK0)) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),X0)) )),
  inference(superposition,[],[f968,f73])).
fof(f968,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK1),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK1),bool)),sK2),s('type.wordSem.stack_frame'(sK0),X0))),s('type.wordSem.stack_frame'(sK1),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK1))),X1),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),X2)))))))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK20(X0,sK0))) )),
  inference(superposition,[],[f358,f90])).
fof(f358,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK1),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK1),bool)),sK2),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X1),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),X0))))),s('type.wordSem.stack_frame'(sK1),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK1))),X2),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),X3)))))))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),X0)) )),
  inference(superposition,[],[f65,f73])).
fof(f65,plain,(
  ( ! [X14,X12,X13,X11] : (p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK1),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK1),bool)),sK2),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X11),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),X12))))))),s('type.wordSem.stack_frame'(sK1),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK1))),X13),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),X14))))))))) )),
  inference(cnf_transformation,[],[f52])).
fof(f2164,plain,(
  s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK20('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK1))),sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK1))),sK19(sK4,sK1)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK1)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK1)) = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),sK17(sK20('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK1))),sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK1))),sK19(sK4,sK1)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK1)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK1),'type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))))) | $spl64),
  inference(cnf_transformation,[],[f2164_D])).
fof(f2164_D,plain,(
  s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK20('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK1))),sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK1))),sK19(sK4,sK1)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK1)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK1)) = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),sK17(sK20('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK1))),sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK1))),sK19(sK4,sK1)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK1)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK1),'type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))))) <=> ~$spl64),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl64])])).
fof(f1812,plain,(
  ( ! [X14,X15] : (p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK1),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK1),bool)),sK2),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X14),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),X15))))))),s('type.wordSem.stack_frame'(sK1),sK4))))) ) | $spl22),
  inference(cnf_transformation,[],[f1812_D])).
fof(f1812_D,plain,(
  ( ! [X14,X15] : (p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK1),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK1),bool)),sK2),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X14),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),X15))))))),s('type.wordSem.stack_frame'(sK1),sK4))))) ) <=> ~$spl22),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl22])])).
fof(f2668,plain,(
  ( ! [X48,X49] : (p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK1),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK1),bool)),sK2),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X48),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),X49))))))),s('type.wordSem.stack_frame'(sK1),sK4)))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK20('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK1))),sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK1))),sK19(sK4,sK1)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK1)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK1)) = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),sK17(sK20('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK1))),sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK1))),sK19(sK4,sK1)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK1)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK1),'type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))))))) ) | ($spl14 | $spl24)),
  inference(superposition,[],[f1392,f2523])).
fof(f1392,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK1),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK1),bool)),sK2),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X1),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),X2))))))),s('type.wordSem.stack_frame'(sK1),X0)))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK20(X0,sK1)) = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),sK17(sK20(X0,sK1),'type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))))))) )),
  inference(superposition,[],[f184,f90])).
fof(f184,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK1),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK1),bool)),sK2),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X1),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),X2))))))),s('type.wordSem.stack_frame'(sK1),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK1))),X3),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),X0)))))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),X0) = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),sK17(X0,'type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))))))) )),
  inference(superposition,[],[f66,f73])).
fof(f2165,plain,(
  ( ! [X45] : (p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK1),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK1),bool)),sK2),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X45),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK20('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK1))),sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK1))),sK19(sK4,sK1)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK1)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK1)))))),s('type.wordSem.stack_frame'(sK1),sK4))))) ) | $spl66),
  inference(cnf_transformation,[],[f2165_D])).
fof(f2165_D,plain,(
  ( ! [X45] : (p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK1),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK1),bool)),sK2),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X45),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK20('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK1))),sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK1))),sK19(sK4,sK1)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK1)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK1)))))),s('type.wordSem.stack_frame'(sK1),sK4))))) ) <=> ~$spl66),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl66])])).
fof(f2667,plain,(
  ( ! [X47] : (p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK1),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK1),bool)),sK2),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X47),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK20('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK1))),sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK1))),sK19(sK4,sK1)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK1)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK1)))))),s('type.wordSem.stack_frame'(sK1),sK4)))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK20('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK1))),sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK1))),sK19(sK4,sK1)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK1)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK1)) = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),sK17(sK20('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK1))),sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK1))),sK19(sK4,sK1)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK1)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK1),'type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))))))) ) | ($spl14 | $spl24)),
  inference(superposition,[],[f1263,f2523])).
fof(f1263,plain,(
  ( ! [X0,X1] : (p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK1),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK1),bool)),sK2),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X1),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK20(X0,sK1)))))),s('type.wordSem.stack_frame'(sK1),X0)))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK20(X0,sK1)) = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),sK17(sK20(X0,sK1),'type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))))))) )),
  inference(superposition,[],[f119,f90])).
fof(f1818,plain,(
  ( ! [X43,X44] : (s(bool,'F_0') != s(bool,happ(s(fun('type.wordSem.stack_frame'(sK1),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK1),bool)),sK2),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X43),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),X44))))))),s('type.wordSem.stack_frame'(sK1),sK4)))) ) | $spl32),
  inference(cnf_transformation,[],[f1818_D])).
fof(f1818_D,plain,(
  ( ! [X43,X44] : (s(bool,'F_0') != s(bool,happ(s(fun('type.wordSem.stack_frame'(sK1),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK1),bool)),sK2),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X43),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),X44))))))),s('type.wordSem.stack_frame'(sK1),sK4)))) ) <=> ~$spl32),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl32])])).
fof(f2666,plain,(
  ( ! [X45,X46] : (s(bool,'F_0') != s(bool,happ(s(fun('type.wordSem.stack_frame'(sK1),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK1),bool)),sK2),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X45),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),X46))))))),s('type.wordSem.stack_frame'(sK1),sK4))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK20('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK1))),sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK1))),sK19(sK4,sK1)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK1)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK1))) ) | ($spl14 | $spl24)),
  inference(superposition,[],[f1132,f2523])).
fof(f1132,plain,(
  ( ! [X12,X10,X11] : (s(bool,'F_0') != s(bool,happ(s(fun('type.wordSem.stack_frame'(sK1),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK1),bool)),sK2),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X11),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),X12))))))),s('type.wordSem.stack_frame'(sK1),X10))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK20(X10,sK1))) )),
  inference(resolution,[],[f1115,f78])).
fof(f78,plain,(
  ( ! [X0] : (~p(s(bool,X0)) | s(bool,'F_0') != s(bool,X0)) )),
  inference(cnf_transformation,[],[f59])).
fof(f1115,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK1),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK1),bool)),sK2),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X1),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),X2))))))),s('type.wordSem.stack_frame'(sK1),X0)))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK20(X0,sK1))) )),
  inference(superposition,[],[f367,f90])).
fof(f367,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK1),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK1),bool)),sK2),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X1),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),X2))))))),s('type.wordSem.stack_frame'(sK1),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK1))),X3),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),X0)))))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),X0)) )),
  inference(superposition,[],[f65,f73])).
fof(f1817,plain,(
  ( ! [X41,X42] : (s(bool,'T_0') = s(bool,happ(s(fun('type.wordSem.stack_frame'(sK1),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK1),bool)),sK2),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X41),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),X42))))))),s('type.wordSem.stack_frame'(sK1),sK4)))) ) | $spl30),
  inference(cnf_transformation,[],[f1817_D])).
fof(f1817_D,plain,(
  ( ! [X41,X42] : (s(bool,'T_0') = s(bool,happ(s(fun('type.wordSem.stack_frame'(sK1),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK1),bool)),sK2),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X41),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),X42))))))),s('type.wordSem.stack_frame'(sK1),sK4)))) ) <=> ~$spl30),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl30])])).
fof(f2665,plain,(
  ( ! [X43,X44] : (s(bool,'T_0') = s(bool,happ(s(fun('type.wordSem.stack_frame'(sK1),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK1),bool)),sK2),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X43),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),X44))))))),s('type.wordSem.stack_frame'(sK1),sK4))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK20('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK1))),sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK1))),sK19(sK4,sK1)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK1)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK1))) ) | ($spl14 | $spl24)),
  inference(superposition,[],[f1130,f2523])).
fof(f1130,plain,(
  ( ! [X6,X4,X5] : (s(bool,'T_0') = s(bool,happ(s(fun('type.wordSem.stack_frame'(sK1),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK1),bool)),sK2),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X5),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),X6))))))),s('type.wordSem.stack_frame'(sK1),X4))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK20(X4,sK1))) )),
  inference(resolution,[],[f1115,f83])).
fof(f2664,plain,(
  ( ! [X41,X42] : (p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK1),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK1),bool)),sK2),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X41),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),X42))))))),s('type.wordSem.stack_frame'(sK1),sK4)))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK20('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK1))),sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK1))),sK19(sK4,sK1)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK1)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK1))) ) | ($spl14 | $spl24)),
  inference(superposition,[],[f1115,f2523])).
fof(f1816,plain,(
  ( ! [X38] : (s(bool,'F_0') != s(bool,happ(s(fun('type.wordSem.stack_frame'(sK1),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK1),bool)),sK2),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X38),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0'))))),s('type.wordSem.stack_frame'(sK1),sK4)))) ) | $spl28),
  inference(cnf_transformation,[],[f1816_D])).
fof(f1816_D,plain,(
  ( ! [X38] : (s(bool,'F_0') != s(bool,happ(s(fun('type.wordSem.stack_frame'(sK1),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK1),bool)),sK2),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X38),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0'))))),s('type.wordSem.stack_frame'(sK1),sK4)))) ) <=> ~$spl28),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl28])])).
fof(f2663,plain,(
  ( ! [X40] : (s(bool,'F_0') != s(bool,happ(s(fun('type.wordSem.stack_frame'(sK1),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK1),bool)),sK2),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X40),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0'))))),s('type.wordSem.stack_frame'(sK1),sK4))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK20('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK1))),sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK1))),sK19(sK4,sK1)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK1)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK1))) ) | ($spl14 | $spl24)),
  inference(superposition,[],[f742,f2523])).
fof(f742,plain,(
  ( ! [X8,X7] : (s(bool,'F_0') != s(bool,happ(s(fun('type.wordSem.stack_frame'(sK1),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK1),bool)),sK2),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X8),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0'))))),s('type.wordSem.stack_frame'(sK1),X7))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK20(X7,sK1))) )),
  inference(resolution,[],[f727,f78])).
fof(f1815,plain,(
  ( ! [X37] : (s(bool,'T_0') = s(bool,happ(s(fun('type.wordSem.stack_frame'(sK1),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK1),bool)),sK2),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X37),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0'))))),s('type.wordSem.stack_frame'(sK1),sK4)))) ) | $spl26),
  inference(cnf_transformation,[],[f1815_D])).
fof(f1815_D,plain,(
  ( ! [X37] : (s(bool,'T_0') = s(bool,happ(s(fun('type.wordSem.stack_frame'(sK1),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK1),bool)),sK2),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X37),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0'))))),s('type.wordSem.stack_frame'(sK1),sK4)))) ) <=> ~$spl26),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl26])])).
fof(f2662,plain,(
  ( ! [X39] : (s(bool,'T_0') = s(bool,happ(s(fun('type.wordSem.stack_frame'(sK1),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK1),bool)),sK2),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X39),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0'))))),s('type.wordSem.stack_frame'(sK1),sK4))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK20('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK1))),sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK1))),sK19(sK4,sK1)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK1)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK1))) ) | ($spl14 | $spl24)),
  inference(superposition,[],[f740,f2523])).
fof(f740,plain,(
  ( ! [X4,X3] : (s(bool,'T_0') = s(bool,happ(s(fun('type.wordSem.stack_frame'(sK1),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK1),bool)),sK2),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X4),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0'))))),s('type.wordSem.stack_frame'(sK1),X3))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK20(X3,sK1))) )),
  inference(resolution,[],[f727,f83])).
fof(f2577,plain,(
  $false | ($spl16 | $spl20)),
  inference(subsumption_resolution,[],[f2576,f84])).
fof(f2576,plain,(
  p(s(bool,'F_0')) | ($spl16 | $spl20)),
  inference(forward_demodulation,[],[f2568,f98])).
fof(f2568,plain,(
  p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK1),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK1),bool)),sK2),s('type.wordSem.stack_frame'(sK0),sK3))),s('type.wordSem.stack_frame'(sK1),sK4)))) | ($spl16 | $spl20)),
  inference(superposition,[],[f1811,f2427])).
fof(f2427,plain,(
  s('type.wordSem.stack_frame'(sK0),sK3) = s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK19(sK3,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0'))) | $spl16),
  inference(superposition,[],[f90,f1744])).
fof(f1924,plain,(
  s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK20('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK19(sK3,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0)) | $spl44),
  inference(cnf_transformation,[],[f1924_D])).
fof(f1924_D,plain,(
  s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK20('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK19(sK3,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0)) <=> ~$spl44),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl44])])).
fof(f2476,plain,(
  ( ! [X37] : (p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK1),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK1),bool)),sK2),s('type.wordSem.stack_frame'(sK0),sK3))),s('type.wordSem.stack_frame'(sK1),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK1))),X37),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')))))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK20('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK19(sK3,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0))) ) | $spl16),
  inference(superposition,[],[f606,f2427])).
fof(f1925,plain,(
  ( ! [X36] : (s(bool,'T_0') = s(bool,happ(s(fun('type.wordSem.stack_frame'(sK1),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK1),bool)),sK2),s('type.wordSem.stack_frame'(sK0),sK3))),s('type.wordSem.stack_frame'(sK1),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK1))),X36),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')))))) ) | $spl46),
  inference(cnf_transformation,[],[f1925_D])).
fof(f1925_D,plain,(
  ( ! [X36] : (s(bool,'T_0') = s(bool,happ(s(fun('type.wordSem.stack_frame'(sK1),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK1),bool)),sK2),s('type.wordSem.stack_frame'(sK0),sK3))),s('type.wordSem.stack_frame'(sK1),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK1))),X36),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')))))) ) <=> ~$spl46),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl46])])).
fof(f2477,plain,(
  ( ! [X38] : (s(bool,'T_0') = s(bool,happ(s(fun('type.wordSem.stack_frame'(sK1),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK1),bool)),sK2),s('type.wordSem.stack_frame'(sK0),sK3))),s('type.wordSem.stack_frame'(sK1),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK1))),X38),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0'))))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK20('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK19(sK3,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0))) ) | $spl16),
  inference(superposition,[],[f622,f2427])).
fof(f622,plain,(
  ( ! [X0,X1] : (s(bool,'T_0') = s(bool,happ(s(fun('type.wordSem.stack_frame'(sK1),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK1),bool)),sK2),s('type.wordSem.stack_frame'(sK0),X0))),s('type.wordSem.stack_frame'(sK1),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK1))),X1),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0'))))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK20(X0,sK0))) )),
  inference(resolution,[],[f606,f83])).
fof(f1926,plain,(
  ( ! [X37] : (s(bool,'F_0') != s(bool,happ(s(fun('type.wordSem.stack_frame'(sK1),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK1),bool)),sK2),s('type.wordSem.stack_frame'(sK0),sK3))),s('type.wordSem.stack_frame'(sK1),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK1))),X37),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')))))) ) | $spl48),
  inference(cnf_transformation,[],[f1926_D])).
fof(f1926_D,plain,(
  ( ! [X37] : (s(bool,'F_0') != s(bool,happ(s(fun('type.wordSem.stack_frame'(sK1),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK1),bool)),sK2),s('type.wordSem.stack_frame'(sK0),sK3))),s('type.wordSem.stack_frame'(sK1),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK1))),X37),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')))))) ) <=> ~$spl48),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl48])])).
fof(f2478,plain,(
  ( ! [X39] : (s(bool,'F_0') != s(bool,happ(s(fun('type.wordSem.stack_frame'(sK1),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK1),bool)),sK2),s('type.wordSem.stack_frame'(sK0),sK3))),s('type.wordSem.stack_frame'(sK1),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK1))),X39),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0'))))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK20('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK19(sK3,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0))) ) | $spl16),
  inference(superposition,[],[f624,f2427])).
fof(f624,plain,(
  ( ! [X4,X5] : (s(bool,'F_0') != s(bool,happ(s(fun('type.wordSem.stack_frame'(sK1),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK1),bool)),sK2),s('type.wordSem.stack_frame'(sK0),X4))),s('type.wordSem.stack_frame'(sK1),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK1))),X5),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0'))))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK20(X4,sK0))) )),
  inference(resolution,[],[f606,f78])).
fof(f2479,plain,(
  ( ! [X41,X40] : (p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK1),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK1),bool)),sK2),s('type.wordSem.stack_frame'(sK0),sK3))),s('type.wordSem.stack_frame'(sK1),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK1))),X40),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),X41)))))))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK20('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK19(sK3,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0))) ) | $spl16),
  inference(superposition,[],[f968,f2427])).
fof(f1927,plain,(
  ( ! [X41,X40] : (s(bool,'T_0') = s(bool,happ(s(fun('type.wordSem.stack_frame'(sK1),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK1),bool)),sK2),s('type.wordSem.stack_frame'(sK0),sK3))),s('type.wordSem.stack_frame'(sK1),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK1))),X40),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),X41)))))))) ) | $spl50),
  inference(cnf_transformation,[],[f1927_D])).
fof(f1927_D,plain,(
  ( ! [X41,X40] : (s(bool,'T_0') = s(bool,happ(s(fun('type.wordSem.stack_frame'(sK1),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK1),bool)),sK2),s('type.wordSem.stack_frame'(sK0),sK3))),s('type.wordSem.stack_frame'(sK1),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK1))),X40),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),X41)))))))) ) <=> ~$spl50),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl50])])).
fof(f2480,plain,(
  ( ! [X43,X42] : (s(bool,'T_0') = s(bool,happ(s(fun('type.wordSem.stack_frame'(sK1),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK1),bool)),sK2),s('type.wordSem.stack_frame'(sK0),sK3))),s('type.wordSem.stack_frame'(sK1),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK1))),X42),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),X43))))))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK20('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK19(sK3,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0))) ) | $spl16),
  inference(superposition,[],[f989,f2427])).
fof(f989,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,happ(s(fun('type.wordSem.stack_frame'(sK1),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK1),bool)),sK2),s('type.wordSem.stack_frame'(sK0),X0))),s('type.wordSem.stack_frame'(sK1),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK1))),X1),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),X2))))))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK20(X0,sK0))) )),
  inference(resolution,[],[f968,f83])).
fof(f1928,plain,(
  ( ! [X43,X42] : (s(bool,'F_0') != s(bool,happ(s(fun('type.wordSem.stack_frame'(sK1),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK1),bool)),sK2),s('type.wordSem.stack_frame'(sK0),sK3))),s('type.wordSem.stack_frame'(sK1),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK1))),X42),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),X43)))))))) ) | $spl52),
  inference(cnf_transformation,[],[f1928_D])).
fof(f1928_D,plain,(
  ( ! [X43,X42] : (s(bool,'F_0') != s(bool,happ(s(fun('type.wordSem.stack_frame'(sK1),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK1),bool)),sK2),s('type.wordSem.stack_frame'(sK0),sK3))),s('type.wordSem.stack_frame'(sK1),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK1))),X42),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),X43)))))))) ) <=> ~$spl52),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl52])])).
fof(f2481,plain,(
  ( ! [X45,X44] : (s(bool,'F_0') != s(bool,happ(s(fun('type.wordSem.stack_frame'(sK1),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK1),bool)),sK2),s('type.wordSem.stack_frame'(sK0),sK3))),s('type.wordSem.stack_frame'(sK1),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK1))),X44),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),X45))))))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK20('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK19(sK3,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0))) ) | $spl16),
  inference(superposition,[],[f991,f2427])).
fof(f991,plain,(
  ( ! [X6,X8,X7] : (s(bool,'F_0') != s(bool,happ(s(fun('type.wordSem.stack_frame'(sK1),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK1),bool)),sK2),s('type.wordSem.stack_frame'(sK0),X6))),s('type.wordSem.stack_frame'(sK1),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK1))),X7),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),X8))))))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK20(X6,sK0))) )),
  inference(resolution,[],[f968,f78])).
fof(f1929,plain,(
  ( ! [X45,X44] : (p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK1),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK1),bool)),sK2),s('type.wordSem.stack_frame'(sK0),sK3))),s('type.wordSem.stack_frame'(sK1),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK1))),X44),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),X45)))))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),X45)) ) | $spl54),
  inference(cnf_transformation,[],[f1929_D])).
fof(f1929_D,plain,(
  ( ! [X45,X44] : (p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK1),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK1),bool)),sK2),s('type.wordSem.stack_frame'(sK0),sK3))),s('type.wordSem.stack_frame'(sK1),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK1))),X44),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),X45)))))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),X45)) ) <=> ~$spl54),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl54])])).
fof(f2482,plain,(
  ( ! [X47,X46] : (p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK1),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK1),bool)),sK2),s('type.wordSem.stack_frame'(sK0),sK3))),s('type.wordSem.stack_frame'(sK1),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK1))),X46),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),X47)))))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK20('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK19(sK3,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0)) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),X47)) ) | $spl16),
  inference(superposition,[],[f1004,f2427])).
fof(f1931,plain,(
  s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK20('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK19(sK3,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0)) = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),sK17(sK20('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK19(sK3,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0),'type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))))) | $spl56),
  inference(cnf_transformation,[],[f1931_D])).
fof(f1931_D,plain,(
  s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK20('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK19(sK3,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0)) = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),sK17(sK20('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK19(sK3,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0),'type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))))) <=> ~$spl56),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl56])])).
fof(f1932,plain,(
  ( ! [X46] : (p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK1),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK1),bool)),sK2),s('type.wordSem.stack_frame'(sK0),sK3))),s('type.wordSem.stack_frame'(sK1),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK1))),X46),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK20('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK19(sK3,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0)))))))) ) | $spl58),
  inference(cnf_transformation,[],[f1932_D])).
fof(f1932_D,plain,(
  ( ! [X46] : (p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK1),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK1),bool)),sK2),s('type.wordSem.stack_frame'(sK0),sK3))),s('type.wordSem.stack_frame'(sK1),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK1))),X46),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK20('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK19(sK3,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0)))))))) ) <=> ~$spl58),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl58])])).
fof(f2483,plain,(
  ( ! [X48] : (p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK1),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK1),bool)),sK2),s('type.wordSem.stack_frame'(sK0),sK3))),s('type.wordSem.stack_frame'(sK1),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK1))),X48),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK20('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK19(sK3,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0))))))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK20('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK19(sK3,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0)) = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),sK17(sK20('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK19(sK3,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0),'type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))))))) ) | $spl16),
  inference(superposition,[],[f1253,f2427])).
fof(f2484,plain,(
  ( ! [X50,X49] : (p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK1),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK1),bool)),sK2),s('type.wordSem.stack_frame'(sK0),sK3))),s('type.wordSem.stack_frame'(sK1),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK1))),X49),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),X50)))))))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK20('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK19(sK3,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0)) = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),sK17(sK20('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK19(sK3,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0),'type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))))))) ) | $spl16),
  inference(superposition,[],[f1470,f2427])).
fof(f2485,plain,(
  ( ! [X51] : (p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK1),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK1),bool)),sK2),s('type.wordSem.stack_frame'(sK0),sK3))),s('type.wordSem.stack_frame'(sK1),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK1))),X51),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')))))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK20('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK19(sK3,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0)) = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),sK17(sK20('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK19(sK3,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0),'type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))))))) ) | $spl16),
  inference(superposition,[],[f1552,f2427])).
fof(f1933,plain,(
  ( ! [X50] : (p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK1),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK1),bool)),sK2),s('type.wordSem.stack_frame'(sK0),sK3))),s('type.wordSem.stack_frame'(sK1),X50)))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK20(X50,sK1))) ) | $spl60),
  inference(cnf_transformation,[],[f1933_D])).
fof(f1933_D,plain,(
  ( ! [X50] : (p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK1),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK1),bool)),sK2),s('type.wordSem.stack_frame'(sK0),sK3))),s('type.wordSem.stack_frame'(sK1),X50)))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK20(X50,sK1))) ) <=> ~$spl60),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl60])])).
fof(f2486,plain,(
  ( ! [X52] : (p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK1),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK1),bool)),sK2),s('type.wordSem.stack_frame'(sK0),sK3))),s('type.wordSem.stack_frame'(sK1),X52)))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK20('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK19(sK3,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0)) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK20(X52,sK1))) ) | $spl16),
  inference(superposition,[],[f1684,f2427])).
fof(f2494,plain,(
  $false | ($spl16 | $spl26)),
  inference(subsumption_resolution,[],[f2464,f96])).
fof(f2464,plain,(
  s(bool,'T_0') = s(bool,happ(s(fun('type.wordSem.stack_frame'(sK1),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK1),bool)),sK2),s('type.wordSem.stack_frame'(sK0),sK3))),s('type.wordSem.stack_frame'(sK1),sK4))) | ($spl16 | $spl26)),
  inference(superposition,[],[f1815,f2427])).
fof(f2424,plain,(
  $false | ($spl17 | $spl38)),
  inference(subsumption_resolution,[],[f2423,f1743])).
fof(f2423,plain,(
  s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK20(sK3,sK0)) | $spl38),
  inference(subsumption_resolution,[],[f2413,f84])).
fof(f2413,plain,(
  p(s(bool,'F_0')) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK20(sK3,sK0)) | $spl38),
  inference(superposition,[],[f1822,f98])).
fof(f2154,plain,(
  ( ! [X49] : (p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK1),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK1),bool)),sK2),s('type.wordSem.stack_frame'(sK0),X49))),s('type.wordSem.stack_frame'(sK1),sK4)))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK20(X49,sK0)) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK20('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK1))),sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK1))),sK19(sK4,sK1)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK1)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK1))) ) | ($spl14 | $spl24)),
  inference(superposition,[],[f1684,f2117])).
fof(f2117,plain,(
  s('type.wordSem.stack_frame'(sK1),sK4) = s('type.wordSem.stack_frame'(sK1),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK1))),sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK1))),sK19(sK4,sK1)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK1)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0'))) | ($spl14 | $spl24)),
  inference(forward_demodulation,[],[f2098,f1937])).
fof(f2098,plain,(
  s('type.wordSem.stack_frame'(sK1),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK1))),sK19(sK4,sK1)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0'))) = s('type.wordSem.stack_frame'(sK1),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK1))),sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK1))),sK19(sK4,sK1)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK1)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0'))) | $spl24),
  inference(superposition,[],[f90,f1814])).
fof(f1811,plain,(
  ( ! [X13] : (p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK1),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK1),bool)),sK2),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X13),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0'))))),s('type.wordSem.stack_frame'(sK1),sK4))))) ) | $spl20),
  inference(cnf_transformation,[],[f1811_D])).
fof(f1811_D,plain,(
  ( ! [X13] : (p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK1),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK1),bool)),sK2),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X13),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0'))))),s('type.wordSem.stack_frame'(sK1),sK4))))) ) <=> ~$spl20),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl20])])).
fof(f2153,plain,(
  ( ! [X48] : (p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK1),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK1),bool)),sK2),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X48),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0'))))),s('type.wordSem.stack_frame'(sK1),sK4)))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK20('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK1))),sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK1))),sK19(sK4,sK1)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK1)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK1)) = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),sK17(sK20('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK1))),sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK1))),sK19(sK4,sK1)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK1)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK1),'type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))))))) ) | ($spl14 | $spl24)),
  inference(superposition,[],[f1602,f2117])).
fof(f1602,plain,(
  ( ! [X0,X1] : (p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK1),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK1),bool)),sK2),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X1),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0'))))),s('type.wordSem.stack_frame'(sK1),X0)))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK20(X0,sK1)) = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),sK17(sK20(X0,sK1),'type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))))))) )),
  inference(duplicate_literal_removal,[],[f1588])).
fof(f1588,plain,(
  ( ! [X0,X1] : (p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK1),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK1),bool)),sK2),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X1),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0'))))),s('type.wordSem.stack_frame'(sK1),X0)))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK20(X0,sK1)) = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),sK17(sK20(X0,sK1),'type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK20(X0,sK1)) = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),sK17(sK20(X0,sK1),'type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))))))) )),
  inference(superposition,[],[f1263,f73])).
fof(f2152,plain,(
  ( ! [X47,X46] : (p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK1),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK1),bool)),sK2),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X46),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),X47))))))),s('type.wordSem.stack_frame'(sK1),sK4)))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK20('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK1))),sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK1))),sK19(sK4,sK1)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK1)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK1)) = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),sK17(sK20('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK1))),sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK1))),sK19(sK4,sK1)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK1)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK1),'type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))))))) ) | ($spl14 | $spl24)),
  inference(superposition,[],[f1392,f2117])).
fof(f2151,plain,(
  ( ! [X45] : (p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK1),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK1),bool)),sK2),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X45),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK20('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK1))),sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK1))),sK19(sK4,sK1)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK1)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK1)))))),s('type.wordSem.stack_frame'(sK1),sK4)))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK20('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK1))),sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK1))),sK19(sK4,sK1)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK1)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK1)) = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),sK17(sK20('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK1))),sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK1))),sK19(sK4,sK1)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK1)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK1),'type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))))))) ) | ($spl14 | $spl24)),
  inference(superposition,[],[f1263,f2117])).
fof(f2150,plain,(
  ( ! [X43,X44] : (s(bool,'F_0') != s(bool,happ(s(fun('type.wordSem.stack_frame'(sK1),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK1),bool)),sK2),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X43),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),X44))))))),s('type.wordSem.stack_frame'(sK1),sK4))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK20('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK1))),sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK1))),sK19(sK4,sK1)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK1)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK1))) ) | ($spl14 | $spl24)),
  inference(superposition,[],[f1132,f2117])).
fof(f2149,plain,(
  ( ! [X41,X42] : (s(bool,'T_0') = s(bool,happ(s(fun('type.wordSem.stack_frame'(sK1),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK1),bool)),sK2),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X41),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),X42))))))),s('type.wordSem.stack_frame'(sK1),sK4))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK20('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK1))),sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK1))),sK19(sK4,sK1)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK1)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK1))) ) | ($spl14 | $spl24)),
  inference(superposition,[],[f1130,f2117])).
fof(f2148,plain,(
  ( ! [X39,X40] : (p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK1),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK1),bool)),sK2),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X39),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),X40))))))),s('type.wordSem.stack_frame'(sK1),sK4)))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK20('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK1))),sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK1))),sK19(sK4,sK1)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK1)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK1))) ) | ($spl14 | $spl24)),
  inference(superposition,[],[f1115,f2117])).
fof(f2147,plain,(
  ( ! [X38] : (s(bool,'F_0') != s(bool,happ(s(fun('type.wordSem.stack_frame'(sK1),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK1),bool)),sK2),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X38),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0'))))),s('type.wordSem.stack_frame'(sK1),sK4))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK20('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK1))),sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK1))),sK19(sK4,sK1)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK1)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK1))) ) | ($spl14 | $spl24)),
  inference(superposition,[],[f742,f2117])).
fof(f2146,plain,(
  ( ! [X37] : (s(bool,'T_0') = s(bool,happ(s(fun('type.wordSem.stack_frame'(sK1),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK1),bool)),sK2),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X37),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0'))))),s('type.wordSem.stack_frame'(sK1),sK4))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK20('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK1))),sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK1))),sK19(sK4,sK1)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK1)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK1))) ) | ($spl14 | $spl24)),
  inference(superposition,[],[f740,f2117])).
fof(f2145,plain,(
  ( ! [X36] : (p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK1),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK1),bool)),sK2),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X36),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0'))))),s('type.wordSem.stack_frame'(sK1),sK4)))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK20('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK1))),sK19('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK1))),sK19(sK4,sK1)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK1)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK1))) ) | ($spl14 | $spl24)),
  inference(superposition,[],[f727,f2117])).
fof(f1814,plain,(
  s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK20('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK1))),sK19(sK4,sK1)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK1)) | $spl24),
  inference(cnf_transformation,[],[f1814_D])).
fof(f1814_D,plain,(
  s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK20('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK1))),sK19(sK4,sK1)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK1)) <=> ~$spl24),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl24])])).
fof(f1994,plain,(
  ( ! [X49] : (p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK1),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK1),bool)),sK2),s('type.wordSem.stack_frame'(sK0),X49))),s('type.wordSem.stack_frame'(sK1),sK4)))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK20(X49,sK0)) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK20('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK1))),sK19(sK4,sK1)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK1))) ) | $spl14),
  inference(superposition,[],[f1684,f1937])).
fof(f1820,plain,(
  s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK20('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK1))),sK19(sK4,sK1)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK1)) = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),sK17(sK20('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK1))),sK19(sK4,sK1)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK1),'type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))))) | $spl34),
  inference(cnf_transformation,[],[f1820_D])).
fof(f1820_D,plain,(
  s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK20('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK1))),sK19(sK4,sK1)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK1)) = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),sK17(sK20('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK1))),sK19(sK4,sK1)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK1),'type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))))) <=> ~$spl34),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl34])])).
fof(f1993,plain,(
  ( ! [X48] : (p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK1),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK1),bool)),sK2),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X48),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0'))))),s('type.wordSem.stack_frame'(sK1),sK4)))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK20('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK1))),sK19(sK4,sK1)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK1)) = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),sK17(sK20('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK1))),sK19(sK4,sK1)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK1),'type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))))))) ) | $spl14),
  inference(superposition,[],[f1602,f1937])).
fof(f1992,plain,(
  ( ! [X47,X46] : (p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK1),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK1),bool)),sK2),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X46),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),X47))))))),s('type.wordSem.stack_frame'(sK1),sK4)))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK20('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK1))),sK19(sK4,sK1)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK1)) = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),sK17(sK20('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK1))),sK19(sK4,sK1)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK1),'type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))))))) ) | $spl14),
  inference(superposition,[],[f1392,f1937])).
fof(f1821,plain,(
  ( ! [X45] : (p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK1),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK1),bool)),sK2),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X45),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK20('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK1))),sK19(sK4,sK1)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK1)))))),s('type.wordSem.stack_frame'(sK1),sK4))))) ) | $spl36),
  inference(cnf_transformation,[],[f1821_D])).
fof(f1821_D,plain,(
  ( ! [X45] : (p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK1),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK1),bool)),sK2),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X45),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK20('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK1))),sK19(sK4,sK1)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK1)))))),s('type.wordSem.stack_frame'(sK1),sK4))))) ) <=> ~$spl36),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl36])])).
fof(f1991,plain,(
  ( ! [X45] : (p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK1),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK1),bool)),sK2),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X45),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK20('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK1))),sK19(sK4,sK1)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK1)))))),s('type.wordSem.stack_frame'(sK1),sK4)))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK20('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK1))),sK19(sK4,sK1)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK1)) = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),sK17(sK20('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK1))),sK19(sK4,sK1)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK1),'type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))))))) ) | $spl14),
  inference(superposition,[],[f1263,f1937])).
fof(f1990,plain,(
  ( ! [X43,X44] : (s(bool,'F_0') != s(bool,happ(s(fun('type.wordSem.stack_frame'(sK1),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK1),bool)),sK2),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X43),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),X44))))))),s('type.wordSem.stack_frame'(sK1),sK4))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK20('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK1))),sK19(sK4,sK1)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK1))) ) | $spl14),
  inference(superposition,[],[f1132,f1937])).
fof(f1989,plain,(
  ( ! [X41,X42] : (s(bool,'T_0') = s(bool,happ(s(fun('type.wordSem.stack_frame'(sK1),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK1),bool)),sK2),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X41),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),X42))))))),s('type.wordSem.stack_frame'(sK1),sK4))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK20('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK1))),sK19(sK4,sK1)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK1))) ) | $spl14),
  inference(superposition,[],[f1130,f1937])).
fof(f1988,plain,(
  ( ! [X39,X40] : (p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK1),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK1),bool)),sK2),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X39),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),X40))))))),s('type.wordSem.stack_frame'(sK1),sK4)))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK20('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK1))),sK19(sK4,sK1)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK1))) ) | $spl14),
  inference(superposition,[],[f1115,f1937])).
fof(f1987,plain,(
  ( ! [X38] : (s(bool,'F_0') != s(bool,happ(s(fun('type.wordSem.stack_frame'(sK1),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK1),bool)),sK2),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X38),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0'))))),s('type.wordSem.stack_frame'(sK1),sK4))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK20('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK1))),sK19(sK4,sK1)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK1))) ) | $spl14),
  inference(superposition,[],[f742,f1937])).
fof(f1986,plain,(
  ( ! [X37] : (s(bool,'T_0') = s(bool,happ(s(fun('type.wordSem.stack_frame'(sK1),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK1),bool)),sK2),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X37),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0'))))),s('type.wordSem.stack_frame'(sK1),sK4))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK20('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK1))),sK19(sK4,sK1)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK1))) ) | $spl14),
  inference(superposition,[],[f740,f1937])).
fof(f1985,plain,(
  ( ! [X36] : (p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK1),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK1),bool)),sK2),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X36),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0'))))),s('type.wordSem.stack_frame'(sK1),sK4)))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK20('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK1))),sK19(sK4,sK1)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK1))) ) | $spl14),
  inference(superposition,[],[f727,f1937])).
fof(f1810,plain,(
  s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),sK17('const.option.NONE_0','type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))))) | $spl18),
  inference(cnf_transformation,[],[f1810_D])).
fof(f1810_D,plain,(
  s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),sK17('const.option.NONE_0','type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))))) <=> ~$spl18),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl18])])).
fof(f1975,plain,(
  ( ! [X14,X15] : (p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK1),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK1),bool)),sK2),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X14),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),X15))))))),s('type.wordSem.stack_frame'(sK1),sK4)))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),sK17('const.option.NONE_0','type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))))))) ) | $spl14),
  inference(superposition,[],[f184,f1937])).
fof(f1974,plain,(
  ( ! [X13] : (p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK1),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK1),bool)),sK2),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X13),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0'))))),s('type.wordSem.stack_frame'(sK1),sK4)))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),sK17('const.option.NONE_0','type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))))))) ) | $spl14),
  inference(superposition,[],[f119,f1937])).
fof(f1914,plain,(
  ( ! [X50] : (p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK1),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK1),bool)),sK2),s('type.wordSem.stack_frame'(sK0),sK3))),s('type.wordSem.stack_frame'(sK1),X50)))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK20('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK19(sK3,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0)) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK20(X50,sK1))) ) | $spl16),
  inference(superposition,[],[f1684,f1859])).
fof(f1859,plain,(
  s('type.wordSem.stack_frame'(sK0),sK3) = s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK19(sK3,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0'))) | $spl16),
  inference(superposition,[],[f90,f1744])).
fof(f1913,plain,(
  ( ! [X49] : (p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK1),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK1),bool)),sK2),s('type.wordSem.stack_frame'(sK0),sK3))),s('type.wordSem.stack_frame'(sK1),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK1))),X49),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')))))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK20('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK19(sK3,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0)) = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),sK17(sK20('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK19(sK3,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0),'type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))))))) ) | $spl16),
  inference(superposition,[],[f1552,f1859])).
fof(f1912,plain,(
  ( ! [X47,X48] : (p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK1),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK1),bool)),sK2),s('type.wordSem.stack_frame'(sK0),sK3))),s('type.wordSem.stack_frame'(sK1),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK1))),X47),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),X48)))))))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK20('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK19(sK3,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0)) = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),sK17(sK20('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK19(sK3,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0),'type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))))))) ) | $spl16),
  inference(superposition,[],[f1470,f1859])).
fof(f1911,plain,(
  ( ! [X46] : (p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK1),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK1),bool)),sK2),s('type.wordSem.stack_frame'(sK0),sK3))),s('type.wordSem.stack_frame'(sK1),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK1))),X46),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK20('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK19(sK3,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0))))))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK20('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK19(sK3,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0)) = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),sK17(sK20('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK19(sK3,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0),'type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))))))) ) | $spl16),
  inference(superposition,[],[f1253,f1859])).
fof(f1910,plain,(
  ( ! [X45,X44] : (p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK1),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK1),bool)),sK2),s('type.wordSem.stack_frame'(sK0),sK3))),s('type.wordSem.stack_frame'(sK1),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK1))),X44),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),X45)))))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK20('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK19(sK3,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0)) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),X45)) ) | $spl16),
  inference(superposition,[],[f1004,f1859])).
fof(f1909,plain,(
  ( ! [X43,X42] : (s(bool,'F_0') != s(bool,happ(s(fun('type.wordSem.stack_frame'(sK1),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK1),bool)),sK2),s('type.wordSem.stack_frame'(sK0),sK3))),s('type.wordSem.stack_frame'(sK1),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK1))),X42),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),X43))))))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK20('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK19(sK3,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0))) ) | $spl16),
  inference(superposition,[],[f991,f1859])).
fof(f1908,plain,(
  ( ! [X41,X40] : (s(bool,'T_0') = s(bool,happ(s(fun('type.wordSem.stack_frame'(sK1),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK1),bool)),sK2),s('type.wordSem.stack_frame'(sK0),sK3))),s('type.wordSem.stack_frame'(sK1),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK1))),X40),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),X41))))))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK20('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK19(sK3,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0))) ) | $spl16),
  inference(superposition,[],[f989,f1859])).
fof(f1907,plain,(
  ( ! [X39,X38] : (p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK1),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK1),bool)),sK2),s('type.wordSem.stack_frame'(sK0),sK3))),s('type.wordSem.stack_frame'(sK1),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK1))),X38),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),X39)))))))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK20('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK19(sK3,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0))) ) | $spl16),
  inference(superposition,[],[f968,f1859])).
fof(f1906,plain,(
  ( ! [X37] : (s(bool,'F_0') != s(bool,happ(s(fun('type.wordSem.stack_frame'(sK1),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK1),bool)),sK2),s('type.wordSem.stack_frame'(sK0),sK3))),s('type.wordSem.stack_frame'(sK1),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK1))),X37),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0'))))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK20('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK19(sK3,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0))) ) | $spl16),
  inference(superposition,[],[f624,f1859])).
fof(f1905,plain,(
  ( ! [X36] : (s(bool,'T_0') = s(bool,happ(s(fun('type.wordSem.stack_frame'(sK1),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK1),bool)),sK2),s('type.wordSem.stack_frame'(sK0),sK3))),s('type.wordSem.stack_frame'(sK1),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK1))),X36),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0'))))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK20('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK19(sK3,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0))) ) | $spl16),
  inference(superposition,[],[f622,f1859])).
fof(f1904,plain,(
  ( ! [X35] : (p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK1),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK1),bool)),sK2),s('type.wordSem.stack_frame'(sK0),sK3))),s('type.wordSem.stack_frame'(sK1),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK1))),X35),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')))))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK20('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),sK19(sK3,sK0)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK0))) ) | $spl16),
  inference(superposition,[],[f606,f1859])).
fof(f1896,plain,(
  ( ! [X16] : (p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK1),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK1),bool)),sK2),s('type.wordSem.stack_frame'(sK0),sK3))),s('type.wordSem.stack_frame'(sK1),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK1))),X16),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')))))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),sK17('const.option.NONE_0','type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))))))) ) | $spl16),
  inference(superposition,[],[f119,f1859])).
fof(f1894,plain,(
  ( ! [X14,X13] : (p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK1),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK1),bool)),sK2),s('type.wordSem.stack_frame'(sK0),sK3))),s('type.wordSem.stack_frame'(sK1),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK1))),X13),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),X14)))))))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),sK17('const.option.NONE_0','type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))))))) ) | $spl16),
  inference(superposition,[],[f246,f1859])).
fof(f1802,plain,(
  ( ! [X49] : (p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK1),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK1),bool)),sK2),s('type.wordSem.stack_frame'(sK0),X49))),s('type.wordSem.stack_frame'(sK1),sK4)))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK20(X49,sK0)) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK20('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK1))),sK19(sK4,sK1)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK1))) ) | $spl14),
  inference(superposition,[],[f1684,f1747])).
fof(f1747,plain,(
  s('type.wordSem.stack_frame'(sK1),sK4) = s('type.wordSem.stack_frame'(sK1),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK1))),sK19(sK4,sK1)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0'))) | $spl14),
  inference(superposition,[],[f90,f1742])).
fof(f1801,plain,(
  ( ! [X48] : (p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK1),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK1),bool)),sK2),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X48),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0'))))),s('type.wordSem.stack_frame'(sK1),sK4)))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK20('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK1))),sK19(sK4,sK1)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK1)) = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),sK17(sK20('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK1))),sK19(sK4,sK1)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK1),'type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))))))) ) | $spl14),
  inference(superposition,[],[f1602,f1747])).
fof(f1800,plain,(
  ( ! [X47,X46] : (p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK1),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK1),bool)),sK2),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X46),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),X47))))))),s('type.wordSem.stack_frame'(sK1),sK4)))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK20('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK1))),sK19(sK4,sK1)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK1)) = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),sK17(sK20('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK1))),sK19(sK4,sK1)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK1),'type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))))))) ) | $spl14),
  inference(superposition,[],[f1392,f1747])).
fof(f1799,plain,(
  ( ! [X45] : (p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK1),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK1),bool)),sK2),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X45),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK20('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK1))),sK19(sK4,sK1)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK1)))))),s('type.wordSem.stack_frame'(sK1),sK4)))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK20('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK1))),sK19(sK4,sK1)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK1)) = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),sK17(sK20('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK1))),sK19(sK4,sK1)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK1),'type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))))))) ) | $spl14),
  inference(superposition,[],[f1263,f1747])).
fof(f1798,plain,(
  ( ! [X43,X44] : (s(bool,'F_0') != s(bool,happ(s(fun('type.wordSem.stack_frame'(sK1),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK1),bool)),sK2),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X43),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),X44))))))),s('type.wordSem.stack_frame'(sK1),sK4))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK20('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK1))),sK19(sK4,sK1)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK1))) ) | $spl14),
  inference(superposition,[],[f1132,f1747])).
fof(f1797,plain,(
  ( ! [X41,X42] : (s(bool,'T_0') = s(bool,happ(s(fun('type.wordSem.stack_frame'(sK1),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK1),bool)),sK2),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X41),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),X42))))))),s('type.wordSem.stack_frame'(sK1),sK4))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK20('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK1))),sK19(sK4,sK1)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK1))) ) | $spl14),
  inference(superposition,[],[f1130,f1747])).
fof(f1796,plain,(
  ( ! [X39,X40] : (p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK1),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK1),bool)),sK2),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X39),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),X40))))))),s('type.wordSem.stack_frame'(sK1),sK4)))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK20('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK1))),sK19(sK4,sK1)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK1))) ) | $spl14),
  inference(superposition,[],[f1115,f1747])).
fof(f1795,plain,(
  ( ! [X38] : (s(bool,'F_0') != s(bool,happ(s(fun('type.wordSem.stack_frame'(sK1),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK1),bool)),sK2),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X38),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0'))))),s('type.wordSem.stack_frame'(sK1),sK4))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK20('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK1))),sK19(sK4,sK1)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK1))) ) | $spl14),
  inference(superposition,[],[f742,f1747])).
fof(f1794,plain,(
  ( ! [X37] : (s(bool,'T_0') = s(bool,happ(s(fun('type.wordSem.stack_frame'(sK1),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK1),bool)),sK2),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X37),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0'))))),s('type.wordSem.stack_frame'(sK1),sK4))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK20('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK1))),sK19(sK4,sK1)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK1))) ) | $spl14),
  inference(superposition,[],[f740,f1747])).
fof(f1793,plain,(
  ( ! [X36] : (p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK1),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK1),bool)),sK2),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X36),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0'))))),s('type.wordSem.stack_frame'(sK1),sK4)))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK20('const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK1))),sK19(sK4,sK1)),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0')),sK1))) ) | $spl14),
  inference(superposition,[],[f727,f1747])).
fof(f1783,plain,(
  ( ! [X14,X15] : (p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK1),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK1),bool)),sK2),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X14),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),X15))))))),s('type.wordSem.stack_frame'(sK1),sK4)))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),sK17('const.option.NONE_0','type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))))))) ) | $spl14),
  inference(superposition,[],[f184,f1747])).
fof(f1782,plain,(
  ( ! [X13] : (p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK1),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK1),bool)),sK2),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X13),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0'))))),s('type.wordSem.stack_frame'(sK1),sK4)))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),sK17('const.option.NONE_0','type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))))))) ) | $spl14),
  inference(superposition,[],[f119,f1747])).
fof(f1742,plain,(
  s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK20(sK4,sK1)) | $spl14),
  inference(cnf_transformation,[],[f1742_D])).
fof(f1742_D,plain,(
  s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK20(sK4,sK1)) <=> ~$spl14),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl14])])).
fof(f1744,plain,(
  s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK20(sK3,sK0)) | $spl16),
  inference(cnf_transformation,[],[f1744_D])).
fof(f1744_D,plain,(
  s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK20(sK3,sK0)) <=> ~$spl16),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl16])])).
fof(f1740,plain,(
  s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK20(sK3,sK0)) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK20(sK4,sK1))),
  inference(subsumption_resolution,[],[f1718,f84])).
fof(f1718,plain,(
  p(s(bool,'F_0')) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK20(sK3,sK0)) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),sK20(sK4,sK1))),
  inference(superposition,[],[f1684,f98])).
fof(f1406,plain,(
  ( ! [X4] : (s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),X4))) = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),sK17('const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),X4)),'type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))))))) ) | $spl10),
  inference(cnf_transformation,[],[f1406_D])).
fof(f1406_D,plain,(
  ( ! [X4] : (s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),X4))) = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),sK17('const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),X4)),'type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))))))) ) <=> ~$spl10),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl10])])).
fof(f1407,plain,(
  ( ! [X6,X7,X5] : (p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK1),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK1),bool)),sK2),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X5),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0'))))),s('type.wordSem.stack_frame'(sK1),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK1))),X6),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),X7)))))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),X7) = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),sK17(X7,'type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))))))) ) | $spl12),
  inference(cnf_transformation,[],[f1407_D])).
fof(f1407_D,plain,(
  ( ! [X6,X7,X5] : (p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK1),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK1),bool)),sK2),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X5),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0'))))),s('type.wordSem.stack_frame'(sK1),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK1))),X6),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),X7)))))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),X7) = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),sK17(X7,'type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))))))) ) <=> ~$spl12),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl12])])).
fof(f1382,plain,(
  ( ! [X6,X4,X7,X5] : (p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK1),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK1),bool)),sK2),s('type.wordSem.stack_frame'(sK0),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK0))),X5),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0'))))),s('type.wordSem.stack_frame'(sK1),'const.wordSem.StackFrame_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.wordSem.word_loc'(sK1))),X6),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),X7)))))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),X7) = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),sK17(X7,'type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))))) | s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),X4))) = s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),sK17('const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),X4)),'type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))))))) )),
  inference(superposition,[],[f184,f73])).
fof(f392,plain,(
  ( ! [X4,X5] : (p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK1),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK1),bool)),sK2),s('type.wordSem.stack_frame'(sK0),sK3))),s('type.wordSem.stack_frame'(sK1),X4)))) | ~p(s(bool,'const.relation.WF_1'(s(fun('type.wordSem.stack_frame'(sK1),fun('type.wordSem.stack_frame'(sK1),bool)),X5)))) | ~p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK1),bool),happ(s(fun('type.wordSem.stack_frame'(sK1),fun('type.wordSem.stack_frame'(sK1),bool)),X5),s('type.wordSem.stack_frame'(sK1),X4))),s('type.wordSem.stack_frame'(sK1),sK18(happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK1),bool)),sK2),s('type.wordSem.stack_frame'(sK0),sK3)),X5,'type.wordSem.stack_frame'(sK1))))))) ) | $spl6),
  inference(cnf_transformation,[],[f392_D])).
fof(f392_D,plain,(
  ( ! [X4,X5] : (p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK1),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK1),bool)),sK2),s('type.wordSem.stack_frame'(sK0),sK3))),s('type.wordSem.stack_frame'(sK1),X4)))) | ~p(s(bool,'const.relation.WF_1'(s(fun('type.wordSem.stack_frame'(sK1),fun('type.wordSem.stack_frame'(sK1),bool)),X5)))) | ~p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK1),bool),happ(s(fun('type.wordSem.stack_frame'(sK1),fun('type.wordSem.stack_frame'(sK1),bool)),X5),s('type.wordSem.stack_frame'(sK1),X4))),s('type.wordSem.stack_frame'(sK1),sK18(happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK1),bool)),sK2),s('type.wordSem.stack_frame'(sK0),sK3)),X5,'type.wordSem.stack_frame'(sK1))))))) ) <=> ~$spl6),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl6])])).
fof(f393,plain,(
  ( ! [X3] : (s(bool,'T_0') != s(bool,'const.relation.WF_1'(s(fun('type.wordSem.stack_frame'(sK1),fun('type.wordSem.stack_frame'(sK1),bool)),X3)))) ) | $spl8),
  inference(cnf_transformation,[],[f393_D])).
fof(f393_D,plain,(
  ( ! [X3] : (s(bool,'T_0') != s(bool,'const.relation.WF_1'(s(fun('type.wordSem.stack_frame'(sK1),fun('type.wordSem.stack_frame'(sK1),bool)),X3)))) ) <=> ~$spl8),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl8])])).
fof(f379,plain,(
  ( ! [X4,X5,X3] : (s(bool,'T_0') != s(bool,'const.relation.WF_1'(s(fun('type.wordSem.stack_frame'(sK1),fun('type.wordSem.stack_frame'(sK1),bool)),X3))) | p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK1),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK1),bool)),sK2),s('type.wordSem.stack_frame'(sK0),sK3))),s('type.wordSem.stack_frame'(sK1),X4)))) | ~p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK1),bool),happ(s(fun('type.wordSem.stack_frame'(sK1),fun('type.wordSem.stack_frame'(sK1),bool)),X5),s('type.wordSem.stack_frame'(sK1),X4))),s('type.wordSem.stack_frame'(sK1),sK18(happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK1),bool)),sK2),s('type.wordSem.stack_frame'(sK0),sK3)),X5,'type.wordSem.stack_frame'(sK1)))))) | ~p(s(bool,'const.relation.WF_1'(s(fun('type.wordSem.stack_frame'(sK1),fun('type.wordSem.stack_frame'(sK1),bool)),X5))))) )),
  inference(resolution,[],[f264,f74])).
fof(f74,plain,(
  ( ! [X2,X0,X5,X3,X1] : (p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X3)))) | p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X5)))) | ~p(s(bool,happ(s(fun(X0,bool),happ(s(fun(X0,fun(X0,bool)),X1),s(X0,X5))),s(X0,sK18(X2,X1,X0))))) | ~p(s(bool,'const.relation.WF_1'(s(fun(X0,fun(X0,bool)),X1))))) )),
  inference(cnf_transformation,[],[f57])).
fof(f57,plain,(
  ! [X0,X1] : (~p(s(bool,'const.relation.WF_1'(s(fun(X0,fun(X0,bool)),X1)))) | ! [X2] : ((! [X5] : (~p(s(bool,happ(s(fun(X0,bool),happ(s(fun(X0,fun(X0,bool)),X1),s(X0,X5))),s(X0,sK18(X2,X1,X0))))) | p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X5))))) & ~p(s(bool,happ(s(fun(X0,bool),X2),s(X0,sK18(X2,X1,X0)))))) | ! [X3] : p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X3))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK18])],[f56])).
fof(f56,plain,(
  ! [X0,X1] : (~p(s(bool,'const.relation.WF_1'(s(fun(X0,fun(X0,bool)),X1)))) | ! [X2] : (? [X4] : (! [X5] : (~p(s(bool,happ(s(fun(X0,bool),happ(s(fun(X0,fun(X0,bool)),X1),s(X0,X5))),s(X0,X4)))) | p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X5))))) & ~p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X4))))) | ! [X3] : p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X3))))))),
  inference(rectify,[],[f50])).
fof(f50,plain,(
  ! [X0,X1] : (~p(s(bool,'const.relation.WF_1'(s(fun(X0,fun(X0,bool)),X1)))) | ! [X2] : (? [X3] : (! [X4] : (~p(s(bool,happ(s(fun(X0,bool),happ(s(fun(X0,fun(X0,bool)),X1),s(X0,X4))),s(X0,X3)))) | p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X4))))) & ~p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X3))))) | ! [X5] : p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X5))))))),
  inference(ennf_transformation,[],[f28])).
fof(f28,plain,(
  ! [X0,X1] : (p(s(bool,'const.relation.WF_1'(s(fun(X0,fun(X0,bool)),X1)))) => ! [X2] : (! [X3] : (! [X4] : (p(s(bool,happ(s(fun(X0,bool),happ(s(fun(X0,fun(X0,bool)),X1),s(X0,X4))),s(X0,X3)))) => p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X4))))) => p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X3))))) => ! [X5] : p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X5))))))),
  inference(flattening,[],[f27])).
fof(f27,plain,(
  ! [X0] : ! [X1] : (p(s(bool,'const.relation.WF_1'(s(fun(X0,fun(X0,bool)),X1)))) => ! [X2] : (! [X3] : (! [X4] : (p(s(bool,happ(s(fun(X0,bool),happ(s(fun(X0,fun(X0,bool)),X1),s(X0,X4))),s(X0,X3)))) => p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X4))))) => p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X3))))) => ! [X5] : p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X5))))))),
  inference(rectify,[],[f15])).
fof(f15,axiom,(
  ! [X6] : ! [X26] : (p(s(bool,'const.relation.WF_1'(s(fun(X6,fun(X6,bool)),X26)))) => ! [X8] : (! [X21] : (! [X11] : (p(s(bool,happ(s(fun(X6,bool),happ(s(fun(X6,fun(X6,bool)),X26),s(X6,X11))),s(X6,X21)))) => p(s(bool,happ(s(fun(X6,bool),X8),s(X6,X11))))) => p(s(bool,happ(s(fun(X6,bool),X8),s(X6,X21))))) => ! [X21] : p(s(bool,happ(s(fun(X6,bool),X8),s(X6,X21))))))),
  file('thm.wordProps.s_frame_key_eq_ind','thm.relation.WF_INDUCTION_THM')).
fof(f264,plain,(
  ( ! [X0] : (~p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK1),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK1),bool)),sK2),s('type.wordSem.stack_frame'(sK0),sK3))),s('type.wordSem.stack_frame'(sK1),sK18(happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK1),bool)),sK2),s('type.wordSem.stack_frame'(sK0),sK3)),X0,'type.wordSem.stack_frame'(sK1)))))) | s(bool,'T_0') != s(bool,'const.relation.WF_1'(s(fun('type.wordSem.stack_frame'(sK1),fun('type.wordSem.stack_frame'(sK1),bool)),X0)))) )),
  inference(resolution,[],[f95,f82])).
fof(f95,plain,(
  ( ! [X4] : (~p(s(bool,'const.relation.WF_1'(s(fun('type.wordSem.stack_frame'(sK1),fun('type.wordSem.stack_frame'(sK1),bool)),X4)))) | ~p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK1),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK1),bool)),sK2),s('type.wordSem.stack_frame'(sK0),sK3))),s('type.wordSem.stack_frame'(sK1),sK18(happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK1),bool)),sK2),s('type.wordSem.stack_frame'(sK0),sK3)),X4,'type.wordSem.stack_frame'(sK1))))))) )),
  inference(resolution,[],[f68,f75])).
fof(f75,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X3)))) | ~p(s(bool,happ(s(fun(X0,bool),X2),s(X0,sK18(X2,X1,X0))))) | ~p(s(bool,'const.relation.WF_1'(s(fun(X0,fun(X0,bool)),X1))))) )),
  inference(cnf_transformation,[],[f57])).
fof(f107,plain,(
  ( ! [X0] : (p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK1),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK1),bool)),sK2),s('type.wordSem.stack_frame'(sK0),sK3))),s('type.wordSem.stack_frame'(sK1),X0))))) ) | $spl2),
  inference(cnf_transformation,[],[f107_D])).
fof(f107_D,plain,(
  ( ! [X0] : (p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK1),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK1),bool)),sK2),s('type.wordSem.stack_frame'(sK0),sK3))),s('type.wordSem.stack_frame'(sK1),X0))))) ) <=> ~$spl2),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl2])])).
fof(f391,plain,(
  ( ! [X2,X0] : (s(bool,'T_0') != s(bool,'const.relation.WF_1'(s(fun('type.wordSem.stack_frame'(sK1),fun('type.wordSem.stack_frame'(sK1),bool)),X0))) | ~p(s(bool,'const.relation.WF_1'(s(fun('type.wordSem.stack_frame'(sK1),fun('type.wordSem.stack_frame'(sK1),bool)),X2)))) | ~p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK1),bool),happ(s(fun('type.wordSem.stack_frame'(sK1),fun('type.wordSem.stack_frame'(sK1),bool)),X2),s('type.wordSem.stack_frame'(sK1),sK18(happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK1),bool)),sK2),s('type.wordSem.stack_frame'(sK0),sK3)),X0,'type.wordSem.stack_frame'(sK1))))),s('type.wordSem.stack_frame'(sK1),sK18(happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK1),bool)),sK2),s('type.wordSem.stack_frame'(sK0),sK3)),X2,'type.wordSem.stack_frame'(sK1))))))) ) | $spl4),
  inference(cnf_transformation,[],[f391_D])).
fof(f391_D,plain,(
  ( ! [X2,X0] : (s(bool,'T_0') != s(bool,'const.relation.WF_1'(s(fun('type.wordSem.stack_frame'(sK1),fun('type.wordSem.stack_frame'(sK1),bool)),X0))) | ~p(s(bool,'const.relation.WF_1'(s(fun('type.wordSem.stack_frame'(sK1),fun('type.wordSem.stack_frame'(sK1),bool)),X2)))) | ~p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK1),bool),happ(s(fun('type.wordSem.stack_frame'(sK1),fun('type.wordSem.stack_frame'(sK1),bool)),X2),s('type.wordSem.stack_frame'(sK1),sK18(happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK1),bool)),sK2),s('type.wordSem.stack_frame'(sK0),sK3)),X0,'type.wordSem.stack_frame'(sK1))))),s('type.wordSem.stack_frame'(sK1),sK18(happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK1),bool)),sK2),s('type.wordSem.stack_frame'(sK0),sK3)),X2,'type.wordSem.stack_frame'(sK1))))))) ) <=> ~$spl4),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl4])])).
fof(f378,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') != s(bool,'const.relation.WF_1'(s(fun('type.wordSem.stack_frame'(sK1),fun('type.wordSem.stack_frame'(sK1),bool)),X0))) | p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK1),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK1),bool)),sK2),s('type.wordSem.stack_frame'(sK0),sK3))),s('type.wordSem.stack_frame'(sK1),X1)))) | ~p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK1),bool),happ(s(fun('type.wordSem.stack_frame'(sK1),fun('type.wordSem.stack_frame'(sK1),bool)),X2),s('type.wordSem.stack_frame'(sK1),sK18(happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK1),bool)),sK2),s('type.wordSem.stack_frame'(sK0),sK3)),X0,'type.wordSem.stack_frame'(sK1))))),s('type.wordSem.stack_frame'(sK1),sK18(happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK1),bool)),sK2),s('type.wordSem.stack_frame'(sK0),sK3)),X2,'type.wordSem.stack_frame'(sK1)))))) | ~p(s(bool,'const.relation.WF_1'(s(fun('type.wordSem.stack_frame'(sK1),fun('type.wordSem.stack_frame'(sK1),bool)),X2))))) )),
  inference(resolution,[],[f264,f74])).
fof(f106,plain,(
  ( ! [X1] : (~p(s(bool,'const.relation.WF_1'(s(fun('type.wordSem.stack_frame'(sK1),fun('type.wordSem.stack_frame'(sK1),bool)),X1)))) | ~p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK1),bool),happ(s(fun('type.wordSem.stack_frame'(sK1),fun('type.wordSem.stack_frame'(sK1),bool)),X1),s('type.wordSem.stack_frame'(sK1),sK4))),s('type.wordSem.stack_frame'(sK1),sK18(happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK1),bool)),sK2),s('type.wordSem.stack_frame'(sK0),sK3)),X1,'type.wordSem.stack_frame'(sK1))))))) ) | $spl0),
  inference(cnf_transformation,[],[f106_D])).
fof(f106_D,plain,(
  ( ! [X1] : (~p(s(bool,'const.relation.WF_1'(s(fun('type.wordSem.stack_frame'(sK1),fun('type.wordSem.stack_frame'(sK1),bool)),X1)))) | ~p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK1),bool),happ(s(fun('type.wordSem.stack_frame'(sK1),fun('type.wordSem.stack_frame'(sK1),bool)),X1),s('type.wordSem.stack_frame'(sK1),sK4))),s('type.wordSem.stack_frame'(sK1),sK18(happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK1),bool)),sK2),s('type.wordSem.stack_frame'(sK0),sK3)),X1,'type.wordSem.stack_frame'(sK1))))))) ) <=> ~$spl0),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl0])])).
fof(f228,plain,(
  ( ! [X0,X1] : (p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK1),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK1),bool)),sK2),s('type.wordSem.stack_frame'(sK0),sK3))),s('type.wordSem.stack_frame'(sK1),X0)))) | ~p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK1),bool),happ(s(fun('type.wordSem.stack_frame'(sK1),fun('type.wordSem.stack_frame'(sK1),bool)),X1),s('type.wordSem.stack_frame'(sK1),sK4))),s('type.wordSem.stack_frame'(sK1),sK18(happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK1),bool)),sK2),s('type.wordSem.stack_frame'(sK0),sK3)),X1,'type.wordSem.stack_frame'(sK1)))))) | ~p(s(bool,'const.relation.WF_1'(s(fun('type.wordSem.stack_frame'(sK1),fun('type.wordSem.stack_frame'(sK1),bool)),X1))))) )),
  inference(subsumption_resolution,[],[f198,f84])).
fof(f198,plain,(
  ( ! [X0,X1] : (p(s(bool,'F_0')) | p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK1),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK1),bool)),sK2),s('type.wordSem.stack_frame'(sK0),sK3))),s('type.wordSem.stack_frame'(sK1),X0)))) | ~p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK1),bool),happ(s(fun('type.wordSem.stack_frame'(sK1),fun('type.wordSem.stack_frame'(sK1),bool)),X1),s('type.wordSem.stack_frame'(sK1),sK4))),s('type.wordSem.stack_frame'(sK1),sK18(happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK1),bool)),sK2),s('type.wordSem.stack_frame'(sK0),sK3)),X1,'type.wordSem.stack_frame'(sK1)))))) | ~p(s(bool,'const.relation.WF_1'(s(fun('type.wordSem.stack_frame'(sK1),fun('type.wordSem.stack_frame'(sK1),bool)),X1))))) )),
  inference(superposition,[],[f74,f98])).
fof(f129,plain,(
  $false | $spl2),
  inference(resolution,[],[f107,f68])).
fof(f93,plain,(
  ( ! [X0,X1] : (p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK1),bool),happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK1),bool)),sK2),s('type.wordSem.stack_frame'(sK0),sK3))),s('type.wordSem.stack_frame'(sK1),X0)))) | ~p(s(bool,happ(s(fun('type.wordSem.stack_frame'(sK1),bool),happ(s(fun('type.wordSem.stack_frame'(sK1),fun('type.wordSem.stack_frame'(sK1),bool)),X1),s('type.wordSem.stack_frame'(sK1),sK4))),s('type.wordSem.stack_frame'(sK1),sK18(happ(s(fun('type.wordSem.stack_frame'(sK0),fun('type.wordSem.stack_frame'(sK1),bool)),sK2),s('type.wordSem.stack_frame'(sK0),sK3)),X1,'type.wordSem.stack_frame'(sK1)))))) | ~p(s(bool,'const.relation.WF_1'(s(fun('type.wordSem.stack_frame'(sK1),fun('type.wordSem.stack_frame'(sK1),bool)),X1))))) )),
  inference(resolution,[],[f68,f74])).
% SZS output end Proof for thm.wordProps
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 112
% Passive clauses: 653
% Generated clauses: 2917
% Final active clauses: 77
% Final passive clauses: 300
% Input formulas: 19
% Initial clauses: 29
% 
% Selected by SInE selection: 17
% SInE iterations: 1
% 
% Duplicate literals: 27
% Trivial inequalities: 71
% Fw subsumption resolutions: 121
% Fw demodulations: 243
% Bw demodulations: 12
% 
% Simple tautologies: 2
% Forward subsumptions: 1787
% 
% Binary resolution: 154
% Forward superposition: 1137
% Backward superposition: 1069
% 
% Split clauses: 75
% Split components: 150
% SAT solver clauses: 84
% SAT solver unit clauses: 1
% SAT solver binary clauses: 13
% 
% Sat splits: 75
% Sat splitting refutations: 8
% 
% Memory used [KB]: 4349
% Time elapsed: 0.133 s
% ------------------------------
% ------------------------------
% Success in time 11.885 s
