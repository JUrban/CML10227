Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 149 next slice time: 5
dis+11_7_3 on thm.clos_removeProof
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.clos_removeProof
% SZS output start Proof for thm.clos_removeProof
fof(f1167,plain,(
  $false),
  inference(subsumption_resolution,[],[f1166,f106])).
fof(f106,plain,(
  s('type.list.list'('type.num.num'),'const.list.NIL_0') != s('type.list.list'('type.num.num'),'const.clos_removeProof.code_loc|39|_1'(s('type.closLang.exp','const.clos_remove.const_|48|_0')))),
  inference(cnf_transformation,[],[f44])).
fof(f44,plain,(
  s('type.list.list'('type.num.num'),'const.list.NIL_0') != s('type.list.list'('type.num.num'),'const.clos_removeProof.code_loc|39|_1'(s('type.closLang.exp','const.clos_remove.const_|48|_0')))),
  inference(flattening,[],[f6])).
fof(f6,negated_conjecture,(
  ~s('type.list.list'('type.num.num'),'const.list.NIL_0') = s('type.list.list'('type.num.num'),'const.clos_removeProof.code_loc|39|_1'(s('type.closLang.exp','const.clos_remove.const_|48|_0')))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  s('type.list.list'('type.num.num'),'const.list.NIL_0') = s('type.list.list'('type.num.num'),'const.clos_removeProof.code_loc|39|_1'(s('type.closLang.exp','const.clos_remove.const_|48|_0')))),
  file('thm.clos_removeProof.code_loc|39|_const_|48|','thm.clos_removeProof.code_loc|39|_const_|48|')).
fof(f1166,plain,(
  s('type.list.list'('type.num.num'),'const.list.NIL_0') = s('type.list.list'('type.num.num'),'const.clos_removeProof.code_loc|39|_1'(s('type.closLang.exp','const.clos_remove.const_|48|_0')))),
  inference(forward_demodulation,[],[f1165,f109])).
fof(f109,plain,(
  s('type.list.list'('type.num.num'),'const.list.NIL_0') = s('type.list.list'('type.num.num'),'const.closProps.code_locs_1'(s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))),
  inference(cnf_transformation,[],[f14])).
fof(f14,axiom,(
  s('type.list.list'('type.num.num'),'const.list.NIL_0') = s('type.list.list'('type.num.num'),'const.closProps.code_locs_1'(s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))),
  file('thm.clos_removeProof.code_loc|39|_const_|48|','thm.closProps.code_locs_def|split|0')).
fof(f1165,plain,(
  s('type.list.list'('type.num.num'),'const.clos_removeProof.code_loc|39|_1'(s('type.closLang.exp','const.clos_remove.const_|48|_0'))) = s('type.list.list'('type.num.num'),'const.closProps.code_locs_1'(s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))),
  inference(forward_demodulation,[],[f1159,f113])).
fof(f113,plain,(
  ( ! [X0] : (s('type.list.list'('type.num.num'),'const.clos_removeProof.code_loc|39|_1'(s('type.closLang.exp',X0))) = s('type.list.list'('type.num.num'),'const.closProps.code_locs_1'(s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X0),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) )),
  inference(cnf_transformation,[],[f47])).
fof(f47,plain,(
  ! [X0] : s('type.list.list'('type.num.num'),'const.clos_removeProof.code_loc|39|_1'(s('type.closLang.exp',X0))) = s('type.list.list'('type.num.num'),'const.closProps.code_locs_1'(s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X0),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))),
  inference(rectify,[],[f29])).
fof(f29,axiom,(
  ! [X9] : s('type.list.list'('type.num.num'),'const.clos_removeProof.code_loc|39|_1'(s('type.closLang.exp',X9))) = s('type.list.list'('type.num.num'),'const.closProps.code_locs_1'(s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X9),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))),
  file('thm.clos_removeProof.code_loc|39|_const_|48|','thm.clos_removeProof.code_loc|39|_def')).
fof(f1159,plain,(
  s('type.list.list'('type.num.num'),'const.closProps.code_locs_1'(s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))) = s('type.list.list'('type.num.num'),'const.closProps.code_locs_1'(s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.clos_remove.const_|48|_0'),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))),
  inference(superposition,[],[f131,f110])).
fof(f110,plain,(
  s('type.closLang.exp','const.clos_remove.const_|48|_0') = s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op','const.closLang.Const_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))),
  inference(cnf_transformation,[],[f28])).
fof(f28,axiom,(
  s('type.closLang.exp','const.clos_remove.const_|48|_0') = s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op','const.closLang.Const_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))),
  file('thm.clos_removeProof.code_loc|39|_const_|48|','thm.clos_remove.const_|48|_def')).
fof(f131,plain,(
  ( ! [X0,X1] : (s('type.list.list'('type.num.num'),'const.closProps.code_locs_1'(s('type.list.list'('type.closLang.exp'),X0))) = s('type.list.list'('type.num.num'),'const.closProps.code_locs_1'(s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X1),s('type.list.list'('type.closLang.exp'),X0))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) )),
  inference(cnf_transformation,[],[f66])).
fof(f66,plain,(
  ! [X0,X1] : s('type.list.list'('type.num.num'),'const.closProps.code_locs_1'(s('type.list.list'('type.closLang.exp'),X0))) = s('type.list.list'('type.num.num'),'const.closProps.code_locs_1'(s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X1),s('type.list.list'('type.closLang.exp'),X0))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))),
  inference(rectify,[],[f21])).
fof(f21,axiom,(
  ! [X12,X17] : s('type.list.list'('type.num.num'),'const.closProps.code_locs_1'(s('type.list.list'('type.closLang.exp'),X12))) = s('type.list.list'('type.num.num'),'const.closProps.code_locs_1'(s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X17),s('type.list.list'('type.closLang.exp'),X12))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))),
  file('thm.clos_removeProof.code_loc|39|_const_|48|','thm.closProps.code_locs_def|split|7')).
% SZS output end Proof for thm.clos_removeProof
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 38
% Passive clauses: 204
% Generated clauses: 1028
% Final active clauses: 30
% Final passive clauses: 142
% Input formulas: 42
% Initial clauses: 47
% 
% Duplicate literals: 81
% Trivial inequalities: 29
% Fw subsumption resolutions: 62
% Fw demodulations: 53
% Bw demodulations: 7
% 
% Simple tautologies: 53
% Equational tautologies: 16
% Forward subsumptions: 539
% 
% Binary resolution: 16
% Forward superposition: 333
% Backward superposition: 324
% Self superposition: 36
% Equality factoring: 26
% Equality resolution: 4
% 
% Split clauses: 3
% Split components: 6
% SAT solver clauses: 5
% SAT solver unit clauses: 2
% SAT solver binary clauses: 3
% 
% Sat splits: 3
% Sat splitting refutations: 2
% 
% TWLsolver clauses: 5
% TWLsolver calls for satisfiability: 2
% 
% Memory used [KB]: 1151
% Time elapsed: 0.026 s
% ------------------------------
% ------------------------------
% Success in time 0.03 s
