Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 149 next slice time: 5
dis+11_7_3 on thm.clos_relation
% (86461)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 705
% Passive clauses: 5749
% Generated clauses: 21444
% Final active clauses: 689
% Final passive clauses: 4706
% Input formulas: 34
% Initial clauses: 151
% 
% Duplicate literals: 1043
% Trivial inequalities: 105
% Fw subsumption resolutions: 3062
% Fw demodulations: 357
% Bw demodulations: 16
% 
% Simple tautologies: 235
% Equational tautologies: 80
% Forward subsumptions: 8600
% 
% Binary resolution: 6067
% Factoring: 1326
% Forward superposition: 3115
% Backward superposition: 5355
% Self superposition: 120
% Equality factoring: 118
% Equality resolution: 19
% 
% Split clauses: 2070
% Split components: 4348
% SAT solver clauses: 2552
% SAT solver unit clauses: 42
% SAT solver binary clauses: 250
% 
% Sat splits: 2070
% 
% TWLsolver clauses: 2545
% TWLsolver calls for satisfiability: 505
% 
% Memory used [KB]: 9978
% Time elapsed: 0.600 s
% ------------------------------
% ------------------------------
% remaining time: 144 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.clos_relation
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.clos_relation
% SZS output start Proof for thm.clos_relation
fof(f4952,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f4942,f203,f367,f368,f370,f275,f398,f478,f482,f200,f363,f217,f375,f479,f484,f199,f365,f480,f486,f201,f361,f4671,f4697,f1560,f1578,f202,f359,f221,f377,f4664,f4666,f1800,f1812,f243,f383,f246,f384])).
fof(f384,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1,X9] : (p(s(bool,happ(s(fun('type.closSem.v',bool),happ(s(fun('type.closSem.v',fun('type.closSem.v',bool)),'const.clos_relation.val_rel_2'(s('type.bool.itself'(X0),'const.bool.the_value_0'),s('type.num.num',X1))),s('type.closSem.v','const.closSem.Closure_5'(s('type.option.option'('type.num.num'),'const.option.SOME_1'(s('type.num.num',X2))),s('type.list.list'('type.closSem.v'),X5),s('type.list.list'('type.closSem.v'),X3),s('type.num.num',X7),s('type.closLang.exp',X8))))),s('type.closSem.v','const.closSem.Closure_5'(s('type.option.option'('type.num.num'),'const.option.SOME_1'(s('type.num.num',X2))),s('type.list.list'('type.closSem.v'),X6),s('type.list.list'('type.closSem.v'),X4),s('type.num.num',X7),s('type.closLang.exp',X9)))))) | ~p(s(bool,'const.clos_relation.exp_rel_3'(s('type.bool.itself'(X0),'const.bool.the_value_0'),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X9),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,'const.list.LIST_REL_3'(s(fun('type.closSem.v',fun('type.closSem.v',bool)),'const.clos_relation.val_rel_2'(s('type.bool.itself'(X0),'const.bool.the_value_0'),s('type.num.num',X1))),s('type.list.list'('type.closSem.v'),X5),s('type.list.list'('type.closSem.v'),X6)))) | ~p(s(bool,'const.list.LIST_REL_3'(s(fun('type.closSem.v',fun('type.closSem.v',bool)),'const.clos_relation.val_rel_2'(s('type.bool.itself'(X0),'const.bool.the_value_0'),s('type.num.num',X1))),s('type.list.list'('type.closSem.v'),X3),s('type.list.list'('type.closSem.v'),X4))))) ) | $spl24),
  inference(cnf_transformation,[],[f384_D])).
fof(f384_D,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1,X9] : (p(s(bool,happ(s(fun('type.closSem.v',bool),happ(s(fun('type.closSem.v',fun('type.closSem.v',bool)),'const.clos_relation.val_rel_2'(s('type.bool.itself'(X0),'const.bool.the_value_0'),s('type.num.num',X1))),s('type.closSem.v','const.closSem.Closure_5'(s('type.option.option'('type.num.num'),'const.option.SOME_1'(s('type.num.num',X2))),s('type.list.list'('type.closSem.v'),X5),s('type.list.list'('type.closSem.v'),X3),s('type.num.num',X7),s('type.closLang.exp',X8))))),s('type.closSem.v','const.closSem.Closure_5'(s('type.option.option'('type.num.num'),'const.option.SOME_1'(s('type.num.num',X2))),s('type.list.list'('type.closSem.v'),X6),s('type.list.list'('type.closSem.v'),X4),s('type.num.num',X7),s('type.closLang.exp',X9)))))) | ~p(s(bool,'const.clos_relation.exp_rel_3'(s('type.bool.itself'(X0),'const.bool.the_value_0'),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X9),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,'const.list.LIST_REL_3'(s(fun('type.closSem.v',fun('type.closSem.v',bool)),'const.clos_relation.val_rel_2'(s('type.bool.itself'(X0),'const.bool.the_value_0'),s('type.num.num',X1))),s('type.list.list'('type.closSem.v'),X5),s('type.list.list'('type.closSem.v'),X6)))) | ~p(s(bool,'const.list.LIST_REL_3'(s(fun('type.closSem.v',fun('type.closSem.v',bool)),'const.clos_relation.val_rel_2'(s('type.bool.itself'(X0),'const.bool.the_value_0'),s('type.num.num',X1))),s('type.list.list'('type.closSem.v'),X3),s('type.list.list'('type.closSem.v'),X4))))) ) <=> ~$spl24),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl24])])).
fof(f246,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1,X9] : (p(s(bool,happ(s(fun('type.closSem.v',bool),happ(s(fun('type.closSem.v',fun('type.closSem.v',bool)),'const.clos_relation.val_rel_2'(s('type.bool.itself'(X0),'const.bool.the_value_0'),s('type.num.num',X1))),s('type.closSem.v','const.closSem.Closure_5'(s('type.option.option'('type.num.num'),'const.option.SOME_1'(s('type.num.num',X2))),s('type.list.list'('type.closSem.v'),X5),s('type.list.list'('type.closSem.v'),X3),s('type.num.num',X7),s('type.closLang.exp',X8))))),s('type.closSem.v','const.closSem.Closure_5'(s('type.option.option'('type.num.num'),'const.option.SOME_1'(s('type.num.num',X2))),s('type.list.list'('type.closSem.v'),X6),s('type.list.list'('type.closSem.v'),X4),s('type.num.num',X7),s('type.closLang.exp',X9)))))) | ~p(s(bool,'const.clos_relation.exp_rel_3'(s('type.bool.itself'(X0),'const.bool.the_value_0'),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X9),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,'const.list.LIST_REL_3'(s(fun('type.closSem.v',fun('type.closSem.v',bool)),'const.clos_relation.val_rel_2'(s('type.bool.itself'(X0),'const.bool.the_value_0'),s('type.num.num',X1))),s('type.list.list'('type.closSem.v'),X5),s('type.list.list'('type.closSem.v'),X6)))) | ~p(s(bool,'const.list.LIST_REL_3'(s(fun('type.closSem.v',fun('type.closSem.v',bool)),'const.clos_relation.val_rel_2'(s('type.bool.itself'(X0),'const.bool.the_value_0'),s('type.num.num',X1))),s('type.list.list'('type.closSem.v'),X3),s('type.list.list'('type.closSem.v'),X4))))) )),
  inference(cnf_transformation,[],[f99])).
fof(f99,plain,(
  ! [X0,X1,X2,X3,X4,X5,X6,X7,X8,X9] : (~p(s(bool,'const.list.LIST_REL_3'(s(fun('type.closSem.v',fun('type.closSem.v',bool)),'const.clos_relation.val_rel_2'(s('type.bool.itself'(X0),'const.bool.the_value_0'),s('type.num.num',X1))),s('type.list.list'('type.closSem.v'),X3),s('type.list.list'('type.closSem.v'),X4)))) | ~p(s(bool,'const.list.LIST_REL_3'(s(fun('type.closSem.v',fun('type.closSem.v',bool)),'const.clos_relation.val_rel_2'(s('type.bool.itself'(X0),'const.bool.the_value_0'),s('type.num.num',X1))),s('type.list.list'('type.closSem.v'),X5),s('type.list.list'('type.closSem.v'),X6)))) | ~p(s(bool,'const.clos_relation.exp_rel_3'(s('type.bool.itself'(X0),'const.bool.the_value_0'),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X9),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.closSem.v',bool),happ(s(fun('type.closSem.v',fun('type.closSem.v',bool)),'const.clos_relation.val_rel_2'(s('type.bool.itself'(X0),'const.bool.the_value_0'),s('type.num.num',X1))),s('type.closSem.v','const.closSem.Closure_5'(s('type.option.option'('type.num.num'),'const.option.SOME_1'(s('type.num.num',X2))),s('type.list.list'('type.closSem.v'),X5),s('type.list.list'('type.closSem.v'),X3),s('type.num.num',X7),s('type.closLang.exp',X8))))),s('type.closSem.v','const.closSem.Closure_5'(s('type.option.option'('type.num.num'),'const.option.SOME_1'(s('type.num.num',X2))),s('type.list.list'('type.closSem.v'),X6),s('type.list.list'('type.closSem.v'),X4),s('type.num.num',X7),s('type.closLang.exp',X9)))))))),
  inference(flattening,[],[f98])).
fof(f98,plain,(
  ! [X0,X1,X2,X3,X4,X5,X6,X7,X8,X9] : ((~p(s(bool,'const.list.LIST_REL_3'(s(fun('type.closSem.v',fun('type.closSem.v',bool)),'const.clos_relation.val_rel_2'(s('type.bool.itself'(X0),'const.bool.the_value_0'),s('type.num.num',X1))),s('type.list.list'('type.closSem.v'),X3),s('type.list.list'('type.closSem.v'),X4)))) | ~p(s(bool,'const.list.LIST_REL_3'(s(fun('type.closSem.v',fun('type.closSem.v',bool)),'const.clos_relation.val_rel_2'(s('type.bool.itself'(X0),'const.bool.the_value_0'),s('type.num.num',X1))),s('type.list.list'('type.closSem.v'),X5),s('type.list.list'('type.closSem.v'),X6)))) | ~p(s(bool,'const.clos_relation.exp_rel_3'(s('type.bool.itself'(X0),'const.bool.the_value_0'),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X9),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))))) | p(s(bool,happ(s(fun('type.closSem.v',bool),happ(s(fun('type.closSem.v',fun('type.closSem.v',bool)),'const.clos_relation.val_rel_2'(s('type.bool.itself'(X0),'const.bool.the_value_0'),s('type.num.num',X1))),s('type.closSem.v','const.closSem.Closure_5'(s('type.option.option'('type.num.num'),'const.option.SOME_1'(s('type.num.num',X2))),s('type.list.list'('type.closSem.v'),X5),s('type.list.list'('type.closSem.v'),X3),s('type.num.num',X7),s('type.closLang.exp',X8))))),s('type.closSem.v','const.closSem.Closure_5'(s('type.option.option'('type.num.num'),'const.option.SOME_1'(s('type.num.num',X2))),s('type.list.list'('type.closSem.v'),X6),s('type.list.list'('type.closSem.v'),X4),s('type.num.num',X7),s('type.closLang.exp',X9)))))))),
  inference(ennf_transformation,[],[f65])).
fof(f65,plain,(
  ! [X0,X1,X2,X3,X4,X5,X6,X7,X8,X9] : ((p(s(bool,'const.list.LIST_REL_3'(s(fun('type.closSem.v',fun('type.closSem.v',bool)),'const.clos_relation.val_rel_2'(s('type.bool.itself'(X0),'const.bool.the_value_0'),s('type.num.num',X1))),s('type.list.list'('type.closSem.v'),X3),s('type.list.list'('type.closSem.v'),X4)))) & p(s(bool,'const.list.LIST_REL_3'(s(fun('type.closSem.v',fun('type.closSem.v',bool)),'const.clos_relation.val_rel_2'(s('type.bool.itself'(X0),'const.bool.the_value_0'),s('type.num.num',X1))),s('type.list.list'('type.closSem.v'),X5),s('type.list.list'('type.closSem.v'),X6)))) & p(s(bool,'const.clos_relation.exp_rel_3'(s('type.bool.itself'(X0),'const.bool.the_value_0'),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X9),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))))) => p(s(bool,happ(s(fun('type.closSem.v',bool),happ(s(fun('type.closSem.v',fun('type.closSem.v',bool)),'const.clos_relation.val_rel_2'(s('type.bool.itself'(X0),'const.bool.the_value_0'),s('type.num.num',X1))),s('type.closSem.v','const.closSem.Closure_5'(s('type.option.option'('type.num.num'),'const.option.SOME_1'(s('type.num.num',X2))),s('type.list.list'('type.closSem.v'),X5),s('type.list.list'('type.closSem.v'),X3),s('type.num.num',X7),s('type.closLang.exp',X8))))),s('type.closSem.v','const.closSem.Closure_5'(s('type.option.option'('type.num.num'),'const.option.SOME_1'(s('type.num.num',X2))),s('type.list.list'('type.closSem.v'),X6),s('type.list.list'('type.closSem.v'),X4),s('type.num.num',X7),s('type.closLang.exp',X9)))))))),
  inference(flattening,[],[f64])).
fof(f64,plain,(
  ! [X0] : ! [X1,X2,X3,X4,X5,X6,X7,X8,X9] : ((p(s(bool,'const.list.LIST_REL_3'(s(fun('type.closSem.v',fun('type.closSem.v',bool)),'const.clos_relation.val_rel_2'(s('type.bool.itself'(X0),'const.bool.the_value_0'),s('type.num.num',X1))),s('type.list.list'('type.closSem.v'),X3),s('type.list.list'('type.closSem.v'),X4)))) & p(s(bool,'const.list.LIST_REL_3'(s(fun('type.closSem.v',fun('type.closSem.v',bool)),'const.clos_relation.val_rel_2'(s('type.bool.itself'(X0),'const.bool.the_value_0'),s('type.num.num',X1))),s('type.list.list'('type.closSem.v'),X5),s('type.list.list'('type.closSem.v'),X6)))) & p(s(bool,'const.clos_relation.exp_rel_3'(s('type.bool.itself'(X0),'const.bool.the_value_0'),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X9),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))))) => p(s(bool,happ(s(fun('type.closSem.v',bool),happ(s(fun('type.closSem.v',fun('type.closSem.v',bool)),'const.clos_relation.val_rel_2'(s('type.bool.itself'(X0),'const.bool.the_value_0'),s('type.num.num',X1))),s('type.closSem.v','const.closSem.Closure_5'(s('type.option.option'('type.num.num'),'const.option.SOME_1'(s('type.num.num',X2))),s('type.list.list'('type.closSem.v'),X5),s('type.list.list'('type.closSem.v'),X3),s('type.num.num',X7),s('type.closLang.exp',X8))))),s('type.closSem.v','const.closSem.Closure_5'(s('type.option.option'('type.num.num'),'const.option.SOME_1'(s('type.num.num',X2))),s('type.list.list'('type.closSem.v'),X6),s('type.list.list'('type.closSem.v'),X4),s('type.num.num',X7),s('type.closLang.exp',X9)))))))),
  inference(rectify,[],[f22])).
fof(f22,axiom,(
  ! [X6] : ! [X7,X8,X9,X10,X11,X12,X13,X14,X15] : ((p(s(bool,'const.list.LIST_REL_3'(s(fun('type.closSem.v',fun('type.closSem.v',bool)),'const.clos_relation.val_rel_2'(s('type.bool.itself'(X6),'const.bool.the_value_0'),s('type.num.num',X7))),s('type.list.list'('type.closSem.v'),X9),s('type.list.list'('type.closSem.v'),X10)))) & p(s(bool,'const.list.LIST_REL_3'(s(fun('type.closSem.v',fun('type.closSem.v',bool)),'const.clos_relation.val_rel_2'(s('type.bool.itself'(X6),'const.bool.the_value_0'),s('type.num.num',X7))),s('type.list.list'('type.closSem.v'),X11),s('type.list.list'('type.closSem.v'),X12)))) & p(s(bool,'const.clos_relation.exp_rel_3'(s('type.bool.itself'(X6),'const.bool.the_value_0'),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X14),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X15),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))))) => p(s(bool,happ(s(fun('type.closSem.v',bool),happ(s(fun('type.closSem.v',fun('type.closSem.v',bool)),'const.clos_relation.val_rel_2'(s('type.bool.itself'(X6),'const.bool.the_value_0'),s('type.num.num',X7))),s('type.closSem.v','const.closSem.Closure_5'(s('type.option.option'('type.num.num'),'const.option.SOME_1'(s('type.num.num',X8))),s('type.list.list'('type.closSem.v'),X11),s('type.list.list'('type.closSem.v'),X9),s('type.num.num',X13),s('type.closLang.exp',X14))))),s('type.closSem.v','const.closSem.Closure_5'(s('type.option.option'('type.num.num'),'const.option.SOME_1'(s('type.num.num',X8))),s('type.list.list'('type.closSem.v'),X12),s('type.list.list'('type.closSem.v'),X10),s('type.num.num',X13),s('type.closLang.exp',X15)))))))),
  file('thm.clos_relation.compat_closure','thm.clos_relation.clos_relation_84_prove_ltb')).
fof(f383,plain,(
  ( ! [X0,X1] : (s('type.option.option'(X0),X1) = s('type.option.option'(X0),'const.option.SOME_1'(s(X0,sK22(X1,X0)))) | s('type.option.option'(X0),'const.option.NONE_0') = s('type.option.option'(X0),X1)) ) | $spl22),
  inference(cnf_transformation,[],[f383_D])).
fof(f383_D,plain,(
  ( ! [X0,X1] : (s('type.option.option'(X0),X1) = s('type.option.option'(X0),'const.option.SOME_1'(s(X0,sK22(X1,X0)))) | s('type.option.option'(X0),'const.option.NONE_0') = s('type.option.option'(X0),X1)) ) <=> ~$spl22),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl22])])).
fof(f243,plain,(
  ( ! [X0,X1] : (s('type.option.option'(X0),X1) = s('type.option.option'(X0),'const.option.SOME_1'(s(X0,sK22(X1,X0)))) | s('type.option.option'(X0),'const.option.NONE_0') = s('type.option.option'(X0),X1)) )),
  inference(cnf_transformation,[],[f149])).
fof(f149,plain,(
  ! [X0,X1] : (s('type.option.option'(X0),'const.option.NONE_0') = s('type.option.option'(X0),X1) | s('type.option.option'(X0),X1) = s('type.option.option'(X0),'const.option.SOME_1'(s(X0,sK22(X1,X0)))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK22])],[f62])).
fof(f62,plain,(
  ! [X0,X1] : (s('type.option.option'(X0),'const.option.NONE_0') = s('type.option.option'(X0),X1) | ? [X2] : s('type.option.option'(X0),X1) = s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X2))))),
  inference(flattening,[],[f61])).
fof(f61,plain,(
  ! [X0] : ! [X1] : (s('type.option.option'(X0),'const.option.NONE_0') = s('type.option.option'(X0),X1) | ? [X2] : s('type.option.option'(X0),X1) = s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X2))))),
  inference(rectify,[],[f23])).
fof(f23,axiom,(
  ! [X16] : ! [X20] : (s('type.option.option'(X16),'const.option.NONE_0') = s('type.option.option'(X16),X20) | ? [X18] : s('type.option.option'(X16),X20) = s('type.option.option'(X16),'const.option.SOME_1'(s(X16,X18))))),
  file('thm.clos_relation.compat_closure','thm.option.option_nchotomy')).
fof(f1812,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1,X9] : (p(s(bool,happ(s(fun('type.closSem.v',bool),happ(s(fun('type.closSem.v',fun('type.closSem.v',bool)),'const.clos_relation.val_rel_2'(s('type.bool.itself'(X1),'const.bool.the_value_0'),s('type.num.num',X2))),s('type.closSem.v','const.closSem.Closure_5'(s('type.option.option'('type.num.num'),X0),s('type.list.list'('type.closSem.v'),X3),s('type.list.list'('type.closSem.v'),X4),s('type.num.num',X5),s('type.closLang.exp',X6))))),s('type.closSem.v','const.closSem.Closure_5'(s('type.option.option'('type.num.num'),X0),s('type.list.list'('type.closSem.v'),X7),s('type.list.list'('type.closSem.v'),X8),s('type.num.num',X5),s('type.closLang.exp',X9)))))) | ~p(s(bool,'const.clos_relation.exp_rel_3'(s('type.bool.itself'(X1),'const.bool.the_value_0'),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X6),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X9),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,'const.list.LIST_REL_3'(s(fun('type.closSem.v',fun('type.closSem.v',bool)),'const.clos_relation.val_rel_2'(s('type.bool.itself'(X1),'const.bool.the_value_0'),s('type.num.num',X2))),s('type.list.list'('type.closSem.v'),X3),s('type.list.list'('type.closSem.v'),X7)))) | ~p(s(bool,'const.list.LIST_REL_3'(s(fun('type.closSem.v',fun('type.closSem.v',bool)),'const.clos_relation.val_rel_2'(s('type.bool.itself'(X1),'const.bool.the_value_0'),s('type.num.num',X2))),s('type.list.list'('type.closSem.v'),X4),s('type.list.list'('type.closSem.v'),X8)))) | s('type.option.option'('type.num.num'),'const.option.NONE_0') = s('type.option.option'('type.num.num'),X0)) ) | $spl688),
  inference(cnf_transformation,[],[f1812_D])).
fof(f1812_D,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1,X9] : (p(s(bool,happ(s(fun('type.closSem.v',bool),happ(s(fun('type.closSem.v',fun('type.closSem.v',bool)),'const.clos_relation.val_rel_2'(s('type.bool.itself'(X1),'const.bool.the_value_0'),s('type.num.num',X2))),s('type.closSem.v','const.closSem.Closure_5'(s('type.option.option'('type.num.num'),X0),s('type.list.list'('type.closSem.v'),X3),s('type.list.list'('type.closSem.v'),X4),s('type.num.num',X5),s('type.closLang.exp',X6))))),s('type.closSem.v','const.closSem.Closure_5'(s('type.option.option'('type.num.num'),X0),s('type.list.list'('type.closSem.v'),X7),s('type.list.list'('type.closSem.v'),X8),s('type.num.num',X5),s('type.closLang.exp',X9)))))) | ~p(s(bool,'const.clos_relation.exp_rel_3'(s('type.bool.itself'(X1),'const.bool.the_value_0'),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X6),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X9),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,'const.list.LIST_REL_3'(s(fun('type.closSem.v',fun('type.closSem.v',bool)),'const.clos_relation.val_rel_2'(s('type.bool.itself'(X1),'const.bool.the_value_0'),s('type.num.num',X2))),s('type.list.list'('type.closSem.v'),X3),s('type.list.list'('type.closSem.v'),X7)))) | ~p(s(bool,'const.list.LIST_REL_3'(s(fun('type.closSem.v',fun('type.closSem.v',bool)),'const.clos_relation.val_rel_2'(s('type.bool.itself'(X1),'const.bool.the_value_0'),s('type.num.num',X2))),s('type.list.list'('type.closSem.v'),X4),s('type.list.list'('type.closSem.v'),X8)))) | s('type.option.option'('type.num.num'),'const.option.NONE_0') = s('type.option.option'('type.num.num'),X0)) ) <=> ~$spl688),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl688])])).
fof(f1800,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1,X9] : (p(s(bool,happ(s(fun('type.closSem.v',bool),happ(s(fun('type.closSem.v',fun('type.closSem.v',bool)),'const.clos_relation.val_rel_2'(s('type.bool.itself'(X1),'const.bool.the_value_0'),s('type.num.num',X2))),s('type.closSem.v','const.closSem.Closure_5'(s('type.option.option'('type.num.num'),X0),s('type.list.list'('type.closSem.v'),X3),s('type.list.list'('type.closSem.v'),X4),s('type.num.num',X5),s('type.closLang.exp',X6))))),s('type.closSem.v','const.closSem.Closure_5'(s('type.option.option'('type.num.num'),X0),s('type.list.list'('type.closSem.v'),X7),s('type.list.list'('type.closSem.v'),X8),s('type.num.num',X5),s('type.closLang.exp',X9)))))) | ~p(s(bool,'const.clos_relation.exp_rel_3'(s('type.bool.itself'(X1),'const.bool.the_value_0'),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X6),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X9),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,'const.list.LIST_REL_3'(s(fun('type.closSem.v',fun('type.closSem.v',bool)),'const.clos_relation.val_rel_2'(s('type.bool.itself'(X1),'const.bool.the_value_0'),s('type.num.num',X2))),s('type.list.list'('type.closSem.v'),X3),s('type.list.list'('type.closSem.v'),X7)))) | ~p(s(bool,'const.list.LIST_REL_3'(s(fun('type.closSem.v',fun('type.closSem.v',bool)),'const.clos_relation.val_rel_2'(s('type.bool.itself'(X1),'const.bool.the_value_0'),s('type.num.num',X2))),s('type.list.list'('type.closSem.v'),X4),s('type.list.list'('type.closSem.v'),X8)))) | s('type.option.option'('type.num.num'),'const.option.NONE_0') = s('type.option.option'('type.num.num'),X0)) ) | ($spl22 | $spl24)),
  inference(superposition,[],[f384,f383])).
fof(f4666,plain,(
  s('type.option.option'('type.num.num'),'const.option.NONE_0') = s('type.option.option'('type.num.num'),sK14) | $spl1754),
  inference(cnf_transformation,[],[f4666_D])).
fof(f4666_D,plain,(
  s('type.option.option'('type.num.num'),'const.option.NONE_0') = s('type.option.option'('type.num.num'),sK14) <=> ~$spl1754),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1754])])).
fof(f4664,plain,(
  s('type.option.option'('type.num.num'),'const.option.NONE_0') = s('type.option.option'('type.num.num'),sK14) | ($spl8 | $spl11 | $spl186 | $spl188 | $spl190 | $spl528 | $spl688)),
  inference(subsumption_resolution,[],[f4663,f367])).
fof(f4663,plain,(
  ~p(s(bool,'T_0')) | s('type.option.option'('type.num.num'),'const.option.NONE_0') = s('type.option.option'('type.num.num'),sK14) | ($spl8 | $spl11 | $spl186 | $spl188 | $spl190 | $spl528 | $spl688)),
  inference(forward_demodulation,[],[f4662,f484])).
fof(f4662,plain,(
  ~p(s(bool,'const.list.LIST_REL_3'(s(fun('type.closSem.v',fun('type.closSem.v',bool)),'const.clos_relation.val_rel_2'(s('type.bool.itself'(sK12),'const.bool.the_value_0'),s('type.num.num',sK13))),s('type.list.list'('type.closSem.v'),sK15),s('type.list.list'('type.closSem.v'),sK16)))) | s('type.option.option'('type.num.num'),'const.option.NONE_0') = s('type.option.option'('type.num.num'),sK14) | ($spl8 | $spl11 | $spl186 | $spl190 | $spl528 | $spl688)),
  inference(subsumption_resolution,[],[f4661,f367])).
fof(f4661,plain,(
  ~p(s(bool,'T_0')) | ~p(s(bool,'const.list.LIST_REL_3'(s(fun('type.closSem.v',fun('type.closSem.v',bool)),'const.clos_relation.val_rel_2'(s('type.bool.itself'(sK12),'const.bool.the_value_0'),s('type.num.num',sK13))),s('type.list.list'('type.closSem.v'),sK15),s('type.list.list'('type.closSem.v'),sK16)))) | s('type.option.option'('type.num.num'),'const.option.NONE_0') = s('type.option.option'('type.num.num'),sK14) | ($spl8 | $spl11 | $spl186 | $spl190 | $spl528 | $spl688)),
  inference(forward_demodulation,[],[f4660,f482])).
fof(f4660,plain,(
  ~p(s(bool,'const.list.LIST_REL_3'(s(fun('type.closSem.v',fun('type.closSem.v',bool)),'const.clos_relation.val_rel_2'(s('type.bool.itself'(sK12),'const.bool.the_value_0'),s('type.num.num',sK13))),s('type.list.list'('type.closSem.v'),sK17),s('type.list.list'('type.closSem.v'),sK18)))) | ~p(s(bool,'const.list.LIST_REL_3'(s(fun('type.closSem.v',fun('type.closSem.v',bool)),'const.clos_relation.val_rel_2'(s('type.bool.itself'(sK12),'const.bool.the_value_0'),s('type.num.num',sK13))),s('type.list.list'('type.closSem.v'),sK15),s('type.list.list'('type.closSem.v'),sK16)))) | s('type.option.option'('type.num.num'),'const.option.NONE_0') = s('type.option.option'('type.num.num'),sK14) | ($spl8 | $spl11 | $spl190 | $spl528 | $spl688)),
  inference(subsumption_resolution,[],[f4659,f367])).
fof(f4659,plain,(
  ~p(s(bool,'T_0')) | ~p(s(bool,'const.list.LIST_REL_3'(s(fun('type.closSem.v',fun('type.closSem.v',bool)),'const.clos_relation.val_rel_2'(s('type.bool.itself'(sK12),'const.bool.the_value_0'),s('type.num.num',sK13))),s('type.list.list'('type.closSem.v'),sK17),s('type.list.list'('type.closSem.v'),sK18)))) | ~p(s(bool,'const.list.LIST_REL_3'(s(fun('type.closSem.v',fun('type.closSem.v',bool)),'const.clos_relation.val_rel_2'(s('type.bool.itself'(sK12),'const.bool.the_value_0'),s('type.num.num',sK13))),s('type.list.list'('type.closSem.v'),sK15),s('type.list.list'('type.closSem.v'),sK16)))) | s('type.option.option'('type.num.num'),'const.option.NONE_0') = s('type.option.option'('type.num.num'),sK14) | ($spl11 | $spl190 | $spl528 | $spl688)),
  inference(forward_demodulation,[],[f4658,f486])).
fof(f4658,plain,(
  ~p(s(bool,'const.clos_relation.exp_rel_3'(s('type.bool.itself'(sK12),'const.bool.the_value_0'),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK20),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK21),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,'const.list.LIST_REL_3'(s(fun('type.closSem.v',fun('type.closSem.v',bool)),'const.clos_relation.val_rel_2'(s('type.bool.itself'(sK12),'const.bool.the_value_0'),s('type.num.num',sK13))),s('type.list.list'('type.closSem.v'),sK17),s('type.list.list'('type.closSem.v'),sK18)))) | ~p(s(bool,'const.list.LIST_REL_3'(s(fun('type.closSem.v',fun('type.closSem.v',bool)),'const.clos_relation.val_rel_2'(s('type.bool.itself'(sK12),'const.bool.the_value_0'),s('type.num.num',sK13))),s('type.list.list'('type.closSem.v'),sK15),s('type.list.list'('type.closSem.v'),sK16)))) | s('type.option.option'('type.num.num'),'const.option.NONE_0') = s('type.option.option'('type.num.num'),sK14) | ($spl11 | $spl528 | $spl688)),
  inference(subsumption_resolution,[],[f4637,f370])).
fof(f4637,plain,(
  p(s(bool,'F_0')) | ~p(s(bool,'const.clos_relation.exp_rel_3'(s('type.bool.itself'(sK12),'const.bool.the_value_0'),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK20),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK21),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,'const.list.LIST_REL_3'(s(fun('type.closSem.v',fun('type.closSem.v',bool)),'const.clos_relation.val_rel_2'(s('type.bool.itself'(sK12),'const.bool.the_value_0'),s('type.num.num',sK13))),s('type.list.list'('type.closSem.v'),sK17),s('type.list.list'('type.closSem.v'),sK18)))) | ~p(s(bool,'const.list.LIST_REL_3'(s(fun('type.closSem.v',fun('type.closSem.v',bool)),'const.clos_relation.val_rel_2'(s('type.bool.itself'(sK12),'const.bool.the_value_0'),s('type.num.num',sK13))),s('type.list.list'('type.closSem.v'),sK15),s('type.list.list'('type.closSem.v'),sK16)))) | s('type.option.option'('type.num.num'),'const.option.NONE_0') = s('type.option.option'('type.num.num'),sK14) | ($spl528 | $spl688)),
  inference(superposition,[],[f1812,f1578])).
fof(f377,plain,(
  ( ! [X0] : (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)) ) | $spl18),
  inference(cnf_transformation,[],[f377_D])).
fof(f377_D,plain,(
  ( ! [X0] : (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)) ) <=> ~$spl18),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl18])])).
fof(f221,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f135])).
fof(f135,plain,(
  ! [X0] : ((s(bool,'F_0') != s(bool,X0) | ~p(s(bool,X0))) & (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f48])).
fof(f48,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(flattening,[],[f47])).
fof(f47,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(rectify,[],[f20])).
fof(f20,axiom,(
  ! [X17] : (s(bool,'F_0') = s(bool,X17) <=> ~p(s(bool,X17)))),
  file('thm.clos_relation.compat_closure','thm.bool.EQ_CLAUSES|split|3')).
fof(f359,plain,(
  ~p(s(bool,happ(s(fun('type.closSem.v',bool),happ(s(fun('type.closSem.v',fun('type.closSem.v',bool)),'const.clos_relation.val_rel_2'(s('type.bool.itself'(sK12),'const.bool.the_value_0'),s('type.num.num',sK13))),s('type.closSem.v','const.closSem.Closure_5'(s('type.option.option'('type.num.num'),sK14),s('type.list.list'('type.closSem.v'),sK17),s('type.list.list'('type.closSem.v'),sK15),s('type.num.num',sK19),s('type.closLang.exp',sK20))))),s('type.closSem.v','const.closSem.Closure_5'(s('type.option.option'('type.num.num'),sK14),s('type.list.list'('type.closSem.v'),sK18),s('type.list.list'('type.closSem.v'),sK16),s('type.num.num',sK19),s('type.closLang.exp',sK21)))))) | $spl1),
  inference(cnf_transformation,[],[f359_D])).
fof(f359_D,plain,(
  ~p(s(bool,happ(s(fun('type.closSem.v',bool),happ(s(fun('type.closSem.v',fun('type.closSem.v',bool)),'const.clos_relation.val_rel_2'(s('type.bool.itself'(sK12),'const.bool.the_value_0'),s('type.num.num',sK13))),s('type.closSem.v','const.closSem.Closure_5'(s('type.option.option'('type.num.num'),sK14),s('type.list.list'('type.closSem.v'),sK17),s('type.list.list'('type.closSem.v'),sK15),s('type.num.num',sK19),s('type.closLang.exp',sK20))))),s('type.closSem.v','const.closSem.Closure_5'(s('type.option.option'('type.num.num'),sK14),s('type.list.list'('type.closSem.v'),sK18),s('type.list.list'('type.closSem.v'),sK16),s('type.num.num',sK19),s('type.closLang.exp',sK21)))))) <=> ~$spl1),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1])])).
fof(f202,plain,(
  ~p(s(bool,happ(s(fun('type.closSem.v',bool),happ(s(fun('type.closSem.v',fun('type.closSem.v',bool)),'const.clos_relation.val_rel_2'(s('type.bool.itself'(sK12),'const.bool.the_value_0'),s('type.num.num',sK13))),s('type.closSem.v','const.closSem.Closure_5'(s('type.option.option'('type.num.num'),sK14),s('type.list.list'('type.closSem.v'),sK17),s('type.list.list'('type.closSem.v'),sK15),s('type.num.num',sK19),s('type.closLang.exp',sK20))))),s('type.closSem.v','const.closSem.Closure_5'(s('type.option.option'('type.num.num'),sK14),s('type.list.list'('type.closSem.v'),sK18),s('type.list.list'('type.closSem.v'),sK16),s('type.num.num',sK19),s('type.closLang.exp',sK21))))))),
  inference(cnf_transformation,[],[f130])).
fof(f130,plain,(
  p(s(bool,'const.list.LIST_REL_3'(s(fun('type.closSem.v',fun('type.closSem.v',bool)),'const.clos_relation.val_rel_2'(s('type.bool.itself'(sK12),'const.bool.the_value_0'),s('type.num.num',sK13))),s('type.list.list'('type.closSem.v'),sK15),s('type.list.list'('type.closSem.v'),sK16)))) & p(s(bool,'const.list.LIST_REL_3'(s(fun('type.closSem.v',fun('type.closSem.v',bool)),'const.clos_relation.val_rel_2'(s('type.bool.itself'(sK12),'const.bool.the_value_0'),s('type.num.num',sK13))),s('type.list.list'('type.closSem.v'),sK17),s('type.list.list'('type.closSem.v'),sK18)))) & p(s(bool,'const.clos_relation.exp_rel_3'(s('type.bool.itself'(sK12),'const.bool.the_value_0'),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK20),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK21),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) & ~p(s(bool,happ(s(fun('type.closSem.v',bool),happ(s(fun('type.closSem.v',fun('type.closSem.v',bool)),'const.clos_relation.val_rel_2'(s('type.bool.itself'(sK12),'const.bool.the_value_0'),s('type.num.num',sK13))),s('type.closSem.v','const.closSem.Closure_5'(s('type.option.option'('type.num.num'),sK14),s('type.list.list'('type.closSem.v'),sK17),s('type.list.list'('type.closSem.v'),sK15),s('type.num.num',sK19),s('type.closLang.exp',sK20))))),s('type.closSem.v','const.closSem.Closure_5'(s('type.option.option'('type.num.num'),sK14),s('type.list.list'('type.closSem.v'),sK18),s('type.list.list'('type.closSem.v'),sK16),s('type.num.num',sK19),s('type.closLang.exp',sK21))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK12,sK13,sK14,sK15,sK16,sK17,sK18,sK19,sK20,sK21])],[f88])).
fof(f88,plain,(
  ? [X0,X1,X2,X3,X4,X5,X6,X7,X8,X9] : (p(s(bool,'const.list.LIST_REL_3'(s(fun('type.closSem.v',fun('type.closSem.v',bool)),'const.clos_relation.val_rel_2'(s('type.bool.itself'(X0),'const.bool.the_value_0'),s('type.num.num',X1))),s('type.list.list'('type.closSem.v'),X3),s('type.list.list'('type.closSem.v'),X4)))) & p(s(bool,'const.list.LIST_REL_3'(s(fun('type.closSem.v',fun('type.closSem.v',bool)),'const.clos_relation.val_rel_2'(s('type.bool.itself'(X0),'const.bool.the_value_0'),s('type.num.num',X1))),s('type.list.list'('type.closSem.v'),X5),s('type.list.list'('type.closSem.v'),X6)))) & p(s(bool,'const.clos_relation.exp_rel_3'(s('type.bool.itself'(X0),'const.bool.the_value_0'),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X9),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) & ~p(s(bool,happ(s(fun('type.closSem.v',bool),happ(s(fun('type.closSem.v',fun('type.closSem.v',bool)),'const.clos_relation.val_rel_2'(s('type.bool.itself'(X0),'const.bool.the_value_0'),s('type.num.num',X1))),s('type.closSem.v','const.closSem.Closure_5'(s('type.option.option'('type.num.num'),X2),s('type.list.list'('type.closSem.v'),X5),s('type.list.list'('type.closSem.v'),X3),s('type.num.num',X7),s('type.closLang.exp',X8))))),s('type.closSem.v','const.closSem.Closure_5'(s('type.option.option'('type.num.num'),X2),s('type.list.list'('type.closSem.v'),X6),s('type.list.list'('type.closSem.v'),X4),s('type.num.num',X7),s('type.closLang.exp',X9)))))))),
  inference(flattening,[],[f87])).
fof(f87,plain,(
  ? [X0,X1,X2,X3,X4,X5,X6,X7,X8,X9] : ((p(s(bool,'const.list.LIST_REL_3'(s(fun('type.closSem.v',fun('type.closSem.v',bool)),'const.clos_relation.val_rel_2'(s('type.bool.itself'(X0),'const.bool.the_value_0'),s('type.num.num',X1))),s('type.list.list'('type.closSem.v'),X3),s('type.list.list'('type.closSem.v'),X4)))) & p(s(bool,'const.list.LIST_REL_3'(s(fun('type.closSem.v',fun('type.closSem.v',bool)),'const.clos_relation.val_rel_2'(s('type.bool.itself'(X0),'const.bool.the_value_0'),s('type.num.num',X1))),s('type.list.list'('type.closSem.v'),X5),s('type.list.list'('type.closSem.v'),X6)))) & p(s(bool,'const.clos_relation.exp_rel_3'(s('type.bool.itself'(X0),'const.bool.the_value_0'),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X9),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))))) & ~p(s(bool,happ(s(fun('type.closSem.v',bool),happ(s(fun('type.closSem.v',fun('type.closSem.v',bool)),'const.clos_relation.val_rel_2'(s('type.bool.itself'(X0),'const.bool.the_value_0'),s('type.num.num',X1))),s('type.closSem.v','const.closSem.Closure_5'(s('type.option.option'('type.num.num'),X2),s('type.list.list'('type.closSem.v'),X5),s('type.list.list'('type.closSem.v'),X3),s('type.num.num',X7),s('type.closLang.exp',X8))))),s('type.closSem.v','const.closSem.Closure_5'(s('type.option.option'('type.num.num'),X2),s('type.list.list'('type.closSem.v'),X6),s('type.list.list'('type.closSem.v'),X4),s('type.num.num',X7),s('type.closLang.exp',X9)))))))),
  inference(ennf_transformation,[],[f37])).
fof(f37,plain,(
  ~! [X0,X1,X2,X3,X4,X5,X6,X7,X8,X9] : ((p(s(bool,'const.list.LIST_REL_3'(s(fun('type.closSem.v',fun('type.closSem.v',bool)),'const.clos_relation.val_rel_2'(s('type.bool.itself'(X0),'const.bool.the_value_0'),s('type.num.num',X1))),s('type.list.list'('type.closSem.v'),X3),s('type.list.list'('type.closSem.v'),X4)))) & p(s(bool,'const.list.LIST_REL_3'(s(fun('type.closSem.v',fun('type.closSem.v',bool)),'const.clos_relation.val_rel_2'(s('type.bool.itself'(X0),'const.bool.the_value_0'),s('type.num.num',X1))),s('type.list.list'('type.closSem.v'),X5),s('type.list.list'('type.closSem.v'),X6)))) & p(s(bool,'const.clos_relation.exp_rel_3'(s('type.bool.itself'(X0),'const.bool.the_value_0'),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X9),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))))) => p(s(bool,happ(s(fun('type.closSem.v',bool),happ(s(fun('type.closSem.v',fun('type.closSem.v',bool)),'const.clos_relation.val_rel_2'(s('type.bool.itself'(X0),'const.bool.the_value_0'),s('type.num.num',X1))),s('type.closSem.v','const.closSem.Closure_5'(s('type.option.option'('type.num.num'),X2),s('type.list.list'('type.closSem.v'),X5),s('type.list.list'('type.closSem.v'),X3),s('type.num.num',X7),s('type.closLang.exp',X8))))),s('type.closSem.v','const.closSem.Closure_5'(s('type.option.option'('type.num.num'),X2),s('type.list.list'('type.closSem.v'),X6),s('type.list.list'('type.closSem.v'),X4),s('type.num.num',X7),s('type.closLang.exp',X9)))))))),
  inference(flattening,[],[f36])).
fof(f36,plain,(
  ~! [X0] : ! [X1,X2,X3,X4,X5,X6,X7,X8,X9] : ((p(s(bool,'const.list.LIST_REL_3'(s(fun('type.closSem.v',fun('type.closSem.v',bool)),'const.clos_relation.val_rel_2'(s('type.bool.itself'(X0),'const.bool.the_value_0'),s('type.num.num',X1))),s('type.list.list'('type.closSem.v'),X3),s('type.list.list'('type.closSem.v'),X4)))) & p(s(bool,'const.list.LIST_REL_3'(s(fun('type.closSem.v',fun('type.closSem.v',bool)),'const.clos_relation.val_rel_2'(s('type.bool.itself'(X0),'const.bool.the_value_0'),s('type.num.num',X1))),s('type.list.list'('type.closSem.v'),X5),s('type.list.list'('type.closSem.v'),X6)))) & p(s(bool,'const.clos_relation.exp_rel_3'(s('type.bool.itself'(X0),'const.bool.the_value_0'),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X9),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))))) => p(s(bool,happ(s(fun('type.closSem.v',bool),happ(s(fun('type.closSem.v',fun('type.closSem.v',bool)),'const.clos_relation.val_rel_2'(s('type.bool.itself'(X0),'const.bool.the_value_0'),s('type.num.num',X1))),s('type.closSem.v','const.closSem.Closure_5'(s('type.option.option'('type.num.num'),X2),s('type.list.list'('type.closSem.v'),X5),s('type.list.list'('type.closSem.v'),X3),s('type.num.num',X7),s('type.closLang.exp',X8))))),s('type.closSem.v','const.closSem.Closure_5'(s('type.option.option'('type.num.num'),X2),s('type.list.list'('type.closSem.v'),X6),s('type.list.list'('type.closSem.v'),X4),s('type.num.num',X7),s('type.closLang.exp',X9)))))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : ! [X7,X8,X9,X10,X11,X12,X13,X14,X15] : ((p(s(bool,'const.list.LIST_REL_3'(s(fun('type.closSem.v',fun('type.closSem.v',bool)),'const.clos_relation.val_rel_2'(s('type.bool.itself'(X6),'const.bool.the_value_0'),s('type.num.num',X7))),s('type.list.list'('type.closSem.v'),X9),s('type.list.list'('type.closSem.v'),X10)))) & p(s(bool,'const.list.LIST_REL_3'(s(fun('type.closSem.v',fun('type.closSem.v',bool)),'const.clos_relation.val_rel_2'(s('type.bool.itself'(X6),'const.bool.the_value_0'),s('type.num.num',X7))),s('type.list.list'('type.closSem.v'),X11),s('type.list.list'('type.closSem.v'),X12)))) & p(s(bool,'const.clos_relation.exp_rel_3'(s('type.bool.itself'(X6),'const.bool.the_value_0'),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X14),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X15),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))))) => p(s(bool,happ(s(fun('type.closSem.v',bool),happ(s(fun('type.closSem.v',fun('type.closSem.v',bool)),'const.clos_relation.val_rel_2'(s('type.bool.itself'(X6),'const.bool.the_value_0'),s('type.num.num',X7))),s('type.closSem.v','const.closSem.Closure_5'(s('type.option.option'('type.num.num'),X8),s('type.list.list'('type.closSem.v'),X11),s('type.list.list'('type.closSem.v'),X9),s('type.num.num',X13),s('type.closLang.exp',X14))))),s('type.closSem.v','const.closSem.Closure_5'(s('type.option.option'('type.num.num'),X8),s('type.list.list'('type.closSem.v'),X12),s('type.list.list'('type.closSem.v'),X10),s('type.num.num',X13),s('type.closLang.exp',X15)))))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : ! [X7,X8,X9,X10,X11,X12,X13,X14,X15] : ((p(s(bool,'const.list.LIST_REL_3'(s(fun('type.closSem.v',fun('type.closSem.v',bool)),'const.clos_relation.val_rel_2'(s('type.bool.itself'(X6),'const.bool.the_value_0'),s('type.num.num',X7))),s('type.list.list'('type.closSem.v'),X9),s('type.list.list'('type.closSem.v'),X10)))) & p(s(bool,'const.list.LIST_REL_3'(s(fun('type.closSem.v',fun('type.closSem.v',bool)),'const.clos_relation.val_rel_2'(s('type.bool.itself'(X6),'const.bool.the_value_0'),s('type.num.num',X7))),s('type.list.list'('type.closSem.v'),X11),s('type.list.list'('type.closSem.v'),X12)))) & p(s(bool,'const.clos_relation.exp_rel_3'(s('type.bool.itself'(X6),'const.bool.the_value_0'),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X14),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X15),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))))) => p(s(bool,happ(s(fun('type.closSem.v',bool),happ(s(fun('type.closSem.v',fun('type.closSem.v',bool)),'const.clos_relation.val_rel_2'(s('type.bool.itself'(X6),'const.bool.the_value_0'),s('type.num.num',X7))),s('type.closSem.v','const.closSem.Closure_5'(s('type.option.option'('type.num.num'),X8),s('type.list.list'('type.closSem.v'),X11),s('type.list.list'('type.closSem.v'),X9),s('type.num.num',X13),s('type.closLang.exp',X14))))),s('type.closSem.v','const.closSem.Closure_5'(s('type.option.option'('type.num.num'),X8),s('type.list.list'('type.closSem.v'),X12),s('type.list.list'('type.closSem.v'),X10),s('type.num.num',X13),s('type.closLang.exp',X15)))))))),
  file('thm.clos_relation.compat_closure','thm.clos_relation.compat_closure')).
fof(f1578,plain,(
  s(bool,'F_0') = s(bool,happ(s(fun('type.closSem.v',bool),happ(s(fun('type.closSem.v',fun('type.closSem.v',bool)),'const.clos_relation.val_rel_2'(s('type.bool.itself'(sK12),'const.bool.the_value_0'),s('type.num.num',sK13))),s('type.closSem.v','const.closSem.Closure_5'(s('type.option.option'('type.num.num'),sK14),s('type.list.list'('type.closSem.v'),sK17),s('type.list.list'('type.closSem.v'),sK15),s('type.num.num',sK19),s('type.closLang.exp',sK20))))),s('type.closSem.v','const.closSem.Closure_5'(s('type.option.option'('type.num.num'),sK14),s('type.list.list'('type.closSem.v'),sK18),s('type.list.list'('type.closSem.v'),sK16),s('type.num.num',sK19),s('type.closLang.exp',sK21))))) | $spl528),
  inference(cnf_transformation,[],[f1578_D])).
fof(f1578_D,plain,(
  s(bool,'F_0') = s(bool,happ(s(fun('type.closSem.v',bool),happ(s(fun('type.closSem.v',fun('type.closSem.v',bool)),'const.clos_relation.val_rel_2'(s('type.bool.itself'(sK12),'const.bool.the_value_0'),s('type.num.num',sK13))),s('type.closSem.v','const.closSem.Closure_5'(s('type.option.option'('type.num.num'),sK14),s('type.list.list'('type.closSem.v'),sK17),s('type.list.list'('type.closSem.v'),sK15),s('type.num.num',sK19),s('type.closLang.exp',sK20))))),s('type.closSem.v','const.closSem.Closure_5'(s('type.option.option'('type.num.num'),sK14),s('type.list.list'('type.closSem.v'),sK18),s('type.list.list'('type.closSem.v'),sK16),s('type.num.num',sK19),s('type.closLang.exp',sK21))))) <=> ~$spl528),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl528])])).
fof(f1560,plain,(
  s(bool,'F_0') = s(bool,happ(s(fun('type.closSem.v',bool),happ(s(fun('type.closSem.v',fun('type.closSem.v',bool)),'const.clos_relation.val_rel_2'(s('type.bool.itself'(sK12),'const.bool.the_value_0'),s('type.num.num',sK13))),s('type.closSem.v','const.closSem.Closure_5'(s('type.option.option'('type.num.num'),sK14),s('type.list.list'('type.closSem.v'),sK17),s('type.list.list'('type.closSem.v'),sK15),s('type.num.num',sK19),s('type.closLang.exp',sK20))))),s('type.closSem.v','const.closSem.Closure_5'(s('type.option.option'('type.num.num'),sK14),s('type.list.list'('type.closSem.v'),sK18),s('type.list.list'('type.closSem.v'),sK16),s('type.num.num',sK19),s('type.closLang.exp',sK21))))) | ($spl1 | $spl18)),
  inference(resolution,[],[f359,f377])).
fof(f4697,plain,(
  s(bool,'F_0') = s(bool,happ(s(fun('type.closSem.v',bool),happ(s(fun('type.closSem.v',fun('type.closSem.v',bool)),'const.clos_relation.val_rel_2'(s('type.bool.itself'(sK12),'const.bool.the_value_0'),s('type.num.num',sK13))),s('type.closSem.v','const.closSem.Closure_5'(s('type.option.option'('type.num.num'),'const.option.NONE_0'),s('type.list.list'('type.closSem.v'),sK17),s('type.list.list'('type.closSem.v'),sK15),s('type.num.num',sK19),s('type.closLang.exp',sK20))))),s('type.closSem.v','const.closSem.Closure_5'(s('type.option.option'('type.num.num'),'const.option.NONE_0'),s('type.list.list'('type.closSem.v'),sK18),s('type.list.list'('type.closSem.v'),sK16),s('type.num.num',sK19),s('type.closLang.exp',sK21))))) | $spl1758),
  inference(cnf_transformation,[],[f4697_D])).
fof(f4697_D,plain,(
  s(bool,'F_0') = s(bool,happ(s(fun('type.closSem.v',bool),happ(s(fun('type.closSem.v',fun('type.closSem.v',bool)),'const.clos_relation.val_rel_2'(s('type.bool.itself'(sK12),'const.bool.the_value_0'),s('type.num.num',sK13))),s('type.closSem.v','const.closSem.Closure_5'(s('type.option.option'('type.num.num'),'const.option.NONE_0'),s('type.list.list'('type.closSem.v'),sK17),s('type.list.list'('type.closSem.v'),sK15),s('type.num.num',sK19),s('type.closLang.exp',sK20))))),s('type.closSem.v','const.closSem.Closure_5'(s('type.option.option'('type.num.num'),'const.option.NONE_0'),s('type.list.list'('type.closSem.v'),sK18),s('type.list.list'('type.closSem.v'),sK16),s('type.num.num',sK19),s('type.closLang.exp',sK21))))) <=> ~$spl1758),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1758])])).
fof(f4671,plain,(
  s(bool,'F_0') = s(bool,happ(s(fun('type.closSem.v',bool),happ(s(fun('type.closSem.v',fun('type.closSem.v',bool)),'const.clos_relation.val_rel_2'(s('type.bool.itself'(sK12),'const.bool.the_value_0'),s('type.num.num',sK13))),s('type.closSem.v','const.closSem.Closure_5'(s('type.option.option'('type.num.num'),'const.option.NONE_0'),s('type.list.list'('type.closSem.v'),sK17),s('type.list.list'('type.closSem.v'),sK15),s('type.num.num',sK19),s('type.closLang.exp',sK20))))),s('type.closSem.v','const.closSem.Closure_5'(s('type.option.option'('type.num.num'),'const.option.NONE_0'),s('type.list.list'('type.closSem.v'),sK18),s('type.list.list'('type.closSem.v'),sK16),s('type.num.num',sK19),s('type.closLang.exp',sK21))))) | ($spl528 | $spl1754)),
  inference(backward_demodulation,[],[f4666,f1578])).
fof(f361,plain,(
  p(s(bool,'const.clos_relation.exp_rel_3'(s('type.bool.itself'(sK12),'const.bool.the_value_0'),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK20),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK21),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | $spl2),
  inference(cnf_transformation,[],[f361_D])).
fof(f361_D,plain,(
  p(s(bool,'const.clos_relation.exp_rel_3'(s('type.bool.itself'(sK12),'const.bool.the_value_0'),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK20),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK21),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) <=> ~$spl2),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl2])])).
fof(f201,plain,(
  p(s(bool,'const.clos_relation.exp_rel_3'(s('type.bool.itself'(sK12),'const.bool.the_value_0'),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK20),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK21),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))))),
  inference(cnf_transformation,[],[f130])).
fof(f486,plain,(
  s(bool,'T_0') = s(bool,'const.clos_relation.exp_rel_3'(s('type.bool.itself'(sK12),'const.bool.the_value_0'),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK20),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK21),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | $spl190),
  inference(cnf_transformation,[],[f486_D])).
fof(f486_D,plain,(
  s(bool,'T_0') = s(bool,'const.clos_relation.exp_rel_3'(s('type.bool.itself'(sK12),'const.bool.the_value_0'),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK20),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK21),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) <=> ~$spl190),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl190])])).
fof(f480,plain,(
  s(bool,'T_0') = s(bool,'const.clos_relation.exp_rel_3'(s('type.bool.itself'(sK12),'const.bool.the_value_0'),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK20),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK21),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | ($spl2 | $spl14)),
  inference(resolution,[],[f375,f361])).
fof(f365,plain,(
  p(s(bool,'const.list.LIST_REL_3'(s(fun('type.closSem.v',fun('type.closSem.v',bool)),'const.clos_relation.val_rel_2'(s('type.bool.itself'(sK12),'const.bool.the_value_0'),s('type.num.num',sK13))),s('type.list.list'('type.closSem.v'),sK15),s('type.list.list'('type.closSem.v'),sK16)))) | $spl6),
  inference(cnf_transformation,[],[f365_D])).
fof(f365_D,plain,(
  p(s(bool,'const.list.LIST_REL_3'(s(fun('type.closSem.v',fun('type.closSem.v',bool)),'const.clos_relation.val_rel_2'(s('type.bool.itself'(sK12),'const.bool.the_value_0'),s('type.num.num',sK13))),s('type.list.list'('type.closSem.v'),sK15),s('type.list.list'('type.closSem.v'),sK16)))) <=> ~$spl6),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl6])])).
fof(f199,plain,(
  p(s(bool,'const.list.LIST_REL_3'(s(fun('type.closSem.v',fun('type.closSem.v',bool)),'const.clos_relation.val_rel_2'(s('type.bool.itself'(sK12),'const.bool.the_value_0'),s('type.num.num',sK13))),s('type.list.list'('type.closSem.v'),sK15),s('type.list.list'('type.closSem.v'),sK16))))),
  inference(cnf_transformation,[],[f130])).
fof(f484,plain,(
  s(bool,'T_0') = s(bool,'const.list.LIST_REL_3'(s(fun('type.closSem.v',fun('type.closSem.v',bool)),'const.clos_relation.val_rel_2'(s('type.bool.itself'(sK12),'const.bool.the_value_0'),s('type.num.num',sK13))),s('type.list.list'('type.closSem.v'),sK15),s('type.list.list'('type.closSem.v'),sK16))) | $spl188),
  inference(cnf_transformation,[],[f484_D])).
fof(f484_D,plain,(
  s(bool,'T_0') = s(bool,'const.list.LIST_REL_3'(s(fun('type.closSem.v',fun('type.closSem.v',bool)),'const.clos_relation.val_rel_2'(s('type.bool.itself'(sK12),'const.bool.the_value_0'),s('type.num.num',sK13))),s('type.list.list'('type.closSem.v'),sK15),s('type.list.list'('type.closSem.v'),sK16))) <=> ~$spl188),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl188])])).
fof(f479,plain,(
  s(bool,'T_0') = s(bool,'const.list.LIST_REL_3'(s(fun('type.closSem.v',fun('type.closSem.v',bool)),'const.clos_relation.val_rel_2'(s('type.bool.itself'(sK12),'const.bool.the_value_0'),s('type.num.num',sK13))),s('type.list.list'('type.closSem.v'),sK15),s('type.list.list'('type.closSem.v'),sK16))) | ($spl6 | $spl14)),
  inference(resolution,[],[f375,f365])).
fof(f375,plain,(
  ( ! [X0] : (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)) ) | $spl14),
  inference(cnf_transformation,[],[f375_D])).
fof(f375_D,plain,(
  ( ! [X0] : (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)) ) <=> ~$spl14),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl14])])).
fof(f217,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f133])).
fof(f133,plain,(
  ! [X0] : ((s(bool,'T_0') != s(bool,X0) | p(s(bool,X0))) & (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f45])).
fof(f45,plain,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) <=> p(s(bool,X0)))),
  inference(rectify,[],[f17])).
fof(f17,axiom,(
  ! [X17] : (s(bool,'T_0') = s(bool,X17) <=> p(s(bool,X17)))),
  file('thm.clos_relation.compat_closure','thm.bool.EQ_CLAUSES|split|0')).
fof(f363,plain,(
  p(s(bool,'const.list.LIST_REL_3'(s(fun('type.closSem.v',fun('type.closSem.v',bool)),'const.clos_relation.val_rel_2'(s('type.bool.itself'(sK12),'const.bool.the_value_0'),s('type.num.num',sK13))),s('type.list.list'('type.closSem.v'),sK17),s('type.list.list'('type.closSem.v'),sK18)))) | $spl4),
  inference(cnf_transformation,[],[f363_D])).
fof(f363_D,plain,(
  p(s(bool,'const.list.LIST_REL_3'(s(fun('type.closSem.v',fun('type.closSem.v',bool)),'const.clos_relation.val_rel_2'(s('type.bool.itself'(sK12),'const.bool.the_value_0'),s('type.num.num',sK13))),s('type.list.list'('type.closSem.v'),sK17),s('type.list.list'('type.closSem.v'),sK18)))) <=> ~$spl4),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl4])])).
fof(f200,plain,(
  p(s(bool,'const.list.LIST_REL_3'(s(fun('type.closSem.v',fun('type.closSem.v',bool)),'const.clos_relation.val_rel_2'(s('type.bool.itself'(sK12),'const.bool.the_value_0'),s('type.num.num',sK13))),s('type.list.list'('type.closSem.v'),sK17),s('type.list.list'('type.closSem.v'),sK18))))),
  inference(cnf_transformation,[],[f130])).
fof(f482,plain,(
  s(bool,'T_0') = s(bool,'const.list.LIST_REL_3'(s(fun('type.closSem.v',fun('type.closSem.v',bool)),'const.clos_relation.val_rel_2'(s('type.bool.itself'(sK12),'const.bool.the_value_0'),s('type.num.num',sK13))),s('type.list.list'('type.closSem.v'),sK17),s('type.list.list'('type.closSem.v'),sK18))) | $spl186),
  inference(cnf_transformation,[],[f482_D])).
fof(f482_D,plain,(
  s(bool,'T_0') = s(bool,'const.list.LIST_REL_3'(s(fun('type.closSem.v',fun('type.closSem.v',bool)),'const.clos_relation.val_rel_2'(s('type.bool.itself'(sK12),'const.bool.the_value_0'),s('type.num.num',sK13))),s('type.list.list'('type.closSem.v'),sK17),s('type.list.list'('type.closSem.v'),sK18))) <=> ~$spl186),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl186])])).
fof(f478,plain,(
  s(bool,'T_0') = s(bool,'const.list.LIST_REL_3'(s(fun('type.closSem.v',fun('type.closSem.v',bool)),'const.clos_relation.val_rel_2'(s('type.bool.itself'(sK12),'const.bool.the_value_0'),s('type.num.num',sK13))),s('type.list.list'('type.closSem.v'),sK17),s('type.list.list'('type.closSem.v'),sK18))) | ($spl4 | $spl14)),
  inference(resolution,[],[f375,f363])).
fof(f398,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1] : (p(s(bool,happ(s(fun('type.closSem.v',bool),happ(s(fun('type.closSem.v',fun('type.closSem.v',bool)),'const.clos_relation.val_rel_2'(s('type.bool.itself'(X0),'const.bool.the_value_0'),s('type.num.num',X1))),s('type.closSem.v','const.closSem.Closure_5'(s('type.option.option'('type.num.num'),'const.option.NONE_0'),s('type.list.list'('type.closSem.v'),X4),s('type.list.list'('type.closSem.v'),X2),s('type.num.num',X6),s('type.closLang.exp',X7))))),s('type.closSem.v','const.closSem.Closure_5'(s('type.option.option'('type.num.num'),'const.option.NONE_0'),s('type.list.list'('type.closSem.v'),X5),s('type.list.list'('type.closSem.v'),X3),s('type.num.num',X6),s('type.closLang.exp',X8)))))) | ~p(s(bool,'const.list.LIST_REL_3'(s(fun('type.closSem.v',fun('type.closSem.v',bool)),'const.clos_relation.val_rel_2'(s('type.bool.itself'(X0),'const.bool.the_value_0'),s('type.num.num',X1))),s('type.list.list'('type.closSem.v'),X4),s('type.list.list'('type.closSem.v'),X5)))) | ~p(s(bool,'const.list.LIST_REL_3'(s(fun('type.closSem.v',fun('type.closSem.v',bool)),'const.clos_relation.val_rel_2'(s('type.bool.itself'(X0),'const.bool.the_value_0'),s('type.num.num',X1))),s('type.list.list'('type.closSem.v'),X2),s('type.list.list'('type.closSem.v'),X3)))) | ~p(s(bool,'const.clos_relation.exp_rel_3'(s('type.bool.itself'(X0),'const.bool.the_value_0'),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X7),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))))) ) | $spl42),
  inference(cnf_transformation,[],[f398_D])).
fof(f398_D,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1] : (p(s(bool,happ(s(fun('type.closSem.v',bool),happ(s(fun('type.closSem.v',fun('type.closSem.v',bool)),'const.clos_relation.val_rel_2'(s('type.bool.itself'(X0),'const.bool.the_value_0'),s('type.num.num',X1))),s('type.closSem.v','const.closSem.Closure_5'(s('type.option.option'('type.num.num'),'const.option.NONE_0'),s('type.list.list'('type.closSem.v'),X4),s('type.list.list'('type.closSem.v'),X2),s('type.num.num',X6),s('type.closLang.exp',X7))))),s('type.closSem.v','const.closSem.Closure_5'(s('type.option.option'('type.num.num'),'const.option.NONE_0'),s('type.list.list'('type.closSem.v'),X5),s('type.list.list'('type.closSem.v'),X3),s('type.num.num',X6),s('type.closLang.exp',X8)))))) | ~p(s(bool,'const.list.LIST_REL_3'(s(fun('type.closSem.v',fun('type.closSem.v',bool)),'const.clos_relation.val_rel_2'(s('type.bool.itself'(X0),'const.bool.the_value_0'),s('type.num.num',X1))),s('type.list.list'('type.closSem.v'),X4),s('type.list.list'('type.closSem.v'),X5)))) | ~p(s(bool,'const.list.LIST_REL_3'(s(fun('type.closSem.v',fun('type.closSem.v',bool)),'const.clos_relation.val_rel_2'(s('type.bool.itself'(X0),'const.bool.the_value_0'),s('type.num.num',X1))),s('type.list.list'('type.closSem.v'),X2),s('type.list.list'('type.closSem.v'),X3)))) | ~p(s(bool,'const.clos_relation.exp_rel_3'(s('type.bool.itself'(X0),'const.bool.the_value_0'),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X7),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))))) ) <=> ~$spl42),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl42])])).
fof(f275,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1] : (p(s(bool,happ(s(fun('type.closSem.v',bool),happ(s(fun('type.closSem.v',fun('type.closSem.v',bool)),'const.clos_relation.val_rel_2'(s('type.bool.itself'(X0),'const.bool.the_value_0'),s('type.num.num',X1))),s('type.closSem.v','const.closSem.Closure_5'(s('type.option.option'('type.num.num'),'const.option.NONE_0'),s('type.list.list'('type.closSem.v'),X4),s('type.list.list'('type.closSem.v'),X2),s('type.num.num',X6),s('type.closLang.exp',X7))))),s('type.closSem.v','const.closSem.Closure_5'(s('type.option.option'('type.num.num'),'const.option.NONE_0'),s('type.list.list'('type.closSem.v'),X5),s('type.list.list'('type.closSem.v'),X3),s('type.num.num',X6),s('type.closLang.exp',X8)))))) | ~p(s(bool,'const.list.LIST_REL_3'(s(fun('type.closSem.v',fun('type.closSem.v',bool)),'const.clos_relation.val_rel_2'(s('type.bool.itself'(X0),'const.bool.the_value_0'),s('type.num.num',X1))),s('type.list.list'('type.closSem.v'),X4),s('type.list.list'('type.closSem.v'),X5)))) | ~p(s(bool,'const.list.LIST_REL_3'(s(fun('type.closSem.v',fun('type.closSem.v',bool)),'const.clos_relation.val_rel_2'(s('type.bool.itself'(X0),'const.bool.the_value_0'),s('type.num.num',X1))),s('type.list.list'('type.closSem.v'),X2),s('type.list.list'('type.closSem.v'),X3)))) | ~p(s(bool,'const.clos_relation.exp_rel_3'(s('type.bool.itself'(X0),'const.bool.the_value_0'),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X7),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))))) )),
  inference(cnf_transformation,[],[f163])).
fof(f163,plain,(
  ! [X0,X1,X2,X3,X4,X5,X6,X7,X8] : (~p(s(bool,'const.clos_relation.exp_rel_3'(s('type.bool.itself'(X0),'const.bool.the_value_0'),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X7),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,'const.list.LIST_REL_3'(s(fun('type.closSem.v',fun('type.closSem.v',bool)),'const.clos_relation.val_rel_2'(s('type.bool.itself'(X0),'const.bool.the_value_0'),s('type.num.num',X1))),s('type.list.list'('type.closSem.v'),X2),s('type.list.list'('type.closSem.v'),X3)))) | ~p(s(bool,'const.list.LIST_REL_3'(s(fun('type.closSem.v',fun('type.closSem.v',bool)),'const.clos_relation.val_rel_2'(s('type.bool.itself'(X0),'const.bool.the_value_0'),s('type.num.num',X1))),s('type.list.list'('type.closSem.v'),X4),s('type.list.list'('type.closSem.v'),X5)))) | p(s(bool,happ(s(fun('type.closSem.v',bool),happ(s(fun('type.closSem.v',fun('type.closSem.v',bool)),'const.clos_relation.val_rel_2'(s('type.bool.itself'(X0),'const.bool.the_value_0'),s('type.num.num',X1))),s('type.closSem.v','const.closSem.Closure_5'(s('type.option.option'('type.num.num'),'const.option.NONE_0'),s('type.list.list'('type.closSem.v'),X4),s('type.list.list'('type.closSem.v'),X2),s('type.num.num',X6),s('type.closLang.exp',X7))))),s('type.closSem.v','const.closSem.Closure_5'(s('type.option.option'('type.num.num'),'const.option.NONE_0'),s('type.list.list'('type.closSem.v'),X5),s('type.list.list'('type.closSem.v'),X3),s('type.num.num',X6),s('type.closLang.exp',X8)))))))),
  inference(rectify,[],[f110])).
fof(f110,plain,(
  ! [X1,X2,X4,X5,X6,X7,X8,X9,X10] : (~p(s(bool,'const.clos_relation.exp_rel_3'(s('type.bool.itself'(X1),'const.bool.the_value_0'),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X9),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X10),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,'const.list.LIST_REL_3'(s(fun('type.closSem.v',fun('type.closSem.v',bool)),'const.clos_relation.val_rel_2'(s('type.bool.itself'(X1),'const.bool.the_value_0'),s('type.num.num',X2))),s('type.list.list'('type.closSem.v'),X4),s('type.list.list'('type.closSem.v'),X5)))) | ~p(s(bool,'const.list.LIST_REL_3'(s(fun('type.closSem.v',fun('type.closSem.v',bool)),'const.clos_relation.val_rel_2'(s('type.bool.itself'(X1),'const.bool.the_value_0'),s('type.num.num',X2))),s('type.list.list'('type.closSem.v'),X6),s('type.list.list'('type.closSem.v'),X7)))) | p(s(bool,happ(s(fun('type.closSem.v',bool),happ(s(fun('type.closSem.v',fun('type.closSem.v',bool)),'const.clos_relation.val_rel_2'(s('type.bool.itself'(X1),'const.bool.the_value_0'),s('type.num.num',X2))),s('type.closSem.v','const.closSem.Closure_5'(s('type.option.option'('type.num.num'),'const.option.NONE_0'),s('type.list.list'('type.closSem.v'),X6),s('type.list.list'('type.closSem.v'),X4),s('type.num.num',X8),s('type.closLang.exp',X9))))),s('type.closSem.v','const.closSem.Closure_5'(s('type.option.option'('type.num.num'),'const.option.NONE_0'),s('type.list.list'('type.closSem.v'),X7),s('type.list.list'('type.closSem.v'),X5),s('type.num.num',X8),s('type.closLang.exp',X10)))))))),
  inference(flattening,[],[f109])).
fof(f109,plain,(
  ! [X1,X2,X4,X5,X6,X7,X8,X9,X10] : ((~p(s(bool,'const.clos_relation.exp_rel_3'(s('type.bool.itself'(X1),'const.bool.the_value_0'),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X9),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X10),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,'const.list.LIST_REL_3'(s(fun('type.closSem.v',fun('type.closSem.v',bool)),'const.clos_relation.val_rel_2'(s('type.bool.itself'(X1),'const.bool.the_value_0'),s('type.num.num',X2))),s('type.list.list'('type.closSem.v'),X4),s('type.list.list'('type.closSem.v'),X5)))) | ~p(s(bool,'const.list.LIST_REL_3'(s(fun('type.closSem.v',fun('type.closSem.v',bool)),'const.clos_relation.val_rel_2'(s('type.bool.itself'(X1),'const.bool.the_value_0'),s('type.num.num',X2))),s('type.list.list'('type.closSem.v'),X6),s('type.list.list'('type.closSem.v'),X7))))) | p(s(bool,happ(s(fun('type.closSem.v',bool),happ(s(fun('type.closSem.v',fun('type.closSem.v',bool)),'const.clos_relation.val_rel_2'(s('type.bool.itself'(X1),'const.bool.the_value_0'),s('type.num.num',X2))),s('type.closSem.v','const.closSem.Closure_5'(s('type.option.option'('type.num.num'),'const.option.NONE_0'),s('type.list.list'('type.closSem.v'),X6),s('type.list.list'('type.closSem.v'),X4),s('type.num.num',X8),s('type.closLang.exp',X9))))),s('type.closSem.v','const.closSem.Closure_5'(s('type.option.option'('type.num.num'),'const.option.NONE_0'),s('type.list.list'('type.closSem.v'),X7),s('type.list.list'('type.closSem.v'),X5),s('type.num.num',X8),s('type.closLang.exp',X10)))))))),
  inference(ennf_transformation,[],[f78])).
fof(f78,plain,(
  ! [X1,X2,X4,X5,X6,X7,X8,X9,X10] : ((p(s(bool,'const.clos_relation.exp_rel_3'(s('type.bool.itself'(X1),'const.bool.the_value_0'),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X9),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X10),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) & p(s(bool,'const.list.LIST_REL_3'(s(fun('type.closSem.v',fun('type.closSem.v',bool)),'const.clos_relation.val_rel_2'(s('type.bool.itself'(X1),'const.bool.the_value_0'),s('type.num.num',X2))),s('type.list.list'('type.closSem.v'),X4),s('type.list.list'('type.closSem.v'),X5)))) & p(s(bool,'const.list.LIST_REL_3'(s(fun('type.closSem.v',fun('type.closSem.v',bool)),'const.clos_relation.val_rel_2'(s('type.bool.itself'(X1),'const.bool.the_value_0'),s('type.num.num',X2))),s('type.list.list'('type.closSem.v'),X6),s('type.list.list'('type.closSem.v'),X7))))) => p(s(bool,happ(s(fun('type.closSem.v',bool),happ(s(fun('type.closSem.v',fun('type.closSem.v',bool)),'const.clos_relation.val_rel_2'(s('type.bool.itself'(X1),'const.bool.the_value_0'),s('type.num.num',X2))),s('type.closSem.v','const.closSem.Closure_5'(s('type.option.option'('type.num.num'),'const.option.NONE_0'),s('type.list.list'('type.closSem.v'),X6),s('type.list.list'('type.closSem.v'),X4),s('type.num.num',X8),s('type.closLang.exp',X9))))),s('type.closSem.v','const.closSem.Closure_5'(s('type.option.option'('type.num.num'),'const.option.NONE_0'),s('type.list.list'('type.closSem.v'),X7),s('type.list.list'('type.closSem.v'),X5),s('type.num.num',X8),s('type.closLang.exp',X10)))))))),
  inference(flattening,[],[f77])).
fof(f77,plain,(
  ! [X1] : ! [X2,X4,X5,X6,X7,X8,X9,X10] : ((p(s(bool,'const.clos_relation.exp_rel_3'(s('type.bool.itself'(X1),'const.bool.the_value_0'),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X9),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X10),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) & p(s(bool,'const.list.LIST_REL_3'(s(fun('type.closSem.v',fun('type.closSem.v',bool)),'const.clos_relation.val_rel_2'(s('type.bool.itself'(X1),'const.bool.the_value_0'),s('type.num.num',X2))),s('type.list.list'('type.closSem.v'),X4),s('type.list.list'('type.closSem.v'),X5)))) & p(s(bool,'const.list.LIST_REL_3'(s(fun('type.closSem.v',fun('type.closSem.v',bool)),'const.clos_relation.val_rel_2'(s('type.bool.itself'(X1),'const.bool.the_value_0'),s('type.num.num',X2))),s('type.list.list'('type.closSem.v'),X6),s('type.list.list'('type.closSem.v'),X7))))) => p(s(bool,happ(s(fun('type.closSem.v',bool),happ(s(fun('type.closSem.v',fun('type.closSem.v',bool)),'const.clos_relation.val_rel_2'(s('type.bool.itself'(X1),'const.bool.the_value_0'),s('type.num.num',X2))),s('type.closSem.v','const.closSem.Closure_5'(s('type.option.option'('type.num.num'),'const.option.NONE_0'),s('type.list.list'('type.closSem.v'),X6),s('type.list.list'('type.closSem.v'),X4),s('type.num.num',X8),s('type.closLang.exp',X9))))),s('type.closSem.v','const.closSem.Closure_5'(s('type.option.option'('type.num.num'),'const.option.NONE_0'),s('type.list.list'('type.closSem.v'),X7),s('type.list.list'('type.closSem.v'),X5),s('type.num.num',X8),s('type.closLang.exp',X10)))))))),
  inference(rectify,[],[f21])).
fof(f21,axiom,(
  ! [X16,X6] : ! [X7,X19,X9,X10,X11,X12,X13,X14,X15] : ((p(s(bool,'const.clos_relation.exp_rel_3'(s('type.bool.itself'(X6),'const.bool.the_value_0'),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X14),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X15),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) & p(s(bool,'const.list.LIST_REL_3'(s(fun('type.closSem.v',fun('type.closSem.v',bool)),'const.clos_relation.val_rel_2'(s('type.bool.itself'(X6),'const.bool.the_value_0'),s('type.num.num',X7))),s('type.list.list'('type.closSem.v'),X9),s('type.list.list'('type.closSem.v'),X10)))) & p(s(bool,'const.list.LIST_REL_3'(s(fun('type.closSem.v',fun('type.closSem.v',bool)),'const.clos_relation.val_rel_2'(s('type.bool.itself'(X6),'const.bool.the_value_0'),s('type.num.num',X7))),s('type.list.list'('type.closSem.v'),X11),s('type.list.list'('type.closSem.v'),X12))))) => p(s(bool,happ(s(fun('type.closSem.v',bool),happ(s(fun('type.closSem.v',fun('type.closSem.v',bool)),'const.clos_relation.val_rel_2'(s('type.bool.itself'(X6),'const.bool.the_value_0'),s('type.num.num',X7))),s('type.closSem.v','const.closSem.Closure_5'(s('type.option.option'('type.num.num'),'const.option.NONE_0'),s('type.list.list'('type.closSem.v'),X11),s('type.list.list'('type.closSem.v'),X9),s('type.num.num',X13),s('type.closLang.exp',X14))))),s('type.closSem.v','const.closSem.Closure_5'(s('type.option.option'('type.num.num'),'const.option.NONE_0'),s('type.list.list'('type.closSem.v'),X12),s('type.list.list'('type.closSem.v'),X10),s('type.num.num',X13),s('type.closLang.exp',X15)))))))),
  file('thm.clos_relation.compat_closure','thm.clos_relation.clos_relation_83_prove_ltb')).
fof(f370,plain,(
  ~p(s(bool,'F_0')) | $spl11),
  inference(cnf_transformation,[],[f370_D])).
fof(f370_D,plain,(
  ~p(s(bool,'F_0')) <=> ~$spl11),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl11])])).
fof(f368,plain,(
  ~p(s(bool,'F_0'))),
  inference(global_subsumption,[],[f206,f203])).
fof(f206,plain,(
  ~p(s(bool,'F_0')) | ~p(s(bool,'T_0'))),
  inference(cnf_transformation,[],[f131])).
fof(f131,plain,(
  (p(s(bool,'F_0')) | p(s(bool,'T_0'))) & (~p(s(bool,'T_0')) | ~p(s(bool,'F_0')))),
  inference(nnf_transformation,[],[f38])).
fof(f38,plain,(
  ~p(s(bool,'F_0')) <=> p(s(bool,'T_0'))),
  inference(flattening,[],[f16])).
fof(f16,axiom,(
  ~p(s(bool,'F_0')) <=> p(s(bool,'T_0'))),
  file('thm.clos_relation.compat_closure','thm.bool.NOT_CLAUSES|split|2')).
fof(f367,plain,(
  p(s(bool,'T_0')) | $spl8),
  inference(cnf_transformation,[],[f367_D])).
fof(f367_D,plain,(
  p(s(bool,'T_0')) <=> ~$spl8),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl8])])).
fof(f203,plain,(
  p(s(bool,'T_0'))),
  inference(cnf_transformation,[],[f7])).
fof(f7,axiom,(
  p(s(bool,'T_0'))),
  file('thm.clos_relation.compat_closure','thm.bool.TRUTH')).
fof(f4942,plain,(
  $false | ($spl8 | $spl11 | $spl42 | $spl186 | $spl188 | $spl190 | $spl1758)),
  inference(subsumption_resolution,[],[f4941,f367])).
fof(f4941,plain,(
  ~p(s(bool,'T_0')) | ($spl8 | $spl11 | $spl42 | $spl186 | $spl188 | $spl190 | $spl1758)),
  inference(forward_demodulation,[],[f4940,f486])).
fof(f4940,plain,(
  ~p(s(bool,'const.clos_relation.exp_rel_3'(s('type.bool.itself'(sK12),'const.bool.the_value_0'),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK20),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK21),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ($spl8 | $spl11 | $spl42 | $spl186 | $spl188 | $spl1758)),
  inference(subsumption_resolution,[],[f4939,f367])).
fof(f4939,plain,(
  ~p(s(bool,'T_0')) | ~p(s(bool,'const.clos_relation.exp_rel_3'(s('type.bool.itself'(sK12),'const.bool.the_value_0'),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK20),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK21),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ($spl8 | $spl11 | $spl42 | $spl186 | $spl188 | $spl1758)),
  inference(forward_demodulation,[],[f4938,f484])).
fof(f4938,plain,(
  ~p(s(bool,'const.list.LIST_REL_3'(s(fun('type.closSem.v',fun('type.closSem.v',bool)),'const.clos_relation.val_rel_2'(s('type.bool.itself'(sK12),'const.bool.the_value_0'),s('type.num.num',sK13))),s('type.list.list'('type.closSem.v'),sK15),s('type.list.list'('type.closSem.v'),sK16)))) | ~p(s(bool,'const.clos_relation.exp_rel_3'(s('type.bool.itself'(sK12),'const.bool.the_value_0'),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK20),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK21),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ($spl8 | $spl11 | $spl42 | $spl186 | $spl1758)),
  inference(subsumption_resolution,[],[f4937,f367])).
fof(f4937,plain,(
  ~p(s(bool,'T_0')) | ~p(s(bool,'const.list.LIST_REL_3'(s(fun('type.closSem.v',fun('type.closSem.v',bool)),'const.clos_relation.val_rel_2'(s('type.bool.itself'(sK12),'const.bool.the_value_0'),s('type.num.num',sK13))),s('type.list.list'('type.closSem.v'),sK15),s('type.list.list'('type.closSem.v'),sK16)))) | ~p(s(bool,'const.clos_relation.exp_rel_3'(s('type.bool.itself'(sK12),'const.bool.the_value_0'),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK20),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK21),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ($spl11 | $spl42 | $spl186 | $spl1758)),
  inference(forward_demodulation,[],[f4936,f482])).
fof(f4936,plain,(
  ~p(s(bool,'const.list.LIST_REL_3'(s(fun('type.closSem.v',fun('type.closSem.v',bool)),'const.clos_relation.val_rel_2'(s('type.bool.itself'(sK12),'const.bool.the_value_0'),s('type.num.num',sK13))),s('type.list.list'('type.closSem.v'),sK17),s('type.list.list'('type.closSem.v'),sK18)))) | ~p(s(bool,'const.list.LIST_REL_3'(s(fun('type.closSem.v',fun('type.closSem.v',bool)),'const.clos_relation.val_rel_2'(s('type.bool.itself'(sK12),'const.bool.the_value_0'),s('type.num.num',sK13))),s('type.list.list'('type.closSem.v'),sK15),s('type.list.list'('type.closSem.v'),sK16)))) | ~p(s(bool,'const.clos_relation.exp_rel_3'(s('type.bool.itself'(sK12),'const.bool.the_value_0'),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK20),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK21),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ($spl11 | $spl42 | $spl1758)),
  inference(subsumption_resolution,[],[f4878,f370])).
fof(f4878,plain,(
  p(s(bool,'F_0')) | ~p(s(bool,'const.list.LIST_REL_3'(s(fun('type.closSem.v',fun('type.closSem.v',bool)),'const.clos_relation.val_rel_2'(s('type.bool.itself'(sK12),'const.bool.the_value_0'),s('type.num.num',sK13))),s('type.list.list'('type.closSem.v'),sK17),s('type.list.list'('type.closSem.v'),sK18)))) | ~p(s(bool,'const.list.LIST_REL_3'(s(fun('type.closSem.v',fun('type.closSem.v',bool)),'const.clos_relation.val_rel_2'(s('type.bool.itself'(sK12),'const.bool.the_value_0'),s('type.num.num',sK13))),s('type.list.list'('type.closSem.v'),sK15),s('type.list.list'('type.closSem.v'),sK16)))) | ~p(s(bool,'const.clos_relation.exp_rel_3'(s('type.bool.itself'(sK12),'const.bool.the_value_0'),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK20),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK21),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ($spl42 | $spl1758)),
  inference(superposition,[],[f398,f4697])).
% SZS output end Proof for thm.clos_relation
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 293
% Passive clauses: 887
% Generated clauses: 4654
% Final active clauses: 283
% Final passive clauses: 574
% Input formulas: 34
% Initial clauses: 151
% 
% Duplicate literals: 171
% Trivial inequalities: 35
% Fw subsumption resolutions: 525
% Fw demodulations: 79
% Bw demodulations: 30
% Condensations: 114
% Global subsumptions: 13
% 
% Simple tautologies: 216
% Equational tautologies: 16
% Forward subsumptions: 1513
% 
% Binary resolution: 1359
% Factoring: 81
% Forward superposition: 432
% Backward superposition: 717
% Self superposition: 24
% Equality factoring: 28
% Equality resolution: 5
% 
% Split clauses: 60
% Split components: 125
% SAT solver clauses: 1279
% SAT solver unit clauses: 171
% SAT solver binary clauses: 63
% SAT solver learnt clauses: 27
% SAT solver learnt literals: 10
% 
% Sat splits: 60
% Sat splitting refutations: 1
% 
% TWLsolver clauses: 1226
% TWLsolver calls for satisfiability: 1596
% 
% Memory used [KB]: 5756
% Time elapsed: 0.274 s
% ------------------------------
% ------------------------------
% Success in time 0.9 s
