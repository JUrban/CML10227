Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 150 next slice time: 5
dis+11_7_3 on thm.wordSem
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.wordSem
% SZS output start Proof for thm.wordSem
fof(f1309,plain,(
  $false),
  inference(subsumption_resolution,[],[f1308,f27])).
fof(f27,plain,(
  p(s(bool,'T_0'))),
  inference(cnf_transformation,[],[f1])).
fof(f1,axiom,(
  p(s(bool,'T_0'))),
  file('thm.wordSem.datatype_result',aHL_TRUTH)).
fof(f1308,plain,(
  ~p(s(bool,'T_0'))),
  inference(forward_demodulation,[],[f26,f31])).
fof(f31,plain,(
  ( ! [X0,X1] : (s(bool,'T_0') = s(bool,'const.bool.DATATYPE_1'(s(X0,X1)))) )),
  inference(cnf_transformation,[],[f15])).
fof(f15,plain,(
  ! [X0,X1] : s(bool,'T_0') = s(bool,'const.bool.DATATYPE_1'(s(X0,X1)))),
  inference(flattening,[],[f14])).
fof(f14,plain,(
  ! [X0] : ! [X1] : s(bool,'T_0') = s(bool,'const.bool.DATATYPE_1'(s(X0,X1)))),
  inference(rectify,[],[f8])).
fof(f8,axiom,(
  ! [X8] : ! [X9] : s(bool,'T_0') = s(bool,'const.bool.DATATYPE_1'(s(X8,X9)))),
  file('thm.wordSem.datatype_result','thm.bool.DATATYPE_TAG_THM')).
fof(f26,plain,(
  ~p(s(bool,'const.bool.DATATYPE_1'(s(bool,happ(s(fun('type.wordSem.result'(sK0),bool),happ(s(fun('type.wordSem.result'(sK0),fun('type.wordSem.result'(sK0),bool)),happ(s(fun('type.wordSem.result'(sK0),fun('type.wordSem.result'(sK0),fun('type.wordSem.result'(sK0),bool))),happ(s(fun(fun('type.wordSem.word_loc'(sK0),fun('type.wordSem.word_loc'(sK0),'type.wordSem.result'(sK0))),fun('type.wordSem.result'(sK0),fun('type.wordSem.result'(sK0),fun('type.wordSem.result'(sK0),bool)))),happ(s(fun(fun('type.wordSem.word_loc'(sK0),fun('type.wordSem.word_loc'(sK0),'type.wordSem.result'(sK0))),fun(fun('type.wordSem.word_loc'(sK0),fun('type.wordSem.word_loc'(sK0),'type.wordSem.result'(sK0))),fun('type.wordSem.result'(sK0),fun('type.wordSem.result'(sK0),fun('type.wordSem.result'(sK0),bool))))),sK1),s(fun('type.wordSem.word_loc'(sK0),fun('type.wordSem.word_loc'(sK0),'type.wordSem.result'(sK0))),'const.wordSem.Result_0'))),s(fun('type.wordSem.word_loc'(sK0),fun('type.wordSem.word_loc'(sK0),'type.wordSem.result'(sK0))),'const.wordSem.Exception_0'))),s('type.wordSem.result'(sK0),'const.wordSem.TimeOut_0'))),s('type.wordSem.result'(sK0),'const.wordSem.NotEnoughSpace_0'))),s('type.wordSem.result'(sK0),'const.wordSem.Error_0'))))))),
  inference(cnf_transformation,[],[f24])).
fof(f24,plain,(
  ~p(s(bool,'const.bool.DATATYPE_1'(s(bool,happ(s(fun('type.wordSem.result'(sK0),bool),happ(s(fun('type.wordSem.result'(sK0),fun('type.wordSem.result'(sK0),bool)),happ(s(fun('type.wordSem.result'(sK0),fun('type.wordSem.result'(sK0),fun('type.wordSem.result'(sK0),bool))),happ(s(fun(fun('type.wordSem.word_loc'(sK0),fun('type.wordSem.word_loc'(sK0),'type.wordSem.result'(sK0))),fun('type.wordSem.result'(sK0),fun('type.wordSem.result'(sK0),fun('type.wordSem.result'(sK0),bool)))),happ(s(fun(fun('type.wordSem.word_loc'(sK0),fun('type.wordSem.word_loc'(sK0),'type.wordSem.result'(sK0))),fun(fun('type.wordSem.word_loc'(sK0),fun('type.wordSem.word_loc'(sK0),'type.wordSem.result'(sK0))),fun('type.wordSem.result'(sK0),fun('type.wordSem.result'(sK0),fun('type.wordSem.result'(sK0),bool))))),sK1),s(fun('type.wordSem.word_loc'(sK0),fun('type.wordSem.word_loc'(sK0),'type.wordSem.result'(sK0))),'const.wordSem.Result_0'))),s(fun('type.wordSem.word_loc'(sK0),fun('type.wordSem.word_loc'(sK0),'type.wordSem.result'(sK0))),'const.wordSem.Exception_0'))),s('type.wordSem.result'(sK0),'const.wordSem.TimeOut_0'))),s('type.wordSem.result'(sK0),'const.wordSem.NotEnoughSpace_0'))),s('type.wordSem.result'(sK0),'const.wordSem.Error_0'))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1])],[f22])).
fof(f22,plain,(
  ? [X0,X1] : ~p(s(bool,'const.bool.DATATYPE_1'(s(bool,happ(s(fun('type.wordSem.result'(X0),bool),happ(s(fun('type.wordSem.result'(X0),fun('type.wordSem.result'(X0),bool)),happ(s(fun('type.wordSem.result'(X0),fun('type.wordSem.result'(X0),fun('type.wordSem.result'(X0),bool))),happ(s(fun(fun('type.wordSem.word_loc'(X0),fun('type.wordSem.word_loc'(X0),'type.wordSem.result'(X0))),fun('type.wordSem.result'(X0),fun('type.wordSem.result'(X0),fun('type.wordSem.result'(X0),bool)))),happ(s(fun(fun('type.wordSem.word_loc'(X0),fun('type.wordSem.word_loc'(X0),'type.wordSem.result'(X0))),fun(fun('type.wordSem.word_loc'(X0),fun('type.wordSem.word_loc'(X0),'type.wordSem.result'(X0))),fun('type.wordSem.result'(X0),fun('type.wordSem.result'(X0),fun('type.wordSem.result'(X0),bool))))),X1),s(fun('type.wordSem.word_loc'(X0),fun('type.wordSem.word_loc'(X0),'type.wordSem.result'(X0))),'const.wordSem.Result_0'))),s(fun('type.wordSem.word_loc'(X0),fun('type.wordSem.word_loc'(X0),'type.wordSem.result'(X0))),'const.wordSem.Exception_0'))),s('type.wordSem.result'(X0),'const.wordSem.TimeOut_0'))),s('type.wordSem.result'(X0),'const.wordSem.NotEnoughSpace_0'))),s('type.wordSem.result'(X0),'const.wordSem.Error_0'))))))),
  inference(ennf_transformation,[],[f12])).
fof(f12,plain,(
  ~! [X0,X1] : p(s(bool,'const.bool.DATATYPE_1'(s(bool,happ(s(fun('type.wordSem.result'(X0),bool),happ(s(fun('type.wordSem.result'(X0),fun('type.wordSem.result'(X0),bool)),happ(s(fun('type.wordSem.result'(X0),fun('type.wordSem.result'(X0),fun('type.wordSem.result'(X0),bool))),happ(s(fun(fun('type.wordSem.word_loc'(X0),fun('type.wordSem.word_loc'(X0),'type.wordSem.result'(X0))),fun('type.wordSem.result'(X0),fun('type.wordSem.result'(X0),fun('type.wordSem.result'(X0),bool)))),happ(s(fun(fun('type.wordSem.word_loc'(X0),fun('type.wordSem.word_loc'(X0),'type.wordSem.result'(X0))),fun(fun('type.wordSem.word_loc'(X0),fun('type.wordSem.word_loc'(X0),'type.wordSem.result'(X0))),fun('type.wordSem.result'(X0),fun('type.wordSem.result'(X0),fun('type.wordSem.result'(X0),bool))))),X1),s(fun('type.wordSem.word_loc'(X0),fun('type.wordSem.word_loc'(X0),'type.wordSem.result'(X0))),'const.wordSem.Result_0'))),s(fun('type.wordSem.word_loc'(X0),fun('type.wordSem.word_loc'(X0),'type.wordSem.result'(X0))),'const.wordSem.Exception_0'))),s('type.wordSem.result'(X0),'const.wordSem.TimeOut_0'))),s('type.wordSem.result'(X0),'const.wordSem.NotEnoughSpace_0'))),s('type.wordSem.result'(X0),'const.wordSem.Error_0'))))))),
  inference(flattening,[],[f11])).
fof(f11,plain,(
  ~! [X0] : ! [X1] : p(s(bool,'const.bool.DATATYPE_1'(s(bool,happ(s(fun('type.wordSem.result'(X0),bool),happ(s(fun('type.wordSem.result'(X0),fun('type.wordSem.result'(X0),bool)),happ(s(fun('type.wordSem.result'(X0),fun('type.wordSem.result'(X0),fun('type.wordSem.result'(X0),bool))),happ(s(fun(fun('type.wordSem.word_loc'(X0),fun('type.wordSem.word_loc'(X0),'type.wordSem.result'(X0))),fun('type.wordSem.result'(X0),fun('type.wordSem.result'(X0),fun('type.wordSem.result'(X0),bool)))),happ(s(fun(fun('type.wordSem.word_loc'(X0),fun('type.wordSem.word_loc'(X0),'type.wordSem.result'(X0))),fun(fun('type.wordSem.word_loc'(X0),fun('type.wordSem.word_loc'(X0),'type.wordSem.result'(X0))),fun('type.wordSem.result'(X0),fun('type.wordSem.result'(X0),fun('type.wordSem.result'(X0),bool))))),X1),s(fun('type.wordSem.word_loc'(X0),fun('type.wordSem.word_loc'(X0),'type.wordSem.result'(X0))),'const.wordSem.Result_0'))),s(fun('type.wordSem.word_loc'(X0),fun('type.wordSem.word_loc'(X0),'type.wordSem.result'(X0))),'const.wordSem.Exception_0'))),s('type.wordSem.result'(X0),'const.wordSem.TimeOut_0'))),s('type.wordSem.result'(X0),'const.wordSem.NotEnoughSpace_0'))),s('type.wordSem.result'(X0),'const.wordSem.Error_0'))))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : ! [X7] : p(s(bool,'const.bool.DATATYPE_1'(s(bool,happ(s(fun('type.wordSem.result'(X6),bool),happ(s(fun('type.wordSem.result'(X6),fun('type.wordSem.result'(X6),bool)),happ(s(fun('type.wordSem.result'(X6),fun('type.wordSem.result'(X6),fun('type.wordSem.result'(X6),bool))),happ(s(fun(fun('type.wordSem.word_loc'(X6),fun('type.wordSem.word_loc'(X6),'type.wordSem.result'(X6))),fun('type.wordSem.result'(X6),fun('type.wordSem.result'(X6),fun('type.wordSem.result'(X6),bool)))),happ(s(fun(fun('type.wordSem.word_loc'(X6),fun('type.wordSem.word_loc'(X6),'type.wordSem.result'(X6))),fun(fun('type.wordSem.word_loc'(X6),fun('type.wordSem.word_loc'(X6),'type.wordSem.result'(X6))),fun('type.wordSem.result'(X6),fun('type.wordSem.result'(X6),fun('type.wordSem.result'(X6),bool))))),X7),s(fun('type.wordSem.word_loc'(X6),fun('type.wordSem.word_loc'(X6),'type.wordSem.result'(X6))),'const.wordSem.Result_0'))),s(fun('type.wordSem.word_loc'(X6),fun('type.wordSem.word_loc'(X6),'type.wordSem.result'(X6))),'const.wordSem.Exception_0'))),s('type.wordSem.result'(X6),'const.wordSem.TimeOut_0'))),s('type.wordSem.result'(X6),'const.wordSem.NotEnoughSpace_0'))),s('type.wordSem.result'(X6),'const.wordSem.Error_0'))))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : ! [X7] : p(s(bool,'const.bool.DATATYPE_1'(s(bool,happ(s(fun('type.wordSem.result'(X6),bool),happ(s(fun('type.wordSem.result'(X6),fun('type.wordSem.result'(X6),bool)),happ(s(fun('type.wordSem.result'(X6),fun('type.wordSem.result'(X6),fun('type.wordSem.result'(X6),bool))),happ(s(fun(fun('type.wordSem.word_loc'(X6),fun('type.wordSem.word_loc'(X6),'type.wordSem.result'(X6))),fun('type.wordSem.result'(X6),fun('type.wordSem.result'(X6),fun('type.wordSem.result'(X6),bool)))),happ(s(fun(fun('type.wordSem.word_loc'(X6),fun('type.wordSem.word_loc'(X6),'type.wordSem.result'(X6))),fun(fun('type.wordSem.word_loc'(X6),fun('type.wordSem.word_loc'(X6),'type.wordSem.result'(X6))),fun('type.wordSem.result'(X6),fun('type.wordSem.result'(X6),fun('type.wordSem.result'(X6),bool))))),X7),s(fun('type.wordSem.word_loc'(X6),fun('type.wordSem.word_loc'(X6),'type.wordSem.result'(X6))),'const.wordSem.Result_0'))),s(fun('type.wordSem.word_loc'(X6),fun('type.wordSem.word_loc'(X6),'type.wordSem.result'(X6))),'const.wordSem.Exception_0'))),s('type.wordSem.result'(X6),'const.wordSem.TimeOut_0'))),s('type.wordSem.result'(X6),'const.wordSem.NotEnoughSpace_0'))),s('type.wordSem.result'(X6),'const.wordSem.Error_0'))))))),
  file('thm.wordSem.datatype_result','thm.wordSem.datatype_result')).
% SZS output end Proof for thm.wordSem
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 25
% Passive clauses: 106
% Generated clauses: 1243
% Final active clauses: 23
% Final passive clauses: 69
% Input formulas: 9
% Initial clauses: 9
% 
% Duplicate literals: 138
% Trivial inequalities: 20
% Fw subsumption resolutions: 99
% Fw demodulations: 117
% 
% Simple tautologies: 56
% Equational tautologies: 19
% Forward subsumptions: 661
% 
% Binary resolution: 6
% Forward superposition: 469
% Backward superposition: 248
% Self superposition: 69
% Equality factoring: 48
% Equality resolution: 8
% 
% Split clauses: 21
% Split components: 42
% SAT solver clauses: 35
% SAT solver unit clauses: 4
% SAT solver binary clauses: 18
% 
% Sat splits: 21
% Sat splitting refutations: 1
% 
% TWLsolver clauses: 35
% TWLsolver calls for satisfiability: 12
% 
% Memory used [KB]: 1023
% Time elapsed: 0.062 s
% ------------------------------
% ------------------------------
% Success in time 0.079 s
