Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 149 next slice time: 5
dis+11_7_3 on thm.wordSem
% (11752)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 112
% Passive clauses: 2723
% Generated clauses: 13241
% Final active clauses: 105
% Final passive clauses: 2490
% Input formulas: 68
% Initial clauses: 111
% 
% Duplicate literals: 381
% Trivial inequalities: 244
% Fw subsumption resolutions: 1120
% Fw demodulations: 2236
% Bw demodulations: 6
% 
% Simple tautologies: 279
% Equational tautologies: 39
% Forward subsumptions: 6119
% 
% Binary resolution: 121
% Factoring: 1
% Forward superposition: 4506
% Backward superposition: 4242
% Self superposition: 143
% Equality factoring: 65
% Equality resolution: 35
% 
% Split clauses: 90
% Split components: 184
% SAT solver clauses: 211
% SAT solver unit clauses: 9
% SAT solver binary clauses: 60
% 
% Sat splits: 90
% Sat splitting refutations: 1
% 
% TWLsolver clauses: 211
% TWLsolver calls for satisfiability: 80
% 
% Memory used [KB]: 10618
% Time elapsed: 0.600 s
% ------------------------------
% ------------------------------
% remaining time: 143 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.wordSem
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.wordSem
% SZS output start Proof for thm.wordSem
fof(f2980,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f2979,f2940,f2969,f239,f368,f306,f405])).
fof(f405,plain,(
  ( ! [X2,X0,X1] : (s('type.pair.prod'(X0,X1),X2) = s('type.pair.prod'(X0,X1),'const.pair.,_2'(s(X0,sK6(X2,X1,X0)),s(X1,sK7(X2,X1,X0))))) ) | $spl56),
  inference(cnf_transformation,[],[f405_D])).
fof(f405_D,plain,(
  ( ! [X2,X0,X1] : (s('type.pair.prod'(X0,X1),X2) = s('type.pair.prod'(X0,X1),'const.pair.,_2'(s(X0,sK6(X2,X1,X0)),s(X1,sK7(X2,X1,X0))))) ) <=> ~$spl56),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl56])])).
fof(f306,plain,(
  ( ! [X2,X0,X1] : (s('type.pair.prod'(X0,X1),X2) = s('type.pair.prod'(X0,X1),'const.pair.,_2'(s(X0,sK6(X2,X1,X0)),s(X1,sK7(X2,X1,X0))))) )),
  inference(cnf_transformation,[],[f229])).
fof(f229,plain,(
  ! [X0,X1,X2] : s('type.pair.prod'(X0,X1),X2) = s('type.pair.prod'(X0,X1),'const.pair.,_2'(s(X0,sK6(X2,X1,X0)),s(X1,sK7(X2,X1,X0))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK6,sK7])],[f127])).
fof(f127,plain,(
  ! [X0,X1,X2] : ? [X3,X4] : s('type.pair.prod'(X0,X1),X2) = s('type.pair.prod'(X0,X1),'const.pair.,_2'(s(X0,X3),s(X1,X4)))),
  inference(flattening,[],[f126])).
fof(f126,plain,(
  ! [X0,X1] : ! [X2] : ? [X3,X4] : s('type.pair.prod'(X0,X1),X2) = s('type.pair.prod'(X0,X1),'const.pair.,_2'(s(X0,X3),s(X1,X4)))),
  inference(rectify,[],[f15])).
fof(f15,axiom,(
  ! [X6,X7] : ! [X14] : ? [X36,X37] : s('type.pair.prod'(X6,X7),X14) = s('type.pair.prod'(X6,X7),'const.pair.,_2'(s(X6,X36),s(X7,X37)))),
  file('thm.wordSem.wordSem_466_prove_ltb','thm.pair.ABS_PAIR_THM')).
fof(f368,plain,(
  ( ! [X4,X5] : (s('type.pair.prod'('type.option.option'('type.wordSem.result'(sK0)),'type.wordSem.state'(sK0,sK1)),'const.pair.,_2'(s('type.option.option'('type.wordSem.result'(sK0)),X4),s('type.wordSem.state'(sK0,sK1),X5))) != s('type.pair.prod'('type.option.option'('type.wordSem.result'(sK0)),'type.wordSem.state'(sK0,sK1)),'const.wordSem.fix_clock_2'(s('type.wordSem.state'(sK0,sK1),sK2),s('type.pair.prod'('type.option.option'('type.wordSem.result'(sK0)),'type.wordSem.state'(sK0,sK1)),'const.wordSem.evaluate_1'(s('type.pair.prod'('type.wordLang.prog'(sK0),'type.wordSem.state'(sK0,sK1)),'const.pair.,_2'(s('type.wordLang.prog'(sK0),sK3),s('type.wordSem.state'(sK0,sK1),sK2)))))))) ) | $spl0),
  inference(cnf_transformation,[],[f368_D])).
fof(f368_D,plain,(
  ( ! [X4,X5] : (s('type.pair.prod'('type.option.option'('type.wordSem.result'(sK0)),'type.wordSem.state'(sK0,sK1)),'const.pair.,_2'(s('type.option.option'('type.wordSem.result'(sK0)),X4),s('type.wordSem.state'(sK0,sK1),X5))) != s('type.pair.prod'('type.option.option'('type.wordSem.result'(sK0)),'type.wordSem.state'(sK0,sK1)),'const.wordSem.fix_clock_2'(s('type.wordSem.state'(sK0,sK1),sK2),s('type.pair.prod'('type.option.option'('type.wordSem.result'(sK0)),'type.wordSem.state'(sK0,sK1)),'const.wordSem.evaluate_1'(s('type.pair.prod'('type.wordLang.prog'(sK0),'type.wordSem.state'(sK0,sK1)),'const.pair.,_2'(s('type.wordLang.prog'(sK0),sK3),s('type.wordSem.state'(sK0,sK1),sK2)))))))) ) <=> ~$spl0),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl0])])).
fof(f239,plain,(
  ( ! [X4,X5] : (s('type.pair.prod'('type.option.option'('type.wordSem.result'(sK0)),'type.wordSem.state'(sK0,sK1)),'const.pair.,_2'(s('type.option.option'('type.wordSem.result'(sK0)),X4),s('type.wordSem.state'(sK0,sK1),X5))) != s('type.pair.prod'('type.option.option'('type.wordSem.result'(sK0)),'type.wordSem.state'(sK0,sK1)),'const.wordSem.fix_clock_2'(s('type.wordSem.state'(sK0,sK1),sK2),s('type.pair.prod'('type.option.option'('type.wordSem.result'(sK0)),'type.wordSem.state'(sK0,sK1)),'const.wordSem.evaluate_1'(s('type.pair.prod'('type.wordLang.prog'(sK0),'type.wordSem.state'(sK0,sK1)),'const.pair.,_2'(s('type.wordLang.prog'(sK0),sK3),s('type.wordSem.state'(sK0,sK1),sK2)))))))) )),
  inference(cnf_transformation,[],[f201])).
fof(f201,plain,(
  ! [X4,X5] : s('type.pair.prod'('type.option.option'('type.wordSem.result'(sK0)),'type.wordSem.state'(sK0,sK1)),'const.pair.,_2'(s('type.option.option'('type.wordSem.result'(sK0)),X4),s('type.wordSem.state'(sK0,sK1),X5))) != s('type.pair.prod'('type.option.option'('type.wordSem.result'(sK0)),'type.wordSem.state'(sK0,sK1)),'const.wordSem.fix_clock_2'(s('type.wordSem.state'(sK0,sK1),sK2),s('type.pair.prod'('type.option.option'('type.wordSem.result'(sK0)),'type.wordSem.state'(sK0,sK1)),'const.wordSem.evaluate_1'(s('type.pair.prod'('type.wordLang.prog'(sK0),'type.wordSem.state'(sK0,sK1)),'const.pair.,_2'(s('type.wordLang.prog'(sK0),sK3),s('type.wordSem.state'(sK0,sK1),sK2)))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1,sK2,sK3])],[f182])).
fof(f182,plain,(
  ? [X0,X1,X2,X3] : ! [X4,X5] : s('type.pair.prod'('type.option.option'('type.wordSem.result'(X0)),'type.wordSem.state'(X0,X1)),'const.pair.,_2'(s('type.option.option'('type.wordSem.result'(X0)),X4),s('type.wordSem.state'(X0,X1),X5))) != s('type.pair.prod'('type.option.option'('type.wordSem.result'(X0)),'type.wordSem.state'(X0,X1)),'const.wordSem.fix_clock_2'(s('type.wordSem.state'(X0,X1),X2),s('type.pair.prod'('type.option.option'('type.wordSem.result'(X0)),'type.wordSem.state'(X0,X1)),'const.wordSem.evaluate_1'(s('type.pair.prod'('type.wordLang.prog'(X0),'type.wordSem.state'(X0,X1)),'const.pair.,_2'(s('type.wordLang.prog'(X0),X3),s('type.wordSem.state'(X0,X1),X2)))))))),
  inference(ennf_transformation,[],[f71])).
fof(f71,plain,(
  ~! [X0,X1,X2,X3] : ? [X4,X5] : s('type.pair.prod'('type.option.option'('type.wordSem.result'(X0)),'type.wordSem.state'(X0,X1)),'const.pair.,_2'(s('type.option.option'('type.wordSem.result'(X0)),X4),s('type.wordSem.state'(X0,X1),X5))) = s('type.pair.prod'('type.option.option'('type.wordSem.result'(X0)),'type.wordSem.state'(X0,X1)),'const.wordSem.fix_clock_2'(s('type.wordSem.state'(X0,X1),X2),s('type.pair.prod'('type.option.option'('type.wordSem.result'(X0)),'type.wordSem.state'(X0,X1)),'const.wordSem.evaluate_1'(s('type.pair.prod'('type.wordLang.prog'(X0),'type.wordSem.state'(X0,X1)),'const.pair.,_2'(s('type.wordLang.prog'(X0),X3),s('type.wordSem.state'(X0,X1),X2)))))))),
  inference(flattening,[],[f70])).
fof(f70,plain,(
  ~! [X0,X1] : ! [X2,X3] : ? [X4,X5] : s('type.pair.prod'('type.option.option'('type.wordSem.result'(X0)),'type.wordSem.state'(X0,X1)),'const.pair.,_2'(s('type.option.option'('type.wordSem.result'(X0)),X4),s('type.wordSem.state'(X0,X1),X5))) = s('type.pair.prod'('type.option.option'('type.wordSem.result'(X0)),'type.wordSem.state'(X0,X1)),'const.wordSem.fix_clock_2'(s('type.wordSem.state'(X0,X1),X2),s('type.pair.prod'('type.option.option'('type.wordSem.result'(X0)),'type.wordSem.state'(X0,X1)),'const.wordSem.evaluate_1'(s('type.pair.prod'('type.wordLang.prog'(X0),'type.wordSem.state'(X0,X1)),'const.pair.,_2'(s('type.wordLang.prog'(X0),X3),s('type.wordSem.state'(X0,X1),X2)))))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6,X7] : ! [X8,X9] : ? [X10,X11] : s('type.pair.prod'('type.option.option'('type.wordSem.result'(X6)),'type.wordSem.state'(X6,X7)),'const.pair.,_2'(s('type.option.option'('type.wordSem.result'(X6)),X10),s('type.wordSem.state'(X6,X7),X11))) = s('type.pair.prod'('type.option.option'('type.wordSem.result'(X6)),'type.wordSem.state'(X6,X7)),'const.wordSem.fix_clock_2'(s('type.wordSem.state'(X6,X7),X8),s('type.pair.prod'('type.option.option'('type.wordSem.result'(X6)),'type.wordSem.state'(X6,X7)),'const.wordSem.evaluate_1'(s('type.pair.prod'('type.wordLang.prog'(X6),'type.wordSem.state'(X6,X7)),'const.pair.,_2'(s('type.wordLang.prog'(X6),X9),s('type.wordSem.state'(X6,X7),X8)))))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6,X7] : ! [X8,X9] : ? [X10,X11] : s('type.pair.prod'('type.option.option'('type.wordSem.result'(X6)),'type.wordSem.state'(X6,X7)),'const.pair.,_2'(s('type.option.option'('type.wordSem.result'(X6)),X10),s('type.wordSem.state'(X6,X7),X11))) = s('type.pair.prod'('type.option.option'('type.wordSem.result'(X6)),'type.wordSem.state'(X6,X7)),'const.wordSem.fix_clock_2'(s('type.wordSem.state'(X6,X7),X8),s('type.pair.prod'('type.option.option'('type.wordSem.result'(X6)),'type.wordSem.state'(X6,X7)),'const.wordSem.evaluate_1'(s('type.pair.prod'('type.wordLang.prog'(X6),'type.wordSem.state'(X6,X7)),'const.pair.,_2'(s('type.wordLang.prog'(X6),X9),s('type.wordSem.state'(X6,X7),X8)))))))),
  file('thm.wordSem.wordSem_466_prove_ltb','thm.wordSem.wordSem_466_prove_ltb')).
fof(f2969,plain,(
  ( ! [X0] : (s('type.pair.prod'('type.option.option'('type.wordSem.result'(sK0)),'type.wordSem.state'(sK0,sK1)),X0) != s('type.pair.prod'('type.option.option'('type.wordSem.result'(sK0)),'type.wordSem.state'(sK0,sK1)),'const.wordSem.fix_clock_2'(s('type.wordSem.state'(sK0,sK1),sK2),s('type.pair.prod'('type.option.option'('type.wordSem.result'(sK0)),'type.wordSem.state'(sK0,sK1)),'const.wordSem.evaluate_1'(s('type.pair.prod'('type.wordLang.prog'(sK0),'type.wordSem.state'(sK0,sK1)),'const.pair.,_2'(s('type.wordLang.prog'(sK0),sK3),s('type.wordSem.state'(sK0,sK1),sK2)))))))) ) | $spl538),
  inference(cnf_transformation,[],[f2969_D])).
fof(f2969_D,plain,(
  ( ! [X0] : (s('type.pair.prod'('type.option.option'('type.wordSem.result'(sK0)),'type.wordSem.state'(sK0,sK1)),X0) != s('type.pair.prod'('type.option.option'('type.wordSem.result'(sK0)),'type.wordSem.state'(sK0,sK1)),'const.wordSem.fix_clock_2'(s('type.wordSem.state'(sK0,sK1),sK2),s('type.pair.prod'('type.option.option'('type.wordSem.result'(sK0)),'type.wordSem.state'(sK0,sK1)),'const.wordSem.evaluate_1'(s('type.pair.prod'('type.wordLang.prog'(sK0),'type.wordSem.state'(sK0,sK1)),'const.pair.,_2'(s('type.wordLang.prog'(sK0),sK3),s('type.wordSem.state'(sK0,sK1),sK2)))))))) ) <=> ~$spl538),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl538])])).
fof(f2940,plain,(
  ( ! [X0] : (s('type.pair.prod'('type.option.option'('type.wordSem.result'(sK0)),'type.wordSem.state'(sK0,sK1)),X0) != s('type.pair.prod'('type.option.option'('type.wordSem.result'(sK0)),'type.wordSem.state'(sK0,sK1)),'const.wordSem.fix_clock_2'(s('type.wordSem.state'(sK0,sK1),sK2),s('type.pair.prod'('type.option.option'('type.wordSem.result'(sK0)),'type.wordSem.state'(sK0,sK1)),'const.wordSem.evaluate_1'(s('type.pair.prod'('type.wordLang.prog'(sK0),'type.wordSem.state'(sK0,sK1)),'const.pair.,_2'(s('type.wordLang.prog'(sK0),sK3),s('type.wordSem.state'(sK0,sK1),sK2)))))))) ) | ($spl0 | $spl56)),
  inference(superposition,[],[f368,f405])).
fof(f2979,plain,(
  $false | $spl538),
  inference(equality_resolution,[],[f2969])).
% SZS output end Proof for thm.wordSem
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 45
% Passive clauses: 270
% Generated clauses: 2685
% Final active clauses: 43
% Final passive clauses: 223
% Input formulas: 68
% Initial clauses: 111
% 
% Duplicate literals: 179
% Trivial inequalities: 37
% Fw subsumption resolutions: 101
% Fw demodulations: 134
% Bw demodulations: 4
% Condensations: 259
% Global subsumptions: 7
% 
% Simple tautologies: 99
% Equational tautologies: 31
% Forward subsumptions: 1067
% 
% Binary resolution: 49
% Factoring: 1
% Forward superposition: 587
% Backward superposition: 817
% Self superposition: 65
% Equality factoring: 52
% Equality resolution: 10
% 
% SAT solver clauses: 619
% SAT solver unit clauses: 148
% SAT solver binary clauses: 44
% SAT solver learnt clauses: 15
% 
% Sat splitting refutations: 1
% 
% TWLsolver clauses: 590
% TWLsolver calls for satisfiability: 354
% 
% Memory used [KB]: 2942
% Time elapsed: 0.102 s
% ------------------------------
% ------------------------------
% Success in time 0.734 s
