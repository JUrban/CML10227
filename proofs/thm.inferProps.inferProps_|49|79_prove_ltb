Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 150 next slice time: 5
dis+11_7_3 on thm.inferProps
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.inferProps
% SZS output start Proof for thm.inferProps
fof(f218,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f217,f27,f43,f41,f39,f37,f76,f215,f26,f44,f216,f23,f45])).
fof(f45,plain,(
  ( ! [X7] : (s('type.infer_t.infer_t',X7) = s('type.infer_t.infer_t',happ(s(fun('type.infer_t.infer_t','type.infer_t.infer_t'),'const.infer.infer_deBruijn_subst_1'(s('type.list.list'('type.infer_t.infer_t'),'const.list.NIL_0'))),s('type.infer_t.infer_t',X7)))) ) | $spl10),
  inference(cnf_transformation,[],[f45_D])).
fof(f45_D,plain,(
  ( ! [X7] : (s('type.infer_t.infer_t',X7) = s('type.infer_t.infer_t',happ(s(fun('type.infer_t.infer_t','type.infer_t.infer_t'),'const.infer.infer_deBruijn_subst_1'(s('type.list.list'('type.infer_t.infer_t'),'const.list.NIL_0'))),s('type.infer_t.infer_t',X7)))) ) <=> ~$spl10),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl10])])).
fof(f23,plain,(
  ( ! [X7,X5] : (s('type.infer_t.infer_t',X5) = s('type.infer_t.infer_t',happ(s(fun('type.infer_t.infer_t','type.infer_t.infer_t'),'const.infer.infer_deBruijn_subst_1'(s('type.list.list'('type.infer_t.infer_t'),'const.list.NIL_0'))),s('type.infer_t.infer_t',X5))) | s('type.infer_t.infer_t',X7) = s('type.infer_t.infer_t',happ(s(fun('type.infer_t.infer_t','type.infer_t.infer_t'),'const.infer.infer_deBruijn_subst_1'(s('type.list.list'('type.infer_t.infer_t'),'const.list.NIL_0'))),s('type.infer_t.infer_t',X7)))) )),
  inference(cnf_transformation,[],[f20])).
fof(f20,plain,(
  ((! [X7] : s('type.infer_t.infer_t',X7) = s('type.infer_t.infer_t',happ(s(fun('type.infer_t.infer_t','type.infer_t.infer_t'),'const.infer.infer_deBruijn_subst_1'(s('type.list.list'('type.infer_t.infer_t'),'const.list.NIL_0'))),s('type.infer_t.infer_t',X7))) & ! [X6] : s('type.list.list'('type.infer_t.infer_t'),X6) = s('type.list.list'('type.infer_t.infer_t'),'const.list.MAP_2'(s(fun('type.infer_t.infer_t','type.infer_t.infer_t'),'const.infer.infer_deBruijn_subst_1'(s('type.list.list'('type.infer_t.infer_t'),'const.list.NIL_0'))),s('type.list.list'('type.infer_t.infer_t'),X6)))) | (! [X5] : s('type.infer_t.infer_t',X5) = s('type.infer_t.infer_t',happ(s(fun('type.infer_t.infer_t','type.infer_t.infer_t'),'const.infer.infer_deBruijn_subst_1'(s('type.list.list'('type.infer_t.infer_t'),'const.list.NIL_0'))),s('type.infer_t.infer_t',X5))) & ! [X4] : s('type.list.list'('type.infer_t.infer_t'),X4) = s('type.list.list'('type.infer_t.infer_t'),'const.list.MAP_2'(s(fun('type.infer_t.infer_t','type.infer_t.infer_t'),'const.infer.infer_deBruijn_subst_1'(s('type.list.list'('type.infer_t.infer_t'),'const.list.NIL_0'))),s('type.list.list'('type.infer_t.infer_t'),X4))))) & (s('type.infer_t.infer_t',sK0) != s('type.infer_t.infer_t',happ(s(fun('type.infer_t.infer_t','type.infer_t.infer_t'),'const.infer.infer_deBruijn_subst_1'(s('type.list.list'('type.infer_t.infer_t'),'const.list.NIL_0'))),s('type.infer_t.infer_t',sK0))) | s('type.list.list'('type.infer_t.infer_t'),sK1) != s('type.list.list'('type.infer_t.infer_t'),'const.list.MAP_2'(s(fun('type.infer_t.infer_t','type.infer_t.infer_t'),'const.infer.infer_deBruijn_subst_1'(s('type.list.list'('type.infer_t.infer_t'),'const.list.NIL_0'))),s('type.list.list'('type.infer_t.infer_t'),sK1))) | s('type.infer_t.infer_t',sK2) != s('type.infer_t.infer_t',happ(s(fun('type.infer_t.infer_t','type.infer_t.infer_t'),'const.infer.infer_deBruijn_subst_1'(s('type.list.list'('type.infer_t.infer_t'),'const.list.NIL_0'))),s('type.infer_t.infer_t',sK2))) | s('type.list.list'('type.infer_t.infer_t'),sK3) != s('type.list.list'('type.infer_t.infer_t'),'const.list.MAP_2'(s(fun('type.infer_t.infer_t','type.infer_t.infer_t'),'const.infer.infer_deBruijn_subst_1'(s('type.list.list'('type.infer_t.infer_t'),'const.list.NIL_0'))),s('type.list.list'('type.infer_t.infer_t'),sK3))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1,sK2,sK3])],[f19])).
fof(f19,plain,(
  ((! [X7] : s('type.infer_t.infer_t',X7) = s('type.infer_t.infer_t',happ(s(fun('type.infer_t.infer_t','type.infer_t.infer_t'),'const.infer.infer_deBruijn_subst_1'(s('type.list.list'('type.infer_t.infer_t'),'const.list.NIL_0'))),s('type.infer_t.infer_t',X7))) & ! [X6] : s('type.list.list'('type.infer_t.infer_t'),X6) = s('type.list.list'('type.infer_t.infer_t'),'const.list.MAP_2'(s(fun('type.infer_t.infer_t','type.infer_t.infer_t'),'const.infer.infer_deBruijn_subst_1'(s('type.list.list'('type.infer_t.infer_t'),'const.list.NIL_0'))),s('type.list.list'('type.infer_t.infer_t'),X6)))) | (! [X5] : s('type.infer_t.infer_t',X5) = s('type.infer_t.infer_t',happ(s(fun('type.infer_t.infer_t','type.infer_t.infer_t'),'const.infer.infer_deBruijn_subst_1'(s('type.list.list'('type.infer_t.infer_t'),'const.list.NIL_0'))),s('type.infer_t.infer_t',X5))) & ! [X4] : s('type.list.list'('type.infer_t.infer_t'),X4) = s('type.list.list'('type.infer_t.infer_t'),'const.list.MAP_2'(s(fun('type.infer_t.infer_t','type.infer_t.infer_t'),'const.infer.infer_deBruijn_subst_1'(s('type.list.list'('type.infer_t.infer_t'),'const.list.NIL_0'))),s('type.list.list'('type.infer_t.infer_t'),X4))))) & (? [X3] : s('type.infer_t.infer_t',X3) != s('type.infer_t.infer_t',happ(s(fun('type.infer_t.infer_t','type.infer_t.infer_t'),'const.infer.infer_deBruijn_subst_1'(s('type.list.list'('type.infer_t.infer_t'),'const.list.NIL_0'))),s('type.infer_t.infer_t',X3))) | ? [X2] : s('type.list.list'('type.infer_t.infer_t'),X2) != s('type.list.list'('type.infer_t.infer_t'),'const.list.MAP_2'(s(fun('type.infer_t.infer_t','type.infer_t.infer_t'),'const.infer.infer_deBruijn_subst_1'(s('type.list.list'('type.infer_t.infer_t'),'const.list.NIL_0'))),s('type.list.list'('type.infer_t.infer_t'),X2))) | ? [X1] : s('type.infer_t.infer_t',X1) != s('type.infer_t.infer_t',happ(s(fun('type.infer_t.infer_t','type.infer_t.infer_t'),'const.infer.infer_deBruijn_subst_1'(s('type.list.list'('type.infer_t.infer_t'),'const.list.NIL_0'))),s('type.infer_t.infer_t',X1))) | ? [X0] : s('type.list.list'('type.infer_t.infer_t'),X0) != s('type.list.list'('type.infer_t.infer_t'),'const.list.MAP_2'(s(fun('type.infer_t.infer_t','type.infer_t.infer_t'),'const.infer.infer_deBruijn_subst_1'(s('type.list.list'('type.infer_t.infer_t'),'const.list.NIL_0'))),s('type.list.list'('type.infer_t.infer_t'),X0))))),
  inference(rectify,[],[f18])).
fof(f18,plain,(
  ((! [X1] : s('type.infer_t.infer_t',X1) = s('type.infer_t.infer_t',happ(s(fun('type.infer_t.infer_t','type.infer_t.infer_t'),'const.infer.infer_deBruijn_subst_1'(s('type.list.list'('type.infer_t.infer_t'),'const.list.NIL_0'))),s('type.infer_t.infer_t',X1))) & ! [X0] : s('type.list.list'('type.infer_t.infer_t'),X0) = s('type.list.list'('type.infer_t.infer_t'),'const.list.MAP_2'(s(fun('type.infer_t.infer_t','type.infer_t.infer_t'),'const.infer.infer_deBruijn_subst_1'(s('type.list.list'('type.infer_t.infer_t'),'const.list.NIL_0'))),s('type.list.list'('type.infer_t.infer_t'),X0)))) | (! [X3] : s('type.infer_t.infer_t',X3) = s('type.infer_t.infer_t',happ(s(fun('type.infer_t.infer_t','type.infer_t.infer_t'),'const.infer.infer_deBruijn_subst_1'(s('type.list.list'('type.infer_t.infer_t'),'const.list.NIL_0'))),s('type.infer_t.infer_t',X3))) & ! [X2] : s('type.list.list'('type.infer_t.infer_t'),X2) = s('type.list.list'('type.infer_t.infer_t'),'const.list.MAP_2'(s(fun('type.infer_t.infer_t','type.infer_t.infer_t'),'const.infer.infer_deBruijn_subst_1'(s('type.list.list'('type.infer_t.infer_t'),'const.list.NIL_0'))),s('type.list.list'('type.infer_t.infer_t'),X2))))) & (? [X1] : s('type.infer_t.infer_t',X1) != s('type.infer_t.infer_t',happ(s(fun('type.infer_t.infer_t','type.infer_t.infer_t'),'const.infer.infer_deBruijn_subst_1'(s('type.list.list'('type.infer_t.infer_t'),'const.list.NIL_0'))),s('type.infer_t.infer_t',X1))) | ? [X0] : s('type.list.list'('type.infer_t.infer_t'),X0) != s('type.list.list'('type.infer_t.infer_t'),'const.list.MAP_2'(s(fun('type.infer_t.infer_t','type.infer_t.infer_t'),'const.infer.infer_deBruijn_subst_1'(s('type.list.list'('type.infer_t.infer_t'),'const.list.NIL_0'))),s('type.list.list'('type.infer_t.infer_t'),X0))) | ? [X3] : s('type.infer_t.infer_t',X3) != s('type.infer_t.infer_t',happ(s(fun('type.infer_t.infer_t','type.infer_t.infer_t'),'const.infer.infer_deBruijn_subst_1'(s('type.list.list'('type.infer_t.infer_t'),'const.list.NIL_0'))),s('type.infer_t.infer_t',X3))) | ? [X2] : s('type.list.list'('type.infer_t.infer_t'),X2) != s('type.list.list'('type.infer_t.infer_t'),'const.list.MAP_2'(s(fun('type.infer_t.infer_t','type.infer_t.infer_t'),'const.infer.infer_deBruijn_subst_1'(s('type.list.list'('type.infer_t.infer_t'),'const.list.NIL_0'))),s('type.list.list'('type.infer_t.infer_t'),X2))))),
  inference(flattening,[],[f17])).
fof(f17,plain,(
  ((! [X1] : s('type.infer_t.infer_t',X1) = s('type.infer_t.infer_t',happ(s(fun('type.infer_t.infer_t','type.infer_t.infer_t'),'const.infer.infer_deBruijn_subst_1'(s('type.list.list'('type.infer_t.infer_t'),'const.list.NIL_0'))),s('type.infer_t.infer_t',X1))) & ! [X0] : s('type.list.list'('type.infer_t.infer_t'),X0) = s('type.list.list'('type.infer_t.infer_t'),'const.list.MAP_2'(s(fun('type.infer_t.infer_t','type.infer_t.infer_t'),'const.infer.infer_deBruijn_subst_1'(s('type.list.list'('type.infer_t.infer_t'),'const.list.NIL_0'))),s('type.list.list'('type.infer_t.infer_t'),X0)))) | (! [X3] : s('type.infer_t.infer_t',X3) = s('type.infer_t.infer_t',happ(s(fun('type.infer_t.infer_t','type.infer_t.infer_t'),'const.infer.infer_deBruijn_subst_1'(s('type.list.list'('type.infer_t.infer_t'),'const.list.NIL_0'))),s('type.infer_t.infer_t',X3))) & ! [X2] : s('type.list.list'('type.infer_t.infer_t'),X2) = s('type.list.list'('type.infer_t.infer_t'),'const.list.MAP_2'(s(fun('type.infer_t.infer_t','type.infer_t.infer_t'),'const.infer.infer_deBruijn_subst_1'(s('type.list.list'('type.infer_t.infer_t'),'const.list.NIL_0'))),s('type.list.list'('type.infer_t.infer_t'),X2))))) & ((? [X1] : s('type.infer_t.infer_t',X1) != s('type.infer_t.infer_t',happ(s(fun('type.infer_t.infer_t','type.infer_t.infer_t'),'const.infer.infer_deBruijn_subst_1'(s('type.list.list'('type.infer_t.infer_t'),'const.list.NIL_0'))),s('type.infer_t.infer_t',X1))) | ? [X0] : s('type.list.list'('type.infer_t.infer_t'),X0) != s('type.list.list'('type.infer_t.infer_t'),'const.list.MAP_2'(s(fun('type.infer_t.infer_t','type.infer_t.infer_t'),'const.infer.infer_deBruijn_subst_1'(s('type.list.list'('type.infer_t.infer_t'),'const.list.NIL_0'))),s('type.list.list'('type.infer_t.infer_t'),X0)))) | (? [X3] : s('type.infer_t.infer_t',X3) != s('type.infer_t.infer_t',happ(s(fun('type.infer_t.infer_t','type.infer_t.infer_t'),'const.infer.infer_deBruijn_subst_1'(s('type.list.list'('type.infer_t.infer_t'),'const.list.NIL_0'))),s('type.infer_t.infer_t',X3))) | ? [X2] : s('type.list.list'('type.infer_t.infer_t'),X2) != s('type.list.list'('type.infer_t.infer_t'),'const.list.MAP_2'(s(fun('type.infer_t.infer_t','type.infer_t.infer_t'),'const.infer.infer_deBruijn_subst_1'(s('type.list.list'('type.infer_t.infer_t'),'const.list.NIL_0'))),s('type.list.list'('type.infer_t.infer_t'),X2)))))),
  inference(nnf_transformation,[],[f15])).
fof(f15,plain,(
  (! [X1] : s('type.infer_t.infer_t',X1) = s('type.infer_t.infer_t',happ(s(fun('type.infer_t.infer_t','type.infer_t.infer_t'),'const.infer.infer_deBruijn_subst_1'(s('type.list.list'('type.infer_t.infer_t'),'const.list.NIL_0'))),s('type.infer_t.infer_t',X1))) & ! [X0] : s('type.list.list'('type.infer_t.infer_t'),X0) = s('type.list.list'('type.infer_t.infer_t'),'const.list.MAP_2'(s(fun('type.infer_t.infer_t','type.infer_t.infer_t'),'const.infer.infer_deBruijn_subst_1'(s('type.list.list'('type.infer_t.infer_t'),'const.list.NIL_0'))),s('type.list.list'('type.infer_t.infer_t'),X0)))) <~> (! [X3] : s('type.infer_t.infer_t',X3) = s('type.infer_t.infer_t',happ(s(fun('type.infer_t.infer_t','type.infer_t.infer_t'),'const.infer.infer_deBruijn_subst_1'(s('type.list.list'('type.infer_t.infer_t'),'const.list.NIL_0'))),s('type.infer_t.infer_t',X3))) & ! [X2] : s('type.list.list'('type.infer_t.infer_t'),X2) = s('type.list.list'('type.infer_t.infer_t'),'const.list.MAP_2'(s(fun('type.infer_t.infer_t','type.infer_t.infer_t'),'const.infer.infer_deBruijn_subst_1'(s('type.list.list'('type.infer_t.infer_t'),'const.list.NIL_0'))),s('type.list.list'('type.infer_t.infer_t'),X2))))),
  inference(ennf_transformation,[],[f9])).
fof(f9,plain,(
  ~((! [X1] : s('type.infer_t.infer_t',X1) = s('type.infer_t.infer_t',happ(s(fun('type.infer_t.infer_t','type.infer_t.infer_t'),'const.infer.infer_deBruijn_subst_1'(s('type.list.list'('type.infer_t.infer_t'),'const.list.NIL_0'))),s('type.infer_t.infer_t',X1))) & ! [X0] : s('type.list.list'('type.infer_t.infer_t'),X0) = s('type.list.list'('type.infer_t.infer_t'),'const.list.MAP_2'(s(fun('type.infer_t.infer_t','type.infer_t.infer_t'),'const.infer.infer_deBruijn_subst_1'(s('type.list.list'('type.infer_t.infer_t'),'const.list.NIL_0'))),s('type.list.list'('type.infer_t.infer_t'),X0)))) <=> (! [X3] : s('type.infer_t.infer_t',X3) = s('type.infer_t.infer_t',happ(s(fun('type.infer_t.infer_t','type.infer_t.infer_t'),'const.infer.infer_deBruijn_subst_1'(s('type.list.list'('type.infer_t.infer_t'),'const.list.NIL_0'))),s('type.infer_t.infer_t',X3))) & ! [X2] : s('type.list.list'('type.infer_t.infer_t'),X2) = s('type.list.list'('type.infer_t.infer_t'),'const.list.MAP_2'(s(fun('type.infer_t.infer_t','type.infer_t.infer_t'),'const.infer.infer_deBruijn_subst_1'(s('type.list.list'('type.infer_t.infer_t'),'const.list.NIL_0'))),s('type.list.list'('type.infer_t.infer_t'),X2)))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~((! [X6] : s('type.infer_t.infer_t',X6) = s('type.infer_t.infer_t',happ(s(fun('type.infer_t.infer_t','type.infer_t.infer_t'),'const.infer.infer_deBruijn_subst_1'(s('type.list.list'('type.infer_t.infer_t'),'const.list.NIL_0'))),s('type.infer_t.infer_t',X6))) & ! [X7] : s('type.list.list'('type.infer_t.infer_t'),X7) = s('type.list.list'('type.infer_t.infer_t'),'const.list.MAP_2'(s(fun('type.infer_t.infer_t','type.infer_t.infer_t'),'const.infer.infer_deBruijn_subst_1'(s('type.list.list'('type.infer_t.infer_t'),'const.list.NIL_0'))),s('type.list.list'('type.infer_t.infer_t'),X7)))) <=> (! [X6] : s('type.infer_t.infer_t',X6) = s('type.infer_t.infer_t',happ(s(fun('type.infer_t.infer_t','type.infer_t.infer_t'),'const.infer.infer_deBruijn_subst_1'(s('type.list.list'('type.infer_t.infer_t'),'const.list.NIL_0'))),s('type.infer_t.infer_t',X6))) & ! [X7] : s('type.list.list'('type.infer_t.infer_t'),X7) = s('type.list.list'('type.infer_t.infer_t'),'const.list.MAP_2'(s(fun('type.infer_t.infer_t','type.infer_t.infer_t'),'const.infer.infer_deBruijn_subst_1'(s('type.list.list'('type.infer_t.infer_t'),'const.list.NIL_0'))),s('type.list.list'('type.infer_t.infer_t'),X7)))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  (! [X6] : s('type.infer_t.infer_t',X6) = s('type.infer_t.infer_t',happ(s(fun('type.infer_t.infer_t','type.infer_t.infer_t'),'const.infer.infer_deBruijn_subst_1'(s('type.list.list'('type.infer_t.infer_t'),'const.list.NIL_0'))),s('type.infer_t.infer_t',X6))) & ! [X7] : s('type.list.list'('type.infer_t.infer_t'),X7) = s('type.list.list'('type.infer_t.infer_t'),'const.list.MAP_2'(s(fun('type.infer_t.infer_t','type.infer_t.infer_t'),'const.infer.infer_deBruijn_subst_1'(s('type.list.list'('type.infer_t.infer_t'),'const.list.NIL_0'))),s('type.list.list'('type.infer_t.infer_t'),X7)))) <=> (! [X6] : s('type.infer_t.infer_t',X6) = s('type.infer_t.infer_t',happ(s(fun('type.infer_t.infer_t','type.infer_t.infer_t'),'const.infer.infer_deBruijn_subst_1'(s('type.list.list'('type.infer_t.infer_t'),'const.list.NIL_0'))),s('type.infer_t.infer_t',X6))) & ! [X7] : s('type.list.list'('type.infer_t.infer_t'),X7) = s('type.list.list'('type.infer_t.infer_t'),'const.list.MAP_2'(s(fun('type.infer_t.infer_t','type.infer_t.infer_t'),'const.infer.infer_deBruijn_subst_1'(s('type.list.list'('type.infer_t.infer_t'),'const.list.NIL_0'))),s('type.list.list'('type.infer_t.infer_t'),X7))))),
  file('thm.inferProps.inferProps_|49|79_prove_ltb','thm.inferProps.inferProps_|49|79_prove_ltb')).
fof(f216,plain,(
  $false | ($spl7 | $spl8)),
  inference(subsumption_resolution,[],[f43,f44])).
fof(f44,plain,(
  ( ! [X6] : (s('type.list.list'('type.infer_t.infer_t'),X6) = s('type.list.list'('type.infer_t.infer_t'),'const.list.MAP_2'(s(fun('type.infer_t.infer_t','type.infer_t.infer_t'),'const.infer.infer_deBruijn_subst_1'(s('type.list.list'('type.infer_t.infer_t'),'const.list.NIL_0'))),s('type.list.list'('type.infer_t.infer_t'),X6)))) ) | $spl8),
  inference(cnf_transformation,[],[f44_D])).
fof(f44_D,plain,(
  ( ! [X6] : (s('type.list.list'('type.infer_t.infer_t'),X6) = s('type.list.list'('type.infer_t.infer_t'),'const.list.MAP_2'(s(fun('type.infer_t.infer_t','type.infer_t.infer_t'),'const.infer.infer_deBruijn_subst_1'(s('type.list.list'('type.infer_t.infer_t'),'const.list.NIL_0'))),s('type.list.list'('type.infer_t.infer_t'),X6)))) ) <=> ~$spl8),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl8])])).
fof(f26,plain,(
  ( ! [X6,X4] : (s('type.list.list'('type.infer_t.infer_t'),X4) = s('type.list.list'('type.infer_t.infer_t'),'const.list.MAP_2'(s(fun('type.infer_t.infer_t','type.infer_t.infer_t'),'const.infer.infer_deBruijn_subst_1'(s('type.list.list'('type.infer_t.infer_t'),'const.list.NIL_0'))),s('type.list.list'('type.infer_t.infer_t'),X4))) | s('type.list.list'('type.infer_t.infer_t'),X6) = s('type.list.list'('type.infer_t.infer_t'),'const.list.MAP_2'(s(fun('type.infer_t.infer_t','type.infer_t.infer_t'),'const.infer.infer_deBruijn_subst_1'(s('type.list.list'('type.infer_t.infer_t'),'const.list.NIL_0'))),s('type.list.list'('type.infer_t.infer_t'),X6)))) )),
  inference(cnf_transformation,[],[f20])).
fof(f215,plain,(
  $false | ($spl3 | $spl8)),
  inference(trivial_inequality_removal,[],[f214])).
fof(f214,plain,(
  s('type.list.list'('type.infer_t.infer_t'),sK1) != s('type.list.list'('type.infer_t.infer_t'),sK1) | ($spl3 | $spl8)),
  inference(superposition,[],[f39,f44])).
fof(f76,plain,(
  $false | ($spl1 | $spl10)),
  inference(trivial_inequality_removal,[],[f75])).
fof(f75,plain,(
  s('type.infer_t.infer_t',sK0) != s('type.infer_t.infer_t',sK0) | ($spl1 | $spl10)),
  inference(superposition,[],[f37,f45])).
fof(f37,plain,(
  s('type.infer_t.infer_t',sK0) != s('type.infer_t.infer_t',happ(s(fun('type.infer_t.infer_t','type.infer_t.infer_t'),'const.infer.infer_deBruijn_subst_1'(s('type.list.list'('type.infer_t.infer_t'),'const.list.NIL_0'))),s('type.infer_t.infer_t',sK0))) | $spl1),
  inference(cnf_transformation,[],[f37_D])).
fof(f37_D,plain,(
  s('type.infer_t.infer_t',sK0) != s('type.infer_t.infer_t',happ(s(fun('type.infer_t.infer_t','type.infer_t.infer_t'),'const.infer.infer_deBruijn_subst_1'(s('type.list.list'('type.infer_t.infer_t'),'const.list.NIL_0'))),s('type.infer_t.infer_t',sK0))) <=> ~$spl1),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1])])).
fof(f39,plain,(
  s('type.list.list'('type.infer_t.infer_t'),sK1) != s('type.list.list'('type.infer_t.infer_t'),'const.list.MAP_2'(s(fun('type.infer_t.infer_t','type.infer_t.infer_t'),'const.infer.infer_deBruijn_subst_1'(s('type.list.list'('type.infer_t.infer_t'),'const.list.NIL_0'))),s('type.list.list'('type.infer_t.infer_t'),sK1))) | $spl3),
  inference(cnf_transformation,[],[f39_D])).
fof(f39_D,plain,(
  s('type.list.list'('type.infer_t.infer_t'),sK1) != s('type.list.list'('type.infer_t.infer_t'),'const.list.MAP_2'(s(fun('type.infer_t.infer_t','type.infer_t.infer_t'),'const.infer.infer_deBruijn_subst_1'(s('type.list.list'('type.infer_t.infer_t'),'const.list.NIL_0'))),s('type.list.list'('type.infer_t.infer_t'),sK1))) <=> ~$spl3),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl3])])).
fof(f41,plain,(
  s('type.infer_t.infer_t',sK2) != s('type.infer_t.infer_t',happ(s(fun('type.infer_t.infer_t','type.infer_t.infer_t'),'const.infer.infer_deBruijn_subst_1'(s('type.list.list'('type.infer_t.infer_t'),'const.list.NIL_0'))),s('type.infer_t.infer_t',sK2))) | $spl5),
  inference(cnf_transformation,[],[f41_D])).
fof(f41_D,plain,(
  s('type.infer_t.infer_t',sK2) != s('type.infer_t.infer_t',happ(s(fun('type.infer_t.infer_t','type.infer_t.infer_t'),'const.infer.infer_deBruijn_subst_1'(s('type.list.list'('type.infer_t.infer_t'),'const.list.NIL_0'))),s('type.infer_t.infer_t',sK2))) <=> ~$spl5),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl5])])).
fof(f43,plain,(
  s('type.list.list'('type.infer_t.infer_t'),sK3) != s('type.list.list'('type.infer_t.infer_t'),'const.list.MAP_2'(s(fun('type.infer_t.infer_t','type.infer_t.infer_t'),'const.infer.infer_deBruijn_subst_1'(s('type.list.list'('type.infer_t.infer_t'),'const.list.NIL_0'))),s('type.list.list'('type.infer_t.infer_t'),sK3))) | $spl7),
  inference(cnf_transformation,[],[f43_D])).
fof(f43_D,plain,(
  s('type.list.list'('type.infer_t.infer_t'),sK3) != s('type.list.list'('type.infer_t.infer_t'),'const.list.MAP_2'(s(fun('type.infer_t.infer_t','type.infer_t.infer_t'),'const.infer.infer_deBruijn_subst_1'(s('type.list.list'('type.infer_t.infer_t'),'const.list.NIL_0'))),s('type.list.list'('type.infer_t.infer_t'),sK3))) <=> ~$spl7),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl7])])).
fof(f27,plain,(
  s('type.list.list'('type.infer_t.infer_t'),sK3) != s('type.list.list'('type.infer_t.infer_t'),'const.list.MAP_2'(s(fun('type.infer_t.infer_t','type.infer_t.infer_t'),'const.infer.infer_deBruijn_subst_1'(s('type.list.list'('type.infer_t.infer_t'),'const.list.NIL_0'))),s('type.list.list'('type.infer_t.infer_t'),sK3))) | s('type.infer_t.infer_t',sK2) != s('type.infer_t.infer_t',happ(s(fun('type.infer_t.infer_t','type.infer_t.infer_t'),'const.infer.infer_deBruijn_subst_1'(s('type.list.list'('type.infer_t.infer_t'),'const.list.NIL_0'))),s('type.infer_t.infer_t',sK2))) | s('type.list.list'('type.infer_t.infer_t'),sK1) != s('type.list.list'('type.infer_t.infer_t'),'const.list.MAP_2'(s(fun('type.infer_t.infer_t','type.infer_t.infer_t'),'const.infer.infer_deBruijn_subst_1'(s('type.list.list'('type.infer_t.infer_t'),'const.list.NIL_0'))),s('type.list.list'('type.infer_t.infer_t'),sK1))) | s('type.infer_t.infer_t',sK0) != s('type.infer_t.infer_t',happ(s(fun('type.infer_t.infer_t','type.infer_t.infer_t'),'const.infer.infer_deBruijn_subst_1'(s('type.list.list'('type.infer_t.infer_t'),'const.list.NIL_0'))),s('type.infer_t.infer_t',sK0)))),
  inference(cnf_transformation,[],[f20])).
fof(f217,plain,(
  $false | ($spl5 | $spl10)),
  inference(subsumption_resolution,[],[f41,f45])).
% SZS output end Proof for thm.inferProps
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 13
% Passive clauses: 24
% Generated clauses: 181
% Final active clauses: 9
% Final passive clauses: 5
% Input formulas: 7
% Initial clauses: 12
% 
% Duplicate literals: 37
% Trivial inequalities: 5
% Fw subsumption resolutions: 2
% 
% Simple tautologies: 16
% Equational tautologies: 15
% Forward subsumptions: 74
% 
% Binary resolution: 4
% Forward superposition: 26
% Backward superposition: 32
% Self superposition: 26
% Equality factoring: 26
% 
% Split clauses: 6
% Split components: 14
% SAT solver clauses: 14
% SAT solver unit clauses: 3
% SAT solver binary clauses: 9
% SAT solver learnt clauses: 1
% 
% Sat splits: 6
% Sat splitting refutations: 5
% 
% TWLsolver clauses: 11
% TWLsolver calls for satisfiability: 6
% 
% Memory used [KB]: 767
% Time elapsed: 0.010 s
% ------------------------------
% ------------------------------
% Success in time 0.004 s
