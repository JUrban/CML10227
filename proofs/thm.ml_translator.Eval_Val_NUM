Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 149 next slice time: 5
dis+11_7_3 on thm.ml_translator
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.ml_translator
% SZS output start Proof for thm.ml_translator
fof(f292,plain,(
  $false),
  inference(resolution,[],[f273,f67])).
fof(f67,plain,(
  ~p(s(bool,'const.ml_translator.Eval_3'(s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),sK0),s('type.ast.exp','const.ast.Lit_1'(s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK1))))))),s(fun('type.semanticPrimitives.v',bool),'const.ml_translator.NUM_1'(s('type.num.num',sK1))))))),
  inference(cnf_transformation,[],[f45])).
fof(f45,plain,(
  ~p(s(bool,'const.ml_translator.Eval_3'(s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),sK0),s('type.ast.exp','const.ast.Lit_1'(s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK1))))))),s(fun('type.semanticPrimitives.v',bool),'const.ml_translator.NUM_1'(s('type.num.num',sK1))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1])],[f43])).
fof(f43,plain,(
  ? [X0,X1] : ~p(s(bool,'const.ml_translator.Eval_3'(s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),X0),s('type.ast.exp','const.ast.Lit_1'(s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X1))))))),s(fun('type.semanticPrimitives.v',bool),'const.ml_translator.NUM_1'(s('type.num.num',X1))))))),
  inference(ennf_transformation,[],[f23])).
fof(f23,plain,(
  ~! [X0,X1] : p(s(bool,'const.ml_translator.Eval_3'(s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),X0),s('type.ast.exp','const.ast.Lit_1'(s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X1))))))),s(fun('type.semanticPrimitives.v',bool),'const.ml_translator.NUM_1'(s('type.num.num',X1))))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6,X7] : p(s(bool,'const.ml_translator.Eval_3'(s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),X6),s('type.ast.exp','const.ast.Lit_1'(s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X7))))))),s(fun('type.semanticPrimitives.v',bool),'const.ml_translator.NUM_1'(s('type.num.num',X7))))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6,X7] : p(s(bool,'const.ml_translator.Eval_3'(s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),X6),s('type.ast.exp','const.ast.Lit_1'(s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X7))))))),s(fun('type.semanticPrimitives.v',bool),'const.ml_translator.NUM_1'(s('type.num.num',X7))))))),
  file('thm.ml_translator.Eval_Val_NUM','thm.ml_translator.Eval_Val_NUM')).
fof(f273,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.ml_translator.Eval_3'(s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),X1),s('type.ast.exp','const.ast.Lit_1'(s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X0))))))),s(fun('type.semanticPrimitives.v',bool),'const.ml_translator.NUM_1'(s('type.num.num',X0))))))) )),
  inference(superposition,[],[f103,f71])).
fof(f71,plain,(
  ( ! [X0] : (s(fun('type.semanticPrimitives.v',bool),'const.ml_translator.NUM_1'(s('type.num.num',X0))) = s(fun('type.semanticPrimitives.v',bool),'const.ml_translator.INT_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X0)))))) )),
  inference(cnf_transformation,[],[f25])).
fof(f25,plain,(
  ! [X0] : s(fun('type.semanticPrimitives.v',bool),'const.ml_translator.NUM_1'(s('type.num.num',X0))) = s(fun('type.semanticPrimitives.v',bool),'const.ml_translator.INT_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X0)))))),
  inference(rectify,[],[f10])).
fof(f10,axiom,(
  ! [X7] : s(fun('type.semanticPrimitives.v',bool),'const.ml_translator.NUM_1'(s('type.num.num',X7))) = s(fun('type.semanticPrimitives.v',bool),'const.ml_translator.INT_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X7)))))),
  file('thm.ml_translator.Eval_Val_NUM','thm.ml_translator.NUM_def')).
fof(f103,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.ml_translator.Eval_3'(s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),X0),s('type.ast.exp','const.ast.Lit_1'(s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',X1))))),s(fun('type.semanticPrimitives.v',bool),'const.ml_translator.INT_1'(s('type.integer.int',X1))))))) )),
  inference(cnf_transformation,[],[f38])).
fof(f38,plain,(
  ! [X0,X1] : p(s(bool,'const.ml_translator.Eval_3'(s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),X0),s('type.ast.exp','const.ast.Lit_1'(s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',X1))))),s(fun('type.semanticPrimitives.v',bool),'const.ml_translator.INT_1'(s('type.integer.int',X1))))))),
  inference(rectify,[],[f11])).
fof(f11,axiom,(
  ! [X6,X7] : p(s(bool,'const.ml_translator.Eval_3'(s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),X6),s('type.ast.exp','const.ast.Lit_1'(s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',X7))))),s(fun('type.semanticPrimitives.v',bool),'const.ml_translator.INT_1'(s('type.integer.int',X7))))))),
  file('thm.ml_translator.Eval_Val_NUM','thm.ml_translator.Eval_Val_INT')).
% SZS output end Proof for thm.ml_translator
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 14
% Passive clauses: 32
% Generated clauses: 214
% Final active clauses: 13
% Final passive clauses: 12
% Input formulas: 21
% Initial clauses: 39
% 
% Duplicate literals: 38
% Trivial inequalities: 2
% Fw subsumption resolutions: 5
% 
% Simple tautologies: 37
% Equational tautologies: 14
% Forward subsumptions: 68
% 
% Binary resolution: 7
% Forward superposition: 38
% Backward superposition: 30
% Self superposition: 24
% Equality factoring: 26
% 
% Split clauses: 10
% Split components: 20
% SAT solver clauses: 14
% SAT solver unit clauses: 2
% SAT solver binary clauses: 9
% 
% Sat splits: 10
% 
% TWLsolver clauses: 14
% TWLsolver calls for satisfiability: 6
% 
% Memory used [KB]: 895
% Time elapsed: 0.018 s
% ------------------------------
% ------------------------------
% Success in time 0.05 s
