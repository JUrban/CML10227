Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 149 next slice time: 5
dis+11_7_3 on thm.stackSem
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.stackSem
% SZS output start Proof for thm.stackSem
fof(f522,plain,(
  $false),
  inference(subsumption_resolution,[],[f521,f21])).
fof(f21,plain,(
  p(s(bool,'T_0'))),
  inference(cnf_transformation,[],[f7])).
fof(f7,axiom,(
  p(s(bool,'T_0'))),
  file('thm.stackSem.datatype_state','thm.bool.TRUTH')).
fof(f521,plain,(
  ~p(s(bool,'T_0'))),
  inference(forward_demodulation,[],[f20,f25])).
fof(f25,plain,(
  ( ! [X0,X1] : (s(bool,'T_0') = s(bool,'const.bool.DATATYPE_1'(s(X0,X1)))) )),
  inference(cnf_transformation,[],[f13])).
fof(f13,plain,(
  ! [X0,X1] : s(bool,'T_0') = s(bool,'const.bool.DATATYPE_1'(s(X0,X1)))),
  inference(flattening,[],[f12])).
fof(f12,plain,(
  ! [X0] : ! [X1] : s(bool,'T_0') = s(bool,'const.bool.DATATYPE_1'(s(X0,X1)))),
  inference(rectify,[],[f8])).
fof(f8,axiom,(
  ! [X6] : ! [X26] : s(bool,'T_0') = s(bool,'const.bool.DATATYPE_1'(s(X6,X26)))),
  file('thm.stackSem.datatype_state','thm.bool.DATATYPE_TAG_THM')).
fof(f20,plain,(
  ~p(s(bool,'const.bool.DATATYPE_1'(s(bool,happ(s(fun(bool,bool),happ(s(fun(fun('type.num.num',bool),fun(bool,bool)),happ(s(fun('type.ffi.ffi_state'(sK1),fun(fun('type.num.num',bool),fun(bool,bool))),happ(s(fun('type.sptree.spt'('type.stackLang.prog'(sK0)),fun('type.ffi.ffi_state'(sK1),fun(fun('type.num.num',bool),fun(bool,bool)))),happ(s(fun('type.num.num',fun('type.sptree.spt'('type.stackLang.prog'(sK0)),fun('type.ffi.ffi_state'(sK1),fun(fun('type.num.num',bool),fun(bool,bool))))),happ(s(fun(bool,fun('type.num.num',fun('type.sptree.spt'('type.stackLang.prog'(sK0)),fun('type.ffi.ffi_state'(sK1),fun(fun('type.num.num',bool),fun(bool,bool)))))),happ(s(fun(bool,fun(bool,fun('type.num.num',fun('type.sptree.spt'('type.stackLang.prog'(sK0)),fun('type.ffi.ffi_state'(sK1),fun(fun('type.num.num',bool),fun(bool,bool))))))),happ(s(fun(bool,fun(bool,fun(bool,fun('type.num.num',fun('type.sptree.spt'('type.stackLang.prog'(sK0)),fun('type.ffi.ffi_state'(sK1),fun(fun('type.num.num',bool),fun(bool,bool)))))))),happ(s(fun(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),fun(bool,fun(bool,fun(bool,fun('type.num.num',fun('type.sptree.spt'('type.stackLang.prog'(sK0)),fun('type.ffi.ffi_state'(sK1),fun(fun('type.num.num',bool),fun(bool,bool))))))))),happ(s(fun('type.list.list'('type.fcp.cart'(bool,sK0)),fun(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),fun(bool,fun(bool,fun(bool,fun('type.num.num',fun('type.sptree.spt'('type.stackLang.prog'(sK0)),fun('type.ffi.ffi_state'(sK1),fun(fun('type.num.num',bool),fun(bool,bool)))))))))),happ(s(fun(fun('type.fcp.cart'(bool,sK0),bool),fun('type.list.list'('type.fcp.cart'(bool,sK0)),fun(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),fun(bool,fun(bool,fun(bool,fun('type.num.num',fun('type.sptree.spt'('type.stackLang.prog'(sK0)),fun('type.ffi.ffi_state'(sK1),fun(fun('type.num.num',bool),fun(bool,bool))))))))))),happ(s(fun(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),fun(fun('type.fcp.cart'(bool,sK0),bool),fun('type.list.list'('type.fcp.cart'(bool,sK0)),fun(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),fun(bool,fun(bool,fun(bool,fun('type.num.num',fun('type.sptree.spt'('type.stackLang.prog'(sK0)),fun('type.ffi.ffi_state'(sK1),fun(fun('type.num.num',bool),fun(bool,bool)))))))))))),happ(s(fun('type.num.num',fun(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),fun(fun('type.fcp.cart'(bool,sK0),bool),fun('type.list.list'('type.fcp.cart'(bool,sK0)),fun(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),fun(bool,fun(bool,fun(bool,fun('type.num.num',fun('type.sptree.spt'('type.stackLang.prog'(sK0)),fun('type.ffi.ffi_state'(sK1),fun(fun('type.num.num',bool),fun(bool,bool))))))))))))),happ(s(fun('type.list.list'('type.wordSem.word_loc'(sK0)),fun('type.num.num',fun(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),fun(fun('type.fcp.cart'(bool,sK0),bool),fun('type.list.list'('type.fcp.cart'(bool,sK0)),fun(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),fun(bool,fun(bool,fun(bool,fun('type.num.num',fun('type.sptree.spt'('type.stackLang.prog'(sK0)),fun('type.ffi.ffi_state'(sK1),fun(fun('type.num.num',bool),fun(bool,bool)))))))))))))),happ(s(fun('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),fun('type.list.list'('type.wordSem.word_loc'(sK0)),fun('type.num.num',fun(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),fun(fun('type.fcp.cart'(bool,sK0),bool),fun('type.list.list'('type.fcp.cart'(bool,sK0)),fun(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),fun(bool,fun(bool,fun(bool,fun('type.num.num',fun('type.sptree.spt'('type.stackLang.prog'(sK0)),fun('type.ffi.ffi_state'(sK1),fun(fun('type.num.num',bool),fun(bool,bool))))))))))))))),happ(s(fun('type.finite_map.fmap'('type.num.num','type.wordSem.word_loc'(sK0)),fun('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),fun('type.list.list'('type.wordSem.word_loc'(sK0)),fun('type.num.num',fun(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),fun(fun('type.fcp.cart'(bool,sK0),bool),fun('type.list.list'('type.fcp.cart'(bool,sK0)),fun(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),fun(bool,fun(bool,fun(bool,fun('type.num.num',fun('type.sptree.spt'('type.stackLang.prog'(sK0)),fun('type.ffi.ffi_state'(sK1),fun(fun('type.num.num',bool),fun(bool,bool)))))))))))))))),happ(s(fun('type.min.ind',fun('type.finite_map.fmap'('type.num.num','type.wordSem.word_loc'(sK0)),fun('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),fun('type.list.list'('type.wordSem.word_loc'(sK0)),fun('type.num.num',fun(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),fun(fun('type.fcp.cart'(bool,sK0),bool),fun('type.list.list'('type.fcp.cart'(bool,sK0)),fun(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),fun(bool,fun(bool,fun(bool,fun('type.num.num',fun('type.sptree.spt'('type.stackLang.prog'(sK0)),fun('type.ffi.ffi_state'(sK1),fun(fun('type.num.num',bool),fun(bool,bool))))))))))))))))),sK10),s('type.min.ind',sK6))),s('type.finite_map.fmap'('type.num.num','type.wordSem.word_loc'(sK0)),sK9))),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK5))),s('type.list.list'('type.wordSem.word_loc'(sK0)),sK8))),s('type.num.num',sK7))),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK11))),s(fun('type.fcp.cart'(bool,sK0),bool),sK12))),s('type.list.list'('type.fcp.cart'(bool,sK0)),sK18))),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK13))),s(bool,sK3))),s(bool,sK2))),s(bool,sK4))),s('type.num.num',sK17))),s('type.sptree.spt'('type.stackLang.prog'(sK0)),sK16))),s('type.ffi.ffi_state'(sK1),sK15))),s(fun('type.num.num',bool),sK14))),s(bool,sK19))))))),
  inference(cnf_transformation,[],[f18])).
fof(f18,plain,(
  ~p(s(bool,'const.bool.DATATYPE_1'(s(bool,happ(s(fun(bool,bool),happ(s(fun(fun('type.num.num',bool),fun(bool,bool)),happ(s(fun('type.ffi.ffi_state'(sK1),fun(fun('type.num.num',bool),fun(bool,bool))),happ(s(fun('type.sptree.spt'('type.stackLang.prog'(sK0)),fun('type.ffi.ffi_state'(sK1),fun(fun('type.num.num',bool),fun(bool,bool)))),happ(s(fun('type.num.num',fun('type.sptree.spt'('type.stackLang.prog'(sK0)),fun('type.ffi.ffi_state'(sK1),fun(fun('type.num.num',bool),fun(bool,bool))))),happ(s(fun(bool,fun('type.num.num',fun('type.sptree.spt'('type.stackLang.prog'(sK0)),fun('type.ffi.ffi_state'(sK1),fun(fun('type.num.num',bool),fun(bool,bool)))))),happ(s(fun(bool,fun(bool,fun('type.num.num',fun('type.sptree.spt'('type.stackLang.prog'(sK0)),fun('type.ffi.ffi_state'(sK1),fun(fun('type.num.num',bool),fun(bool,bool))))))),happ(s(fun(bool,fun(bool,fun(bool,fun('type.num.num',fun('type.sptree.spt'('type.stackLang.prog'(sK0)),fun('type.ffi.ffi_state'(sK1),fun(fun('type.num.num',bool),fun(bool,bool)))))))),happ(s(fun(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),fun(bool,fun(bool,fun(bool,fun('type.num.num',fun('type.sptree.spt'('type.stackLang.prog'(sK0)),fun('type.ffi.ffi_state'(sK1),fun(fun('type.num.num',bool),fun(bool,bool))))))))),happ(s(fun('type.list.list'('type.fcp.cart'(bool,sK0)),fun(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),fun(bool,fun(bool,fun(bool,fun('type.num.num',fun('type.sptree.spt'('type.stackLang.prog'(sK0)),fun('type.ffi.ffi_state'(sK1),fun(fun('type.num.num',bool),fun(bool,bool)))))))))),happ(s(fun(fun('type.fcp.cart'(bool,sK0),bool),fun('type.list.list'('type.fcp.cart'(bool,sK0)),fun(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),fun(bool,fun(bool,fun(bool,fun('type.num.num',fun('type.sptree.spt'('type.stackLang.prog'(sK0)),fun('type.ffi.ffi_state'(sK1),fun(fun('type.num.num',bool),fun(bool,bool))))))))))),happ(s(fun(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),fun(fun('type.fcp.cart'(bool,sK0),bool),fun('type.list.list'('type.fcp.cart'(bool,sK0)),fun(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),fun(bool,fun(bool,fun(bool,fun('type.num.num',fun('type.sptree.spt'('type.stackLang.prog'(sK0)),fun('type.ffi.ffi_state'(sK1),fun(fun('type.num.num',bool),fun(bool,bool)))))))))))),happ(s(fun('type.num.num',fun(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),fun(fun('type.fcp.cart'(bool,sK0),bool),fun('type.list.list'('type.fcp.cart'(bool,sK0)),fun(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),fun(bool,fun(bool,fun(bool,fun('type.num.num',fun('type.sptree.spt'('type.stackLang.prog'(sK0)),fun('type.ffi.ffi_state'(sK1),fun(fun('type.num.num',bool),fun(bool,bool))))))))))))),happ(s(fun('type.list.list'('type.wordSem.word_loc'(sK0)),fun('type.num.num',fun(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),fun(fun('type.fcp.cart'(bool,sK0),bool),fun('type.list.list'('type.fcp.cart'(bool,sK0)),fun(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),fun(bool,fun(bool,fun(bool,fun('type.num.num',fun('type.sptree.spt'('type.stackLang.prog'(sK0)),fun('type.ffi.ffi_state'(sK1),fun(fun('type.num.num',bool),fun(bool,bool)))))))))))))),happ(s(fun('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),fun('type.list.list'('type.wordSem.word_loc'(sK0)),fun('type.num.num',fun(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),fun(fun('type.fcp.cart'(bool,sK0),bool),fun('type.list.list'('type.fcp.cart'(bool,sK0)),fun(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),fun(bool,fun(bool,fun(bool,fun('type.num.num',fun('type.sptree.spt'('type.stackLang.prog'(sK0)),fun('type.ffi.ffi_state'(sK1),fun(fun('type.num.num',bool),fun(bool,bool))))))))))))))),happ(s(fun('type.finite_map.fmap'('type.num.num','type.wordSem.word_loc'(sK0)),fun('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),fun('type.list.list'('type.wordSem.word_loc'(sK0)),fun('type.num.num',fun(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),fun(fun('type.fcp.cart'(bool,sK0),bool),fun('type.list.list'('type.fcp.cart'(bool,sK0)),fun(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),fun(bool,fun(bool,fun(bool,fun('type.num.num',fun('type.sptree.spt'('type.stackLang.prog'(sK0)),fun('type.ffi.ffi_state'(sK1),fun(fun('type.num.num',bool),fun(bool,bool)))))))))))))))),happ(s(fun('type.min.ind',fun('type.finite_map.fmap'('type.num.num','type.wordSem.word_loc'(sK0)),fun('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),fun('type.list.list'('type.wordSem.word_loc'(sK0)),fun('type.num.num',fun(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),fun(fun('type.fcp.cart'(bool,sK0),bool),fun('type.list.list'('type.fcp.cart'(bool,sK0)),fun(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),fun(bool,fun(bool,fun(bool,fun('type.num.num',fun('type.sptree.spt'('type.stackLang.prog'(sK0)),fun('type.ffi.ffi_state'(sK1),fun(fun('type.num.num',bool),fun(bool,bool))))))))))))))))),sK10),s('type.min.ind',sK6))),s('type.finite_map.fmap'('type.num.num','type.wordSem.word_loc'(sK0)),sK9))),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),sK5))),s('type.list.list'('type.wordSem.word_loc'(sK0)),sK8))),s('type.num.num',sK7))),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),sK11))),s(fun('type.fcp.cart'(bool,sK0),bool),sK12))),s('type.list.list'('type.fcp.cart'(bool,sK0)),sK18))),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),sK13))),s(bool,sK3))),s(bool,sK2))),s(bool,sK4))),s('type.num.num',sK17))),s('type.sptree.spt'('type.stackLang.prog'(sK0)),sK16))),s('type.ffi.ffi_state'(sK1),sK15))),s(fun('type.num.num',bool),sK14))),s(bool,sK19))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1,sK2,sK3,sK4,sK5,sK6,sK7,sK8,sK9,sK10,sK11,sK12,sK13,sK14,sK15,sK16,sK17,sK18,sK19])],[f16])).
fof(f16,plain,(
  ? [X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X18,X19] : ~p(s(bool,'const.bool.DATATYPE_1'(s(bool,happ(s(fun(bool,bool),happ(s(fun(fun('type.num.num',bool),fun(bool,bool)),happ(s(fun('type.ffi.ffi_state'(X1),fun(fun('type.num.num',bool),fun(bool,bool))),happ(s(fun('type.sptree.spt'('type.stackLang.prog'(X0)),fun('type.ffi.ffi_state'(X1),fun(fun('type.num.num',bool),fun(bool,bool)))),happ(s(fun('type.num.num',fun('type.sptree.spt'('type.stackLang.prog'(X0)),fun('type.ffi.ffi_state'(X1),fun(fun('type.num.num',bool),fun(bool,bool))))),happ(s(fun(bool,fun('type.num.num',fun('type.sptree.spt'('type.stackLang.prog'(X0)),fun('type.ffi.ffi_state'(X1),fun(fun('type.num.num',bool),fun(bool,bool)))))),happ(s(fun(bool,fun(bool,fun('type.num.num',fun('type.sptree.spt'('type.stackLang.prog'(X0)),fun('type.ffi.ffi_state'(X1),fun(fun('type.num.num',bool),fun(bool,bool))))))),happ(s(fun(bool,fun(bool,fun(bool,fun('type.num.num',fun('type.sptree.spt'('type.stackLang.prog'(X0)),fun('type.ffi.ffi_state'(X1),fun(fun('type.num.num',bool),fun(bool,bool)))))))),happ(s(fun(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)))))),fun(bool,fun(bool,fun(bool,fun('type.num.num',fun('type.sptree.spt'('type.stackLang.prog'(X0)),fun('type.ffi.ffi_state'(X1),fun(fun('type.num.num',bool),fun(bool,bool))))))))),happ(s(fun('type.list.list'('type.fcp.cart'(bool,X0)),fun(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)))))),fun(bool,fun(bool,fun(bool,fun('type.num.num',fun('type.sptree.spt'('type.stackLang.prog'(X0)),fun('type.ffi.ffi_state'(X1),fun(fun('type.num.num',bool),fun(bool,bool)))))))))),happ(s(fun(fun('type.fcp.cart'(bool,X0),bool),fun('type.list.list'('type.fcp.cart'(bool,X0)),fun(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)))))),fun(bool,fun(bool,fun(bool,fun('type.num.num',fun('type.sptree.spt'('type.stackLang.prog'(X0)),fun('type.ffi.ffi_state'(X1),fun(fun('type.num.num',bool),fun(bool,bool))))))))))),happ(s(fun(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),fun(fun('type.fcp.cart'(bool,X0),bool),fun('type.list.list'('type.fcp.cart'(bool,X0)),fun(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)))))),fun(bool,fun(bool,fun(bool,fun('type.num.num',fun('type.sptree.spt'('type.stackLang.prog'(X0)),fun('type.ffi.ffi_state'(X1),fun(fun('type.num.num',bool),fun(bool,bool)))))))))))),happ(s(fun('type.num.num',fun(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),fun(fun('type.fcp.cart'(bool,X0),bool),fun('type.list.list'('type.fcp.cart'(bool,X0)),fun(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)))))),fun(bool,fun(bool,fun(bool,fun('type.num.num',fun('type.sptree.spt'('type.stackLang.prog'(X0)),fun('type.ffi.ffi_state'(X1),fun(fun('type.num.num',bool),fun(bool,bool))))))))))))),happ(s(fun('type.list.list'('type.wordSem.word_loc'(X0)),fun('type.num.num',fun(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),fun(fun('type.fcp.cart'(bool,X0),bool),fun('type.list.list'('type.fcp.cart'(bool,X0)),fun(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)))))),fun(bool,fun(bool,fun(bool,fun('type.num.num',fun('type.sptree.spt'('type.stackLang.prog'(X0)),fun('type.ffi.ffi_state'(X1),fun(fun('type.num.num',bool),fun(bool,bool)))))))))))))),happ(s(fun('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)),fun('type.list.list'('type.wordSem.word_loc'(X0)),fun('type.num.num',fun(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),fun(fun('type.fcp.cart'(bool,X0),bool),fun('type.list.list'('type.fcp.cart'(bool,X0)),fun(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)))))),fun(bool,fun(bool,fun(bool,fun('type.num.num',fun('type.sptree.spt'('type.stackLang.prog'(X0)),fun('type.ffi.ffi_state'(X1),fun(fun('type.num.num',bool),fun(bool,bool))))))))))))))),happ(s(fun('type.finite_map.fmap'('type.num.num','type.wordSem.word_loc'(X0)),fun('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)),fun('type.list.list'('type.wordSem.word_loc'(X0)),fun('type.num.num',fun(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),fun(fun('type.fcp.cart'(bool,X0),bool),fun('type.list.list'('type.fcp.cart'(bool,X0)),fun(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)))))),fun(bool,fun(bool,fun(bool,fun('type.num.num',fun('type.sptree.spt'('type.stackLang.prog'(X0)),fun('type.ffi.ffi_state'(X1),fun(fun('type.num.num',bool),fun(bool,bool)))))))))))))))),happ(s(fun('type.min.ind',fun('type.finite_map.fmap'('type.num.num','type.wordSem.word_loc'(X0)),fun('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)),fun('type.list.list'('type.wordSem.word_loc'(X0)),fun('type.num.num',fun(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),fun(fun('type.fcp.cart'(bool,X0),bool),fun('type.list.list'('type.fcp.cart'(bool,X0)),fun(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)))))),fun(bool,fun(bool,fun(bool,fun('type.num.num',fun('type.sptree.spt'('type.stackLang.prog'(X0)),fun('type.ffi.ffi_state'(X1),fun(fun('type.num.num',bool),fun(bool,bool))))))))))))))))),X10),s('type.min.ind',X6))),s('type.finite_map.fmap'('type.num.num','type.wordSem.word_loc'(X0)),X9))),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)),X5))),s('type.list.list'('type.wordSem.word_loc'(X0)),X8))),s('type.num.num',X7))),s(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),X11))),s(fun('type.fcp.cart'(bool,X0),bool),X12))),s('type.list.list'('type.fcp.cart'(bool,X0)),X18))),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)))))),X13))),s(bool,X3))),s(bool,X2))),s(bool,X4))),s('type.num.num',X17))),s('type.sptree.spt'('type.stackLang.prog'(X0)),X16))),s('type.ffi.ffi_state'(X1),X15))),s(fun('type.num.num',bool),X14))),s(bool,X19))))))),
  inference(ennf_transformation,[],[f10])).
fof(f10,plain,(
  ~! [X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X18,X19] : p(s(bool,'const.bool.DATATYPE_1'(s(bool,happ(s(fun(bool,bool),happ(s(fun(fun('type.num.num',bool),fun(bool,bool)),happ(s(fun('type.ffi.ffi_state'(X1),fun(fun('type.num.num',bool),fun(bool,bool))),happ(s(fun('type.sptree.spt'('type.stackLang.prog'(X0)),fun('type.ffi.ffi_state'(X1),fun(fun('type.num.num',bool),fun(bool,bool)))),happ(s(fun('type.num.num',fun('type.sptree.spt'('type.stackLang.prog'(X0)),fun('type.ffi.ffi_state'(X1),fun(fun('type.num.num',bool),fun(bool,bool))))),happ(s(fun(bool,fun('type.num.num',fun('type.sptree.spt'('type.stackLang.prog'(X0)),fun('type.ffi.ffi_state'(X1),fun(fun('type.num.num',bool),fun(bool,bool)))))),happ(s(fun(bool,fun(bool,fun('type.num.num',fun('type.sptree.spt'('type.stackLang.prog'(X0)),fun('type.ffi.ffi_state'(X1),fun(fun('type.num.num',bool),fun(bool,bool))))))),happ(s(fun(bool,fun(bool,fun(bool,fun('type.num.num',fun('type.sptree.spt'('type.stackLang.prog'(X0)),fun('type.ffi.ffi_state'(X1),fun(fun('type.num.num',bool),fun(bool,bool)))))))),happ(s(fun(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)))))),fun(bool,fun(bool,fun(bool,fun('type.num.num',fun('type.sptree.spt'('type.stackLang.prog'(X0)),fun('type.ffi.ffi_state'(X1),fun(fun('type.num.num',bool),fun(bool,bool))))))))),happ(s(fun('type.list.list'('type.fcp.cart'(bool,X0)),fun(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)))))),fun(bool,fun(bool,fun(bool,fun('type.num.num',fun('type.sptree.spt'('type.stackLang.prog'(X0)),fun('type.ffi.ffi_state'(X1),fun(fun('type.num.num',bool),fun(bool,bool)))))))))),happ(s(fun(fun('type.fcp.cart'(bool,X0),bool),fun('type.list.list'('type.fcp.cart'(bool,X0)),fun(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)))))),fun(bool,fun(bool,fun(bool,fun('type.num.num',fun('type.sptree.spt'('type.stackLang.prog'(X0)),fun('type.ffi.ffi_state'(X1),fun(fun('type.num.num',bool),fun(bool,bool))))))))))),happ(s(fun(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),fun(fun('type.fcp.cart'(bool,X0),bool),fun('type.list.list'('type.fcp.cart'(bool,X0)),fun(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)))))),fun(bool,fun(bool,fun(bool,fun('type.num.num',fun('type.sptree.spt'('type.stackLang.prog'(X0)),fun('type.ffi.ffi_state'(X1),fun(fun('type.num.num',bool),fun(bool,bool)))))))))))),happ(s(fun('type.num.num',fun(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),fun(fun('type.fcp.cart'(bool,X0),bool),fun('type.list.list'('type.fcp.cart'(bool,X0)),fun(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)))))),fun(bool,fun(bool,fun(bool,fun('type.num.num',fun('type.sptree.spt'('type.stackLang.prog'(X0)),fun('type.ffi.ffi_state'(X1),fun(fun('type.num.num',bool),fun(bool,bool))))))))))))),happ(s(fun('type.list.list'('type.wordSem.word_loc'(X0)),fun('type.num.num',fun(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),fun(fun('type.fcp.cart'(bool,X0),bool),fun('type.list.list'('type.fcp.cart'(bool,X0)),fun(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)))))),fun(bool,fun(bool,fun(bool,fun('type.num.num',fun('type.sptree.spt'('type.stackLang.prog'(X0)),fun('type.ffi.ffi_state'(X1),fun(fun('type.num.num',bool),fun(bool,bool)))))))))))))),happ(s(fun('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)),fun('type.list.list'('type.wordSem.word_loc'(X0)),fun('type.num.num',fun(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),fun(fun('type.fcp.cart'(bool,X0),bool),fun('type.list.list'('type.fcp.cart'(bool,X0)),fun(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)))))),fun(bool,fun(bool,fun(bool,fun('type.num.num',fun('type.sptree.spt'('type.stackLang.prog'(X0)),fun('type.ffi.ffi_state'(X1),fun(fun('type.num.num',bool),fun(bool,bool))))))))))))))),happ(s(fun('type.finite_map.fmap'('type.num.num','type.wordSem.word_loc'(X0)),fun('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)),fun('type.list.list'('type.wordSem.word_loc'(X0)),fun('type.num.num',fun(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),fun(fun('type.fcp.cart'(bool,X0),bool),fun('type.list.list'('type.fcp.cart'(bool,X0)),fun(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)))))),fun(bool,fun(bool,fun(bool,fun('type.num.num',fun('type.sptree.spt'('type.stackLang.prog'(X0)),fun('type.ffi.ffi_state'(X1),fun(fun('type.num.num',bool),fun(bool,bool)))))))))))))))),happ(s(fun('type.min.ind',fun('type.finite_map.fmap'('type.num.num','type.wordSem.word_loc'(X0)),fun('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)),fun('type.list.list'('type.wordSem.word_loc'(X0)),fun('type.num.num',fun(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),fun(fun('type.fcp.cart'(bool,X0),bool),fun('type.list.list'('type.fcp.cart'(bool,X0)),fun(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)))))),fun(bool,fun(bool,fun(bool,fun('type.num.num',fun('type.sptree.spt'('type.stackLang.prog'(X0)),fun('type.ffi.ffi_state'(X1),fun(fun('type.num.num',bool),fun(bool,bool))))))))))))))))),X10),s('type.min.ind',X6))),s('type.finite_map.fmap'('type.num.num','type.wordSem.word_loc'(X0)),X9))),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)),X5))),s('type.list.list'('type.wordSem.word_loc'(X0)),X8))),s('type.num.num',X7))),s(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),X11))),s(fun('type.fcp.cart'(bool,X0),bool),X12))),s('type.list.list'('type.fcp.cart'(bool,X0)),X18))),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)))))),X13))),s(bool,X3))),s(bool,X2))),s(bool,X4))),s('type.num.num',X17))),s('type.sptree.spt'('type.stackLang.prog'(X0)),X16))),s('type.ffi.ffi_state'(X1),X15))),s(fun('type.num.num',bool),X14))),s(bool,X19))))))),
  inference(flattening,[],[f9])).
fof(f9,plain,(
  ~! [X0,X1] : ! [X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X18,X19] : p(s(bool,'const.bool.DATATYPE_1'(s(bool,happ(s(fun(bool,bool),happ(s(fun(fun('type.num.num',bool),fun(bool,bool)),happ(s(fun('type.ffi.ffi_state'(X1),fun(fun('type.num.num',bool),fun(bool,bool))),happ(s(fun('type.sptree.spt'('type.stackLang.prog'(X0)),fun('type.ffi.ffi_state'(X1),fun(fun('type.num.num',bool),fun(bool,bool)))),happ(s(fun('type.num.num',fun('type.sptree.spt'('type.stackLang.prog'(X0)),fun('type.ffi.ffi_state'(X1),fun(fun('type.num.num',bool),fun(bool,bool))))),happ(s(fun(bool,fun('type.num.num',fun('type.sptree.spt'('type.stackLang.prog'(X0)),fun('type.ffi.ffi_state'(X1),fun(fun('type.num.num',bool),fun(bool,bool)))))),happ(s(fun(bool,fun(bool,fun('type.num.num',fun('type.sptree.spt'('type.stackLang.prog'(X0)),fun('type.ffi.ffi_state'(X1),fun(fun('type.num.num',bool),fun(bool,bool))))))),happ(s(fun(bool,fun(bool,fun(bool,fun('type.num.num',fun('type.sptree.spt'('type.stackLang.prog'(X0)),fun('type.ffi.ffi_state'(X1),fun(fun('type.num.num',bool),fun(bool,bool)))))))),happ(s(fun(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)))))),fun(bool,fun(bool,fun(bool,fun('type.num.num',fun('type.sptree.spt'('type.stackLang.prog'(X0)),fun('type.ffi.ffi_state'(X1),fun(fun('type.num.num',bool),fun(bool,bool))))))))),happ(s(fun('type.list.list'('type.fcp.cart'(bool,X0)),fun(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)))))),fun(bool,fun(bool,fun(bool,fun('type.num.num',fun('type.sptree.spt'('type.stackLang.prog'(X0)),fun('type.ffi.ffi_state'(X1),fun(fun('type.num.num',bool),fun(bool,bool)))))))))),happ(s(fun(fun('type.fcp.cart'(bool,X0),bool),fun('type.list.list'('type.fcp.cart'(bool,X0)),fun(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)))))),fun(bool,fun(bool,fun(bool,fun('type.num.num',fun('type.sptree.spt'('type.stackLang.prog'(X0)),fun('type.ffi.ffi_state'(X1),fun(fun('type.num.num',bool),fun(bool,bool))))))))))),happ(s(fun(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),fun(fun('type.fcp.cart'(bool,X0),bool),fun('type.list.list'('type.fcp.cart'(bool,X0)),fun(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)))))),fun(bool,fun(bool,fun(bool,fun('type.num.num',fun('type.sptree.spt'('type.stackLang.prog'(X0)),fun('type.ffi.ffi_state'(X1),fun(fun('type.num.num',bool),fun(bool,bool)))))))))))),happ(s(fun('type.num.num',fun(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),fun(fun('type.fcp.cart'(bool,X0),bool),fun('type.list.list'('type.fcp.cart'(bool,X0)),fun(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)))))),fun(bool,fun(bool,fun(bool,fun('type.num.num',fun('type.sptree.spt'('type.stackLang.prog'(X0)),fun('type.ffi.ffi_state'(X1),fun(fun('type.num.num',bool),fun(bool,bool))))))))))))),happ(s(fun('type.list.list'('type.wordSem.word_loc'(X0)),fun('type.num.num',fun(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),fun(fun('type.fcp.cart'(bool,X0),bool),fun('type.list.list'('type.fcp.cart'(bool,X0)),fun(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)))))),fun(bool,fun(bool,fun(bool,fun('type.num.num',fun('type.sptree.spt'('type.stackLang.prog'(X0)),fun('type.ffi.ffi_state'(X1),fun(fun('type.num.num',bool),fun(bool,bool)))))))))))))),happ(s(fun('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)),fun('type.list.list'('type.wordSem.word_loc'(X0)),fun('type.num.num',fun(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),fun(fun('type.fcp.cart'(bool,X0),bool),fun('type.list.list'('type.fcp.cart'(bool,X0)),fun(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)))))),fun(bool,fun(bool,fun(bool,fun('type.num.num',fun('type.sptree.spt'('type.stackLang.prog'(X0)),fun('type.ffi.ffi_state'(X1),fun(fun('type.num.num',bool),fun(bool,bool))))))))))))))),happ(s(fun('type.finite_map.fmap'('type.num.num','type.wordSem.word_loc'(X0)),fun('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)),fun('type.list.list'('type.wordSem.word_loc'(X0)),fun('type.num.num',fun(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),fun(fun('type.fcp.cart'(bool,X0),bool),fun('type.list.list'('type.fcp.cart'(bool,X0)),fun(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)))))),fun(bool,fun(bool,fun(bool,fun('type.num.num',fun('type.sptree.spt'('type.stackLang.prog'(X0)),fun('type.ffi.ffi_state'(X1),fun(fun('type.num.num',bool),fun(bool,bool)))))))))))))))),happ(s(fun('type.min.ind',fun('type.finite_map.fmap'('type.num.num','type.wordSem.word_loc'(X0)),fun('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)),fun('type.list.list'('type.wordSem.word_loc'(X0)),fun('type.num.num',fun(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),fun(fun('type.fcp.cart'(bool,X0),bool),fun('type.list.list'('type.fcp.cart'(bool,X0)),fun(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)))))),fun(bool,fun(bool,fun(bool,fun('type.num.num',fun('type.sptree.spt'('type.stackLang.prog'(X0)),fun('type.ffi.ffi_state'(X1),fun(fun('type.num.num',bool),fun(bool,bool))))))))))))))))),X10),s('type.min.ind',X6))),s('type.finite_map.fmap'('type.num.num','type.wordSem.word_loc'(X0)),X9))),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)),X5))),s('type.list.list'('type.wordSem.word_loc'(X0)),X8))),s('type.num.num',X7))),s(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),X11))),s(fun('type.fcp.cart'(bool,X0),bool),X12))),s('type.list.list'('type.fcp.cart'(bool,X0)),X18))),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)))))),X13))),s(bool,X3))),s(bool,X2))),s(bool,X4))),s('type.num.num',X17))),s('type.sptree.spt'('type.stackLang.prog'(X0)),X16))),s('type.ffi.ffi_state'(X1),X15))),s(fun('type.num.num',bool),X14))),s(bool,X19))))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6,X7] : ! [X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X18,X19,X20,X21,X22,X23,X24,X25] : p(s(bool,'const.bool.DATATYPE_1'(s(bool,happ(s(fun(bool,bool),happ(s(fun(fun('type.num.num',bool),fun(bool,bool)),happ(s(fun('type.ffi.ffi_state'(X7),fun(fun('type.num.num',bool),fun(bool,bool))),happ(s(fun('type.sptree.spt'('type.stackLang.prog'(X6)),fun('type.ffi.ffi_state'(X7),fun(fun('type.num.num',bool),fun(bool,bool)))),happ(s(fun('type.num.num',fun('type.sptree.spt'('type.stackLang.prog'(X6)),fun('type.ffi.ffi_state'(X7),fun(fun('type.num.num',bool),fun(bool,bool))))),happ(s(fun(bool,fun('type.num.num',fun('type.sptree.spt'('type.stackLang.prog'(X6)),fun('type.ffi.ffi_state'(X7),fun(fun('type.num.num',bool),fun(bool,bool)))))),happ(s(fun(bool,fun(bool,fun('type.num.num',fun('type.sptree.spt'('type.stackLang.prog'(X6)),fun('type.ffi.ffi_state'(X7),fun(fun('type.num.num',bool),fun(bool,bool))))))),happ(s(fun(bool,fun(bool,fun(bool,fun('type.num.num',fun('type.sptree.spt'('type.stackLang.prog'(X6)),fun('type.ffi.ffi_state'(X7),fun(fun('type.num.num',bool),fun(bool,bool)))))))),happ(s(fun(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X6)),'type.pair.prod'(fun('type.fcp.cart'(bool,X6),'type.wordSem.word_loc'(X6)),'type.pair.prod'(fun('type.fcp.cart'(bool,X6),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X6))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X6)),'type.pair.prod'(fun('type.fcp.cart'(bool,X6),'type.wordSem.word_loc'(X6)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X6)))))),fun(bool,fun(bool,fun(bool,fun('type.num.num',fun('type.sptree.spt'('type.stackLang.prog'(X6)),fun('type.ffi.ffi_state'(X7),fun(fun('type.num.num',bool),fun(bool,bool))))))))),happ(s(fun('type.list.list'('type.fcp.cart'(bool,X6)),fun(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X6)),'type.pair.prod'(fun('type.fcp.cart'(bool,X6),'type.wordSem.word_loc'(X6)),'type.pair.prod'(fun('type.fcp.cart'(bool,X6),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X6))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X6)),'type.pair.prod'(fun('type.fcp.cart'(bool,X6),'type.wordSem.word_loc'(X6)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X6)))))),fun(bool,fun(bool,fun(bool,fun('type.num.num',fun('type.sptree.spt'('type.stackLang.prog'(X6)),fun('type.ffi.ffi_state'(X7),fun(fun('type.num.num',bool),fun(bool,bool)))))))))),happ(s(fun(fun('type.fcp.cart'(bool,X6),bool),fun('type.list.list'('type.fcp.cart'(bool,X6)),fun(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X6)),'type.pair.prod'(fun('type.fcp.cart'(bool,X6),'type.wordSem.word_loc'(X6)),'type.pair.prod'(fun('type.fcp.cart'(bool,X6),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X6))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X6)),'type.pair.prod'(fun('type.fcp.cart'(bool,X6),'type.wordSem.word_loc'(X6)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X6)))))),fun(bool,fun(bool,fun(bool,fun('type.num.num',fun('type.sptree.spt'('type.stackLang.prog'(X6)),fun('type.ffi.ffi_state'(X7),fun(fun('type.num.num',bool),fun(bool,bool))))))))))),happ(s(fun(fun('type.fcp.cart'(bool,X6),'type.wordSem.word_loc'(X6)),fun(fun('type.fcp.cart'(bool,X6),bool),fun('type.list.list'('type.fcp.cart'(bool,X6)),fun(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X6)),'type.pair.prod'(fun('type.fcp.cart'(bool,X6),'type.wordSem.word_loc'(X6)),'type.pair.prod'(fun('type.fcp.cart'(bool,X6),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X6))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X6)),'type.pair.prod'(fun('type.fcp.cart'(bool,X6),'type.wordSem.word_loc'(X6)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X6)))))),fun(bool,fun(bool,fun(bool,fun('type.num.num',fun('type.sptree.spt'('type.stackLang.prog'(X6)),fun('type.ffi.ffi_state'(X7),fun(fun('type.num.num',bool),fun(bool,bool)))))))))))),happ(s(fun('type.num.num',fun(fun('type.fcp.cart'(bool,X6),'type.wordSem.word_loc'(X6)),fun(fun('type.fcp.cart'(bool,X6),bool),fun('type.list.list'('type.fcp.cart'(bool,X6)),fun(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X6)),'type.pair.prod'(fun('type.fcp.cart'(bool,X6),'type.wordSem.word_loc'(X6)),'type.pair.prod'(fun('type.fcp.cart'(bool,X6),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X6))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X6)),'type.pair.prod'(fun('type.fcp.cart'(bool,X6),'type.wordSem.word_loc'(X6)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X6)))))),fun(bool,fun(bool,fun(bool,fun('type.num.num',fun('type.sptree.spt'('type.stackLang.prog'(X6)),fun('type.ffi.ffi_state'(X7),fun(fun('type.num.num',bool),fun(bool,bool))))))))))))),happ(s(fun('type.list.list'('type.wordSem.word_loc'(X6)),fun('type.num.num',fun(fun('type.fcp.cart'(bool,X6),'type.wordSem.word_loc'(X6)),fun(fun('type.fcp.cart'(bool,X6),bool),fun('type.list.list'('type.fcp.cart'(bool,X6)),fun(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X6)),'type.pair.prod'(fun('type.fcp.cart'(bool,X6),'type.wordSem.word_loc'(X6)),'type.pair.prod'(fun('type.fcp.cart'(bool,X6),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X6))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X6)),'type.pair.prod'(fun('type.fcp.cart'(bool,X6),'type.wordSem.word_loc'(X6)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X6)))))),fun(bool,fun(bool,fun(bool,fun('type.num.num',fun('type.sptree.spt'('type.stackLang.prog'(X6)),fun('type.ffi.ffi_state'(X7),fun(fun('type.num.num',bool),fun(bool,bool)))))))))))))),happ(s(fun('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X6)),fun('type.list.list'('type.wordSem.word_loc'(X6)),fun('type.num.num',fun(fun('type.fcp.cart'(bool,X6),'type.wordSem.word_loc'(X6)),fun(fun('type.fcp.cart'(bool,X6),bool),fun('type.list.list'('type.fcp.cart'(bool,X6)),fun(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X6)),'type.pair.prod'(fun('type.fcp.cart'(bool,X6),'type.wordSem.word_loc'(X6)),'type.pair.prod'(fun('type.fcp.cart'(bool,X6),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X6))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X6)),'type.pair.prod'(fun('type.fcp.cart'(bool,X6),'type.wordSem.word_loc'(X6)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X6)))))),fun(bool,fun(bool,fun(bool,fun('type.num.num',fun('type.sptree.spt'('type.stackLang.prog'(X6)),fun('type.ffi.ffi_state'(X7),fun(fun('type.num.num',bool),fun(bool,bool))))))))))))))),happ(s(fun('type.finite_map.fmap'('type.num.num','type.wordSem.word_loc'(X6)),fun('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X6)),fun('type.list.list'('type.wordSem.word_loc'(X6)),fun('type.num.num',fun(fun('type.fcp.cart'(bool,X6),'type.wordSem.word_loc'(X6)),fun(fun('type.fcp.cart'(bool,X6),bool),fun('type.list.list'('type.fcp.cart'(bool,X6)),fun(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X6)),'type.pair.prod'(fun('type.fcp.cart'(bool,X6),'type.wordSem.word_loc'(X6)),'type.pair.prod'(fun('type.fcp.cart'(bool,X6),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X6))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X6)),'type.pair.prod'(fun('type.fcp.cart'(bool,X6),'type.wordSem.word_loc'(X6)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X6)))))),fun(bool,fun(bool,fun(bool,fun('type.num.num',fun('type.sptree.spt'('type.stackLang.prog'(X6)),fun('type.ffi.ffi_state'(X7),fun(fun('type.num.num',bool),fun(bool,bool)))))))))))))))),happ(s(fun('type.min.ind',fun('type.finite_map.fmap'('type.num.num','type.wordSem.word_loc'(X6)),fun('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X6)),fun('type.list.list'('type.wordSem.word_loc'(X6)),fun('type.num.num',fun(fun('type.fcp.cart'(bool,X6),'type.wordSem.word_loc'(X6)),fun(fun('type.fcp.cart'(bool,X6),bool),fun('type.list.list'('type.fcp.cart'(bool,X6)),fun(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X6)),'type.pair.prod'(fun('type.fcp.cart'(bool,X6),'type.wordSem.word_loc'(X6)),'type.pair.prod'(fun('type.fcp.cart'(bool,X6),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X6))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X6)),'type.pair.prod'(fun('type.fcp.cart'(bool,X6),'type.wordSem.word_loc'(X6)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X6)))))),fun(bool,fun(bool,fun(bool,fun('type.num.num',fun('type.sptree.spt'('type.stackLang.prog'(X6)),fun('type.ffi.ffi_state'(X7),fun(fun('type.num.num',bool),fun(bool,bool))))))))))))))))),X16),s('type.min.ind',X12))),s('type.finite_map.fmap'('type.num.num','type.wordSem.word_loc'(X6)),X15))),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X6)),X11))),s('type.list.list'('type.wordSem.word_loc'(X6)),X14))),s('type.num.num',X13))),s(fun('type.fcp.cart'(bool,X6),'type.wordSem.word_loc'(X6)),X17))),s(fun('type.fcp.cart'(bool,X6),bool),X18))),s('type.list.list'('type.fcp.cart'(bool,X6)),X24))),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X6)),'type.pair.prod'(fun('type.fcp.cart'(bool,X6),'type.wordSem.word_loc'(X6)),'type.pair.prod'(fun('type.fcp.cart'(bool,X6),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X6))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X6)),'type.pair.prod'(fun('type.fcp.cart'(bool,X6),'type.wordSem.word_loc'(X6)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X6)))))),X19))),s(bool,X9))),s(bool,X8))),s(bool,X10))),s('type.num.num',X23))),s('type.sptree.spt'('type.stackLang.prog'(X6)),X22))),s('type.ffi.ffi_state'(X7),X21))),s(fun('type.num.num',bool),X20))),s(bool,X25))))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6,X7] : ! [X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X18,X19,X20,X21,X22,X23,X24,X25] : p(s(bool,'const.bool.DATATYPE_1'(s(bool,happ(s(fun(bool,bool),happ(s(fun(fun('type.num.num',bool),fun(bool,bool)),happ(s(fun('type.ffi.ffi_state'(X7),fun(fun('type.num.num',bool),fun(bool,bool))),happ(s(fun('type.sptree.spt'('type.stackLang.prog'(X6)),fun('type.ffi.ffi_state'(X7),fun(fun('type.num.num',bool),fun(bool,bool)))),happ(s(fun('type.num.num',fun('type.sptree.spt'('type.stackLang.prog'(X6)),fun('type.ffi.ffi_state'(X7),fun(fun('type.num.num',bool),fun(bool,bool))))),happ(s(fun(bool,fun('type.num.num',fun('type.sptree.spt'('type.stackLang.prog'(X6)),fun('type.ffi.ffi_state'(X7),fun(fun('type.num.num',bool),fun(bool,bool)))))),happ(s(fun(bool,fun(bool,fun('type.num.num',fun('type.sptree.spt'('type.stackLang.prog'(X6)),fun('type.ffi.ffi_state'(X7),fun(fun('type.num.num',bool),fun(bool,bool))))))),happ(s(fun(bool,fun(bool,fun(bool,fun('type.num.num',fun('type.sptree.spt'('type.stackLang.prog'(X6)),fun('type.ffi.ffi_state'(X7),fun(fun('type.num.num',bool),fun(bool,bool)))))))),happ(s(fun(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X6)),'type.pair.prod'(fun('type.fcp.cart'(bool,X6),'type.wordSem.word_loc'(X6)),'type.pair.prod'(fun('type.fcp.cart'(bool,X6),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X6))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X6)),'type.pair.prod'(fun('type.fcp.cart'(bool,X6),'type.wordSem.word_loc'(X6)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X6)))))),fun(bool,fun(bool,fun(bool,fun('type.num.num',fun('type.sptree.spt'('type.stackLang.prog'(X6)),fun('type.ffi.ffi_state'(X7),fun(fun('type.num.num',bool),fun(bool,bool))))))))),happ(s(fun('type.list.list'('type.fcp.cart'(bool,X6)),fun(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X6)),'type.pair.prod'(fun('type.fcp.cart'(bool,X6),'type.wordSem.word_loc'(X6)),'type.pair.prod'(fun('type.fcp.cart'(bool,X6),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X6))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X6)),'type.pair.prod'(fun('type.fcp.cart'(bool,X6),'type.wordSem.word_loc'(X6)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X6)))))),fun(bool,fun(bool,fun(bool,fun('type.num.num',fun('type.sptree.spt'('type.stackLang.prog'(X6)),fun('type.ffi.ffi_state'(X7),fun(fun('type.num.num',bool),fun(bool,bool)))))))))),happ(s(fun(fun('type.fcp.cart'(bool,X6),bool),fun('type.list.list'('type.fcp.cart'(bool,X6)),fun(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X6)),'type.pair.prod'(fun('type.fcp.cart'(bool,X6),'type.wordSem.word_loc'(X6)),'type.pair.prod'(fun('type.fcp.cart'(bool,X6),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X6))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X6)),'type.pair.prod'(fun('type.fcp.cart'(bool,X6),'type.wordSem.word_loc'(X6)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X6)))))),fun(bool,fun(bool,fun(bool,fun('type.num.num',fun('type.sptree.spt'('type.stackLang.prog'(X6)),fun('type.ffi.ffi_state'(X7),fun(fun('type.num.num',bool),fun(bool,bool))))))))))),happ(s(fun(fun('type.fcp.cart'(bool,X6),'type.wordSem.word_loc'(X6)),fun(fun('type.fcp.cart'(bool,X6),bool),fun('type.list.list'('type.fcp.cart'(bool,X6)),fun(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X6)),'type.pair.prod'(fun('type.fcp.cart'(bool,X6),'type.wordSem.word_loc'(X6)),'type.pair.prod'(fun('type.fcp.cart'(bool,X6),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X6))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X6)),'type.pair.prod'(fun('type.fcp.cart'(bool,X6),'type.wordSem.word_loc'(X6)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X6)))))),fun(bool,fun(bool,fun(bool,fun('type.num.num',fun('type.sptree.spt'('type.stackLang.prog'(X6)),fun('type.ffi.ffi_state'(X7),fun(fun('type.num.num',bool),fun(bool,bool)))))))))))),happ(s(fun('type.num.num',fun(fun('type.fcp.cart'(bool,X6),'type.wordSem.word_loc'(X6)),fun(fun('type.fcp.cart'(bool,X6),bool),fun('type.list.list'('type.fcp.cart'(bool,X6)),fun(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X6)),'type.pair.prod'(fun('type.fcp.cart'(bool,X6),'type.wordSem.word_loc'(X6)),'type.pair.prod'(fun('type.fcp.cart'(bool,X6),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X6))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X6)),'type.pair.prod'(fun('type.fcp.cart'(bool,X6),'type.wordSem.word_loc'(X6)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X6)))))),fun(bool,fun(bool,fun(bool,fun('type.num.num',fun('type.sptree.spt'('type.stackLang.prog'(X6)),fun('type.ffi.ffi_state'(X7),fun(fun('type.num.num',bool),fun(bool,bool))))))))))))),happ(s(fun('type.list.list'('type.wordSem.word_loc'(X6)),fun('type.num.num',fun(fun('type.fcp.cart'(bool,X6),'type.wordSem.word_loc'(X6)),fun(fun('type.fcp.cart'(bool,X6),bool),fun('type.list.list'('type.fcp.cart'(bool,X6)),fun(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X6)),'type.pair.prod'(fun('type.fcp.cart'(bool,X6),'type.wordSem.word_loc'(X6)),'type.pair.prod'(fun('type.fcp.cart'(bool,X6),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X6))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X6)),'type.pair.prod'(fun('type.fcp.cart'(bool,X6),'type.wordSem.word_loc'(X6)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X6)))))),fun(bool,fun(bool,fun(bool,fun('type.num.num',fun('type.sptree.spt'('type.stackLang.prog'(X6)),fun('type.ffi.ffi_state'(X7),fun(fun('type.num.num',bool),fun(bool,bool)))))))))))))),happ(s(fun('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X6)),fun('type.list.list'('type.wordSem.word_loc'(X6)),fun('type.num.num',fun(fun('type.fcp.cart'(bool,X6),'type.wordSem.word_loc'(X6)),fun(fun('type.fcp.cart'(bool,X6),bool),fun('type.list.list'('type.fcp.cart'(bool,X6)),fun(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X6)),'type.pair.prod'(fun('type.fcp.cart'(bool,X6),'type.wordSem.word_loc'(X6)),'type.pair.prod'(fun('type.fcp.cart'(bool,X6),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X6))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X6)),'type.pair.prod'(fun('type.fcp.cart'(bool,X6),'type.wordSem.word_loc'(X6)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X6)))))),fun(bool,fun(bool,fun(bool,fun('type.num.num',fun('type.sptree.spt'('type.stackLang.prog'(X6)),fun('type.ffi.ffi_state'(X7),fun(fun('type.num.num',bool),fun(bool,bool))))))))))))))),happ(s(fun('type.finite_map.fmap'('type.num.num','type.wordSem.word_loc'(X6)),fun('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X6)),fun('type.list.list'('type.wordSem.word_loc'(X6)),fun('type.num.num',fun(fun('type.fcp.cart'(bool,X6),'type.wordSem.word_loc'(X6)),fun(fun('type.fcp.cart'(bool,X6),bool),fun('type.list.list'('type.fcp.cart'(bool,X6)),fun(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X6)),'type.pair.prod'(fun('type.fcp.cart'(bool,X6),'type.wordSem.word_loc'(X6)),'type.pair.prod'(fun('type.fcp.cart'(bool,X6),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X6))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X6)),'type.pair.prod'(fun('type.fcp.cart'(bool,X6),'type.wordSem.word_loc'(X6)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X6)))))),fun(bool,fun(bool,fun(bool,fun('type.num.num',fun('type.sptree.spt'('type.stackLang.prog'(X6)),fun('type.ffi.ffi_state'(X7),fun(fun('type.num.num',bool),fun(bool,bool)))))))))))))))),happ(s(fun('type.min.ind',fun('type.finite_map.fmap'('type.num.num','type.wordSem.word_loc'(X6)),fun('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X6)),fun('type.list.list'('type.wordSem.word_loc'(X6)),fun('type.num.num',fun(fun('type.fcp.cart'(bool,X6),'type.wordSem.word_loc'(X6)),fun(fun('type.fcp.cart'(bool,X6),bool),fun('type.list.list'('type.fcp.cart'(bool,X6)),fun(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X6)),'type.pair.prod'(fun('type.fcp.cart'(bool,X6),'type.wordSem.word_loc'(X6)),'type.pair.prod'(fun('type.fcp.cart'(bool,X6),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X6))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X6)),'type.pair.prod'(fun('type.fcp.cart'(bool,X6),'type.wordSem.word_loc'(X6)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X6)))))),fun(bool,fun(bool,fun(bool,fun('type.num.num',fun('type.sptree.spt'('type.stackLang.prog'(X6)),fun('type.ffi.ffi_state'(X7),fun(fun('type.num.num',bool),fun(bool,bool))))))))))))))))),X16),s('type.min.ind',X12))),s('type.finite_map.fmap'('type.num.num','type.wordSem.word_loc'(X6)),X15))),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X6)),X11))),s('type.list.list'('type.wordSem.word_loc'(X6)),X14))),s('type.num.num',X13))),s(fun('type.fcp.cart'(bool,X6),'type.wordSem.word_loc'(X6)),X17))),s(fun('type.fcp.cart'(bool,X6),bool),X18))),s('type.list.list'('type.fcp.cart'(bool,X6)),X24))),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X6)),'type.pair.prod'(fun('type.fcp.cart'(bool,X6),'type.wordSem.word_loc'(X6)),'type.pair.prod'(fun('type.fcp.cart'(bool,X6),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X6))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X6)),'type.pair.prod'(fun('type.fcp.cart'(bool,X6),'type.wordSem.word_loc'(X6)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X6)))))),X19))),s(bool,X9))),s(bool,X8))),s(bool,X10))),s('type.num.num',X23))),s('type.sptree.spt'('type.stackLang.prog'(X6)),X22))),s('type.ffi.ffi_state'(X7),X21))),s(fun('type.num.num',bool),X20))),s(bool,X25))))))),
  file('thm.stackSem.datatype_state','thm.stackSem.datatype_state')).
% SZS output end Proof for thm.stackSem
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 14
% Passive clauses: 57
% Generated clauses: 470
% Final active clauses: 12
% Final passive clauses: 36
% Input formulas: 7
% Initial clauses: 7
% 
% Duplicate literals: 84
% Trivial inequalities: 7
% Fw subsumption resolutions: 6
% Fw demodulations: 16
% 
% Simple tautologies: 25
% Equational tautologies: 16
% Forward subsumptions: 244
% 
% Binary resolution: 4
% Forward superposition: 123
% Backward superposition: 126
% Self superposition: 49
% Equality factoring: 40
% Equality resolution: 1
% 
% Split clauses: 12
% Split components: 24
% SAT solver clauses: 18
% SAT solver unit clauses: 4
% SAT solver binary clauses: 12
% 
% Sat splits: 12
% Sat splitting refutations: 1
% 
% TWLsolver clauses: 18
% TWLsolver calls for satisfiability: 6
% 
% Memory used [KB]: 895
% Time elapsed: 0.014 s
% ------------------------------
% ------------------------------
% Success in time 0.016 s
