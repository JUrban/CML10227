Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 150 next slice time: 5
dis+11_7_3 on thm.source_to_modProof
% (73531)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 92
% Passive clauses: 1784
% Generated clauses: 8342
% Final active clauses: 84
% Final passive clauses: 1553
% Input formulas: 7
% Initial clauses: 27
% 
% Duplicate literals: 575
% Trivial inequalities: 106
% Fw subsumption resolutions: 1346
% Fw demodulations: 296
% Bw demodulations: 5
% 
% Simple tautologies: 196
% Equational tautologies: 78
% Forward subsumptions: 3201
% 
% Binary resolution: 196
% Factoring: 2
% Forward superposition: 2842
% Backward superposition: 2411
% Self superposition: 236
% Equality factoring: 192
% Equality resolution: 16
% 
% Split clauses: 291
% Split components: 584
% SAT solver clauses: 893
% SAT solver unit clauses: 30
% SAT solver binary clauses: 203
% 
% Sat splits: 291
% Sat splitting refutations: 3
% 
% TWLsolver clauses: 893
% TWLsolver calls for satisfiability: 138
% 
% Memory used [KB]: 4093
% Time elapsed: 0.620 s
% ------------------------------
% ------------------------------
% remaining time: 143 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.source_to_modProof
% (73562)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 54
% Passive clauses: 160
% Generated clauses: 4045
% Final active clauses: 50
% Final passive clauses: 88
% Input formulas: 7
% Initial clauses: 27
% 
% Duplicate literals: 518
% Trivial inequalities: 63
% Fw subsumption resolutions: 277
% Fw demodulations: 90
% Bw demodulations: 21
% Condensations: 838
% 
% Simple tautologies: 114
% Equational tautologies: 54
% Forward subsumptions: 1295
% 
% Binary resolution: 68
% Factoring: 1
% Forward superposition: 989
% Backward superposition: 1147
% Self superposition: 186
% Equality factoring: 174
% Equality resolution: 14
% 
% Split clauses: 40
% Split components: 80
% SAT solver clauses: 261
% SAT solver unit clauses: 29
% SAT solver binary clauses: 23
% 
% Sat splits: 40
% Sat splitting refutations: 1
% 
% TWLsolver clauses: 261
% TWLsolver calls for satisfiability: 468
% 
% Memory used [KB]: 3326
% Time elapsed: 0.700 s
% ------------------------------
% ------------------------------
% remaining time: 135 next slice time: 103
lrs+11_2_br=off:cond=on:fde=none:gs=on:gsaa=full_model:lwlo=on:nwc=2:sas=minisat:stl=30:ssfp=100000:ssfq=1.4:smm=sco:ssnc=none:sp=occurrence:urr=on_98 on thm.source_to_modProof
% (73592)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 373
% Passive clauses: 2301
% Generated clauses: 121331
% Final active clauses: 103
% Final passive clauses: 344
% Input formulas: 7
% Initial clauses: 27
% 
% Duplicate literals: 6739
% Trivial inequalities: 1075
% Fw subsumption resolutions: 11101
% Fw demodulations: 10579
% Bw demodulations: 1316
% Condensations: 13559
% Global subsumptions: 89
% 
% Simple tautologies: 1189
% Equational tautologies: 1350
% Forward subsumptions: 73031
% Fw demodulations to eq. taut.: 1
% Bw demodulations to eq. taut.: 23
% 
% Unit resulting resolution: 3742
% Factoring: 1
% Forward superposition: 27582
% Backward superposition: 25787
% Self superposition: 706
% Equality factoring: 369
% Equality resolution: 95
% 
% Split clauses: 237
% Split components: 487
% SAT solver clauses: 3115
% SAT solver unit clauses: 51
% SAT solver binary clauses: 152
% 
% Sat splits: 237
% Sat splitting refutations: 249
% 
% Memory used [KB]: 38762
% Time elapsed: 10.400 s
% ------------------------------
% ------------------------------
% remaining time: 28 next slice time: 28
dis+11_5_fde=none:nwc=1:sas=minisat:sd=1:ss=axioms:st=5.0:sos=all:sdd=large:sser=off:sfr=on:ssfp=100000:ssfq=2.0:ssnc=none_37 on thm.source_to_modProof
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.source_to_modProof
% SZS output start Proof for thm.source_to_modProof
fof(f5306,plain,(
  $false),
  inference(subsumption_resolution,[],[f5305,f66])).
fof(f66,plain,(
  ~sP1(sK2,'const.semanticPrimitives.Refv_1'(s('type.semanticPrimitives.v',sK3)),'const.semanticPrimitives.Refv_1'(s('type.modSem.v',sK4)))),
  inference(resolution,[],[f29,f46])).
fof(f46,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,'const.source_to_modProof.sv_rel_3'(s('type.list.list'('type.option.option'('type.modSem.v')),X0),s('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),X1),s('type.semanticPrimitives.store_v'('type.modSem.v'),X2)))) | ~sP1(X0,X1,X2)) )),
  inference(cnf_transformation,[],[f27])).
fof(f27,plain,(
  ! [X0,X1,X2] : ((~p(s(bool,'const.source_to_modProof.sv_rel_3'(s('type.list.list'('type.option.option'('type.modSem.v')),X0),s('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),X1),s('type.semanticPrimitives.store_v'('type.modSem.v'),X2)))) | sP1(X0,X1,X2)) & (~sP1(X0,X1,X2) | p(s(bool,'const.source_to_modProof.sv_rel_3'(s('type.list.list'('type.option.option'('type.modSem.v')),X0),s('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),X1),s('type.semanticPrimitives.store_v'('type.modSem.v'),X2))))))),
  inference(nnf_transformation,[],[f19])).
fof(f19,plain,(
  ! [X0,X1,X2] : (p(s(bool,'const.source_to_modProof.sv_rel_3'(s('type.list.list'('type.option.option'('type.modSem.v')),X0),s('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),X1),s('type.semanticPrimitives.store_v'('type.modSem.v'),X2)))) <=> sP1(X0,X1,X2))),
  inference(definition_folding,[],[f14,f18,f17])).
fof(f17,plain,(
  ! [X4,X6,X5] : (sP0(X4,X6,X5) <=> ? [X10,X11] : (s('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),X5) = s('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),'const.semanticPrimitives.Refv_1'(s('type.semanticPrimitives.v',X10))) & s('type.semanticPrimitives.store_v'('type.modSem.v'),X6) = s('type.semanticPrimitives.store_v'('type.modSem.v'),'const.semanticPrimitives.Refv_1'(s('type.modSem.v',X11))) & p(s(bool,'const.source_to_modProof.v_rel_3'(s('type.list.list'('type.option.option'('type.modSem.v')),X4),s('type.semanticPrimitives.v',X10),s('type.modSem.v',X11))))))),
  introduced(predicate_definition_introduction,[new_symbols(naming,[sP0])])).
fof(f18,plain,(
  ! [X0,X1,X2] : (sP1(X0,X1,X2) <=> ! [X3] : (? [X4,X5,X6] : ((sP0(X4,X6,X5) | ? [X9] : (s('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),X5) = s('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),'const.semanticPrimitives.W8array_1'(s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X9))) & s('type.semanticPrimitives.store_v'('type.modSem.v'),X6) = s('type.semanticPrimitives.store_v'('type.modSem.v'),'const.semanticPrimitives.W8array_1'(s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X9)))) | ? [X7,X8] : (s('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),X5) = s('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),'const.semanticPrimitives.Varray_1'(s('type.list.list'('type.semanticPrimitives.v'),X7))) & s('type.semanticPrimitives.store_v'('type.modSem.v'),X6) = s('type.semanticPrimitives.store_v'('type.modSem.v'),'const.semanticPrimitives.Varray_1'(s('type.list.list'('type.modSem.v'),X8))) & p(s(bool,'const.source_to_modProof.vs_rel_3'(s('type.list.list'('type.option.option'('type.modSem.v')),X4),s('type.list.list'('type.semanticPrimitives.v'),X7),s('type.list.list'('type.modSem.v'),X8)))))) & ~p(s(bool,happ(s(fun('type.semanticPrimitives.store_v'('type.modSem.v'),bool),happ(s(fun('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),fun('type.semanticPrimitives.store_v'('type.modSem.v'),bool)),happ(s(fun('type.list.list'('type.option.option'('type.modSem.v')),fun('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),fun('type.semanticPrimitives.store_v'('type.modSem.v'),bool))),X3),s('type.list.list'('type.option.option'('type.modSem.v')),X4))),s('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),X5))),s('type.semanticPrimitives.store_v'('type.modSem.v'),X6))))) | p(s(bool,happ(s(fun('type.semanticPrimitives.store_v'('type.modSem.v'),bool),happ(s(fun('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),fun('type.semanticPrimitives.store_v'('type.modSem.v'),bool)),happ(s(fun('type.list.list'('type.option.option'('type.modSem.v')),fun('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),fun('type.semanticPrimitives.store_v'('type.modSem.v'),bool))),X3),s('type.list.list'('type.option.option'('type.modSem.v')),X0))),s('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),X1))),s('type.semanticPrimitives.store_v'('type.modSem.v'),X2))))))),
  introduced(predicate_definition_introduction,[new_symbols(naming,[sP1])])).
fof(f14,plain,(
  ! [X0,X1,X2] : (p(s(bool,'const.source_to_modProof.sv_rel_3'(s('type.list.list'('type.option.option'('type.modSem.v')),X0),s('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),X1),s('type.semanticPrimitives.store_v'('type.modSem.v'),X2)))) <=> ! [X3] : (? [X4,X5,X6] : ((? [X10,X11] : (s('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),X5) = s('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),'const.semanticPrimitives.Refv_1'(s('type.semanticPrimitives.v',X10))) & s('type.semanticPrimitives.store_v'('type.modSem.v'),X6) = s('type.semanticPrimitives.store_v'('type.modSem.v'),'const.semanticPrimitives.Refv_1'(s('type.modSem.v',X11))) & p(s(bool,'const.source_to_modProof.v_rel_3'(s('type.list.list'('type.option.option'('type.modSem.v')),X4),s('type.semanticPrimitives.v',X10),s('type.modSem.v',X11))))) | ? [X9] : (s('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),X5) = s('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),'const.semanticPrimitives.W8array_1'(s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X9))) & s('type.semanticPrimitives.store_v'('type.modSem.v'),X6) = s('type.semanticPrimitives.store_v'('type.modSem.v'),'const.semanticPrimitives.W8array_1'(s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X9)))) | ? [X7,X8] : (s('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),X5) = s('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),'const.semanticPrimitives.Varray_1'(s('type.list.list'('type.semanticPrimitives.v'),X7))) & s('type.semanticPrimitives.store_v'('type.modSem.v'),X6) = s('type.semanticPrimitives.store_v'('type.modSem.v'),'const.semanticPrimitives.Varray_1'(s('type.list.list'('type.modSem.v'),X8))) & p(s(bool,'const.source_to_modProof.vs_rel_3'(s('type.list.list'('type.option.option'('type.modSem.v')),X4),s('type.list.list'('type.semanticPrimitives.v'),X7),s('type.list.list'('type.modSem.v'),X8)))))) & ~p(s(bool,happ(s(fun('type.semanticPrimitives.store_v'('type.modSem.v'),bool),happ(s(fun('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),fun('type.semanticPrimitives.store_v'('type.modSem.v'),bool)),happ(s(fun('type.list.list'('type.option.option'('type.modSem.v')),fun('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),fun('type.semanticPrimitives.store_v'('type.modSem.v'),bool))),X3),s('type.list.list'('type.option.option'('type.modSem.v')),X4))),s('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),X5))),s('type.semanticPrimitives.store_v'('type.modSem.v'),X6))))) | p(s(bool,happ(s(fun('type.semanticPrimitives.store_v'('type.modSem.v'),bool),happ(s(fun('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),fun('type.semanticPrimitives.store_v'('type.modSem.v'),bool)),happ(s(fun('type.list.list'('type.option.option'('type.modSem.v')),fun('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),fun('type.semanticPrimitives.store_v'('type.modSem.v'),bool))),X3),s('type.list.list'('type.option.option'('type.modSem.v')),X0))),s('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),X1))),s('type.semanticPrimitives.store_v'('type.modSem.v'),X2))))))),
  inference(ennf_transformation,[],[f10])).
fof(f10,plain,(
  ! [X0,X1,X2] : (p(s(bool,'const.source_to_modProof.sv_rel_3'(s('type.list.list'('type.option.option'('type.modSem.v')),X0),s('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),X1),s('type.semanticPrimitives.store_v'('type.modSem.v'),X2)))) <=> ! [X3] : (! [X4,X5,X6] : ((? [X10,X11] : (s('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),X5) = s('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),'const.semanticPrimitives.Refv_1'(s('type.semanticPrimitives.v',X10))) & s('type.semanticPrimitives.store_v'('type.modSem.v'),X6) = s('type.semanticPrimitives.store_v'('type.modSem.v'),'const.semanticPrimitives.Refv_1'(s('type.modSem.v',X11))) & p(s(bool,'const.source_to_modProof.v_rel_3'(s('type.list.list'('type.option.option'('type.modSem.v')),X4),s('type.semanticPrimitives.v',X10),s('type.modSem.v',X11))))) | ? [X9] : (s('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),X5) = s('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),'const.semanticPrimitives.W8array_1'(s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X9))) & s('type.semanticPrimitives.store_v'('type.modSem.v'),X6) = s('type.semanticPrimitives.store_v'('type.modSem.v'),'const.semanticPrimitives.W8array_1'(s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X9)))) | ? [X7,X8] : (s('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),X5) = s('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),'const.semanticPrimitives.Varray_1'(s('type.list.list'('type.semanticPrimitives.v'),X7))) & s('type.semanticPrimitives.store_v'('type.modSem.v'),X6) = s('type.semanticPrimitives.store_v'('type.modSem.v'),'const.semanticPrimitives.Varray_1'(s('type.list.list'('type.modSem.v'),X8))) & p(s(bool,'const.source_to_modProof.vs_rel_3'(s('type.list.list'('type.option.option'('type.modSem.v')),X4),s('type.list.list'('type.semanticPrimitives.v'),X7),s('type.list.list'('type.modSem.v'),X8)))))) => p(s(bool,happ(s(fun('type.semanticPrimitives.store_v'('type.modSem.v'),bool),happ(s(fun('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),fun('type.semanticPrimitives.store_v'('type.modSem.v'),bool)),happ(s(fun('type.list.list'('type.option.option'('type.modSem.v')),fun('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),fun('type.semanticPrimitives.store_v'('type.modSem.v'),bool))),X3),s('type.list.list'('type.option.option'('type.modSem.v')),X4))),s('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),X5))),s('type.semanticPrimitives.store_v'('type.modSem.v'),X6))))) => p(s(bool,happ(s(fun('type.semanticPrimitives.store_v'('type.modSem.v'),bool),happ(s(fun('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),fun('type.semanticPrimitives.store_v'('type.modSem.v'),bool)),happ(s(fun('type.list.list'('type.option.option'('type.modSem.v')),fun('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),fun('type.semanticPrimitives.store_v'('type.modSem.v'),bool))),X3),s('type.list.list'('type.option.option'('type.modSem.v')),X0))),s('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),X1))),s('type.semanticPrimitives.store_v'('type.modSem.v'),X2))))))),
  inference(rectify,[],[f8])).
fof(f8,axiom,(
  ! [X5,X11,X12] : (p(s(bool,'const.source_to_modProof.sv_rel_3'(s('type.list.list'('type.option.option'('type.modSem.v')),X5),s('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),X11),s('type.semanticPrimitives.store_v'('type.modSem.v'),X12)))) <=> ! [X13] : (! [X14,X15,X16] : ((? [X7,X8] : (s('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),X15) = s('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),'const.semanticPrimitives.Refv_1'(s('type.semanticPrimitives.v',X7))) & s('type.semanticPrimitives.store_v'('type.modSem.v'),X16) = s('type.semanticPrimitives.store_v'('type.modSem.v'),'const.semanticPrimitives.Refv_1'(s('type.modSem.v',X8))) & p(s(bool,'const.source_to_modProof.v_rel_3'(s('type.list.list'('type.option.option'('type.modSem.v')),X14),s('type.semanticPrimitives.v',X7),s('type.modSem.v',X8))))) | ? [X17] : (s('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),X15) = s('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),'const.semanticPrimitives.W8array_1'(s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X17))) & s('type.semanticPrimitives.store_v'('type.modSem.v'),X16) = s('type.semanticPrimitives.store_v'('type.modSem.v'),'const.semanticPrimitives.W8array_1'(s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X17)))) | ? [X18,X19] : (s('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),X15) = s('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),'const.semanticPrimitives.Varray_1'(s('type.list.list'('type.semanticPrimitives.v'),X18))) & s('type.semanticPrimitives.store_v'('type.modSem.v'),X16) = s('type.semanticPrimitives.store_v'('type.modSem.v'),'const.semanticPrimitives.Varray_1'(s('type.list.list'('type.modSem.v'),X19))) & p(s(bool,'const.source_to_modProof.vs_rel_3'(s('type.list.list'('type.option.option'('type.modSem.v')),X14),s('type.list.list'('type.semanticPrimitives.v'),X18),s('type.list.list'('type.modSem.v'),X19)))))) => p(s(bool,happ(s(fun('type.semanticPrimitives.store_v'('type.modSem.v'),bool),happ(s(fun('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),fun('type.semanticPrimitives.store_v'('type.modSem.v'),bool)),happ(s(fun('type.list.list'('type.option.option'('type.modSem.v')),fun('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),fun('type.semanticPrimitives.store_v'('type.modSem.v'),bool))),X13),s('type.list.list'('type.option.option'('type.modSem.v')),X14))),s('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),X15))),s('type.semanticPrimitives.store_v'('type.modSem.v'),X16))))) => p(s(bool,happ(s(fun('type.semanticPrimitives.store_v'('type.modSem.v'),bool),happ(s(fun('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),fun('type.semanticPrimitives.store_v'('type.modSem.v'),bool)),happ(s(fun('type.list.list'('type.option.option'('type.modSem.v')),fun('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),fun('type.semanticPrimitives.store_v'('type.modSem.v'),bool))),X13),s('type.list.list'('type.option.option'('type.modSem.v')),X5))),s('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),X11))),s('type.semanticPrimitives.store_v'('type.modSem.v'),X12))))))),
  file('thm.source_to_modProof.sv_rel_rules|split|0','thm.source_to_modProof.sv_rel_def')).
fof(f29,plain,(
  ~p(s(bool,'const.source_to_modProof.sv_rel_3'(s('type.list.list'('type.option.option'('type.modSem.v')),sK2),s('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),'const.semanticPrimitives.Refv_1'(s('type.semanticPrimitives.v',sK3))),s('type.semanticPrimitives.store_v'('type.modSem.v'),'const.semanticPrimitives.Refv_1'(s('type.modSem.v',sK4))))))),
  inference(cnf_transformation,[],[f20])).
fof(f20,plain,(
  p(s(bool,'const.source_to_modProof.v_rel_3'(s('type.list.list'('type.option.option'('type.modSem.v')),sK2),s('type.semanticPrimitives.v',sK3),s('type.modSem.v',sK4)))) & ~p(s(bool,'const.source_to_modProof.sv_rel_3'(s('type.list.list'('type.option.option'('type.modSem.v')),sK2),s('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),'const.semanticPrimitives.Refv_1'(s('type.semanticPrimitives.v',sK3))),s('type.semanticPrimitives.store_v'('type.modSem.v'),'const.semanticPrimitives.Refv_1'(s('type.modSem.v',sK4))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK2,sK3,sK4])],[f13])).
fof(f13,plain,(
  ? [X0,X1,X2] : (p(s(bool,'const.source_to_modProof.v_rel_3'(s('type.list.list'('type.option.option'('type.modSem.v')),X0),s('type.semanticPrimitives.v',X1),s('type.modSem.v',X2)))) & ~p(s(bool,'const.source_to_modProof.sv_rel_3'(s('type.list.list'('type.option.option'('type.modSem.v')),X0),s('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),'const.semanticPrimitives.Refv_1'(s('type.semanticPrimitives.v',X1))),s('type.semanticPrimitives.store_v'('type.modSem.v'),'const.semanticPrimitives.Refv_1'(s('type.modSem.v',X2)))))))),
  inference(ennf_transformation,[],[f9])).
fof(f9,plain,(
  ~! [X0,X1,X2] : (p(s(bool,'const.source_to_modProof.v_rel_3'(s('type.list.list'('type.option.option'('type.modSem.v')),X0),s('type.semanticPrimitives.v',X1),s('type.modSem.v',X2)))) => p(s(bool,'const.source_to_modProof.sv_rel_3'(s('type.list.list'('type.option.option'('type.modSem.v')),X0),s('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),'const.semanticPrimitives.Refv_1'(s('type.semanticPrimitives.v',X1))),s('type.semanticPrimitives.store_v'('type.modSem.v'),'const.semanticPrimitives.Refv_1'(s('type.modSem.v',X2)))))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6,X7,X8] : (p(s(bool,'const.source_to_modProof.v_rel_3'(s('type.list.list'('type.option.option'('type.modSem.v')),X6),s('type.semanticPrimitives.v',X7),s('type.modSem.v',X8)))) => p(s(bool,'const.source_to_modProof.sv_rel_3'(s('type.list.list'('type.option.option'('type.modSem.v')),X6),s('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),'const.semanticPrimitives.Refv_1'(s('type.semanticPrimitives.v',X7))),s('type.semanticPrimitives.store_v'('type.modSem.v'),'const.semanticPrimitives.Refv_1'(s('type.modSem.v',X8)))))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6,X7,X8] : (p(s(bool,'const.source_to_modProof.v_rel_3'(s('type.list.list'('type.option.option'('type.modSem.v')),X6),s('type.semanticPrimitives.v',X7),s('type.modSem.v',X8)))) => p(s(bool,'const.source_to_modProof.sv_rel_3'(s('type.list.list'('type.option.option'('type.modSem.v')),X6),s('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),'const.semanticPrimitives.Refv_1'(s('type.semanticPrimitives.v',X7))),s('type.semanticPrimitives.store_v'('type.modSem.v'),'const.semanticPrimitives.Refv_1'(s('type.modSem.v',X8)))))))),
  file('thm.source_to_modProof.sv_rel_rules|split|0','thm.source_to_modProof.sv_rel_rules|split|0')).
fof(f5305,plain,(
  sP1(sK2,'const.semanticPrimitives.Refv_1'(s('type.semanticPrimitives.v',sK3)),'const.semanticPrimitives.Refv_1'(s('type.modSem.v',sK4)))),
  inference(equality_resolution,[],[f5298])).
fof(f5298,plain,(
  ( ! [X0] : (s('type.semanticPrimitives.store_v'('type.modSem.v'),X0) != s('type.semanticPrimitives.store_v'('type.modSem.v'),'const.semanticPrimitives.Refv_1'(s('type.modSem.v',sK4))) | sP1(sK2,'const.semanticPrimitives.Refv_1'(s('type.semanticPrimitives.v',sK3)),X0)) )),
  inference(equality_resolution,[],[f5182])).
fof(f5182,plain,(
  ( ! [X8,X7] : (s('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),X8) != s('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),'const.semanticPrimitives.Refv_1'(s('type.semanticPrimitives.v',sK3))) | s('type.semanticPrimitives.store_v'('type.modSem.v'),X7) != s('type.semanticPrimitives.store_v'('type.modSem.v'),'const.semanticPrimitives.Refv_1'(s('type.modSem.v',sK4))) | sP1(sK2,X8,X7)) )),
  inference(resolution,[],[f54,f1687])).
fof(f1687,plain,(
  ( ! [X2,X0,X1] : (~sP0(X0,X2,X1) | sP1(X0,X1,X2)) )),
  inference(duplicate_literal_removal,[],[f1662])).
fof(f1662,plain,(
  ( ! [X2,X0,X1] : (sP1(X0,X1,X2) | ~sP0(X0,X2,X1) | sP1(X0,X1,X2)) )),
  inference(resolution,[],[f37,f40])).
fof(f40,plain,(
  ( ! [X2,X0,X1] : (sP1(X0,X1,X2) | ~p(s(bool,happ(s(fun('type.semanticPrimitives.store_v'('type.modSem.v'),bool),happ(s(fun('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),fun('type.semanticPrimitives.store_v'('type.modSem.v'),bool)),happ(s(fun('type.list.list'('type.option.option'('type.modSem.v')),fun('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),fun('type.semanticPrimitives.store_v'('type.modSem.v'),bool))),sK11(X2,X1,X0)),s('type.list.list'('type.option.option'('type.modSem.v')),X0))),s('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),X1))),s('type.semanticPrimitives.store_v'('type.modSem.v'),X2))))) )),
  inference(cnf_transformation,[],[f23])).
fof(f23,plain,(
  ! [X0,X1,X2] : ((~sP1(X0,X1,X2) | ! [X10] : (((sP0(sK5(X10,X2,X1,X0),sK7(X10,X2,X1,X0),sK6(X10,X2,X1,X0)) | (s('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),sK6(X10,X2,X1,X0)) = s('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),'const.semanticPrimitives.W8array_1'(s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),sK8(X10,X2,X1,X0)))) & s('type.semanticPrimitives.store_v'('type.modSem.v'),sK7(X10,X2,X1,X0)) = s('type.semanticPrimitives.store_v'('type.modSem.v'),'const.semanticPrimitives.W8array_1'(s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),sK8(X10,X2,X1,X0))))) | (s('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),sK6(X10,X2,X1,X0)) = s('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),'const.semanticPrimitives.Varray_1'(s('type.list.list'('type.semanticPrimitives.v'),sK9(X10,X2,X1,X0)))) & s('type.semanticPrimitives.store_v'('type.modSem.v'),sK7(X10,X2,X1,X0)) = s('type.semanticPrimitives.store_v'('type.modSem.v'),'const.semanticPrimitives.Varray_1'(s('type.list.list'('type.modSem.v'),sK10(X10,X2,X1,X0)))) & p(s(bool,'const.source_to_modProof.vs_rel_3'(s('type.list.list'('type.option.option'('type.modSem.v')),sK5(X10,X2,X1,X0)),s('type.list.list'('type.semanticPrimitives.v'),sK9(X10,X2,X1,X0)),s('type.list.list'('type.modSem.v'),sK10(X10,X2,X1,X0))))))) & ~p(s(bool,happ(s(fun('type.semanticPrimitives.store_v'('type.modSem.v'),bool),happ(s(fun('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),fun('type.semanticPrimitives.store_v'('type.modSem.v'),bool)),happ(s(fun('type.list.list'('type.option.option'('type.modSem.v')),fun('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),fun('type.semanticPrimitives.store_v'('type.modSem.v'),bool))),X10),s('type.list.list'('type.option.option'('type.modSem.v')),sK5(X10,X2,X1,X0)))),s('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),sK6(X10,X2,X1,X0)))),s('type.semanticPrimitives.store_v'('type.modSem.v'),sK7(X10,X2,X1,X0)))))) | p(s(bool,happ(s(fun('type.semanticPrimitives.store_v'('type.modSem.v'),bool),happ(s(fun('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),fun('type.semanticPrimitives.store_v'('type.modSem.v'),bool)),happ(s(fun('type.list.list'('type.option.option'('type.modSem.v')),fun('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),fun('type.semanticPrimitives.store_v'('type.modSem.v'),bool))),X10),s('type.list.list'('type.option.option'('type.modSem.v')),X0))),s('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),X1))),s('type.semanticPrimitives.store_v'('type.modSem.v'),X2)))))) & ((! [X4,X5,X6] : ((~sP0(X4,X6,X5) & ! [X9] : (s('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),X5) != s('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),'const.semanticPrimitives.W8array_1'(s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X9))) | s('type.semanticPrimitives.store_v'('type.modSem.v'),X6) != s('type.semanticPrimitives.store_v'('type.modSem.v'),'const.semanticPrimitives.W8array_1'(s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X9)))) & ! [X7,X8] : (s('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),X5) != s('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),'const.semanticPrimitives.Varray_1'(s('type.list.list'('type.semanticPrimitives.v'),X7))) | s('type.semanticPrimitives.store_v'('type.modSem.v'),X6) != s('type.semanticPrimitives.store_v'('type.modSem.v'),'const.semanticPrimitives.Varray_1'(s('type.list.list'('type.modSem.v'),X8))) | ~p(s(bool,'const.source_to_modProof.vs_rel_3'(s('type.list.list'('type.option.option'('type.modSem.v')),X4),s('type.list.list'('type.semanticPrimitives.v'),X7),s('type.list.list'('type.modSem.v'),X8)))))) | p(s(bool,happ(s(fun('type.semanticPrimitives.store_v'('type.modSem.v'),bool),happ(s(fun('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),fun('type.semanticPrimitives.store_v'('type.modSem.v'),bool)),happ(s(fun('type.list.list'('type.option.option'('type.modSem.v')),fun('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),fun('type.semanticPrimitives.store_v'('type.modSem.v'),bool))),sK11(X2,X1,X0)),s('type.list.list'('type.option.option'('type.modSem.v')),X4))),s('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),X5))),s('type.semanticPrimitives.store_v'('type.modSem.v'),X6))))) & ~p(s(bool,happ(s(fun('type.semanticPrimitives.store_v'('type.modSem.v'),bool),happ(s(fun('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),fun('type.semanticPrimitives.store_v'('type.modSem.v'),bool)),happ(s(fun('type.list.list'('type.option.option'('type.modSem.v')),fun('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),fun('type.semanticPrimitives.store_v'('type.modSem.v'),bool))),sK11(X2,X1,X0)),s('type.list.list'('type.option.option'('type.modSem.v')),X0))),s('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),X1))),s('type.semanticPrimitives.store_v'('type.modSem.v'),X2))))) | sP1(X0,X1,X2)))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK5,sK6,sK7,sK8,sK9,sK10,sK11])],[f22])).
fof(f22,plain,(
  ! [X0,X1,X2] : ((~sP1(X0,X1,X2) | ! [X10] : (? [X11,X12,X13] : ((sP0(X11,X13,X12) | ? [X16] : (s('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),X12) = s('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),'const.semanticPrimitives.W8array_1'(s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X16))) & s('type.semanticPrimitives.store_v'('type.modSem.v'),X13) = s('type.semanticPrimitives.store_v'('type.modSem.v'),'const.semanticPrimitives.W8array_1'(s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X16)))) | ? [X14,X15] : (s('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),X12) = s('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),'const.semanticPrimitives.Varray_1'(s('type.list.list'('type.semanticPrimitives.v'),X14))) & s('type.semanticPrimitives.store_v'('type.modSem.v'),X13) = s('type.semanticPrimitives.store_v'('type.modSem.v'),'const.semanticPrimitives.Varray_1'(s('type.list.list'('type.modSem.v'),X15))) & p(s(bool,'const.source_to_modProof.vs_rel_3'(s('type.list.list'('type.option.option'('type.modSem.v')),X11),s('type.list.list'('type.semanticPrimitives.v'),X14),s('type.list.list'('type.modSem.v'),X15)))))) & ~p(s(bool,happ(s(fun('type.semanticPrimitives.store_v'('type.modSem.v'),bool),happ(s(fun('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),fun('type.semanticPrimitives.store_v'('type.modSem.v'),bool)),happ(s(fun('type.list.list'('type.option.option'('type.modSem.v')),fun('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),fun('type.semanticPrimitives.store_v'('type.modSem.v'),bool))),X10),s('type.list.list'('type.option.option'('type.modSem.v')),X11))),s('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),X12))),s('type.semanticPrimitives.store_v'('type.modSem.v'),X13))))) | p(s(bool,happ(s(fun('type.semanticPrimitives.store_v'('type.modSem.v'),bool),happ(s(fun('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),fun('type.semanticPrimitives.store_v'('type.modSem.v'),bool)),happ(s(fun('type.list.list'('type.option.option'('type.modSem.v')),fun('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),fun('type.semanticPrimitives.store_v'('type.modSem.v'),bool))),X10),s('type.list.list'('type.option.option'('type.modSem.v')),X0))),s('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),X1))),s('type.semanticPrimitives.store_v'('type.modSem.v'),X2)))))) & (? [X3] : (! [X4,X5,X6] : ((~sP0(X4,X6,X5) & ! [X9] : (s('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),X5) != s('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),'const.semanticPrimitives.W8array_1'(s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X9))) | s('type.semanticPrimitives.store_v'('type.modSem.v'),X6) != s('type.semanticPrimitives.store_v'('type.modSem.v'),'const.semanticPrimitives.W8array_1'(s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X9)))) & ! [X7,X8] : (s('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),X5) != s('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),'const.semanticPrimitives.Varray_1'(s('type.list.list'('type.semanticPrimitives.v'),X7))) | s('type.semanticPrimitives.store_v'('type.modSem.v'),X6) != s('type.semanticPrimitives.store_v'('type.modSem.v'),'const.semanticPrimitives.Varray_1'(s('type.list.list'('type.modSem.v'),X8))) | ~p(s(bool,'const.source_to_modProof.vs_rel_3'(s('type.list.list'('type.option.option'('type.modSem.v')),X4),s('type.list.list'('type.semanticPrimitives.v'),X7),s('type.list.list'('type.modSem.v'),X8)))))) | p(s(bool,happ(s(fun('type.semanticPrimitives.store_v'('type.modSem.v'),bool),happ(s(fun('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),fun('type.semanticPrimitives.store_v'('type.modSem.v'),bool)),happ(s(fun('type.list.list'('type.option.option'('type.modSem.v')),fun('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),fun('type.semanticPrimitives.store_v'('type.modSem.v'),bool))),X3),s('type.list.list'('type.option.option'('type.modSem.v')),X4))),s('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),X5))),s('type.semanticPrimitives.store_v'('type.modSem.v'),X6))))) & ~p(s(bool,happ(s(fun('type.semanticPrimitives.store_v'('type.modSem.v'),bool),happ(s(fun('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),fun('type.semanticPrimitives.store_v'('type.modSem.v'),bool)),happ(s(fun('type.list.list'('type.option.option'('type.modSem.v')),fun('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),fun('type.semanticPrimitives.store_v'('type.modSem.v'),bool))),X3),s('type.list.list'('type.option.option'('type.modSem.v')),X0))),s('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),X1))),s('type.semanticPrimitives.store_v'('type.modSem.v'),X2))))) | sP1(X0,X1,X2)))),
  inference(rectify,[],[f21])).
fof(f21,plain,(
  ! [X0,X1,X2] : ((~sP1(X0,X1,X2) | ! [X3] : (? [X4,X5,X6] : ((sP0(X4,X6,X5) | ? [X9] : (s('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),X5) = s('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),'const.semanticPrimitives.W8array_1'(s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X9))) & s('type.semanticPrimitives.store_v'('type.modSem.v'),X6) = s('type.semanticPrimitives.store_v'('type.modSem.v'),'const.semanticPrimitives.W8array_1'(s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X9)))) | ? [X7,X8] : (s('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),X5) = s('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),'const.semanticPrimitives.Varray_1'(s('type.list.list'('type.semanticPrimitives.v'),X7))) & s('type.semanticPrimitives.store_v'('type.modSem.v'),X6) = s('type.semanticPrimitives.store_v'('type.modSem.v'),'const.semanticPrimitives.Varray_1'(s('type.list.list'('type.modSem.v'),X8))) & p(s(bool,'const.source_to_modProof.vs_rel_3'(s('type.list.list'('type.option.option'('type.modSem.v')),X4),s('type.list.list'('type.semanticPrimitives.v'),X7),s('type.list.list'('type.modSem.v'),X8)))))) & ~p(s(bool,happ(s(fun('type.semanticPrimitives.store_v'('type.modSem.v'),bool),happ(s(fun('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),fun('type.semanticPrimitives.store_v'('type.modSem.v'),bool)),happ(s(fun('type.list.list'('type.option.option'('type.modSem.v')),fun('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),fun('type.semanticPrimitives.store_v'('type.modSem.v'),bool))),X3),s('type.list.list'('type.option.option'('type.modSem.v')),X4))),s('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),X5))),s('type.semanticPrimitives.store_v'('type.modSem.v'),X6))))) | p(s(bool,happ(s(fun('type.semanticPrimitives.store_v'('type.modSem.v'),bool),happ(s(fun('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),fun('type.semanticPrimitives.store_v'('type.modSem.v'),bool)),happ(s(fun('type.list.list'('type.option.option'('type.modSem.v')),fun('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),fun('type.semanticPrimitives.store_v'('type.modSem.v'),bool))),X3),s('type.list.list'('type.option.option'('type.modSem.v')),X0))),s('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),X1))),s('type.semanticPrimitives.store_v'('type.modSem.v'),X2)))))) & (? [X3] : (! [X4,X5,X6] : ((~sP0(X4,X6,X5) & ! [X9] : (s('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),X5) != s('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),'const.semanticPrimitives.W8array_1'(s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X9))) | s('type.semanticPrimitives.store_v'('type.modSem.v'),X6) != s('type.semanticPrimitives.store_v'('type.modSem.v'),'const.semanticPrimitives.W8array_1'(s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X9)))) & ! [X7,X8] : (s('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),X5) != s('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),'const.semanticPrimitives.Varray_1'(s('type.list.list'('type.semanticPrimitives.v'),X7))) | s('type.semanticPrimitives.store_v'('type.modSem.v'),X6) != s('type.semanticPrimitives.store_v'('type.modSem.v'),'const.semanticPrimitives.Varray_1'(s('type.list.list'('type.modSem.v'),X8))) | ~p(s(bool,'const.source_to_modProof.vs_rel_3'(s('type.list.list'('type.option.option'('type.modSem.v')),X4),s('type.list.list'('type.semanticPrimitives.v'),X7),s('type.list.list'('type.modSem.v'),X8)))))) | p(s(bool,happ(s(fun('type.semanticPrimitives.store_v'('type.modSem.v'),bool),happ(s(fun('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),fun('type.semanticPrimitives.store_v'('type.modSem.v'),bool)),happ(s(fun('type.list.list'('type.option.option'('type.modSem.v')),fun('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),fun('type.semanticPrimitives.store_v'('type.modSem.v'),bool))),X3),s('type.list.list'('type.option.option'('type.modSem.v')),X4))),s('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),X5))),s('type.semanticPrimitives.store_v'('type.modSem.v'),X6))))) & ~p(s(bool,happ(s(fun('type.semanticPrimitives.store_v'('type.modSem.v'),bool),happ(s(fun('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),fun('type.semanticPrimitives.store_v'('type.modSem.v'),bool)),happ(s(fun('type.list.list'('type.option.option'('type.modSem.v')),fun('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),fun('type.semanticPrimitives.store_v'('type.modSem.v'),bool))),X3),s('type.list.list'('type.option.option'('type.modSem.v')),X0))),s('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),X1))),s('type.semanticPrimitives.store_v'('type.modSem.v'),X2))))) | sP1(X0,X1,X2)))),
  inference(nnf_transformation,[],[f18])).
fof(f37,plain,(
  ( ! [X6,X4,X2,X0,X5,X1] : (sP1(X0,X1,X2) | p(s(bool,happ(s(fun('type.semanticPrimitives.store_v'('type.modSem.v'),bool),happ(s(fun('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),fun('type.semanticPrimitives.store_v'('type.modSem.v'),bool)),happ(s(fun('type.list.list'('type.option.option'('type.modSem.v')),fun('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),fun('type.semanticPrimitives.store_v'('type.modSem.v'),bool))),sK11(X2,X1,X0)),s('type.list.list'('type.option.option'('type.modSem.v')),X4))),s('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),X5))),s('type.semanticPrimitives.store_v'('type.modSem.v'),X6)))) | ~sP0(X4,X6,X5)) )),
  inference(cnf_transformation,[],[f23])).
fof(f54,plain,(
  ( ! [X0,X1] : (sP0(sK2,X0,X1) | s('type.semanticPrimitives.store_v'('type.modSem.v'),X0) != s('type.semanticPrimitives.store_v'('type.modSem.v'),'const.semanticPrimitives.Refv_1'(s('type.modSem.v',sK4))) | s('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),X1) != s('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),'const.semanticPrimitives.Refv_1'(s('type.semanticPrimitives.v',sK3)))) )),
  inference(resolution,[],[f28,f44])).
fof(f44,plain,(
  ( ! [X4,X2,X0,X3,X1] : (sP0(X0,X1,X2) | ~p(s(bool,'const.source_to_modProof.v_rel_3'(s('type.list.list'('type.option.option'('type.modSem.v')),X0),s('type.semanticPrimitives.v',X3),s('type.modSem.v',X4)))) | s('type.semanticPrimitives.store_v'('type.modSem.v'),X1) != s('type.semanticPrimitives.store_v'('type.modSem.v'),'const.semanticPrimitives.Refv_1'(s('type.modSem.v',X4))) | s('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),X2) != s('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),'const.semanticPrimitives.Refv_1'(s('type.semanticPrimitives.v',X3)))) )),
  inference(cnf_transformation,[],[f26])).
fof(f26,plain,(
  ! [X0,X1,X2] : ((~sP0(X0,X1,X2) | (s('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),X2) = s('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),'const.semanticPrimitives.Refv_1'(s('type.semanticPrimitives.v',sK12(X2,X1,X0)))) & s('type.semanticPrimitives.store_v'('type.modSem.v'),X1) = s('type.semanticPrimitives.store_v'('type.modSem.v'),'const.semanticPrimitives.Refv_1'(s('type.modSem.v',sK13(X2,X1,X0)))) & p(s(bool,'const.source_to_modProof.v_rel_3'(s('type.list.list'('type.option.option'('type.modSem.v')),X0),s('type.semanticPrimitives.v',sK12(X2,X1,X0)),s('type.modSem.v',sK13(X2,X1,X0))))))) & (! [X3,X4] : (s('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),X2) != s('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),'const.semanticPrimitives.Refv_1'(s('type.semanticPrimitives.v',X3))) | s('type.semanticPrimitives.store_v'('type.modSem.v'),X1) != s('type.semanticPrimitives.store_v'('type.modSem.v'),'const.semanticPrimitives.Refv_1'(s('type.modSem.v',X4))) | ~p(s(bool,'const.source_to_modProof.v_rel_3'(s('type.list.list'('type.option.option'('type.modSem.v')),X0),s('type.semanticPrimitives.v',X3),s('type.modSem.v',X4))))) | sP0(X0,X1,X2)))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK12,sK13])],[f25])).
fof(f25,plain,(
  ! [X0,X1,X2] : ((~sP0(X0,X1,X2) | ? [X5,X6] : (s('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),X2) = s('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),'const.semanticPrimitives.Refv_1'(s('type.semanticPrimitives.v',X5))) & s('type.semanticPrimitives.store_v'('type.modSem.v'),X1) = s('type.semanticPrimitives.store_v'('type.modSem.v'),'const.semanticPrimitives.Refv_1'(s('type.modSem.v',X6))) & p(s(bool,'const.source_to_modProof.v_rel_3'(s('type.list.list'('type.option.option'('type.modSem.v')),X0),s('type.semanticPrimitives.v',X5),s('type.modSem.v',X6)))))) & (! [X3,X4] : (s('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),X2) != s('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),'const.semanticPrimitives.Refv_1'(s('type.semanticPrimitives.v',X3))) | s('type.semanticPrimitives.store_v'('type.modSem.v'),X1) != s('type.semanticPrimitives.store_v'('type.modSem.v'),'const.semanticPrimitives.Refv_1'(s('type.modSem.v',X4))) | ~p(s(bool,'const.source_to_modProof.v_rel_3'(s('type.list.list'('type.option.option'('type.modSem.v')),X0),s('type.semanticPrimitives.v',X3),s('type.modSem.v',X4))))) | sP0(X0,X1,X2)))),
  inference(rectify,[],[f24])).
fof(f24,plain,(
  ! [X4,X6,X5] : ((~sP0(X4,X6,X5) | ? [X10,X11] : (s('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),X5) = s('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),'const.semanticPrimitives.Refv_1'(s('type.semanticPrimitives.v',X10))) & s('type.semanticPrimitives.store_v'('type.modSem.v'),X6) = s('type.semanticPrimitives.store_v'('type.modSem.v'),'const.semanticPrimitives.Refv_1'(s('type.modSem.v',X11))) & p(s(bool,'const.source_to_modProof.v_rel_3'(s('type.list.list'('type.option.option'('type.modSem.v')),X4),s('type.semanticPrimitives.v',X10),s('type.modSem.v',X11)))))) & (! [X10,X11] : (s('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),X5) != s('type.semanticPrimitives.store_v'('type.semanticPrimitives.v'),'const.semanticPrimitives.Refv_1'(s('type.semanticPrimitives.v',X10))) | s('type.semanticPrimitives.store_v'('type.modSem.v'),X6) != s('type.semanticPrimitives.store_v'('type.modSem.v'),'const.semanticPrimitives.Refv_1'(s('type.modSem.v',X11))) | ~p(s(bool,'const.source_to_modProof.v_rel_3'(s('type.list.list'('type.option.option'('type.modSem.v')),X4),s('type.semanticPrimitives.v',X10),s('type.modSem.v',X11))))) | sP0(X4,X6,X5)))),
  inference(nnf_transformation,[],[f17])).
fof(f28,plain,(
  p(s(bool,'const.source_to_modProof.v_rel_3'(s('type.list.list'('type.option.option'('type.modSem.v')),sK2),s('type.semanticPrimitives.v',sK3),s('type.modSem.v',sK4))))),
  inference(cnf_transformation,[],[f20])).
% SZS output end Proof for thm.source_to_modProof
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 123
% Passive clauses: 1731
% Generated clauses: 5242
% Final active clauses: 62
% Final passive clauses: 1403
% Input formulas: 7
% Initial clauses: 26
% 
% Selected by SInE selection: 6
% SInE iterations: 1
% 
% Duplicate literals: 337
% Trivial inequalities: 48
% Fw subsumption resolutions: 669
% Fw demodulations: 163
% Bw demodulations: 47
% 
% Simple tautologies: 270
% Equational tautologies: 30
% Forward subsumptions: 1856
% 
% Binary resolution: 930
% Forward superposition: 1908
% Backward superposition: 874
% Self superposition: 70
% Equality factoring: 52
% Equality resolution: 20
% 
% Split clauses: 214
% Split components: 428
% SAT solver clauses: 222
% SAT solver unit clauses: 7
% SAT solver binary clauses: 122
% 
% Sat splits: 214
% Sat splitting refutations: 7
% 
% Memory used [KB]: 3070
% Time elapsed: 0.395 s
% ------------------------------
% ------------------------------
% Success in time 12.546 s
