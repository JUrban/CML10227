Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 149 next slice time: 5
dis+11_7_3 on thm.inferProps
% (4060)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 948
% Passive clauses: 8604
% Generated clauses: 29305
% Final active clauses: 842
% Final passive clauses: 7237
% Input formulas: 260
% Initial clauses: 594
% 
% Duplicate literals: 151
% Trivial inequalities: 55
% Fw subsumption resolutions: 1245
% Fw demodulations: 3872
% Bw demodulations: 104
% 
% Simple tautologies: 319
% Equational tautologies: 30
% Forward subsumptions: 14295
% 
% Binary resolution: 5557
% Factoring: 366
% Forward superposition: 7199
% Backward superposition: 9815
% Self superposition: 42
% Equality factoring: 2
% Equality resolution: 14
% 
% Split clauses: 832
% Split components: 1666
% SAT solver clauses: 1007
% SAT solver unit clauses: 14
% SAT solver binary clauses: 73
% 
% Sat splits: 832
% Sat splitting refutations: 6
% 
% TWLsolver clauses: 1005
% TWLsolver calls for satisfiability: 341
% 
% Memory used [KB]: 18038
% Time elapsed: 0.600 s
% ------------------------------
% ------------------------------
% remaining time: 143 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.inferProps
% (4078)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 544
% Passive clauses: 3575
% Generated clauses: 19668
% Final active clauses: 527
% Final passive clauses: 2956
% Input formulas: 260
% Initial clauses: 594
% 
% Duplicate literals: 100
% Trivial inequalities: 44
% Fw subsumption resolutions: 676
% Fw demodulations: 3023
% Bw demodulations: 92
% Condensations: 76
% Global subsumptions: 24
% 
% Simple tautologies: 299
% Equational tautologies: 14
% Forward subsumptions: 7586
% Fw demodulations to eq. taut.: 14
% 
% Binary resolution: 2377
% Factoring: 120
% Forward superposition: 5054
% Backward superposition: 3799
% Self superposition: 56
% Equality factoring: 4
% Equality resolution: 15
% 
% Split clauses: 37
% Split components: 74
% SAT solver clauses: 4853
% SAT solver unit clauses: 688
% SAT solver binary clauses: 227
% SAT solver learnt clauses: 48
% SAT solver learnt literals: 20
% 
% Sat splits: 37
% 
% TWLsolver clauses: 4757
% TWLsolver calls for satisfiability: 4670
% 
% Memory used [KB]: 22771
% Time elapsed: 0.700 s
% ------------------------------
% ------------------------------
% remaining time: 136 next slice time: 103
lrs+11_2_br=off:cond=on:fde=none:gs=on:gsaa=full_model:lwlo=on:nwc=2:sas=minisat:stl=30:ssfp=100000:ssfq=1.4:smm=sco:ssnc=none:sp=occurrence:urr=on_98 on thm.inferProps
% (4110)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 980
% Passive clauses: 8530
% Generated clauses: 137072
% Final active clauses: 961
% Final passive clauses: 5589
% Input formulas: 260
% Initial clauses: 594
% Discarded non-redundant clauses: 3899
% 
% Duplicate literals: 10
% Trivial inequalities: 18
% Fw subsumption resolutions: 927
% Fw demodulations: 60200
% Bw demodulations: 404
% Condensations: 59
% Global subsumptions: 9
% 
% Simple tautologies: 155
% Equational tautologies: 63
% Forward subsumptions: 31824
% Fw demodulations to eq. taut.: 32438
% Bw demodulations to eq. taut.: 1
% 
% Unit resulting resolution: 53712
% Factoring: 1
% Forward superposition: 12715
% Backward superposition: 8201
% Self superposition: 92
% Equality factoring: 2
% Equality resolution: 27
% 
% Split clauses: 58
% Split components: 116
% SAT solver clauses: 9780
% SAT solver unit clauses: 3111
% SAT solver binary clauses: 5362
% 
% Sat splits: 58
% Sat splitting refutations: 1123
% 
% Memory used [KB]: 215177
% Time elapsed: 10.400 s
% ------------------------------
% ------------------------------
% remaining time: 32 next slice time: 32
dis+11_5_fde=none:nwc=1:sas=minisat:sd=1:ss=axioms:st=5.0:sos=all:sdd=large:sser=off:sfr=on:ssfp=100000:ssfq=2.0:ssnc=none_37 on thm.inferProps
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.inferProps
% SZS output start Proof for thm.inferProps
fof(f5228,plain,(
  $false),
  inference(subsumption_resolution,[],[f5227,f545])).
fof(f545,plain,(
  p(s(bool,'const.unify.t_wfs_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK15))))),
  inference(cnf_transformation,[],[f416])).
fof(f416,plain,(
  p(s(bool,'const.unify.t_wfs_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK15)))) & p(s(bool,'const.infer.sub_completion_5'(s('type.num.num',sK13),s('type.num.num',sK14),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK15),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),sK16),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK17)))) & ~p(s(bool,'const.unify.t_wfs_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK17))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK13,sK14,sK15,sK16,sK17])],[f354])).
fof(f354,plain,(
  ? [X0,X1,X2,X3,X4] : (p(s(bool,'const.unify.t_wfs_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X2)))) & p(s(bool,'const.infer.sub_completion_5'(s('type.num.num',X0),s('type.num.num',X1),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X2),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),X3),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X4)))) & ~p(s(bool,'const.unify.t_wfs_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X4)))))),
  inference(flattening,[],[f353])).
fof(f353,plain,(
  ? [X0,X1,X2,X3,X4] : ((p(s(bool,'const.unify.t_wfs_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X2)))) & p(s(bool,'const.infer.sub_completion_5'(s('type.num.num',X0),s('type.num.num',X1),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X2),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),X3),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X4))))) & ~p(s(bool,'const.unify.t_wfs_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X4)))))),
  inference(ennf_transformation,[],[f262])).
fof(f262,plain,(
  ~! [X0,X1,X2,X3,X4] : ((p(s(bool,'const.unify.t_wfs_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X2)))) & p(s(bool,'const.infer.sub_completion_5'(s('type.num.num',X0),s('type.num.num',X1),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X2),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),X3),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X4))))) => p(s(bool,'const.unify.t_wfs_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X4)))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6,X7,X8,X9,X10] : ((p(s(bool,'const.unify.t_wfs_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X8)))) & p(s(bool,'const.infer.sub_completion_5'(s('type.num.num',X6),s('type.num.num',X7),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X8),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),X9),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X10))))) => p(s(bool,'const.unify.t_wfs_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X10)))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6,X7,X8,X9,X10] : ((p(s(bool,'const.unify.t_wfs_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X8)))) & p(s(bool,'const.infer.sub_completion_5'(s('type.num.num',X6),s('type.num.num',X7),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X8),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),X9),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X10))))) => p(s(bool,'const.unify.t_wfs_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X10)))))),
  file('thm.inferProps.sub_completion_wfs','thm.inferProps.sub_completion_wfs')).
fof(f5227,plain,(
  ~p(s(bool,'const.unify.t_wfs_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK15))))),
  inference(subsumption_resolution,[],[f5076,f547])).
fof(f547,plain,(
  ~p(s(bool,'const.unify.t_wfs_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK17))))),
  inference(cnf_transformation,[],[f416])).
fof(f5076,plain,(
  p(s(bool,'const.unify.t_wfs_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK17)))) | ~p(s(bool,'const.unify.t_wfs_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK15))))),
  inference(resolution,[],[f1368,f761])).
fof(f761,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,'const.unify.t_wfs_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X2)))) | ~p(s(bool,'const.infer.pure_add_constraints_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X0),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),X1),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X2)))) | ~p(s(bool,'const.unify.t_wfs_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X0))))) )),
  inference(cnf_transformation,[],[f392])).
fof(f392,plain,(
  ! [X0,X1,X2] : (~p(s(bool,'const.unify.t_wfs_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X0)))) | ~p(s(bool,'const.infer.pure_add_constraints_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X0),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),X1),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X2)))) | p(s(bool,'const.unify.t_wfs_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X2)))))),
  inference(flattening,[],[f391])).
fof(f391,plain,(
  ! [X0,X1,X2] : ((~p(s(bool,'const.unify.t_wfs_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X0)))) | ~p(s(bool,'const.infer.pure_add_constraints_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X0),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),X1),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X2))))) | p(s(bool,'const.unify.t_wfs_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X2)))))),
  inference(ennf_transformation,[],[f337])).
fof(f337,plain,(
  ! [X0,X1,X2] : ((p(s(bool,'const.unify.t_wfs_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X0)))) & p(s(bool,'const.infer.pure_add_constraints_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X0),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),X1),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X2))))) => p(s(bool,'const.unify.t_wfs_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X2)))))),
  inference(rectify,[],[f12])).
fof(f12,axiom,(
  ! [X8,X9,X10] : ((p(s(bool,'const.unify.t_wfs_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X8)))) & p(s(bool,'const.infer.pure_add_constraints_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X8),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),X9),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X10))))) => p(s(bool,'const.unify.t_wfs_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X10)))))),
  file('thm.inferProps.sub_completion_wfs','thm.inferProps.pure_add_constraints_wfs')).
fof(f1368,plain,(
  p(s(bool,'const.infer.pure_add_constraints_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK15),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),sK16),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK17))))),
  inference(resolution,[],[f546,f548])).
fof(f548,plain,(
  ( ! [X4,X2,X0,X3,X1] : (p(s(bool,'const.infer.pure_add_constraints_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X2),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),X3),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X4)))) | ~p(s(bool,'const.infer.sub_completion_5'(s('type.num.num',X0),s('type.num.num',X1),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X2),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),X3),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X4))))) )),
  inference(cnf_transformation,[],[f420])).
fof(f420,plain,(
  ! [X0,X1,X2,X3,X4] : ((~p(s(bool,'const.infer.sub_completion_5'(s('type.num.num',X0),s('type.num.num',X1),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X2),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),X3),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X4)))) | (p(s(bool,'const.infer.pure_add_constraints_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X2),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),X3),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X4)))) & p(s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.pred_set.count_1'(s('type.num.num',X1))),s(fun('type.num.num',bool),'const.finite_map.FDOM_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X4)))))) & ! [X6] : (~p(s(bool,'const.bool.IN_2'(s('type.num.num',X6),s(fun('type.num.num',bool),'const.finite_map.FDOM_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X4)))))) | p(s(bool,'const.infer.check_t_3'(s('type.num.num',X0),s(fun('type.num.num',bool),'const.pred_set.EMPTY_0'),s('type.infer_t.infer_t','const.unify.t_walkstar_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X4),s('type.infer_t.infer_t','const.infer_t.Infer_Tuvar_1'(s('type.num.num',X6))))))))))) & (~p(s(bool,'const.infer.pure_add_constraints_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X2),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),X3),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X4)))) | ~p(s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.pred_set.count_1'(s('type.num.num',X1))),s(fun('type.num.num',bool),'const.finite_map.FDOM_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X4)))))) | (p(s(bool,'const.bool.IN_2'(s('type.num.num',sK18(X4,X3,X2,X1,X0)),s(fun('type.num.num',bool),'const.finite_map.FDOM_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X4)))))) & ~p(s(bool,'const.infer.check_t_3'(s('type.num.num',X0),s(fun('type.num.num',bool),'const.pred_set.EMPTY_0'),s('type.infer_t.infer_t','const.unify.t_walkstar_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X4),s('type.infer_t.infer_t','const.infer_t.Infer_Tuvar_1'(s('type.num.num',sK18(X4,X3,X2,X1,X0)))))))))) | p(s(bool,'const.infer.sub_completion_5'(s('type.num.num',X0),s('type.num.num',X1),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X2),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),X3),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X4))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK18])],[f419])).
fof(f419,plain,(
  ! [X0,X1,X2,X3,X4] : ((~p(s(bool,'const.infer.sub_completion_5'(s('type.num.num',X0),s('type.num.num',X1),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X2),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),X3),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X4)))) | (p(s(bool,'const.infer.pure_add_constraints_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X2),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),X3),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X4)))) & p(s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.pred_set.count_1'(s('type.num.num',X1))),s(fun('type.num.num',bool),'const.finite_map.FDOM_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X4)))))) & ! [X6] : (~p(s(bool,'const.bool.IN_2'(s('type.num.num',X6),s(fun('type.num.num',bool),'const.finite_map.FDOM_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X4)))))) | p(s(bool,'const.infer.check_t_3'(s('type.num.num',X0),s(fun('type.num.num',bool),'const.pred_set.EMPTY_0'),s('type.infer_t.infer_t','const.unify.t_walkstar_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X4),s('type.infer_t.infer_t','const.infer_t.Infer_Tuvar_1'(s('type.num.num',X6))))))))))) & (~p(s(bool,'const.infer.pure_add_constraints_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X2),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),X3),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X4)))) | ~p(s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.pred_set.count_1'(s('type.num.num',X1))),s(fun('type.num.num',bool),'const.finite_map.FDOM_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X4)))))) | ? [X5] : (p(s(bool,'const.bool.IN_2'(s('type.num.num',X5),s(fun('type.num.num',bool),'const.finite_map.FDOM_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X4)))))) & ~p(s(bool,'const.infer.check_t_3'(s('type.num.num',X0),s(fun('type.num.num',bool),'const.pred_set.EMPTY_0'),s('type.infer_t.infer_t','const.unify.t_walkstar_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X4),s('type.infer_t.infer_t','const.infer_t.Infer_Tuvar_1'(s('type.num.num',X5))))))))) | p(s(bool,'const.infer.sub_completion_5'(s('type.num.num',X0),s('type.num.num',X1),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X2),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),X3),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X4))))))),
  inference(rectify,[],[f418])).
fof(f418,plain,(
  ! [X0,X1,X2,X3,X4] : ((~p(s(bool,'const.infer.sub_completion_5'(s('type.num.num',X0),s('type.num.num',X1),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X2),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),X3),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X4)))) | (p(s(bool,'const.infer.pure_add_constraints_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X2),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),X3),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X4)))) & p(s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.pred_set.count_1'(s('type.num.num',X1))),s(fun('type.num.num',bool),'const.finite_map.FDOM_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X4)))))) & ! [X5] : (~p(s(bool,'const.bool.IN_2'(s('type.num.num',X5),s(fun('type.num.num',bool),'const.finite_map.FDOM_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X4)))))) | p(s(bool,'const.infer.check_t_3'(s('type.num.num',X0),s(fun('type.num.num',bool),'const.pred_set.EMPTY_0'),s('type.infer_t.infer_t','const.unify.t_walkstar_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X4),s('type.infer_t.infer_t','const.infer_t.Infer_Tuvar_1'(s('type.num.num',X5))))))))))) & (~p(s(bool,'const.infer.pure_add_constraints_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X2),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),X3),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X4)))) | ~p(s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.pred_set.count_1'(s('type.num.num',X1))),s(fun('type.num.num',bool),'const.finite_map.FDOM_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X4)))))) | ? [X5] : (p(s(bool,'const.bool.IN_2'(s('type.num.num',X5),s(fun('type.num.num',bool),'const.finite_map.FDOM_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X4)))))) & ~p(s(bool,'const.infer.check_t_3'(s('type.num.num',X0),s(fun('type.num.num',bool),'const.pred_set.EMPTY_0'),s('type.infer_t.infer_t','const.unify.t_walkstar_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X4),s('type.infer_t.infer_t','const.infer_t.Infer_Tuvar_1'(s('type.num.num',X5))))))))) | p(s(bool,'const.infer.sub_completion_5'(s('type.num.num',X0),s('type.num.num',X1),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X2),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),X3),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X4))))))),
  inference(flattening,[],[f417])).
fof(f417,plain,(
  ! [X0,X1,X2,X3,X4] : ((~p(s(bool,'const.infer.sub_completion_5'(s('type.num.num',X0),s('type.num.num',X1),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X2),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),X3),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X4)))) | (p(s(bool,'const.infer.pure_add_constraints_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X2),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),X3),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X4)))) & p(s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.pred_set.count_1'(s('type.num.num',X1))),s(fun('type.num.num',bool),'const.finite_map.FDOM_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X4)))))) & ! [X5] : (~p(s(bool,'const.bool.IN_2'(s('type.num.num',X5),s(fun('type.num.num',bool),'const.finite_map.FDOM_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X4)))))) | p(s(bool,'const.infer.check_t_3'(s('type.num.num',X0),s(fun('type.num.num',bool),'const.pred_set.EMPTY_0'),s('type.infer_t.infer_t','const.unify.t_walkstar_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X4),s('type.infer_t.infer_t','const.infer_t.Infer_Tuvar_1'(s('type.num.num',X5))))))))))) & ((~p(s(bool,'const.infer.pure_add_constraints_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X2),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),X3),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X4)))) | ~p(s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.pred_set.count_1'(s('type.num.num',X1))),s(fun('type.num.num',bool),'const.finite_map.FDOM_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X4)))))) | ? [X5] : (p(s(bool,'const.bool.IN_2'(s('type.num.num',X5),s(fun('type.num.num',bool),'const.finite_map.FDOM_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X4)))))) & ~p(s(bool,'const.infer.check_t_3'(s('type.num.num',X0),s(fun('type.num.num',bool),'const.pred_set.EMPTY_0'),s('type.infer_t.infer_t','const.unify.t_walkstar_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X4),s('type.infer_t.infer_t','const.infer_t.Infer_Tuvar_1'(s('type.num.num',X5)))))))))) | p(s(bool,'const.infer.sub_completion_5'(s('type.num.num',X0),s('type.num.num',X1),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X2),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),X3),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X4))))))),
  inference(nnf_transformation,[],[f355])).
fof(f355,plain,(
  ! [X0,X1,X2,X3,X4] : (p(s(bool,'const.infer.sub_completion_5'(s('type.num.num',X0),s('type.num.num',X1),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X2),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),X3),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X4)))) <=> (p(s(bool,'const.infer.pure_add_constraints_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X2),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),X3),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X4)))) & p(s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.pred_set.count_1'(s('type.num.num',X1))),s(fun('type.num.num',bool),'const.finite_map.FDOM_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X4)))))) & ! [X5] : (~p(s(bool,'const.bool.IN_2'(s('type.num.num',X5),s(fun('type.num.num',bool),'const.finite_map.FDOM_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X4)))))) | p(s(bool,'const.infer.check_t_3'(s('type.num.num',X0),s(fun('type.num.num',bool),'const.pred_set.EMPTY_0'),s('type.infer_t.infer_t','const.unify.t_walkstar_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X4),s('type.infer_t.infer_t','const.infer_t.Infer_Tuvar_1'(s('type.num.num',X5)))))))))))),
  inference(ennf_transformation,[],[f263])).
fof(f263,plain,(
  ! [X0,X1,X2,X3,X4] : (p(s(bool,'const.infer.sub_completion_5'(s('type.num.num',X0),s('type.num.num',X1),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X2),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),X3),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X4)))) <=> (p(s(bool,'const.infer.pure_add_constraints_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X2),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),X3),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X4)))) & p(s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.pred_set.count_1'(s('type.num.num',X1))),s(fun('type.num.num',bool),'const.finite_map.FDOM_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X4)))))) & ! [X5] : (p(s(bool,'const.bool.IN_2'(s('type.num.num',X5),s(fun('type.num.num',bool),'const.finite_map.FDOM_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X4)))))) => p(s(bool,'const.infer.check_t_3'(s('type.num.num',X0),s(fun('type.num.num',bool),'const.pred_set.EMPTY_0'),s('type.infer_t.infer_t','const.unify.t_walkstar_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X4),s('type.infer_t.infer_t','const.infer_t.Infer_Tuvar_1'(s('type.num.num',X5)))))))))))),
  inference(rectify,[],[f8])).
fof(f8,axiom,(
  ! [X16,X17,X8,X20,X10] : (p(s(bool,'const.infer.sub_completion_5'(s('type.num.num',X16),s('type.num.num',X17),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X8),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),X20),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X10)))) <=> (p(s(bool,'const.infer.pure_add_constraints_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X8),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),X20),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X10)))) & p(s(bool,'const.pred_set.SUBSET_2'(s(fun('type.num.num',bool),'const.pred_set.count_1'(s('type.num.num',X17))),s(fun('type.num.num',bool),'const.finite_map.FDOM_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X10)))))) & ! [X21] : (p(s(bool,'const.bool.IN_2'(s('type.num.num',X21),s(fun('type.num.num',bool),'const.finite_map.FDOM_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X10)))))) => p(s(bool,'const.infer.check_t_3'(s('type.num.num',X16),s(fun('type.num.num',bool),'const.pred_set.EMPTY_0'),s('type.infer_t.infer_t','const.unify.t_walkstar_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X10),s('type.infer_t.infer_t','const.infer_t.Infer_Tuvar_1'(s('type.num.num',X21)))))))))))),
  file('thm.inferProps.sub_completion_wfs','thm.infer.sub_completion_def')).
fof(f546,plain,(
  p(s(bool,'const.infer.sub_completion_5'(s('type.num.num',sK13),s('type.num.num',sK14),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK15),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),sK16),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK17))))),
  inference(cnf_transformation,[],[f416])).
% SZS output end Proof for thm.inferProps
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 332
% Passive clauses: 2003
% Generated clauses: 4448
% Final active clauses: 326
% Final passive clauses: 1735
% Input formulas: 260
% Initial clauses: 228
% 
% Selected by SInE selection: 56
% SInE iterations: 1
% 
% Duplicate literals: 257
% Fw subsumption resolutions: 250
% Fw demodulations: 8
% 
% Simple tautologies: 469
% Equational tautologies: 29
% Forward subsumptions: 1185
% 
% Binary resolution: 2369
% Forward superposition: 1568
% Equality resolution: 6
% 
% Split clauses: 36
% Split components: 77
% SAT solver clauses: 48
% SAT solver unit clauses: 11
% SAT solver binary clauses: 31
% 
% Sat splits: 36
% Sat splitting refutations: 11
% 
% Memory used [KB]: 3326
% Time elapsed: 0.120 s
% ------------------------------
% ------------------------------
% Success in time 11.879 s
