Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 149 next slice time: 5
dis+11_7_3 on thm.stackSem
% (105396)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 196
% Passive clauses: 3997
% Generated clauses: 23850
% Final active clauses: 191
% Final passive clauses: 3644
% Input formulas: 133
% Initial clauses: 192
% 
% Duplicate literals: 678
% Trivial inequalities: 564
% Fw subsumption resolutions: 2274
% Fw demodulations: 3227
% Bw demodulations: 3
% 
% Simple tautologies: 420
% Equational tautologies: 37
% Forward subsumptions: 12050
% Bw demodulations to eq. taut.: 1
% 
% Binary resolution: 841
% Factoring: 3
% Forward superposition: 9415
% Backward superposition: 6337
% Self superposition: 120
% Equality factoring: 66
% Equality resolution: 30
% 
% Split clauses: 272
% Split components: 544
% SAT solver clauses: 654
% SAT solver unit clauses: 17
% SAT solver binary clauses: 135
% 
% Sat splits: 271
% Sat splitting refutations: 1
% 
% TWLsolver clauses: 654
% TWLsolver calls for satisfiability: 148
% 
% Memory used [KB]: 14711
% Time elapsed: 0.600 s
% ------------------------------
% ------------------------------
% remaining time: 143 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.stackSem
% (105420)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 108
% Passive clauses: 870
% Generated clauses: 12566
% Final active clauses: 107
% Final passive clauses: 725
% Input formulas: 133
% Initial clauses: 192
% 
% Duplicate literals: 389
% Trivial inequalities: 224
% Fw subsumption resolutions: 659
% Fw demodulations: 1305
% Bw demodulations: 37
% Condensations: 1138
% Global subsumptions: 4
% 
% Simple tautologies: 127
% Equational tautologies: 20
% Forward subsumptions: 6068
% 
% Binary resolution: 90
% Factoring: 1
% Forward superposition: 3935
% Backward superposition: 4381
% Self superposition: 166
% Equality factoring: 69
% Equality resolution: 26
% 
% Split clauses: 27
% Split components: 54
% SAT solver clauses: 1239
% SAT solver unit clauses: 299
% SAT solver binary clauses: 63
% SAT solver learnt clauses: 8
% 
% Sat splits: 27
% Sat splitting refutations: 1
% 
% TWLsolver clauses: 1223
% TWLsolver calls for satisfiability: 1633
% 
% Memory used [KB]: 18933
% Time elapsed: 0.700 s
% ------------------------------
% ------------------------------
% remaining time: 136 next slice time: 103
lrs+11_2_br=off:cond=on:fde=none:gs=on:gsaa=full_model:lwlo=on:nwc=2:sas=minisat:stl=30:ssfp=100000:ssfq=1.4:smm=sco:ssnc=none:sp=occurrence:urr=on_98 on thm.stackSem
% (105438)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 593
% Passive clauses: 11191
% Generated clauses: 123533
% Final active clauses: 284
% Final passive clauses: 1321
% Input formulas: 133
% Initial clauses: 192
% Discarded non-redundant clauses: 72174
% 
% Duplicate literals: 1063
% Trivial inequalities: 1076
% Fw subsumption resolutions: 4809
% Fw demodulations: 14738
% Bw demodulations: 4840
% Condensations: 4039
% Global subsumptions: 111
% 
% Simple tautologies: 542
% Equational tautologies: 186
% Forward subsumptions: 82873
% Bw demodulations to eq. taut.: 384
% 
% Unit resulting resolution: 2852
% Factoring: 2
% Forward superposition: 48279
% Backward superposition: 36177
% Self superposition: 263
% Equality factoring: 51
% Equality resolution: 63
% 
% Split clauses: 77
% Split components: 154
% SAT solver clauses: 11611
% SAT solver unit clauses: 887
% SAT solver binary clauses: 3212
% 
% Sat splits: 77
% Sat splitting refutations: 153
% 
% Memory used [KB]: 165157
% Time elapsed: 10.400 s
% ------------------------------
% ------------------------------
% remaining time: 32 next slice time: 32
dis+11_5_fde=none:nwc=1:sas=minisat:sd=1:ss=axioms:st=5.0:sos=all:sdd=large:sser=off:sfr=on:ssfp=100000:ssfq=2.0:ssnc=none_37 on thm.stackSem
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.stackSem
% SZS output start Proof for thm.stackSem
fof(f556,plain,(
  $false),
  inference(resolution,[],[f535,f250])).
fof(f250,plain,(
  ~p(s(bool,happ(s(fun('type.stackSem.state'(sK0,sK1),bool),sK2),s('type.stackSem.state'(sK0,sK1),sK3))))),
  inference(cnf_transformation,[],[f217])).
fof(f217,plain,(
  ! [X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X18,X19] : p(s(bool,happ(s(fun('type.stackSem.state'(sK0,sK1),bool),sK2),s('type.stackSem.state'(sK0,sK1),'const.stackSem.recordtype|46|state_16'(s('type.finite_map.fmap'('type.num.num','type.wordSem.word_loc'(sK0)),X4),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),X5),s('type.list.list'('type.wordSem.word_loc'(sK0)),X6),s('type.num.num',X7),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),X8),s(fun('type.fcp.cart'(bool,sK0),bool),X9),s('type.list.list'('type.fcp.cart'(bool,sK0)),X10),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),X11),s(bool,X12),s(bool,X13),s(bool,X14),s('type.num.num',X15),s('type.sptree.spt'('type.stackLang.prog'(sK0)),X16),s('type.ffi.ffi_state'(sK1),X17),s(fun('type.num.num',bool),X18),s(bool,X19)))))) & ~p(s(bool,happ(s(fun('type.stackSem.state'(sK0,sK1),bool),sK2),s('type.stackSem.state'(sK0,sK1),sK3))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1,sK2,sK3])],[f216])).
fof(f216,plain,(
  ? [X0,X1,X2] : (! [X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X18,X19] : p(s(bool,happ(s(fun('type.stackSem.state'(X0,X1),bool),X2),s('type.stackSem.state'(X0,X1),'const.stackSem.recordtype|46|state_16'(s('type.finite_map.fmap'('type.num.num','type.wordSem.word_loc'(X0)),X4),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)),X5),s('type.list.list'('type.wordSem.word_loc'(X0)),X6),s('type.num.num',X7),s(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),X8),s(fun('type.fcp.cart'(bool,X0),bool),X9),s('type.list.list'('type.fcp.cart'(bool,X0)),X10),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)))))),X11),s(bool,X12),s(bool,X13),s(bool,X14),s('type.num.num',X15),s('type.sptree.spt'('type.stackLang.prog'(X0)),X16),s('type.ffi.ffi_state'(X1),X17),s(fun('type.num.num',bool),X18),s(bool,X19)))))) & ? [X3] : ~p(s(bool,happ(s(fun('type.stackSem.state'(X0,X1),bool),X2),s('type.stackSem.state'(X0,X1),X3)))))),
  inference(rectify,[],[f213])).
fof(f213,plain,(
  ? [X0,X1,X2] : (! [X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X18] : p(s(bool,happ(s(fun('type.stackSem.state'(X0,X1),bool),X2),s('type.stackSem.state'(X0,X1),'const.stackSem.recordtype|46|state_16'(s('type.finite_map.fmap'('type.num.num','type.wordSem.word_loc'(X0)),X3),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)),X4),s('type.list.list'('type.wordSem.word_loc'(X0)),X5),s('type.num.num',X6),s(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),X7),s(fun('type.fcp.cart'(bool,X0),bool),X8),s('type.list.list'('type.fcp.cart'(bool,X0)),X9),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)))))),X10),s(bool,X11),s(bool,X12),s(bool,X13),s('type.num.num',X14),s('type.sptree.spt'('type.stackLang.prog'(X0)),X15),s('type.ffi.ffi_state'(X1),X16),s(fun('type.num.num',bool),X17),s(bool,X18)))))) & ? [X19] : ~p(s(bool,happ(s(fun('type.stackSem.state'(X0,X1),bool),X2),s('type.stackSem.state'(X0,X1),X19)))))),
  inference(ennf_transformation,[],[f136])).
fof(f136,plain,(
  ~! [X0,X1,X2] : (! [X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X18] : p(s(bool,happ(s(fun('type.stackSem.state'(X0,X1),bool),X2),s('type.stackSem.state'(X0,X1),'const.stackSem.recordtype|46|state_16'(s('type.finite_map.fmap'('type.num.num','type.wordSem.word_loc'(X0)),X3),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)),X4),s('type.list.list'('type.wordSem.word_loc'(X0)),X5),s('type.num.num',X6),s(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),X7),s(fun('type.fcp.cart'(bool,X0),bool),X8),s('type.list.list'('type.fcp.cart'(bool,X0)),X9),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)))))),X10),s(bool,X11),s(bool,X12),s(bool,X13),s('type.num.num',X14),s('type.sptree.spt'('type.stackLang.prog'(X0)),X15),s('type.ffi.ffi_state'(X1),X16),s(fun('type.num.num',bool),X17),s(bool,X18)))))) => ! [X19] : p(s(bool,happ(s(fun('type.stackSem.state'(X0,X1),bool),X2),s('type.stackSem.state'(X0,X1),X19)))))),
  inference(flattening,[],[f135])).
fof(f135,plain,(
  ~! [X0,X1] : ! [X2] : (! [X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X18] : p(s(bool,happ(s(fun('type.stackSem.state'(X0,X1),bool),X2),s('type.stackSem.state'(X0,X1),'const.stackSem.recordtype|46|state_16'(s('type.finite_map.fmap'('type.num.num','type.wordSem.word_loc'(X0)),X3),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)),X4),s('type.list.list'('type.wordSem.word_loc'(X0)),X5),s('type.num.num',X6),s(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),X7),s(fun('type.fcp.cart'(bool,X0),bool),X8),s('type.list.list'('type.fcp.cart'(bool,X0)),X9),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)))))),X10),s(bool,X11),s(bool,X12),s(bool,X13),s('type.num.num',X14),s('type.sptree.spt'('type.stackLang.prog'(X0)),X15),s('type.ffi.ffi_state'(X1),X16),s(fun('type.num.num',bool),X17),s(bool,X18)))))) => ! [X19] : p(s(bool,happ(s(fun('type.stackSem.state'(X0,X1),bool),X2),s('type.stackSem.state'(X0,X1),X19)))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6,X7] : ! [X8] : (! [X9,X10,X11,X12,X13,X14,X15,X16,X17,X18,X19,X20,X21,X22,X23,X24] : p(s(bool,happ(s(fun('type.stackSem.state'(X6,X7),bool),X8),s('type.stackSem.state'(X6,X7),'const.stackSem.recordtype|46|state_16'(s('type.finite_map.fmap'('type.num.num','type.wordSem.word_loc'(X6)),X9),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X6)),X10),s('type.list.list'('type.wordSem.word_loc'(X6)),X11),s('type.num.num',X12),s(fun('type.fcp.cart'(bool,X6),'type.wordSem.word_loc'(X6)),X13),s(fun('type.fcp.cart'(bool,X6),bool),X14),s('type.list.list'('type.fcp.cart'(bool,X6)),X15),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X6)),'type.pair.prod'(fun('type.fcp.cart'(bool,X6),'type.wordSem.word_loc'(X6)),'type.pair.prod'(fun('type.fcp.cart'(bool,X6),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X6))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X6)),'type.pair.prod'(fun('type.fcp.cart'(bool,X6),'type.wordSem.word_loc'(X6)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X6)))))),X16),s(bool,X17),s(bool,X18),s(bool,X19),s('type.num.num',X20),s('type.sptree.spt'('type.stackLang.prog'(X6)),X21),s('type.ffi.ffi_state'(X7),X22),s(fun('type.num.num',bool),X23),s(bool,X24)))))) => ! [X21] : p(s(bool,happ(s(fun('type.stackSem.state'(X6,X7),bool),X8),s('type.stackSem.state'(X6,X7),X21)))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6,X7] : ! [X8] : (! [X9,X10,X11,X12,X13,X14,X15,X16,X17,X18,X19,X20,X21,X22,X23,X24] : p(s(bool,happ(s(fun('type.stackSem.state'(X6,X7),bool),X8),s('type.stackSem.state'(X6,X7),'const.stackSem.recordtype|46|state_16'(s('type.finite_map.fmap'('type.num.num','type.wordSem.word_loc'(X6)),X9),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X6)),X10),s('type.list.list'('type.wordSem.word_loc'(X6)),X11),s('type.num.num',X12),s(fun('type.fcp.cart'(bool,X6),'type.wordSem.word_loc'(X6)),X13),s(fun('type.fcp.cart'(bool,X6),bool),X14),s('type.list.list'('type.fcp.cart'(bool,X6)),X15),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X6)),'type.pair.prod'(fun('type.fcp.cart'(bool,X6),'type.wordSem.word_loc'(X6)),'type.pair.prod'(fun('type.fcp.cart'(bool,X6),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X6))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X6)),'type.pair.prod'(fun('type.fcp.cart'(bool,X6),'type.wordSem.word_loc'(X6)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X6)))))),X16),s(bool,X17),s(bool,X18),s(bool,X19),s('type.num.num',X20),s('type.sptree.spt'('type.stackLang.prog'(X6)),X21),s('type.ffi.ffi_state'(X7),X22),s(fun('type.num.num',bool),X23),s(bool,X24)))))) => ! [X21] : p(s(bool,happ(s(fun('type.stackSem.state'(X6,X7),bool),X8),s('type.stackSem.state'(X6,X7),X21)))))),
  file('thm.stackSem.state_induction','thm.stackSem.state_induction')).
fof(f535,plain,(
  ( ! [X253] : (p(s(bool,happ(s(fun('type.stackSem.state'(sK0,sK1),bool),sK2),s('type.stackSem.state'(sK0,sK1),X253))))) )),
  inference(superposition,[],[f249,f333])).
fof(f333,plain,(
  ( ! [X2,X0,X1] : (s('type.stackSem.state'(X0,X1),X2) = s('type.stackSem.state'(X0,X1),'const.stackSem.recordtype|46|state_16'(s('type.finite_map.fmap'('type.num.num','type.wordSem.word_loc'(X0)),sK40(X2,X1,X0)),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)),sK41(X2,X1,X0)),s('type.list.list'('type.wordSem.word_loc'(X0)),sK42(X2,X1,X0)),s('type.num.num',sK43(X2,X1,X0)),s(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),sK44(X2,X1,X0)),s(fun('type.fcp.cart'(bool,X0),bool),sK45(X2,X1,X0)),s('type.list.list'('type.fcp.cart'(bool,X0)),sK46(X2,X1,X0)),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)))))),sK47(X2,X1,X0)),s(bool,sK48(X2,X1,X0)),s(bool,sK49(X2,X1,X0)),s(bool,sK50(X2,X1,X0)),s('type.num.num',sK51(X2,X1,X0)),s('type.sptree.spt'('type.stackLang.prog'(X0)),sK52(X2,X1,X0)),s('type.ffi.ffi_state'(X1),sK53(X2,X1,X0)),s(fun('type.num.num',bool),sK54(X2,X1,X0)),s(bool,sK55(X2,X1,X0))))) )),
  inference(cnf_transformation,[],[f247])).
fof(f247,plain,(
  ! [X0,X1,X2] : s('type.stackSem.state'(X0,X1),X2) = s('type.stackSem.state'(X0,X1),'const.stackSem.recordtype|46|state_16'(s('type.finite_map.fmap'('type.num.num','type.wordSem.word_loc'(X0)),sK40(X2,X1,X0)),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)),sK41(X2,X1,X0)),s('type.list.list'('type.wordSem.word_loc'(X0)),sK42(X2,X1,X0)),s('type.num.num',sK43(X2,X1,X0)),s(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),sK44(X2,X1,X0)),s(fun('type.fcp.cart'(bool,X0),bool),sK45(X2,X1,X0)),s('type.list.list'('type.fcp.cart'(bool,X0)),sK46(X2,X1,X0)),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)))))),sK47(X2,X1,X0)),s(bool,sK48(X2,X1,X0)),s(bool,sK49(X2,X1,X0)),s(bool,sK50(X2,X1,X0)),s('type.num.num',sK51(X2,X1,X0)),s('type.sptree.spt'('type.stackLang.prog'(X0)),sK52(X2,X1,X0)),s('type.ffi.ffi_state'(X1),sK53(X2,X1,X0)),s(fun('type.num.num',bool),sK54(X2,X1,X0)),s(bool,sK55(X2,X1,X0))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK40,sK41,sK42,sK43,sK44,sK45,sK46,sK47,sK48,sK49,sK50,sK51,sK52,sK53,sK54,sK55])],[f210])).
fof(f210,plain,(
  ! [X0,X1,X2] : ? [X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X18] : s('type.stackSem.state'(X0,X1),X2) = s('type.stackSem.state'(X0,X1),'const.stackSem.recordtype|46|state_16'(s('type.finite_map.fmap'('type.num.num','type.wordSem.word_loc'(X0)),X3),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)),X4),s('type.list.list'('type.wordSem.word_loc'(X0)),X5),s('type.num.num',X6),s(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),X7),s(fun('type.fcp.cart'(bool,X0),bool),X8),s('type.list.list'('type.fcp.cart'(bool,X0)),X9),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)))))),X10),s(bool,X11),s(bool,X12),s(bool,X13),s('type.num.num',X14),s('type.sptree.spt'('type.stackLang.prog'(X0)),X15),s('type.ffi.ffi_state'(X1),X16),s(fun('type.num.num',bool),X17),s(bool,X18)))),
  inference(flattening,[],[f209])).
fof(f209,plain,(
  ! [X0,X1] : ! [X2] : ? [X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X18] : s('type.stackSem.state'(X0,X1),X2) = s('type.stackSem.state'(X0,X1),'const.stackSem.recordtype|46|state_16'(s('type.finite_map.fmap'('type.num.num','type.wordSem.word_loc'(X0)),X3),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)),X4),s('type.list.list'('type.wordSem.word_loc'(X0)),X5),s('type.num.num',X6),s(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),X7),s(fun('type.fcp.cart'(bool,X0),bool),X8),s('type.list.list'('type.fcp.cart'(bool,X0)),X9),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X0)),'type.pair.prod'(fun('type.fcp.cart'(bool,X0),'type.wordSem.word_loc'(X0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)))))),X10),s(bool,X11),s(bool,X12),s(bool,X13),s('type.num.num',X14),s('type.sptree.spt'('type.stackLang.prog'(X0)),X15),s('type.ffi.ffi_state'(X1),X16),s(fun('type.num.num',bool),X17),s(bool,X18)))),
  inference(rectify,[],[f72])).
fof(f72,axiom,(
  ! [X6,X7] : ! [X68] : ? [X9,X10,X11,X12,X13,X14,X15,X16,X17,X18,X19,X20,X21,X22,X23,X24] : s('type.stackSem.state'(X6,X7),X68) = s('type.stackSem.state'(X6,X7),'const.stackSem.recordtype|46|state_16'(s('type.finite_map.fmap'('type.num.num','type.wordSem.word_loc'(X6)),X9),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X6)),X10),s('type.list.list'('type.wordSem.word_loc'(X6)),X11),s('type.num.num',X12),s(fun('type.fcp.cart'(bool,X6),'type.wordSem.word_loc'(X6)),X13),s(fun('type.fcp.cart'(bool,X6),bool),X14),s('type.list.list'('type.fcp.cart'(bool,X6)),X15),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X6)),'type.pair.prod'(fun('type.fcp.cart'(bool,X6),'type.wordSem.word_loc'(X6)),'type.pair.prod'(fun('type.fcp.cart'(bool,X6),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X6))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X6)),'type.pair.prod'(fun('type.fcp.cart'(bool,X6),'type.wordSem.word_loc'(X6)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X6)))))),X16),s(bool,X17),s(bool,X18),s(bool,X19),s('type.num.num',X20),s('type.sptree.spt'('type.stackLang.prog'(X6)),X21),s('type.ffi.ffi_state'(X7),X22),s(fun('type.num.num',bool),X23),s(bool,X24)))),
  file('thm.stackSem.state_induction','thm.stackSem.state_nchotomy')).
fof(f249,plain,(
  ( ! [X6,X4,X14,X12,X10,X8,X19,X17,X7,X5,X15,X13,X11,X9,X18,X16] : (p(s(bool,happ(s(fun('type.stackSem.state'(sK0,sK1),bool),sK2),s('type.stackSem.state'(sK0,sK1),'const.stackSem.recordtype|46|state_16'(s('type.finite_map.fmap'('type.num.num','type.wordSem.word_loc'(sK0)),X4),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)),X5),s('type.list.list'('type.wordSem.word_loc'(sK0)),X6),s('type.num.num',X7),s(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),X8),s(fun('type.fcp.cart'(bool,sK0),bool),X9),s('type.list.list'('type.fcp.cart'(bool,sK0)),X10),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK0)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK0),'type.wordSem.word_loc'(sK0)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK0)))))),X11),s(bool,X12),s(bool,X13),s(bool,X14),s('type.num.num',X15),s('type.sptree.spt'('type.stackLang.prog'(sK0)),X16),s('type.ffi.ffi_state'(sK1),X17),s(fun('type.num.num',bool),X18),s(bool,X19))))))) )),
  inference(cnf_transformation,[],[f217])).
% SZS output end Proof for thm.stackSem
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 70
% Passive clauses: 46
% Generated clauses: 276
% Final active clauses: 70
% Final passive clauses: 43
% Input formulas: 133
% Initial clauses: 87
% 
% Selected by SInE selection: 46
% SInE iterations: 1
% 
% Duplicate literals: 7
% Trivial inequalities: 1
% Fw subsumption resolutions: 2
% 
% Simple tautologies: 23
% Equational tautologies: 1
% Forward subsumptions: 164
% 
% Binary resolution: 38
% Forward superposition: 228
% 
% SAT solver clauses: 1
% 
% Memory used [KB]: 3837
% Time elapsed: 0.131 s
% ------------------------------
% ------------------------------
% Success in time 11.92 s
