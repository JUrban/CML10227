Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 149 next slice time: 5
dis+11_7_3 on thm.bvpProps
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.bvpProps
% SZS output start Proof for thm.bvpProps
fof(f2116,plain,(
  $false),
  inference(subsumption_resolution,[],[f2108,f127])).
fof(f127,plain,(
  s('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),'const.option.NONE_0') != s('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),sK3)),
  inference(cnf_transformation,[],[f91])).
fof(f91,plain,(
  s('type.pair.prod'('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),'type.bvpSem.state'(sK0)),'const.pair.,_2'(s('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),sK3),s('type.bvpSem.state'(sK0),sK4))) = s('type.pair.prod'('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),'type.bvpSem.state'(sK0)),'const.bvpSem.evaluate_1'(s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(sK0)),'const.pair.,_2'(s('type.bvp.prog',sK1),s('type.bvpSem.state'(sK0),sK2))))) & s('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),'const.option.NONE_0') != s('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),sK3) & s('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),sK3) != s('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),'const.option.SOME_1'(s('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v'),'const.semanticPrimitives.Rerr_1'(s('type.semanticPrimitives.error_result'('type.bvlSem.v'),'const.semanticPrimitives.Rabort_1'(s('type.semanticPrimitives.abort','const.semanticPrimitives.Rtype_error_0'))))))) & s('type.sptree.spt'('type.bvlSem.v'),'const.sptree.LN_0') != s('type.sptree.spt'('type.bvlSem.v'),'const.bvpSem.state_locals_1'(s('type.bvpSem.state'(sK0),sK4))) & ! [X5] : s('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),sK3) != s('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),'const.option.SOME_1'(s('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v'),'const.semanticPrimitives.Rerr_1'(s('type.semanticPrimitives.error_result'('type.bvlSem.v'),'const.semanticPrimitives.Rraise_1'(s('type.bvlSem.v',X5)))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1,sK2,sK3,sK4])],[f75])).
fof(f75,plain,(
  ? [X0,X1,X2,X3,X4] : (s('type.pair.prod'('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),'type.bvpSem.state'(X0)),'const.pair.,_2'(s('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),X3),s('type.bvpSem.state'(X0),X4))) = s('type.pair.prod'('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),'type.bvpSem.state'(X0)),'const.bvpSem.evaluate_1'(s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X0)),'const.pair.,_2'(s('type.bvp.prog',X1),s('type.bvpSem.state'(X0),X2))))) & s('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),'const.option.NONE_0') != s('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),X3) & s('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),X3) != s('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),'const.option.SOME_1'(s('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v'),'const.semanticPrimitives.Rerr_1'(s('type.semanticPrimitives.error_result'('type.bvlSem.v'),'const.semanticPrimitives.Rabort_1'(s('type.semanticPrimitives.abort','const.semanticPrimitives.Rtype_error_0'))))))) & s('type.sptree.spt'('type.bvlSem.v'),'const.sptree.LN_0') != s('type.sptree.spt'('type.bvlSem.v'),'const.bvpSem.state_locals_1'(s('type.bvpSem.state'(X0),X4))) & ! [X5] : s('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),X3) != s('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),'const.option.SOME_1'(s('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v'),'const.semanticPrimitives.Rerr_1'(s('type.semanticPrimitives.error_result'('type.bvlSem.v'),'const.semanticPrimitives.Rraise_1'(s('type.bvlSem.v',X5))))))))),
  inference(flattening,[],[f74])).
fof(f74,plain,(
  ? [X0,X1,X2,X3,X4] : ((s('type.pair.prod'('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),'type.bvpSem.state'(X0)),'const.pair.,_2'(s('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),X3),s('type.bvpSem.state'(X0),X4))) = s('type.pair.prod'('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),'type.bvpSem.state'(X0)),'const.bvpSem.evaluate_1'(s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X0)),'const.pair.,_2'(s('type.bvp.prog',X1),s('type.bvpSem.state'(X0),X2))))) & s('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),'const.option.NONE_0') != s('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),X3) & s('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),X3) != s('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),'const.option.SOME_1'(s('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v'),'const.semanticPrimitives.Rerr_1'(s('type.semanticPrimitives.error_result'('type.bvlSem.v'),'const.semanticPrimitives.Rabort_1'(s('type.semanticPrimitives.abort','const.semanticPrimitives.Rtype_error_0')))))))) & (s('type.sptree.spt'('type.bvlSem.v'),'const.sptree.LN_0') != s('type.sptree.spt'('type.bvlSem.v'),'const.bvpSem.state_locals_1'(s('type.bvpSem.state'(X0),X4))) & ! [X5] : s('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),X3) != s('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),'const.option.SOME_1'(s('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v'),'const.semanticPrimitives.Rerr_1'(s('type.semanticPrimitives.error_result'('type.bvlSem.v'),'const.semanticPrimitives.Rraise_1'(s('type.bvlSem.v',X5)))))))))),
  inference(ennf_transformation,[],[f35])).
fof(f35,plain,(
  ~! [X0,X1,X2,X3,X4] : ((s('type.pair.prod'('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),'type.bvpSem.state'(X0)),'const.pair.,_2'(s('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),X3),s('type.bvpSem.state'(X0),X4))) = s('type.pair.prod'('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),'type.bvpSem.state'(X0)),'const.bvpSem.evaluate_1'(s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X0)),'const.pair.,_2'(s('type.bvp.prog',X1),s('type.bvpSem.state'(X0),X2))))) & s('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),'const.option.NONE_0') != s('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),X3) & s('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),X3) != s('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),'const.option.SOME_1'(s('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v'),'const.semanticPrimitives.Rerr_1'(s('type.semanticPrimitives.error_result'('type.bvlSem.v'),'const.semanticPrimitives.Rabort_1'(s('type.semanticPrimitives.abort','const.semanticPrimitives.Rtype_error_0')))))))) => (s('type.sptree.spt'('type.bvlSem.v'),'const.sptree.LN_0') = s('type.sptree.spt'('type.bvlSem.v'),'const.bvpSem.state_locals_1'(s('type.bvpSem.state'(X0),X4))) | ? [X5] : s('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),X3) = s('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),'const.option.SOME_1'(s('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v'),'const.semanticPrimitives.Rerr_1'(s('type.semanticPrimitives.error_result'('type.bvlSem.v'),'const.semanticPrimitives.Rraise_1'(s('type.bvlSem.v',X5)))))))))),
  inference(flattening,[],[f34])).
fof(f34,plain,(
  ~! [X0] : ! [X1,X2,X3,X4] : ((s('type.pair.prod'('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),'type.bvpSem.state'(X0)),'const.pair.,_2'(s('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),X3),s('type.bvpSem.state'(X0),X4))) = s('type.pair.prod'('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),'type.bvpSem.state'(X0)),'const.bvpSem.evaluate_1'(s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X0)),'const.pair.,_2'(s('type.bvp.prog',X1),s('type.bvpSem.state'(X0),X2))))) & ~s('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),'const.option.NONE_0') = s('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),X3) & ~s('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),X3) = s('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),'const.option.SOME_1'(s('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v'),'const.semanticPrimitives.Rerr_1'(s('type.semanticPrimitives.error_result'('type.bvlSem.v'),'const.semanticPrimitives.Rabort_1'(s('type.semanticPrimitives.abort','const.semanticPrimitives.Rtype_error_0')))))))) => (s('type.sptree.spt'('type.bvlSem.v'),'const.sptree.LN_0') = s('type.sptree.spt'('type.bvlSem.v'),'const.bvpSem.state_locals_1'(s('type.bvpSem.state'(X0),X4))) | ? [X5] : s('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),X3) = s('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),'const.option.SOME_1'(s('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v'),'const.semanticPrimitives.Rerr_1'(s('type.semanticPrimitives.error_result'('type.bvlSem.v'),'const.semanticPrimitives.Rraise_1'(s('type.bvlSem.v',X5)))))))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : ! [X7,X8,X9,X10] : ((s('type.pair.prod'('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),'type.bvpSem.state'(X6)),'const.pair.,_2'(s('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),X9),s('type.bvpSem.state'(X6),X10))) = s('type.pair.prod'('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),'type.bvpSem.state'(X6)),'const.bvpSem.evaluate_1'(s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X6)),'const.pair.,_2'(s('type.bvp.prog',X7),s('type.bvpSem.state'(X6),X8))))) & ~s('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),'const.option.NONE_0') = s('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),X9) & ~s('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),X9) = s('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),'const.option.SOME_1'(s('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v'),'const.semanticPrimitives.Rerr_1'(s('type.semanticPrimitives.error_result'('type.bvlSem.v'),'const.semanticPrimitives.Rabort_1'(s('type.semanticPrimitives.abort','const.semanticPrimitives.Rtype_error_0')))))))) => (s('type.sptree.spt'('type.bvlSem.v'),'const.sptree.LN_0') = s('type.sptree.spt'('type.bvlSem.v'),'const.bvpSem.state_locals_1'(s('type.bvpSem.state'(X6),X10))) | ? [X11] : s('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),X9) = s('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),'const.option.SOME_1'(s('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v'),'const.semanticPrimitives.Rerr_1'(s('type.semanticPrimitives.error_result'('type.bvlSem.v'),'const.semanticPrimitives.Rraise_1'(s('type.bvlSem.v',X11)))))))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : ! [X7,X8,X9,X10] : ((s('type.pair.prod'('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),'type.bvpSem.state'(X6)),'const.pair.,_2'(s('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),X9),s('type.bvpSem.state'(X6),X10))) = s('type.pair.prod'('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),'type.bvpSem.state'(X6)),'const.bvpSem.evaluate_1'(s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X6)),'const.pair.,_2'(s('type.bvp.prog',X7),s('type.bvpSem.state'(X6),X8))))) & ~s('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),'const.option.NONE_0') = s('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),X9) & ~s('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),X9) = s('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),'const.option.SOME_1'(s('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v'),'const.semanticPrimitives.Rerr_1'(s('type.semanticPrimitives.error_result'('type.bvlSem.v'),'const.semanticPrimitives.Rabort_1'(s('type.semanticPrimitives.abort','const.semanticPrimitives.Rtype_error_0')))))))) => (s('type.sptree.spt'('type.bvlSem.v'),'const.sptree.LN_0') = s('type.sptree.spt'('type.bvlSem.v'),'const.bvpSem.state_locals_1'(s('type.bvpSem.state'(X6),X10))) | ? [X11] : s('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),X9) = s('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),'const.option.SOME_1'(s('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v'),'const.semanticPrimitives.Rerr_1'(s('type.semanticPrimitives.error_result'('type.bvlSem.v'),'const.semanticPrimitives.Rraise_1'(s('type.bvlSem.v',X11)))))))))),
  file('thm.bvpProps.evaluate_locals_LN','thm.bvpProps.evaluate_locals_LN')).
fof(f2108,plain,(
  s('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),'const.option.NONE_0') = s('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),sK3)),
  inference(superposition,[],[f1732,f189])).
fof(f189,plain,(
  ( ! [X2,X0,X3,X1] : (s(X1,X2) = s(X1,'const.pair.FST_1'(s('type.pair.prod'(X1,X0),'const.pair.,_2'(s(X1,X2),s(X0,X3)))))) )),
  inference(cnf_transformation,[],[f69])).
fof(f69,plain,(
  ! [X0,X1,X2,X3] : s(X1,X2) = s(X1,'const.pair.FST_1'(s('type.pair.prod'(X1,X0),'const.pair.,_2'(s(X1,X2),s(X0,X3)))))),
  inference(flattening,[],[f68])).
fof(f68,plain,(
  ! [X0,X1] : ! [X2,X3] : s(X1,X2) = s(X1,'const.pair.FST_1'(s('type.pair.prod'(X1,X0),'const.pair.,_2'(s(X1,X2),s(X0,X3)))))),
  inference(rectify,[],[f31])).
fof(f31,axiom,(
  ! [X19,X6] : ! [X14,X15] : s(X6,X14) = s(X6,'const.pair.FST_1'(s('type.pair.prod'(X6,X19),'const.pair.,_2'(s(X6,X14),s(X19,X15)))))),
  file('thm.bvpProps.evaluate_locals_LN','thm.pair.FST')).
fof(f1732,plain,(
  s('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),'const.option.NONE_0') = s('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),'const.pair.FST_1'(s('type.pair.prod'('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),'type.bvpSem.state'(sK0)),'const.pair.,_2'(s('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),sK3),s('type.bvpSem.state'(sK0),sK4)))))),
  inference(forward_demodulation,[],[f1731,f126])).
fof(f126,plain,(
  s('type.pair.prod'('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),'type.bvpSem.state'(sK0)),'const.pair.,_2'(s('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),sK3),s('type.bvpSem.state'(sK0),sK4))) = s('type.pair.prod'('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),'type.bvpSem.state'(sK0)),'const.bvpSem.evaluate_1'(s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(sK0)),'const.pair.,_2'(s('type.bvp.prog',sK1),s('type.bvpSem.state'(sK0),sK2)))))),
  inference(cnf_transformation,[],[f91])).
fof(f1731,plain,(
  s('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),'const.option.NONE_0') = s('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),'const.pair.FST_1'(s('type.pair.prod'('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),'type.bvpSem.state'(sK0)),'const.bvpSem.evaluate_1'(s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(sK0)),'const.pair.,_2'(s('type.bvp.prog',sK1),s('type.bvpSem.state'(sK0),sK2)))))))),
  inference(subsumption_resolution,[],[f1730,f128])).
fof(f128,plain,(
  s('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),sK3) != s('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),'const.option.SOME_1'(s('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v'),'const.semanticPrimitives.Rerr_1'(s('type.semanticPrimitives.error_result'('type.bvlSem.v'),'const.semanticPrimitives.Rabort_1'(s('type.semanticPrimitives.abort','const.semanticPrimitives.Rtype_error_0')))))))),
  inference(cnf_transformation,[],[f91])).
fof(f1730,plain,(
  s('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),sK3) = s('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),'const.option.SOME_1'(s('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v'),'const.semanticPrimitives.Rerr_1'(s('type.semanticPrimitives.error_result'('type.bvlSem.v'),'const.semanticPrimitives.Rabort_1'(s('type.semanticPrimitives.abort','const.semanticPrimitives.Rtype_error_0'))))))) | s('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),'const.option.NONE_0') = s('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),'const.pair.FST_1'(s('type.pair.prod'('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),'type.bvpSem.state'(sK0)),'const.bvpSem.evaluate_1'(s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(sK0)),'const.pair.,_2'(s('type.bvp.prog',sK1),s('type.bvpSem.state'(sK0),sK2)))))))),
  inference(forward_demodulation,[],[f1729,f189])).
fof(f1729,plain,(
  s('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),'const.option.SOME_1'(s('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v'),'const.semanticPrimitives.Rerr_1'(s('type.semanticPrimitives.error_result'('type.bvlSem.v'),'const.semanticPrimitives.Rabort_1'(s('type.semanticPrimitives.abort','const.semanticPrimitives.Rtype_error_0'))))))) = s('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),'const.pair.FST_1'(s('type.pair.prod'('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),'type.bvpSem.state'(sK0)),'const.pair.,_2'(s('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),sK3),s('type.bvpSem.state'(sK0),sK4))))) | s('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),'const.option.NONE_0') = s('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),'const.pair.FST_1'(s('type.pair.prod'('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),'type.bvpSem.state'(sK0)),'const.bvpSem.evaluate_1'(s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(sK0)),'const.pair.,_2'(s('type.bvp.prog',sK1),s('type.bvpSem.state'(sK0),sK2)))))))),
  inference(forward_demodulation,[],[f1728,f126])).
fof(f1728,plain,(
  s('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),'const.option.SOME_1'(s('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v'),'const.semanticPrimitives.Rerr_1'(s('type.semanticPrimitives.error_result'('type.bvlSem.v'),'const.semanticPrimitives.Rabort_1'(s('type.semanticPrimitives.abort','const.semanticPrimitives.Rtype_error_0'))))))) = s('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),'const.pair.FST_1'(s('type.pair.prod'('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),'type.bvpSem.state'(sK0)),'const.bvpSem.evaluate_1'(s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(sK0)),'const.pair.,_2'(s('type.bvp.prog',sK1),s('type.bvpSem.state'(sK0),sK2))))))) | s('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),'const.option.NONE_0') = s('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),'const.pair.FST_1'(s('type.pair.prod'('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),'type.bvpSem.state'(sK0)),'const.bvpSem.evaluate_1'(s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(sK0)),'const.pair.,_2'(s('type.bvp.prog',sK1),s('type.bvpSem.state'(sK0),sK2)))))))),
  inference(subsumption_resolution,[],[f1727,f130])).
fof(f130,plain,(
  ( ! [X5] : (s('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),sK3) != s('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),'const.option.SOME_1'(s('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v'),'const.semanticPrimitives.Rerr_1'(s('type.semanticPrimitives.error_result'('type.bvlSem.v'),'const.semanticPrimitives.Rraise_1'(s('type.bvlSem.v',X5)))))))) )),
  inference(cnf_transformation,[],[f91])).
fof(f1727,plain,(
  s('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),sK3) = s('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),'const.option.SOME_1'(s('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v'),'const.semanticPrimitives.Rerr_1'(s('type.semanticPrimitives.error_result'('type.bvlSem.v'),'const.semanticPrimitives.Rraise_1'(s('type.bvlSem.v',sK5(sK2,sK1,sK0)))))))) | s('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),'const.option.SOME_1'(s('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v'),'const.semanticPrimitives.Rerr_1'(s('type.semanticPrimitives.error_result'('type.bvlSem.v'),'const.semanticPrimitives.Rabort_1'(s('type.semanticPrimitives.abort','const.semanticPrimitives.Rtype_error_0'))))))) = s('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),'const.pair.FST_1'(s('type.pair.prod'('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),'type.bvpSem.state'(sK0)),'const.bvpSem.evaluate_1'(s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(sK0)),'const.pair.,_2'(s('type.bvp.prog',sK1),s('type.bvpSem.state'(sK0),sK2))))))) | s('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),'const.option.NONE_0') = s('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),'const.pair.FST_1'(s('type.pair.prod'('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),'type.bvpSem.state'(sK0)),'const.bvpSem.evaluate_1'(s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(sK0)),'const.pair.,_2'(s('type.bvp.prog',sK1),s('type.bvpSem.state'(sK0),sK2)))))))),
  inference(forward_demodulation,[],[f1726,f189])).
fof(f1726,plain,(
  s('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),'const.option.SOME_1'(s('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v'),'const.semanticPrimitives.Rerr_1'(s('type.semanticPrimitives.error_result'('type.bvlSem.v'),'const.semanticPrimitives.Rraise_1'(s('type.bvlSem.v',sK5(sK2,sK1,sK0)))))))) = s('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),'const.pair.FST_1'(s('type.pair.prod'('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),'type.bvpSem.state'(sK0)),'const.pair.,_2'(s('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),sK3),s('type.bvpSem.state'(sK0),sK4))))) | s('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),'const.option.SOME_1'(s('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v'),'const.semanticPrimitives.Rerr_1'(s('type.semanticPrimitives.error_result'('type.bvlSem.v'),'const.semanticPrimitives.Rabort_1'(s('type.semanticPrimitives.abort','const.semanticPrimitives.Rtype_error_0'))))))) = s('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),'const.pair.FST_1'(s('type.pair.prod'('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),'type.bvpSem.state'(sK0)),'const.bvpSem.evaluate_1'(s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(sK0)),'const.pair.,_2'(s('type.bvp.prog',sK1),s('type.bvpSem.state'(sK0),sK2))))))) | s('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),'const.option.NONE_0') = s('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),'const.pair.FST_1'(s('type.pair.prod'('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),'type.bvpSem.state'(sK0)),'const.bvpSem.evaluate_1'(s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(sK0)),'const.pair.,_2'(s('type.bvp.prog',sK1),s('type.bvpSem.state'(sK0),sK2)))))))),
  inference(forward_demodulation,[],[f1725,f126])).
fof(f1725,plain,(
  s('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),'const.option.SOME_1'(s('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v'),'const.semanticPrimitives.Rerr_1'(s('type.semanticPrimitives.error_result'('type.bvlSem.v'),'const.semanticPrimitives.Rraise_1'(s('type.bvlSem.v',sK5(sK2,sK1,sK0)))))))) = s('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),'const.pair.FST_1'(s('type.pair.prod'('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),'type.bvpSem.state'(sK0)),'const.bvpSem.evaluate_1'(s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(sK0)),'const.pair.,_2'(s('type.bvp.prog',sK1),s('type.bvpSem.state'(sK0),sK2))))))) | s('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),'const.option.SOME_1'(s('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v'),'const.semanticPrimitives.Rerr_1'(s('type.semanticPrimitives.error_result'('type.bvlSem.v'),'const.semanticPrimitives.Rabort_1'(s('type.semanticPrimitives.abort','const.semanticPrimitives.Rtype_error_0'))))))) = s('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),'const.pair.FST_1'(s('type.pair.prod'('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),'type.bvpSem.state'(sK0)),'const.bvpSem.evaluate_1'(s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(sK0)),'const.pair.,_2'(s('type.bvp.prog',sK1),s('type.bvpSem.state'(sK0),sK2))))))) | s('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),'const.option.NONE_0') = s('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),'const.pair.FST_1'(s('type.pair.prod'('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),'type.bvpSem.state'(sK0)),'const.bvpSem.evaluate_1'(s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(sK0)),'const.pair.,_2'(s('type.bvp.prog',sK1),s('type.bvpSem.state'(sK0),sK2)))))))),
  inference(subsumption_resolution,[],[f1724,f129])).
fof(f129,plain,(
  s('type.sptree.spt'('type.bvlSem.v'),'const.sptree.LN_0') != s('type.sptree.spt'('type.bvlSem.v'),'const.bvpSem.state_locals_1'(s('type.bvpSem.state'(sK0),sK4)))),
  inference(cnf_transformation,[],[f91])).
fof(f1724,plain,(
  s('type.sptree.spt'('type.bvlSem.v'),'const.sptree.LN_0') = s('type.sptree.spt'('type.bvlSem.v'),'const.bvpSem.state_locals_1'(s('type.bvpSem.state'(sK0),sK4))) | s('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),'const.option.SOME_1'(s('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v'),'const.semanticPrimitives.Rerr_1'(s('type.semanticPrimitives.error_result'('type.bvlSem.v'),'const.semanticPrimitives.Rraise_1'(s('type.bvlSem.v',sK5(sK2,sK1,sK0)))))))) = s('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),'const.pair.FST_1'(s('type.pair.prod'('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),'type.bvpSem.state'(sK0)),'const.bvpSem.evaluate_1'(s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(sK0)),'const.pair.,_2'(s('type.bvp.prog',sK1),s('type.bvpSem.state'(sK0),sK2))))))) | s('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),'const.option.SOME_1'(s('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v'),'const.semanticPrimitives.Rerr_1'(s('type.semanticPrimitives.error_result'('type.bvlSem.v'),'const.semanticPrimitives.Rabort_1'(s('type.semanticPrimitives.abort','const.semanticPrimitives.Rtype_error_0'))))))) = s('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),'const.pair.FST_1'(s('type.pair.prod'('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),'type.bvpSem.state'(sK0)),'const.bvpSem.evaluate_1'(s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(sK0)),'const.pair.,_2'(s('type.bvp.prog',sK1),s('type.bvpSem.state'(sK0),sK2))))))) | s('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),'const.option.NONE_0') = s('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),'const.pair.FST_1'(s('type.pair.prod'('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),'type.bvpSem.state'(sK0)),'const.bvpSem.evaluate_1'(s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(sK0)),'const.pair.,_2'(s('type.bvp.prog',sK1),s('type.bvpSem.state'(sK0),sK2)))))))),
  inference(forward_demodulation,[],[f1699,f188])).
fof(f188,plain,(
  ( ! [X2,X0,X3,X1] : (s(X1,X3) = s(X1,'const.pair.SND_1'(s('type.pair.prod'(X0,X1),'const.pair.,_2'(s(X0,X2),s(X1,X3)))))) )),
  inference(cnf_transformation,[],[f67])).
fof(f67,plain,(
  ! [X0,X1,X2,X3] : s(X1,X3) = s(X1,'const.pair.SND_1'(s('type.pair.prod'(X0,X1),'const.pair.,_2'(s(X0,X2),s(X1,X3)))))),
  inference(flattening,[],[f66])).
fof(f66,plain,(
  ! [X0,X1] : ! [X2,X3] : s(X1,X3) = s(X1,'const.pair.SND_1'(s('type.pair.prod'(X0,X1),'const.pair.,_2'(s(X0,X2),s(X1,X3)))))),
  inference(rectify,[],[f32])).
fof(f32,axiom,(
  ! [X6,X19] : ! [X14,X15] : s(X19,X15) = s(X19,'const.pair.SND_1'(s('type.pair.prod'(X6,X19),'const.pair.,_2'(s(X6,X14),s(X19,X15)))))),
  file('thm.bvpProps.evaluate_locals_LN','thm.pair.SND')).
fof(f1699,plain,(
  s('type.sptree.spt'('type.bvlSem.v'),'const.sptree.LN_0') = s('type.sptree.spt'('type.bvlSem.v'),'const.bvpSem.state_locals_1'(s('type.bvpSem.state'(sK0),'const.pair.SND_1'(s('type.pair.prod'('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),'type.bvpSem.state'(sK0)),'const.pair.,_2'(s('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),sK3),s('type.bvpSem.state'(sK0),sK4))))))) | s('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),'const.option.SOME_1'(s('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v'),'const.semanticPrimitives.Rerr_1'(s('type.semanticPrimitives.error_result'('type.bvlSem.v'),'const.semanticPrimitives.Rraise_1'(s('type.bvlSem.v',sK5(sK2,sK1,sK0)))))))) = s('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),'const.pair.FST_1'(s('type.pair.prod'('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),'type.bvpSem.state'(sK0)),'const.bvpSem.evaluate_1'(s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(sK0)),'const.pair.,_2'(s('type.bvp.prog',sK1),s('type.bvpSem.state'(sK0),sK2))))))) | s('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),'const.option.SOME_1'(s('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v'),'const.semanticPrimitives.Rerr_1'(s('type.semanticPrimitives.error_result'('type.bvlSem.v'),'const.semanticPrimitives.Rabort_1'(s('type.semanticPrimitives.abort','const.semanticPrimitives.Rtype_error_0'))))))) = s('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),'const.pair.FST_1'(s('type.pair.prod'('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),'type.bvpSem.state'(sK0)),'const.bvpSem.evaluate_1'(s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(sK0)),'const.pair.,_2'(s('type.bvp.prog',sK1),s('type.bvpSem.state'(sK0),sK2))))))) | s('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),'const.option.NONE_0') = s('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),'const.pair.FST_1'(s('type.pair.prod'('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),'type.bvpSem.state'(sK0)),'const.bvpSem.evaluate_1'(s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(sK0)),'const.pair.,_2'(s('type.bvp.prog',sK1),s('type.bvpSem.state'(sK0),sK2)))))))),
  inference(superposition,[],[f180,f126])).
fof(f180,plain,(
  ( ! [X2,X0,X1] : (s('type.sptree.spt'('type.bvlSem.v'),'const.sptree.LN_0') = s('type.sptree.spt'('type.bvlSem.v'),'const.bvpSem.state_locals_1'(s('type.bvpSem.state'(X0),'const.pair.SND_1'(s('type.pair.prod'('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),'type.bvpSem.state'(X0)),'const.bvpSem.evaluate_1'(s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X0)),'const.pair.,_2'(s('type.bvp.prog',X1),s('type.bvpSem.state'(X0),X2))))))))) | s('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),'const.option.SOME_1'(s('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v'),'const.semanticPrimitives.Rerr_1'(s('type.semanticPrimitives.error_result'('type.bvlSem.v'),'const.semanticPrimitives.Rraise_1'(s('type.bvlSem.v',sK5(X2,X1,X0)))))))) = s('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),'const.pair.FST_1'(s('type.pair.prod'('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),'type.bvpSem.state'(X0)),'const.bvpSem.evaluate_1'(s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X0)),'const.pair.,_2'(s('type.bvp.prog',X1),s('type.bvpSem.state'(X0),X2))))))) | s('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),'const.option.SOME_1'(s('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v'),'const.semanticPrimitives.Rerr_1'(s('type.semanticPrimitives.error_result'('type.bvlSem.v'),'const.semanticPrimitives.Rabort_1'(s('type.semanticPrimitives.abort','const.semanticPrimitives.Rtype_error_0'))))))) = s('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),'const.pair.FST_1'(s('type.pair.prod'('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),'type.bvpSem.state'(X0)),'const.bvpSem.evaluate_1'(s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X0)),'const.pair.,_2'(s('type.bvp.prog',X1),s('type.bvpSem.state'(X0),X2))))))) | s('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),'const.option.NONE_0') = s('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),'const.pair.FST_1'(s('type.pair.prod'('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),'type.bvpSem.state'(X0)),'const.bvpSem.evaluate_1'(s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X0)),'const.pair.,_2'(s('type.bvp.prog',X1),s('type.bvpSem.state'(X0),X2)))))))) )),
  inference(cnf_transformation,[],[f119])).
fof(f119,plain,(
  ! [X0,X1,X2] : (s('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),'const.option.NONE_0') = s('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),'const.pair.FST_1'(s('type.pair.prod'('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),'type.bvpSem.state'(X0)),'const.bvpSem.evaluate_1'(s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X0)),'const.pair.,_2'(s('type.bvp.prog',X1),s('type.bvpSem.state'(X0),X2))))))) | s('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),'const.option.SOME_1'(s('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v'),'const.semanticPrimitives.Rerr_1'(s('type.semanticPrimitives.error_result'('type.bvlSem.v'),'const.semanticPrimitives.Rabort_1'(s('type.semanticPrimitives.abort','const.semanticPrimitives.Rtype_error_0'))))))) = s('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),'const.pair.FST_1'(s('type.pair.prod'('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),'type.bvpSem.state'(X0)),'const.bvpSem.evaluate_1'(s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X0)),'const.pair.,_2'(s('type.bvp.prog',X1),s('type.bvpSem.state'(X0),X2))))))) | s('type.sptree.spt'('type.bvlSem.v'),'const.sptree.LN_0') = s('type.sptree.spt'('type.bvlSem.v'),'const.bvpSem.state_locals_1'(s('type.bvpSem.state'(X0),'const.pair.SND_1'(s('type.pair.prod'('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),'type.bvpSem.state'(X0)),'const.bvpSem.evaluate_1'(s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X0)),'const.pair.,_2'(s('type.bvp.prog',X1),s('type.bvpSem.state'(X0),X2))))))))) | s('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),'const.option.SOME_1'(s('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v'),'const.semanticPrimitives.Rerr_1'(s('type.semanticPrimitives.error_result'('type.bvlSem.v'),'const.semanticPrimitives.Rraise_1'(s('type.bvlSem.v',sK5(X2,X1,X0)))))))) = s('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),'const.pair.FST_1'(s('type.pair.prod'('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),'type.bvpSem.state'(X0)),'const.bvpSem.evaluate_1'(s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X0)),'const.pair.,_2'(s('type.bvp.prog',X1),s('type.bvpSem.state'(X0),X2))))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK5])],[f83])).
fof(f83,plain,(
  ! [X0,X1,X2] : (s('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),'const.option.NONE_0') = s('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),'const.pair.FST_1'(s('type.pair.prod'('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),'type.bvpSem.state'(X0)),'const.bvpSem.evaluate_1'(s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X0)),'const.pair.,_2'(s('type.bvp.prog',X1),s('type.bvpSem.state'(X0),X2))))))) | s('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),'const.option.SOME_1'(s('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v'),'const.semanticPrimitives.Rerr_1'(s('type.semanticPrimitives.error_result'('type.bvlSem.v'),'const.semanticPrimitives.Rabort_1'(s('type.semanticPrimitives.abort','const.semanticPrimitives.Rtype_error_0'))))))) = s('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),'const.pair.FST_1'(s('type.pair.prod'('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),'type.bvpSem.state'(X0)),'const.bvpSem.evaluate_1'(s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X0)),'const.pair.,_2'(s('type.bvp.prog',X1),s('type.bvpSem.state'(X0),X2))))))) | s('type.sptree.spt'('type.bvlSem.v'),'const.sptree.LN_0') = s('type.sptree.spt'('type.bvlSem.v'),'const.bvpSem.state_locals_1'(s('type.bvpSem.state'(X0),'const.pair.SND_1'(s('type.pair.prod'('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),'type.bvpSem.state'(X0)),'const.bvpSem.evaluate_1'(s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X0)),'const.pair.,_2'(s('type.bvp.prog',X1),s('type.bvpSem.state'(X0),X2))))))))) | ? [X3] : s('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),'const.option.SOME_1'(s('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v'),'const.semanticPrimitives.Rerr_1'(s('type.semanticPrimitives.error_result'('type.bvlSem.v'),'const.semanticPrimitives.Rraise_1'(s('type.bvlSem.v',X3))))))) = s('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),'const.pair.FST_1'(s('type.pair.prod'('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),'type.bvpSem.state'(X0)),'const.bvpSem.evaluate_1'(s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X0)),'const.pair.,_2'(s('type.bvp.prog',X1),s('type.bvpSem.state'(X0),X2))))))))),
  inference(flattening,[],[f82])).
fof(f82,plain,(
  ! [X0,X1,X2] : ((s('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),'const.option.NONE_0') = s('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),'const.pair.FST_1'(s('type.pair.prod'('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),'type.bvpSem.state'(X0)),'const.bvpSem.evaluate_1'(s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X0)),'const.pair.,_2'(s('type.bvp.prog',X1),s('type.bvpSem.state'(X0),X2))))))) | s('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),'const.option.SOME_1'(s('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v'),'const.semanticPrimitives.Rerr_1'(s('type.semanticPrimitives.error_result'('type.bvlSem.v'),'const.semanticPrimitives.Rabort_1'(s('type.semanticPrimitives.abort','const.semanticPrimitives.Rtype_error_0'))))))) = s('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),'const.pair.FST_1'(s('type.pair.prod'('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),'type.bvpSem.state'(X0)),'const.bvpSem.evaluate_1'(s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X0)),'const.pair.,_2'(s('type.bvp.prog',X1),s('type.bvpSem.state'(X0),X2)))))))) | (s('type.sptree.spt'('type.bvlSem.v'),'const.sptree.LN_0') = s('type.sptree.spt'('type.bvlSem.v'),'const.bvpSem.state_locals_1'(s('type.bvpSem.state'(X0),'const.pair.SND_1'(s('type.pair.prod'('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),'type.bvpSem.state'(X0)),'const.bvpSem.evaluate_1'(s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X0)),'const.pair.,_2'(s('type.bvp.prog',X1),s('type.bvpSem.state'(X0),X2))))))))) | ? [X3] : s('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),'const.option.SOME_1'(s('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v'),'const.semanticPrimitives.Rerr_1'(s('type.semanticPrimitives.error_result'('type.bvlSem.v'),'const.semanticPrimitives.Rraise_1'(s('type.bvlSem.v',X3))))))) = s('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),'const.pair.FST_1'(s('type.pair.prod'('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),'type.bvpSem.state'(X0)),'const.bvpSem.evaluate_1'(s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X0)),'const.pair.,_2'(s('type.bvp.prog',X1),s('type.bvpSem.state'(X0),X2)))))))))),
  inference(ennf_transformation,[],[f60])).
fof(f60,plain,(
  ! [X0,X1,X2] : ((s('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),'const.option.NONE_0') != s('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),'const.pair.FST_1'(s('type.pair.prod'('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),'type.bvpSem.state'(X0)),'const.bvpSem.evaluate_1'(s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X0)),'const.pair.,_2'(s('type.bvp.prog',X1),s('type.bvpSem.state'(X0),X2))))))) & s('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),'const.option.SOME_1'(s('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v'),'const.semanticPrimitives.Rerr_1'(s('type.semanticPrimitives.error_result'('type.bvlSem.v'),'const.semanticPrimitives.Rabort_1'(s('type.semanticPrimitives.abort','const.semanticPrimitives.Rtype_error_0'))))))) != s('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),'const.pair.FST_1'(s('type.pair.prod'('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),'type.bvpSem.state'(X0)),'const.bvpSem.evaluate_1'(s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X0)),'const.pair.,_2'(s('type.bvp.prog',X1),s('type.bvpSem.state'(X0),X2)))))))) => (s('type.sptree.spt'('type.bvlSem.v'),'const.sptree.LN_0') = s('type.sptree.spt'('type.bvlSem.v'),'const.bvpSem.state_locals_1'(s('type.bvpSem.state'(X0),'const.pair.SND_1'(s('type.pair.prod'('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),'type.bvpSem.state'(X0)),'const.bvpSem.evaluate_1'(s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X0)),'const.pair.,_2'(s('type.bvp.prog',X1),s('type.bvpSem.state'(X0),X2))))))))) | ? [X3] : s('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),'const.option.SOME_1'(s('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v'),'const.semanticPrimitives.Rerr_1'(s('type.semanticPrimitives.error_result'('type.bvlSem.v'),'const.semanticPrimitives.Rraise_1'(s('type.bvlSem.v',X3))))))) = s('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),'const.pair.FST_1'(s('type.pair.prod'('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),'type.bvpSem.state'(X0)),'const.bvpSem.evaluate_1'(s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X0)),'const.pair.,_2'(s('type.bvp.prog',X1),s('type.bvpSem.state'(X0),X2)))))))))),
  inference(flattening,[],[f59])).
fof(f59,plain,(
  ! [X0] : ! [X1,X2] : ((~s('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),'const.option.NONE_0') = s('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),'const.pair.FST_1'(s('type.pair.prod'('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),'type.bvpSem.state'(X0)),'const.bvpSem.evaluate_1'(s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X0)),'const.pair.,_2'(s('type.bvp.prog',X1),s('type.bvpSem.state'(X0),X2))))))) & ~s('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),'const.option.SOME_1'(s('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v'),'const.semanticPrimitives.Rerr_1'(s('type.semanticPrimitives.error_result'('type.bvlSem.v'),'const.semanticPrimitives.Rabort_1'(s('type.semanticPrimitives.abort','const.semanticPrimitives.Rtype_error_0'))))))) = s('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),'const.pair.FST_1'(s('type.pair.prod'('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),'type.bvpSem.state'(X0)),'const.bvpSem.evaluate_1'(s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X0)),'const.pair.,_2'(s('type.bvp.prog',X1),s('type.bvpSem.state'(X0),X2)))))))) => (s('type.sptree.spt'('type.bvlSem.v'),'const.sptree.LN_0') = s('type.sptree.spt'('type.bvlSem.v'),'const.bvpSem.state_locals_1'(s('type.bvpSem.state'(X0),'const.pair.SND_1'(s('type.pair.prod'('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),'type.bvpSem.state'(X0)),'const.bvpSem.evaluate_1'(s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X0)),'const.pair.,_2'(s('type.bvp.prog',X1),s('type.bvpSem.state'(X0),X2))))))))) | ? [X3] : s('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),'const.option.SOME_1'(s('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v'),'const.semanticPrimitives.Rerr_1'(s('type.semanticPrimitives.error_result'('type.bvlSem.v'),'const.semanticPrimitives.Rraise_1'(s('type.bvlSem.v',X3))))))) = s('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),'const.pair.FST_1'(s('type.pair.prod'('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),'type.bvpSem.state'(X0)),'const.bvpSem.evaluate_1'(s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X0)),'const.pair.,_2'(s('type.bvp.prog',X1),s('type.bvpSem.state'(X0),X2)))))))))),
  inference(rectify,[],[f30])).
fof(f30,axiom,(
  ! [X6] : ! [X7,X8] : ((~s('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),'const.option.NONE_0') = s('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),'const.pair.FST_1'(s('type.pair.prod'('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),'type.bvpSem.state'(X6)),'const.bvpSem.evaluate_1'(s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X6)),'const.pair.,_2'(s('type.bvp.prog',X7),s('type.bvpSem.state'(X6),X8))))))) & ~s('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),'const.option.SOME_1'(s('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v'),'const.semanticPrimitives.Rerr_1'(s('type.semanticPrimitives.error_result'('type.bvlSem.v'),'const.semanticPrimitives.Rabort_1'(s('type.semanticPrimitives.abort','const.semanticPrimitives.Rtype_error_0'))))))) = s('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),'const.pair.FST_1'(s('type.pair.prod'('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),'type.bvpSem.state'(X6)),'const.bvpSem.evaluate_1'(s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X6)),'const.pair.,_2'(s('type.bvp.prog',X7),s('type.bvpSem.state'(X6),X8)))))))) => (s('type.sptree.spt'('type.bvlSem.v'),'const.sptree.LN_0') = s('type.sptree.spt'('type.bvlSem.v'),'const.bvpSem.state_locals_1'(s('type.bvpSem.state'(X6),'const.pair.SND_1'(s('type.pair.prod'('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),'type.bvpSem.state'(X6)),'const.bvpSem.evaluate_1'(s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X6)),'const.pair.,_2'(s('type.bvp.prog',X7),s('type.bvpSem.state'(X6),X8))))))))) | ? [X10] : s('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),'const.option.SOME_1'(s('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v'),'const.semanticPrimitives.Rerr_1'(s('type.semanticPrimitives.error_result'('type.bvlSem.v'),'const.semanticPrimitives.Rraise_1'(s('type.bvlSem.v',X10))))))) = s('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),'const.pair.FST_1'(s('type.pair.prod'('type.option.option'('type.semanticPrimitives.result'('type.bvlSem.v','type.bvlSem.v')),'type.bvpSem.state'(X6)),'const.bvpSem.evaluate_1'(s('type.pair.prod'('type.bvp.prog','type.bvpSem.state'(X6)),'const.pair.,_2'(s('type.bvp.prog',X7),s('type.bvpSem.state'(X6),X8)))))))))),
  file('thm.bvpProps.evaluate_locals_LN','thm.bvpProps.bvpProps_27_prove_ltb')).
% SZS output end Proof for thm.bvpProps
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 48
% Passive clauses: 403
% Generated clauses: 1926
% Final active clauses: 48
% Final passive clauses: 313
% Input formulas: 32
% Initial clauses: 79
% 
% Duplicate literals: 114
% Trivial inequalities: 45
% Fw subsumption resolutions: 249
% Fw demodulations: 123
% 
% Simple tautologies: 108
% Equational tautologies: 28
% Forward subsumptions: 792
% 
% Binary resolution: 119
% Factoring: 1
% Forward superposition: 562
% Backward superposition: 508
% Self superposition: 51
% Equality factoring: 50
% Equality resolution: 9
% 
% Split clauses: 65
% Split components: 134
% SAT solver clauses: 98
% SAT solver unit clauses: 11
% SAT solver binary clauses: 50
% 
% Sat splits: 65
% 
% TWLsolver clauses: 98
% TWLsolver calls for satisfiability: 37
% 
% Memory used [KB]: 2046
% Time elapsed: 0.109 s
% ------------------------------
% ------------------------------
% Success in time 0.11 s
