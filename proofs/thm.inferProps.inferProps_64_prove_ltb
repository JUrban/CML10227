Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 149 next slice time: 5
dis+11_7_3 on thm.inferProps
% (13214)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 683
% Passive clauses: 8984
% Generated clauses: 19562
% Final active clauses: 671
% Final passive clauses: 7934
% Input formulas: 39
% Initial clauses: 161
% 
% Duplicate literals: 403
% Trivial inequalities: 93
% Fw subsumption resolutions: 1950
% Fw demodulations: 337
% Bw demodulations: 9
% 
% Simple tautologies: 211
% Equational tautologies: 55
% Forward subsumptions: 6797
% 
% Binary resolution: 10260
% Factoring: 1264
% Forward superposition: 3014
% Backward superposition: 1781
% Self superposition: 24
% Equality factoring: 28
% Equality resolution: 26
% 
% Split clauses: 670
% Split components: 1365
% SAT solver clauses: 1053
% SAT solver unit clauses: 14
% SAT solver binary clauses: 128
% 
% Sat splits: 670
% Sat splitting refutations: 1
% 
% TWLsolver clauses: 1052
% TWLsolver calls for satisfiability: 385
% 
% Memory used [KB]: 9850
% Time elapsed: 0.600 s
% ------------------------------
% ------------------------------
% remaining time: 143 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.inferProps
% (13227)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 455
% Passive clauses: 3264
% Generated clauses: 14117
% Final active clauses: 448
% Final passive clauses: 2764
% Input formulas: 39
% Initial clauses: 161
% 
% Duplicate literals: 271
% Trivial inequalities: 19
% Fw subsumption resolutions: 1187
% Fw demodulations: 509
% Bw demodulations: 48
% Condensations: 588
% Global subsumptions: 13
% 
% Simple tautologies: 244
% Equational tautologies: 22
% Forward subsumptions: 4069
% 
% Binary resolution: 4718
% Factoring: 361
% Forward superposition: 1495
% Backward superposition: 1389
% Self superposition: 26
% Equality factoring: 28
% Equality resolution: 4
% 
% Split clauses: 99
% Split components: 203
% SAT solver clauses: 4032
% SAT solver unit clauses: 166
% SAT solver binary clauses: 77
% SAT solver learnt clauses: 26
% SAT solver learnt literals: 10
% 
% Sat splits: 99
% Sat splitting refutations: 5
% 
% TWLsolver clauses: 3980
% TWLsolver calls for satisfiability: 1572
% 
% Memory used [KB]: 16247
% Time elapsed: 0.700 s
% ------------------------------
% ------------------------------
% remaining time: 136 next slice time: 103
lrs+11_2_br=off:cond=on:fde=none:gs=on:gsaa=full_model:lwlo=on:nwc=2:sas=minisat:stl=30:ssfp=100000:ssfq=1.4:smm=sco:ssnc=none:sp=occurrence:urr=on_98 on thm.inferProps
% (13261)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 2021
% Passive clauses: 8250
% Generated clauses: 162477
% Final active clauses: 736
% Final passive clauses: 1540
% Input formulas: 39
% Initial clauses: 161
% 
% Duplicate literals: 10728
% Trivial inequalities: 312
% Fw subsumption resolutions: 9656
% Fw demodulations: 15324
% Bw demodulations: 2999
% Condensations: 19991
% Global subsumptions: 278
% 
% Simple tautologies: 495
% Equational tautologies: 2555
% Forward subsumptions: 93818
% Fw demodulations to eq. taut.: 2
% Bw demodulations to eq. taut.: 155
% 
% Unit resulting resolution: 22076
% Factoring: 22
% Forward superposition: 40955
% Backward superposition: 36691
% Self superposition: 506
% Equality factoring: 354
% Equality resolution: 19
% 
% Split clauses: 698
% Split components: 1433
% SAT solver clauses: 10491
% SAT solver unit clauses: 635
% SAT solver binary clauses: 1077
% 
% Sat splits: 698
% Sat splitting refutations: 565
% 
% Memory used [KB]: 62173
% Time elapsed: 10.400 s
% ------------------------------
% ------------------------------
% remaining time: 32 next slice time: 32
dis+11_5_fde=none:nwc=1:sas=minisat:sd=1:ss=axioms:st=5.0:sos=all:sdd=large:sser=off:sfr=on:ssfp=100000:ssfq=2.0:ssnc=none_37 on thm.inferProps
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.inferProps
% SZS output start Proof for thm.inferProps
fof(f86207,plain,(
  $false),
  inference(subsumption_resolution,[],[f20646,f17347])).
fof(f17347,plain,(
  p(s(bool,'const.infer.check_t_3'(s('type.num.num',sK12),s(fun('type.num.num',bool),'const.pred_set.count_1'(s('type.num.num',sK13))),s('type.infer_t.infer_t','const.finite_map.FAPPLY_2'(s('type.finite_map.fmap'(sK10,'type.infer_t.infer_t'),sK11),s(sK10,sK14(sK11,'const.pred_set.count_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK13),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),sK12,sK10)))))))),
  inference(resolution,[],[f378,f477])).
fof(f477,plain,(
  p(s(bool,'const.bool.IN_2'(s(sK10,sK14(sK11,'const.pred_set.count_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK13),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),sK12,sK10)),s(fun(sK10,bool),'const.finite_map.FDOM_1'(s('type.finite_map.fmap'(sK10,'type.infer_t.infer_t'),sK11))))))),
  inference(resolution,[],[f215,f356])).
fof(f356,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,'const.infer.check_s_3'(s('type.num.num',X1),s(fun('type.num.num',bool),X2),s('type.finite_map.fmap'(X0,'type.infer_t.infer_t'),X3)))) | p(s(bool,'const.bool.IN_2'(s(X0,sK14(X3,X2,X1,X0)),s(fun(X0,bool),'const.finite_map.FDOM_1'(s('type.finite_map.fmap'(X0,'type.infer_t.infer_t'),X3))))))) )),
  inference(cnf_transformation,[],[f200])).
fof(f200,plain,(
  ! [X0,X1,X2,X3] : ((~p(s(bool,'const.infer.check_s_3'(s('type.num.num',X1),s(fun('type.num.num',bool),X2),s('type.finite_map.fmap'(X0,'type.infer_t.infer_t'),X3)))) | ! [X5] : (~p(s(bool,'const.bool.IN_2'(s(X0,X5),s(fun(X0,bool),'const.finite_map.FDOM_1'(s('type.finite_map.fmap'(X0,'type.infer_t.infer_t'),X3)))))) | p(s(bool,'const.infer.check_t_3'(s('type.num.num',X1),s(fun('type.num.num',bool),X2),s('type.infer_t.infer_t','const.finite_map.FAPPLY_2'(s('type.finite_map.fmap'(X0,'type.infer_t.infer_t'),X3),s(X0,X5)))))))) & ((p(s(bool,'const.bool.IN_2'(s(X0,sK14(X3,X2,X1,X0)),s(fun(X0,bool),'const.finite_map.FDOM_1'(s('type.finite_map.fmap'(X0,'type.infer_t.infer_t'),X3)))))) & ~p(s(bool,'const.infer.check_t_3'(s('type.num.num',X1),s(fun('type.num.num',bool),X2),s('type.infer_t.infer_t','const.finite_map.FAPPLY_2'(s('type.finite_map.fmap'(X0,'type.infer_t.infer_t'),X3),s(X0,sK14(X3,X2,X1,X0)))))))) | p(s(bool,'const.infer.check_s_3'(s('type.num.num',X1),s(fun('type.num.num',bool),X2),s('type.finite_map.fmap'(X0,'type.infer_t.infer_t'),X3))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK14])],[f199])).
fof(f199,plain,(
  ! [X0,X1,X2,X3] : ((~p(s(bool,'const.infer.check_s_3'(s('type.num.num',X1),s(fun('type.num.num',bool),X2),s('type.finite_map.fmap'(X0,'type.infer_t.infer_t'),X3)))) | ! [X5] : (~p(s(bool,'const.bool.IN_2'(s(X0,X5),s(fun(X0,bool),'const.finite_map.FDOM_1'(s('type.finite_map.fmap'(X0,'type.infer_t.infer_t'),X3)))))) | p(s(bool,'const.infer.check_t_3'(s('type.num.num',X1),s(fun('type.num.num',bool),X2),s('type.infer_t.infer_t','const.finite_map.FAPPLY_2'(s('type.finite_map.fmap'(X0,'type.infer_t.infer_t'),X3),s(X0,X5)))))))) & (? [X4] : (p(s(bool,'const.bool.IN_2'(s(X0,X4),s(fun(X0,bool),'const.finite_map.FDOM_1'(s('type.finite_map.fmap'(X0,'type.infer_t.infer_t'),X3)))))) & ~p(s(bool,'const.infer.check_t_3'(s('type.num.num',X1),s(fun('type.num.num',bool),X2),s('type.infer_t.infer_t','const.finite_map.FAPPLY_2'(s('type.finite_map.fmap'(X0,'type.infer_t.infer_t'),X3),s(X0,X4))))))) | p(s(bool,'const.infer.check_s_3'(s('type.num.num',X1),s(fun('type.num.num',bool),X2),s('type.finite_map.fmap'(X0,'type.infer_t.infer_t'),X3))))))),
  inference(rectify,[],[f198])).
fof(f198,plain,(
  ! [X0,X1,X2,X3] : ((~p(s(bool,'const.infer.check_s_3'(s('type.num.num',X1),s(fun('type.num.num',bool),X2),s('type.finite_map.fmap'(X0,'type.infer_t.infer_t'),X3)))) | ! [X4] : (~p(s(bool,'const.bool.IN_2'(s(X0,X4),s(fun(X0,bool),'const.finite_map.FDOM_1'(s('type.finite_map.fmap'(X0,'type.infer_t.infer_t'),X3)))))) | p(s(bool,'const.infer.check_t_3'(s('type.num.num',X1),s(fun('type.num.num',bool),X2),s('type.infer_t.infer_t','const.finite_map.FAPPLY_2'(s('type.finite_map.fmap'(X0,'type.infer_t.infer_t'),X3),s(X0,X4)))))))) & (? [X4] : (p(s(bool,'const.bool.IN_2'(s(X0,X4),s(fun(X0,bool),'const.finite_map.FDOM_1'(s('type.finite_map.fmap'(X0,'type.infer_t.infer_t'),X3)))))) & ~p(s(bool,'const.infer.check_t_3'(s('type.num.num',X1),s(fun('type.num.num',bool),X2),s('type.infer_t.infer_t','const.finite_map.FAPPLY_2'(s('type.finite_map.fmap'(X0,'type.infer_t.infer_t'),X3),s(X0,X4))))))) | p(s(bool,'const.infer.check_s_3'(s('type.num.num',X1),s(fun('type.num.num',bool),X2),s('type.finite_map.fmap'(X0,'type.infer_t.infer_t'),X3))))))),
  inference(nnf_transformation,[],[f121])).
fof(f121,plain,(
  ! [X0,X1,X2,X3] : (p(s(bool,'const.infer.check_s_3'(s('type.num.num',X1),s(fun('type.num.num',bool),X2),s('type.finite_map.fmap'(X0,'type.infer_t.infer_t'),X3)))) <=> ! [X4] : (~p(s(bool,'const.bool.IN_2'(s(X0,X4),s(fun(X0,bool),'const.finite_map.FDOM_1'(s('type.finite_map.fmap'(X0,'type.infer_t.infer_t'),X3)))))) | p(s(bool,'const.infer.check_t_3'(s('type.num.num',X1),s(fun('type.num.num',bool),X2),s('type.infer_t.infer_t','const.finite_map.FAPPLY_2'(s('type.finite_map.fmap'(X0,'type.infer_t.infer_t'),X3),s(X0,X4))))))))),
  inference(ennf_transformation,[],[f86])).
fof(f86,plain,(
  ! [X0,X1,X2,X3] : (p(s(bool,'const.infer.check_s_3'(s('type.num.num',X1),s(fun('type.num.num',bool),X2),s('type.finite_map.fmap'(X0,'type.infer_t.infer_t'),X3)))) <=> ! [X4] : (p(s(bool,'const.bool.IN_2'(s(X0,X4),s(fun(X0,bool),'const.finite_map.FDOM_1'(s('type.finite_map.fmap'(X0,'type.infer_t.infer_t'),X3)))))) => p(s(bool,'const.infer.check_t_3'(s('type.num.num',X1),s(fun('type.num.num',bool),X2),s('type.infer_t.infer_t','const.finite_map.FAPPLY_2'(s('type.finite_map.fmap'(X0,'type.infer_t.infer_t'),X3),s(X0,X4))))))))),
  inference(flattening,[],[f85])).
fof(f85,plain,(
  ! [X0] : ! [X1,X2,X3] : (p(s(bool,'const.infer.check_s_3'(s('type.num.num',X1),s(fun('type.num.num',bool),X2),s('type.finite_map.fmap'(X0,'type.infer_t.infer_t'),X3)))) <=> ! [X4] : (p(s(bool,'const.bool.IN_2'(s(X0,X4),s(fun(X0,bool),'const.finite_map.FDOM_1'(s('type.finite_map.fmap'(X0,'type.infer_t.infer_t'),X3)))))) => p(s(bool,'const.infer.check_t_3'(s('type.num.num',X1),s(fun('type.num.num',bool),X2),s('type.infer_t.infer_t','const.finite_map.FAPPLY_2'(s('type.finite_map.fmap'(X0,'type.infer_t.infer_t'),X3),s(X0,X4))))))))),
  inference(rectify,[],[f26])).
fof(f26,axiom,(
  ! [X6] : ! [X8,X9,X7] : (p(s(bool,'const.infer.check_s_3'(s('type.num.num',X8),s(fun('type.num.num',bool),X9),s('type.finite_map.fmap'(X6,'type.infer_t.infer_t'),X7)))) <=> ! [X20] : (p(s(bool,'const.bool.IN_2'(s(X6,X20),s(fun(X6,bool),'const.finite_map.FDOM_1'(s('type.finite_map.fmap'(X6,'type.infer_t.infer_t'),X7)))))) => p(s(bool,'const.infer.check_t_3'(s('type.num.num',X8),s(fun('type.num.num',bool),X9),s('type.infer_t.infer_t','const.finite_map.FAPPLY_2'(s('type.finite_map.fmap'(X6,'type.infer_t.infer_t'),X7),s(X6,X20))))))))),
  file('thm.inferProps.inferProps_64_prove_ltb','thm.infer.check_s_def')).
fof(f215,plain,(
  ~p(s(bool,'const.infer.check_s_3'(s('type.num.num',sK12),s(fun('type.num.num',bool),'const.pred_set.count_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK13),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.finite_map.fmap'(sK10,'type.infer_t.infer_t'),sK11))))),
  inference(cnf_transformation,[],[f137])).
fof(f137,plain,(
  p(s(bool,'const.infer.check_s_3'(s('type.num.num',sK12),s(fun('type.num.num',bool),'const.pred_set.count_1'(s('type.num.num',sK13))),s('type.finite_map.fmap'(sK10,'type.infer_t.infer_t'),sK11)))) & ~p(s(bool,'const.infer.check_s_3'(s('type.num.num',sK12),s(fun('type.num.num',bool),'const.pred_set.count_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK13),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.finite_map.fmap'(sK10,'type.infer_t.infer_t'),sK11))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK10,sK11,sK12,sK13])],[f96])).
fof(f96,plain,(
  ? [X0,X1,X2,X3] : (p(s(bool,'const.infer.check_s_3'(s('type.num.num',X2),s(fun('type.num.num',bool),'const.pred_set.count_1'(s('type.num.num',X3))),s('type.finite_map.fmap'(X0,'type.infer_t.infer_t'),X1)))) & ~p(s(bool,'const.infer.check_s_3'(s('type.num.num',X2),s(fun('type.num.num',bool),'const.pred_set.count_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X3),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.finite_map.fmap'(X0,'type.infer_t.infer_t'),X1)))))),
  inference(ennf_transformation,[],[f42])).
fof(f42,plain,(
  ~! [X0,X1,X2,X3] : (p(s(bool,'const.infer.check_s_3'(s('type.num.num',X2),s(fun('type.num.num',bool),'const.pred_set.count_1'(s('type.num.num',X3))),s('type.finite_map.fmap'(X0,'type.infer_t.infer_t'),X1)))) => p(s(bool,'const.infer.check_s_3'(s('type.num.num',X2),s(fun('type.num.num',bool),'const.pred_set.count_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X3),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.finite_map.fmap'(X0,'type.infer_t.infer_t'),X1)))))),
  inference(flattening,[],[f41])).
fof(f41,plain,(
  ~! [X0] : ! [X1,X2,X3] : (p(s(bool,'const.infer.check_s_3'(s('type.num.num',X2),s(fun('type.num.num',bool),'const.pred_set.count_1'(s('type.num.num',X3))),s('type.finite_map.fmap'(X0,'type.infer_t.infer_t'),X1)))) => p(s(bool,'const.infer.check_s_3'(s('type.num.num',X2),s(fun('type.num.num',bool),'const.pred_set.count_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X3),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.finite_map.fmap'(X0,'type.infer_t.infer_t'),X1)))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : ! [X7,X8,X9] : (p(s(bool,'const.infer.check_s_3'(s('type.num.num',X8),s(fun('type.num.num',bool),'const.pred_set.count_1'(s('type.num.num',X9))),s('type.finite_map.fmap'(X6,'type.infer_t.infer_t'),X7)))) => p(s(bool,'const.infer.check_s_3'(s('type.num.num',X8),s(fun('type.num.num',bool),'const.pred_set.count_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X9),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.finite_map.fmap'(X6,'type.infer_t.infer_t'),X7)))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : ! [X7,X8,X9] : (p(s(bool,'const.infer.check_s_3'(s('type.num.num',X8),s(fun('type.num.num',bool),'const.pred_set.count_1'(s('type.num.num',X9))),s('type.finite_map.fmap'(X6,'type.infer_t.infer_t'),X7)))) => p(s(bool,'const.infer.check_s_3'(s('type.num.num',X8),s(fun('type.num.num',bool),'const.pred_set.count_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X9),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.finite_map.fmap'(X6,'type.infer_t.infer_t'),X7)))))),
  file('thm.inferProps.inferProps_64_prove_ltb','thm.inferProps.inferProps_64_prove_ltb')).
fof(f378,plain,(
  ( ! [X0] : (~p(s(bool,'const.bool.IN_2'(s(sK10,X0),s(fun(sK10,bool),'const.finite_map.FDOM_1'(s('type.finite_map.fmap'(sK10,'type.infer_t.infer_t'),sK11)))))) | p(s(bool,'const.infer.check_t_3'(s('type.num.num',sK12),s(fun('type.num.num',bool),'const.pred_set.count_1'(s('type.num.num',sK13))),s('type.infer_t.infer_t','const.finite_map.FAPPLY_2'(s('type.finite_map.fmap'(sK10,'type.infer_t.infer_t'),sK11),s(sK10,X0))))))) )),
  inference(resolution,[],[f214,f355])).
fof(f355,plain,(
  ( ! [X2,X0,X5,X3,X1] : (p(s(bool,'const.infer.check_t_3'(s('type.num.num',X1),s(fun('type.num.num',bool),X2),s('type.infer_t.infer_t','const.finite_map.FAPPLY_2'(s('type.finite_map.fmap'(X0,'type.infer_t.infer_t'),X3),s(X0,X5)))))) | ~p(s(bool,'const.bool.IN_2'(s(X0,X5),s(fun(X0,bool),'const.finite_map.FDOM_1'(s('type.finite_map.fmap'(X0,'type.infer_t.infer_t'),X3)))))) | ~p(s(bool,'const.infer.check_s_3'(s('type.num.num',X1),s(fun('type.num.num',bool),X2),s('type.finite_map.fmap'(X0,'type.infer_t.infer_t'),X3))))) )),
  inference(cnf_transformation,[],[f200])).
fof(f214,plain,(
  p(s(bool,'const.infer.check_s_3'(s('type.num.num',sK12),s(fun('type.num.num',bool),'const.pred_set.count_1'(s('type.num.num',sK13))),s('type.finite_map.fmap'(sK10,'type.infer_t.infer_t'),sK11))))),
  inference(cnf_transformation,[],[f137])).
fof(f20646,plain,(
  ~p(s(bool,'const.infer.check_t_3'(s('type.num.num',sK12),s(fun('type.num.num',bool),'const.pred_set.count_1'(s('type.num.num',sK13))),s('type.infer_t.infer_t','const.finite_map.FAPPLY_2'(s('type.finite_map.fmap'(sK10,'type.infer_t.infer_t'),sK11),s(sK10,sK14(sK11,'const.pred_set.count_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK13),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),sK12,sK10)))))))),
  inference(resolution,[],[f478,f217])).
fof(f217,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,'const.infer.check_t_3'(s('type.num.num',X2),s(fun('type.num.num',bool),'const.pred_set.count_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X3))))),s('type.infer_t.infer_t',X0)))) | ~p(s(bool,'const.infer.check_t_3'(s('type.num.num',X2),s(fun('type.num.num',bool),'const.pred_set.count_1'(s('type.num.num',X1))),s('type.infer_t.infer_t',X0))))) )),
  inference(cnf_transformation,[],[f98])).
fof(f98,plain,(
  ! [X0,X1,X2] : (~p(s(bool,'const.infer.check_t_3'(s('type.num.num',X2),s(fun('type.num.num',bool),'const.pred_set.count_1'(s('type.num.num',X1))),s('type.infer_t.infer_t',X0)))) | ! [X3] : p(s(bool,'const.infer.check_t_3'(s('type.num.num',X2),s(fun('type.num.num',bool),'const.pred_set.count_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X3))))),s('type.infer_t.infer_t',X0)))))),
  inference(ennf_transformation,[],[f44])).
fof(f44,plain,(
  ! [X0,X1,X2] : (p(s(bool,'const.infer.check_t_3'(s('type.num.num',X2),s(fun('type.num.num',bool),'const.pred_set.count_1'(s('type.num.num',X1))),s('type.infer_t.infer_t',X0)))) => ! [X3] : p(s(bool,'const.infer.check_t_3'(s('type.num.num',X2),s(fun('type.num.num',bool),'const.pred_set.count_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X3))))),s('type.infer_t.infer_t',X0)))))),
  inference(rectify,[],[f27])).
fof(f27,axiom,(
  ! [X10,X9,X8] : (p(s(bool,'const.infer.check_t_3'(s('type.num.num',X8),s(fun('type.num.num',bool),'const.pred_set.count_1'(s('type.num.num',X9))),s('type.infer_t.infer_t',X10)))) => ! [X21] : p(s(bool,'const.infer.check_t_3'(s('type.num.num',X8),s(fun('type.num.num',bool),'const.pred_set.count_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X9),s('type.num.num',X21))))),s('type.infer_t.infer_t',X10)))))),
  file('thm.inferProps.inferProps_64_prove_ltb','thm.inferProps.inferProps_6|48|_prove_ltb|split|0')).
fof(f478,plain,(
  ~p(s(bool,'const.infer.check_t_3'(s('type.num.num',sK12),s(fun('type.num.num',bool),'const.pred_set.count_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK13),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.infer_t.infer_t','const.finite_map.FAPPLY_2'(s('type.finite_map.fmap'(sK10,'type.infer_t.infer_t'),sK11),s(sK10,sK14(sK11,'const.pred_set.count_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK13),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),sK12,sK10)))))))),
  inference(resolution,[],[f215,f357])).
fof(f357,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,'const.infer.check_s_3'(s('type.num.num',X1),s(fun('type.num.num',bool),X2),s('type.finite_map.fmap'(X0,'type.infer_t.infer_t'),X3)))) | ~p(s(bool,'const.infer.check_t_3'(s('type.num.num',X1),s(fun('type.num.num',bool),X2),s('type.infer_t.infer_t','const.finite_map.FAPPLY_2'(s('type.finite_map.fmap'(X0,'type.infer_t.infer_t'),X3),s(X0,sK14(X3,X2,X1,X0)))))))) )),
  inference(cnf_transformation,[],[f200])).
% SZS output end Proof for thm.inferProps
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 1307
% Passive clauses: 20339
% Generated clauses: 85747
% Final active clauses: 1290
% Final passive clauses: 18007
% Input formulas: 39
% Initial clauses: 160
% 
% Selected by SInE selection: 38
% SInE iterations: 1
% 
% Duplicate literals: 2828
% Trivial inequalities: 349
% Fw subsumption resolutions: 10635
% Fw demodulations: 1565
% Bw demodulations: 5
% 
% Simple tautologies: 2433
% Equational tautologies: 253
% Forward subsumptions: 43026
% 
% Binary resolution: 64743
% Factoring: 236
% Forward superposition: 3752
% Backward superposition: 725
% Equality resolution: 21
% 
% Split clauses: 5394
% Split components: 11730
% SAT solver clauses: 5744
% SAT solver unit clauses: 25
% SAT solver binary clauses: 368
% 
% Sat splits: 5394
% Sat splitting refutations: 27
% 
% Memory used [KB]: 24690
% Time elapsed: 1.478 s
% ------------------------------
% ------------------------------
% Success in time 13.24 s
